<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201110 08:33:32.302" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.891" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:32.900" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:34.084" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:32.890" endtime="20201110 08:33:34.084"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.087" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:33:34.085" endtime="20201110 08:33:34.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.889" endtime="20201110 08:33:34.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:34.090" endtime="20201110 08:33:34.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.089" endtime="20201110 08:33:34.334"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.348" endtime="20201110 08:33:34.362"></status>
</kw>
<msg timestamp="20201110 08:33:34.362" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.346" endtime="20201110 08:33:34.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.365" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.363" endtime="20201110 08:33:34.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.368" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:34.366" endtime="20201110 08:33:34.369"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:34.343" endtime="20201110 08:33:34.369"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:34.341" endtime="20201110 08:33:34.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.339" endtime="20201110 08:33:34.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:34.374" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:34.373" endtime="20201110 08:33:34.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.371" endtime="20201110 08:33:34.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.339" endtime="20201110 08:33:34.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.338" endtime="20201110 08:33:34.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.376" endtime="20201110 08:33:34.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.336" endtime="20201110 08:33:34.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.378" endtime="20201110 08:33:34.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.335" endtime="20201110 08:33:34.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.887" endtime="20201110 08:33:34.381"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:34.387" endtime="20201110 08:33:34.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.385" endtime="20201110 08:33:34.407"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.421" endtime="20201110 08:33:34.435"></status>
</kw>
<msg timestamp="20201110 08:33:34.436" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.419" endtime="20201110 08:33:34.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.438" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.437" endtime="20201110 08:33:34.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.441" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:34.439" endtime="20201110 08:33:34.441"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:34.417" endtime="20201110 08:33:34.442"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:34.414" endtime="20201110 08:33:34.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.412" endtime="20201110 08:33:34.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:34.447" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:34.446" endtime="20201110 08:33:34.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.444" endtime="20201110 08:33:34.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.411" endtime="20201110 08:33:34.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.410" endtime="20201110 08:33:34.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.448" endtime="20201110 08:33:34.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.409" endtime="20201110 08:33:34.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.407" endtime="20201110 08:33:34.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.384" endtime="20201110 08:33:34.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.457" endtime="20201110 08:33:34.468"></status>
</kw>
<msg timestamp="20201110 08:33:34.468" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.456" endtime="20201110 08:33:34.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.471" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.469" endtime="20201110 08:33:34.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.472" endtime="20201110 08:33:34.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.453" endtime="20201110 08:33:34.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.452" endtime="20201110 08:33:34.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.478" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:33:34.477" endtime="20201110 08:33:34.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.480" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201110 08:33:34.479" endtime="20201110 08:33:34.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.475" endtime="20201110 08:33:34.481"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:34.381" endtime="20201110 08:33:34.482" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:32.412" endtime="20201110 08:33:34.484"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.541" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:34.549" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:35.806" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:34.539" endtime="20201110 08:33:35.807"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.812" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:33:35.810" endtime="20201110 08:33:35.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.538" endtime="20201110 08:33:35.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.819" endtime="20201110 08:33:36.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.816" endtime="20201110 08:33:36.108"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.120" endtime="20201110 08:33:36.135"></status>
</kw>
<msg timestamp="20201110 08:33:36.135" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.119" endtime="20201110 08:33:36.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.138" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.136" endtime="20201110 08:33:36.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.141" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:36.139" endtime="20201110 08:33:36.142"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:36.116" endtime="20201110 08:33:36.143"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:36.114" endtime="20201110 08:33:36.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.113" endtime="20201110 08:33:36.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:36.151" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:36.150" endtime="20201110 08:33:36.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.148" endtime="20201110 08:33:36.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.112" endtime="20201110 08:33:36.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.111" endtime="20201110 08:33:36.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.156" endtime="20201110 08:33:36.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.110" endtime="20201110 08:33:36.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.159" endtime="20201110 08:33:36.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.109" endtime="20201110 08:33:36.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.537" endtime="20201110 08:33:36.165"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.171" endtime="20201110 08:33:36.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.169" endtime="20201110 08:33:36.192"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.205" endtime="20201110 08:33:36.220"></status>
</kw>
<msg timestamp="20201110 08:33:36.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.203" endtime="20201110 08:33:36.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.223" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.221" endtime="20201110 08:33:36.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.226" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:36.224" endtime="20201110 08:33:36.226"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:36.201" endtime="20201110 08:33:36.227"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:36.198" endtime="20201110 08:33:36.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.197" endtime="20201110 08:33:36.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:36.232" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:36.230" endtime="20201110 08:33:36.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.228" endtime="20201110 08:33:36.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.196" endtime="20201110 08:33:36.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.196" endtime="20201110 08:33:36.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.234" endtime="20201110 08:33:36.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.194" endtime="20201110 08:33:36.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.193" endtime="20201110 08:33:36.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.168" endtime="20201110 08:33:36.237"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:33:36.238" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.246" endtime="20201110 08:33:36.255"></status>
</kw>
<msg timestamp="20201110 08:33:36.256" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.244" endtime="20201110 08:33:36.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.258" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.257" endtime="20201110 08:33:36.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.259" endtime="20201110 08:33:36.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.242" endtime="20201110 08:33:36.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.240" endtime="20201110 08:33:36.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.268" endtime="20201110 08:33:36.560"></status>
</kw>
<msg timestamp="20201110 08:33:36.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063929972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063930444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.267" endtime="20201110 08:33:36.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063929972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063930444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.565" endtime="20201110 08:33:36.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.573" endtime="20201110 08:33:36.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.264" endtime="20201110 08:33:36.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.262" endtime="20201110 08:33:36.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.581" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:36.579" endtime="20201110 08:33:36.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.586" level="INFO">VALUE: [{'time': 0.063929972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063930444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063942833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2389000000001538e-05, 'source_diff': 1.2389000000001538e-05}, {'time': 0.063943306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.063951778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999995483e-06, 'source_diff': 8.471999999995483e-06}, {'time': 0.06395225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063960847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.063961319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063968639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999991222e-06, 'source_diff': 7.319999999991222e-06}, {'time': 0.063969125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.063975444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.063975917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999869561e-07, 'source_diff': 4.729999999869561e-07}, {'time': 0.063989722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805000000005618e-05, 'source_diff': 1.3805000000005618e-05}, {'time': 0.063990208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.064002014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1805999999989214e-05, 'source_diff': 1.1805999999989214e-05}, {'time': 0.0640025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.064006806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.064007292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.064021778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4486000000007992e-05, 'source_diff': 1.4486000000007992e-05}, {'time': 0.06402225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064032736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.064033208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.064044528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.13200000000091e-05, 'source_diff': 1.13200000000091e-05}, {'time': 0.064045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064058653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.365299999998848e-05, 'source_diff': 1.365299999998848e-05}, {'time': 0.064059125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064065444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.064065917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.064074069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.151999999997384e-06, 'source_diff': 8.151999999997384e-06}, {'time': 0.064074542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.064088528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000007492e-05, 'source_diff': 1.3986000000007492e-05}, {'time': 0.064089014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.064102056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3042000000004772e-05, 'source_diff': 1.3042000000004772e-05}, {'time': 0.064102528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064107278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.064107764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.064114403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.064114889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.064128694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805000000005618e-05, 'source_diff': 1.3805000000005618e-05}, {'time': 0.064129181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999934649e-07, 'source_diff': 4.869999999934649e-07}, {'time': 0.064138167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.064138639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064149292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.064149764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064154097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999995257e-06, 'source_diff': 4.332999999995257e-06}, {'time': 0.064154569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064165875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1306000000002592e-05, 'source_diff': 1.1306000000002592e-05}, {'time': 0.064166347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064176847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.064177319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064182639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3200000000031e-06, 'source_diff': 5.3200000000031e-06}, {'time': 0.064183111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064187431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.064187903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064196556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.652999999997357e-06, 'source_diff': 8.652999999997357e-06}, {'time': 0.064197028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064206167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999991348e-06, 'source_diff': 9.138999999991348e-06}, {'time': 0.064206653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.064221306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4653000000003358e-05, 'source_diff': 1.4653000000003358e-05}, {'time': 0.064221778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.064233583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1805000000003618e-05, 'source_diff': 1.1805000000003618e-05}, {'time': 0.064234069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.064239556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486999999998465e-06, 'source_diff': 5.486999999998465e-06}, {'time': 0.064240028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064253514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3485999999993115e-05, 'source_diff': 1.3485999999993115e-05}, {'time': 0.064253986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064258486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5000000000045e-06, 'source_diff': 4.5000000000045e-06}, {'time': 0.064258958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064272431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472999999999957e-05, 'source_diff': 1.3472999999999957e-05}, {'time': 0.064272903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064285056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.215299999998698e-05, 'source_diff': 1.215299999998698e-05}, {'time': 0.064285528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064299514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000007492e-05, 'source_diff': 1.3986000000007492e-05}, {'time': 0.064299986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064307319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.064307792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.064321097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.330499999999124e-05, 'source_diff': 1.330499999999124e-05}, {'time': 0.064321569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064327556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.986999999998965e-06, 'source_diff': 5.986999999998965e-06}, {'time': 0.064328042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.064340264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2221999999992295e-05, 'source_diff': 1.2221999999992295e-05}, {'time': 0.064340736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064349014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.064349486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064356597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000004086e-06, 'source_diff': 7.111000000004086e-06}, {'time': 0.064357083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.064368056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0973000000011335e-05, 'source_diff': 1.0973000000011335e-05}, {'time': 0.064368542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.064382694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152000000003384e-05, 'source_diff': 1.4152000000003384e-05}, {'time': 0.064383167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.064396319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3151999999988506e-05, 'source_diff': 1.3151999999988506e-05}, {'time': 0.064396792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.064407361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0569000000001938e-05, 'source_diff': 1.0569000000001938e-05}, {'time': 0.064407833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064415917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.08400000000542e-06, 'source_diff': 8.08400000000542e-06}, {'time': 0.064416389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064425028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999990848e-06, 'source_diff': 8.638999999990848e-06}, {'time': 0.0644255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064434819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000007627e-06, 'source_diff': 9.319000000007627e-06}, {'time': 0.064435292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:36.582" endtime="20201110 08:33:36.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.577" endtime="20201110 08:33:36.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:36.613" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 1.2389000000001538e-05, 4.7300000000083386e-07, 8.471999999995483e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.319999999991222...</msg>
<status status="PASS" starttime="20201110 08:33:36.589" endtime="20201110 08:33:36.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.617" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:36.616" endtime="20201110 08:33:36.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.621" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 1.2389000000001538e-05, 4.7300000000083386e-07, 8.471999999995483e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.319999999991222e-06, 4.86000000007869e-07, 6.3190000000046265e-06, 4.729999999869561e-07, 1.3805000000005618e-05, 4.86000000007869e-07, 1.1805999999989214e-05, 4.86000000007869e-07, 4.305999999995591e-06, 4.859999999939912e-07, 1.4486000000007992e-05, 4.720000000013602e-07, 1.0486000000003992e-05, 4.7199999998748243e-07, 1.13200000000091e-05, 4.720000000013602e-07, 1.365299999998848e-05, 4.720000000013602e-07, 6.3190000000046265e-06, 4.7300000000083386e-07, 8.151999999997384e-06, 4.7300000000083386e-07, 1.3986000000007492e-05, 4.859999999939912e-07, 1.3042000000004772e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.859999999939912e-07, 6.639000000002726e-06, 4.859999999939912e-07, 1.3805000000005618e-05, 4.869999999934649e-07, 8.986000000002492e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 4.332999999995257e-06, 4.720000000013602e-07, 1.1306000000002592e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 5.3200000000031e-06, 4.720000000013602e-07, 4.3200000000021e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 9.138999999991348e-06, 4.86000000007869e-07, 1.4653000000003358e-05, 4.7199999998748243e-07, 1.1805000000003618e-05, 4.86000000007869e-07, 5.486999999998465e-06, 4.720000000013602e-07, 1.3485999999993115e-05, 4.720000000013602e-07, 4.5000000000045e-06, 4.720000000013602e-07, 1.3472999999999957e-05, 4.720000000013602e-07, 1.215299999998698e-05, 4.720000000013602e-07, 1.3986000000007492e-05, 4.720000000013602e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 1.330499999999124e-05, 4.720000000013602e-07, 5.986999999998965e-06, 4.86000000007869e-07, 1.2221999999992295e-05, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 7.111000000004086e-06, 4.859999999939912e-07, 1.0973000000011335e-05, 4.859999999939912e-07, 1.4152000000003384e-05, 4.7300000000083386e-07, 1.3151999999988506e-05, 4.7300000000083386e-07, 1.0569000000001938e-05, 4.720000000013602e-07, 8.08400000000542e-06, 4.720000000013602e-07, 8.638999999990848e-06, 4.720000000013602e-07, 9.319000000007627e-06, 4.7300000000083386e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.720000000013602e-07, 1.2389000000001538e-05, 4.7300000000083386e-07, 8.471999999995483e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.319999999991222e-06, 4.86000000007869e-07, 6.3190000000046265e-06, 4.729999999869561e-07, 1.3805000000005618e-05, 4.86000000007869e-07, 1.1805999999989214e-05, 4.86000000007869e-07, 4.305999999995591e-06, 4.859999999939912e-07, 1.4486000000007992e-05, 4.720000000013602e-07, 1.0486000000003992e-05, 4.7199999998748243e-07, 1.13200000000091e-05, 4.720000000013602e-07, 1.365299999998848e-05, 4.720000000013602e-07, 6.3190000000046265e-06, 4.7300000000083386e-07, 8.151999999997384e-06, 4.7300000000083386e-07, 1.3986000000007492e-05, 4.859999999939912e-07, 1.3042000000004772e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.859999999939912e-07, 6.639000000002726e-06, 4.859999999939912e-07, 1.3805000000005618e-05, 4.869999999934649e-07, 8.986000000002492e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 4.332999999995257e-06, 4.720000000013602e-07, 1.1306000000002592e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 5.3200000000031e-06, 4.720000000013602e-07, 4.3200000000021e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 9.138999999991348e-06, 4.86000000007869e-07, 1.4653000000003358e-05, 4.7199999998748243e-07, 1.1805000000003618e-05, 4.86000000007869e-07, 5.486999999998465e-06, 4.720000000013602e-07, 1.3485999999993115e-05, 4.720000000013602e-07, 4.5000000000045e-06, 4.720000000013602e-07, 1.3472999999999957e-05, 4.720000000013602e-07, 1.215299999998698e-05, 4.720000000013602e-07, 1.3986000000007492e-05, 4.720000000013602e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 1.330499999999124e-05, 4.720000000013602e-07, 5.986999999998965e-06, 4.86000000007869e-07, 1.2221999999992295e-05, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 7.111000000004086e-06, 4.859999999939912e-07, 1.0973000000011335e-05, 4.859999999939912e-07, 1.4152000000003384e-05, 4.7300000000083386e-07, 1.3151999999988506e-05, 4.7300000000083386e-07, 1.0569000000001938e-05, 4.720000000013602e-07, 8.08400000000542e-06, 4.720000000013602e-07, 8.638999999990848e-06, 4.720000000013602e-07, 9.319000000007627e-06, 4.7300000000083386e-07], 'sourcetime': [0.063929972, 0.063930444, 0.063942833, 0.063943306, 0.063951778, 0.06395225, 0.063960847, 0.063961319, 0.063968639, 0.063969125, 0.063975444, 0.063975917, 0.063989722, 0.063990208, 0.064002014, 0.0640025, 0.064006806, 0.064007292, 0.064021778, 0.06402225, 0.064032736, 0.064033208, 0.064044528, 0.064045, 0.064058653, 0.064059125, 0.064065444, 0.064065917, 0.064074069, 0.064074542, 0.064088528, 0.064089014, 0.064102056, 0.064102528, 0.064107278, 0.064107764, 0.064114403, 0.064114889, 0.064128694, 0.064129181, 0.064138167, 0.064138639, 0.064149292, 0.064149764, 0.064154097, 0.064154569, 0.064165875, 0.064166347, 0.064176847, 0.064177319, 0.064182639, 0.064183111, 0.064187431, 0.064187903, 0.064196556, 0.064197028, 0.064206167, 0.064206653, 0.064221306, 0.064221778, 0.064233583, 0.064234069, 0.064239556, 0.064240028, 0.064253514, 0.064253986, 0.064258486, 0.064258958, 0.064272431, 0.064272903, 0.064285056, 0.064285528, 0.064299514, 0.064299986, 0.064307319, 0.064307792, 0.064321097, 0.064321569, 0.064327556, 0.064328042, 0.064340264, 0.064340736, 0.064349014, 0.064349486, 0.064356597, 0.064357083, 0.064368056, 0.064368542, 0.064382694, 0.064383167, 0.064396319, 0.064396792, 0.064407361, 0.064407833, 0.064415917, 0.064416389, 0.064425028, 0.0644255, 0.064434819, 0.064435292]}</msg>
<status status="PASS" starttime="20201110 08:33:36.618" endtime="20201110 08:33:36.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.614" endtime="20201110 08:33:36.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.627" level="INFO">${RESULT} = [{'time': 0.063930444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.063943306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:36.624" endtime="20201110 08:33:36.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:36.641" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.729999999869561e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4...</msg>
<status status="PASS" starttime="20201110 08:33:36.628" endtime="20201110 08:33:36.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.646" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:36.645" endtime="20201110 08:33:36.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.648" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.729999999869561e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:33:36.647" endtime="20201110 08:33:36.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.642" endtime="20201110 08:33:36.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.651" endtime="20201110 08:33:36.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.655" endtime="20201110 08:33:36.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.654" endtime="20201110 08:33:36.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.650" endtime="20201110 08:33:36.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.239" endtime="20201110 08:33:36.676"></status>
</kw>
<msg timestamp="20201110 08:33:36.676" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.684" endtime="20201110 08:33:36.695"></status>
</kw>
<msg timestamp="20201110 08:33:36.696" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.682" endtime="20201110 08:33:36.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.702" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.698" endtime="20201110 08:33:36.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.706" endtime="20201110 08:33:36.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.680" endtime="20201110 08:33:36.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.678" endtime="20201110 08:33:36.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.737" endtime="20201110 08:33:37.039"></status>
</kw>
<msg timestamp="20201110 08:33:37.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018963194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018963667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.733" endtime="20201110 08:33:37.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018963194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018963667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.044" endtime="20201110 08:33:37.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.056" endtime="20201110 08:33:37.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.721" endtime="20201110 08:33:37.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.717" endtime="20201110 08:33:37.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.067" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:37.065" endtime="20201110 08:33:37.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.074" level="INFO">VALUE: [{'time': 0.018963194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018963667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018975486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1818999999999719e-05, 'source_diff': 1.1818999999999719e-05}, {'time': 0.018975958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018989347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3388999999999068e-05, 'source_diff': 1.3388999999999068e-05}, {'time': 0.018989819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018994264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.018994736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019007208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.019007681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019013986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.019014472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019018778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.019019264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019027903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.019028389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019033361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.019033847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0190415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.019041972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019056278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4305999999998653e-05, 'source_diff': 1.4305999999998653e-05}, {'time': 0.019056764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019062764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.019063236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019073375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.019073847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019085833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1985999999998553e-05, 'source_diff': 1.1985999999998553e-05}, {'time': 0.019086306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019099792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.019100264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019112792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.019113264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019119389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.019119861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019131667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1806000000003092e-05, 'source_diff': 1.1806000000003092e-05}, {'time': 0.019132139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019139958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.019140444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019146917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.019147403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019157556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.019158028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019170347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319000000000219e-05, 'source_diff': 1.2319000000000219e-05}, {'time': 0.019170819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019175806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.987000000001435e-06, 'source_diff': 4.987000000001435e-06}, {'time': 0.019176278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019189431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3152999999998388e-05, 'source_diff': 1.3152999999998388e-05}, {'time': 0.019189903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019194389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.019194861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019209528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4666999999999458e-05, 'source_diff': 1.4666999999999458e-05}, {'time': 0.01921, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019221972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.019222444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019226931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486999999997465e-06, 'source_diff': 4.486999999997465e-06}, {'time': 0.019227403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019232556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.019233028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019247528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4500000000000624e-05, 'source_diff': 1.4500000000000624e-05}, {'time': 0.019248, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019252806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.019253278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019260597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.019261083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019274056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2973000000002927e-05, 'source_diff': 1.2973000000002927e-05}, {'time': 0.019274542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019284514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.019285, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019289125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.019289597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019302083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2486000000002523e-05, 'source_diff': 1.2486000000002523e-05}, {'time': 0.019302556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019308056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.019308528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019320014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.019320486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019334958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4471999999998014e-05, 'source_diff': 1.4471999999998014e-05}, {'time': 0.019335444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019349417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3973000000000457e-05, 'source_diff': 1.3973000000000457e-05}, {'time': 0.019349903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019360875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0971999999997983e-05, 'source_diff': 1.0971999999997983e-05}, {'time': 0.019361361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019369694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.019370167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019375139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.019375611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019386931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1319999999998692e-05, 'source_diff': 1.1319999999998692e-05}, {'time': 0.019387403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019398222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999998719e-05, 'source_diff': 1.0818999999998719e-05}, {'time': 0.019398694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019410681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1986999999998027e-05, 'source_diff': 1.1986999999998027e-05}, {'time': 0.019411153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019416306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.019416778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019430764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.019431236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019436556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.019437042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019450847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.380499999999868e-05, 'source_diff': 1.380499999999868e-05}, {'time': 0.019451333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:37.069" endtime="20201110 08:33:37.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.061" endtime="20201110 08:33:37.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:37.100" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7300000000083386e-07, 1.1818999999999719e-05, 4.720000000013602e-07, 1.3388999999999068e-05, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 1.2471999999999...</msg>
<status status="PASS" starttime="20201110 08:33:37.076" endtime="20201110 08:33:37.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.105" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:37.104" endtime="20201110 08:33:37.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.109" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 1.1818999999999719e-05, 4.720000000013602e-07, 1.3388999999999068e-05, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 1.2471999999999483e-05, 4.729999999973644e-07, 6.305000000001587e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.860000000009301e-07, 8.638999999997787e-06, 4.860000000009301e-07, 4.971999999998922e-06, 4.860000000009301e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.4305999999998653e-05, 4.860000000009301e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 1.1985999999998553e-05, 4.7300000000083386e-07, 1.3486000000000054e-05, 4.7199999999789077e-07, 1.2528000000001233e-05, 4.720000000013602e-07, 6.124999999999187e-06, 4.7199999999789077e-07, 1.1806000000003092e-05, 4.7199999999789077e-07, 7.818999999999188e-06, 4.860000000009301e-07, 6.4729999999998955e-06, 4.860000000009301e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 1.2319000000000219e-05, 4.7199999999789077e-07, 4.987000000001435e-06, 4.720000000013602e-07, 1.3152999999998388e-05, 4.720000000013602e-07, 4.485999999997992e-06, 4.720000000013602e-07, 1.4666999999999458e-05, 4.720000000013602e-07, 1.1971999999998983e-05, 4.720000000013602e-07, 4.486999999997465e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.4500000000000624e-05, 4.720000000013602e-07, 4.805999999999561e-06, 4.7199999999789077e-07, 7.319000000002157e-06, 4.859999999974607e-07, 1.2973000000002927e-05, 4.859999999974607e-07, 9.972000000000453e-06, 4.860000000009301e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 1.2486000000002523e-05, 4.729999999973644e-07, 5.500000000002031e-06, 4.7199999999789077e-07, 1.1486000000001523e-05, 4.720000000013602e-07, 1.4471999999998014e-05, 4.860000000009301e-07, 1.3973000000000457e-05, 4.860000000009301e-07, 1.0971999999997983e-05, 4.860000000009301e-07, 8.332999999999258e-06, 4.7300000000083386e-07, 4.971999999998922e-06, 4.720000000013602e-07, 1.1319999999998692e-05, 4.720000000013602e-07, 1.0818999999998719e-05, 4.720000000013602e-07, 1.1986999999998027e-05, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.3986000000000554e-05, 4.720000000013602e-07, 5.319999999999631e-06, 4.860000000009301e-07, 1.380499999999868e-05, 4.860000000009301e-07], 'eventdiff': [0, 4.7300000000083386e-07, 1.1818999999999719e-05, 4.720000000013602e-07, 1.3388999999999068e-05, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 1.2471999999999483e-05, 4.729999999973644e-07, 6.305000000001587e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.860000000009301e-07, 8.638999999997787e-06, 4.860000000009301e-07, 4.971999999998922e-06, 4.860000000009301e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.4305999999998653e-05, 4.860000000009301e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 1.1985999999998553e-05, 4.7300000000083386e-07, 1.3486000000000054e-05, 4.7199999999789077e-07, 1.2528000000001233e-05, 4.720000000013602e-07, 6.124999999999187e-06, 4.7199999999789077e-07, 1.1806000000003092e-05, 4.7199999999789077e-07, 7.818999999999188e-06, 4.860000000009301e-07, 6.4729999999998955e-06, 4.860000000009301e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 1.2319000000000219e-05, 4.7199999999789077e-07, 4.987000000001435e-06, 4.720000000013602e-07, 1.3152999999998388e-05, 4.720000000013602e-07, 4.485999999997992e-06, 4.720000000013602e-07, 1.4666999999999458e-05, 4.720000000013602e-07, 1.1971999999998983e-05, 4.720000000013602e-07, 4.486999999997465e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.4500000000000624e-05, 4.720000000013602e-07, 4.805999999999561e-06, 4.7199999999789077e-07, 7.319000000002157e-06, 4.859999999974607e-07, 1.2973000000002927e-05, 4.859999999974607e-07, 9.972000000000453e-06, 4.860000000009301e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 1.2486000000002523e-05, 4.729999999973644e-07, 5.500000000002031e-06, 4.7199999999789077e-07, 1.1486000000001523e-05, 4.720000000013602e-07, 1.4471999999998014e-05, 4.860000000009301e-07, 1.3973000000000457e-05, 4.860000000009301e-07, 1.0971999999997983e-05, 4.860000000009301e-07, 8.332999999999258e-06, 4.7300000000083386e-07, 4.971999999998922e-06, 4.720000000013602e-07, 1.1319999999998692e-05, 4.720000000013602e-07, 1.0818999999998719e-05, 4.720000000013602e-07, 1.1986999999998027e-05, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.3986000000000554e-05, 4.720000000013602e-07, 5.319999999999631e-06, 4.860000000009301e-07, 1.380499999999868e-05, 4.860000000009301e-07], 'sourcetime': [0.018963194, 0.018963667, 0.018975486, 0.018975958, 0.018989347, 0.018989819, 0.018994264, 0.018994736, 0.019007208, 0.019007681, 0.019013986, 0.019014472, 0.019018778, 0.019019264, 0.019027903, 0.019028389, 0.019033361, 0.019033847, 0.0190415, 0.019041972, 0.019056278, 0.019056764, 0.019062764, 0.019063236, 0.019073375, 0.019073847, 0.019085833, 0.019086306, 0.019099792, 0.019100264, 0.019112792, 0.019113264, 0.019119389, 0.019119861, 0.019131667, 0.019132139, 0.019139958, 0.019140444, 0.019146917, 0.019147403, 0.019157556, 0.019158028, 0.019170347, 0.019170819, 0.019175806, 0.019176278, 0.019189431, 0.019189903, 0.019194389, 0.019194861, 0.019209528, 0.01921, 0.019221972, 0.019222444, 0.019226931, 0.019227403, 0.019232556, 0.019233028, 0.019247528, 0.019248, 0.019252806, 0.019253278, 0.019260597, 0.019261083, 0.019274056, 0.019274542, 0.019284514, 0.019285, 0.019289125, 0.019289597, 0.019302083, 0.019302556, 0.019308056, 0.019308528, 0.019320014, 0.019320486, 0.019334958, 0.019335444, 0.019349417, 0.019349903, 0.019360875, 0.019361361, 0.019369694, 0.019370167, 0.019375139, 0.019375611, 0.019386931, 0.019387403, 0.019398222, 0.019398694, 0.019410681, 0.019411153, 0.019416306, 0.019416778, 0.019430764, 0.019431236, 0.019436556, 0.019437042, 0.019450847, 0.019451333]}</msg>
<status status="PASS" starttime="20201110 08:33:37.106" endtime="20201110 08:33:37.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.101" endtime="20201110 08:33:37.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.115" level="INFO">${RESULT} = [{'time': 0.018963667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018975958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:37.111" endtime="20201110 08:33:37.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:37.129" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07...</msg>
<status status="PASS" starttime="20201110 08:33:37.116" endtime="20201110 08:33:37.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.133" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:37.132" endtime="20201110 08:33:37.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.136" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201110 08:33:37.134" endtime="20201110 08:33:37.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.130" endtime="20201110 08:33:37.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.139" endtime="20201110 08:33:37.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.143" endtime="20201110 08:33:37.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.141" endtime="20201110 08:33:37.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.137" endtime="20201110 08:33:37.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.677" endtime="20201110 08:33:37.164"></status>
</kw>
<msg timestamp="20201110 08:33:37.164" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.172" endtime="20201110 08:33:37.183"></status>
</kw>
<msg timestamp="20201110 08:33:37.184" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.171" endtime="20201110 08:33:37.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.185" endtime="20201110 08:33:37.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.187" endtime="20201110 08:33:37.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.168" endtime="20201110 08:33:37.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.166" endtime="20201110 08:33:37.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.197" endtime="20201110 08:33:37.481"></status>
</kw>
<msg timestamp="20201110 08:33:37.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019011028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0190115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:37.195" endtime="20201110 08:33:37.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019011028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0190115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:37.485" endtime="20201110 08:33:37.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.494" endtime="20201110 08:33:37.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.192" endtime="20201110 08:33:37.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.190" endtime="20201110 08:33:37.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.501" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:37.500" endtime="20201110 08:33:37.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.506" level="INFO">VALUE: [{'time': 0.019011028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0190115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019022889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1389000000000538e-05, 'source_diff': 1.1389000000000538e-05}, {'time': 0.019023361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019031944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.019032417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01904175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.019042222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019052694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0471999999997483e-05, 'source_diff': 1.0471999999997483e-05}, {'time': 0.019053181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019065653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.019066139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019073278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.019073764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019086069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2305000000000649e-05, 'source_diff': 1.2305000000000649e-05}, {'time': 0.019086556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019090681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.019091153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019105653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4500000000000624e-05, 'source_diff': 1.4500000000000624e-05}, {'time': 0.019106125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019112278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.01911275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019121389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.019121875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019135181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3306000000001122e-05, 'source_diff': 1.3306000000001122e-05}, {'time': 0.019135667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019144639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.019145125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019151597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.019152083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019164417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2333999999999262e-05, 'source_diff': 1.2333999999999262e-05}, {'time': 0.019164889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019171208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.019171681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019183, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1318999999999219e-05, 'source_diff': 1.1318999999999219e-05}, {'time': 0.019183472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019188778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.01918925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019200736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.019201208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019213042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1833999999998762e-05, 'source_diff': 1.1833999999998762e-05}, {'time': 0.019213514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019224486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0971999999997983e-05, 'source_diff': 1.0971999999997983e-05}, {'time': 0.019224958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019234444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.019234917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019246736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1818999999999719e-05, 'source_diff': 1.1818999999999719e-05}, {'time': 0.019247222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019260208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2985999999999553e-05, 'source_diff': 1.2985999999999553e-05}, {'time': 0.019260681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019274653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3971999999997514e-05, 'source_diff': 1.3971999999997514e-05}, {'time': 0.019275139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019284972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.019285444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019299264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3820000000001192e-05, 'source_diff': 1.3820000000001192e-05}, {'time': 0.019299736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019307708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.019308181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019318681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000000093e-05, 'source_diff': 1.0500000000000093e-05}, {'time': 0.019319153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019326972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819000000002657e-06, 'source_diff': 7.819000000002657e-06}, {'time': 0.019327444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019341083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.019341556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019351708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0151999999999384e-05, 'source_diff': 1.0151999999999384e-05}, {'time': 0.019352181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019356833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.019357319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019361625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.019362111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019369264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.019369736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019380042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.019380528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019395014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4485999999997584e-05, 'source_diff': 1.4485999999997584e-05}, {'time': 0.019395486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019407639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2153000000000858e-05, 'source_diff': 1.2153000000000858e-05}, {'time': 0.019408111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019416944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.019417417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019427722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305000000002118e-05, 'source_diff': 1.0305000000002118e-05}, {'time': 0.019428194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019438847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.019439319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019448306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986999999998496e-06, 'source_diff': 8.986999999998496e-06}, {'time': 0.019448778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019462264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.019462736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019472083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.019472556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019478847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291000000002017e-06, 'source_diff': 6.291000000002017e-06}, {'time': 0.019479319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019486472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.019486958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019491931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.973000000001865e-06, 'source_diff': 4.973000000001865e-06}, {'time': 0.019492417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019506722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.430499999999918e-05, 'source_diff': 1.430499999999918e-05}, {'time': 0.019507208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019515861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.652999999997357e-06, 'source_diff': 8.652999999997357e-06}, {'time': 0.019516333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:37.502" endtime="20201110 08:33:37.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.498" endtime="20201110 08:33:37.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:37.534" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 1.1389000000000538e-05, 4.7199999999789077e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.04719999999974...</msg>
<status status="PASS" starttime="20201110 08:33:37.509" endtime="20201110 08:33:37.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.538" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:37.537" endtime="20201110 08:33:37.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.543" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 1.1389000000000538e-05, 4.7199999999789077e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.0471999999997483e-05, 4.870000000004038e-07, 1.2471999999999483e-05, 4.860000000009301e-07, 7.138999999999757e-06, 4.860000000009301e-07, 1.2305000000000649e-05, 4.870000000004038e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 1.4500000000000624e-05, 4.720000000013602e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 8.638999999997787e-06, 4.860000000009301e-07, 1.3306000000001122e-05, 4.859999999974607e-07, 8.972000000002922e-06, 4.859999999974607e-07, 6.472000000000422e-06, 4.860000000009301e-07, 1.2333999999999262e-05, 4.720000000013602e-07, 6.318999999997688e-06, 4.7300000000083386e-07, 1.1318999999999219e-05, 4.720000000013602e-07, 5.306000000000061e-06, 4.720000000013602e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 1.1833999999998762e-05, 4.720000000013602e-07, 1.0971999999997983e-05, 4.720000000013602e-07, 9.485999999999523e-06, 4.7300000000083386e-07, 1.1818999999999719e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 4.7300000000083386e-07, 1.3971999999997514e-05, 4.860000000009301e-07, 9.833000000000758e-06, 4.7199999999789077e-07, 1.3820000000001192e-05, 4.720000000013602e-07, 7.971999999998453e-06, 4.7300000000083386e-07, 1.0500000000000093e-05, 4.7199999999789077e-07, 7.819000000002657e-06, 4.7199999999789077e-07, 1.3638999999999318e-05, 4.7300000000083386e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 4.652000000000822e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.860000000009301e-07, 7.1529999999993266e-06, 4.7199999999789077e-07, 1.0306000000001592e-05, 4.860000000009301e-07, 1.4485999999997584e-05, 4.720000000013602e-07, 1.2153000000000858e-05, 4.7199999999789077e-07, 8.832999999999758e-06, 4.7300000000083386e-07, 1.0305000000002118e-05, 4.7199999999789077e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.986999999998496e-06, 4.720000000013602e-07, 1.3486000000000054e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.729999999973644e-07, 6.291000000002017e-06, 4.7199999999789077e-07, 7.153000000002796e-06, 4.859999999974607e-07, 4.973000000001865e-06, 4.860000000009301e-07, 1.430499999999918e-05, 4.860000000009301e-07, 8.652999999997357e-06, 4.720000000013602e-07], 'eventdiff': [0, 4.720000000013602e-07, 1.1389000000000538e-05, 4.7199999999789077e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.0471999999997483e-05, 4.870000000004038e-07, 1.2471999999999483e-05, 4.860000000009301e-07, 7.138999999999757e-06, 4.860000000009301e-07, 1.2305000000000649e-05, 4.870000000004038e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 1.4500000000000624e-05, 4.720000000013602e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 8.638999999997787e-06, 4.860000000009301e-07, 1.3306000000001122e-05, 4.859999999974607e-07, 8.972000000002922e-06, 4.859999999974607e-07, 6.472000000000422e-06, 4.860000000009301e-07, 1.2333999999999262e-05, 4.720000000013602e-07, 6.318999999997688e-06, 4.7300000000083386e-07, 1.1318999999999219e-05, 4.720000000013602e-07, 5.306000000000061e-06, 4.720000000013602e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 1.1833999999998762e-05, 4.720000000013602e-07, 1.0971999999997983e-05, 4.720000000013602e-07, 9.485999999999523e-06, 4.7300000000083386e-07, 1.1818999999999719e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 4.7300000000083386e-07, 1.3971999999997514e-05, 4.860000000009301e-07, 9.833000000000758e-06, 4.7199999999789077e-07, 1.3820000000001192e-05, 4.720000000013602e-07, 7.971999999998453e-06, 4.7300000000083386e-07, 1.0500000000000093e-05, 4.7199999999789077e-07, 7.819000000002657e-06, 4.7199999999789077e-07, 1.3638999999999318e-05, 4.7300000000083386e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 4.652000000000822e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.860000000009301e-07, 7.1529999999993266e-06, 4.7199999999789077e-07, 1.0306000000001592e-05, 4.860000000009301e-07, 1.4485999999997584e-05, 4.720000000013602e-07, 1.2153000000000858e-05, 4.7199999999789077e-07, 8.832999999999758e-06, 4.7300000000083386e-07, 1.0305000000002118e-05, 4.7199999999789077e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.986999999998496e-06, 4.720000000013602e-07, 1.3486000000000054e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.729999999973644e-07, 6.291000000002017e-06, 4.7199999999789077e-07, 7.153000000002796e-06, 4.859999999974607e-07, 4.973000000001865e-06, 4.860000000009301e-07, 1.430499999999918e-05, 4.860000000009301e-07, 8.652999999997357e-06, 4.720000000013602e-07], 'sourcetime': [0.019011028, 0.0190115, 0.019022889, 0.019023361, 0.019031944, 0.019032417, 0.01904175, 0.019042222, 0.019052694, 0.019053181, 0.019065653, 0.019066139, 0.019073278, 0.019073764, 0.019086069, 0.019086556, 0.019090681, 0.019091153, 0.019105653, 0.019106125, 0.019112278, 0.01911275, 0.019121389, 0.019121875, 0.019135181, 0.019135667, 0.019144639, 0.019145125, 0.019151597, 0.019152083, 0.019164417, 0.019164889, 0.019171208, 0.019171681, 0.019183, 0.019183472, 0.019188778, 0.01918925, 0.019200736, 0.019201208, 0.019213042, 0.019213514, 0.019224486, 0.019224958, 0.019234444, 0.019234917, 0.019246736, 0.019247222, 0.019260208, 0.019260681, 0.019274653, 0.019275139, 0.019284972, 0.019285444, 0.019299264, 0.019299736, 0.019307708, 0.019308181, 0.019318681, 0.019319153, 0.019326972, 0.019327444, 0.019341083, 0.019341556, 0.019351708, 0.019352181, 0.019356833, 0.019357319, 0.019361625, 0.019362111, 0.019369264, 0.019369736, 0.019380042, 0.019380528, 0.019395014, 0.019395486, 0.019407639, 0.019408111, 0.019416944, 0.019417417, 0.019427722, 0.019428194, 0.019438847, 0.019439319, 0.019448306, 0.019448778, 0.019462264, 0.019462736, 0.019472083, 0.019472556, 0.019478847, 0.019479319, 0.019486472, 0.019486958, 0.019491931, 0.019492417, 0.019506722, 0.019507208, 0.019515861, 0.019516333]}</msg>
<status status="PASS" starttime="20201110 08:33:37.540" endtime="20201110 08:33:37.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.535" endtime="20201110 08:33:37.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.549" level="INFO">${RESULT} = [{'time': 0.0190115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019023361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:37.546" endtime="20201110 08:33:37.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:37.564" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-0...</msg>
<status status="PASS" starttime="20201110 08:33:37.550" endtime="20201110 08:33:37.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.569" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:37.567" endtime="20201110 08:33:37.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.571" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:33:37.570" endtime="20201110 08:33:37.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.565" endtime="20201110 08:33:37.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.575" endtime="20201110 08:33:37.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.578" endtime="20201110 08:33:37.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.577" endtime="20201110 08:33:37.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.573" endtime="20201110 08:33:37.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.165" endtime="20201110 08:33:37.599"></status>
</kw>
<msg timestamp="20201110 08:33:37.599" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.607" endtime="20201110 08:33:37.617"></status>
</kw>
<msg timestamp="20201110 08:33:37.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.605" endtime="20201110 08:33:37.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.620" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.619" endtime="20201110 08:33:37.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.622" endtime="20201110 08:33:37.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.603" endtime="20201110 08:33:37.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.601" endtime="20201110 08:33:37.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.631" endtime="20201110 08:33:37.915"></status>
</kw>
<msg timestamp="20201110 08:33:37.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018980347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018980833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.629" endtime="20201110 08:33:37.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018980347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018980833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.919" endtime="20201110 08:33:37.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.927" endtime="20201110 08:33:37.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.627" endtime="20201110 08:33:37.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.625" endtime="20201110 08:33:37.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.934" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:37.933" endtime="20201110 08:33:37.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.939" level="INFO">VALUE: [{'time': 0.018980347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018980833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018990333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}, {'time': 0.018990806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018997278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.01899775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019012083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.433299999999832e-05, 'source_diff': 1.433299999999832e-05}, {'time': 0.019012556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019019708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.151999999999853e-06, 'source_diff': 7.151999999999853e-06}, {'time': 0.019020181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019032819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2637999999998845e-05, 'source_diff': 1.2637999999998845e-05}, {'time': 0.019033292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019047111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.381899999999825e-05, 'source_diff': 1.381899999999825e-05}, {'time': 0.019047583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019056903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.019057375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019071861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4485999999997584e-05, 'source_diff': 1.4485999999997584e-05}, {'time': 0.019072347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019078819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.019079306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019088944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.637999999999314e-06, 'source_diff': 9.637999999999314e-06}, {'time': 0.019089431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.01909475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.019095222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019109875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652999999999888e-05, 'source_diff': 1.4652999999999888e-05}, {'time': 0.019110347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019120833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.019121306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019126806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.019127278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019138583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1304999999999649e-05, 'source_diff': 1.1304999999999649e-05}, {'time': 0.019139056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019144708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.019145181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019157333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2151999999997914e-05, 'source_diff': 1.2151999999997914e-05}, {'time': 0.019157806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019172292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.019172764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019183583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819000000002188e-05, 'source_diff': 1.0819000000002188e-05}, {'time': 0.019184056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019190042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.019190528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019204333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805000000002149e-05, 'source_diff': 1.3805000000002149e-05}, {'time': 0.019204819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019215958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1139000000000288e-05, 'source_diff': 1.1139000000000288e-05}, {'time': 0.019216444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019230083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.019230569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019242722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2153000000000858e-05, 'source_diff': 1.2153000000000858e-05}, {'time': 0.019243194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019252181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986999999998496e-06, 'source_diff': 8.986999999998496e-06}, {'time': 0.019252653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019257833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1799999999969926e-06, 'source_diff': 5.1799999999969926e-06}, {'time': 0.019258306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019262778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.01926325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019271736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.019272208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019279847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.019280319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019287639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.019288111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019302264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999999388e-05, 'source_diff': 1.4152999999999388e-05}, {'time': 0.019302736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019313722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0985999999997553e-05, 'source_diff': 1.0985999999997553e-05}, {'time': 0.019314208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019318583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.019319056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019324972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.915999999998173e-06, 'source_diff': 5.915999999998173e-06}, {'time': 0.019325458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019331597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.019332083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019345056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2972999999999457e-05, 'source_diff': 1.2972999999999457e-05}, {'time': 0.019345542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019359236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3693999999998124e-05, 'source_diff': 1.3693999999998124e-05}, {'time': 0.019359708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019368986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.019369458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019374944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486000000002461e-06, 'source_diff': 5.486000000002461e-06}, {'time': 0.019375417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019386903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.019387375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019397694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319000000001688e-05, 'source_diff': 1.0319000000001688e-05}, {'time': 0.019398167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019410833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2665999999997984e-05, 'source_diff': 1.2665999999997984e-05}, {'time': 0.019411306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019417125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.019417597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019426403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805999999996622e-06, 'source_diff': 8.805999999996622e-06}, {'time': 0.019426875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019439694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.019440181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019445819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.637999999998783e-06, 'source_diff': 5.637999999998783e-06}, {'time': 0.019446306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019458792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.019459264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019469403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.019469889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019474528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.019475014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:37.935" endtime="20201110 08:33:37.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.931" endtime="20201110 08:33:37.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:37.965" level="INFO">${debug-compressed} = {'source_diff': [0, 4.859999999974607e-07, 9.500000000002562e-06, 4.729999999973644e-07, 6.472000000000422e-06, 4.720000000013602e-07, 1.433299999999832e-05, 4.7300000000083386e-07, 7.151999999999853e...</msg>
<status status="PASS" starttime="20201110 08:33:37.942" endtime="20201110 08:33:37.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.969" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:37.968" endtime="20201110 08:33:37.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.973" level="INFO">VALUE: {'source_diff': [0, 4.859999999974607e-07, 9.500000000002562e-06, 4.729999999973644e-07, 6.472000000000422e-06, 4.720000000013602e-07, 1.433299999999832e-05, 4.7300000000083386e-07, 7.151999999999853e-06, 4.7300000000083386e-07, 1.2637999999998845e-05, 4.7300000000083386e-07, 1.381899999999825e-05, 4.720000000013602e-07, 9.320000000000161e-06, 4.720000000013602e-07, 1.4485999999997584e-05, 4.860000000009301e-07, 6.472000000000422e-06, 4.870000000004038e-07, 9.637999999999314e-06, 4.870000000004038e-07, 5.319000000000157e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 1.0486000000000523e-05, 4.7300000000083386e-07, 5.499999999998562e-06, 4.720000000013602e-07, 1.1304999999999649e-05, 4.7300000000083386e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 1.2151999999997914e-05, 4.7300000000083386e-07, 1.4486000000001054e-05, 4.7199999999789077e-07, 1.0819000000002188e-05, 4.7300000000083386e-07, 5.985999999999492e-06, 4.859999999974607e-07, 1.3805000000002149e-05, 4.860000000009301e-07, 1.1139000000000288e-05, 4.859999999974607e-07, 1.3638999999999318e-05, 4.860000000009301e-07, 1.2153000000000858e-05, 4.720000000013602e-07, 8.986999999998496e-06, 4.720000000013602e-07, 5.1799999999969926e-06, 4.7300000000083386e-07, 4.472000000001891e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 7.319999999998161e-06, 4.720000000013602e-07, 1.4152999999999388e-05, 4.720000000013602e-07, 1.0985999999997553e-05, 4.860000000009301e-07, 4.375000000000906e-06, 4.7300000000083386e-07, 5.915999999998173e-06, 4.860000000009301e-07, 6.1389999999987566e-06, 4.860000000009301e-07, 1.2972999999999457e-05, 4.860000000009301e-07, 1.3693999999998124e-05, 4.720000000013602e-07, 9.278000000001452e-06, 4.7199999999789077e-07, 5.486000000002461e-06, 4.729999999973644e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 1.0319000000001688e-05, 4.7300000000083386e-07, 1.2665999999997984e-05, 4.7300000000083386e-07, 5.819000000000657e-06, 4.720000000013602e-07, 8.805999999996622e-06, 4.720000000013602e-07, 1.2819000000000719e-05, 4.870000000004038e-07, 5.637999999998783e-06, 4.870000000004038e-07, 1.2485999999999053e-05, 4.720000000013602e-07, 1.0138999999999287e-05, 4.860000000009301e-07, 4.639000000000726e-06, 4.859999999974607e-07], 'eventdiff': [0, 4.859999999974607e-07, 9.500000000002562e-06, 4.729999999973644e-07, 6.472000000000422e-06, 4.720000000013602e-07, 1.433299999999832e-05, 4.7300000000083386e-07, 7.151999999999853e-06, 4.7300000000083386e-07, 1.2637999999998845e-05, 4.7300000000083386e-07, 1.381899999999825e-05, 4.720000000013602e-07, 9.320000000000161e-06, 4.720000000013602e-07, 1.4485999999997584e-05, 4.860000000009301e-07, 6.472000000000422e-06, 4.870000000004038e-07, 9.637999999999314e-06, 4.870000000004038e-07, 5.319000000000157e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 1.0486000000000523e-05, 4.7300000000083386e-07, 5.499999999998562e-06, 4.720000000013602e-07, 1.1304999999999649e-05, 4.7300000000083386e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 1.2151999999997914e-05, 4.7300000000083386e-07, 1.4486000000001054e-05, 4.7199999999789077e-07, 1.0819000000002188e-05, 4.7300000000083386e-07, 5.985999999999492e-06, 4.859999999974607e-07, 1.3805000000002149e-05, 4.860000000009301e-07, 1.1139000000000288e-05, 4.859999999974607e-07, 1.3638999999999318e-05, 4.860000000009301e-07, 1.2153000000000858e-05, 4.720000000013602e-07, 8.986999999998496e-06, 4.720000000013602e-07, 5.1799999999969926e-06, 4.7300000000083386e-07, 4.472000000001891e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 7.319999999998161e-06, 4.720000000013602e-07, 1.4152999999999388e-05, 4.720000000013602e-07, 1.0985999999997553e-05, 4.860000000009301e-07, 4.375000000000906e-06, 4.7300000000083386e-07, 5.915999999998173e-06, 4.860000000009301e-07, 6.1389999999987566e-06, 4.860000000009301e-07, 1.2972999999999457e-05, 4.860000000009301e-07, 1.3693999999998124e-05, 4.720000000013602e-07, 9.278000000001452e-06, 4.7199999999789077e-07, 5.486000000002461e-06, 4.729999999973644e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 1.0319000000001688e-05, 4.7300000000083386e-07, 1.2665999999997984e-05, 4.7300000000083386e-07, 5.819000000000657e-06, 4.720000000013602e-07, 8.805999999996622e-06, 4.720000000013602e-07, 1.2819000000000719e-05, 4.870000000004038e-07, 5.637999999998783e-06, 4.870000000004038e-07, 1.2485999999999053e-05, 4.720000000013602e-07, 1.0138999999999287e-05, 4.860000000009301e-07, 4.639000000000726e-06, 4.859999999974607e-07], 'sourcetime': [0.018980347, 0.018980833, 0.018990333, 0.018990806, 0.018997278, 0.01899775, 0.019012083, 0.019012556, 0.019019708, 0.019020181, 0.019032819, 0.019033292, 0.019047111, 0.019047583, 0.019056903, 0.019057375, 0.019071861, 0.019072347, 0.019078819, 0.019079306, 0.019088944, 0.019089431, 0.01909475, 0.019095222, 0.019109875, 0.019110347, 0.019120833, 0.019121306, 0.019126806, 0.019127278, 0.019138583, 0.019139056, 0.019144708, 0.019145181, 0.019157333, 0.019157806, 0.019172292, 0.019172764, 0.019183583, 0.019184056, 0.019190042, 0.019190528, 0.019204333, 0.019204819, 0.019215958, 0.019216444, 0.019230083, 0.019230569, 0.019242722, 0.019243194, 0.019252181, 0.019252653, 0.019257833, 0.019258306, 0.019262778, 0.01926325, 0.019271736, 0.019272208, 0.019279847, 0.019280319, 0.019287639, 0.019288111, 0.019302264, 0.019302736, 0.019313722, 0.019314208, 0.019318583, 0.019319056, 0.019324972, 0.019325458, 0.019331597, 0.019332083, 0.019345056, 0.019345542, 0.019359236, 0.019359708, 0.019368986, 0.019369458, 0.019374944, 0.019375417, 0.019386903, 0.019387375, 0.019397694, 0.019398167, 0.019410833, 0.019411306, 0.019417125, 0.019417597, 0.019426403, 0.019426875, 0.019439694, 0.019440181, 0.019445819, 0.019446306, 0.019458792, 0.019459264, 0.019469403, 0.019469889, 0.019474528, 0.019475014]}</msg>
<status status="PASS" starttime="20201110 08:33:37.970" endtime="20201110 08:33:37.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.966" endtime="20201110 08:33:37.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.979" level="INFO">${RESULT} = [{'time': 0.018980833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018990806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:37.975" endtime="20201110 08:33:37.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:37.992" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-...</msg>
<status status="PASS" starttime="20201110 08:33:37.980" endtime="20201110 08:33:37.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.996" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:37.995" endtime="20201110 08:33:37.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.999" level="INFO">VALUE: [4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201110 08:33:37.997" endtime="20201110 08:33:37.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.993" endtime="20201110 08:33:38.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.002" endtime="20201110 08:33:38.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.005" endtime="20201110 08:33:38.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.004" endtime="20201110 08:33:38.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.000" endtime="20201110 08:33:38.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.600" endtime="20201110 08:33:38.026"></status>
</kw>
<msg timestamp="20201110 08:33:38.026" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.035" endtime="20201110 08:33:38.045"></status>
</kw>
<msg timestamp="20201110 08:33:38.046" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.033" endtime="20201110 08:33:38.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.048" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.047" endtime="20201110 08:33:38.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.049" endtime="20201110 08:33:38.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.030" endtime="20201110 08:33:38.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.028" endtime="20201110 08:33:38.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.058" endtime="20201110 08:33:38.373"></status>
</kw>
<msg timestamp="20201110 08:33:38.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019398458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.057" endtime="20201110 08:33:38.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019398458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.377" endtime="20201110 08:33:38.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.385" endtime="20201110 08:33:38.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.054" endtime="20201110 08:33:38.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.053" endtime="20201110 08:33:38.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.392" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:38.391" endtime="20201110 08:33:38.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.397" level="INFO">VALUE: [{'time': 0.019397972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019398458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019405278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.01940575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019414403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.019414875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019426042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1166999999999427e-05, 'source_diff': 1.1166999999999427e-05}, {'time': 0.019426514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019435333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.019435806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019449611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.380499999999868e-05, 'source_diff': 1.380499999999868e-05}, {'time': 0.019450083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019460903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.019461375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019467375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.019467847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019472167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3199999999986305e-06, 'source_diff': 4.3199999999986305e-06}, {'time': 0.019472639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019485111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.019485583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01949075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.019491222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019503528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2306000000000122e-05, 'source_diff': 1.2306000000000122e-05}, {'time': 0.019504014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019515333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1318999999999219e-05, 'source_diff': 1.1318999999999219e-05}, {'time': 0.019515806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019527944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2137999999998345e-05, 'source_diff': 1.2137999999998345e-05}, {'time': 0.019528431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019536417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.019536889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019544694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.019545181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.0195525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.019552972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019563458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.019563931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01957375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.019574222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019587208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2985999999999553e-05, 'source_diff': 1.2985999999999553e-05}, {'time': 0.019587681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019593667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.019594139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019605625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.019606097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019612597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.019613069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019620917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.84800000000127e-06, 'source_diff': 7.84800000000127e-06}, {'time': 0.019621389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019628333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.019628819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019633792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.973000000001865e-06, 'source_diff': 4.973000000001865e-06}, {'time': 0.019634278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01964675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.019647236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019656542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.019657028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019666014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.019666486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019678972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.019679444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019685931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.019686403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019699556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3152999999998388e-05, 'source_diff': 1.3152999999998388e-05}, {'time': 0.019700028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019709681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.019710153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019716972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.818999999998188e-06, 'source_diff': 6.818999999998188e-06}, {'time': 0.019717444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019728097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.019728569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019741722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3152999999998388e-05, 'source_diff': 1.3152999999998388e-05}, {'time': 0.019742208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019756681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4473000000000957e-05, 'source_diff': 1.4473000000000957e-05}, {'time': 0.019757167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019764486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.019764958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019775597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.019776083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019781056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.973000000001865e-06, 'source_diff': 4.973000000001865e-06}, {'time': 0.019781542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019787347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.019787833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019793986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.019794458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019803167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.019803639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019816736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3097000000000109e-05, 'source_diff': 1.3097000000000109e-05}, {'time': 0.019817208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019824861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.019825333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019838694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.019839167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019850111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0943999999998844e-05, 'source_diff': 1.0943999999998844e-05}, {'time': 0.019850583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019855583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.019856056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019865694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.637999999999314e-06, 'source_diff': 9.637999999999314e-06}, {'time': 0.019866181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019876486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0304999999998649e-05, 'source_diff': 1.0304999999998649e-05}, {'time': 0.019876972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:38.393" endtime="20201110 08:33:38.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.389" endtime="20201110 08:33:38.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:38.423" level="INFO">${debug-compressed} = {'source_diff': [0, 4.860000000009301e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 8.653000000000827e-06, 4.720000000013602e-07, 1.1166999999999427e-05, 4.7199999999789077e-07, 8.81900000000018...</msg>
<status status="PASS" starttime="20201110 08:33:38.399" endtime="20201110 08:33:38.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.427" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:38.426" endtime="20201110 08:33:38.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.432" level="INFO">VALUE: {'source_diff': [0, 4.860000000009301e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 8.653000000000827e-06, 4.720000000013602e-07, 1.1166999999999427e-05, 4.7199999999789077e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 1.380499999999868e-05, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999789077e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.3199999999986305e-06, 4.720000000013602e-07, 1.2471999999999483e-05, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999789077e-07, 1.2306000000000122e-05, 4.860000000009301e-07, 1.1318999999999219e-05, 4.7300000000083386e-07, 1.2137999999998345e-05, 4.870000000004038e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.804999999999618e-06, 4.869999999969343e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 1.0486000000000523e-05, 4.7300000000083386e-07, 9.819000000001188e-06, 4.7199999999789077e-07, 1.2985999999999553e-05, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 6.499999999999562e-06, 4.720000000013602e-07, 7.84800000000127e-06, 4.7199999999789077e-07, 6.944000000001782e-06, 4.859999999974607e-07, 4.973000000001865e-06, 4.860000000009301e-07, 1.2471999999999483e-05, 4.859999999974607e-07, 9.306000000000592e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07, 1.2485999999999053e-05, 4.720000000013602e-07, 6.486999999999465e-06, 4.720000000013602e-07, 1.3152999999998388e-05, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 6.818999999998188e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 1.3152999999998388e-05, 4.860000000009301e-07, 1.4473000000000957e-05, 4.859999999974607e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 1.0638999999999788e-05, 4.860000000009301e-07, 4.973000000001865e-06, 4.859999999974607e-07, 5.805000000001087e-06, 4.860000000009301e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 8.708999999999106e-06, 4.720000000013602e-07, 1.3097000000000109e-05, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7300000000083386e-07, 1.0943999999998844e-05, 4.720000000013602e-07, 4.9999999999980616e-06, 4.7300000000083386e-07, 9.637999999999314e-06, 4.870000000004038e-07, 1.0304999999998649e-05, 4.860000000009301e-07], 'eventdiff': [0, 4.860000000009301e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 8.653000000000827e-06, 4.720000000013602e-07, 1.1166999999999427e-05, 4.7199999999789077e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 1.380499999999868e-05, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999789077e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.3199999999986305e-06, 4.720000000013602e-07, 1.2471999999999483e-05, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999789077e-07, 1.2306000000000122e-05, 4.860000000009301e-07, 1.1318999999999219e-05, 4.7300000000083386e-07, 1.2137999999998345e-05, 4.870000000004038e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.804999999999618e-06, 4.869999999969343e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 1.0486000000000523e-05, 4.7300000000083386e-07, 9.819000000001188e-06, 4.7199999999789077e-07, 1.2985999999999553e-05, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 6.499999999999562e-06, 4.720000000013602e-07, 7.84800000000127e-06, 4.7199999999789077e-07, 6.944000000001782e-06, 4.859999999974607e-07, 4.973000000001865e-06, 4.860000000009301e-07, 1.2471999999999483e-05, 4.859999999974607e-07, 9.306000000000592e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07, 1.2485999999999053e-05, 4.720000000013602e-07, 6.486999999999465e-06, 4.720000000013602e-07, 1.3152999999998388e-05, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 6.818999999998188e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 1.3152999999998388e-05, 4.860000000009301e-07, 1.4473000000000957e-05, 4.859999999974607e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 1.0638999999999788e-05, 4.860000000009301e-07, 4.973000000001865e-06, 4.859999999974607e-07, 5.805000000001087e-06, 4.860000000009301e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 8.708999999999106e-06, 4.720000000013602e-07, 1.3097000000000109e-05, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7300000000083386e-07, 1.0943999999998844e-05, 4.720000000013602e-07, 4.9999999999980616e-06, 4.7300000000083386e-07, 9.637999999999314e-06, 4.870000000004038e-07, 1.0304999999998649e-05, 4.860000000009301e-07], 'sourcetime': [0.019397972, 0.019398458, 0.019405278, 0.01940575, 0.019414403, 0.019414875, 0.019426042, 0.019426514, 0.019435333, 0.019435806, 0.019449611, 0.019450083, 0.019460903, 0.019461375, 0.019467375, 0.019467847, 0.019472167, 0.019472639, 0.019485111, 0.019485583, 0.01949075, 0.019491222, 0.019503528, 0.019504014, 0.019515333, 0.019515806, 0.019527944, 0.019528431, 0.019536417, 0.019536889, 0.019544694, 0.019545181, 0.0195525, 0.019552972, 0.019563458, 0.019563931, 0.01957375, 0.019574222, 0.019587208, 0.019587681, 0.019593667, 0.019594139, 0.019605625, 0.019606097, 0.019612597, 0.019613069, 0.019620917, 0.019621389, 0.019628333, 0.019628819, 0.019633792, 0.019634278, 0.01964675, 0.019647236, 0.019656542, 0.019657028, 0.019666014, 0.019666486, 0.019678972, 0.019679444, 0.019685931, 0.019686403, 0.019699556, 0.019700028, 0.019709681, 0.019710153, 0.019716972, 0.019717444, 0.019728097, 0.019728569, 0.019741722, 0.019742208, 0.019756681, 0.019757167, 0.019764486, 0.019764958, 0.019775597, 0.019776083, 0.019781056, 0.019781542, 0.019787347, 0.019787833, 0.019793986, 0.019794458, 0.019803167, 0.019803639, 0.019816736, 0.019817208, 0.019824861, 0.019825333, 0.019838694, 0.019839167, 0.019850111, 0.019850583, 0.019855583, 0.019856056, 0.019865694, 0.019866181, 0.019876486, 0.019876972]}</msg>
<status status="PASS" starttime="20201110 08:33:38.428" endtime="20201110 08:33:38.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.424" endtime="20201110 08:33:38.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.437" level="INFO">${RESULT} = [{'time': 0.019398458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01940575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:38.434" endtime="20201110 08:33:38.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:38.450" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e...</msg>
<status status="PASS" starttime="20201110 08:33:38.438" endtime="20201110 08:33:38.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.455" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:38.454" endtime="20201110 08:33:38.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.457" level="INFO">VALUE: [4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.869999999969343e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201110 08:33:38.456" endtime="20201110 08:33:38.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.451" endtime="20201110 08:33:38.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.460" endtime="20201110 08:33:38.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.464" endtime="20201110 08:33:38.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.462" endtime="20201110 08:33:38.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.459" endtime="20201110 08:33:38.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.027" endtime="20201110 08:33:38.484"></status>
</kw>
<msg timestamp="20201110 08:33:38.485" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.492" endtime="20201110 08:33:38.503"></status>
</kw>
<msg timestamp="20201110 08:33:38.503" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.491" endtime="20201110 08:33:38.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.505" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.504" endtime="20201110 08:33:38.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.507" endtime="20201110 08:33:38.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.488" endtime="20201110 08:33:38.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.486" endtime="20201110 08:33:38.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.515" endtime="20201110 08:33:38.802"></status>
</kw>
<msg timestamp="20201110 08:33:38.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018422736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018423208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.514" endtime="20201110 08:33:38.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018422736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018423208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.806" endtime="20201110 08:33:38.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.816" endtime="20201110 08:33:38.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.511" endtime="20201110 08:33:38.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.510" endtime="20201110 08:33:38.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.827" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:38.825" endtime="20201110 08:33:38.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.834" level="INFO">VALUE: [{'time': 0.018422736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018423208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018428694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018429167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018436306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.018436778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018447111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.018447583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018452889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018453375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018464014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.0184645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018470306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.018470792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018475431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018475917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018481569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.018482042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018491347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.018491833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018502833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1000000000000593e-05, 'source_diff': 1.1000000000000593e-05}, {'time': 0.018503306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018508111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.018508583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018517597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.018518069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018529528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458999999998387e-05, 'source_diff': 1.1458999999998387e-05}, {'time': 0.01853, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018541486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.018541958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018552278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319999999997692e-05, 'source_diff': 1.0319999999997692e-05}, {'time': 0.01855275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018561236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.018561708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018574028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319999999999692e-05, 'source_diff': 1.2319999999999692e-05}, {'time': 0.0185745, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018587986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.018588472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018595625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.018596097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018603264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.018603736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018616861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3124999999999248e-05, 'source_diff': 1.3124999999999248e-05}, {'time': 0.018617347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018631167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3820000000001192e-05, 'source_diff': 1.3820000000001192e-05}, {'time': 0.018631639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018645528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3889000000003038e-05, 'source_diff': 1.3889000000003038e-05}, {'time': 0.018646, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018660417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4416999999999208e-05, 'source_diff': 1.4416999999999208e-05}, {'time': 0.018660889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018669583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018670056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018675542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018676014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018685139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.018685611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018697764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2152999999997388e-05, 'source_diff': 1.2152999999997388e-05}, {'time': 0.018698236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018702722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.018703194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018715167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1973000000001927e-05, 'source_diff': 1.1973000000001927e-05}, {'time': 0.018715653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018724472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.018724944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018736917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1972999999998457e-05, 'source_diff': 1.1972999999998457e-05}, {'time': 0.018737403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018751556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999999388e-05, 'source_diff': 1.4152999999999388e-05}, {'time': 0.018752028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018758875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.018759347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018765819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.018766292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018774597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.018775069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018788903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3834000000000762e-05, 'source_diff': 1.3834000000000762e-05}, {'time': 0.018789375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018799347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.018799819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018807, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.181000000001936e-06, 'source_diff': 7.181000000001936e-06}, {'time': 0.018807472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018820931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3459000000000387e-05, 'source_diff': 1.3459000000000387e-05}, {'time': 0.018821403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018825889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018826375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018833847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.018834333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018843639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305999999997122e-06, 'source_diff': 9.305999999997122e-06}, {'time': 0.018844125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018848764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.01884925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018854583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.018855056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018864861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.018865333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018875819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.018876292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018881444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.018881917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018888569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.651999999999353e-06, 'source_diff': 6.651999999999353e-06}, {'time': 0.018889042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:38.829" endtime="20201110 08:33:38.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.822" endtime="20201110 08:33:38.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:38.863" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 7.138999999999757e-06, 4.720000000013602e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 5.306000000000061...</msg>
<status status="PASS" starttime="20201110 08:33:38.839" endtime="20201110 08:33:38.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.867" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:38.866" endtime="20201110 08:33:38.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.871" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 7.138999999999757e-06, 4.720000000013602e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 5.306000000000061e-06, 4.860000000009301e-07, 1.0638999999999788e-05, 4.859999999974607e-07, 5.806000000000561e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.860000000009301e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 9.305000000001118e-06, 4.859999999974607e-07, 1.1000000000000593e-05, 4.7300000000083386e-07, 4.805000000000087e-06, 4.7199999999789077e-07, 9.014000000001632e-06, 4.720000000013602e-07, 1.1458999999998387e-05, 4.720000000013602e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 1.0319999999997692e-05, 4.720000000013602e-07, 8.485999999998523e-06, 4.720000000013602e-07, 1.2319999999999692e-05, 4.720000000013602e-07, 1.3486000000000054e-05, 4.860000000009301e-07, 7.1529999999993266e-06, 4.7199999999789077e-07, 7.167000000002366e-06, 4.7199999999789077e-07, 1.3124999999999248e-05, 4.860000000009301e-07, 1.3820000000001192e-05, 4.7199999999789077e-07, 1.3889000000003038e-05, 4.7199999999789077e-07, 1.4416999999999208e-05, 4.720000000013602e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 5.485999999998992e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 1.2152999999997388e-05, 4.720000000013602e-07, 4.486000000001461e-06, 4.7199999999789077e-07, 1.1973000000001927e-05, 4.859999999974607e-07, 8.819000000000188e-06, 4.720000000013602e-07, 1.1972999999998457e-05, 4.860000000009301e-07, 1.4152999999999388e-05, 4.720000000013602e-07, 6.847000000000797e-06, 4.7199999999789077e-07, 6.472000000000422e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.7199999999789077e-07, 1.3834000000000762e-05, 4.720000000013602e-07, 9.972000000000453e-06, 4.7199999999789077e-07, 7.181000000001936e-06, 4.7199999999789077e-07, 1.3459000000000387e-05, 4.720000000013602e-07, 4.485999999997992e-06, 4.860000000009301e-07, 7.472000000001422e-06, 4.860000000009301e-07, 9.305999999997122e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.860000000009301e-07, 5.332999999999727e-06, 4.729999999973644e-07, 9.805000000001618e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.7300000000083386e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 6.651999999999353e-06, 4.7300000000083386e-07], 'eventdiff': [0, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 7.138999999999757e-06, 4.720000000013602e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 5.306000000000061e-06, 4.860000000009301e-07, 1.0638999999999788e-05, 4.859999999974607e-07, 5.806000000000561e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.860000000009301e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 9.305000000001118e-06, 4.859999999974607e-07, 1.1000000000000593e-05, 4.7300000000083386e-07, 4.805000000000087e-06, 4.7199999999789077e-07, 9.014000000001632e-06, 4.720000000013602e-07, 1.1458999999998387e-05, 4.720000000013602e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 1.0319999999997692e-05, 4.720000000013602e-07, 8.485999999998523e-06, 4.720000000013602e-07, 1.2319999999999692e-05, 4.720000000013602e-07, 1.3486000000000054e-05, 4.860000000009301e-07, 7.1529999999993266e-06, 4.7199999999789077e-07, 7.167000000002366e-06, 4.7199999999789077e-07, 1.3124999999999248e-05, 4.860000000009301e-07, 1.3820000000001192e-05, 4.7199999999789077e-07, 1.3889000000003038e-05, 4.7199999999789077e-07, 1.4416999999999208e-05, 4.720000000013602e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 5.485999999998992e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 1.2152999999997388e-05, 4.720000000013602e-07, 4.486000000001461e-06, 4.7199999999789077e-07, 1.1973000000001927e-05, 4.859999999974607e-07, 8.819000000000188e-06, 4.720000000013602e-07, 1.1972999999998457e-05, 4.860000000009301e-07, 1.4152999999999388e-05, 4.720000000013602e-07, 6.847000000000797e-06, 4.7199999999789077e-07, 6.472000000000422e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.7199999999789077e-07, 1.3834000000000762e-05, 4.720000000013602e-07, 9.972000000000453e-06, 4.7199999999789077e-07, 7.181000000001936e-06, 4.7199999999789077e-07, 1.3459000000000387e-05, 4.720000000013602e-07, 4.485999999997992e-06, 4.860000000009301e-07, 7.472000000001422e-06, 4.860000000009301e-07, 9.305999999997122e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.860000000009301e-07, 5.332999999999727e-06, 4.729999999973644e-07, 9.805000000001618e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.7300000000083386e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 6.651999999999353e-06, 4.7300000000083386e-07], 'sourcetime': [0.018422736, 0.018423208, 0.018428694, 0.018429167, 0.018436306, 0.018436778, 0.018447111, 0.018447583, 0.018452889, 0.018453375, 0.018464014, 0.0184645, 0.018470306, 0.018470792, 0.018475431, 0.018475917, 0.018481569, 0.018482042, 0.018491347, 0.018491833, 0.018502833, 0.018503306, 0.018508111, 0.018508583, 0.018517597, 0.018518069, 0.018529528, 0.01853, 0.018541486, 0.018541958, 0.018552278, 0.01855275, 0.018561236, 0.018561708, 0.018574028, 0.0185745, 0.018587986, 0.018588472, 0.018595625, 0.018596097, 0.018603264, 0.018603736, 0.018616861, 0.018617347, 0.018631167, 0.018631639, 0.018645528, 0.018646, 0.018660417, 0.018660889, 0.018669583, 0.018670056, 0.018675542, 0.018676014, 0.018685139, 0.018685611, 0.018697764, 0.018698236, 0.018702722, 0.018703194, 0.018715167, 0.018715653, 0.018724472, 0.018724944, 0.018736917, 0.018737403, 0.018751556, 0.018752028, 0.018758875, 0.018759347, 0.018765819, 0.018766292, 0.018774597, 0.018775069, 0.018788903, 0.018789375, 0.018799347, 0.018799819, 0.018807, 0.018807472, 0.018820931, 0.018821403, 0.018825889, 0.018826375, 0.018833847, 0.018834333, 0.018843639, 0.018844125, 0.018848764, 0.01884925, 0.018854583, 0.018855056, 0.018864861, 0.018865333, 0.018875819, 0.018876292, 0.018881444, 0.018881917, 0.018888569, 0.018889042]}</msg>
<status status="PASS" starttime="20201110 08:33:38.868" endtime="20201110 08:33:38.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.864" endtime="20201110 08:33:38.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.877" level="INFO">${RESULT} = [{'time': 0.018423208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018429167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:38.873" endtime="20201110 08:33:38.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:38.890" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07...</msg>
<status status="PASS" starttime="20201110 08:33:38.877" endtime="20201110 08:33:38.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.895" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:38.893" endtime="20201110 08:33:38.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.897" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:33:38.896" endtime="20201110 08:33:38.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.891" endtime="20201110 08:33:38.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.900" endtime="20201110 08:33:38.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.903" endtime="20201110 08:33:38.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.902" endtime="20201110 08:33:38.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.898" endtime="20201110 08:33:38.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.485" endtime="20201110 08:33:38.924"></status>
</kw>
<msg timestamp="20201110 08:33:38.924" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.933" endtime="20201110 08:33:38.943"></status>
</kw>
<msg timestamp="20201110 08:33:38.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.931" endtime="20201110 08:33:38.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.946" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.945" endtime="20201110 08:33:38.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.947" endtime="20201110 08:33:38.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.928" endtime="20201110 08:33:38.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.926" endtime="20201110 08:33:38.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.956" endtime="20201110 08:33:39.240"></status>
</kw>
<msg timestamp="20201110 08:33:39.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019157153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019157625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.955" endtime="20201110 08:33:39.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019157153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019157625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.244" endtime="20201110 08:33:39.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.252" endtime="20201110 08:33:39.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.952" endtime="20201110 08:33:39.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.950" endtime="20201110 08:33:39.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.259" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:39.258" endtime="20201110 08:33:39.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.264" level="INFO">VALUE: [{'time': 0.019157153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019157625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019172278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652999999999888e-05, 'source_diff': 1.4652999999999888e-05}, {'time': 0.01917275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019181403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.019181875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019189194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.019189667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019201319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1652000000000884e-05, 'source_diff': 1.1652000000000884e-05}, {'time': 0.019201792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019206306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.019206778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019218569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1791000000000579e-05, 'source_diff': 1.1791000000000579e-05}, {'time': 0.019219056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019229028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.019229514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019240986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1472000000001953e-05, 'source_diff': 1.1472000000001953e-05}, {'time': 0.019241472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019251625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0153000000002327e-05, 'source_diff': 1.0153000000002327e-05}, {'time': 0.019252097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019259403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.019259889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019264361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.019264847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019271181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333999999996731e-06, 'source_diff': 6.333999999996731e-06}, {'time': 0.019271653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019279667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.019280139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019289417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277999999997982e-06, 'source_diff': 9.277999999997982e-06}, {'time': 0.019289889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019300042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.019300514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019305667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.019306139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019318125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1985999999998553e-05, 'source_diff': 1.1985999999998553e-05}, {'time': 0.019318597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01933075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2153000000000858e-05, 'source_diff': 1.2153000000000858e-05}, {'time': 0.019331222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019337875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.019338347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019352847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4500000000000624e-05, 'source_diff': 1.4500000000000624e-05}, {'time': 0.019353319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019366958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.019367444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019377917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0473000000000426e-05, 'source_diff': 1.0473000000000426e-05}, {'time': 0.019378403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019391375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2971999999999984e-05, 'source_diff': 1.2971999999999984e-05}, {'time': 0.019391861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019402014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.019402486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019413472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0986000000001023e-05, 'source_diff': 1.0986000000001023e-05}, {'time': 0.019413944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019427764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3820000000001192e-05, 'source_diff': 1.3820000000001192e-05}, {'time': 0.019428236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019437444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.019437917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019447861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944000000001313e-06, 'source_diff': 9.944000000001313e-06}, {'time': 0.019448333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019454056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.019454528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019463597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.019464069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01947375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.019474222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019486347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2125000000001718e-05, 'source_diff': 1.2125000000001718e-05}, {'time': 0.019486833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019491319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.019491792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019495917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.019496389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019506375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.019506847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019514861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.019515333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019523625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.019524097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019532583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.019533069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019544708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1639000000000788e-05, 'source_diff': 1.1639000000000788e-05}, {'time': 0.019545194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.0195545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.019554986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019566458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.019566944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01957625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.019576736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019586222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.019586694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019596847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.019597319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019601806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.487000000000935e-06, 'source_diff': 4.487000000000935e-06}, {'time': 0.019602278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019611778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.01961225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019626389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.019626861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019636736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.019637208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019649472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2264000000001413e-05, 'source_diff': 1.2264000000001413e-05}, {'time': 0.019649958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:39.260" endtime="20201110 08:33:39.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.256" endtime="20201110 08:33:39.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:39.290" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 1.4652999999999888e-05, 4.7199999999789077e-07, 8.653000000000827e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 1.16520000000008...</msg>
<status status="PASS" starttime="20201110 08:33:39.266" endtime="20201110 08:33:39.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.294" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:39.293" endtime="20201110 08:33:39.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.298" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 1.4652999999999888e-05, 4.7199999999789077e-07, 8.653000000000827e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 1.1652000000000884e-05, 4.729999999973644e-07, 4.514000000000601e-06, 4.720000000013602e-07, 1.1791000000000579e-05, 4.870000000004038e-07, 9.971999999996983e-06, 4.860000000009301e-07, 1.1472000000001953e-05, 4.859999999974607e-07, 1.0153000000002327e-05, 4.7199999999789077e-07, 7.306000000002061e-06, 4.859999999974607e-07, 4.472000000001891e-06, 4.860000000009301e-07, 6.333999999996731e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 5.152999999997326e-06, 4.720000000013602e-07, 1.1985999999998553e-05, 4.720000000013602e-07, 1.2153000000000858e-05, 4.7199999999789077e-07, 6.653000000002296e-06, 4.7199999999789077e-07, 1.4500000000000624e-05, 4.720000000013602e-07, 1.3638999999999318e-05, 4.860000000009301e-07, 1.0473000000000426e-05, 4.859999999974607e-07, 1.2971999999999984e-05, 4.860000000009301e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 1.0986000000001023e-05, 4.7199999999789077e-07, 1.3820000000001192e-05, 4.720000000013602e-07, 9.208000000000133e-06, 4.729999999973644e-07, 9.944000000001313e-06, 4.720000000013602e-07, 5.7229999999991454e-06, 4.7199999999789077e-07, 9.069000000000438e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.7199999999789077e-07, 1.2125000000001718e-05, 4.859999999974607e-07, 4.486000000001461e-06, 4.7300000000083386e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 9.986000000000023e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999789077e-07, 8.292000000000022e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.860000000009301e-07, 1.1639000000000788e-05, 4.859999999974607e-07, 9.306000000000592e-06, 4.860000000009301e-07, 1.1471999999998483e-05, 4.860000000009301e-07, 9.306000000000592e-06, 4.860000000009301e-07, 9.485999999999523e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.7199999999789077e-07, 4.487000000000935e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.720000000013602e-07, 1.4138999999999818e-05, 4.7199999999789077e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.2264000000001413e-05, 4.859999999974607e-07], 'eventdiff': [0, 4.720000000013602e-07, 1.4652999999999888e-05, 4.7199999999789077e-07, 8.653000000000827e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 1.1652000000000884e-05, 4.729999999973644e-07, 4.514000000000601e-06, 4.720000000013602e-07, 1.1791000000000579e-05, 4.870000000004038e-07, 9.971999999996983e-06, 4.860000000009301e-07, 1.1472000000001953e-05, 4.859999999974607e-07, 1.0153000000002327e-05, 4.7199999999789077e-07, 7.306000000002061e-06, 4.859999999974607e-07, 4.472000000001891e-06, 4.860000000009301e-07, 6.333999999996731e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 5.152999999997326e-06, 4.720000000013602e-07, 1.1985999999998553e-05, 4.720000000013602e-07, 1.2153000000000858e-05, 4.7199999999789077e-07, 6.653000000002296e-06, 4.7199999999789077e-07, 1.4500000000000624e-05, 4.720000000013602e-07, 1.3638999999999318e-05, 4.860000000009301e-07, 1.0473000000000426e-05, 4.859999999974607e-07, 1.2971999999999984e-05, 4.860000000009301e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 1.0986000000001023e-05, 4.7199999999789077e-07, 1.3820000000001192e-05, 4.720000000013602e-07, 9.208000000000133e-06, 4.729999999973644e-07, 9.944000000001313e-06, 4.720000000013602e-07, 5.7229999999991454e-06, 4.7199999999789077e-07, 9.069000000000438e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.7199999999789077e-07, 1.2125000000001718e-05, 4.859999999974607e-07, 4.486000000001461e-06, 4.7300000000083386e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 9.986000000000023e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999789077e-07, 8.292000000000022e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.860000000009301e-07, 1.1639000000000788e-05, 4.859999999974607e-07, 9.306000000000592e-06, 4.860000000009301e-07, 1.1471999999998483e-05, 4.860000000009301e-07, 9.306000000000592e-06, 4.860000000009301e-07, 9.485999999999523e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.7199999999789077e-07, 4.487000000000935e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.720000000013602e-07, 1.4138999999999818e-05, 4.7199999999789077e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.2264000000001413e-05, 4.859999999974607e-07], 'sourcetime': [0.019157153, 0.019157625, 0.019172278, 0.01917275, 0.019181403, 0.019181875, 0.019189194, 0.019189667, 0.019201319, 0.019201792, 0.019206306, 0.019206778, 0.019218569, 0.019219056, 0.019229028, 0.019229514, 0.019240986, 0.019241472, 0.019251625, 0.019252097, 0.019259403, 0.019259889, 0.019264361, 0.019264847, 0.019271181, 0.019271653, 0.019279667, 0.019280139, 0.019289417, 0.019289889, 0.019300042, 0.019300514, 0.019305667, 0.019306139, 0.019318125, 0.019318597, 0.01933075, 0.019331222, 0.019337875, 0.019338347, 0.019352847, 0.019353319, 0.019366958, 0.019367444, 0.019377917, 0.019378403, 0.019391375, 0.019391861, 0.019402014, 0.019402486, 0.019413472, 0.019413944, 0.019427764, 0.019428236, 0.019437444, 0.019437917, 0.019447861, 0.019448333, 0.019454056, 0.019454528, 0.019463597, 0.019464069, 0.01947375, 0.019474222, 0.019486347, 0.019486833, 0.019491319, 0.019491792, 0.019495917, 0.019496389, 0.019506375, 0.019506847, 0.019514861, 0.019515333, 0.019523625, 0.019524097, 0.019532583, 0.019533069, 0.019544708, 0.019545194, 0.0195545, 0.019554986, 0.019566458, 0.019566944, 0.01957625, 0.019576736, 0.019586222, 0.019586694, 0.019596847, 0.019597319, 0.019601806, 0.019602278, 0.019611778, 0.01961225, 0.019626389, 0.019626861, 0.019636736, 0.019637208, 0.019649472, 0.019649958]}</msg>
<status status="PASS" starttime="20201110 08:33:39.295" endtime="20201110 08:33:39.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.291" endtime="20201110 08:33:39.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.303" level="INFO">${RESULT} = [{'time': 0.019157625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01917275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:39.300" endtime="20201110 08:33:39.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:39.317" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-0...</msg>
<status status="PASS" starttime="20201110 08:33:39.304" endtime="20201110 08:33:39.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.321" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:39.320" endtime="20201110 08:33:39.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.324" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201110 08:33:39.322" endtime="20201110 08:33:39.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.318" endtime="20201110 08:33:39.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.327" endtime="20201110 08:33:39.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.330" endtime="20201110 08:33:39.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.329" endtime="20201110 08:33:39.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.325" endtime="20201110 08:33:39.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.925" endtime="20201110 08:33:39.351"></status>
</kw>
<msg timestamp="20201110 08:33:39.351" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.359" endtime="20201110 08:33:39.368"></status>
</kw>
<msg timestamp="20201110 08:33:39.369" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.357" endtime="20201110 08:33:39.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.370" endtime="20201110 08:33:39.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.372" endtime="20201110 08:33:39.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.354" endtime="20201110 08:33:39.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.353" endtime="20201110 08:33:39.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.381" endtime="20201110 08:33:39.669"></status>
</kw>
<msg timestamp="20201110 08:33:39.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018398014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018398486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.379" endtime="20201110 08:33:39.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018398014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018398486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.673" endtime="20201110 08:33:39.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.682" endtime="20201110 08:33:39.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.377" endtime="20201110 08:33:39.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.375" endtime="20201110 08:33:39.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.688" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:39.687" endtime="20201110 08:33:39.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.693" level="INFO">VALUE: [{'time': 0.018398014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018398486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018406569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083000000002477e-06, 'source_diff': 8.083000000002477e-06}, {'time': 0.018407042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018416222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.018416694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018431319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4625000000000749e-05, 'source_diff': 1.4625000000000749e-05}, {'time': 0.018431792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018439778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.01844025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018448431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.181000000002936e-06, 'source_diff': 8.181000000002936e-06}, {'time': 0.018448903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018453542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018454014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018464653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.018465139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018479444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4305000000002649e-05, 'source_diff': 1.4305000000002649e-05}, {'time': 0.018479931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018491417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.018491889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018501042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.018501514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018513333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1818999999999719e-05, 'source_diff': 1.1818999999999719e-05}, {'time': 0.018513806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018521292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.018521764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01853625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.018536722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018542903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018543375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018548528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018549, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018554514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.018554986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018560917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.018561389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018568056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6669999999983964e-06, 'source_diff': 6.6669999999983964e-06}, {'time': 0.018568528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018575889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018576361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018584958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.018585444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018599264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3820000000001192e-05, 'source_diff': 1.3820000000001192e-05}, {'time': 0.018599736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018604375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018604861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018613347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.018613819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018627306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486999999999527e-05, 'source_diff': 1.3486999999999527e-05}, {'time': 0.018627778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018639264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.018639736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018651889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2153000000000858e-05, 'source_diff': 1.2153000000000858e-05}, {'time': 0.018652361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018659847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.018660319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018664972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652999999996826e-06, 'source_diff': 4.652999999996826e-06}, {'time': 0.018665444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018679597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999999388e-05, 'source_diff': 1.4152999999999388e-05}, {'time': 0.018680069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018693889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3820000000001192e-05, 'source_diff': 1.3820000000001192e-05}, {'time': 0.018694375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018704681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.018705167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018712194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.018712667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018718431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018718917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018724569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.018725042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018735347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0304999999998649e-05, 'source_diff': 1.0304999999998649e-05}, {'time': 0.018735833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018749319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.018749792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018755347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.554999999997368e-06, 'source_diff': 5.554999999997368e-06}, {'time': 0.018755819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018768069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.018768542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018782361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3819000000001719e-05, 'source_diff': 1.3819000000001719e-05}, {'time': 0.018782833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018795653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2820000000000192e-05, 'source_diff': 1.2820000000000192e-05}, {'time': 0.018796125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018806444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0318999999998218e-05, 'source_diff': 1.0318999999998218e-05}, {'time': 0.018806917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018818583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666000000000454e-05, 'source_diff': 1.1666000000000454e-05}, {'time': 0.018819056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018825528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.018826014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018835569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.018836042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018850111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.40689999999985e-05, 'source_diff': 1.40689999999985e-05}, {'time': 0.018850597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018858931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333999999998731e-06, 'source_diff': 8.333999999998731e-06}, {'time': 0.018859403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018870389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0986000000001023e-05, 'source_diff': 1.0986000000001023e-05}, {'time': 0.018870861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018875667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.018876139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018890125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.018890597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:39.689" endtime="20201110 08:33:39.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.685" endtime="20201110 08:33:39.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:39.720" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7199999999789077e-07, 8.083000000002477e-06, 4.729999999973644e-07, 9.180000000000993e-06, 4.720000000013602e-07, 1.4625000000000749e-05, 4.729999999973644e-07, 7.986000000001492...</msg>
<status status="PASS" starttime="20201110 08:33:39.696" endtime="20201110 08:33:39.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.724" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:39.723" endtime="20201110 08:33:39.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.728" level="INFO">VALUE: {'source_diff': [0, 4.7199999999789077e-07, 8.083000000002477e-06, 4.729999999973644e-07, 9.180000000000993e-06, 4.720000000013602e-07, 1.4625000000000749e-05, 4.729999999973644e-07, 7.986000000001492e-06, 4.7199999999789077e-07, 8.181000000002936e-06, 4.7199999999789077e-07, 4.639000000000726e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.859999999974607e-07, 1.4305000000002649e-05, 4.870000000004038e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 1.1818999999999719e-05, 4.7300000000083386e-07, 7.486000000000992e-06, 4.7199999999789077e-07, 1.4486000000001054e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 5.514000000001601e-06, 4.7199999999789077e-07, 5.931000000000686e-06, 4.720000000013602e-07, 6.6669999999983964e-06, 4.720000000013602e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 8.596999999999078e-06, 4.860000000009301e-07, 1.3820000000001192e-05, 4.7199999999789077e-07, 4.639000000000726e-06, 4.860000000009301e-07, 8.485999999998523e-06, 4.720000000013602e-07, 1.3486999999999527e-05, 4.720000000013602e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 1.2153000000000858e-05, 4.7199999999789077e-07, 7.486000000000992e-06, 4.720000000013602e-07, 4.652999999996826e-06, 4.720000000013602e-07, 1.4152999999999388e-05, 4.720000000013602e-07, 1.3820000000001192e-05, 4.859999999974607e-07, 1.0306000000001592e-05, 4.860000000009301e-07, 7.026999999999728e-06, 4.729999999973644e-07, 5.764000000001851e-06, 4.860000000009301e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 1.0304999999998649e-05, 4.860000000009301e-07, 1.3486000000000054e-05, 4.7300000000083386e-07, 5.554999999997368e-06, 4.720000000013602e-07, 1.2249999999998373e-05, 4.7300000000083386e-07, 1.3819000000001719e-05, 4.7199999999789077e-07, 1.2820000000000192e-05, 4.720000000013602e-07, 1.0318999999998218e-05, 4.7300000000083386e-07, 1.1666000000000454e-05, 4.7300000000083386e-07, 6.472000000000422e-06, 4.859999999974607e-07, 9.555000000001368e-06, 4.7300000000083386e-07, 1.40689999999985e-05, 4.860000000009301e-07, 8.333999999998731e-06, 4.720000000013602e-07, 1.0986000000001023e-05, 4.7199999999789077e-07, 4.805999999999561e-06, 4.720000000013602e-07, 1.3986000000000554e-05, 4.7199999999789077e-07], 'eventdiff': [0, 4.7199999999789077e-07, 8.083000000002477e-06, 4.729999999973644e-07, 9.180000000000993e-06, 4.720000000013602e-07, 1.4625000000000749e-05, 4.729999999973644e-07, 7.986000000001492e-06, 4.7199999999789077e-07, 8.181000000002936e-06, 4.7199999999789077e-07, 4.639000000000726e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.859999999974607e-07, 1.4305000000002649e-05, 4.870000000004038e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 1.1818999999999719e-05, 4.7300000000083386e-07, 7.486000000000992e-06, 4.7199999999789077e-07, 1.4486000000001054e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 5.514000000001601e-06, 4.7199999999789077e-07, 5.931000000000686e-06, 4.720000000013602e-07, 6.6669999999983964e-06, 4.720000000013602e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 8.596999999999078e-06, 4.860000000009301e-07, 1.3820000000001192e-05, 4.7199999999789077e-07, 4.639000000000726e-06, 4.860000000009301e-07, 8.485999999998523e-06, 4.720000000013602e-07, 1.3486999999999527e-05, 4.720000000013602e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 1.2153000000000858e-05, 4.7199999999789077e-07, 7.486000000000992e-06, 4.720000000013602e-07, 4.652999999996826e-06, 4.720000000013602e-07, 1.4152999999999388e-05, 4.720000000013602e-07, 1.3820000000001192e-05, 4.859999999974607e-07, 1.0306000000001592e-05, 4.860000000009301e-07, 7.026999999999728e-06, 4.729999999973644e-07, 5.764000000001851e-06, 4.860000000009301e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 1.0304999999998649e-05, 4.860000000009301e-07, 1.3486000000000054e-05, 4.7300000000083386e-07, 5.554999999997368e-06, 4.720000000013602e-07, 1.2249999999998373e-05, 4.7300000000083386e-07, 1.3819000000001719e-05, 4.7199999999789077e-07, 1.2820000000000192e-05, 4.720000000013602e-07, 1.0318999999998218e-05, 4.7300000000083386e-07, 1.1666000000000454e-05, 4.7300000000083386e-07, 6.472000000000422e-06, 4.859999999974607e-07, 9.555000000001368e-06, 4.7300000000083386e-07, 1.40689999999985e-05, 4.860000000009301e-07, 8.333999999998731e-06, 4.720000000013602e-07, 1.0986000000001023e-05, 4.7199999999789077e-07, 4.805999999999561e-06, 4.720000000013602e-07, 1.3986000000000554e-05, 4.7199999999789077e-07], 'sourcetime': [0.018398014, 0.018398486, 0.018406569, 0.018407042, 0.018416222, 0.018416694, 0.018431319, 0.018431792, 0.018439778, 0.01844025, 0.018448431, 0.018448903, 0.018453542, 0.018454014, 0.018464653, 0.018465139, 0.018479444, 0.018479931, 0.018491417, 0.018491889, 0.018501042, 0.018501514, 0.018513333, 0.018513806, 0.018521292, 0.018521764, 0.01853625, 0.018536722, 0.018542903, 0.018543375, 0.018548528, 0.018549, 0.018554514, 0.018554986, 0.018560917, 0.018561389, 0.018568056, 0.018568528, 0.018575889, 0.018576361, 0.018584958, 0.018585444, 0.018599264, 0.018599736, 0.018604375, 0.018604861, 0.018613347, 0.018613819, 0.018627306, 0.018627778, 0.018639264, 0.018639736, 0.018651889, 0.018652361, 0.018659847, 0.018660319, 0.018664972, 0.018665444, 0.018679597, 0.018680069, 0.018693889, 0.018694375, 0.018704681, 0.018705167, 0.018712194, 0.018712667, 0.018718431, 0.018718917, 0.018724569, 0.018725042, 0.018735347, 0.018735833, 0.018749319, 0.018749792, 0.018755347, 0.018755819, 0.018768069, 0.018768542, 0.018782361, 0.018782833, 0.018795653, 0.018796125, 0.018806444, 0.018806917, 0.018818583, 0.018819056, 0.018825528, 0.018826014, 0.018835569, 0.018836042, 0.018850111, 0.018850597, 0.018858931, 0.018859403, 0.018870389, 0.018870861, 0.018875667, 0.018876139, 0.018890125, 0.018890597]}</msg>
<status status="PASS" starttime="20201110 08:33:39.725" endtime="20201110 08:33:39.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.721" endtime="20201110 08:33:39.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.734" level="INFO">${RESULT} = [{'time': 0.018398486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018407042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:39.731" endtime="20201110 08:33:39.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:39.747" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-...</msg>
<status status="PASS" starttime="20201110 08:33:39.735" endtime="20201110 08:33:39.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.752" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:39.751" endtime="20201110 08:33:39.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.754" level="INFO">VALUE: [4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:33:39.753" endtime="20201110 08:33:39.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.748" endtime="20201110 08:33:39.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.757" endtime="20201110 08:33:39.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.761" endtime="20201110 08:33:39.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.759" endtime="20201110 08:33:39.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.756" endtime="20201110 08:33:39.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.351" endtime="20201110 08:33:39.781"></status>
</kw>
<msg timestamp="20201110 08:33:39.782" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.789" endtime="20201110 08:33:39.800"></status>
</kw>
<msg timestamp="20201110 08:33:39.800" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.788" endtime="20201110 08:33:39.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.803" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.801" endtime="20201110 08:33:39.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.804" endtime="20201110 08:33:39.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.785" endtime="20201110 08:33:39.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.784" endtime="20201110 08:33:39.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.814" endtime="20201110 08:33:40.103"></status>
</kw>
<msg timestamp="20201110 08:33:40.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018538264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018538736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.812" endtime="20201110 08:33:40.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018538264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018538736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.107" endtime="20201110 08:33:40.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.116" endtime="20201110 08:33:40.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.809" endtime="20201110 08:33:40.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.808" endtime="20201110 08:33:40.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.122" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:40.121" endtime="20201110 08:33:40.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.127" level="INFO">VALUE: [{'time': 0.018538264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018538736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018542861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.018543347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018558014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4666999999999458e-05, 'source_diff': 1.4666999999999458e-05}, {'time': 0.018558486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018565306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.018565778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018577583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1805000000000149e-05, 'source_diff': 1.1805000000000149e-05}, {'time': 0.018578056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018588042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.018588514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018597167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.018597639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018610792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3153000000001858e-05, 'source_diff': 1.3153000000001858e-05}, {'time': 0.018611264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01862525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.018625736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018638875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3138999999998818e-05, 'source_diff': 1.3138999999998818e-05}, {'time': 0.018639361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018644833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018645319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018651458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.018651944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018661417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.472999999999426e-06, 'source_diff': 9.472999999999426e-06}, {'time': 0.018661903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018667708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.018668194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018680194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2000000000001593e-05, 'source_diff': 1.2000000000001593e-05}, {'time': 0.018680667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018688028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.0186885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018700597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2096999999999108e-05, 'source_diff': 1.2096999999999108e-05}, {'time': 0.018701069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018713222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2153000000000858e-05, 'source_diff': 1.2153000000000858e-05}, {'time': 0.018713694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018718014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.018718486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018729472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0986000000001023e-05, 'source_diff': 1.0986000000001023e-05}, {'time': 0.018729944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018741431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1487000000000996e-05, 'source_diff': 1.1487000000000996e-05}, {'time': 0.018741917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018747556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.018748042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018753514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018754, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018759653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018760125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018768097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.018768583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018776889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.306000000003061e-06, 'source_diff': 8.306000000003061e-06}, {'time': 0.018777375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018784181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.018784667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018788875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.018789347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018801917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2569999999999942e-05, 'source_diff': 1.2569999999999942e-05}, {'time': 0.018802403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018807542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018808028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018821833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.380499999999868e-05, 'source_diff': 1.380499999999868e-05}, {'time': 0.018822319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018835125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2806000000000622e-05, 'source_diff': 1.2806000000000622e-05}, {'time': 0.018835611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01885025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.018850736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018863736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2999999999999123e-05, 'source_diff': 1.2999999999999123e-05}, {'time': 0.018864208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018878361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999999388e-05, 'source_diff': 1.4152999999999388e-05}, {'time': 0.018878833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018884306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.018884778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018889944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.165999999997423e-06, 'source_diff': 5.165999999997423e-06}, {'time': 0.018890417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01890075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.018901222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018906347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.018906819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018911806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.987000000001435e-06, 'source_diff': 4.987000000001435e-06}, {'time': 0.018912278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018918597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.018919069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018928389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.018928875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018942181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3305999999997653e-05, 'source_diff': 1.3305999999997653e-05}, {'time': 0.018942667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018950819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152000000000853e-06, 'source_diff': 8.152000000000853e-06}, {'time': 0.018951292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018956764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.01895725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018966389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000001757e-06, 'source_diff': 9.139000000001757e-06}, {'time': 0.018966875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018974194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.018974667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018985653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0986000000001023e-05, 'source_diff': 1.0986000000001023e-05}, {'time': 0.018986125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018995778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.01899625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019003597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.019004069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:40.123" endtime="20201110 08:33:40.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.119" endtime="20201110 08:33:40.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:40.153" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 4.125000000000656e-06, 4.860000000009301e-07, 1.4666999999999458e-05, 4.7199999999789077e-07, 6.820000000001131e-06, 4.720000000013602e-07, 1.180500000000014...</msg>
<status status="PASS" starttime="20201110 08:33:40.130" endtime="20201110 08:33:40.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.157" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:40.156" endtime="20201110 08:33:40.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.161" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 4.125000000000656e-06, 4.860000000009301e-07, 1.4666999999999458e-05, 4.7199999999789077e-07, 6.820000000001131e-06, 4.720000000013602e-07, 1.1805000000000149e-05, 4.729999999973644e-07, 9.986000000000023e-06, 4.720000000013602e-07, 8.653000000000827e-06, 4.7199999999789077e-07, 1.3153000000001858e-05, 4.7199999999789077e-07, 1.3986000000000554e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 5.471999999999422e-06, 4.860000000009301e-07, 6.1389999999987566e-06, 4.860000000009301e-07, 9.472999999999426e-06, 4.860000000009301e-07, 5.805000000001087e-06, 4.859999999974607e-07, 1.2000000000001593e-05, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.2096999999999108e-05, 4.720000000013602e-07, 1.2153000000000858e-05, 4.7199999999789077e-07, 4.3200000000021e-06, 4.7199999999789077e-07, 1.0986000000001023e-05, 4.7199999999789077e-07, 1.1487000000000996e-05, 4.860000000009301e-07, 5.6389999999982565e-06, 4.860000000009301e-07, 5.471999999999422e-06, 4.860000000009301e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 7.972000000001922e-06, 4.859999999974607e-07, 8.306000000003061e-06, 4.859999999974607e-07, 6.806000000001561e-06, 4.860000000009301e-07, 4.207999999998602e-06, 4.720000000013602e-07, 1.2569999999999942e-05, 4.859999999974607e-07, 5.139000000001226e-06, 4.860000000009301e-07, 1.380499999999868e-05, 4.860000000009301e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.4639000000000318e-05, 4.860000000009301e-07, 1.2999999999999123e-05, 4.720000000013602e-07, 1.4152999999999388e-05, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 5.165999999997423e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.7199999999789077e-07, 5.125000000001656e-06, 4.7199999999789077e-07, 4.987000000001435e-06, 4.720000000013602e-07, 6.318999999997688e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.860000000009301e-07, 1.3305999999997653e-05, 4.860000000009301e-07, 8.152000000000853e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.859999999974607e-07, 9.139000000001757e-06, 4.860000000009301e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 1.0986000000001023e-05, 4.7199999999789077e-07, 9.653000000001827e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.7199999999789077e-07], 'eventdiff': [0, 4.720000000013602e-07, 4.125000000000656e-06, 4.860000000009301e-07, 1.4666999999999458e-05, 4.7199999999789077e-07, 6.820000000001131e-06, 4.720000000013602e-07, 1.1805000000000149e-05, 4.729999999973644e-07, 9.986000000000023e-06, 4.720000000013602e-07, 8.653000000000827e-06, 4.7199999999789077e-07, 1.3153000000001858e-05, 4.7199999999789077e-07, 1.3986000000000554e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 5.471999999999422e-06, 4.860000000009301e-07, 6.1389999999987566e-06, 4.860000000009301e-07, 9.472999999999426e-06, 4.860000000009301e-07, 5.805000000001087e-06, 4.859999999974607e-07, 1.2000000000001593e-05, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.2096999999999108e-05, 4.720000000013602e-07, 1.2153000000000858e-05, 4.7199999999789077e-07, 4.3200000000021e-06, 4.7199999999789077e-07, 1.0986000000001023e-05, 4.7199999999789077e-07, 1.1487000000000996e-05, 4.860000000009301e-07, 5.6389999999982565e-06, 4.860000000009301e-07, 5.471999999999422e-06, 4.860000000009301e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 7.972000000001922e-06, 4.859999999974607e-07, 8.306000000003061e-06, 4.859999999974607e-07, 6.806000000001561e-06, 4.860000000009301e-07, 4.207999999998602e-06, 4.720000000013602e-07, 1.2569999999999942e-05, 4.859999999974607e-07, 5.139000000001226e-06, 4.860000000009301e-07, 1.380499999999868e-05, 4.860000000009301e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.4639000000000318e-05, 4.860000000009301e-07, 1.2999999999999123e-05, 4.720000000013602e-07, 1.4152999999999388e-05, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 5.165999999997423e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.7199999999789077e-07, 5.125000000001656e-06, 4.7199999999789077e-07, 4.987000000001435e-06, 4.720000000013602e-07, 6.318999999997688e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.860000000009301e-07, 1.3305999999997653e-05, 4.860000000009301e-07, 8.152000000000853e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.859999999974607e-07, 9.139000000001757e-06, 4.860000000009301e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 1.0986000000001023e-05, 4.7199999999789077e-07, 9.653000000001827e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.7199999999789077e-07], 'sourcetime': [0.018538264, 0.018538736, 0.018542861, 0.018543347, 0.018558014, 0.018558486, 0.018565306, 0.018565778, 0.018577583, 0.018578056, 0.018588042, 0.018588514, 0.018597167, 0.018597639, 0.018610792, 0.018611264, 0.01862525, 0.018625736, 0.018638875, 0.018639361, 0.018644833, 0.018645319, 0.018651458, 0.018651944, 0.018661417, 0.018661903, 0.018667708, 0.018668194, 0.018680194, 0.018680667, 0.018688028, 0.0186885, 0.018700597, 0.018701069, 0.018713222, 0.018713694, 0.018718014, 0.018718486, 0.018729472, 0.018729944, 0.018741431, 0.018741917, 0.018747556, 0.018748042, 0.018753514, 0.018754, 0.018759653, 0.018760125, 0.018768097, 0.018768583, 0.018776889, 0.018777375, 0.018784181, 0.018784667, 0.018788875, 0.018789347, 0.018801917, 0.018802403, 0.018807542, 0.018808028, 0.018821833, 0.018822319, 0.018835125, 0.018835611, 0.01885025, 0.018850736, 0.018863736, 0.018864208, 0.018878361, 0.018878833, 0.018884306, 0.018884778, 0.018889944, 0.018890417, 0.01890075, 0.018901222, 0.018906347, 0.018906819, 0.018911806, 0.018912278, 0.018918597, 0.018919069, 0.018928389, 0.018928875, 0.018942181, 0.018942667, 0.018950819, 0.018951292, 0.018956764, 0.01895725, 0.018966389, 0.018966875, 0.018974194, 0.018974667, 0.018985653, 0.018986125, 0.018995778, 0.01899625, 0.019003597, 0.019004069]}</msg>
<status status="PASS" starttime="20201110 08:33:40.158" endtime="20201110 08:33:40.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.154" endtime="20201110 08:33:40.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.166" level="INFO">${RESULT} = [{'time': 0.018538736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018543347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:40.163" endtime="20201110 08:33:40.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:40.180" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-...</msg>
<status status="PASS" starttime="20201110 08:33:40.167" endtime="20201110 08:33:40.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.184" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:40.183" endtime="20201110 08:33:40.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.187" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:33:40.185" endtime="20201110 08:33:40.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.181" endtime="20201110 08:33:40.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.190" endtime="20201110 08:33:40.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.193" endtime="20201110 08:33:40.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.192" endtime="20201110 08:33:40.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.188" endtime="20201110 08:33:40.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.782" endtime="20201110 08:33:40.214"></status>
</kw>
<msg timestamp="20201110 08:33:40.214" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.222" endtime="20201110 08:33:40.231"></status>
</kw>
<msg timestamp="20201110 08:33:40.232" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.220" endtime="20201110 08:33:40.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.234" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.233" endtime="20201110 08:33:40.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.235" endtime="20201110 08:33:40.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.218" endtime="20201110 08:33:40.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.216" endtime="20201110 08:33:40.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.244" endtime="20201110 08:33:40.531"></status>
</kw>
<msg timestamp="20201110 08:33:40.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018401944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018402417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.243" endtime="20201110 08:33:40.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018401944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018402417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.536" endtime="20201110 08:33:40.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.544" endtime="20201110 08:33:40.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.240" endtime="20201110 08:33:40.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.238" endtime="20201110 08:33:40.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.551" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:40.549" endtime="20201110 08:33:40.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.556" level="INFO">VALUE: [{'time': 0.018401944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018402417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018408083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.018408556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018417028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.0184175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018425319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.018425806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018434611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.018435097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018440403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018440889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018452361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1472000000001953e-05, 'source_diff': 1.1472000000001953e-05}, {'time': 0.018452847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018460153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.018460639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018470306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.018470778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01848075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.018481222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018495875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652999999999888e-05, 'source_diff': 1.4652999999999888e-05}, {'time': 0.018496347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0185015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018501972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018512125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0153000000002327e-05, 'source_diff': 1.0153000000002327e-05}, {'time': 0.018512597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018517917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.018518389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018528042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.018528514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018532667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018533139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018540444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.018540917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018547417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.018547889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018556194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.018556667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018565986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.018566458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018578472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2013999999997693e-05, 'source_diff': 1.2013999999997693e-05}, {'time': 0.018578944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018592403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3459000000000387e-05, 'source_diff': 1.3459000000000387e-05}, {'time': 0.018592875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018597694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.819000000003126e-06, 'source_diff': 4.819000000003126e-06}, {'time': 0.018598167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018610986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.018611472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018622111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.018622597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018635083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.018635556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01864125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.018641722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018648319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.018648806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018654958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.151999999998853e-06, 'source_diff': 6.151999999998853e-06}, {'time': 0.018655431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018660097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.018660569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018669111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.018669583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0186835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3916999999998708e-05, 'source_diff': 1.3916999999998708e-05}, {'time': 0.018683972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018690958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.018691431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018697792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.018698264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01870975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.018710222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018722528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2306000000000122e-05, 'source_diff': 1.2306000000000122e-05}, {'time': 0.018723, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018730125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018730611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018738417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805999999999091e-06, 'source_diff': 7.805999999999091e-06}, {'time': 0.018738903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018746208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.018746694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018761, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4305999999998653e-05, 'source_diff': 1.4305999999998653e-05}, {'time': 0.018761486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018774306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2820000000000192e-05, 'source_diff': 1.2820000000000192e-05}, {'time': 0.018774778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018785931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.018786403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018790528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.018791014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018795139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1249999999971865e-06, 'source_diff': 4.1249999999971865e-06}, {'time': 0.018795611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018806931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1319999999998692e-05, 'source_diff': 1.1319999999998692e-05}, {'time': 0.018807403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018820722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3319000000001219e-05, 'source_diff': 1.3319000000001219e-05}, {'time': 0.018821194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018834181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2986999999999027e-05, 'source_diff': 1.2986999999999027e-05}, {'time': 0.018834653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018845472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999998719e-05, 'source_diff': 1.0818999999998719e-05}, {'time': 0.018845958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018852278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.01885275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018862736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.018863208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:40.552" endtime="20201110 08:33:40.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.547" endtime="20201110 08:33:40.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:40.583" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7300000000083386e-07, 5.665999999997923e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.818999999999188e-06, 4.870000000004038e-07, 8.805000000000618...</msg>
<status status="PASS" starttime="20201110 08:33:40.558" endtime="20201110 08:33:40.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.587" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:40.586" endtime="20201110 08:33:40.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.591" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 5.665999999997923e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.818999999999188e-06, 4.870000000004038e-07, 8.805000000000618e-06, 4.860000000009301e-07, 5.306000000000061e-06, 4.859999999974607e-07, 1.1472000000001953e-05, 4.860000000009301e-07, 7.305999999998591e-06, 4.860000000009301e-07, 9.666999999997927e-06, 4.720000000013602e-07, 9.972000000000453e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.0153000000002327e-05, 4.7199999999789077e-07, 5.319999999999631e-06, 4.720000000013602e-07, 9.653000000001827e-06, 4.7199999999789077e-07, 4.152999999999796e-06, 4.720000000013602e-07, 7.304999999999118e-06, 4.7300000000083386e-07, 6.499999999999562e-06, 4.720000000013602e-07, 8.305000000000118e-06, 4.729999999973644e-07, 9.319000000000688e-06, 4.720000000013602e-07, 1.2013999999997693e-05, 4.720000000013602e-07, 1.3459000000000387e-05, 4.7199999999789077e-07, 4.819000000003126e-06, 4.729999999973644e-07, 1.2819000000000719e-05, 4.860000000009301e-07, 1.0638999999999788e-05, 4.860000000009301e-07, 1.2485999999999053e-05, 4.7300000000083386e-07, 5.694000000000532e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.870000000004038e-07, 6.151999999998853e-06, 4.7300000000083386e-07, 4.666000000000392e-06, 4.7199999999789077e-07, 8.542000000000272e-06, 4.720000000013602e-07, 1.3916999999998708e-05, 4.720000000013602e-07, 6.986000000000492e-06, 4.7300000000083386e-07, 6.360999999999867e-06, 4.7199999999789077e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 1.2306000000000122e-05, 4.720000000013602e-07, 7.125000000000187e-06, 4.860000000009301e-07, 7.805999999999091e-06, 4.860000000009301e-07, 7.304999999999118e-06, 4.860000000009301e-07, 1.4305999999998653e-05, 4.860000000009301e-07, 1.2820000000000192e-05, 4.7199999999789077e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 4.125000000000656e-06, 4.860000000009301e-07, 4.1249999999971865e-06, 4.720000000013602e-07, 1.1319999999998692e-05, 4.720000000013602e-07, 1.3319000000001219e-05, 4.7199999999789077e-07, 1.2986999999999027e-05, 4.720000000013602e-07, 1.0818999999998719e-05, 4.860000000009301e-07, 6.320000000000631e-06, 4.720000000013602e-07, 9.986000000000023e-06, 4.7199999999789077e-07], 'eventdiff': [0, 4.7300000000083386e-07, 5.665999999997923e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.818999999999188e-06, 4.870000000004038e-07, 8.805000000000618e-06, 4.860000000009301e-07, 5.306000000000061e-06, 4.859999999974607e-07, 1.1472000000001953e-05, 4.860000000009301e-07, 7.305999999998591e-06, 4.860000000009301e-07, 9.666999999997927e-06, 4.720000000013602e-07, 9.972000000000453e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.0153000000002327e-05, 4.7199999999789077e-07, 5.319999999999631e-06, 4.720000000013602e-07, 9.653000000001827e-06, 4.7199999999789077e-07, 4.152999999999796e-06, 4.720000000013602e-07, 7.304999999999118e-06, 4.7300000000083386e-07, 6.499999999999562e-06, 4.720000000013602e-07, 8.305000000000118e-06, 4.729999999973644e-07, 9.319000000000688e-06, 4.720000000013602e-07, 1.2013999999997693e-05, 4.720000000013602e-07, 1.3459000000000387e-05, 4.7199999999789077e-07, 4.819000000003126e-06, 4.729999999973644e-07, 1.2819000000000719e-05, 4.860000000009301e-07, 1.0638999999999788e-05, 4.860000000009301e-07, 1.2485999999999053e-05, 4.7300000000083386e-07, 5.694000000000532e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.870000000004038e-07, 6.151999999998853e-06, 4.7300000000083386e-07, 4.666000000000392e-06, 4.7199999999789077e-07, 8.542000000000272e-06, 4.720000000013602e-07, 1.3916999999998708e-05, 4.720000000013602e-07, 6.986000000000492e-06, 4.7300000000083386e-07, 6.360999999999867e-06, 4.7199999999789077e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 1.2306000000000122e-05, 4.720000000013602e-07, 7.125000000000187e-06, 4.860000000009301e-07, 7.805999999999091e-06, 4.860000000009301e-07, 7.304999999999118e-06, 4.860000000009301e-07, 1.4305999999998653e-05, 4.860000000009301e-07, 1.2820000000000192e-05, 4.7199999999789077e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 4.125000000000656e-06, 4.860000000009301e-07, 4.1249999999971865e-06, 4.720000000013602e-07, 1.1319999999998692e-05, 4.720000000013602e-07, 1.3319000000001219e-05, 4.7199999999789077e-07, 1.2986999999999027e-05, 4.720000000013602e-07, 1.0818999999998719e-05, 4.860000000009301e-07, 6.320000000000631e-06, 4.720000000013602e-07, 9.986000000000023e-06, 4.7199999999789077e-07], 'sourcetime': [0.018401944, 0.018402417, 0.018408083, 0.018408556, 0.018417028, 0.0184175, 0.018425319, 0.018425806, 0.018434611, 0.018435097, 0.018440403, 0.018440889, 0.018452361, 0.018452847, 0.018460153, 0.018460639, 0.018470306, 0.018470778, 0.01848075, 0.018481222, 0.018495875, 0.018496347, 0.0185015, 0.018501972, 0.018512125, 0.018512597, 0.018517917, 0.018518389, 0.018528042, 0.018528514, 0.018532667, 0.018533139, 0.018540444, 0.018540917, 0.018547417, 0.018547889, 0.018556194, 0.018556667, 0.018565986, 0.018566458, 0.018578472, 0.018578944, 0.018592403, 0.018592875, 0.018597694, 0.018598167, 0.018610986, 0.018611472, 0.018622111, 0.018622597, 0.018635083, 0.018635556, 0.01864125, 0.018641722, 0.018648319, 0.018648806, 0.018654958, 0.018655431, 0.018660097, 0.018660569, 0.018669111, 0.018669583, 0.0186835, 0.018683972, 0.018690958, 0.018691431, 0.018697792, 0.018698264, 0.01870975, 0.018710222, 0.018722528, 0.018723, 0.018730125, 0.018730611, 0.018738417, 0.018738903, 0.018746208, 0.018746694, 0.018761, 0.018761486, 0.018774306, 0.018774778, 0.018785931, 0.018786403, 0.018790528, 0.018791014, 0.018795139, 0.018795611, 0.018806931, 0.018807403, 0.018820722, 0.018821194, 0.018834181, 0.018834653, 0.018845472, 0.018845958, 0.018852278, 0.01885275, 0.018862736, 0.018863208]}</msg>
<status status="PASS" starttime="20201110 08:33:40.588" endtime="20201110 08:33:40.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.584" endtime="20201110 08:33:40.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.597" level="INFO">${RESULT} = [{'time': 0.018402417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018408556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:40.594" endtime="20201110 08:33:40.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:40.610" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-0...</msg>
<status status="PASS" starttime="20201110 08:33:40.598" endtime="20201110 08:33:40.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.615" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:40.614" endtime="20201110 08:33:40.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.617" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:33:40.616" endtime="20201110 08:33:40.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.611" endtime="20201110 08:33:40.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.620" endtime="20201110 08:33:40.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.623" endtime="20201110 08:33:40.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.622" endtime="20201110 08:33:40.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.618" endtime="20201110 08:33:40.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.215" endtime="20201110 08:33:40.644"></status>
</kw>
<msg timestamp="20201110 08:33:40.644" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.652" endtime="20201110 08:33:40.662"></status>
</kw>
<msg timestamp="20201110 08:33:40.662" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.650" endtime="20201110 08:33:40.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.665" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.663" endtime="20201110 08:33:40.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.666" endtime="20201110 08:33:40.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.648" endtime="20201110 08:33:40.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.646" endtime="20201110 08:33:40.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.675" endtime="20201110 08:33:40.962"></status>
</kw>
<msg timestamp="20201110 08:33:40.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018366042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018366514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.674" endtime="20201110 08:33:40.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018366042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018366514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.966" endtime="20201110 08:33:40.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.975" endtime="20201110 08:33:40.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.671" endtime="20201110 08:33:40.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.670" endtime="20201110 08:33:40.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.981" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:40.980" endtime="20201110 08:33:40.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.986" level="INFO">VALUE: [{'time': 0.018366042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018366514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018379625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3110999999999678e-05, 'source_diff': 1.3110999999999678e-05}, {'time': 0.018380111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018390917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805999999998622e-05, 'source_diff': 1.0805999999998622e-05}, {'time': 0.018391403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018397556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.018398028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018403833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.018404319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018412292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.973000000001396e-06, 'source_diff': 7.973000000001396e-06}, {'time': 0.018412778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018420431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.018420903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018434236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3333000000000789e-05, 'source_diff': 1.3333000000000789e-05}, {'time': 0.018434708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018448181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472999999999957e-05, 'source_diff': 1.3472999999999957e-05}, {'time': 0.018448653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018454139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486000000002461e-06, 'source_diff': 5.486000000002461e-06}, {'time': 0.018454611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018462097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.018462569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018472556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986999999999496e-06, 'source_diff': 9.986999999999496e-06}, {'time': 0.018473028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018481847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.018482319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018489806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4870000000004655e-06, 'source_diff': 7.4870000000004655e-06}, {'time': 0.018490278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018494931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018495403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018500903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.018501375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018508681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.018509153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018521139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1985999999998553e-05, 'source_diff': 1.1985999999998553e-05}, {'time': 0.018521625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018534278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2653000000001358e-05, 'source_diff': 1.2653000000001358e-05}, {'time': 0.01853475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018547403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2653000000001358e-05, 'source_diff': 1.2653000000001358e-05}, {'time': 0.018547875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018554028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.0185545, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018561833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.018562306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018568278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.01856875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018576236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.018576708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018587361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.018587833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018596, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.018596472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018609778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3306000000001122e-05, 'source_diff': 1.3306000000001122e-05}, {'time': 0.01861025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018615569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.018616042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018630694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652000000000415e-05, 'source_diff': 1.4652000000000415e-05}, {'time': 0.018631167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018644486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.331899999999775e-05, 'source_diff': 1.331899999999775e-05}, {'time': 0.018644972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018652944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.018653431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018661583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.151999999997384e-06, 'source_diff': 8.151999999997384e-06}, {'time': 0.018662056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018674528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.018675014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018679333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.018679806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018687292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.018687764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018695917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018696389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018700514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.018701, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018713486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2486000000002523e-05, 'source_diff': 1.2486000000002523e-05}, {'time': 0.018713958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018725431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1473000000001427e-05, 'source_diff': 1.1473000000001427e-05}, {'time': 0.018725917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018731389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018731875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018744028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2153000000000858e-05, 'source_diff': 1.2153000000000858e-05}, {'time': 0.0187445, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018757319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.018757792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018768611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819000000002188e-05, 'source_diff': 1.0819000000002188e-05}, {'time': 0.018769083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018773736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018774208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018785028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819999999998192e-05, 'source_diff': 1.0819999999998192e-05}, {'time': 0.0187855, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018796653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.018797125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018811278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999999388e-05, 'source_diff': 1.4152999999999388e-05}, {'time': 0.01881175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018820569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.018821056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018829028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.018829514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.0188385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.018838972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:40.982" endtime="20201110 08:33:40.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.978" endtime="20201110 08:33:40.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:41.012" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 1.3110999999999678e-05, 4.860000000009301e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 5.80500000000108...</msg>
<status status="PASS" starttime="20201110 08:33:40.989" endtime="20201110 08:33:41.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.016" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:41.015" endtime="20201110 08:33:41.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.020" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 1.3110999999999678e-05, 4.860000000009301e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 5.805000000001087e-06, 4.859999999974607e-07, 7.973000000001396e-06, 4.860000000009301e-07, 7.652999999999827e-06, 4.7199999999789077e-07, 1.3333000000000789e-05, 4.720000000013602e-07, 1.3472999999999957e-05, 4.7199999999789077e-07, 5.486000000002461e-06, 4.7199999999789077e-07, 7.486000000000992e-06, 4.720000000013602e-07, 9.986999999999496e-06, 4.7199999999789077e-07, 8.819000000000188e-06, 4.720000000013602e-07, 7.4870000000004655e-06, 4.7199999999789077e-07, 4.653000000000296e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.720000000013602e-07, 1.1985999999998553e-05, 4.860000000009301e-07, 1.2653000000001358e-05, 4.7199999999789077e-07, 1.2653000000001358e-05, 4.7199999999789077e-07, 6.153000000001796e-06, 4.720000000013602e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 7.486000000000992e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 1.3306000000001122e-05, 4.7199999999789077e-07, 5.319000000000157e-06, 4.7300000000083386e-07, 1.4652000000000415e-05, 4.7300000000083386e-07, 1.331899999999775e-05, 4.860000000009301e-07, 7.972000000001922e-06, 4.870000000004038e-07, 8.151999999997384e-06, 4.7300000000083386e-07, 1.2471999999999483e-05, 4.860000000009301e-07, 4.318999999999157e-06, 4.7300000000083386e-07, 7.486000000000992e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 4.125000000000656e-06, 4.859999999974607e-07, 1.2486000000002523e-05, 4.7199999999789077e-07, 1.1473000000001427e-05, 4.860000000009301e-07, 5.471999999999422e-06, 4.859999999974607e-07, 1.2153000000000858e-05, 4.720000000013602e-07, 1.2819000000000719e-05, 4.729999999973644e-07, 1.0819000000002188e-05, 4.7199999999789077e-07, 4.653000000000296e-06, 4.720000000013602e-07, 1.0819999999998192e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.4152999999999388e-05, 4.7199999999789077e-07, 8.819000000000188e-06, 4.870000000004038e-07, 7.972000000001922e-06, 4.859999999974607e-07, 8.986000000002492e-06, 4.7199999999789077e-07], 'eventdiff': [0, 4.720000000013602e-07, 1.3110999999999678e-05, 4.860000000009301e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 5.805000000001087e-06, 4.859999999974607e-07, 7.973000000001396e-06, 4.860000000009301e-07, 7.652999999999827e-06, 4.7199999999789077e-07, 1.3333000000000789e-05, 4.720000000013602e-07, 1.3472999999999957e-05, 4.7199999999789077e-07, 5.486000000002461e-06, 4.7199999999789077e-07, 7.486000000000992e-06, 4.720000000013602e-07, 9.986999999999496e-06, 4.7199999999789077e-07, 8.819000000000188e-06, 4.720000000013602e-07, 7.4870000000004655e-06, 4.7199999999789077e-07, 4.653000000000296e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.720000000013602e-07, 1.1985999999998553e-05, 4.860000000009301e-07, 1.2653000000001358e-05, 4.7199999999789077e-07, 1.2653000000001358e-05, 4.7199999999789077e-07, 6.153000000001796e-06, 4.720000000013602e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 7.486000000000992e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 1.3306000000001122e-05, 4.7199999999789077e-07, 5.319000000000157e-06, 4.7300000000083386e-07, 1.4652000000000415e-05, 4.7300000000083386e-07, 1.331899999999775e-05, 4.860000000009301e-07, 7.972000000001922e-06, 4.870000000004038e-07, 8.151999999997384e-06, 4.7300000000083386e-07, 1.2471999999999483e-05, 4.860000000009301e-07, 4.318999999999157e-06, 4.7300000000083386e-07, 7.486000000000992e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 4.125000000000656e-06, 4.859999999974607e-07, 1.2486000000002523e-05, 4.7199999999789077e-07, 1.1473000000001427e-05, 4.860000000009301e-07, 5.471999999999422e-06, 4.859999999974607e-07, 1.2153000000000858e-05, 4.720000000013602e-07, 1.2819000000000719e-05, 4.729999999973644e-07, 1.0819000000002188e-05, 4.7199999999789077e-07, 4.653000000000296e-06, 4.720000000013602e-07, 1.0819999999998192e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.4152999999999388e-05, 4.7199999999789077e-07, 8.819000000000188e-06, 4.870000000004038e-07, 7.972000000001922e-06, 4.859999999974607e-07, 8.986000000002492e-06, 4.7199999999789077e-07], 'sourcetime': [0.018366042, 0.018366514, 0.018379625, 0.018380111, 0.018390917, 0.018391403, 0.018397556, 0.018398028, 0.018403833, 0.018404319, 0.018412292, 0.018412778, 0.018420431, 0.018420903, 0.018434236, 0.018434708, 0.018448181, 0.018448653, 0.018454139, 0.018454611, 0.018462097, 0.018462569, 0.018472556, 0.018473028, 0.018481847, 0.018482319, 0.018489806, 0.018490278, 0.018494931, 0.018495403, 0.018500903, 0.018501375, 0.018508681, 0.018509153, 0.018521139, 0.018521625, 0.018534278, 0.01853475, 0.018547403, 0.018547875, 0.018554028, 0.0185545, 0.018561833, 0.018562306, 0.018568278, 0.01856875, 0.018576236, 0.018576708, 0.018587361, 0.018587833, 0.018596, 0.018596472, 0.018609778, 0.01861025, 0.018615569, 0.018616042, 0.018630694, 0.018631167, 0.018644486, 0.018644972, 0.018652944, 0.018653431, 0.018661583, 0.018662056, 0.018674528, 0.018675014, 0.018679333, 0.018679806, 0.018687292, 0.018687764, 0.018695917, 0.018696389, 0.018700514, 0.018701, 0.018713486, 0.018713958, 0.018725431, 0.018725917, 0.018731389, 0.018731875, 0.018744028, 0.0187445, 0.018757319, 0.018757792, 0.018768611, 0.018769083, 0.018773736, 0.018774208, 0.018785028, 0.0187855, 0.018796653, 0.018797125, 0.018811278, 0.01881175, 0.018820569, 0.018821056, 0.018829028, 0.018829514, 0.0188385, 0.018838972]}</msg>
<status status="PASS" starttime="20201110 08:33:41.017" endtime="20201110 08:33:41.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.013" endtime="20201110 08:33:41.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.026" level="INFO">${RESULT} = [{'time': 0.018366514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018380111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:41.022" endtime="20201110 08:33:41.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:41.040" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07...</msg>
<status status="PASS" starttime="20201110 08:33:41.027" endtime="20201110 08:33:41.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.044" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:41.043" endtime="20201110 08:33:41.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.046" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:33:41.045" endtime="20201110 08:33:41.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.041" endtime="20201110 08:33:41.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.049" endtime="20201110 08:33:41.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.053" endtime="20201110 08:33:41.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.051" endtime="20201110 08:33:41.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.048" endtime="20201110 08:33:41.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.645" endtime="20201110 08:33:41.074"></status>
</kw>
<msg timestamp="20201110 08:33:41.074" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.081" endtime="20201110 08:33:41.091"></status>
</kw>
<msg timestamp="20201110 08:33:41.092" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.080" endtime="20201110 08:33:41.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.094" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.093" endtime="20201110 08:33:41.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.095" endtime="20201110 08:33:41.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.077" endtime="20201110 08:33:41.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.076" endtime="20201110 08:33:41.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.104" endtime="20201110 08:33:41.389"></status>
</kw>
<msg timestamp="20201110 08:33:41.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018263181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018263653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.103" endtime="20201110 08:33:41.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018263181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018263653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.393" endtime="20201110 08:33:41.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.402" endtime="20201110 08:33:41.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.100" endtime="20201110 08:33:41.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.098" endtime="20201110 08:33:41.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.408" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:41.407" endtime="20201110 08:33:41.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.413" level="INFO">VALUE: [{'time': 0.018263181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018263653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018274806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.018275278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018286569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1291000000000079e-05, 'source_diff': 1.1291000000000079e-05}, {'time': 0.018287042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018299028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1985999999998553e-05, 'source_diff': 1.1985999999998553e-05}, {'time': 0.0182995, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018311153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.018311639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018318958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.018319431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018334083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652000000000415e-05, 'source_diff': 1.4652000000000415e-05}, {'time': 0.018334556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018343694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138000000002283e-06, 'source_diff': 9.138000000002283e-06}, {'time': 0.018344181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018351319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138000000000283e-06, 'source_diff': 7.138000000000283e-06}, {'time': 0.018351806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018363972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2166000000000954e-05, 'source_diff': 1.2166000000000954e-05}, {'time': 0.018364444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01837375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.018374222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018384208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.018384681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018391667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.018392139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018406458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4319000000002219e-05, 'source_diff': 1.4319000000002219e-05}, {'time': 0.018406931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018420917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3985999999997084e-05, 'source_diff': 1.3985999999997084e-05}, {'time': 0.018421389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018434208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.018434694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018442014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.018442486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018451292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.018451778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018456917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018457403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018462708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.018463194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018471528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.3340000000022e-06, 'source_diff': 8.3340000000022e-06}, {'time': 0.018472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018485972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.018486444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018492278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.01849275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018503722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0972000000001453e-05, 'source_diff': 1.0972000000001453e-05}, {'time': 0.018504194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018511514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.018511986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018518972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.018519444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018529764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.018530236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018541222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0986000000001023e-05, 'source_diff': 1.0986000000001023e-05}, {'time': 0.018541694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018548181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.018548653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018557639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.018558125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018567264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.01856775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018575903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018576375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018583347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.018583833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018589306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.018589792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018596931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.018597417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018608903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.018609375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018620694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1318999999999219e-05, 'source_diff': 1.1318999999999219e-05}, {'time': 0.018621167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018631, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.018631472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018639333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.018639806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018653403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3597000000000609e-05, 'source_diff': 1.3597000000000609e-05}, {'time': 0.018653875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018663028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.0186635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018671653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018672139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018681458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.018681931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018688903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.018689389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018703861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4471999999998014e-05, 'source_diff': 1.4471999999998014e-05}, {'time': 0.018704347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018718653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4305999999998653e-05, 'source_diff': 1.4305999999998653e-05}, {'time': 0.018719139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018726806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.018727278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018738583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1304999999999649e-05, 'source_diff': 1.1304999999999649e-05}, {'time': 0.018739056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018743375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.018743847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0187495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.018749972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:41.409" endtime="20201110 08:33:41.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.405" endtime="20201110 08:33:41.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:41.439" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999789077e-07, 1.1291000000000079e-05, 4.7300000000083386e-07, 1.1985999999998553e-05, 4.720000000013602e-07, 1.165300000000...</msg>
<status status="PASS" starttime="20201110 08:33:41.416" endtime="20201110 08:33:41.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.443" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:41.442" endtime="20201110 08:33:41.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.447" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999789077e-07, 1.1291000000000079e-05, 4.7300000000083386e-07, 1.1985999999998553e-05, 4.720000000013602e-07, 1.1653000000000358e-05, 4.860000000009301e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 1.4652000000000415e-05, 4.729999999973644e-07, 9.138000000002283e-06, 4.870000000004038e-07, 7.138000000000283e-06, 4.869999999969343e-07, 1.2166000000000954e-05, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 9.986000000000023e-06, 4.7300000000083386e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 1.4319000000002219e-05, 4.7300000000083386e-07, 1.3985999999997084e-05, 4.720000000013602e-07, 1.2819000000000719e-05, 4.860000000009301e-07, 7.319999999998161e-06, 4.720000000013602e-07, 8.806000000000092e-06, 4.859999999974607e-07, 5.139000000001226e-06, 4.860000000009301e-07, 5.305000000000587e-06, 4.859999999974607e-07, 8.3340000000022e-06, 4.7199999999789077e-07, 1.3972000000000984e-05, 4.720000000013602e-07, 5.8339999999997005e-06, 4.7199999999789077e-07, 1.0972000000001453e-05, 4.720000000013602e-07, 7.319999999998161e-06, 4.720000000013602e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 1.0986000000001023e-05, 4.720000000013602e-07, 6.486999999999465e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.860000000009301e-07, 9.138999999998287e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 6.972000000000922e-06, 4.860000000009301e-07, 5.472999999998895e-06, 4.860000000009301e-07, 7.138999999999757e-06, 4.860000000009301e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 1.1318999999999219e-05, 4.7300000000083386e-07, 9.833000000000758e-06, 4.7199999999789077e-07, 7.861000000001367e-06, 4.729999999973644e-07, 1.3597000000000609e-05, 4.720000000013602e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 9.319000000000688e-06, 4.729999999973644e-07, 6.972000000000922e-06, 4.860000000009301e-07, 1.4471999999998014e-05, 4.860000000009301e-07, 1.4305999999998653e-05, 4.860000000009301e-07, 7.666999999999397e-06, 4.720000000013602e-07, 1.1304999999999649e-05, 4.7300000000083386e-07, 4.318999999999157e-06, 4.720000000013602e-07, 5.6529999999978264e-06, 4.720000000013602e-07], 'eventdiff': [0, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999789077e-07, 1.1291000000000079e-05, 4.7300000000083386e-07, 1.1985999999998553e-05, 4.720000000013602e-07, 1.1653000000000358e-05, 4.860000000009301e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 1.4652000000000415e-05, 4.729999999973644e-07, 9.138000000002283e-06, 4.870000000004038e-07, 7.138000000000283e-06, 4.869999999969343e-07, 1.2166000000000954e-05, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 9.986000000000023e-06, 4.7300000000083386e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 1.4319000000002219e-05, 4.7300000000083386e-07, 1.3985999999997084e-05, 4.720000000013602e-07, 1.2819000000000719e-05, 4.860000000009301e-07, 7.319999999998161e-06, 4.720000000013602e-07, 8.806000000000092e-06, 4.859999999974607e-07, 5.139000000001226e-06, 4.860000000009301e-07, 5.305000000000587e-06, 4.859999999974607e-07, 8.3340000000022e-06, 4.7199999999789077e-07, 1.3972000000000984e-05, 4.720000000013602e-07, 5.8339999999997005e-06, 4.7199999999789077e-07, 1.0972000000001453e-05, 4.720000000013602e-07, 7.319999999998161e-06, 4.720000000013602e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 1.0986000000001023e-05, 4.720000000013602e-07, 6.486999999999465e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.860000000009301e-07, 9.138999999998287e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 6.972000000000922e-06, 4.860000000009301e-07, 5.472999999998895e-06, 4.860000000009301e-07, 7.138999999999757e-06, 4.860000000009301e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 1.1318999999999219e-05, 4.7300000000083386e-07, 9.833000000000758e-06, 4.7199999999789077e-07, 7.861000000001367e-06, 4.729999999973644e-07, 1.3597000000000609e-05, 4.720000000013602e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 9.319000000000688e-06, 4.729999999973644e-07, 6.972000000000922e-06, 4.860000000009301e-07, 1.4471999999998014e-05, 4.860000000009301e-07, 1.4305999999998653e-05, 4.860000000009301e-07, 7.666999999999397e-06, 4.720000000013602e-07, 1.1304999999999649e-05, 4.7300000000083386e-07, 4.318999999999157e-06, 4.720000000013602e-07, 5.6529999999978264e-06, 4.720000000013602e-07], 'sourcetime': [0.018263181, 0.018263653, 0.018274806, 0.018275278, 0.018286569, 0.018287042, 0.018299028, 0.0182995, 0.018311153, 0.018311639, 0.018318958, 0.018319431, 0.018334083, 0.018334556, 0.018343694, 0.018344181, 0.018351319, 0.018351806, 0.018363972, 0.018364444, 0.01837375, 0.018374222, 0.018384208, 0.018384681, 0.018391667, 0.018392139, 0.018406458, 0.018406931, 0.018420917, 0.018421389, 0.018434208, 0.018434694, 0.018442014, 0.018442486, 0.018451292, 0.018451778, 0.018456917, 0.018457403, 0.018462708, 0.018463194, 0.018471528, 0.018472, 0.018485972, 0.018486444, 0.018492278, 0.01849275, 0.018503722, 0.018504194, 0.018511514, 0.018511986, 0.018518972, 0.018519444, 0.018529764, 0.018530236, 0.018541222, 0.018541694, 0.018548181, 0.018548653, 0.018557639, 0.018558125, 0.018567264, 0.01856775, 0.018575903, 0.018576375, 0.018583347, 0.018583833, 0.018589306, 0.018589792, 0.018596931, 0.018597417, 0.018608903, 0.018609375, 0.018620694, 0.018621167, 0.018631, 0.018631472, 0.018639333, 0.018639806, 0.018653403, 0.018653875, 0.018663028, 0.0186635, 0.018671653, 0.018672139, 0.018681458, 0.018681931, 0.018688903, 0.018689389, 0.018703861, 0.018704347, 0.018718653, 0.018719139, 0.018726806, 0.018727278, 0.018738583, 0.018739056, 0.018743375, 0.018743847, 0.0187495, 0.018749972]}</msg>
<status status="PASS" starttime="20201110 08:33:41.444" endtime="20201110 08:33:41.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.440" endtime="20201110 08:33:41.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.453" level="INFO">${RESULT} = [{'time': 0.018263653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018275278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:41.450" endtime="20201110 08:33:41.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:41.466" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.870000000004038e-...</msg>
<status status="PASS" starttime="20201110 08:33:41.454" endtime="20201110 08:33:41.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.471" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:41.470" endtime="20201110 08:33:41.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.473" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:33:41.472" endtime="20201110 08:33:41.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.467" endtime="20201110 08:33:41.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.476" endtime="20201110 08:33:41.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.480" endtime="20201110 08:33:41.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.478" endtime="20201110 08:33:41.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.475" endtime="20201110 08:33:41.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.074" endtime="20201110 08:33:41.500"></status>
</kw>
<msg timestamp="20201110 08:33:41.500" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.508" endtime="20201110 08:33:41.518"></status>
</kw>
<msg timestamp="20201110 08:33:41.519" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.506" endtime="20201110 08:33:41.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.521" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.520" endtime="20201110 08:33:41.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.522" endtime="20201110 08:33:41.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.504" endtime="20201110 08:33:41.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.502" endtime="20201110 08:33:41.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.532" endtime="20201110 08:33:41.823"></status>
</kw>
<msg timestamp="20201110 08:33:41.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018572264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01857275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:41.531" endtime="20201110 08:33:41.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018572264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01857275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:41.827" endtime="20201110 08:33:41.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.836" endtime="20201110 08:33:41.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.528" endtime="20201110 08:33:41.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.527" endtime="20201110 08:33:41.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.842" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:41.841" endtime="20201110 08:33:41.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.847" level="INFO">VALUE: [{'time': 0.018572264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01857275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018578069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.018578542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018588181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.018588667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018594319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.652000000001822e-06, 'source_diff': 5.652000000001822e-06}, {'time': 0.018594792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0186045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.018604972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018618903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3930999999998278e-05, 'source_diff': 1.3930999999998278e-05}, {'time': 0.018619375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018627194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.018627667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018632833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.018633306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018638944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.638000000002252e-06, 'source_diff': 5.638000000002252e-06}, {'time': 0.018639417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018647736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.319000000003157e-06, 'source_diff': 8.319000000003157e-06}, {'time': 0.018648208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018658375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0167000000001897e-05, 'source_diff': 1.0167000000001897e-05}, {'time': 0.018658847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018673319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4472000000001484e-05, 'source_diff': 1.4472000000001484e-05}, {'time': 0.018673806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018683611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.018684097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018689236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018689722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018700861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1139000000000288e-05, 'source_diff': 1.1139000000000288e-05}, {'time': 0.018701347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0187135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2153000000000858e-05, 'source_diff': 1.2153000000000858e-05}, {'time': 0.018713972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018723111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000001757e-06, 'source_diff': 9.139000000001757e-06}, {'time': 0.018723597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018737417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3819999999997723e-05, 'source_diff': 1.3819999999997723e-05}, {'time': 0.018737889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018749389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1500000000001093e-05, 'source_diff': 1.1500000000001093e-05}, {'time': 0.018749861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018760333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472000000000953e-05, 'source_diff': 1.0472000000000953e-05}, {'time': 0.018760806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018767972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.165999999999423e-06, 'source_diff': 7.165999999999423e-06}, {'time': 0.018768444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018777792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.34800000000277e-06, 'source_diff': 9.34800000000277e-06}, {'time': 0.018778264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018785889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.018786361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0187965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.018796986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018805958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.018806444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018810917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.473000000001365e-06, 'source_diff': 4.473000000001365e-06}, {'time': 0.018811403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018821569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.018822042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018827833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.018828319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018834292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.018834778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018843667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.018844139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018850083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.018850556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018861361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0804999999999149e-05, 'source_diff': 1.0804999999999149e-05}, {'time': 0.018861833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018870639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.018871111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018877944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833000000001227e-06, 'source_diff': 6.833000000001227e-06}, {'time': 0.018878417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018892431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.018892903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018905347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2444000000000344e-05, 'source_diff': 1.2444000000000344e-05}, {'time': 0.018905819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018914806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986999999998496e-06, 'source_diff': 8.986999999998496e-06}, {'time': 0.018915278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018928931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3652999999998888e-05, 'source_diff': 1.3652999999998888e-05}, {'time': 0.018929417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018939389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.018939875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018951861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1986000000002023e-05, 'source_diff': 1.1986000000002023e-05}, {'time': 0.018952333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018966153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3820000000001192e-05, 'source_diff': 1.3820000000001192e-05}, {'time': 0.018966625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018974611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.018975083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01898875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3666999999998458e-05, 'source_diff': 1.3666999999998458e-05}, {'time': 0.018989222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018994861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.018995333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019006819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.019007292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019019611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319000000000219e-05, 'source_diff': 1.2319000000000219e-05}, {'time': 0.019020083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019025569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.019026042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01903775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1707999999999164e-05, 'source_diff': 1.1707999999999164e-05}, {'time': 0.019038222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019051819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3597000000000609e-05, 'source_diff': 1.3597000000000609e-05}, {'time': 0.019052306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019060444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.137999999997814e-06, 'source_diff': 8.137999999997814e-06}, {'time': 0.019060931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:41.843" endtime="20201110 08:33:41.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.839" endtime="20201110 08:33:41.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:41.873" level="INFO">${debug-compressed} = {'source_diff': [0, 4.859999999974607e-07, 5.319000000000157e-06, 4.7300000000083386e-07, 9.638999999998787e-06, 4.860000000009301e-07, 5.652000000001822e-06, 4.729999999973644e-07, 9.708000000000633e...</msg>
<status status="PASS" starttime="20201110 08:33:41.850" endtime="20201110 08:33:41.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.877" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:41.876" endtime="20201110 08:33:41.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.881" level="INFO">VALUE: {'source_diff': [0, 4.859999999974607e-07, 5.319000000000157e-06, 4.7300000000083386e-07, 9.638999999998787e-06, 4.860000000009301e-07, 5.652000000001822e-06, 4.729999999973644e-07, 9.708000000000633e-06, 4.720000000013602e-07, 1.3930999999998278e-05, 4.720000000013602e-07, 7.818999999999188e-06, 4.7300000000083386e-07, 5.166000000000892e-06, 4.729999999973644e-07, 5.638000000002252e-06, 4.729999999973644e-07, 8.319000000003157e-06, 4.7199999999789077e-07, 1.0167000000001897e-05, 4.7199999999789077e-07, 1.4472000000001484e-05, 4.870000000004038e-07, 9.804999999998149e-06, 4.860000000009301e-07, 5.139000000001226e-06, 4.859999999974607e-07, 1.1139000000000288e-05, 4.860000000009301e-07, 1.2153000000000858e-05, 4.7199999999789077e-07, 9.139000000001757e-06, 4.860000000009301e-07, 1.3819999999997723e-05, 4.720000000013602e-07, 1.1500000000001093e-05, 4.7199999999789077e-07, 1.0472000000000953e-05, 4.7300000000083386e-07, 7.165999999999423e-06, 4.7199999999789077e-07, 9.34800000000277e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.860000000009301e-07, 8.971999999999453e-06, 4.859999999974607e-07, 4.473000000001365e-06, 4.860000000009301e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 5.790999999998048e-06, 4.860000000009301e-07, 5.9729999999993955e-06, 4.860000000009301e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 5.944000000000782e-06, 4.7300000000083386e-07, 1.0804999999999149e-05, 4.720000000013602e-07, 8.806000000000092e-06, 4.7199999999789077e-07, 6.833000000001227e-06, 4.7300000000083386e-07, 1.4013999999999693e-05, 4.7199999999789077e-07, 1.2444000000000344e-05, 4.720000000013602e-07, 8.986999999998496e-06, 4.720000000013602e-07, 1.3652999999998888e-05, 4.860000000009301e-07, 9.972000000000453e-06, 4.859999999974607e-07, 1.1986000000002023e-05, 4.7199999999789077e-07, 1.3820000000001192e-05, 4.720000000013602e-07, 7.985999999998022e-06, 4.720000000013602e-07, 1.3666999999998458e-05, 4.720000000013602e-07, 5.6389999999982565e-06, 4.720000000013602e-07, 1.1486000000001523e-05, 4.729999999973644e-07, 1.2319000000000219e-05, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 1.1707999999999164e-05, 4.720000000013602e-07, 1.3597000000000609e-05, 4.870000000004038e-07, 8.137999999997814e-06, 4.870000000004038e-07], 'eventdiff': [0, 4.859999999974607e-07, 5.319000000000157e-06, 4.7300000000083386e-07, 9.638999999998787e-06, 4.860000000009301e-07, 5.652000000001822e-06, 4.729999999973644e-07, 9.708000000000633e-06, 4.720000000013602e-07, 1.3930999999998278e-05, 4.720000000013602e-07, 7.818999999999188e-06, 4.7300000000083386e-07, 5.166000000000892e-06, 4.729999999973644e-07, 5.638000000002252e-06, 4.729999999973644e-07, 8.319000000003157e-06, 4.7199999999789077e-07, 1.0167000000001897e-05, 4.7199999999789077e-07, 1.4472000000001484e-05, 4.870000000004038e-07, 9.804999999998149e-06, 4.860000000009301e-07, 5.139000000001226e-06, 4.859999999974607e-07, 1.1139000000000288e-05, 4.860000000009301e-07, 1.2153000000000858e-05, 4.7199999999789077e-07, 9.139000000001757e-06, 4.860000000009301e-07, 1.3819999999997723e-05, 4.720000000013602e-07, 1.1500000000001093e-05, 4.7199999999789077e-07, 1.0472000000000953e-05, 4.7300000000083386e-07, 7.165999999999423e-06, 4.7199999999789077e-07, 9.34800000000277e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.860000000009301e-07, 8.971999999999453e-06, 4.859999999974607e-07, 4.473000000001365e-06, 4.860000000009301e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 5.790999999998048e-06, 4.860000000009301e-07, 5.9729999999993955e-06, 4.860000000009301e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 5.944000000000782e-06, 4.7300000000083386e-07, 1.0804999999999149e-05, 4.720000000013602e-07, 8.806000000000092e-06, 4.7199999999789077e-07, 6.833000000001227e-06, 4.7300000000083386e-07, 1.4013999999999693e-05, 4.7199999999789077e-07, 1.2444000000000344e-05, 4.720000000013602e-07, 8.986999999998496e-06, 4.720000000013602e-07, 1.3652999999998888e-05, 4.860000000009301e-07, 9.972000000000453e-06, 4.859999999974607e-07, 1.1986000000002023e-05, 4.7199999999789077e-07, 1.3820000000001192e-05, 4.720000000013602e-07, 7.985999999998022e-06, 4.720000000013602e-07, 1.3666999999998458e-05, 4.720000000013602e-07, 5.6389999999982565e-06, 4.720000000013602e-07, 1.1486000000001523e-05, 4.729999999973644e-07, 1.2319000000000219e-05, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 1.1707999999999164e-05, 4.720000000013602e-07, 1.3597000000000609e-05, 4.870000000004038e-07, 8.137999999997814e-06, 4.870000000004038e-07], 'sourcetime': [0.018572264, 0.01857275, 0.018578069, 0.018578542, 0.018588181, 0.018588667, 0.018594319, 0.018594792, 0.0186045, 0.018604972, 0.018618903, 0.018619375, 0.018627194, 0.018627667, 0.018632833, 0.018633306, 0.018638944, 0.018639417, 0.018647736, 0.018648208, 0.018658375, 0.018658847, 0.018673319, 0.018673806, 0.018683611, 0.018684097, 0.018689236, 0.018689722, 0.018700861, 0.018701347, 0.0187135, 0.018713972, 0.018723111, 0.018723597, 0.018737417, 0.018737889, 0.018749389, 0.018749861, 0.018760333, 0.018760806, 0.018767972, 0.018768444, 0.018777792, 0.018778264, 0.018785889, 0.018786361, 0.0187965, 0.018796986, 0.018805958, 0.018806444, 0.018810917, 0.018811403, 0.018821569, 0.018822042, 0.018827833, 0.018828319, 0.018834292, 0.018834778, 0.018843667, 0.018844139, 0.018850083, 0.018850556, 0.018861361, 0.018861833, 0.018870639, 0.018871111, 0.018877944, 0.018878417, 0.018892431, 0.018892903, 0.018905347, 0.018905819, 0.018914806, 0.018915278, 0.018928931, 0.018929417, 0.018939389, 0.018939875, 0.018951861, 0.018952333, 0.018966153, 0.018966625, 0.018974611, 0.018975083, 0.01898875, 0.018989222, 0.018994861, 0.018995333, 0.019006819, 0.019007292, 0.019019611, 0.019020083, 0.019025569, 0.019026042, 0.01903775, 0.019038222, 0.019051819, 0.019052306, 0.019060444, 0.019060931]}</msg>
<status status="PASS" starttime="20201110 08:33:41.878" endtime="20201110 08:33:41.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.874" endtime="20201110 08:33:41.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.887" level="INFO">${RESULT} = [{'time': 0.01857275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018578542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:41.883" endtime="20201110 08:33:41.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:41.900" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-0...</msg>
<status status="PASS" starttime="20201110 08:33:41.888" endtime="20201110 08:33:41.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.905" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:41.904" endtime="20201110 08:33:41.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.907" level="INFO">VALUE: [4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.870000000004038e-07]</msg>
<status status="PASS" starttime="20201110 08:33:41.906" endtime="20201110 08:33:41.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.901" endtime="20201110 08:33:41.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.910" endtime="20201110 08:33:41.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.914" endtime="20201110 08:33:41.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.912" endtime="20201110 08:33:41.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.909" endtime="20201110 08:33:41.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.501" endtime="20201110 08:33:41.934"></status>
</kw>
<msg timestamp="20201110 08:33:41.935" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.942" endtime="20201110 08:33:41.952"></status>
</kw>
<msg timestamp="20201110 08:33:41.952" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.940" endtime="20201110 08:33:41.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.955" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.953" endtime="20201110 08:33:41.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.956" endtime="20201110 08:33:41.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.938" endtime="20201110 08:33:41.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.936" endtime="20201110 08:33:41.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.965" endtime="20201110 08:33:42.248"></status>
</kw>
<msg timestamp="20201110 08:33:42.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018267736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018268208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.963" endtime="20201110 08:33:42.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018267736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018268208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.252" endtime="20201110 08:33:42.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.261" endtime="20201110 08:33:42.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.961" endtime="20201110 08:33:42.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.959" endtime="20201110 08:33:42.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.267" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:42.266" endtime="20201110 08:33:42.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.272" level="INFO">VALUE: [{'time': 0.018267736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018268208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018280306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2097999999998582e-05, 'source_diff': 1.2097999999998582e-05}, {'time': 0.018280778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018289097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.018289569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018299903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.018300375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018307181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.018307653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018321972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.431899999999875e-05, 'source_diff': 1.431899999999875e-05}, {'time': 0.018322458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018333597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1139000000000288e-05, 'source_diff': 1.1139000000000288e-05}, {'time': 0.018334083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018345889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1805999999999622e-05, 'source_diff': 1.1805999999999622e-05}, {'time': 0.018346375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018352181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.018352667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018359653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.018360125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018372431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2306000000000122e-05, 'source_diff': 1.2306000000000122e-05}, {'time': 0.018372917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018379903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.018380375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018384861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018385333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018399319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.018399792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018406319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.018406792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018421417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4624999999997279e-05, 'source_diff': 1.4624999999997279e-05}, {'time': 0.018421889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018436528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.018437, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0184485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1500000000001093e-05, 'source_diff': 1.1500000000001093e-05}, {'time': 0.018448972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018457806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.018458278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018472736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4457999999998444e-05, 'source_diff': 1.4457999999998444e-05}, {'time': 0.018473222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018486528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3305999999997653e-05, 'source_diff': 1.3305999999997653e-05}, {'time': 0.018487014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018494986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.018495472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018501306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.018501778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01850875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.018509222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018513347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.018513833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018521986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018522458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018526764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.01852725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018538069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819000000002188e-05, 'source_diff': 1.0819000000002188e-05}, {'time': 0.018538542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018548861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0318999999998218e-05, 'source_diff': 1.0318999999998218e-05}, {'time': 0.018549333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018560486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.018560958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018574611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3653000000002358e-05, 'source_diff': 1.3653000000002358e-05}, {'time': 0.018575083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018584583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.018585056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018592361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305000000002587e-06, 'source_diff': 7.305000000002587e-06}, {'time': 0.018592833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018603319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.018603792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018617278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.01861775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018625569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819000000002657e-06, 'source_diff': 7.819000000002657e-06}, {'time': 0.018626042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018637861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1818999999999719e-05, 'source_diff': 1.1818999999999719e-05}, {'time': 0.018638347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018648833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.018649306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018661778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.018662264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018670736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.018671222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018682028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805999999998622e-05, 'source_diff': 1.0805999999998622e-05}, {'time': 0.018682514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018695333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.018695806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018710306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4500000000000624e-05, 'source_diff': 1.4500000000000624e-05}, {'time': 0.018710778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018719083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.018719556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018727708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152000000000853e-06, 'source_diff': 8.152000000000853e-06}, {'time': 0.018728181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018742667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.018743139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018755792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2653000000001358e-05, 'source_diff': 1.2653000000001358e-05}, {'time': 0.018756278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018763083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.018763569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018772583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.018773056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018786333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.327699999999904e-05, 'source_diff': 1.327699999999904e-05}, {'time': 0.018786819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:42.268" endtime="20201110 08:33:42.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.264" endtime="20201110 08:33:42.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:42.301" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 1.2097999999998582e-05, 4.720000000013602e-07, 8.318999999999688e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 6.80599999999809...</msg>
<status status="PASS" starttime="20201110 08:33:42.275" endtime="20201110 08:33:42.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.307" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:42.306" endtime="20201110 08:33:42.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.312" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 1.2097999999998582e-05, 4.720000000013602e-07, 8.318999999999688e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 1.431899999999875e-05, 4.860000000009301e-07, 1.1139000000000288e-05, 4.860000000009301e-07, 1.1805999999999622e-05, 4.860000000009301e-07, 5.805999999997091e-06, 4.860000000009301e-07, 6.986000000000492e-06, 4.720000000013602e-07, 1.2306000000000122e-05, 4.859999999974607e-07, 6.986000000000492e-06, 4.720000000013602e-07, 4.485999999997992e-06, 4.720000000013602e-07, 1.3986000000000554e-05, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 1.4624999999997279e-05, 4.720000000013602e-07, 1.4639000000000318e-05, 4.7199999999789077e-07, 1.1500000000001093e-05, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 1.4457999999998444e-05, 4.860000000009301e-07, 1.3305999999997653e-05, 4.860000000009301e-07, 7.972000000001922e-06, 4.859999999974607e-07, 5.8339999999997005e-06, 4.720000000013602e-07, 6.972000000000922e-06, 4.7199999999789077e-07, 4.125000000000656e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 4.30600000000253e-06, 4.859999999974607e-07, 1.0819000000002188e-05, 4.7300000000083386e-07, 1.0318999999998218e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999789077e-07, 1.3653000000002358e-05, 4.7199999999789077e-07, 9.499999999999093e-06, 4.7300000000083386e-07, 7.305000000002587e-06, 4.7199999999789077e-07, 1.0486000000000523e-05, 4.7300000000083386e-07, 1.3486000000000054e-05, 4.7199999999789077e-07, 7.819000000002657e-06, 4.729999999973644e-07, 1.1818999999999719e-05, 4.860000000009301e-07, 1.0486000000000523e-05, 4.7300000000083386e-07, 1.2471999999999483e-05, 4.860000000009301e-07, 8.471999999998953e-06, 4.860000000009301e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 1.2819000000000719e-05, 4.729999999973644e-07, 1.4500000000000624e-05, 4.720000000013602e-07, 8.305000000000118e-06, 4.729999999973644e-07, 8.152000000000853e-06, 4.7300000000083386e-07, 1.4486000000001054e-05, 4.7199999999789077e-07, 1.2653000000001358e-05, 4.860000000009301e-07, 6.804999999998618e-06, 4.860000000009301e-07, 9.013999999998162e-06, 4.7300000000083386e-07, 1.327699999999904e-05, 4.860000000009301e-07], 'eventdiff': [0, 4.720000000013602e-07, 1.2097999999998582e-05, 4.720000000013602e-07, 8.318999999999688e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 1.431899999999875e-05, 4.860000000009301e-07, 1.1139000000000288e-05, 4.860000000009301e-07, 1.1805999999999622e-05, 4.860000000009301e-07, 5.805999999997091e-06, 4.860000000009301e-07, 6.986000000000492e-06, 4.720000000013602e-07, 1.2306000000000122e-05, 4.859999999974607e-07, 6.986000000000492e-06, 4.720000000013602e-07, 4.485999999997992e-06, 4.720000000013602e-07, 1.3986000000000554e-05, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 1.4624999999997279e-05, 4.720000000013602e-07, 1.4639000000000318e-05, 4.7199999999789077e-07, 1.1500000000001093e-05, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 1.4457999999998444e-05, 4.860000000009301e-07, 1.3305999999997653e-05, 4.860000000009301e-07, 7.972000000001922e-06, 4.859999999974607e-07, 5.8339999999997005e-06, 4.720000000013602e-07, 6.972000000000922e-06, 4.7199999999789077e-07, 4.125000000000656e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 4.30600000000253e-06, 4.859999999974607e-07, 1.0819000000002188e-05, 4.7300000000083386e-07, 1.0318999999998218e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999789077e-07, 1.3653000000002358e-05, 4.7199999999789077e-07, 9.499999999999093e-06, 4.7300000000083386e-07, 7.305000000002587e-06, 4.7199999999789077e-07, 1.0486000000000523e-05, 4.7300000000083386e-07, 1.3486000000000054e-05, 4.7199999999789077e-07, 7.819000000002657e-06, 4.729999999973644e-07, 1.1818999999999719e-05, 4.860000000009301e-07, 1.0486000000000523e-05, 4.7300000000083386e-07, 1.2471999999999483e-05, 4.860000000009301e-07, 8.471999999998953e-06, 4.860000000009301e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 1.2819000000000719e-05, 4.729999999973644e-07, 1.4500000000000624e-05, 4.720000000013602e-07, 8.305000000000118e-06, 4.729999999973644e-07, 8.152000000000853e-06, 4.7300000000083386e-07, 1.4486000000001054e-05, 4.7199999999789077e-07, 1.2653000000001358e-05, 4.860000000009301e-07, 6.804999999998618e-06, 4.860000000009301e-07, 9.013999999998162e-06, 4.7300000000083386e-07, 1.327699999999904e-05, 4.860000000009301e-07], 'sourcetime': [0.018267736, 0.018268208, 0.018280306, 0.018280778, 0.018289097, 0.018289569, 0.018299903, 0.018300375, 0.018307181, 0.018307653, 0.018321972, 0.018322458, 0.018333597, 0.018334083, 0.018345889, 0.018346375, 0.018352181, 0.018352667, 0.018359653, 0.018360125, 0.018372431, 0.018372917, 0.018379903, 0.018380375, 0.018384861, 0.018385333, 0.018399319, 0.018399792, 0.018406319, 0.018406792, 0.018421417, 0.018421889, 0.018436528, 0.018437, 0.0184485, 0.018448972, 0.018457806, 0.018458278, 0.018472736, 0.018473222, 0.018486528, 0.018487014, 0.018494986, 0.018495472, 0.018501306, 0.018501778, 0.01850875, 0.018509222, 0.018513347, 0.018513833, 0.018521986, 0.018522458, 0.018526764, 0.01852725, 0.018538069, 0.018538542, 0.018548861, 0.018549333, 0.018560486, 0.018560958, 0.018574611, 0.018575083, 0.018584583, 0.018585056, 0.018592361, 0.018592833, 0.018603319, 0.018603792, 0.018617278, 0.01861775, 0.018625569, 0.018626042, 0.018637861, 0.018638347, 0.018648833, 0.018649306, 0.018661778, 0.018662264, 0.018670736, 0.018671222, 0.018682028, 0.018682514, 0.018695333, 0.018695806, 0.018710306, 0.018710778, 0.018719083, 0.018719556, 0.018727708, 0.018728181, 0.018742667, 0.018743139, 0.018755792, 0.018756278, 0.018763083, 0.018763569, 0.018772583, 0.018773056, 0.018786333, 0.018786819]}</msg>
<status status="PASS" starttime="20201110 08:33:42.309" endtime="20201110 08:33:42.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.302" endtime="20201110 08:33:42.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:42.319" level="INFO">${RESULT} = [{'time': 0.018268208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018280778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:42.315" endtime="20201110 08:33:42.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:42.334" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07...</msg>
<status status="PASS" starttime="20201110 08:33:42.320" endtime="20201110 08:33:42.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.340" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:42.339" endtime="20201110 08:33:42.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.344" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201110 08:33:42.342" endtime="20201110 08:33:42.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.336" endtime="20201110 08:33:42.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.348" endtime="20201110 08:33:42.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.352" endtime="20201110 08:33:42.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.350" endtime="20201110 08:33:42.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.346" endtime="20201110 08:33:42.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.935" endtime="20201110 08:33:42.374"></status>
</kw>
<msg timestamp="20201110 08:33:42.374" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.386" endtime="20201110 08:33:42.398"></status>
</kw>
<msg timestamp="20201110 08:33:42.399" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.384" endtime="20201110 08:33:42.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.403" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.400" endtime="20201110 08:33:42.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.404" endtime="20201110 08:33:42.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.380" endtime="20201110 08:33:42.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.378" endtime="20201110 08:33:42.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.419" endtime="20201110 08:33:42.706"></status>
</kw>
<msg timestamp="20201110 08:33:42.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025655681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025656153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.416" endtime="20201110 08:33:42.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025655681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025656153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.710" endtime="20201110 08:33:42.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.718" endtime="20201110 08:33:42.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.413" endtime="20201110 08:33:42.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.410" endtime="20201110 08:33:42.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.725" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:42.724" endtime="20201110 08:33:42.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.730" level="INFO">VALUE: [{'time': 0.025655681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025656153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.025663083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.929999999998743e-06, 'source_diff': 6.929999999998743e-06}, {'time': 0.025663556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.025674208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0651999999999884e-05, 'source_diff': 1.0651999999999884e-05}, {'time': 0.025674681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.025683, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.025683472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.025688847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.025689319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.025695083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.025695556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.025703375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.025703847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0257135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.025713972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.025728458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4485999999997584e-05, 'source_diff': 1.4485999999997584e-05}, {'time': 0.025728944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.025735125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.025735597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.025749903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4306000000002123e-05, 'source_diff': 1.4306000000002123e-05}, {'time': 0.025750375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.025760833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0458000000001383e-05, 'source_diff': 1.0458000000001383e-05}, {'time': 0.025761319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.025771625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305999999998122e-05, 'source_diff': 1.0305999999998122e-05}, {'time': 0.025772111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.025781931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.025782403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.025792889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.025793361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.025802014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.025802486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.025812153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.667000000001397e-06, 'source_diff': 9.667000000001397e-06}, {'time': 0.025812625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.025825931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3306000000001122e-05, 'source_diff': 1.3306000000001122e-05}, {'time': 0.025826403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.025838056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.025838528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.025849028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000000093e-05, 'source_diff': 1.0500000000000093e-05}, {'time': 0.0258495, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.025863306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805999999998153e-05, 'source_diff': 1.3805999999998153e-05}, {'time': 0.025863792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.025872264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.02587275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.025877889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.025878375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.025893028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652999999999888e-05, 'source_diff': 1.4652999999999888e-05}, {'time': 0.0258935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.025898653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.025899125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.025912444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3319000000001219e-05, 'source_diff': 1.3319000000001219e-05}, {'time': 0.025912917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.025922278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.02592275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.025927861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.025928333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.025933653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.025934125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.025946944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.025947417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.025955069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652000000000353e-06, 'source_diff': 7.652000000000353e-06}, {'time': 0.025955542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.025966861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1318999999999219e-05, 'source_diff': 1.1318999999999219e-05}, {'time': 0.025967333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.025980819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.025981306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.025995458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4151999999999915e-05, 'source_diff': 1.4151999999999915e-05}, {'time': 0.025995931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.026009403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472000000000484e-05, 'source_diff': 1.3472000000000484e-05}, {'time': 0.026009889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026014194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.026014681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.026022333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652000000000353e-06, 'source_diff': 7.652000000000353e-06}, {'time': 0.026022806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.026033458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0651999999999884e-05, 'source_diff': 1.0651999999999884e-05}, {'time': 0.026033931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.026041917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.026042389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026052556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0167000000001897e-05, 'source_diff': 1.0167000000001897e-05}, {'time': 0.026053028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026065681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2653000000001358e-05, 'source_diff': 1.2653000000001358e-05}, {'time': 0.026066153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026079792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.026080264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026094417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4153000000002858e-05, 'source_diff': 1.4153000000002858e-05}, {'time': 0.026094903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.026101556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.026102028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0261085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.026108986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026119472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.026119944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02613075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.026131236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.026135722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.026136194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026145681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.486999999998996e-06, 'source_diff': 9.486999999998996e-06}, {'time': 0.026146153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026158319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2166000000000954e-05, 'source_diff': 1.2166000000000954e-05}, {'time': 0.026158792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:42.726" endtime="20201110 08:33:42.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.722" endtime="20201110 08:33:42.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:42.756" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 6.929999999998743e-06, 4.7300000000083386e-07, 1.0651999999999884e-05, 4.7300000000083386e-07, 8.318999999999688e-06, 4.7199999999789077e-07, 5.3750000000019...</msg>
<status status="PASS" starttime="20201110 08:33:42.732" endtime="20201110 08:33:42.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.760" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:42.759" endtime="20201110 08:33:42.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.764" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 6.929999999998743e-06, 4.7300000000083386e-07, 1.0651999999999884e-05, 4.7300000000083386e-07, 8.318999999999688e-06, 4.7199999999789077e-07, 5.375000000001906e-06, 4.7199999999789077e-07, 5.764000000001851e-06, 4.7300000000083386e-07, 7.818999999999188e-06, 4.7199999999789077e-07, 9.653000000001827e-06, 4.720000000013602e-07, 1.4485999999997584e-05, 4.860000000009301e-07, 6.181000000000936e-06, 4.7199999999789077e-07, 1.4306000000002123e-05, 4.7199999999789077e-07, 1.0458000000001383e-05, 4.860000000009301e-07, 1.0305999999998122e-05, 4.860000000009301e-07, 9.820000000000662e-06, 4.7199999999789077e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 8.653000000000827e-06, 4.7199999999789077e-07, 9.667000000001397e-06, 4.7199999999789077e-07, 1.3306000000001122e-05, 4.720000000013602e-07, 1.1653000000000358e-05, 4.7199999999789077e-07, 1.0500000000000093e-05, 4.720000000013602e-07, 1.3805999999998153e-05, 4.860000000009301e-07, 8.471999999998953e-06, 4.860000000009301e-07, 5.139000000001226e-06, 4.859999999974607e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.3319000000001219e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 5.110999999998617e-06, 4.720000000013602e-07, 5.319999999999631e-06, 4.7199999999789077e-07, 1.2819000000000719e-05, 4.7300000000083386e-07, 7.652000000000353e-06, 4.7300000000083386e-07, 1.1318999999999219e-05, 4.7199999999789077e-07, 1.3486000000000054e-05, 4.870000000004038e-07, 1.4151999999999915e-05, 4.7300000000083386e-07, 1.3472000000000484e-05, 4.860000000009301e-07, 4.304999999999587e-06, 4.870000000004038e-07, 7.652000000000353e-06, 4.729999999973644e-07, 1.0651999999999884e-05, 4.7300000000083386e-07, 7.986000000001492e-06, 4.7199999999789077e-07, 1.0167000000001897e-05, 4.7199999999789077e-07, 1.2653000000001358e-05, 4.720000000013602e-07, 1.3638999999999318e-05, 4.7199999999789077e-07, 1.4153000000002858e-05, 4.859999999974607e-07, 6.653000000002296e-06, 4.7199999999789077e-07, 6.472000000000422e-06, 4.860000000009301e-07, 1.0486000000000523e-05, 4.7199999999789077e-07, 1.0806000000002092e-05, 4.859999999974607e-07, 4.486000000001461e-06, 4.720000000013602e-07, 9.486999999998996e-06, 4.7199999999789077e-07, 1.2166000000000954e-05, 4.7300000000083386e-07], 'eventdiff': [0, 4.720000000013602e-07, 6.929999999998743e-06, 4.7300000000083386e-07, 1.0651999999999884e-05, 4.7300000000083386e-07, 8.318999999999688e-06, 4.7199999999789077e-07, 5.375000000001906e-06, 4.7199999999789077e-07, 5.764000000001851e-06, 4.7300000000083386e-07, 7.818999999999188e-06, 4.7199999999789077e-07, 9.653000000001827e-06, 4.720000000013602e-07, 1.4485999999997584e-05, 4.860000000009301e-07, 6.181000000000936e-06, 4.7199999999789077e-07, 1.4306000000002123e-05, 4.7199999999789077e-07, 1.0458000000001383e-05, 4.860000000009301e-07, 1.0305999999998122e-05, 4.860000000009301e-07, 9.820000000000662e-06, 4.7199999999789077e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 8.653000000000827e-06, 4.7199999999789077e-07, 9.667000000001397e-06, 4.7199999999789077e-07, 1.3306000000001122e-05, 4.720000000013602e-07, 1.1653000000000358e-05, 4.7199999999789077e-07, 1.0500000000000093e-05, 4.720000000013602e-07, 1.3805999999998153e-05, 4.860000000009301e-07, 8.471999999998953e-06, 4.860000000009301e-07, 5.139000000001226e-06, 4.859999999974607e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.3319000000001219e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 5.110999999998617e-06, 4.720000000013602e-07, 5.319999999999631e-06, 4.7199999999789077e-07, 1.2819000000000719e-05, 4.7300000000083386e-07, 7.652000000000353e-06, 4.7300000000083386e-07, 1.1318999999999219e-05, 4.7199999999789077e-07, 1.3486000000000054e-05, 4.870000000004038e-07, 1.4151999999999915e-05, 4.7300000000083386e-07, 1.3472000000000484e-05, 4.860000000009301e-07, 4.304999999999587e-06, 4.870000000004038e-07, 7.652000000000353e-06, 4.729999999973644e-07, 1.0651999999999884e-05, 4.7300000000083386e-07, 7.986000000001492e-06, 4.7199999999789077e-07, 1.0167000000001897e-05, 4.7199999999789077e-07, 1.2653000000001358e-05, 4.720000000013602e-07, 1.3638999999999318e-05, 4.7199999999789077e-07, 1.4153000000002858e-05, 4.859999999974607e-07, 6.653000000002296e-06, 4.7199999999789077e-07, 6.472000000000422e-06, 4.860000000009301e-07, 1.0486000000000523e-05, 4.7199999999789077e-07, 1.0806000000002092e-05, 4.859999999974607e-07, 4.486000000001461e-06, 4.720000000013602e-07, 9.486999999998996e-06, 4.7199999999789077e-07, 1.2166000000000954e-05, 4.7300000000083386e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.025655681, 0.025656153, 0.025663083, 0.025663556, 0.025674208, 0.025674681, 0.025683, 0.025683472, 0.025688847, 0.025689319, 0.025695083, 0.025695556, 0.025703375, 0.025703847, 0.0257135, 0.025713972, 0.025728458, 0.025728944, 0.025735125, 0.025735597, 0.025749903, 0.025750375, 0.025760833, 0.025761319, 0.025771625, 0.025772111, 0.025781931, 0.025782403, 0.025792889, 0.025793361, 0.025802014, 0.025802486, 0.025812153, 0.025812625, 0.025825931, 0.025826403, 0.025838056, 0.025838528, 0.025849028, 0.0258495, 0.025863306, 0.025863792, 0.025872264, 0.02587275, 0.025877889, 0.025878375, 0.025893028, 0.0258935, 0.025898653, 0.025899125, 0.025912444, 0.025912917, 0.025922278, 0.02592275, 0.025927861, 0.025928333, 0.025933653, 0.025934125, 0.025946944, 0.025947417, 0.025955069, 0.025955542, 0.025966861, 0.025967333, 0.025980819, 0.025981306, 0.025995458, 0.025995931, 0.026009403, 0.026009889, 0.026014194, 0.026014681, 0.026022333, 0.026022806, 0.026033458, 0.026033931, 0.026041917, 0.026042389, 0.026052556, 0.026053028, 0.026065681, 0.026066153, 0.026079792, 0.026080264, 0.026094417, 0.026094903, 0.026101556, 0.026102028, 0.0261085, 0.026108986, 0.026119472, 0.026119944, 0.02613075, 0.026131236, 0.026135722, 0.026136194, 0.026145681, 0.026146153, 0.026158319, 0.026158792]}</msg>
<status status="PASS" starttime="20201110 08:33:42.761" endtime="20201110 08:33:42.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.757" endtime="20201110 08:33:42.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:42.770" level="INFO">${RESULT} = [{'time': 0.025656153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.025663556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:42.766" endtime="20201110 08:33:42.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:42.783" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.72000000001360...</msg>
<status status="PASS" starttime="20201110 08:33:42.771" endtime="20201110 08:33:42.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.788" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:42.787" endtime="20201110 08:33:42.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.790" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:33:42.789" endtime="20201110 08:33:42.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.784" endtime="20201110 08:33:42.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.793" endtime="20201110 08:33:42.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.797" endtime="20201110 08:33:42.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.795" endtime="20201110 08:33:42.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.792" endtime="20201110 08:33:42.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.375" endtime="20201110 08:33:42.817"></status>
</kw>
<msg timestamp="20201110 08:33:42.818" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.825" endtime="20201110 08:33:42.836"></status>
</kw>
<msg timestamp="20201110 08:33:42.836" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.824" endtime="20201110 08:33:42.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.837" endtime="20201110 08:33:42.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.840" endtime="20201110 08:33:42.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.821" endtime="20201110 08:33:42.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.819" endtime="20201110 08:33:42.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.849" endtime="20201110 08:33:43.137"></status>
</kw>
<msg timestamp="20201110 08:33:43.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0185515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018551986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:42.847" endtime="20201110 08:33:43.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0185515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018551986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:43.141" endtime="20201110 08:33:43.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.150" endtime="20201110 08:33:43.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.845" endtime="20201110 08:33:43.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.843" endtime="20201110 08:33:43.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.156" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:43.155" endtime="20201110 08:33:43.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.161" level="INFO">VALUE: [{'time': 0.0185515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018551986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018556806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.018557278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018566931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.018567403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01858025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.018580722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018593014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2292000000000552e-05, 'source_diff': 1.2292000000000552e-05}, {'time': 0.018593486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018602153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.018602625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018613778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.01861425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018623889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.639000000002257e-06, 'source_diff': 9.639000000002257e-06}, {'time': 0.018624361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018635194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.018635667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018649819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4151999999999915e-05, 'source_diff': 1.4151999999999915e-05}, {'time': 0.018650292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018657111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819000000001657e-06, 'source_diff': 6.819000000001657e-06}, {'time': 0.018657583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018667389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.018667875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018673347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018673833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018680667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.834000000000701e-06, 'source_diff': 6.834000000000701e-06}, {'time': 0.018681139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018690292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.018690764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018696403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.018696875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018701194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.018701667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018708486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.818999999998188e-06, 'source_diff': 6.818999999998188e-06}, {'time': 0.018708958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018716444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.485999999997522e-06, 'source_diff': 7.485999999997522e-06}, {'time': 0.018716917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018724736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.018725208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018733375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.018733847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018742653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.018743125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018750125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.018750597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018765069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4471999999998014e-05, 'source_diff': 1.4471999999998014e-05}, {'time': 0.018765556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018769708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152000000000322e-06, 'source_diff': 4.152000000000322e-06}, {'time': 0.018770181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018780139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958000000000883e-06, 'source_diff': 9.958000000000883e-06}, {'time': 0.018780611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018794444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.018794917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018805722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0804999999999149e-05, 'source_diff': 1.0804999999999149e-05}, {'time': 0.018806194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018818514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2320000000003162e-05, 'source_diff': 1.2320000000003162e-05}, {'time': 0.018819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018827653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.018828125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018835431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.018835917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018841056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.018841542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018855347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805000000002149e-05, 'source_diff': 1.3805000000002149e-05}, {'time': 0.018855833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018862986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.018863458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018874278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.01887475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01888475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.018885222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018894528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.018895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018903486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.018903958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018915611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.018916083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018927431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1348000000001301e-05, 'source_diff': 1.1348000000001301e-05}, {'time': 0.018927903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018935861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.018936347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018944153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805999999999091e-06, 'source_diff': 7.805999999999091e-06}, {'time': 0.018944639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018953278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.018953764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018959917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.018960389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018974361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3971999999997514e-05, 'source_diff': 1.3971999999997514e-05}, {'time': 0.018974847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.018986472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018999806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3334000000000262e-05, 'source_diff': 1.3334000000000262e-05}, {'time': 0.019000278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01900875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.019009222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019016889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.019017361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019028833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.019029306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:43.157" endtime="20201110 08:33:43.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.153" endtime="20201110 08:33:43.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:43.188" level="INFO">${debug-compressed} = {'source_diff': [0, 4.860000000009301e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.2846999999999859e-05, 4.720000000013602e-07, 1.229200000000055...</msg>
<status status="PASS" starttime="20201110 08:33:43.164" endtime="20201110 08:33:43.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.192" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:43.191" endtime="20201110 08:33:43.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.196" level="INFO">VALUE: {'source_diff': [0, 4.860000000009301e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.2846999999999859e-05, 4.720000000013602e-07, 1.2292000000000552e-05, 4.7199999999789077e-07, 8.667000000000397e-06, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999789077e-07, 9.639000000002257e-06, 4.7199999999789077e-07, 1.0833000000001758e-05, 4.7300000000083386e-07, 1.4151999999999915e-05, 4.729999999973644e-07, 6.819000000001657e-06, 4.7199999999789077e-07, 9.806000000001092e-06, 4.860000000009301e-07, 5.471999999999422e-06, 4.860000000009301e-07, 6.834000000000701e-06, 4.7199999999789077e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 5.639000000001726e-06, 4.720000000013602e-07, 4.318999999999157e-06, 4.7300000000083386e-07, 6.818999999998188e-06, 4.720000000013602e-07, 7.485999999997522e-06, 4.7300000000083386e-07, 7.818999999999188e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.720000000013602e-07, 8.806000000000092e-06, 4.7199999999789077e-07, 7.000000000000062e-06, 4.720000000013602e-07, 1.4471999999998014e-05, 4.870000000004038e-07, 4.152000000000322e-06, 4.7300000000083386e-07, 9.958000000000883e-06, 4.7199999999789077e-07, 1.3833000000001289e-05, 4.7300000000083386e-07, 1.0804999999999149e-05, 4.7199999999789077e-07, 1.2320000000003162e-05, 4.859999999974607e-07, 8.653000000000827e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.860000000009301e-07, 5.1389999999977565e-06, 4.860000000009301e-07, 1.3805000000002149e-05, 4.859999999974607e-07, 7.153000000002796e-06, 4.7199999999789077e-07, 1.0820000000001662e-05, 4.7199999999789077e-07, 9.999999999999593e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 1.1653000000000358e-05, 4.720000000013602e-07, 1.1348000000001301e-05, 4.7199999999789077e-07, 7.957999999998883e-06, 4.860000000009301e-07, 7.805999999999091e-06, 4.860000000009301e-07, 8.639000000001257e-06, 4.860000000009301e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 1.3971999999997514e-05, 4.860000000009301e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.3334000000000262e-05, 4.7199999999789077e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.666999999999397e-06, 4.720000000013602e-07, 1.1471999999998483e-05, 4.7300000000083386e-07], 'eventdiff': [0, 4.860000000009301e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.2846999999999859e-05, 4.720000000013602e-07, 1.2292000000000552e-05, 4.7199999999789077e-07, 8.667000000000397e-06, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999789077e-07, 9.639000000002257e-06, 4.7199999999789077e-07, 1.0833000000001758e-05, 4.7300000000083386e-07, 1.4151999999999915e-05, 4.729999999973644e-07, 6.819000000001657e-06, 4.7199999999789077e-07, 9.806000000001092e-06, 4.860000000009301e-07, 5.471999999999422e-06, 4.860000000009301e-07, 6.834000000000701e-06, 4.7199999999789077e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 5.639000000001726e-06, 4.720000000013602e-07, 4.318999999999157e-06, 4.7300000000083386e-07, 6.818999999998188e-06, 4.720000000013602e-07, 7.485999999997522e-06, 4.7300000000083386e-07, 7.818999999999188e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.720000000013602e-07, 8.806000000000092e-06, 4.7199999999789077e-07, 7.000000000000062e-06, 4.720000000013602e-07, 1.4471999999998014e-05, 4.870000000004038e-07, 4.152000000000322e-06, 4.7300000000083386e-07, 9.958000000000883e-06, 4.7199999999789077e-07, 1.3833000000001289e-05, 4.7300000000083386e-07, 1.0804999999999149e-05, 4.7199999999789077e-07, 1.2320000000003162e-05, 4.859999999974607e-07, 8.653000000000827e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.860000000009301e-07, 5.1389999999977565e-06, 4.860000000009301e-07, 1.3805000000002149e-05, 4.859999999974607e-07, 7.153000000002796e-06, 4.7199999999789077e-07, 1.0820000000001662e-05, 4.7199999999789077e-07, 9.999999999999593e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 1.1653000000000358e-05, 4.720000000013602e-07, 1.1348000000001301e-05, 4.7199999999789077e-07, 7.957999999998883e-06, 4.860000000009301e-07, 7.805999999999091e-06, 4.860000000009301e-07, 8.639000000001257e-06, 4.860000000009301e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 1.3971999999997514e-05, 4.860000000009301e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.3334000000000262e-05, 4.7199999999789077e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.666999999999397e-06, 4.720000000013602e-07, 1.1471999999998483e-05, 4.7300000000083386e-07], 'sourcetime': [0.0185515, 0.018551986, 0.018556806, 0.018557278, 0.018566931, 0.018567403, 0.01858025, 0.018580722, 0.018593014, 0.018593486, 0.018602153, 0.018602625, 0.018613778, 0.01861425, 0.018623889, 0.018624361, 0.018635194, 0.018635667, 0.018649819, 0.018650292, 0.018657111, 0.018657583, 0.018667389, 0.018667875, 0.018673347, 0.018673833, 0.018680667, 0.018681139, 0.018690292, 0.018690764, 0.018696403, 0.018696875, 0.018701194, 0.018701667, 0.018708486, 0.018708958, 0.018716444, 0.018716917, 0.018724736, 0.018725208, 0.018733375, 0.018733847, 0.018742653, 0.018743125, 0.018750125, 0.018750597, 0.018765069, 0.018765556, 0.018769708, 0.018770181, 0.018780139, 0.018780611, 0.018794444, 0.018794917, 0.018805722, 0.018806194, 0.018818514, 0.018819, 0.018827653, 0.018828125, 0.018835431, 0.018835917, 0.018841056, 0.018841542, 0.018855347, 0.018855833, 0.018862986, 0.018863458, 0.018874278, 0.01887475, 0.01888475, 0.018885222, 0.018894528, 0.018895, 0.018903486, 0.018903958, 0.018915611, 0.018916083, 0.018927431, 0.018927903, 0.018935861, 0.018936347, 0.018944153, 0.018944639, 0.018953278, 0.018953764, 0.018959917, 0.018960389, 0.018974361, 0.018974847, 0.018986, 0.018986472, 0.018999806, 0.019000278, 0.01900875, 0.019009222, 0.019016889, 0.019017361, 0.019028833, 0.019029306]}</msg>
<status status="PASS" starttime="20201110 08:33:43.193" endtime="20201110 08:33:43.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.189" endtime="20201110 08:33:43.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.202" level="INFO">${RESULT} = [{'time': 0.018551986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018557278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:43.198" endtime="20201110 08:33:43.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:43.215" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-...</msg>
<status status="PASS" starttime="20201110 08:33:43.203" endtime="20201110 08:33:43.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.219" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:43.218" endtime="20201110 08:33:43.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.222" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:33:43.220" endtime="20201110 08:33:43.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.216" endtime="20201110 08:33:43.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.225" endtime="20201110 08:33:43.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.228" endtime="20201110 08:33:43.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.227" endtime="20201110 08:33:43.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.223" endtime="20201110 08:33:43.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.818" endtime="20201110 08:33:43.249"></status>
</kw>
<msg timestamp="20201110 08:33:43.249" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.257" endtime="20201110 08:33:43.267"></status>
</kw>
<msg timestamp="20201110 08:33:43.267" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.255" endtime="20201110 08:33:43.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.270" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.268" endtime="20201110 08:33:43.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.271" endtime="20201110 08:33:43.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.252" endtime="20201110 08:33:43.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.251" endtime="20201110 08:33:43.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.280" endtime="20201110 08:33:43.568"></status>
</kw>
<msg timestamp="20201110 08:33:43.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018532861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018533333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.278" endtime="20201110 08:33:43.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018532861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018533333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.573" endtime="20201110 08:33:43.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.581" endtime="20201110 08:33:43.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.276" endtime="20201110 08:33:43.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.274" endtime="20201110 08:33:43.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.588" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:43.587" endtime="20201110 08:33:43.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.593" level="INFO">VALUE: [{'time': 0.018532861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018533333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018542167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.018542639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018556958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.431899999999875e-05, 'source_diff': 1.431899999999875e-05}, {'time': 0.018557431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018566736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.018567208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018576194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.018576681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018588833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2151999999997914e-05, 'source_diff': 1.2151999999997914e-05}, {'time': 0.018589306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018595278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018595764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018607111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1346999999998358e-05, 'source_diff': 1.1346999999998358e-05}, {'time': 0.018607583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018615375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.018615847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018621, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.018621472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018629958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.018630431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018643417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2985999999999553e-05, 'source_diff': 1.2985999999999553e-05}, {'time': 0.018643889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018654708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999998719e-05, 'source_diff': 1.0818999999998719e-05}, {'time': 0.018655181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018663667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.018664139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018672292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018672764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018681083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.018681556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018695389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.018695861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018704667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.018705153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018719458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4305000000002649e-05, 'source_diff': 1.4305000000002649e-05}, {'time': 0.018719944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018729917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972999999999926e-06, 'source_diff': 9.972999999999926e-06}, {'time': 0.018730403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018741556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.018742028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018755347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.331899999999775e-05, 'source_diff': 1.331899999999775e-05}, {'time': 0.018755819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0187615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.018761972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018769597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.018770069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018783778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3709000000000637e-05, 'source_diff': 1.3709000000000637e-05}, {'time': 0.01878425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018791181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.018791653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018796167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018796639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018807597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0957999999998413e-05, 'source_diff': 1.0957999999998413e-05}, {'time': 0.018808069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018819056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0987000000000496e-05, 'source_diff': 1.0987000000000496e-05}, {'time': 0.018819542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018828847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.304999999997648e-06, 'source_diff': 9.304999999997648e-06}, {'time': 0.018829333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018839806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0473000000000426e-05, 'source_diff': 1.0473000000000426e-05}, {'time': 0.018840292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018847764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4719999999979525e-06, 'source_diff': 7.4719999999979525e-06}, {'time': 0.01884825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018860069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1818999999999719e-05, 'source_diff': 1.1818999999999719e-05}, {'time': 0.018860542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018867861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.018868333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018873, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018873472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018884611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1139000000000288e-05, 'source_diff': 1.1139000000000288e-05}, {'time': 0.018885083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018896903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1819999999999192e-05, 'source_diff': 1.1819999999999192e-05}, {'time': 0.018897375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018908528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.018909, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018919167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0167000000001897e-05, 'source_diff': 1.0167000000001897e-05}, {'time': 0.018919639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018927944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.018928417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018934403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018934889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018939528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018940014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018952333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.231899999999675e-05, 'source_diff': 1.231899999999675e-05}, {'time': 0.018952806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018963153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.018963625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018970403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.018970889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018978361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4719999999979525e-06, 'source_diff': 7.4719999999979525e-06}, {'time': 0.018978847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0189845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018984972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018999125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999999388e-05, 'source_diff': 1.4152999999999388e-05}, {'time': 0.018999597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01901125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.019011722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019017542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819999999996661e-06, 'source_diff': 5.819999999996661e-06}, {'time': 0.019018014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:43.589" endtime="20201110 08:33:43.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.584" endtime="20201110 08:33:43.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:43.619" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7199999999789077e-07, 8.833999999999231e-06, 4.720000000013602e-07, 1.431899999999875e-05, 4.7300000000083386e-07, 9.305000000001118e-06, 4.720000000013602e-07, 8.985999999999023...</msg>
<status status="PASS" starttime="20201110 08:33:43.595" endtime="20201110 08:33:43.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.623" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:43.622" endtime="20201110 08:33:43.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.627" level="INFO">VALUE: {'source_diff': [0, 4.7199999999789077e-07, 8.833999999999231e-06, 4.720000000013602e-07, 1.431899999999875e-05, 4.7300000000083386e-07, 9.305000000001118e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.870000000004038e-07, 1.2151999999997914e-05, 4.7300000000083386e-07, 5.971999999999922e-06, 4.860000000009301e-07, 1.1346999999998358e-05, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 5.152999999997326e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 1.2985999999999553e-05, 4.720000000013602e-07, 1.0818999999998719e-05, 4.7300000000083386e-07, 8.485999999998523e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.720000000013602e-07, 8.318999999999688e-06, 4.729999999973644e-07, 1.3833000000001289e-05, 4.720000000013602e-07, 8.806000000000092e-06, 4.859999999974607e-07, 1.4305000000002649e-05, 4.859999999974607e-07, 9.972999999999926e-06, 4.860000000009301e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.331899999999775e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 1.3709000000000637e-05, 4.7199999999789077e-07, 6.931000000001686e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 1.0957999999998413e-05, 4.720000000013602e-07, 1.0987000000000496e-05, 4.860000000009301e-07, 9.304999999997648e-06, 4.860000000009301e-07, 1.0473000000000426e-05, 4.860000000009301e-07, 7.4719999999979525e-06, 4.860000000009301e-07, 1.1818999999999719e-05, 4.7300000000083386e-07, 7.318999999998688e-06, 4.720000000013602e-07, 4.666999999999866e-06, 4.7199999999789077e-07, 1.1139000000000288e-05, 4.720000000013602e-07, 1.1819999999999192e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999789077e-07, 1.0167000000001897e-05, 4.7199999999789077e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.860000000009301e-07, 1.231899999999675e-05, 4.7300000000083386e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 6.7779999999989515e-06, 4.860000000009301e-07, 7.4719999999979525e-06, 4.860000000009301e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 1.4152999999999388e-05, 4.720000000013602e-07, 1.1653000000000358e-05, 4.720000000013602e-07, 5.819999999996661e-06, 4.720000000013602e-07], 'eventdiff': [0, 4.7199999999789077e-07, 8.833999999999231e-06, 4.720000000013602e-07, 1.431899999999875e-05, 4.7300000000083386e-07, 9.305000000001118e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.870000000004038e-07, 1.2151999999997914e-05, 4.7300000000083386e-07, 5.971999999999922e-06, 4.860000000009301e-07, 1.1346999999998358e-05, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 5.152999999997326e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 1.2985999999999553e-05, 4.720000000013602e-07, 1.0818999999998719e-05, 4.7300000000083386e-07, 8.485999999998523e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.720000000013602e-07, 8.318999999999688e-06, 4.729999999973644e-07, 1.3833000000001289e-05, 4.720000000013602e-07, 8.806000000000092e-06, 4.859999999974607e-07, 1.4305000000002649e-05, 4.859999999974607e-07, 9.972999999999926e-06, 4.860000000009301e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.331899999999775e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 1.3709000000000637e-05, 4.7199999999789077e-07, 6.931000000001686e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 1.0957999999998413e-05, 4.720000000013602e-07, 1.0987000000000496e-05, 4.860000000009301e-07, 9.304999999997648e-06, 4.860000000009301e-07, 1.0473000000000426e-05, 4.860000000009301e-07, 7.4719999999979525e-06, 4.860000000009301e-07, 1.1818999999999719e-05, 4.7300000000083386e-07, 7.318999999998688e-06, 4.720000000013602e-07, 4.666999999999866e-06, 4.7199999999789077e-07, 1.1139000000000288e-05, 4.720000000013602e-07, 1.1819999999999192e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999789077e-07, 1.0167000000001897e-05, 4.7199999999789077e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.860000000009301e-07, 1.231899999999675e-05, 4.7300000000083386e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 6.7779999999989515e-06, 4.860000000009301e-07, 7.4719999999979525e-06, 4.860000000009301e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 1.4152999999999388e-05, 4.720000000013602e-07, 1.1653000000000358e-05, 4.720000000013602e-07, 5.819999999996661e-06, 4.720000000013602e-07], 'sourcetime': [0.018532861, 0.018533333, 0.018542167, 0.018542639, 0.018556958, 0.018557431, 0.018566736, 0.018567208, 0.018576194, 0.018576681, 0.018588833, 0.018589306, 0.018595278, 0.018595764, 0.018607111, 0.018607583, 0.018615375, 0.018615847, 0.018621, 0.018621472, 0.018629958, 0.018630431, 0.018643417, 0.018643889, 0.018654708, 0.018655181, 0.018663667, 0.018664139, 0.018672292, 0.018672764, 0.018681083, 0.018681556, 0.018695389, 0.018695861, 0.018704667, 0.018705153, 0.018719458, 0.018719944, 0.018729917, 0.018730403, 0.018741556, 0.018742028, 0.018755347, 0.018755819, 0.0187615, 0.018761972, 0.018769597, 0.018770069, 0.018783778, 0.01878425, 0.018791181, 0.018791653, 0.018796167, 0.018796639, 0.018807597, 0.018808069, 0.018819056, 0.018819542, 0.018828847, 0.018829333, 0.018839806, 0.018840292, 0.018847764, 0.01884825, 0.018860069, 0.018860542, 0.018867861, 0.018868333, 0.018873, 0.018873472, 0.018884611, 0.018885083, 0.018896903, 0.018897375, 0.018908528, 0.018909, 0.018919167, 0.018919639, 0.018927944, 0.018928417, 0.018934403, 0.018934889, 0.018939528, 0.018940014, 0.018952333, 0.018952806, 0.018963153, 0.018963625, 0.018970403, 0.018970889, 0.018978361, 0.018978847, 0.0189845, 0.018984972, 0.018999125, 0.018999597, 0.01901125, 0.019011722, 0.019017542, 0.019018014]}</msg>
<status status="PASS" starttime="20201110 08:33:43.624" endtime="20201110 08:33:43.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.619" endtime="20201110 08:33:43.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.633" level="INFO">${RESULT} = [{'time': 0.018533333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018542639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:43.630" endtime="20201110 08:33:43.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:43.649" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-...</msg>
<status status="PASS" starttime="20201110 08:33:43.634" endtime="20201110 08:33:43.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.655" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:43.653" endtime="20201110 08:33:43.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.658" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:33:43.656" endtime="20201110 08:33:43.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.650" endtime="20201110 08:33:43.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.662" endtime="20201110 08:33:43.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.667" endtime="20201110 08:33:43.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.665" endtime="20201110 08:33:43.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.660" endtime="20201110 08:33:43.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.249" endtime="20201110 08:33:43.688"></status>
</kw>
<msg timestamp="20201110 08:33:43.688" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.696" endtime="20201110 08:33:43.705"></status>
</kw>
<msg timestamp="20201110 08:33:43.706" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.694" endtime="20201110 08:33:43.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.708" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.707" endtime="20201110 08:33:43.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.709" endtime="20201110 08:33:43.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.692" endtime="20201110 08:33:43.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.690" endtime="20201110 08:33:43.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.718" endtime="20201110 08:33:44.007"></status>
</kw>
<msg timestamp="20201110 08:33:44.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018569681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018570167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.717" endtime="20201110 08:33:44.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018569681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018570167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.011" endtime="20201110 08:33:44.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.020" endtime="20201110 08:33:44.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.714" endtime="20201110 08:33:44.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.712" endtime="20201110 08:33:44.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.026" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:44.025" endtime="20201110 08:33:44.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.031" level="INFO">VALUE: [{'time': 0.018569681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018570167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018578194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027000000000728e-06, 'source_diff': 8.027000000000728e-06}, {'time': 0.018578667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018588444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.776999999999009e-06, 'source_diff': 9.776999999999009e-06}, {'time': 0.018588917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018601931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013999999998693e-05, 'source_diff': 1.3013999999998693e-05}, {'time': 0.018602403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018611194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.791000000001048e-06, 'source_diff': 8.791000000001048e-06}, {'time': 0.018611667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018625486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3819000000001719e-05, 'source_diff': 1.3819000000001719e-05}, {'time': 0.018625958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018635278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.01863575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018645292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.018645764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018651694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.018652167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018661, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.018661472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018672278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.018672764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018679264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.018679736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018689028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.018689514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018699194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.018699667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018706278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000000117e-06, 'source_diff': 6.611000000000117e-06}, {'time': 0.018706764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01871725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.018717722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018722542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.018723014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018732167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.018732639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018745458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.018745931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018758306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2374999999998498e-05, 'source_diff': 1.2374999999998498e-05}, {'time': 0.018758778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018770208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1429999999999774e-05, 'source_diff': 1.1429999999999774e-05}, {'time': 0.018770681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01878, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.018780472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018793639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3167000000001428e-05, 'source_diff': 1.3167000000001428e-05}, {'time': 0.018794111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018803278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.01880375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018810542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.018811028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018818847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.018819319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018825819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.018826292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018837931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1638999999997318e-05, 'source_diff': 1.1638999999997318e-05}, {'time': 0.018838403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018846569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166000000000423e-06, 'source_diff': 8.166000000000423e-06}, {'time': 0.018847042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018853014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018853486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018857819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.018858292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018870097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1805000000000149e-05, 'source_diff': 1.1805000000000149e-05}, {'time': 0.018870569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018880056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.486999999998996e-06, 'source_diff': 9.486999999998996e-06}, {'time': 0.018880528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018893347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.018893819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018905653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1834000000002232e-05, 'source_diff': 1.1834000000002232e-05}, {'time': 0.018906125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018915431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.018915917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018920556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018921042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018929528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.01893, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018944639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.018945125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018951931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.018952417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018957069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.018957542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018961667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.018962139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018970625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.018971097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01898275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.018983236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018993208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.018993694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018998014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.018998486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019003194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000002571e-06, 'source_diff': 4.708000000002571e-06}, {'time': 0.019003667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019016444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2777000000002009e-05, 'source_diff': 1.2777000000002009e-05}, {'time': 0.019016917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019022556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.019023028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019035389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.019035861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:44.028" endtime="20201110 08:33:44.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.023" endtime="20201110 08:33:44.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:44.058" level="INFO">${debug-compressed} = {'source_diff': [0, 4.859999999974607e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 9.776999999999009e-06, 4.7300000000083386e-07, 1.3013999999998693e-05, 4.720000000013602e-07, 8.79100000000104...</msg>
<status status="PASS" starttime="20201110 08:33:44.034" endtime="20201110 08:33:44.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.062" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:44.061" endtime="20201110 08:33:44.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.066" level="INFO">VALUE: {'source_diff': [0, 4.859999999974607e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 9.776999999999009e-06, 4.7300000000083386e-07, 1.3013999999998693e-05, 4.720000000013602e-07, 8.791000000001048e-06, 4.729999999973644e-07, 1.3819000000001719e-05, 4.720000000013602e-07, 9.320000000000161e-06, 4.7199999999789077e-07, 9.542000000001272e-06, 4.7199999999789077e-07, 5.930000000001212e-06, 4.7300000000083386e-07, 8.832999999999758e-06, 4.7199999999789077e-07, 1.0806000000002092e-05, 4.860000000009301e-07, 6.499999999999562e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.860000000009301e-07, 9.679999999998024e-06, 4.7300000000083386e-07, 6.611000000000117e-06, 4.860000000009301e-07, 1.0486000000000523e-05, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 1.2819000000000719e-05, 4.7300000000083386e-07, 1.2374999999998498e-05, 4.720000000013602e-07, 1.1429999999999774e-05, 4.7300000000083386e-07, 9.319000000000688e-06, 4.7199999999789077e-07, 1.3167000000001428e-05, 4.7199999999789077e-07, 9.167000000000897e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.860000000009301e-07, 7.818999999999188e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 1.1638999999997318e-05, 4.720000000013602e-07, 8.166000000000423e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 4.333000000002196e-06, 4.729999999973644e-07, 1.1805000000000149e-05, 4.720000000013602e-07, 9.486999999998996e-06, 4.720000000013602e-07, 1.2819000000000719e-05, 4.7199999999789077e-07, 1.1834000000002232e-05, 4.7199999999789077e-07, 9.306000000000592e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.859999999974607e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 1.4639000000000318e-05, 4.860000000009301e-07, 6.806000000001561e-06, 4.859999999974607e-07, 4.652000000000822e-06, 4.7300000000083386e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 1.1653000000000358e-05, 4.860000000009301e-07, 9.972000000000453e-06, 4.859999999974607e-07, 4.3200000000021e-06, 4.7199999999789077e-07, 4.708000000002571e-06, 4.729999999973644e-07, 1.2777000000002009e-05, 4.7300000000083386e-07, 5.6389999999982565e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07], 'eventdiff': [0, 4.859999999974607e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 9.776999999999009e-06, 4.7300000000083386e-07, 1.3013999999998693e-05, 4.720000000013602e-07, 8.791000000001048e-06, 4.729999999973644e-07, 1.3819000000001719e-05, 4.720000000013602e-07, 9.320000000000161e-06, 4.7199999999789077e-07, 9.542000000001272e-06, 4.7199999999789077e-07, 5.930000000001212e-06, 4.7300000000083386e-07, 8.832999999999758e-06, 4.7199999999789077e-07, 1.0806000000002092e-05, 4.860000000009301e-07, 6.499999999999562e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.860000000009301e-07, 9.679999999998024e-06, 4.7300000000083386e-07, 6.611000000000117e-06, 4.860000000009301e-07, 1.0486000000000523e-05, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 1.2819000000000719e-05, 4.7300000000083386e-07, 1.2374999999998498e-05, 4.720000000013602e-07, 1.1429999999999774e-05, 4.7300000000083386e-07, 9.319000000000688e-06, 4.7199999999789077e-07, 1.3167000000001428e-05, 4.7199999999789077e-07, 9.167000000000897e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.860000000009301e-07, 7.818999999999188e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 1.1638999999997318e-05, 4.720000000013602e-07, 8.166000000000423e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 4.333000000002196e-06, 4.729999999973644e-07, 1.1805000000000149e-05, 4.720000000013602e-07, 9.486999999998996e-06, 4.720000000013602e-07, 1.2819000000000719e-05, 4.7199999999789077e-07, 1.1834000000002232e-05, 4.7199999999789077e-07, 9.306000000000592e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.859999999974607e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 1.4639000000000318e-05, 4.860000000009301e-07, 6.806000000001561e-06, 4.859999999974607e-07, 4.652000000000822e-06, 4.7300000000083386e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 1.1653000000000358e-05, 4.860000000009301e-07, 9.972000000000453e-06, 4.859999999974607e-07, 4.3200000000021e-06, 4.7199999999789077e-07, 4.708000000002571e-06, 4.729999999973644e-07, 1.2777000000002009e-05, 4.7300000000083386e-07, 5.6389999999982565e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07], 'sourcetime': [0.018569681, 0.018570167, 0.018578194, 0.018578667, 0.018588444, 0.018588917, 0.018601931, 0.018602403, 0.018611194, 0.018611667, 0.018625486, 0.018625958, 0.018635278, 0.01863575, 0.018645292, 0.018645764, 0.018651694, 0.018652167, 0.018661, 0.018661472, 0.018672278, 0.018672764, 0.018679264, 0.018679736, 0.018689028, 0.018689514, 0.018699194, 0.018699667, 0.018706278, 0.018706764, 0.01871725, 0.018717722, 0.018722542, 0.018723014, 0.018732167, 0.018732639, 0.018745458, 0.018745931, 0.018758306, 0.018758778, 0.018770208, 0.018770681, 0.01878, 0.018780472, 0.018793639, 0.018794111, 0.018803278, 0.01880375, 0.018810542, 0.018811028, 0.018818847, 0.018819319, 0.018825819, 0.018826292, 0.018837931, 0.018838403, 0.018846569, 0.018847042, 0.018853014, 0.018853486, 0.018857819, 0.018858292, 0.018870097, 0.018870569, 0.018880056, 0.018880528, 0.018893347, 0.018893819, 0.018905653, 0.018906125, 0.018915431, 0.018915917, 0.018920556, 0.018921042, 0.018929528, 0.01893, 0.018944639, 0.018945125, 0.018951931, 0.018952417, 0.018957069, 0.018957542, 0.018961667, 0.018962139, 0.018970625, 0.018971097, 0.01898275, 0.018983236, 0.018993208, 0.018993694, 0.018998014, 0.018998486, 0.019003194, 0.019003667, 0.019016444, 0.019016917, 0.019022556, 0.019023028, 0.019035389, 0.019035861]}</msg>
<status status="PASS" starttime="20201110 08:33:44.063" endtime="20201110 08:33:44.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.059" endtime="20201110 08:33:44.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:44.072" level="INFO">${RESULT} = [{'time': 0.018570167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018578667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:44.068" endtime="20201110 08:33:44.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:44.085" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e...</msg>
<status status="PASS" starttime="20201110 08:33:44.073" endtime="20201110 08:33:44.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.089" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:44.088" endtime="20201110 08:33:44.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.092" level="INFO">VALUE: [4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:33:44.090" endtime="20201110 08:33:44.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.086" endtime="20201110 08:33:44.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.095" endtime="20201110 08:33:44.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.098" endtime="20201110 08:33:44.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.097" endtime="20201110 08:33:44.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.093" endtime="20201110 08:33:44.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.689" endtime="20201110 08:33:44.119"></status>
</kw>
<msg timestamp="20201110 08:33:44.119" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.127" endtime="20201110 08:33:44.137"></status>
</kw>
<msg timestamp="20201110 08:33:44.138" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.125" endtime="20201110 08:33:44.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.140" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.139" endtime="20201110 08:33:44.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.141" endtime="20201110 08:33:44.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.123" endtime="20201110 08:33:44.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.121" endtime="20201110 08:33:44.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.151" endtime="20201110 08:33:44.437"></status>
</kw>
<msg timestamp="20201110 08:33:44.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018376125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018376597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.150" endtime="20201110 08:33:44.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018376125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018376597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.441" endtime="20201110 08:33:44.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.450" endtime="20201110 08:33:44.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.147" endtime="20201110 08:33:44.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.145" endtime="20201110 08:33:44.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.456" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:44.455" endtime="20201110 08:33:44.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.461" level="INFO">VALUE: [{'time': 0.018376125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018376597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018390903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4305999999998653e-05, 'source_diff': 1.4305999999998653e-05}, {'time': 0.018391375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018402875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1499999999997623e-05, 'source_diff': 1.1499999999997623e-05}, {'time': 0.018403347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018417986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.018418458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018428278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.01842875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018437903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.018438375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018452861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.018453347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018463319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.018463806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018470444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.637999999999783e-06, 'source_diff': 6.637999999999783e-06}, {'time': 0.018470931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018475403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.018475889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018485042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.018485514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018494986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999999953e-06, 'source_diff': 9.471999999999953e-06}, {'time': 0.018495472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018501458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018501931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018512917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0986000000001023e-05, 'source_diff': 1.0986000000001023e-05}, {'time': 0.018513389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018526208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.281899999999725e-05, 'source_diff': 1.281899999999725e-05}, {'time': 0.018526681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018531861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.018532333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018543292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0958999999997887e-05, 'source_diff': 1.0958999999997887e-05}, {'time': 0.018543764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018552097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.018552569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018566042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472999999999957e-05, 'source_diff': 1.3472999999999957e-05}, {'time': 0.018566514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018581, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.018581486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018596125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.018596611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018611083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4472000000001484e-05, 'source_diff': 1.4472000000001484e-05}, {'time': 0.018611569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018624389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2820000000000192e-05, 'source_diff': 1.2820000000000192e-05}, {'time': 0.018624861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018633694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.018634167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018642972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.018643444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018656597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3153000000001858e-05, 'source_diff': 1.3153000000001858e-05}, {'time': 0.018657069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018669417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2348000000002302e-05, 'source_diff': 1.2348000000002302e-05}, {'time': 0.018669889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018681347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458000000002383e-05, 'source_diff': 1.1458000000002383e-05}, {'time': 0.018681819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018694986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3167000000001428e-05, 'source_diff': 1.3167000000001428e-05}, {'time': 0.018695458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018705097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.018705583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018713389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805999999999091e-06, 'source_diff': 7.805999999999091e-06}, {'time': 0.018713875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018721194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.018721667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018732972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1304999999999649e-05, 'source_diff': 1.1304999999999649e-05}, {'time': 0.018733458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018742764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305999999997122e-06, 'source_diff': 9.305999999997122e-06}, {'time': 0.01874325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018752944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.018753417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018757514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.018757986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018762458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.018762944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01876775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.018768236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018774222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018774694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0187885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805999999998153e-05, 'source_diff': 1.3805999999998153e-05}, {'time': 0.018788986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018796806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.018797278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018801597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.018802069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018815222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3152999999998388e-05, 'source_diff': 1.3152999999998388e-05}, {'time': 0.018815694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018825847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.018826319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018830639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3199999999986305e-06, 'source_diff': 4.3199999999986305e-06}, {'time': 0.018831111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018835264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018835736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018849361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3624999999999748e-05, 'source_diff': 1.3624999999999748e-05}, {'time': 0.018849847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018862833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2985999999999553e-05, 'source_diff': 1.2985999999999553e-05}, {'time': 0.018863306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018872667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018873139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01888125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.018881722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:44.457" endtime="20201110 08:33:44.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.453" endtime="20201110 08:33:44.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:44.488" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 1.4305999999998653e-05, 4.720000000013602e-07, 1.1499999999997623e-05, 4.720000000013602e-07, 1.4639000000000318e-05, 4.7199999999789077e-07, 9.8200000000006...</msg>
<status status="PASS" starttime="20201110 08:33:44.464" endtime="20201110 08:33:44.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.491" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:44.490" endtime="20201110 08:33:44.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.496" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 1.4305999999998653e-05, 4.720000000013602e-07, 1.1499999999997623e-05, 4.720000000013602e-07, 1.4639000000000318e-05, 4.7199999999789077e-07, 9.820000000000662e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 1.4486000000001054e-05, 4.859999999974607e-07, 9.972000000000453e-06, 4.870000000004038e-07, 6.637999999999783e-06, 4.870000000004038e-07, 4.472000000001891e-06, 4.859999999974607e-07, 9.153000000001327e-06, 4.720000000013602e-07, 9.471999999999953e-06, 4.859999999974607e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 1.0986000000001023e-05, 4.720000000013602e-07, 1.281899999999725e-05, 4.7300000000083386e-07, 5.180000000000462e-06, 4.720000000013602e-07, 1.0958999999997887e-05, 4.720000000013602e-07, 8.332999999999258e-06, 4.720000000013602e-07, 1.3472999999999957e-05, 4.7199999999789077e-07, 1.4486000000001054e-05, 4.860000000009301e-07, 1.4639000000000318e-05, 4.859999999974607e-07, 1.4472000000001484e-05, 4.860000000009301e-07, 1.2820000000000192e-05, 4.7199999999789077e-07, 8.832999999999758e-06, 4.7300000000083386e-07, 8.805000000000618e-06, 4.7199999999789077e-07, 1.3153000000001858e-05, 4.7199999999789077e-07, 1.2348000000002302e-05, 4.7199999999789077e-07, 1.1458000000002383e-05, 4.7199999999789077e-07, 1.3167000000001428e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.860000000009301e-07, 7.805999999999091e-06, 4.860000000009301e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 1.1304999999999649e-05, 4.860000000009301e-07, 9.305999999997122e-06, 4.860000000009301e-07, 9.694000000001063e-06, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 4.471999999998422e-06, 4.860000000009301e-07, 4.805999999999561e-06, 4.860000000009301e-07, 5.985999999999492e-06, 4.720000000013602e-07, 1.3805999999998153e-05, 4.860000000009301e-07, 7.819999999998661e-06, 4.720000000013602e-07, 4.318999999999157e-06, 4.720000000013602e-07, 1.3152999999998388e-05, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 4.3199999999986305e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.7199999999789077e-07, 1.3624999999999748e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07], 'eventdiff': [0, 4.720000000013602e-07, 1.4305999999998653e-05, 4.720000000013602e-07, 1.1499999999997623e-05, 4.720000000013602e-07, 1.4639000000000318e-05, 4.7199999999789077e-07, 9.820000000000662e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 1.4486000000001054e-05, 4.859999999974607e-07, 9.972000000000453e-06, 4.870000000004038e-07, 6.637999999999783e-06, 4.870000000004038e-07, 4.472000000001891e-06, 4.859999999974607e-07, 9.153000000001327e-06, 4.720000000013602e-07, 9.471999999999953e-06, 4.859999999974607e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 1.0986000000001023e-05, 4.720000000013602e-07, 1.281899999999725e-05, 4.7300000000083386e-07, 5.180000000000462e-06, 4.720000000013602e-07, 1.0958999999997887e-05, 4.720000000013602e-07, 8.332999999999258e-06, 4.720000000013602e-07, 1.3472999999999957e-05, 4.7199999999789077e-07, 1.4486000000001054e-05, 4.860000000009301e-07, 1.4639000000000318e-05, 4.859999999974607e-07, 1.4472000000001484e-05, 4.860000000009301e-07, 1.2820000000000192e-05, 4.7199999999789077e-07, 8.832999999999758e-06, 4.7300000000083386e-07, 8.805000000000618e-06, 4.7199999999789077e-07, 1.3153000000001858e-05, 4.7199999999789077e-07, 1.2348000000002302e-05, 4.7199999999789077e-07, 1.1458000000002383e-05, 4.7199999999789077e-07, 1.3167000000001428e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.860000000009301e-07, 7.805999999999091e-06, 4.860000000009301e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 1.1304999999999649e-05, 4.860000000009301e-07, 9.305999999997122e-06, 4.860000000009301e-07, 9.694000000001063e-06, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 4.471999999998422e-06, 4.860000000009301e-07, 4.805999999999561e-06, 4.860000000009301e-07, 5.985999999999492e-06, 4.720000000013602e-07, 1.3805999999998153e-05, 4.860000000009301e-07, 7.819999999998661e-06, 4.720000000013602e-07, 4.318999999999157e-06, 4.720000000013602e-07, 1.3152999999998388e-05, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 4.3199999999986305e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.7199999999789077e-07, 1.3624999999999748e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07], 'sourcetime': [0.018376125, 0.018376597, 0.018390903, 0.018391375, 0.018402875, 0.018403347, 0.018417986, 0.018418458, 0.018428278, 0.01842875, 0.018437903, 0.018438375, 0.018452861, 0.018453347, 0.018463319, 0.018463806, 0.018470444, 0.018470931, 0.018475403, 0.018475889, 0.018485042, 0.018485514, 0.018494986, 0.018495472, 0.018501458, 0.018501931, 0.018512917, 0.018513389, 0.018526208, 0.018526681, 0.018531861, 0.018532333, 0.018543292, 0.018543764, 0.018552097, 0.018552569, 0.018566042, 0.018566514, 0.018581, 0.018581486, 0.018596125, 0.018596611, 0.018611083, 0.018611569, 0.018624389, 0.018624861, 0.018633694, 0.018634167, 0.018642972, 0.018643444, 0.018656597, 0.018657069, 0.018669417, 0.018669889, 0.018681347, 0.018681819, 0.018694986, 0.018695458, 0.018705097, 0.018705583, 0.018713389, 0.018713875, 0.018721194, 0.018721667, 0.018732972, 0.018733458, 0.018742764, 0.01874325, 0.018752944, 0.018753417, 0.018757514, 0.018757986, 0.018762458, 0.018762944, 0.01876775, 0.018768236, 0.018774222, 0.018774694, 0.0187885, 0.018788986, 0.018796806, 0.018797278, 0.018801597, 0.018802069, 0.018815222, 0.018815694, 0.018825847, 0.018826319, 0.018830639, 0.018831111, 0.018835264, 0.018835736, 0.018849361, 0.018849847, 0.018862833, 0.018863306, 0.018872667, 0.018873139, 0.01888125, 0.018881722]}</msg>
<status status="PASS" starttime="20201110 08:33:44.492" endtime="20201110 08:33:44.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.488" endtime="20201110 08:33:44.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:44.501" level="INFO">${RESULT} = [{'time': 0.018376597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018391375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:44.498" endtime="20201110 08:33:44.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:44.515" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.870000000004038e-07...</msg>
<status status="PASS" starttime="20201110 08:33:44.502" endtime="20201110 08:33:44.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.519" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:44.518" endtime="20201110 08:33:44.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.522" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:33:44.520" endtime="20201110 08:33:44.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.516" endtime="20201110 08:33:44.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.525" endtime="20201110 08:33:44.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.529" endtime="20201110 08:33:44.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.527" endtime="20201110 08:33:44.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.523" endtime="20201110 08:33:44.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.120" endtime="20201110 08:33:44.550"></status>
</kw>
<msg timestamp="20201110 08:33:44.550" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.558" endtime="20201110 08:33:44.568"></status>
</kw>
<msg timestamp="20201110 08:33:44.569" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.557" endtime="20201110 08:33:44.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.571" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.570" endtime="20201110 08:33:44.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.572" endtime="20201110 08:33:44.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.554" endtime="20201110 08:33:44.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.552" endtime="20201110 08:33:44.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.581" endtime="20201110 08:33:44.865"></status>
</kw>
<msg timestamp="20201110 08:33:44.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018937319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018937792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.580" endtime="20201110 08:33:44.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018937319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018937792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.869" endtime="20201110 08:33:44.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.885" endtime="20201110 08:33:44.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.577" endtime="20201110 08:33:44.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.576" endtime="20201110 08:33:44.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.891" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:44.890" endtime="20201110 08:33:44.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.897" level="INFO">VALUE: [{'time': 0.018937319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018937792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018948597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.018949069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018962556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486999999999527e-05, 'source_diff': 1.3486999999999527e-05}, {'time': 0.018963028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018974514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.018975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018984319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.018984792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018991597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.018992083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019005889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3806000000001623e-05, 'source_diff': 1.3806000000001623e-05}, {'time': 0.019006375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019020694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4319000000002219e-05, 'source_diff': 1.4319000000002219e-05}, {'time': 0.019021167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0190275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000000727e-06, 'source_diff': 6.333000000000727e-06}, {'time': 0.019027972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019032444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.019032917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019038903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.019039375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019053194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.381899999999825e-05, 'source_diff': 1.381899999999825e-05}, {'time': 0.019053667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019060819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.151999999999853e-06, 'source_diff': 7.151999999999853e-06}, {'time': 0.019061292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019074, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.019074472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019083097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.019083569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019090194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.019090681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019096653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019097139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019101472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.019101944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019110236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.019110722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019119875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.019120347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019127875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019128347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019142806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4458999999997918e-05, 'source_diff': 1.4458999999997918e-05}, {'time': 0.019143278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019147403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.019147875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019158681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805999999998622e-05, 'source_diff': 1.0805999999998622e-05}, {'time': 0.019159167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019163472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.019163958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019177431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3473000000003427e-05, 'source_diff': 1.3473000000003427e-05}, {'time': 0.019177917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019182889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.019183375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019195194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1818999999999719e-05, 'source_diff': 1.1818999999999719e-05}, {'time': 0.019195667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019202194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.019202667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019207278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.01920775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019221569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3819000000001719e-05, 'source_diff': 1.3819000000001719e-05}, {'time': 0.019222042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019227028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.0192275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019236667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.019237139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019248111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0971999999997983e-05, 'source_diff': 1.0971999999997983e-05}, {'time': 0.019248583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019253583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.019254056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019259056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.019259528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019272319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.279099999999811e-05, 'source_diff': 1.279099999999811e-05}, {'time': 0.019272806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019277611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.019278097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019288583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.019289056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019302708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3651999999999415e-05, 'source_diff': 1.3651999999999415e-05}, {'time': 0.019303181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019310153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.019310639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019320458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999997718e-06, 'source_diff': 9.818999999997718e-06}, {'time': 0.019320931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019329917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.019330389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019338056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.019338528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019346361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.019346833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019355833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.019356306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019364417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.019364889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019377208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319000000000219e-05, 'source_diff': 1.2319000000000219e-05}, {'time': 0.019377681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019385833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152000000000853e-06, 'source_diff': 8.152000000000853e-06}, {'time': 0.019386319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019393292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9730000000003955e-06, 'source_diff': 6.9730000000003955e-06}, {'time': 0.019393778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:44.893" endtime="20201110 08:33:44.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.888" endtime="20201110 08:33:44.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:44.923" level="INFO">${debug-compressed} = {'source_diff': [0, 4.729999999973644e-07, 1.0805000000002618e-05, 4.7199999999789077e-07, 1.3486999999999527e-05, 4.720000000013602e-07, 1.1486000000001523e-05, 4.859999999974607e-07, 9.3190000000006...</msg>
<status status="PASS" starttime="20201110 08:33:44.899" endtime="20201110 08:33:44.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.927" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:44.926" endtime="20201110 08:33:44.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.931" level="INFO">VALUE: {'source_diff': [0, 4.729999999973644e-07, 1.0805000000002618e-05, 4.7199999999789077e-07, 1.3486999999999527e-05, 4.720000000013602e-07, 1.1486000000001523e-05, 4.859999999974607e-07, 9.319000000000688e-06, 4.7300000000083386e-07, 6.804999999998618e-06, 4.860000000009301e-07, 1.3806000000001623e-05, 4.859999999974607e-07, 1.4319000000002219e-05, 4.729999999973644e-07, 6.333000000000727e-06, 4.720000000013602e-07, 4.471999999998422e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 1.381899999999825e-05, 4.7300000000083386e-07, 7.151999999999853e-06, 4.7300000000083386e-07, 1.2708000000000164e-05, 4.7199999999789077e-07, 8.625000000001687e-06, 4.720000000013602e-07, 6.624999999999687e-06, 4.870000000004038e-07, 5.971999999999922e-06, 4.859999999974607e-07, 4.333000000002196e-06, 4.7199999999789077e-07, 8.292000000000022e-06, 4.860000000009301e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.720000000013602e-07, 1.4458999999997918e-05, 4.720000000013602e-07, 4.125000000000656e-06, 4.720000000013602e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 4.304999999999587e-06, 4.859999999974607e-07, 1.3473000000003427e-05, 4.859999999974607e-07, 4.972000000002391e-06, 4.859999999974607e-07, 1.1818999999999719e-05, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 4.611000000001586e-06, 4.7199999999789077e-07, 1.3819000000001719e-05, 4.7300000000083386e-07, 4.985999999998492e-06, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 1.0971999999997983e-05, 4.720000000013602e-07, 5.000000000001531e-06, 4.729999999973644e-07, 5.000000000001531e-06, 4.720000000013602e-07, 1.279099999999811e-05, 4.870000000004038e-07, 4.805000000000087e-06, 4.860000000009301e-07, 1.0486000000000523e-05, 4.729999999973644e-07, 1.3651999999999415e-05, 4.7300000000083386e-07, 6.972000000000922e-06, 4.860000000009301e-07, 9.818999999997718e-06, 4.7300000000083386e-07, 8.985999999999023e-06, 4.720000000013602e-07, 7.666999999999397e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 1.2319000000000219e-05, 4.7300000000083386e-07, 8.152000000000853e-06, 4.859999999974607e-07, 6.9730000000003955e-06, 4.860000000009301e-07], 'eventdiff': [0, 4.729999999973644e-07, 1.0805000000002618e-05, 4.7199999999789077e-07, 1.3486999999999527e-05, 4.720000000013602e-07, 1.1486000000001523e-05, 4.859999999974607e-07, 9.319000000000688e-06, 4.7300000000083386e-07, 6.804999999998618e-06, 4.860000000009301e-07, 1.3806000000001623e-05, 4.859999999974607e-07, 1.4319000000002219e-05, 4.729999999973644e-07, 6.333000000000727e-06, 4.720000000013602e-07, 4.471999999998422e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 1.381899999999825e-05, 4.7300000000083386e-07, 7.151999999999853e-06, 4.7300000000083386e-07, 1.2708000000000164e-05, 4.7199999999789077e-07, 8.625000000001687e-06, 4.720000000013602e-07, 6.624999999999687e-06, 4.870000000004038e-07, 5.971999999999922e-06, 4.859999999974607e-07, 4.333000000002196e-06, 4.7199999999789077e-07, 8.292000000000022e-06, 4.860000000009301e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.720000000013602e-07, 1.4458999999997918e-05, 4.720000000013602e-07, 4.125000000000656e-06, 4.720000000013602e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 4.304999999999587e-06, 4.859999999974607e-07, 1.3473000000003427e-05, 4.859999999974607e-07, 4.972000000002391e-06, 4.859999999974607e-07, 1.1818999999999719e-05, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 4.611000000001586e-06, 4.7199999999789077e-07, 1.3819000000001719e-05, 4.7300000000083386e-07, 4.985999999998492e-06, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 1.0971999999997983e-05, 4.720000000013602e-07, 5.000000000001531e-06, 4.729999999973644e-07, 5.000000000001531e-06, 4.720000000013602e-07, 1.279099999999811e-05, 4.870000000004038e-07, 4.805000000000087e-06, 4.860000000009301e-07, 1.0486000000000523e-05, 4.729999999973644e-07, 1.3651999999999415e-05, 4.7300000000083386e-07, 6.972000000000922e-06, 4.860000000009301e-07, 9.818999999997718e-06, 4.7300000000083386e-07, 8.985999999999023e-06, 4.720000000013602e-07, 7.666999999999397e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 1.2319000000000219e-05, 4.7300000000083386e-07, 8.152000000000853e-06, 4.859999999974607e-07, 6.9730000000003955e-06, 4.860000000009301e-07], 'sourcetime': [0.018937319, 0.018937792, 0.018948597, 0.018949069, 0.018962556, 0.018963028, 0.018974514, 0.018975, 0.018984319, 0.018984792, 0.018991597, 0.018992083, 0.019005889, 0.019006375, 0.019020694, 0.019021167, 0.0190275, 0.019027972, 0.019032444, 0.019032917, 0.019038903, 0.019039375, 0.019053194, 0.019053667, 0.019060819, 0.019061292, 0.019074, 0.019074472, 0.019083097, 0.019083569, 0.019090194, 0.019090681, 0.019096653, 0.019097139, 0.019101472, 0.019101944, 0.019110236, 0.019110722, 0.019119875, 0.019120347, 0.019127875, 0.019128347, 0.019142806, 0.019143278, 0.019147403, 0.019147875, 0.019158681, 0.019159167, 0.019163472, 0.019163958, 0.019177431, 0.019177917, 0.019182889, 0.019183375, 0.019195194, 0.019195667, 0.019202194, 0.019202667, 0.019207278, 0.01920775, 0.019221569, 0.019222042, 0.019227028, 0.0192275, 0.019236667, 0.019237139, 0.019248111, 0.019248583, 0.019253583, 0.019254056, 0.019259056, 0.019259528, 0.019272319, 0.019272806, 0.019277611, 0.019278097, 0.019288583, 0.019289056, 0.019302708, 0.019303181, 0.019310153, 0.019310639, 0.019320458, 0.019320931, 0.019329917, 0.019330389, 0.019338056, 0.019338528, 0.019346361, 0.019346833, 0.019355833, 0.019356306, 0.019364417, 0.019364889, 0.019377208, 0.019377681, 0.019385833, 0.019386319, 0.019393292, 0.019393778]}</msg>
<status status="PASS" starttime="20201110 08:33:44.928" endtime="20201110 08:33:44.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.924" endtime="20201110 08:33:44.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:44.937" level="INFO">${RESULT} = [{'time': 0.018937792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018949069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:44.933" endtime="20201110 08:33:44.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:44.952" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.729999999973644e-0...</msg>
<status status="PASS" starttime="20201110 08:33:44.938" endtime="20201110 08:33:44.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.956" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:44.955" endtime="20201110 08:33:44.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.958" level="INFO">VALUE: [4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201110 08:33:44.957" endtime="20201110 08:33:44.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.953" endtime="20201110 08:33:44.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.962" endtime="20201110 08:33:44.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.965" endtime="20201110 08:33:44.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.964" endtime="20201110 08:33:44.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.960" endtime="20201110 08:33:44.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.551" endtime="20201110 08:33:44.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.237" endtime="20201110 08:33:44.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.990" endtime="20201110 08:33:45.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.988" endtime="20201110 08:33:45.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.987" endtime="20201110 08:33:45.010"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:36.165" endtime="20201110 08:33:45.010" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.017" endtime="20201110 08:33:45.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.016" endtime="20201110 08:33:45.037"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.051" endtime="20201110 08:33:45.065"></status>
</kw>
<msg timestamp="20201110 08:33:45.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.049" endtime="20201110 08:33:45.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.068" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.066" endtime="20201110 08:33:45.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.071" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:45.069" endtime="20201110 08:33:45.072"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:45.047" endtime="20201110 08:33:45.072"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:45.044" endtime="20201110 08:33:45.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.043" endtime="20201110 08:33:45.073"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:45.077" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:45.076" endtime="20201110 08:33:45.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.074" endtime="20201110 08:33:45.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.041" endtime="20201110 08:33:45.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.041" endtime="20201110 08:33:45.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.078" endtime="20201110 08:33:45.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.039" endtime="20201110 08:33:45.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.038" endtime="20201110 08:33:45.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.014" endtime="20201110 08:33:45.081"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:33:45.083" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.090" endtime="20201110 08:33:45.102"></status>
</kw>
<msg timestamp="20201110 08:33:45.102" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.089" endtime="20201110 08:33:45.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.105" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.103" endtime="20201110 08:33:45.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.106" endtime="20201110 08:33:45.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.086" endtime="20201110 08:33:45.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.085" endtime="20201110 08:33:45.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.116" endtime="20201110 08:33:45.401"></status>
</kw>
<msg timestamp="20201110 08:33:45.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064483542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064486222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.113" endtime="20201110 08:33:45.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064483542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064486222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.405" endtime="20201110 08:33:45.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.414" endtime="20201110 08:33:45.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.111" endtime="20201110 08:33:45.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.109" endtime="20201110 08:33:45.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:45.420" level="INFO">${RESULT} = [{'time': 0.064486222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999991023e-06, 'source_diff': 2.679999999991023e-06}, {'time': 0.064493611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:45.417" endtime="20201110 08:33:45.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:45.434" level="INFO">${OVERHEAD} = {'source_diff': [2.679999999991023e-06, 2.6670000000117433e-06, 2.597000000006955e-06, 2.6669999999978655e-06, 2.6800000000049007e-06, 2.6530000000052345e-06, 2.6529999999913567e-06, 2.665999999998392...</msg>
<status status="PASS" starttime="20201110 08:33:45.421" endtime="20201110 08:33:45.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.439" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:45.438" endtime="20201110 08:33:45.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.441" level="INFO">VALUE: [2.679999999991023e-06, 2.6670000000117433e-06, 2.597000000006955e-06, 2.6669999999978655e-06, 2.6800000000049007e-06, 2.6530000000052345e-06, 2.6529999999913567e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.597000000006955e-06, 2.6670000000117433e-06, 2.6670000000117433e-06, 2.6669999999978655e-06, 2.651999999991883e-06, 2.665999999998392e-06, 2.679999999991023e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.750000000009689e-06, 2.6529999999913567e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6660000000122697e-06, 2.6529999999913567e-06, 2.652000000005761e-06, 2.665999999998392e-06, 2.6810000000043743e-06, 2.6529999999913567e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6529999999913567e-06, 2.6669999999978655e-06, 2.6670000000117433e-06, 2.651999999991883e-06, 2.6669999999978655e-06, 2.6810000000043743e-06, 2.6669999999978655e-06, 2.6800000000049007e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201110 08:33:45.440" endtime="20201110 08:33:45.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.436" endtime="20201110 08:33:45.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.444" endtime="20201110 08:33:45.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.448" endtime="20201110 08:33:45.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.446" endtime="20201110 08:33:45.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.443" endtime="20201110 08:33:45.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.083" endtime="20201110 08:33:45.468"></status>
</kw>
<msg timestamp="20201110 08:33:45.469" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.476" endtime="20201110 08:33:45.488"></status>
</kw>
<msg timestamp="20201110 08:33:45.488" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.475" endtime="20201110 08:33:45.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.491" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.489" endtime="20201110 08:33:45.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.492" endtime="20201110 08:33:45.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.472" endtime="20201110 08:33:45.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.470" endtime="20201110 08:33:45.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.501" endtime="20201110 08:33:45.792"></status>
</kw>
<msg timestamp="20201110 08:33:45.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019541556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019544208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.499" endtime="20201110 08:33:45.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019541556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019544208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.796" endtime="20201110 08:33:45.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.804" endtime="20201110 08:33:45.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.497" endtime="20201110 08:33:45.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.495" endtime="20201110 08:33:45.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:45.811" level="INFO">${RESULT} = [{'time': 0.019544208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.019559014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:45.807" endtime="20201110 08:33:45.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:45.824" level="INFO">${OVERHEAD} = {'source_diff': [2.651999999998822e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.6119999999990595e-06, 2.6809999999974354e-06, 2.681000000000905...</msg>
<status status="PASS" starttime="20201110 08:33:45.812" endtime="20201110 08:33:45.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.828" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:45.827" endtime="20201110 08:33:45.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.831" level="INFO">VALUE: [2.651999999998822e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.6119999999990595e-06, 2.6809999999974354e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.7369999999991845e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.639000000002195e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.708000000000571e-06, 2.722000000000141e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.679999999997962e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6939999999975317e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 2.6380000000027215e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.6249999999991558e-06]</msg>
<status status="PASS" starttime="20201110 08:33:45.830" endtime="20201110 08:33:45.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.825" endtime="20201110 08:33:45.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.834" endtime="20201110 08:33:45.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.840" endtime="20201110 08:33:45.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.838" endtime="20201110 08:33:45.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.832" endtime="20201110 08:33:45.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.469" endtime="20201110 08:33:45.862"></status>
</kw>
<msg timestamp="20201110 08:33:45.862" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.873" endtime="20201110 08:33:45.886"></status>
</kw>
<msg timestamp="20201110 08:33:45.887" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.871" endtime="20201110 08:33:45.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.889" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.888" endtime="20201110 08:33:45.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.890" endtime="20201110 08:33:45.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.868" endtime="20201110 08:33:45.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.865" endtime="20201110 08:33:45.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.899" endtime="20201110 08:33:46.184"></status>
</kw>
<msg timestamp="20201110 08:33:46.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024491472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024494125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.898" endtime="20201110 08:33:46.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024491472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024494125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.188" endtime="20201110 08:33:46.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.196" endtime="20201110 08:33:46.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.895" endtime="20201110 08:33:46.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.894" endtime="20201110 08:33:46.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.203" level="INFO">${RESULT} = [{'time': 0.024494125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.024511111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:46.200" endtime="20201110 08:33:46.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:46.216" level="INFO">${OVERHEAD} = {'source_diff': [2.6529999999982956e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.597000000000016e-06, 2.665999999998392e-06, 2.665999999998392...</msg>
<status status="PASS" starttime="20201110 08:33:46.204" endtime="20201110 08:33:46.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.221" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:46.220" endtime="20201110 08:33:46.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.223" level="INFO">VALUE: [2.6529999999982956e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.597000000000016e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6809999999974354e-06, 2.6660000000018613e-06, 2.7079999999971016e-06, 2.694000000001001e-06, 2.6520000000022914e-06, 2.694000000001001e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.6389999999987257e-06]</msg>
<status status="PASS" starttime="20201110 08:33:46.222" endtime="20201110 08:33:46.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.217" endtime="20201110 08:33:46.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.226" endtime="20201110 08:33:46.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.229" endtime="20201110 08:33:46.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.228" endtime="20201110 08:33:46.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.224" endtime="20201110 08:33:46.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.863" endtime="20201110 08:33:46.252"></status>
</kw>
<msg timestamp="20201110 08:33:46.252" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.264" endtime="20201110 08:33:46.277"></status>
</kw>
<msg timestamp="20201110 08:33:46.278" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.261" endtime="20201110 08:33:46.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.280" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.279" endtime="20201110 08:33:46.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.281" endtime="20201110 08:33:46.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.257" endtime="20201110 08:33:46.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.255" endtime="20201110 08:33:46.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.290" endtime="20201110 08:33:46.575"></status>
</kw>
<msg timestamp="20201110 08:33:46.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026338653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026341319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.289" endtime="20201110 08:33:46.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026338653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026341319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.579" endtime="20201110 08:33:46.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.588" endtime="20201110 08:33:46.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.286" endtime="20201110 08:33:46.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.284" endtime="20201110 08:33:46.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.595" level="INFO">${RESULT} = [{'time': 0.026341319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.026348306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:46.591" endtime="20201110 08:33:46.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:46.608" level="INFO">${OVERHEAD} = {'source_diff': [2.665999999998392e-06, 2.6809999999974354e-06, 2.6809999999974354e-06, 2.612000000002529e-06, 2.6389999999987257e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.667000000001335...</msg>
<status status="PASS" starttime="20201110 08:33:46.596" endtime="20201110 08:33:46.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.612" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:46.611" endtime="20201110 08:33:46.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.615" level="INFO">VALUE: [2.665999999998392e-06, 2.6809999999974354e-06, 2.6809999999974354e-06, 2.612000000002529e-06, 2.6389999999987257e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.597000000000016e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.708000000000571e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6660000000018613e-06]</msg>
<status status="PASS" starttime="20201110 08:33:46.613" endtime="20201110 08:33:46.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.609" endtime="20201110 08:33:46.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.618" endtime="20201110 08:33:46.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.621" endtime="20201110 08:33:46.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.620" endtime="20201110 08:33:46.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.616" endtime="20201110 08:33:46.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.253" endtime="20201110 08:33:46.642"></status>
</kw>
<msg timestamp="20201110 08:33:46.642" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.649" endtime="20201110 08:33:46.661"></status>
</kw>
<msg timestamp="20201110 08:33:46.661" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.648" endtime="20201110 08:33:46.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.664" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.663" endtime="20201110 08:33:46.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.665" endtime="20201110 08:33:46.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.645" endtime="20201110 08:33:46.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.644" endtime="20201110 08:33:46.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.675" endtime="20201110 08:33:46.964"></status>
</kw>
<msg timestamp="20201110 08:33:46.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019353708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019356375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.673" endtime="20201110 08:33:46.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019353708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019356375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.968" endtime="20201110 08:33:46.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.977" endtime="20201110 08:33:46.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.670" endtime="20201110 08:33:46.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.669" endtime="20201110 08:33:46.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.983" level="INFO">${RESULT} = [{'time': 0.019356375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.019366861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:46.980" endtime="20201110 08:33:46.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:46.998" level="INFO">${OVERHEAD} = {'source_diff': [2.6669999999978655e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.679999999997962e...</msg>
<status status="PASS" starttime="20201110 08:33:46.984" endtime="20201110 08:33:46.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.002" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:47.001" endtime="20201110 08:33:47.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.004" level="INFO">VALUE: [2.6669999999978655e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.7090000000000447e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6939999999975317e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6250000000026252e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6809999999974354e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.639000000002195e-06, 2.6809999999974354e-06, 2.694000000001001e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.5979999999994896e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.7229999999996146e-06, 2.695000000000475e-06, 2.6800000000014312e-06]</msg>
<status status="PASS" starttime="20201110 08:33:47.003" endtime="20201110 08:33:47.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.999" endtime="20201110 08:33:47.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.008" endtime="20201110 08:33:47.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.011" endtime="20201110 08:33:47.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.009" endtime="20201110 08:33:47.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.006" endtime="20201110 08:33:47.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.642" endtime="20201110 08:33:47.031"></status>
</kw>
<msg timestamp="20201110 08:33:47.032" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.039" endtime="20201110 08:33:47.051"></status>
</kw>
<msg timestamp="20201110 08:33:47.051" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.038" endtime="20201110 08:33:47.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.054" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.052" endtime="20201110 08:33:47.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.055" endtime="20201110 08:33:47.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.035" endtime="20201110 08:33:47.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.034" endtime="20201110 08:33:47.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.064" endtime="20201110 08:33:47.354"></status>
</kw>
<msg timestamp="20201110 08:33:47.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019425319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019427972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.062" endtime="20201110 08:33:47.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019425319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019427972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.358" endtime="20201110 08:33:47.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.366" endtime="20201110 08:33:47.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.060" endtime="20201110 08:33:47.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.058" endtime="20201110 08:33:47.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.373" level="INFO">${RESULT} = [{'time': 0.019427972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.019443292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:47.370" endtime="20201110 08:33:47.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:47.386" level="INFO">${OVERHEAD} = {'source_diff': [2.653000000001765e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6520000000022914e-06, 2.7090000000000447e-06, 2.6800000000014312e-06, 2.6520000000022914e-06, 2.667000000001335e...</msg>
<status status="PASS" starttime="20201110 08:33:47.374" endtime="20201110 08:33:47.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.390" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:47.389" endtime="20201110 08:33:47.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.393" level="INFO">VALUE: [2.653000000001765e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6520000000022914e-06, 2.7090000000000447e-06, 2.6800000000014312e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6809999999974354e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.681000000000905e-06, 2.6520000000022914e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.597000000000016e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6949999999970053e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.5839999999999197e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.639000000002195e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.653000000001765e-06]</msg>
<status status="PASS" starttime="20201110 08:33:47.391" endtime="20201110 08:33:47.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.387" endtime="20201110 08:33:47.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.396" endtime="20201110 08:33:47.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.399" endtime="20201110 08:33:47.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.398" endtime="20201110 08:33:47.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.394" endtime="20201110 08:33:47.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.032" endtime="20201110 08:33:47.420"></status>
</kw>
<msg timestamp="20201110 08:33:47.420" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.427" endtime="20201110 08:33:47.439"></status>
</kw>
<msg timestamp="20201110 08:33:47.440" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.426" endtime="20201110 08:33:47.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.442" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.441" endtime="20201110 08:33:47.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.443" endtime="20201110 08:33:47.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.423" endtime="20201110 08:33:47.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.422" endtime="20201110 08:33:47.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.453" endtime="20201110 08:33:47.742"></status>
</kw>
<msg timestamp="20201110 08:33:47.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019470347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.451" endtime="20201110 08:33:47.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019470347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.746" endtime="20201110 08:33:47.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.754" endtime="20201110 08:33:47.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.449" endtime="20201110 08:33:47.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.447" endtime="20201110 08:33:47.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.760" level="INFO">${RESULT} = [{'time': 0.019470347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.019477486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:47.757" endtime="20201110 08:33:47.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:47.774" level="INFO">${OVERHEAD} = {'source_diff': [2.6389999999987257e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.695000000000475e-0...</msg>
<status status="PASS" starttime="20201110 08:33:47.761" endtime="20201110 08:33:47.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.778" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:47.777" endtime="20201110 08:33:47.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.781" level="INFO">VALUE: [2.6389999999987257e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.637999999999252e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.639000000002195e-06, 2.6809999999974354e-06, 2.651999999998822e-06, 2.6939999999975317e-06, 2.6800000000014312e-06, 2.735999999999711e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.679999999997962e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201110 08:33:47.779" endtime="20201110 08:33:47.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.775" endtime="20201110 08:33:47.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.784" endtime="20201110 08:33:47.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.787" endtime="20201110 08:33:47.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.786" endtime="20201110 08:33:47.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.782" endtime="20201110 08:33:47.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.420" endtime="20201110 08:33:47.808"></status>
</kw>
<msg timestamp="20201110 08:33:47.808" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.816" endtime="20201110 08:33:47.828"></status>
</kw>
<msg timestamp="20201110 08:33:47.828" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.814" endtime="20201110 08:33:47.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.831" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.829" endtime="20201110 08:33:47.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.832" endtime="20201110 08:33:47.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.811" endtime="20201110 08:33:47.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.810" endtime="20201110 08:33:47.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.841" endtime="20201110 08:33:48.129"></status>
</kw>
<msg timestamp="20201110 08:33:48.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.840" endtime="20201110 08:33:48.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.133" endtime="20201110 08:33:48.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.141" endtime="20201110 08:33:48.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.837" endtime="20201110 08:33:48.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.836" endtime="20201110 08:33:48.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.148" level="INFO">${RESULT} = [{'time': 0.019556431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.019564097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:48.145" endtime="20201110 08:33:48.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:48.161" level="INFO">${OVERHEAD} = {'source_diff': [2.6249999999991558e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.653000000001765...</msg>
<status status="PASS" starttime="20201110 08:33:48.149" endtime="20201110 08:33:48.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.166" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:48.165" endtime="20201110 08:33:48.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.168" level="INFO">VALUE: [2.6249999999991558e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.6669999999978655e-06, 2.708000000000571e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.722000000000141e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6520000000022914e-06, 2.694000000001001e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6809999999974354e-06, 2.6809999999974354e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.665999999998392e-06]</msg>
<status status="PASS" starttime="20201110 08:33:48.167" endtime="20201110 08:33:48.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.162" endtime="20201110 08:33:48.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.171" endtime="20201110 08:33:48.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.174" endtime="20201110 08:33:48.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.173" endtime="20201110 08:33:48.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.169" endtime="20201110 08:33:48.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.809" endtime="20201110 08:33:48.195"></status>
</kw>
<msg timestamp="20201110 08:33:48.195" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.203" endtime="20201110 08:33:48.214"></status>
</kw>
<msg timestamp="20201110 08:33:48.215" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.201" endtime="20201110 08:33:48.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.217" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.216" endtime="20201110 08:33:48.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.218" endtime="20201110 08:33:48.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.199" endtime="20201110 08:33:48.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.197" endtime="20201110 08:33:48.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.227" endtime="20201110 08:33:48.512"></status>
</kw>
<msg timestamp="20201110 08:33:48.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019751736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.226" endtime="20201110 08:33:48.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019751736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.516" endtime="20201110 08:33:48.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.524" endtime="20201110 08:33:48.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.223" endtime="20201110 08:33:48.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.221" endtime="20201110 08:33:48.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.531" level="INFO">${RESULT} = [{'time': 0.019754417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019764208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:48.527" endtime="20201110 08:33:48.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:48.545" level="INFO">${OVERHEAD} = {'source_diff': [2.681000000000905e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.679999999997962e-06, 2.6660000000018613e-0...</msg>
<status status="PASS" starttime="20201110 08:33:48.532" endtime="20201110 08:33:48.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.549" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:48.548" endtime="20201110 08:33:48.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.552" level="INFO">VALUE: [2.681000000000905e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.639000000002195e-06, 2.651999999998822e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201110 08:33:48.550" endtime="20201110 08:33:48.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.546" endtime="20201110 08:33:48.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.555" endtime="20201110 08:33:48.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.558" endtime="20201110 08:33:48.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.557" endtime="20201110 08:33:48.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.553" endtime="20201110 08:33:48.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.196" endtime="20201110 08:33:48.579"></status>
</kw>
<msg timestamp="20201110 08:33:48.579" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.587" endtime="20201110 08:33:48.599"></status>
</kw>
<msg timestamp="20201110 08:33:48.600" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.586" endtime="20201110 08:33:48.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.602" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.601" endtime="20201110 08:33:48.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.603" endtime="20201110 08:33:48.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.583" endtime="20201110 08:33:48.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.581" endtime="20201110 08:33:48.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.612" endtime="20201110 08:33:48.901"></status>
</kw>
<msg timestamp="20201110 08:33:48.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:48.611" endtime="20201110 08:33:48.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:48.905" endtime="20201110 08:33:48.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.913" endtime="20201110 08:33:48.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.608" endtime="20201110 08:33:48.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.607" endtime="20201110 08:33:48.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.927" level="INFO">${RESULT} = [{'time': 0.020248167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.020256292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:48.920" endtime="20201110 08:33:48.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:48.958" level="INFO">${OVERHEAD} = {'source_diff': [2.667000000001335e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.667000000001335e-0...</msg>
<status status="PASS" starttime="20201110 08:33:48.929" endtime="20201110 08:33:48.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.966" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:48.964" endtime="20201110 08:33:48.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.972" level="INFO">VALUE: [2.667000000001335e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.7090000000000447e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.695000000000475e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.681000000000905e-06]</msg>
<status status="PASS" starttime="20201110 08:33:48.969" endtime="20201110 08:33:48.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.960" endtime="20201110 08:33:48.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.978" endtime="20201110 08:33:48.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.986" endtime="20201110 08:33:49.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.982" endtime="20201110 08:33:49.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.975" endtime="20201110 08:33:49.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.580" endtime="20201110 08:33:49.011"></status>
</kw>
<msg timestamp="20201110 08:33:49.011" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.021" endtime="20201110 08:33:49.033"></status>
</kw>
<msg timestamp="20201110 08:33:49.033" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.020" endtime="20201110 08:33:49.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.036" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.034" endtime="20201110 08:33:49.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.037" endtime="20201110 08:33:49.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.017" endtime="20201110 08:33:49.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.015" endtime="20201110 08:33:49.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.046" endtime="20201110 08:33:49.331"></status>
</kw>
<msg timestamp="20201110 08:33:49.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025217917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025220583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.044" endtime="20201110 08:33:49.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025217917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025220583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.336" endtime="20201110 08:33:49.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.344" endtime="20201110 08:33:49.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.042" endtime="20201110 08:33:49.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.040" endtime="20201110 08:33:49.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.351" level="INFO">${RESULT} = [{'time': 0.025220583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.025231056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:49.347" endtime="20201110 08:33:49.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:49.364" level="INFO">${OVERHEAD} = {'source_diff': [2.6660000000018613e-06, 2.584000000003389e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.651999999998822e-06, 2.6669999999978655...</msg>
<status status="PASS" starttime="20201110 08:33:49.352" endtime="20201110 08:33:49.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.368" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:49.367" endtime="20201110 08:33:49.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.371" level="INFO">VALUE: [2.6660000000018613e-06, 2.584000000003389e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.695000000000475e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.639000000002195e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.6660000000018613e-06]</msg>
<status status="PASS" starttime="20201110 08:33:49.369" endtime="20201110 08:33:49.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.365" endtime="20201110 08:33:49.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.374" endtime="20201110 08:33:49.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.378" endtime="20201110 08:33:49.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.376" endtime="20201110 08:33:49.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.373" endtime="20201110 08:33:49.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.013" endtime="20201110 08:33:49.399"></status>
</kw>
<msg timestamp="20201110 08:33:49.399" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.406" endtime="20201110 08:33:49.418"></status>
</kw>
<msg timestamp="20201110 08:33:49.419" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.405" endtime="20201110 08:33:49.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.421" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.420" endtime="20201110 08:33:49.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.422" endtime="20201110 08:33:49.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.402" endtime="20201110 08:33:49.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.401" endtime="20201110 08:33:49.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.431" endtime="20201110 08:33:49.723"></status>
</kw>
<msg timestamp="20201110 08:33:49.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019578542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.430" endtime="20201110 08:33:49.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019578542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.733" endtime="20201110 08:33:49.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.753" endtime="20201110 08:33:49.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.427" endtime="20201110 08:33:49.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.425" endtime="20201110 08:33:49.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.768" level="INFO">${RESULT} = [{'time': 0.019578542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019593028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:49.760" endtime="20201110 08:33:49.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:49.801" level="INFO">${OVERHEAD} = {'source_diff': [2.681000000000905e-06, 2.6809999999974354e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6669999999978655...</msg>
<status status="PASS" starttime="20201110 08:33:49.770" endtime="20201110 08:33:49.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.810" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:49.808" endtime="20201110 08:33:49.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.815" level="INFO">VALUE: [2.681000000000905e-06, 2.6809999999974354e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.695000000000475e-06, 2.6939999999975317e-06, 2.651999999998822e-06, 2.735999999999711e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.749999999999281e-06, 2.6800000000014312e-06, 2.695000000000475e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.5979999999994896e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6249999999991558e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6660000000018613e-06]</msg>
<status status="PASS" starttime="20201110 08:33:49.812" endtime="20201110 08:33:49.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.803" endtime="20201110 08:33:49.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.822" endtime="20201110 08:33:49.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.826" endtime="20201110 08:33:49.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.824" endtime="20201110 08:33:49.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.820" endtime="20201110 08:33:49.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.399" endtime="20201110 08:33:49.847"></status>
</kw>
<msg timestamp="20201110 08:33:49.847" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.855" endtime="20201110 08:33:49.867"></status>
</kw>
<msg timestamp="20201110 08:33:49.868" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.854" endtime="20201110 08:33:49.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.871" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.869" endtime="20201110 08:33:49.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.872" endtime="20201110 08:33:49.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.851" endtime="20201110 08:33:49.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.849" endtime="20201110 08:33:49.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.882" endtime="20201110 08:33:50.170"></status>
</kw>
<msg timestamp="20201110 08:33:50.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020252708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.880" endtime="20201110 08:33:50.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020252708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.175" endtime="20201110 08:33:50.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.183" endtime="20201110 08:33:50.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.877" endtime="20201110 08:33:50.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.875" endtime="20201110 08:33:50.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.190" level="INFO">${RESULT} = [{'time': 0.020255375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.020263861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:50.187" endtime="20201110 08:33:50.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:50.205" level="INFO">${OVERHEAD} = {'source_diff': [2.6669999999978655e-06, 2.6800000000014312e-06, 2.695000000000475e-06, 2.6800000000014312e-06, 2.639000000002195e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.665999999998392e...</msg>
<status status="PASS" starttime="20201110 08:33:50.191" endtime="20201110 08:33:50.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.210" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:50.209" endtime="20201110 08:33:50.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.212" level="INFO">VALUE: [2.6669999999978655e-06, 2.6800000000014312e-06, 2.695000000000475e-06, 2.6800000000014312e-06, 2.639000000002195e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.639000000002195e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.695000000000475e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.695000000000475e-06, 2.679999999997962e-06, 2.653000000001765e-06, 2.6809999999974354e-06]</msg>
<status status="PASS" starttime="20201110 08:33:50.211" endtime="20201110 08:33:50.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.206" endtime="20201110 08:33:50.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.221" endtime="20201110 08:33:50.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.224" endtime="20201110 08:33:50.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.223" endtime="20201110 08:33:50.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.219" endtime="20201110 08:33:50.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.848" endtime="20201110 08:33:50.245"></status>
</kw>
<msg timestamp="20201110 08:33:50.245" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.254" endtime="20201110 08:33:50.266"></status>
</kw>
<msg timestamp="20201110 08:33:50.266" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.252" endtime="20201110 08:33:50.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.269" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.267" endtime="20201110 08:33:50.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.270" endtime="20201110 08:33:50.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.249" endtime="20201110 08:33:50.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.247" endtime="20201110 08:33:50.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.281" endtime="20201110 08:33:50.567"></status>
</kw>
<msg timestamp="20201110 08:33:50.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020073639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020076306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.278" endtime="20201110 08:33:50.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020073639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020076306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.571" endtime="20201110 08:33:50.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.580" endtime="20201110 08:33:50.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.275" endtime="20201110 08:33:50.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.274" endtime="20201110 08:33:50.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.587" level="INFO">${RESULT} = [{'time': 0.020076306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.020083306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:50.583" endtime="20201110 08:33:50.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:50.600" level="INFO">${OVERHEAD} = {'source_diff': [2.6669999999978655e-06, 2.6949999999970053e-06, 2.653000000001765e-06, 2.5979999999994896e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6660000000018613...</msg>
<status status="PASS" starttime="20201110 08:33:50.588" endtime="20201110 08:33:50.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.605" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:50.604" endtime="20201110 08:33:50.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.607" level="INFO">VALUE: [2.6669999999978655e-06, 2.6949999999970053e-06, 2.653000000001765e-06, 2.5979999999994896e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.6809999999974354e-06, 2.6660000000018613e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.6110000000030553e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.749999999999281e-06, 2.667000000001335e-06, 2.722000000000141e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.722000000000141e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201110 08:33:50.606" endtime="20201110 08:33:50.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.601" endtime="20201110 08:33:50.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.611" endtime="20201110 08:33:50.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.615" endtime="20201110 08:33:50.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.613" endtime="20201110 08:33:50.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.609" endtime="20201110 08:33:50.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.246" endtime="20201110 08:33:50.636"></status>
</kw>
<msg timestamp="20201110 08:33:50.636" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.644" endtime="20201110 08:33:50.656"></status>
</kw>
<msg timestamp="20201110 08:33:50.656" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.642" endtime="20201110 08:33:50.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.659" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.657" endtime="20201110 08:33:50.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.660" endtime="20201110 08:33:50.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.639" endtime="20201110 08:33:50.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.638" endtime="20201110 08:33:50.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.669" endtime="20201110 08:33:50.955"></status>
</kw>
<msg timestamp="20201110 08:33:50.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020036111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.668" endtime="20201110 08:33:50.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020036111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.959" endtime="20201110 08:33:50.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.967" endtime="20201110 08:33:50.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.665" endtime="20201110 08:33:50.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.663" endtime="20201110 08:33:50.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.974" level="INFO">${RESULT} = [{'time': 0.020038861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.020053444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:50.971" endtime="20201110 08:33:50.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:50.987" level="INFO">${OVERHEAD} = {'source_diff': [2.7500000000027502e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6800000000014312e-...</msg>
<status status="PASS" starttime="20201110 08:33:50.975" endtime="20201110 08:33:50.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.991" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:50.990" endtime="20201110 08:33:50.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.994" level="INFO">VALUE: [2.7500000000027502e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.694000000001001e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6520000000022914e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6939999999975317e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.722000000000141e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.695000000000475e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.694000000001001e-06, 2.6809999999974354e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.722000000000141e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.735999999999711e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201110 08:33:50.993" endtime="20201110 08:33:50.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.988" endtime="20201110 08:33:50.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.998" endtime="20201110 08:33:50.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.001" endtime="20201110 08:33:51.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.000" endtime="20201110 08:33:51.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.996" endtime="20201110 08:33:51.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.636" endtime="20201110 08:33:51.022"></status>
</kw>
<msg timestamp="20201110 08:33:51.022" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.030" endtime="20201110 08:33:51.042"></status>
</kw>
<msg timestamp="20201110 08:33:51.042" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.028" endtime="20201110 08:33:51.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.045" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.043" endtime="20201110 08:33:51.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.046" endtime="20201110 08:33:51.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.026" endtime="20201110 08:33:51.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.024" endtime="20201110 08:33:51.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.055" endtime="20201110 08:33:51.361"></status>
</kw>
<msg timestamp="20201110 08:33:51.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019643931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.053" endtime="20201110 08:33:51.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019643931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.365" endtime="20201110 08:33:51.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.373" endtime="20201110 08:33:51.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.051" endtime="20201110 08:33:51.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.049" endtime="20201110 08:33:51.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.380" level="INFO">${RESULT} = [{'time': 0.019646625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.019657736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:51.377" endtime="20201110 08:33:51.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:51.393" level="INFO">${OVERHEAD} = {'source_diff': [2.694000000001001e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.597000000000016e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.597000000000016e-0...</msg>
<status status="PASS" starttime="20201110 08:33:51.381" endtime="20201110 08:33:51.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.398" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:51.397" endtime="20201110 08:33:51.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.400" level="INFO">VALUE: [2.694000000001001e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.597000000000016e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.597000000000016e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.651999999998822e-06, 2.6249999999991558e-06, 2.681000000000905e-06, 2.5979999999994896e-06, 2.665999999998392e-06, 2.639000000002195e-06, 2.6529999999982956e-06, 2.722000000000141e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.722000000000141e-06, 2.651999999998822e-06, 2.653000000001765e-06, 2.7079999999971016e-06, 2.735999999999711e-06, 2.6669999999978655e-06, 2.6939999999975317e-06, 2.5979999999994896e-06, 2.5979999999994896e-06, 2.665999999998392e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.708000000000571e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.679999999997962e-06]</msg>
<status status="PASS" starttime="20201110 08:33:51.399" endtime="20201110 08:33:51.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.394" endtime="20201110 08:33:51.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.404" endtime="20201110 08:33:51.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.407" endtime="20201110 08:33:51.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.406" endtime="20201110 08:33:51.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.402" endtime="20201110 08:33:51.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.023" endtime="20201110 08:33:51.428"></status>
</kw>
<msg timestamp="20201110 08:33:51.428" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.436" endtime="20201110 08:33:51.448"></status>
</kw>
<msg timestamp="20201110 08:33:51.448" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.434" endtime="20201110 08:33:51.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.451" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.449" endtime="20201110 08:33:51.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.452" endtime="20201110 08:33:51.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.432" endtime="20201110 08:33:51.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.430" endtime="20201110 08:33:51.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.461" endtime="20201110 08:33:51.747"></status>
</kw>
<msg timestamp="20201110 08:33:51.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01967475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019677417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:51.459" endtime="20201110 08:33:51.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01967475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019677417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:51.751" endtime="20201110 08:33:51.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.760" endtime="20201110 08:33:51.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.457" endtime="20201110 08:33:51.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.455" endtime="20201110 08:33:51.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.767" level="INFO">${RESULT} = [{'time': 0.019677417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.019685889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:51.763" endtime="20201110 08:33:51.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:51.781" level="INFO">${OVERHEAD} = {'source_diff': [2.6669999999978655e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6809999999974354e...</msg>
<status status="PASS" starttime="20201110 08:33:51.768" endtime="20201110 08:33:51.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.786" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:51.785" endtime="20201110 08:33:51.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.788" level="INFO">VALUE: [2.6669999999978655e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6809999999974354e-06, 2.6520000000022914e-06, 2.665999999998392e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.651999999998822e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.679999999997962e-06, 2.6809999999974354e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.597000000000016e-06, 2.6669999999978655e-06, 2.708000000000571e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.679999999997962e-06, 2.6939999999975317e-06, 2.598000000002959e-06, 2.667000000001335e-06, 2.6389999999987257e-06]</msg>
<status status="PASS" starttime="20201110 08:33:51.787" endtime="20201110 08:33:51.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.782" endtime="20201110 08:33:51.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.792" endtime="20201110 08:33:51.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.795" endtime="20201110 08:33:51.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.794" endtime="20201110 08:33:51.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.790" endtime="20201110 08:33:51.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.429" endtime="20201110 08:33:51.816"></status>
</kw>
<msg timestamp="20201110 08:33:51.816" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.824" endtime="20201110 08:33:51.835"></status>
</kw>
<msg timestamp="20201110 08:33:51.836" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.822" endtime="20201110 08:33:51.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.838" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.837" endtime="20201110 08:33:51.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.839" endtime="20201110 08:33:51.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.820" endtime="20201110 08:33:51.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.818" endtime="20201110 08:33:51.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.848" endtime="20201110 08:33:52.153"></status>
</kw>
<msg timestamp="20201110 08:33:52.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.846" endtime="20201110 08:33:52.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.160" endtime="20201110 08:33:52.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.173" endtime="20201110 08:33:52.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.844" endtime="20201110 08:33:52.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.842" endtime="20201110 08:33:52.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.183" level="INFO">${RESULT} = [{'time': 0.019573292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.019584278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:52.179" endtime="20201110 08:33:52.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:52.198" level="INFO">${OVERHEAD} = {'source_diff': [2.6529999999982956e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6529999999982956e-...</msg>
<status status="PASS" starttime="20201110 08:33:52.184" endtime="20201110 08:33:52.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.203" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:52.202" endtime="20201110 08:33:52.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.206" level="INFO">VALUE: [2.6529999999982956e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.679999999997962e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6809999999974354e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6939999999975317e-06, 2.665999999998392e-06, 2.6520000000022914e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.653000000001765e-06, 2.651999999998822e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.722000000000141e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.639000000002195e-06, 2.694000000001001e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.639000000002195e-06, 2.637999999999252e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6660000000018613e-06]</msg>
<status status="PASS" starttime="20201110 08:33:52.204" endtime="20201110 08:33:52.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.200" endtime="20201110 08:33:52.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.209" endtime="20201110 08:33:52.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.213" endtime="20201110 08:33:52.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.211" endtime="20201110 08:33:52.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.208" endtime="20201110 08:33:52.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.817" endtime="20201110 08:33:52.233"></status>
</kw>
<msg timestamp="20201110 08:33:52.234" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.242" endtime="20201110 08:33:52.254"></status>
</kw>
<msg timestamp="20201110 08:33:52.254" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.240" endtime="20201110 08:33:52.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.257" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.255" endtime="20201110 08:33:52.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.258" endtime="20201110 08:33:52.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.237" endtime="20201110 08:33:52.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.236" endtime="20201110 08:33:52.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.267" endtime="20201110 08:33:52.551"></status>
</kw>
<msg timestamp="20201110 08:33:52.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020031278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020033944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.265" endtime="20201110 08:33:52.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020031278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020033944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.555" endtime="20201110 08:33:52.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.563" endtime="20201110 08:33:52.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.263" endtime="20201110 08:33:52.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.261" endtime="20201110 08:33:52.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.570" level="INFO">${RESULT} = [{'time': 0.020033944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.020045611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:52.567" endtime="20201110 08:33:52.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:52.583" level="INFO">${OVERHEAD} = {'source_diff': [2.6660000000018613e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.694000000001001e-06, 2.6250000000026252e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.66600000000186...</msg>
<status status="PASS" starttime="20201110 08:33:52.571" endtime="20201110 08:33:52.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.588" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:52.587" endtime="20201110 08:33:52.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.590" level="INFO">VALUE: [2.6660000000018613e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.694000000001001e-06, 2.6250000000026252e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.639000000002195e-06, 2.6249999999991558e-06, 2.665999999998392e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.6939999999975317e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.735999999999711e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.653000000001765e-06, 2.6249999999991558e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.694000000001001e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6939999999975317e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201110 08:33:52.589" endtime="20201110 08:33:52.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.584" endtime="20201110 08:33:52.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.594" endtime="20201110 08:33:52.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.597" endtime="20201110 08:33:52.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.596" endtime="20201110 08:33:52.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.592" endtime="20201110 08:33:52.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.234" endtime="20201110 08:33:52.618"></status>
</kw>
<msg timestamp="20201110 08:33:52.618" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.626" endtime="20201110 08:33:52.638"></status>
</kw>
<msg timestamp="20201110 08:33:52.639" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.624" endtime="20201110 08:33:52.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.641" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.640" endtime="20201110 08:33:52.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.642" endtime="20201110 08:33:52.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.622" endtime="20201110 08:33:52.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.620" endtime="20201110 08:33:52.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.651" endtime="20201110 08:33:52.937"></status>
</kw>
<msg timestamp="20201110 08:33:52.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019688556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.649" endtime="20201110 08:33:52.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019688556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.941" endtime="20201110 08:33:52.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.950" endtime="20201110 08:33:52.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.647" endtime="20201110 08:33:52.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.645" endtime="20201110 08:33:52.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.956" level="INFO">${RESULT} = [{'time': 0.019691222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.019704181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:52.953" endtime="20201110 08:33:52.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:52.970" level="INFO">${OVERHEAD} = {'source_diff': [2.6660000000018613e-06, 2.667000000001335e-06, 2.6949999999970053e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.667000000001335e-...</msg>
<status status="PASS" starttime="20201110 08:33:52.957" endtime="20201110 08:33:52.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.974" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:52.973" endtime="20201110 08:33:52.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.977" level="INFO">VALUE: [2.6660000000018613e-06, 2.667000000001335e-06, 2.6949999999970053e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.735999999999711e-06, 2.6809999999974354e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.5979999999994896e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.637999999999252e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6949999999970053e-06, 2.6249999999991558e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 2.679999999997962e-06]</msg>
<status status="PASS" starttime="20201110 08:33:52.975" endtime="20201110 08:33:52.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.971" endtime="20201110 08:33:52.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.980" endtime="20201110 08:33:52.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.984" endtime="20201110 08:33:53.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.982" endtime="20201110 08:33:53.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.979" endtime="20201110 08:33:53.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.619" endtime="20201110 08:33:53.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.082" endtime="20201110 08:33:53.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.008" endtime="20201110 08:33:53.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.007" endtime="20201110 08:33:53.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.006" endtime="20201110 08:33:53.029"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:45.012" endtime="20201110 08:33:53.029" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.036" endtime="20201110 08:33:53.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.034" endtime="20201110 08:33:53.056"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.069" endtime="20201110 08:33:53.083"></status>
</kw>
<msg timestamp="20201110 08:33:53.084" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.067" endtime="20201110 08:33:53.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.086" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.085" endtime="20201110 08:33:53.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.089" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:53.087" endtime="20201110 08:33:53.089"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:53.064" endtime="20201110 08:33:53.090"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:53.062" endtime="20201110 08:33:53.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.061" endtime="20201110 08:33:53.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:53.095" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:53.094" endtime="20201110 08:33:53.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.092" endtime="20201110 08:33:53.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.060" endtime="20201110 08:33:53.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.059" endtime="20201110 08:33:53.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.096" endtime="20201110 08:33:53.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.058" endtime="20201110 08:33:53.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.056" endtime="20201110 08:33:53.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.033" endtime="20201110 08:33:53.099"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.107" endtime="20201110 08:33:53.127"></status>
</kw>
<msg timestamp="20201110 08:33:53.128" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.106" endtime="20201110 08:33:53.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.130" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.129" endtime="20201110 08:33:53.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.131" endtime="20201110 08:33:53.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.103" endtime="20201110 08:33:53.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.101" endtime="20201110 08:33:53.134"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.136" endtime="20201110 08:33:53.138"></status>
</kw>
<msg timestamp="20201110 08:33:53.138" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:53.135" endtime="20201110 08:33:53.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.142" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:53.141" endtime="20201110 08:33:53.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.144" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:53.143" endtime="20201110 08:33:53.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.139" endtime="20201110 08:33:53.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.149" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:53.148" endtime="20201110 08:33:53.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.151" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:53.150" endtime="20201110 08:33:53.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.146" endtime="20201110 08:33:53.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.159" endtime="20201110 08:33:53.447"></status>
</kw>
<msg timestamp="20201110 08:33:53.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064610361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064617778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.157" endtime="20201110 08:33:53.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064610361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064617778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.451" endtime="20201110 08:33:53.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.460" endtime="20201110 08:33:53.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.154" endtime="20201110 08:33:53.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.153" endtime="20201110 08:33:53.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.466" level="INFO">${RESULT} = [{'time': 0.064617778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.416999999995677e-06, 'source_diff': 7.416999999995677e-06}, {'time': 0.064638722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:53.463" endtime="20201110 08:33:53.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:53.480" level="INFO">${OVERHEAD} = {'source_diff': [7.416999999995677e-06, 7.582999999991569e-06, 7.5969999999980775e-06, 7.555000000006307e-06, 7.5969999999980775e-06, 7.570000000012289e-06, 7.5969999999980775e-06, 7.582999999991569e-...</msg>
<status status="PASS" starttime="20201110 08:33:53.467" endtime="20201110 08:33:53.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.484" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:33:53.483" endtime="20201110 08:33:53.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.487" level="INFO">VALUE: [7.416999999995677e-06, 7.582999999991569e-06, 7.5969999999980775e-06, 7.555000000006307e-06, 7.5969999999980775e-06, 7.570000000012289e-06, 7.5969999999980775e-06, 7.582999999991569e-06, 7.5830000000054465e-06, 7.514000000000132e-06, 7.5969999999980775e-06, 7.582999999991569e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.582999999991569e-06, 7.611999999990182e-06, 7.58400000000492e-06, 7.582999999991569e-06, 7.5969999999980775e-06, 7.568999999998938e-06, 7.624999999997217e-06, 7.5830000000054465e-06, 7.582999999991569e-06, 7.5690000000128155e-06, 7.652999999996357e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.625000000011095e-06, 7.58400000000492e-06, 7.5559999999919025e-06, 7.582999999991569e-06, 7.582999999991569e-06, 7.5969999999980775e-06, 7.58400000000492e-06, 7.5969999999980775e-06, 7.58400000000492e-06, 7.611000000004586e-06, 7.583999999991042e-06, 7.55600000000578e-06, 7.58400000000492e-06, 7.5830000000054465e-06, 7.5830000000054465e-06, 7.5969999999980775e-06, 7.58400000000492e-06, 7.58400000000492e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.5830000000054465e-06, 7.5830000000054465e-06]</msg>
<status status="PASS" starttime="20201110 08:33:53.486" endtime="20201110 08:33:53.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.481" endtime="20201110 08:33:53.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.490" endtime="20201110 08:33:53.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.494" endtime="20201110 08:33:53.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.492" endtime="20201110 08:33:53.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.489" endtime="20201110 08:33:53.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.100" endtime="20201110 08:33:53.515"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:53.030" endtime="20201110 08:33:53.515" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.522" endtime="20201110 08:33:53.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.520" endtime="20201110 08:33:53.542"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.555" endtime="20201110 08:33:53.570"></status>
</kw>
<msg timestamp="20201110 08:33:53.570" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.553" endtime="20201110 08:33:53.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.571" endtime="20201110 08:33:53.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.576" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:53.574" endtime="20201110 08:33:53.576"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:53.550" endtime="20201110 08:33:53.577"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:53.548" endtime="20201110 08:33:53.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.547" endtime="20201110 08:33:53.578"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:53.582" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:53.581" endtime="20201110 08:33:53.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.579" endtime="20201110 08:33:53.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.546" endtime="20201110 08:33:53.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.546" endtime="20201110 08:33:53.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.583" endtime="20201110 08:33:53.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.544" endtime="20201110 08:33:53.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.542" endtime="20201110 08:33:53.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.519" endtime="20201110 08:33:53.586"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.595" endtime="20201110 08:33:53.699"></status>
</kw>
<msg timestamp="20201110 08:33:53.699" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.593" endtime="20201110 08:33:53.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.702" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.700" endtime="20201110 08:33:53.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.703" endtime="20201110 08:33:53.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.591" endtime="20201110 08:33:53.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.588" endtime="20201110 08:33:53.706"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.708" endtime="20201110 08:33:53.709"></status>
</kw>
<msg timestamp="20201110 08:33:53.710" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:53.706" endtime="20201110 08:33:53.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.714" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:53.713" endtime="20201110 08:33:53.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.716" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:53.715" endtime="20201110 08:33:53.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.711" endtime="20201110 08:33:53.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.721" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:53.720" endtime="20201110 08:33:53.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.723" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:53.722" endtime="20201110 08:33:53.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.717" endtime="20201110 08:33:53.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.731" endtime="20201110 08:33:54.026"></status>
</kw>
<msg timestamp="20201110 08:33:54.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067379056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067438611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.728" endtime="20201110 08:33:54.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067379056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067438611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.031" endtime="20201110 08:33:54.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.040" endtime="20201110 08:33:54.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.726" endtime="20201110 08:33:54.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.724" endtime="20201110 08:33:54.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.048" level="INFO">${RESULT} = [{'time': 0.067438611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.955499999998892e-05, 'source_diff': 5.955499999998892e-05}, {'time': 0.069145556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:54.044" endtime="20201110 08:33:54.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:54.062" level="INFO">${OVERHEAD} = {'source_diff': [5.955499999998892e-05, 5.9305999999995085e-05, 5.940299999999954e-05, 5.9333999999994225e-05, 5.9333999999994225e-05, 5.933299999999475e-05, 5.936100000000777e-05, 5.930600000000896e-...</msg>
<status status="PASS" starttime="20201110 08:33:54.049" endtime="20201110 08:33:54.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.067" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:33:54.066" endtime="20201110 08:33:54.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.069" level="INFO">VALUE: [5.955499999998892e-05, 5.9305999999995085e-05, 5.940299999999954e-05, 5.9333999999994225e-05, 5.9333999999994225e-05, 5.933299999999475e-05, 5.936100000000777e-05, 5.930600000000896e-05, 5.9277999999995945e-05, 5.931900000000212e-05, 5.9320000000001594e-05, 5.934700000000126e-05, 5.9305999999995085e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.9249999999996805e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.929100000000298e-05, 5.9277999999995945e-05, 5.931900000000212e-05, 5.933299999999475e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.930499999999561e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.930600000000896e-05, 5.933299999999475e-05, 5.931900000000212e-05, 5.9305999999995085e-05, 5.9333999999994225e-05, 5.931900000000212e-05, 5.933300000000863e-05, 5.931900000000212e-05, 5.933299999999475e-05, 5.9333999999994225e-05, 5.934700000001514e-05, 5.9318999999974364e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.9320000000001594e-05, 5.931900000000212e-05, 5.934699999998738e-05, 5.931900000000212e-05, 5.9320000000001594e-05, 5.934699999998738e-05, 5.9320000000001594e-05, 5.931900000000212e-05]</msg>
<status status="PASS" starttime="20201110 08:33:54.068" endtime="20201110 08:33:54.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.063" endtime="20201110 08:33:54.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.073" endtime="20201110 08:33:54.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.076" endtime="20201110 08:33:54.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.075" endtime="20201110 08:33:54.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.071" endtime="20201110 08:33:54.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.587" endtime="20201110 08:33:54.097"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:53.517" endtime="20201110 08:33:54.097" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.104" endtime="20201110 08:33:54.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.102" endtime="20201110 08:33:54.124"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.138" endtime="20201110 08:33:54.152"></status>
</kw>
<msg timestamp="20201110 08:33:54.153" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.135" endtime="20201110 08:33:54.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.155" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.154" endtime="20201110 08:33:54.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.158" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:54.156" endtime="20201110 08:33:54.159"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:54.133" endtime="20201110 08:33:54.159"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:54.130" endtime="20201110 08:33:54.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.129" endtime="20201110 08:33:54.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:54.164" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:54.163" endtime="20201110 08:33:54.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.161" endtime="20201110 08:33:54.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.128" endtime="20201110 08:33:54.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.128" endtime="20201110 08:33:54.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.166" endtime="20201110 08:33:54.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.126" endtime="20201110 08:33:54.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.125" endtime="20201110 08:33:54.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.101" endtime="20201110 08:33:54.169"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.177" endtime="20201110 08:33:54.510"></status>
</kw>
<msg timestamp="20201110 08:33:54.511" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.176" endtime="20201110 08:33:54.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.514" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.512" endtime="20201110 08:33:54.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.515" endtime="20201110 08:33:54.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.173" endtime="20201110 08:33:54.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.171" endtime="20201110 08:33:54.517"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.519" endtime="20201110 08:33:54.521"></status>
</kw>
<msg timestamp="20201110 08:33:54.521" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:54.518" endtime="20201110 08:33:54.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.525" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:54.524" endtime="20201110 08:33:54.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.527" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:54.527" endtime="20201110 08:33:54.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.522" endtime="20201110 08:33:54.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.532" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:54.531" endtime="20201110 08:33:54.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.534" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:54.533" endtime="20201110 08:33:54.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.529" endtime="20201110 08:33:54.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.543" endtime="20201110 08:33:54.835"></status>
</kw>
<msg timestamp="20201110 08:33:54.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071359917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071473625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.540" endtime="20201110 08:33:54.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071359917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071473625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.839" endtime="20201110 08:33:54.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.847" endtime="20201110 08:33:54.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.538" endtime="20201110 08:33:54.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.536" endtime="20201110 08:33:54.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.853" level="INFO">${RESULT} = [{'time': 0.071473625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011370800000000403, 'source_diff': 0.00011370800000000403}, {'time': 0.0777355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:54.850" endtime="20201110 08:33:54.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:54.867" level="INFO">${OVERHEAD} = {'source_diff': [0.00011370800000000403, 0.00011215300000000372, 0.00011215300000000372, 0.000112209000000002, 0.00011216699999999635, 0.00011215300000000372, 0.00011218099999998898, 0.000112138999999...</msg>
<status status="PASS" starttime="20201110 08:33:54.855" endtime="20201110 08:33:54.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.871" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:33:54.870" endtime="20201110 08:33:54.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.874" level="INFO">VALUE: [0.00011370800000000403, 0.00011215300000000372, 0.00011215300000000372, 0.000112209000000002, 0.00011216699999999635, 0.00011215300000000372, 0.00011218099999998898, 0.00011213899999999721, 0.00011213899999999721, 0.00011215200000000425, 0.00011215300000000372, 0.00011215299999997597, 0.00011209700000000544, 0.00011218100000001674, 0.00011216699999999635, 0.00011213899999998334, 0.00011220800000000253, 0.0001121249999999907, 0.00011213899999998334, 0.00011219500000000937, 0.00011215300000000372, 0.00011216699999999635, 0.00011218099999998898, 0.00011215299999997597, 0.00011215300000000372, 0.00011215300000000372, 0.00011216699999999635, 0.00011215300000000372, 0.00011216700000002411, 0.00011216699999999635, 0.00011215300000000372, 0.0001120970000000332, 0.00011213799999998386, 0.00011219499999998161, 0.00011211100000002583, 0.00011215199999997649, 0.00011215300000000372, 0.0001121810000000445, 0.00011216699999999635, 0.00011215300000000372, 0.00011213900000001109, 0.00011213900000001109, 0.00011218099999998898, 0.00011216699999999635, 0.0001121940000000099, 0.00011215199999997649, 0.00011220900000002976, 0.00011211099999997032, 0.00011215300000000372, 0.00011216699999999635]</msg>
<status status="PASS" starttime="20201110 08:33:54.872" endtime="20201110 08:33:54.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.868" endtime="20201110 08:33:54.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.881" endtime="20201110 08:33:54.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.888" endtime="20201110 08:33:54.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.885" endtime="20201110 08:33:54.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.878" endtime="20201110 08:33:54.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.169" endtime="20201110 08:33:54.913"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:54.099" endtime="20201110 08:33:54.914" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.928" endtime="20201110 08:33:54.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.925" endtime="20201110 08:33:54.951"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.977" endtime="20201110 08:33:54.992"></status>
</kw>
<msg timestamp="20201110 08:33:54.992" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.976" endtime="20201110 08:33:54.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.996" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.994" endtime="20201110 08:33:54.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.000" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:54.997" endtime="20201110 08:33:55.000"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:54.969" endtime="20201110 08:33:55.001"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:54.964" endtime="20201110 08:33:55.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.961" endtime="20201110 08:33:55.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:55.009" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:55.008" endtime="20201110 08:33:55.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.005" endtime="20201110 08:33:55.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.960" endtime="20201110 08:33:55.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.958" endtime="20201110 08:33:55.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.012" endtime="20201110 08:33:55.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.956" endtime="20201110 08:33:55.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.952" endtime="20201110 08:33:55.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.922" endtime="20201110 08:33:55.015"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.024" endtime="20201110 08:33:55.044"></status>
</kw>
<msg timestamp="20201110 08:33:55.045" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.022" endtime="20201110 08:33:55.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.047" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.046" endtime="20201110 08:33:55.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.048" endtime="20201110 08:33:55.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.020" endtime="20201110 08:33:55.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.018" endtime="20201110 08:33:55.051"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.053" endtime="20201110 08:33:55.055"></status>
</kw>
<msg timestamp="20201110 08:33:55.055" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:55.052" endtime="20201110 08:33:55.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.059" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:55.058" endtime="20201110 08:33:55.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.061" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:55.060" endtime="20201110 08:33:55.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.056" endtime="20201110 08:33:55.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.066" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:55.065" endtime="20201110 08:33:55.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.068" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:55.067" endtime="20201110 08:33:55.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.063" endtime="20201110 08:33:55.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.079" endtime="20201110 08:33:55.365"></status>
</kw>
<msg timestamp="20201110 08:33:55.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.088414625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.088416931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.077" endtime="20201110 08:33:55.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.088414625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.088416931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.369" endtime="20201110 08:33:55.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.378" endtime="20201110 08:33:55.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.071" endtime="20201110 08:33:55.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.069" endtime="20201110 08:33:55.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.385" level="INFO">${RESULT} = [{'time': 0.088416931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3060000000074687e-06, 'source_diff': 2.3060000000074687e-06}, {'time': 0.088433375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:55.381" endtime="20201110 08:33:55.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:55.398" level="INFO">${OVERHEAD} = {'source_diff': [2.3060000000074687e-06, 2.305999999993591e-06, 2.3060000000074687e-06, 2.3060000000074687e-06, 2.305000000007995e-06, 2.237000000002154e-06, 2.3049999999941173e-06, 2.319000000000626e...</msg>
<status status="PASS" starttime="20201110 08:33:55.386" endtime="20201110 08:33:55.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.403" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:33:55.402" endtime="20201110 08:33:55.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.405" level="INFO">VALUE: [2.3060000000074687e-06, 2.305999999993591e-06, 2.3060000000074687e-06, 2.3060000000074687e-06, 2.305000000007995e-06, 2.237000000002154e-06, 2.3049999999941173e-06, 2.319000000000626e-06, 2.3339999999927308e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.3049999999941173e-06, 2.3060000000074687e-06, 2.3749999999989058e-06, 2.305999999993591e-06, 2.2769999999949775e-06, 2.3200000000000998e-06, 2.332999999993257e-06, 2.319000000000626e-06, 2.332999999993257e-06, 2.3060000000074687e-06, 2.305999999993591e-06, 2.305000000007995e-06, 2.333000000007135e-06, 2.3060000000074687e-06, 2.29200000000096e-06, 2.26400000000182e-06, 2.305999999993591e-06, 2.3749999999989058e-06, 2.3200000000000998e-06, 2.3060000000074687e-06, 2.250000000009189e-06, 2.332999999993257e-06, 2.3610000000062747e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.3049999999941173e-06, 2.3200000000000998e-06, 2.305999999993591e-06, 2.3200000000000998e-06, 2.29200000000096e-06, 2.3049999999941173e-06, 2.29200000000096e-06, 2.3610000000062747e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.305000000007995e-06, 2.3189999999867483e-06, 2.3200000000000998e-06, 2.2910000000014863e-06]</msg>
<status status="PASS" starttime="20201110 08:33:55.404" endtime="20201110 08:33:55.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.399" endtime="20201110 08:33:55.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.409" endtime="20201110 08:33:55.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.412" endtime="20201110 08:33:55.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.410" endtime="20201110 08:33:55.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.407" endtime="20201110 08:33:55.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.016" endtime="20201110 08:33:55.432"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:54.917" endtime="20201110 08:33:55.433" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.440" endtime="20201110 08:33:55.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.438" endtime="20201110 08:33:55.460"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.473" endtime="20201110 08:33:55.488"></status>
</kw>
<msg timestamp="20201110 08:33:55.488" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.472" endtime="20201110 08:33:55.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.491" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.489" endtime="20201110 08:33:55.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.494" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:55.492" endtime="20201110 08:33:55.494"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:55.468" endtime="20201110 08:33:55.495"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:55.466" endtime="20201110 08:33:55.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.465" endtime="20201110 08:33:55.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:55.500" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:55.499" endtime="20201110 08:33:55.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.497" endtime="20201110 08:33:55.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.464" endtime="20201110 08:33:55.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.463" endtime="20201110 08:33:55.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.501" endtime="20201110 08:33:55.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.462" endtime="20201110 08:33:55.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.460" endtime="20201110 08:33:55.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.437" endtime="20201110 08:33:55.504"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.513" endtime="20201110 08:33:55.618"></status>
</kw>
<msg timestamp="20201110 08:33:55.619" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.511" endtime="20201110 08:33:55.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.621" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.620" endtime="20201110 08:33:55.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.623" endtime="20201110 08:33:55.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.508" endtime="20201110 08:33:55.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.506" endtime="20201110 08:33:55.627"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.631" endtime="20201110 08:33:55.633"></status>
</kw>
<msg timestamp="20201110 08:33:55.634" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:55.628" endtime="20201110 08:33:55.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.642" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:55.640" endtime="20201110 08:33:55.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.645" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:55.643" endtime="20201110 08:33:55.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.636" endtime="20201110 08:33:55.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.650" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:55.649" endtime="20201110 08:33:55.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.652" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:55.651" endtime="20201110 08:33:55.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.647" endtime="20201110 08:33:55.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.661" endtime="20201110 08:33:55.952"></status>
</kw>
<msg timestamp="20201110 08:33:55.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067594472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067613097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.658" endtime="20201110 08:33:55.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067594472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067613097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.957" endtime="20201110 08:33:55.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.965" endtime="20201110 08:33:55.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.655" endtime="20201110 08:33:55.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.653" endtime="20201110 08:33:55.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.972" level="INFO">${RESULT} = [{'time': 0.067613097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.862499999999434e-05, 'source_diff': 1.862499999999434e-05}, {'time': 0.069330278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:55.968" endtime="20201110 08:33:55.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:55.985" level="INFO">${OVERHEAD} = {'source_diff': [1.862499999999434e-05, 1.866699999999999e-05, 1.863900000000085e-05, 1.8653000000007358e-05, 1.8612000000001183e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.863900000000085e-0...</msg>
<status status="PASS" starttime="20201110 08:33:55.973" endtime="20201110 08:33:55.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.990" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:33:55.989" endtime="20201110 08:33:55.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.992" level="INFO">VALUE: [1.862499999999434e-05, 1.866699999999999e-05, 1.863900000000085e-05, 1.8653000000007358e-05, 1.8612000000001183e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.862499999999434e-05, 1.866699999999999e-05, 1.856900000000994e-05, 1.865299999999348e-05, 1.856899999999606e-05, 1.862499999999434e-05, 1.8638000000001376e-05, 1.863900000000085e-05, 1.8693999999999655e-05, 1.8679999999993147e-05, 1.8612000000001183e-05, 1.85969999999952e-05, 1.865299999999348e-05, 1.865299999999348e-05, 1.863899999998697e-05, 1.8612000000001183e-05, 1.863900000000085e-05, 1.856900000000994e-05, 1.865299999999348e-05, 1.863900000000085e-05, 1.861100000000171e-05, 1.865299999999348e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.8651999999994007e-05, 1.8639000000014727e-05, 1.862499999999434e-05, 1.862499999999434e-05, 1.8639000000014727e-05, 1.8639000000014727e-05, 1.8721999999998795e-05, 1.8653000000007358e-05, 1.8625000000022096e-05, 1.862499999999434e-05, 1.8625000000022096e-05, 1.8721999999998795e-05, 1.8637999999987498e-05, 1.861100000000171e-05, 1.865199999998013e-05, 1.863899999998697e-05, 1.861100000000171e-05]</msg>
<status status="PASS" starttime="20201110 08:33:55.991" endtime="20201110 08:33:55.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.986" endtime="20201110 08:33:55.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.996" endtime="20201110 08:33:55.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.999" endtime="20201110 08:33:56.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.997" endtime="20201110 08:33:56.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.994" endtime="20201110 08:33:56.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.505" endtime="20201110 08:33:56.020"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:55.434" endtime="20201110 08:33:56.020" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.027" endtime="20201110 08:33:56.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.026" endtime="20201110 08:33:56.047"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.061" endtime="20201110 08:33:56.074"></status>
</kw>
<msg timestamp="20201110 08:33:56.075" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.058" endtime="20201110 08:33:56.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.077" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.076" endtime="20201110 08:33:56.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.081" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:56.078" endtime="20201110 08:33:56.081"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:56.056" endtime="20201110 08:33:56.082"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:56.053" endtime="20201110 08:33:56.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.052" endtime="20201110 08:33:56.082"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:56.086" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:56.086" endtime="20201110 08:33:56.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.083" endtime="20201110 08:33:56.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.051" endtime="20201110 08:33:56.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.051" endtime="20201110 08:33:56.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.088" endtime="20201110 08:33:56.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.049" endtime="20201110 08:33:56.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.048" endtime="20201110 08:33:56.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.024" endtime="20201110 08:33:56.091"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.099" endtime="20201110 08:33:56.438"></status>
</kw>
<msg timestamp="20201110 08:33:56.439" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.097" endtime="20201110 08:33:56.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.445" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.442" endtime="20201110 08:33:56.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.447" endtime="20201110 08:33:56.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.095" endtime="20201110 08:33:56.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.093" endtime="20201110 08:33:56.452"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.457" endtime="20201110 08:33:56.460"></status>
</kw>
<msg timestamp="20201110 08:33:56.461" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:56.454" endtime="20201110 08:33:56.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.469" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:56.467" endtime="20201110 08:33:56.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.474" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:56.472" endtime="20201110 08:33:56.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.463" endtime="20201110 08:33:56.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.484" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:56.481" endtime="20201110 08:33:56.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.488" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:56.486" endtime="20201110 08:33:56.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.477" endtime="20201110 08:33:56.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.498" endtime="20201110 08:33:56.791"></status>
</kw>
<msg timestamp="20201110 08:33:56.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070947375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070982681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.497" endtime="20201110 08:33:56.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070947375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070982681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.795" endtime="20201110 08:33:56.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.803" endtime="20201110 08:33:56.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.494" endtime="20201110 08:33:56.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.491" endtime="20201110 08:33:56.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.810" level="INFO">${RESULT} = [{'time': 0.070982681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5306000000012716e-05, 'source_diff': 3.5306000000012716e-05}, {'time': 0.077288653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:56.807" endtime="20201110 08:33:56.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:56.824" level="INFO">${OVERHEAD} = {'source_diff': [3.5306000000012716e-05, 3.532000000000535e-05, 3.5304999999999365e-05, 3.5304999999999365e-05, 3.5332999999998504e-05, 3.525000000000056e-05, 3.5278000000013576e-05, 3.531999999999147...</msg>
<status status="PASS" starttime="20201110 08:33:56.811" endtime="20201110 08:33:56.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.829" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:33:56.828" endtime="20201110 08:33:56.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.831" level="INFO">VALUE: [3.5306000000012716e-05, 3.532000000000535e-05, 3.5304999999999365e-05, 3.5304999999999365e-05, 3.5332999999998504e-05, 3.525000000000056e-05, 3.5278000000013576e-05, 3.531999999999147e-05, 3.530599999999884e-05, 3.531999999997759e-05, 3.530499999998549e-05, 3.530499999998549e-05, 3.538900000002454e-05, 3.5290999999992856e-05, 3.532000000000535e-05, 3.5290999999992856e-05, 3.5332999999998504e-05, 3.5332999999998504e-05, 3.5319000000005873e-05, 3.532000000000535e-05, 3.5332999999998504e-05, 3.530500000001324e-05, 3.537500000000415e-05, 3.5319000000005873e-05, 3.530599999998496e-05, 3.5346999999991136e-05, 3.530500000001324e-05, 3.530499999998549e-05, 3.5292000000020085e-05, 3.531900000003363e-05, 3.5388999999996784e-05, 3.5290999999992856e-05, 3.530499999998549e-05, 3.533399999999798e-05, 3.530499999998549e-05, 3.5292000000020085e-05, 3.531900000003363e-05, 3.5291999999964574e-05, 3.532000000000535e-05, 3.533299999997075e-05, 3.5305000000041e-05, 3.5305000000041e-05, 3.533300000002626e-05, 3.531899999997812e-05, 3.530499999998549e-05, 3.5305999999957205e-05, 3.5306000000012716e-05, 3.5291999999964574e-05, 3.5305999999957205e-05, 3.532000000000535e-05]</msg>
<status status="PASS" starttime="20201110 08:33:56.830" endtime="20201110 08:33:56.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.825" endtime="20201110 08:33:56.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.835" endtime="20201110 08:33:56.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.838" endtime="20201110 08:33:56.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.836" endtime="20201110 08:33:56.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.833" endtime="20201110 08:33:56.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.091" endtime="20201110 08:33:56.860"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:56.022" endtime="20201110 08:33:56.860" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:34.488" endtime="20201110 08:33:56.869"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.936" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:56.944" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:58.151" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:56.935" endtime="20201110 08:33:58.151"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.154" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:33:58.152" endtime="20201110 08:33:58.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.933" endtime="20201110 08:33:58.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.157" endtime="20201110 08:33:58.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.156" endtime="20201110 08:33:58.346"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.359" endtime="20201110 08:33:58.374"></status>
</kw>
<msg timestamp="20201110 08:33:58.374" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201110 08:33:58.357" endtime="20201110 08:33:58.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.377" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201110 08:33:58.375" endtime="20201110 08:33:58.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.380" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:58.378" endtime="20201110 08:33:58.380"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:58.355" endtime="20201110 08:33:58.381"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:58.353" endtime="20201110 08:33:58.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.351" endtime="20201110 08:33:58.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:58.387" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:58.385" endtime="20201110 08:33:58.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.383" endtime="20201110 08:33:58.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.350" endtime="20201110 08:33:58.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.349" endtime="20201110 08:33:58.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.389" endtime="20201110 08:33:58.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.348" endtime="20201110 08:33:58.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.391" endtime="20201110 08:33:58.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.347" endtime="20201110 08:33:58.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.932" endtime="20201110 08:33:58.394"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.400" endtime="20201110 08:33:58.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.398" endtime="20201110 08:33:58.419"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.432" endtime="20201110 08:33:58.447"></status>
</kw>
<msg timestamp="20201110 08:33:58.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.431" endtime="20201110 08:33:58.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.450" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.448" endtime="20201110 08:33:58.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.453" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:58.451" endtime="20201110 08:33:58.453"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:58.428" endtime="20201110 08:33:58.454"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:58.426" endtime="20201110 08:33:58.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.425" endtime="20201110 08:33:58.455"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:58.459" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:58.458" endtime="20201110 08:33:58.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.456" endtime="20201110 08:33:58.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.424" endtime="20201110 08:33:58.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.423" endtime="20201110 08:33:58.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.461" endtime="20201110 08:33:58.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.422" endtime="20201110 08:33:58.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.420" endtime="20201110 08:33:58.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.397" endtime="20201110 08:33:58.463"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.474" endtime="20201110 08:33:58.489"></status>
</kw>
<msg timestamp="20201110 08:33:58.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.472" endtime="20201110 08:33:58.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.490" endtime="20201110 08:33:58.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.493" endtime="20201110 08:33:58.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.469" endtime="20201110 08:33:58.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.467" endtime="20201110 08:33:58.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.502" endtime="20201110 08:33:58.792"></status>
</kw>
<msg timestamp="20201110 08:33:58.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067067028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067071125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.500" endtime="20201110 08:33:58.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067067028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067071125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.796" endtime="20201110 08:33:58.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.805" endtime="20201110 08:33:58.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.498" endtime="20201110 08:33:58.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.496" endtime="20201110 08:33:58.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.812" level="INFO">${RESULT} = [{'time': 0.067071125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999994577e-06, 'source_diff': 4.096999999994577e-06}, {'time': 0.067088917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:58.808" endtime="20201110 08:33:58.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:58.826" level="INFO">${ACCURACY} = {'source_diff': [4.096999999994577e-06, 4.652999999993357e-06, 4.722999999998145e-06, 4.707999999992163e-06, 4.679999999993023e-06, 4.153000000006735e-06, 4.070000000008789e-06, 4.666000000000392e-06,...</msg>
<status status="PASS" starttime="20201110 08:33:58.813" endtime="20201110 08:33:58.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.830" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:33:58.829" endtime="20201110 08:33:58.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.833" level="INFO">VALUE: [4.096999999994577e-06, 4.652999999993357e-06, 4.722999999998145e-06, 4.707999999992163e-06, 4.679999999993023e-06, 4.153000000006735e-06, 4.070000000008789e-06, 4.666000000000392e-06, 4.709000000005514e-06, 4.6810000000063745e-06, 4.6810000000063745e-06, 4.124999999993717e-06, 4.693999999999532e-06, 4.652999999993357e-06, 4.082999999988068e-06, 4.096999999994577e-06, 4.068999999995437e-06, 4.6949999999990055e-06, 4.679999999993023e-06, 4.111000000001086e-06, 4.069999999994911e-06, 4.6949999999990055e-06, 4.679999999993023e-06, 4.097000000008455e-06, 4.653000000007235e-06, 4.679999999993023e-06, 4.083000000001946e-06, 4.708000000006041e-06, 4.693999999999532e-06, 4.709000000005514e-06, 4.7360000000051805e-06, 4.680999999992497e-06, 4.735999999991303e-06, 4.666999999999866e-06, 4.6810000000063745e-06, 4.666999999999866e-06, 4.6810000000063745e-06, 4.680000000006901e-06, 4.680999999992497e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.08400000000142e-06, 4.069999999994911e-06, 4.125000000007595e-06, 4.096999999994577e-06, 4.083000000001946e-06, 4.708000000006041e-06, 4.08400000000142e-06, 4.693999999999532e-06, 4.666999999999866e-06]</msg>
<status status="PASS" starttime="20201110 08:33:58.831" endtime="20201110 08:33:58.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.826" endtime="20201110 08:33:58.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.837" endtime="20201110 08:33:58.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.840" endtime="20201110 08:33:58.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.839" endtime="20201110 08:33:58.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.835" endtime="20201110 08:33:58.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.465" endtime="20201110 08:33:58.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.464" endtime="20201110 08:33:58.865"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.885" endtime="20201110 08:33:58.905"></status>
</kw>
<msg timestamp="20201110 08:33:58.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.881" endtime="20201110 08:33:58.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.909" endtime="20201110 08:33:58.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.914" endtime="20201110 08:33:58.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.876" endtime="20201110 08:33:58.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.871" endtime="20201110 08:33:58.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.938" endtime="20201110 08:33:59.232"></status>
</kw>
<msg timestamp="20201110 08:33:59.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040310708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040316625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.931" endtime="20201110 08:33:59.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040310708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040316625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.236" endtime="20201110 08:33:59.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.245" endtime="20201110 08:33:59.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.925" endtime="20201110 08:33:59.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.921" endtime="20201110 08:33:59.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.252" level="INFO">${RESULT} = [{'time': 0.040316625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.040334528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:59.248" endtime="20201110 08:33:59.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.266" level="INFO">${ACCURACY} = {'source_diff': [5.917000000001116e-06, 5.27800000000439e-06, 5.903000000001546e-06, 5.29200000000396e-06, 4.693999999999532e-06, 5.277999999997451e-06, 5.8200000000036e-06, 5.277999999997451e-06, 5.3...</msg>
<status status="PASS" starttime="20201110 08:33:59.253" endtime="20201110 08:33:59.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.271" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.269" endtime="20201110 08:33:59.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.273" level="INFO">VALUE: [5.917000000001116e-06, 5.27800000000439e-06, 5.903000000001546e-06, 5.29200000000396e-06, 4.693999999999532e-06, 5.277999999997451e-06, 5.8200000000036e-06, 5.277999999997451e-06, 5.305999999996591e-06, 5.291999999997021e-06, 5.290999999997548e-06, 5.29200000000396e-06, 5.888999999995037e-06, 5.290999999997548e-06, 5.27800000000439e-06, 4.666999999999866e-06, 5.291999999997021e-06, 5.262999999998408e-06, 5.277999999997451e-06, 5.888000000002502e-06, 5.29200000000396e-06, 5.902000000002072e-06, 4.707999999999102e-06, 5.2910000000044866e-06, 5.875000000002406e-06, 5.29200000000396e-06, 5.3050000000040565e-06, 5.8200000000036e-06, 5.902999999994607e-06, 5.902000000002072e-06, 5.291999999997021e-06, 5.874999999995467e-06, 5.3050000000040565e-06, 4.694000000006471e-06, 5.291999999997021e-06, 5.889000000001976e-06, 5.3050000000040565e-06, 4.693999999999532e-06, 4.693999999999532e-06, 5.29200000000396e-06, 5.290999999997548e-06, 5.291999999997021e-06, 5.916000000001642e-06, 5.903000000001546e-06, 5.30600000000353e-06, 5.222000000006111e-06, 5.333999999995731e-06, 4.666000000000392e-06, 5.2639999999978815e-06, 5.3189999999966875e-06]</msg>
<status status="PASS" starttime="20201110 08:33:59.272" endtime="20201110 08:33:59.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.267" endtime="20201110 08:33:59.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.280" endtime="20201110 08:33:59.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.285" endtime="20201110 08:33:59.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.282" endtime="20201110 08:33:59.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.278" endtime="20201110 08:33:59.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.867" endtime="20201110 08:33:59.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.866" endtime="20201110 08:33:59.311"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.320" endtime="20201110 08:33:59.335"></status>
</kw>
<msg timestamp="20201110 08:33:59.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.318" endtime="20201110 08:33:59.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.337" endtime="20201110 08:33:59.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.339" endtime="20201110 08:33:59.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.316" endtime="20201110 08:33:59.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.314" endtime="20201110 08:33:59.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.350" endtime="20201110 08:33:59.637"></status>
</kw>
<msg timestamp="20201110 08:33:59.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025756667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025763764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.348" endtime="20201110 08:33:59.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025756667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025763764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.641" endtime="20201110 08:33:59.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.650" endtime="20201110 08:33:59.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.346" endtime="20201110 08:33:59.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.344" endtime="20201110 08:33:59.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.657" level="INFO">${RESULT} = [{'time': 0.025763764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.025782389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:59.653" endtime="20201110 08:33:59.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.671" level="INFO">${ACCURACY} = {'source_diff': [7.097000000001047e-06, 6.499999999999562e-06, 6.458000000000852e-06, 5.903000000001546e-06, 7.042000000002241e-06, 6.4579999999973825e-06, 5.874999999998937e-06, 5.971999999999922e-06...</msg>
<status status="PASS" starttime="20201110 08:33:59.658" endtime="20201110 08:33:59.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.678" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.675" endtime="20201110 08:33:59.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.682" level="INFO">VALUE: [7.097000000001047e-06, 6.499999999999562e-06, 6.458000000000852e-06, 5.903000000001546e-06, 7.042000000002241e-06, 6.4579999999973825e-06, 5.874999999998937e-06, 5.971999999999922e-06, 5.8339999999997005e-06, 5.903000000001546e-06, 5.874999999998937e-06, 6.526999999999228e-06, 5.889000000001976e-06, 6.513999999999132e-06, 6.500000000003031e-06, 5.915999999998173e-06, 5.889000000001976e-06, 5.875000000002406e-06, 5.9029999999980765e-06, 6.528000000002171e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.513999999999132e-06, 5.889000000001976e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.472000000000422e-06, 5.8889999999985065e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.513999999999132e-06, 5.8889999999985065e-06, 5.8889999999985065e-06, 5.903000000001546e-06, 5.9029999999980765e-06, 6.499999999999562e-06, 5.874999999998937e-06, 6.513999999999132e-06, 6.486999999999465e-06, 6.513999999999132e-06, 7.097000000001047e-06, 6.485999999999992e-06, 6.499999999999562e-06, 7.110999999997147e-06, 6.499999999999562e-06, 6.499999999999562e-06]</msg>
<status status="PASS" starttime="20201110 08:33:59.680" endtime="20201110 08:33:59.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.672" endtime="20201110 08:33:59.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.689" endtime="20201110 08:33:59.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.696" endtime="20201110 08:33:59.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.692" endtime="20201110 08:33:59.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.687" endtime="20201110 08:33:59.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.312" endtime="20201110 08:33:59.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.311" endtime="20201110 08:33:59.717"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.727" endtime="20201110 08:33:59.741"></status>
</kw>
<msg timestamp="20201110 08:33:59.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.725" endtime="20201110 08:33:59.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.743" endtime="20201110 08:33:59.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.746" endtime="20201110 08:33:59.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.722" endtime="20201110 08:33:59.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.720" endtime="20201110 08:33:59.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.756" endtime="20201110 08:34:00.042"></status>
</kw>
<msg timestamp="20201110 08:34:00.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022848708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.755" endtime="20201110 08:34:00.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022848708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.047" endtime="20201110 08:34:00.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.055" endtime="20201110 08:34:00.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.752" endtime="20201110 08:34:00.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.750" endtime="20201110 08:34:00.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.062" level="INFO">${RESULT} = [{'time': 0.022856417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.022874417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:00.059" endtime="20201110 08:34:00.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.077" level="INFO">${ACCURACY} = {'source_diff': [7.709000000001576e-06, 7.709000000001576e-06, 7.708999999998106e-06, 7.695000000002006e-06, 7.097000000001047e-06, 7.722000000001672e-06, 7.125000000000187e-06, 7.124999999996717e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:00.063" endtime="20201110 08:34:00.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.082" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.081" endtime="20201110 08:34:00.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.084" level="INFO">VALUE: [7.709000000001576e-06, 7.709000000001576e-06, 7.708999999998106e-06, 7.695000000002006e-06, 7.097000000001047e-06, 7.722000000001672e-06, 7.125000000000187e-06, 7.124999999996717e-06, 7.708000000002102e-06, 7.707999999998633e-06, 7.694000000002532e-06, 7.707999999998633e-06, 7.749999999997342e-06, 7.737000000000716e-06, 7.736000000001242e-06, 7.665999999999923e-06, 7.708000000002102e-06, 7.694999999998536e-06, 7.708999999998106e-06, 7.709000000001576e-06, 7.1529999999993266e-06, 7.0969999999975775e-06, 7.110999999997147e-06, 7.639000000000257e-06, 7.097000000001047e-06, 7.110999999997147e-06, 7.111000000000617e-06, 7.708999999998106e-06, 7.695000000002006e-06, 7.707999999998633e-06, 7.708999999998106e-06, 7.0829999999980076e-06, 7.097000000001047e-06, 7.693999999999063e-06, 7.0969999999975775e-06, 7.0980000000005206e-06, 7.111000000000617e-06, 7.693999999999063e-06, 7.097000000001047e-06, 7.722000000001672e-06, 7.707999999998633e-06, 7.721999999998203e-06, 7.694000000002532e-06, 7.110999999997147e-06, 7.707999999998633e-06, 7.084000000000951e-06, 7.707999999998633e-06, 7.693999999999063e-06, 7.070000000001381e-06, 7.0969999999975775e-06]</msg>
<status status="PASS" starttime="20201110 08:34:00.083" endtime="20201110 08:34:00.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.078" endtime="20201110 08:34:00.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.088" endtime="20201110 08:34:00.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.092" endtime="20201110 08:34:00.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.090" endtime="20201110 08:34:00.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.086" endtime="20201110 08:34:00.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.718" endtime="20201110 08:34:00.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.718" endtime="20201110 08:34:00.113"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.122" endtime="20201110 08:34:00.136"></status>
</kw>
<msg timestamp="20201110 08:34:00.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.120" endtime="20201110 08:34:00.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.138" endtime="20201110 08:34:00.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.141" endtime="20201110 08:34:00.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.118" endtime="20201110 08:34:00.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.115" endtime="20201110 08:34:00.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.158" endtime="20201110 08:34:00.446"></status>
</kw>
<msg timestamp="20201110 08:34:00.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022647819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022656153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.156" endtime="20201110 08:34:00.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022647819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022656153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.450" endtime="20201110 08:34:00.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.459" endtime="20201110 08:34:00.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.151" endtime="20201110 08:34:00.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.148" endtime="20201110 08:34:00.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.466" level="INFO">${RESULT} = [{'time': 0.022656153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.333999999998731e-06, 'source_diff': 8.333999999998731e-06}, {'time': 0.022672069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:00.462" endtime="20201110 08:34:00.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.480" level="INFO">${ACCURACY} = {'source_diff': [8.333999999998731e-06, 8.318999999999688e-06, 8.888000000002033e-06, 7.708000000002102e-06, 8.319999999999161e-06, 8.915999999997704e-06, 8.292000000000022e-06, 8.319999999999161e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:00.467" endtime="20201110 08:34:00.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.484" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.483" endtime="20201110 08:34:00.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.487" level="INFO">VALUE: [8.333999999998731e-06, 8.318999999999688e-06, 8.888000000002033e-06, 7.708000000002102e-06, 8.319999999999161e-06, 8.915999999997704e-06, 8.292000000000022e-06, 8.319999999999161e-06, 8.305000000000118e-06, 7.764000000000382e-06, 8.305000000000118e-06, 8.916999999997177e-06, 8.902000000001603e-06, 7.652999999999827e-06, 8.278000000000452e-06, 8.305999999999591e-06, 8.305000000000118e-06, 8.318999999999688e-06, 8.319999999999161e-06, 8.318999999999688e-06, 8.291000000000548e-06, 8.915999999997704e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.916999999997177e-06, 8.915999999997704e-06, 8.237000000001216e-06, 8.3340000000022e-06, 8.903000000001077e-06, 7.723000000001146e-06, 8.917000000000647e-06, 8.305999999999591e-06, 8.3340000000022e-06, 8.319999999999161e-06, 8.319999999999161e-06, 8.305000000000118e-06, 8.291000000000548e-06, 8.318999999999688e-06, 8.32000000000263e-06, 8.305999999999591e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.917000000000647e-06, 8.278000000000452e-06, 7.652999999999827e-06, 8.957999999999883e-06, 8.916999999997177e-06]</msg>
<status status="PASS" starttime="20201110 08:34:00.486" endtime="20201110 08:34:00.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.481" endtime="20201110 08:34:00.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.497" endtime="20201110 08:34:00.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.501" endtime="20201110 08:34:00.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.499" endtime="20201110 08:34:00.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.495" endtime="20201110 08:34:00.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.114" endtime="20201110 08:34:00.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.113" endtime="20201110 08:34:00.521"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.531" endtime="20201110 08:34:00.545"></status>
</kw>
<msg timestamp="20201110 08:34:00.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.529" endtime="20201110 08:34:00.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.546" endtime="20201110 08:34:00.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.549" endtime="20201110 08:34:00.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.526" endtime="20201110 08:34:00.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.524" endtime="20201110 08:34:00.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.559" endtime="20201110 08:34:00.846"></status>
</kw>
<msg timestamp="20201110 08:34:00.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.558" endtime="20201110 08:34:00.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.851" endtime="20201110 08:34:00.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.859" endtime="20201110 08:34:00.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.555" endtime="20201110 08:34:00.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.553" endtime="20201110 08:34:00.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.866" level="INFO">${RESULT} = [{'time': 0.022393097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.022408875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:00.863" endtime="20201110 08:34:00.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.880" level="INFO">${ACCURACY} = {'source_diff': [9.555000000001368e-06, 9.500000000002562e-06, 9.527999999998232e-06, 9.514000000002132e-06, 8.903000000001077e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.528000000001702e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:00.867" endtime="20201110 08:34:00.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.886" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.884" endtime="20201110 08:34:00.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.888" level="INFO">VALUE: [9.555000000001368e-06, 9.500000000002562e-06, 9.527999999998232e-06, 9.514000000002132e-06, 8.903000000001077e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.485999999999523e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.528000000001702e-06, 8.957999999999883e-06, 1.0153000000002327e-05, 9.500000000002562e-06, 9.499999999999093e-06, 8.930000000000743e-06, 1.0124999999999718e-05, 9.542000000001272e-06, 8.917000000000647e-06, 8.917000000000647e-06, 9.528000000001702e-06, 8.874999999998467e-06, 9.541000000001798e-06, 9.513999999998662e-06, 9.527999999998232e-06, 8.917000000000647e-06, 8.930000000000743e-06, 9.445000000000286e-06, 9.583999999999981e-06, 8.874999999998467e-06, 9.542000000001272e-06, 9.485999999999523e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.528000000001702e-06, 8.903000000001077e-06, 9.568999999997468e-06, 9.471999999999953e-06, 1.0124999999999718e-05, 9.514000000002132e-06, 9.526999999998759e-06, 9.500000000002562e-06, 8.985999999999023e-06, 9.541999999997802e-06, 8.889000000001507e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.513999999998662e-06]</msg>
<status status="PASS" starttime="20201110 08:34:00.887" endtime="20201110 08:34:00.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.881" endtime="20201110 08:34:00.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.892" endtime="20201110 08:34:00.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.896" endtime="20201110 08:34:00.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.895" endtime="20201110 08:34:00.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.891" endtime="20201110 08:34:00.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.522" endtime="20201110 08:34:00.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.522" endtime="20201110 08:34:00.917"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.926" endtime="20201110 08:34:00.941"></status>
</kw>
<msg timestamp="20201110 08:34:00.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.924" endtime="20201110 08:34:00.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.943" endtime="20201110 08:34:00.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.946" endtime="20201110 08:34:00.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.922" endtime="20201110 08:34:00.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.920" endtime="20201110 08:34:00.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.956" endtime="20201110 08:34:01.242"></status>
</kw>
<msg timestamp="20201110 08:34:01.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022708972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.955" endtime="20201110 08:34:01.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022708972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.247" endtime="20201110 08:34:01.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.256" endtime="20201110 08:34:01.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.952" endtime="20201110 08:34:01.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.950" endtime="20201110 08:34:01.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.262" level="INFO">${RESULT} = [{'time': 0.022708972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0708000000001633e-05, 'source_diff': 1.0708000000001633e-05}, {'time': 0.022735194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:01.259" endtime="20201110 08:34:01.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:01.276" level="INFO">${ACCURACY} = {'source_diff': [1.0708000000001633e-05, 1.0750000000000343e-05, 1.0124999999999718e-05, 1.0125000000003187e-05, 1.0750000000000343e-05, 1.0693999999998594e-05, 1.0139000000002757e-05, 1.0111000000000...</msg>
<status status="PASS" starttime="20201110 08:34:01.264" endtime="20201110 08:34:01.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.281" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:34:01.280" endtime="20201110 08:34:01.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.284" level="INFO">VALUE: [1.0708000000001633e-05, 1.0750000000000343e-05, 1.0124999999999718e-05, 1.0125000000003187e-05, 1.0750000000000343e-05, 1.0693999999998594e-05, 1.0139000000002757e-05, 1.0111000000000148e-05, 1.0693999999998594e-05, 1.0124999999999718e-05, 1.0721999999997733e-05, 1.0722000000001203e-05, 1.0138999999999287e-05, 1.0098000000000051e-05, 1.0722000000001203e-05, 1.0124999999999718e-05, 1.0124999999999718e-05, 1.0111000000000148e-05, 1.0111000000000148e-05, 1.0735999999997303e-05, 1.0124999999999718e-05, 1.0722000000001203e-05, 1.0722000000001203e-05, 1.0124999999999718e-05, 1.0124999999999718e-05, 1.0124999999999718e-05, 1.0736000000000773e-05, 1.0791999999999052e-05, 1.0111000000000148e-05, 1.0722000000001203e-05, 1.0124999999999718e-05, 1.0736000000000773e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0111000000000148e-05, 1.0138999999999287e-05, 1.0097000000000578e-05, 1.0138999999999287e-05, 1.0722000000001203e-05, 1.0124999999999718e-05, 1.0111000000000148e-05, 1.0707999999998163e-05, 1.0805000000002618e-05, 1.0721999999997733e-05, 1.0180999999997997e-05, 1.0735999999997303e-05, 1.0736000000000773e-05, 1.0124999999999718e-05, 1.0138999999999287e-05, 1.0125000000003187e-05]</msg>
<status status="PASS" starttime="20201110 08:34:01.282" endtime="20201110 08:34:01.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.277" endtime="20201110 08:34:01.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.287" endtime="20201110 08:34:01.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.291" endtime="20201110 08:34:01.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.289" endtime="20201110 08:34:01.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.286" endtime="20201110 08:34:01.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.918" endtime="20201110 08:34:01.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.917" endtime="20201110 08:34:01.312"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.321" endtime="20201110 08:34:01.335"></status>
</kw>
<msg timestamp="20201110 08:34:01.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.320" endtime="20201110 08:34:01.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.337" endtime="20201110 08:34:01.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.339" endtime="20201110 08:34:01.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.317" endtime="20201110 08:34:01.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.315" endtime="20201110 08:34:01.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.350" endtime="20201110 08:34:01.639"></status>
</kw>
<msg timestamp="20201110 08:34:01.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:01.348" endtime="20201110 08:34:01.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:01.644" endtime="20201110 08:34:01.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.656" endtime="20201110 08:34:01.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.346" endtime="20201110 08:34:01.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.344" endtime="20201110 08:34:01.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.666" level="INFO">${RESULT} = [{'time': 0.0224965, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1943999999999844e-05, 'source_diff': 1.1943999999999844e-05}, {'time': 0.022517431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:01.661" endtime="20201110 08:34:01.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:01.684" level="INFO">${ACCURACY} = {'source_diff': [1.1943999999999844e-05, 1.1973000000001927e-05, 1.2014000000001163e-05, 1.1318999999999219e-05, 1.1332999999998788e-05, 1.1333000000002258e-05, 1.1319999999998692e-05, 1.1347000000001...</msg>
<status status="PASS" starttime="20201110 08:34:01.667" endtime="20201110 08:34:01.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.688" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:34:01.687" endtime="20201110 08:34:01.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.691" level="INFO">VALUE: [1.1943999999999844e-05, 1.1973000000001927e-05, 1.2014000000001163e-05, 1.1318999999999219e-05, 1.1332999999998788e-05, 1.1333000000002258e-05, 1.1319999999998692e-05, 1.1347000000001828e-05, 1.1319999999998692e-05, 1.1333999999998262e-05, 1.1346999999998358e-05, 1.1333999999998262e-05, 1.1334000000001732e-05, 1.1930999999999747e-05, 1.0736000000000773e-05, 1.1333999999998262e-05, 1.1958999999998887e-05, 1.0722000000001203e-05, 1.1930999999999747e-05, 1.1957999999999414e-05, 1.1334000000001732e-05, 1.1332999999998788e-05, 1.1333999999998262e-05, 1.0708000000001633e-05, 1.0722000000001203e-05, 1.1930000000000274e-05, 1.0750000000000343e-05, 1.0708999999997637e-05, 1.1930999999999747e-05, 1.1943999999999844e-05, 1.1319999999998692e-05, 1.1957999999999414e-05, 1.1332999999998788e-05, 1.1333000000002258e-05, 1.1360999999997928e-05, 1.0735999999997303e-05, 1.0722000000001203e-05, 1.1903000000000608e-05, 1.1945000000002787e-05, 1.1388000000001064e-05, 1.1332999999998788e-05, 1.1971999999998983e-05, 1.1318999999999219e-05, 1.1957999999999414e-05, 1.1347000000001828e-05, 1.1346999999998358e-05, 1.1958999999998887e-05, 1.1333999999998262e-05, 1.1318999999999219e-05, 1.1361000000001398e-05]</msg>
<status status="PASS" starttime="20201110 08:34:01.689" endtime="20201110 08:34:01.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.685" endtime="20201110 08:34:01.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.695" endtime="20201110 08:34:01.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.699" endtime="20201110 08:34:01.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.697" endtime="20201110 08:34:01.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.693" endtime="20201110 08:34:01.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.313" endtime="20201110 08:34:01.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.313" endtime="20201110 08:34:01.719"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.728" endtime="20201110 08:34:01.743"></status>
</kw>
<msg timestamp="20201110 08:34:01.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.727" endtime="20201110 08:34:01.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.745" endtime="20201110 08:34:01.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.747" endtime="20201110 08:34:01.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.724" endtime="20201110 08:34:01.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.722" endtime="20201110 08:34:01.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.758" endtime="20201110 08:34:02.047"></status>
</kw>
<msg timestamp="20201110 08:34:02.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022465847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.756" endtime="20201110 08:34:02.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022465847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.051" endtime="20201110 08:34:02.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.060" endtime="20201110 08:34:02.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.753" endtime="20201110 08:34:02.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.751" endtime="20201110 08:34:02.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.067" level="INFO">${RESULT} = [{'time': 0.022465847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2541000000001329e-05, 'source_diff': 1.2541000000001329e-05}, {'time': 0.022483944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:02.063" endtime="20201110 08:34:02.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.081" level="INFO">${ACCURACY} = {'source_diff': [1.2541000000001329e-05, 1.3151999999998915e-05, 1.251299999999872e-05, 1.1959000000002357e-05, 1.2541999999997333e-05, 1.1944999999999317e-05, 1.2541999999997333e-05, 1.25140000000016...</msg>
<status status="PASS" starttime="20201110 08:34:02.068" endtime="20201110 08:34:02.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.085" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.084" endtime="20201110 08:34:02.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.088" level="INFO">VALUE: [1.2541000000001329e-05, 1.3151999999998915e-05, 1.251299999999872e-05, 1.1959000000002357e-05, 1.2541999999997333e-05, 1.1944999999999317e-05, 1.2541999999997333e-05, 1.2514000000001663e-05, 1.1930999999999747e-05, 1.1930999999999747e-05, 1.3138999999998818e-05, 1.2528000000001233e-05, 1.3153000000001858e-05, 1.1917000000000177e-05, 1.2583000000000039e-05, 1.2556000000000372e-05, 1.2556000000000372e-05, 1.2542000000000803e-05, 1.1943999999999844e-05, 1.2569999999999942e-05, 1.2556000000000372e-05, 1.2542000000000803e-05, 1.2527000000001759e-05, 1.2513999999998193e-05, 1.2556000000000372e-05, 1.2541000000001329e-05, 1.2542000000000803e-05, 1.1944999999999317e-05, 1.2542000000000803e-05, 1.1957999999999414e-05, 1.252699999999829e-05, 1.2597999999999082e-05, 1.2527999999997763e-05, 1.1985999999998553e-05, 1.1930999999999747e-05, 1.1930000000000274e-05, 1.1958999999998887e-05, 1.1929999999996804e-05, 1.1943999999999844e-05, 1.2542000000000803e-05, 1.2541000000001329e-05, 1.1944999999999317e-05, 1.1957999999999414e-05, 1.1930999999999747e-05, 1.3179999999998054e-05, 1.254099999999786e-05, 1.1958999999998887e-05, 1.2514000000001663e-05, 1.2513999999998193e-05, 1.2542000000000803e-05]</msg>
<status status="PASS" starttime="20201110 08:34:02.087" endtime="20201110 08:34:02.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.082" endtime="20201110 08:34:02.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.092" endtime="20201110 08:34:02.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.096" endtime="20201110 08:34:02.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.094" endtime="20201110 08:34:02.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.090" endtime="20201110 08:34:02.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.720" endtime="20201110 08:34:02.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.720" endtime="20201110 08:34:02.117"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.125" endtime="20201110 08:34:02.143"></status>
</kw>
<msg timestamp="20201110 08:34:02.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.124" endtime="20201110 08:34:02.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.144" endtime="20201110 08:34:02.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.148" endtime="20201110 08:34:02.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.121" endtime="20201110 08:34:02.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.119" endtime="20201110 08:34:02.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.163" endtime="20201110 08:34:02.449"></status>
</kw>
<msg timestamp="20201110 08:34:02.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02268875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:02.159" endtime="20201110 08:34:02.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02268875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:02.454" endtime="20201110 08:34:02.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.462" endtime="20201110 08:34:02.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.156" endtime="20201110 08:34:02.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.154" endtime="20201110 08:34:02.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.469" level="INFO">${RESULT} = [{'time': 0.022701903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3152999999998388e-05, 'source_diff': 1.3152999999998388e-05}, {'time': 0.022722111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:02.466" endtime="20201110 08:34:02.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.483" level="INFO">${ACCURACY} = {'source_diff': [1.3152999999998388e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3153000000001858e-05, 1.3749999999999873e-05, 1.3791000000002579e-05, 1.3749999999999873e-05, 1.3763999999999...</msg>
<status status="PASS" starttime="20201110 08:34:02.470" endtime="20201110 08:34:02.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.488" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.487" endtime="20201110 08:34:02.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.491" level="INFO">VALUE: [1.3152999999998388e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3153000000001858e-05, 1.3749999999999873e-05, 1.3791000000002579e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3708000000001164e-05, 1.3152999999998388e-05, 1.3097000000000109e-05, 1.3166999999997958e-05, 1.3151999999998915e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3139000000002288e-05, 1.3736000000000304e-05, 1.3750000000003343e-05, 1.376299999999997e-05, 1.3137999999999345e-05, 1.3167000000001428e-05, 1.376299999999997e-05, 1.3139000000002288e-05, 1.3152999999998388e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3152000000002384e-05, 1.3138999999998818e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3152999999998388e-05, 1.3125000000002718e-05, 1.379099999999911e-05, 1.3749999999999873e-05, 1.3166999999997958e-05, 1.3750000000003343e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3167000000001428e-05, 1.3236999999999277e-05, 1.3152999999998388e-05, 1.3167000000001428e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3139000000002288e-05, 1.3764000000002913e-05, 1.3736000000000304e-05, 1.3084000000000012e-05]</msg>
<status status="PASS" starttime="20201110 08:34:02.489" endtime="20201110 08:34:02.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.484" endtime="20201110 08:34:02.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.494" endtime="20201110 08:34:02.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.498" endtime="20201110 08:34:02.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.497" endtime="20201110 08:34:02.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.493" endtime="20201110 08:34:02.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.117" endtime="20201110 08:34:02.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.117" endtime="20201110 08:34:02.519"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.528" endtime="20201110 08:34:02.543"></status>
</kw>
<msg timestamp="20201110 08:34:02.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.526" endtime="20201110 08:34:02.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.545" endtime="20201110 08:34:02.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.548" endtime="20201110 08:34:02.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.524" endtime="20201110 08:34:02.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.522" endtime="20201110 08:34:02.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.558" endtime="20201110 08:34:02.844"></status>
</kw>
<msg timestamp="20201110 08:34:02.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:02.557" endtime="20201110 08:34:02.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:02.849" endtime="20201110 08:34:02.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.857" endtime="20201110 08:34:02.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.554" endtime="20201110 08:34:02.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.552" endtime="20201110 08:34:02.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.864" level="INFO">${RESULT} = [{'time': 0.0225205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.433299999999832e-05, 'source_diff': 1.433299999999832e-05}, {'time': 0.022548819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:02.861" endtime="20201110 08:34:02.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.878" level="INFO">${ACCURACY} = {'source_diff': [1.433299999999832e-05, 1.4361000000000929e-05, 1.4389000000000068e-05, 1.4957999999998944e-05, 1.4333000000001789e-05, 1.4347000000001359e-05, 1.4347999999997363e-05, 1.49030000000001...</msg>
<status status="PASS" starttime="20201110 08:34:02.865" endtime="20201110 08:34:02.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.883" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.882" endtime="20201110 08:34:02.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.886" level="INFO">VALUE: [1.433299999999832e-05, 1.4361000000000929e-05, 1.4389000000000068e-05, 1.4957999999998944e-05, 1.4333000000001789e-05, 1.4347000000001359e-05, 1.4347999999997363e-05, 1.4903000000000138e-05, 1.4375000000000498e-05, 1.3749999999999873e-05, 1.4957999999998944e-05, 1.4319000000002219e-05, 1.4375000000000498e-05, 1.430499999999918e-05, 1.4957999999998944e-05, 1.4348000000000832e-05, 1.3819000000001719e-05, 1.4347000000001359e-05, 1.434699999999789e-05, 1.4972000000001984e-05, 1.4972000000001984e-05, 1.4945000000002318e-05, 1.4375000000000498e-05, 1.434699999999789e-05, 1.4375000000000498e-05, 1.4361000000000929e-05, 1.4972000000001984e-05, 1.4944999999998848e-05, 1.433299999999832e-05, 1.4958999999998418e-05, 1.4361000000000929e-05, 1.4971999999998514e-05, 1.4348000000000832e-05, 1.4389000000000068e-05, 1.434699999999789e-05, 1.4361000000000929e-05, 1.4958000000002414e-05, 1.4347000000001359e-05, 1.4972999999997988e-05, 1.4958999999998418e-05, 1.5000000000001124e-05, 1.4431000000002248e-05, 1.4334000000001262e-05, 1.434699999999789e-05, 1.4305000000002649e-05, 1.4361000000000929e-05, 1.4971999999998514e-05, 1.4347999999997363e-05, 1.3749999999999873e-05, 1.434699999999789e-05]</msg>
<status status="PASS" starttime="20201110 08:34:02.884" endtime="20201110 08:34:02.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.879" endtime="20201110 08:34:02.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.889" endtime="20201110 08:34:02.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.893" endtime="20201110 08:34:02.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.891" endtime="20201110 08:34:02.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.888" endtime="20201110 08:34:02.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.520" endtime="20201110 08:34:02.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.519" endtime="20201110 08:34:02.914"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.924" endtime="20201110 08:34:02.939"></status>
</kw>
<msg timestamp="20201110 08:34:02.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.922" endtime="20201110 08:34:02.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.941" endtime="20201110 08:34:02.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.943" endtime="20201110 08:34:02.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.920" endtime="20201110 08:34:02.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.917" endtime="20201110 08:34:02.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.954" endtime="20201110 08:34:03.242"></status>
</kw>
<msg timestamp="20201110 08:34:03.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023565444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023580403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.952" endtime="20201110 08:34:03.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023565444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023580403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.246" endtime="20201110 08:34:03.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.255" endtime="20201110 08:34:03.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.950" endtime="20201110 08:34:03.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.948" endtime="20201110 08:34:03.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.264" level="INFO">${RESULT} = [{'time': 0.023580403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4958999999998418e-05, 'source_diff': 1.4958999999998418e-05}, {'time': 0.023607319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:03.260" endtime="20201110 08:34:03.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.282" level="INFO">${ACCURACY} = {'source_diff': [1.4958999999998418e-05, 1.4944000000002844e-05, 1.4888999999997099e-05, 1.5569999999999473e-05, 1.5542000000000333e-05, 1.562500000000175e-05, 1.5569e-05, 1.4958999999998418e-05, 1.48...</msg>
<status status="PASS" starttime="20201110 08:34:03.266" endtime="20201110 08:34:03.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.288" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.287" endtime="20201110 08:34:03.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.292" level="INFO">VALUE: [1.4958999999998418e-05, 1.4944000000002844e-05, 1.4888999999997099e-05, 1.5569999999999473e-05, 1.5542000000000333e-05, 1.562500000000175e-05, 1.5569e-05, 1.4958999999998418e-05, 1.4889000000000568e-05, 1.5555999999999903e-05, 1.5569999999999473e-05, 1.5584000000002513e-05, 1.608300000000007e-05, 1.5569e-05, 1.5542000000000333e-05, 1.4943999999999374e-05, 1.4958000000002414e-05, 1.5542000000000333e-05, 1.6221999999999764e-05, 1.554100000000086e-05, 1.615300000000139e-05, 1.4930999999999278e-05, 1.5569e-05, 1.4903000000000138e-05, 1.4959000000001887e-05, 1.4944999999998848e-05, 1.4957999999998944e-05, 1.5513999999997724e-05, 1.5569e-05, 1.4957999999998944e-05, 1.4959000000001887e-05, 1.5569999999999473e-05, 1.4958999999998418e-05, 1.5569999999999473e-05, 1.4957999999998944e-05, 1.4972000000001984e-05, 1.5542000000000333e-05, 1.555500000000043e-05, 1.5569999999999473e-05, 1.558299999999957e-05, 1.4943999999999374e-05, 1.4971999999998514e-05, 1.4929999999999805e-05, 1.4971999999998514e-05, 1.5014000000000693e-05, 1.551300000000172e-05, 1.555500000000043e-05, 1.4973000000001457e-05, 1.4971999999998514e-05, 1.5569999999999473e-05]</msg>
<status status="PASS" starttime="20201110 08:34:03.290" endtime="20201110 08:34:03.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.283" endtime="20201110 08:34:03.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.297" endtime="20201110 08:34:03.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.302" endtime="20201110 08:34:03.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.300" endtime="20201110 08:34:03.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.295" endtime="20201110 08:34:03.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.915" endtime="20201110 08:34:03.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.915" endtime="20201110 08:34:03.325"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.337" endtime="20201110 08:34:03.353"></status>
</kw>
<msg timestamp="20201110 08:34:03.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.335" endtime="20201110 08:34:03.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.356" endtime="20201110 08:34:03.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.359" endtime="20201110 08:34:03.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.331" endtime="20201110 08:34:03.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.328" endtime="20201110 08:34:03.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.374" endtime="20201110 08:34:03.662"></status>
</kw>
<msg timestamp="20201110 08:34:03.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027698694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027714819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.372" endtime="20201110 08:34:03.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027698694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027714819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.666" endtime="20201110 08:34:03.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.675" endtime="20201110 08:34:03.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.368" endtime="20201110 08:34:03.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.366" endtime="20201110 08:34:03.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.681" level="INFO">${RESULT} = [{'time': 0.027714819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.612500000000225e-05, 'source_diff': 1.612500000000225e-05}, {'time': 0.027737722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:03.678" endtime="20201110 08:34:03.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.695" level="INFO">${ACCURACY} = {'source_diff': [1.612500000000225e-05, 1.6763999999998974e-05, 1.6194000000000625e-05, 1.6722000000000264e-05, 1.6764000000002444e-05, 1.616700000000096e-05, 1.6180000000001055e-05, 1.615199999999844...</msg>
<status status="PASS" starttime="20201110 08:34:03.682" endtime="20201110 08:34:03.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.700" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.699" endtime="20201110 08:34:03.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.702" level="INFO">VALUE: [1.612500000000225e-05, 1.6763999999998974e-05, 1.6194000000000625e-05, 1.6722000000000264e-05, 1.6764000000002444e-05, 1.616700000000096e-05, 1.6180000000001055e-05, 1.6151999999998445e-05, 1.679100000000211e-05, 1.67629999999995e-05, 1.6763999999998974e-05, 1.6791999999998114e-05, 1.615300000000139e-05, 1.6181000000000528e-05, 1.6181000000000528e-05, 1.6165999999998015e-05, 1.6763999999998974e-05, 1.677699999999907e-05, 1.6181000000000528e-05, 1.6181000000000528e-05, 1.6763999999998974e-05, 1.616699999999749e-05, 1.616699999999749e-05, 1.6208999999999668e-05, 1.6166000000001485e-05, 1.683300000000082e-05, 1.615300000000139e-05, 1.6194000000000625e-05, 1.6221999999999764e-05, 1.677699999999907e-05, 1.6181000000000528e-05, 1.6180000000001055e-05, 1.6221999999999764e-05, 1.6777999999998544e-05, 1.613900000000182e-05, 1.677700000000254e-05, 1.616700000000096e-05, 1.6195000000000098e-05, 1.615300000000139e-05, 1.6778000000002014e-05, 1.6151999999998445e-05, 1.6181000000000528e-05, 1.6749999999999404e-05, 1.616700000000096e-05, 1.6792000000001583e-05, 1.6777999999998544e-05, 1.67629999999995e-05, 1.6722999999999738e-05, 1.6165999999998015e-05, 1.615299999999792e-05]</msg>
<status status="PASS" starttime="20201110 08:34:03.701" endtime="20201110 08:34:03.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.696" endtime="20201110 08:34:03.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.706" endtime="20201110 08:34:03.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.709" endtime="20201110 08:34:03.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.708" endtime="20201110 08:34:03.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.704" endtime="20201110 08:34:03.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.326" endtime="20201110 08:34:03.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.325" endtime="20201110 08:34:03.730"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.739" endtime="20201110 08:34:03.754"></status>
</kw>
<msg timestamp="20201110 08:34:03.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.737" endtime="20201110 08:34:03.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.755" endtime="20201110 08:34:03.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.758" endtime="20201110 08:34:03.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.735" endtime="20201110 08:34:03.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.732" endtime="20201110 08:34:03.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.768" endtime="20201110 08:34:04.055"></status>
</kw>
<msg timestamp="20201110 08:34:04.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.766" endtime="20201110 08:34:04.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.059" endtime="20201110 08:34:04.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.067" endtime="20201110 08:34:04.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.764" endtime="20201110 08:34:04.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.762" endtime="20201110 08:34:04.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.074" level="INFO">${RESULT} = [{'time': 0.022048292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6763999999998974e-05, 'source_diff': 1.6763999999998974e-05}, {'time': 0.022078639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:04.071" endtime="20201110 08:34:04.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.088" level="INFO">${ACCURACY} = {'source_diff': [1.6763999999998974e-05, 1.73889999999996e-05, 1.7972000000001515e-05, 1.737500000000003e-05, 1.736100000000046e-05, 1.73889999999996e-05, 1.7973000000000988e-05, 1.7401999999999695e-0...</msg>
<status status="PASS" starttime="20201110 08:34:04.075" endtime="20201110 08:34:04.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.092" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.091" endtime="20201110 08:34:04.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.095" level="INFO">VALUE: [1.6763999999998974e-05, 1.73889999999996e-05, 1.7972000000001515e-05, 1.737500000000003e-05, 1.736100000000046e-05, 1.73889999999996e-05, 1.7973000000000988e-05, 1.7401999999999695e-05, 1.737500000000003e-05, 1.6763999999998974e-05, 1.740299999999917e-05, 1.6749999999999404e-05, 1.7929999999999335e-05, 1.736100000000046e-05, 1.737500000000003e-05, 1.73889999999996e-05, 1.7957999999998475e-05, 1.740300000000264e-05, 1.740299999999917e-05, 1.8042000000002834e-05, 1.7986000000001084e-05, 1.6791999999998114e-05, 1.737500000000003e-05, 1.73889999999996e-05, 1.737500000000003e-05, 1.805499999999946e-05, 1.7986000000001084e-05, 1.736100000000046e-05, 1.737500000000003e-05, 1.737500000000003e-05, 1.737500000000003e-05, 1.7971999999998045e-05, 1.73889999999996e-05, 1.6749999999999404e-05, 1.7987000000000558e-05, 1.736100000000046e-05, 1.7361999999999933e-05, 1.737500000000003e-05, 1.6763999999998974e-05, 1.7959000000001418e-05, 1.7430000000002305e-05, 1.743100000000178e-05, 1.734699999999742e-05, 1.737500000000003e-05, 1.7999999999997185e-05, 1.736100000000046e-05, 1.7973000000000988e-05, 1.737500000000003e-05, 1.6778000000002014e-05, 1.683299999999735e-05]</msg>
<status status="PASS" starttime="20201110 08:34:04.093" endtime="20201110 08:34:04.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.089" endtime="20201110 08:34:04.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.098" endtime="20201110 08:34:04.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.102" endtime="20201110 08:34:04.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.100" endtime="20201110 08:34:04.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.097" endtime="20201110 08:34:04.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.731" endtime="20201110 08:34:04.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.730" endtime="20201110 08:34:04.123"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.131" endtime="20201110 08:34:04.146"></status>
</kw>
<msg timestamp="20201110 08:34:04.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.130" endtime="20201110 08:34:04.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.148" endtime="20201110 08:34:04.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.150" endtime="20201110 08:34:04.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.127" endtime="20201110 08:34:04.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.125" endtime="20201110 08:34:04.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.160" endtime="20201110 08:34:04.448"></status>
</kw>
<msg timestamp="20201110 08:34:04.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022043208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.159" endtime="20201110 08:34:04.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022043208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.452" endtime="20201110 08:34:04.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.461" endtime="20201110 08:34:04.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.156" endtime="20201110 08:34:04.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.155" endtime="20201110 08:34:04.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.468" level="INFO">${RESULT} = [{'time': 0.022061194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7985999999997615e-05, 'source_diff': 1.7985999999997615e-05}, {'time': 0.022087556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:04.464" endtime="20201110 08:34:04.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.481" level="INFO">${ACCURACY} = {'source_diff': [1.7985999999997615e-05, 1.8570000000002473e-05, 1.85829999999991e-05, 1.859699999999867e-05, 1.919499999999963e-05, 1.7957999999998475e-05, 1.858300000000257e-05, 1.861100000000171e-0...</msg>
<status status="PASS" starttime="20201110 08:34:04.469" endtime="20201110 08:34:04.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.486" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.485" endtime="20201110 08:34:04.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.488" level="INFO">VALUE: [1.7985999999997615e-05, 1.8570000000002473e-05, 1.85829999999991e-05, 1.859699999999867e-05, 1.919499999999963e-05, 1.7957999999998475e-05, 1.858300000000257e-05, 1.861100000000171e-05, 1.856899999999953e-05, 1.8027999999999794e-05, 1.8014000000000224e-05, 1.859699999999867e-05, 1.7986000000001084e-05, 1.85829999999991e-05, 1.859700000000214e-05, 1.8584000000002043e-05, 1.85829999999991e-05, 1.8598000000001613e-05, 1.85829999999991e-05, 1.858300000000257e-05, 1.8555999999999434e-05, 1.85829999999991e-05, 1.7971999999998045e-05, 1.8597999999998144e-05, 1.8041999999999364e-05, 1.7986000000001084e-05, 1.8000000000000654e-05, 1.7958000000001945e-05, 1.9235999999998865e-05, 1.7985999999997615e-05, 1.85829999999991e-05, 1.7985999999997615e-05, 1.85829999999991e-05, 1.7986000000001084e-05, 1.862500000000128e-05, 1.7986000000001084e-05, 1.85829999999991e-05, 1.861099999999824e-05, 1.861099999999824e-05, 1.8583999999998574e-05, 1.85829999999991e-05, 1.85829999999991e-05, 1.7972000000001515e-05, 1.85829999999991e-05, 1.8541999999999864e-05, 1.7986000000001084e-05, 1.859699999999867e-05, 1.859699999999867e-05, 1.85829999999991e-05, 1.8000000000000654e-05]</msg>
<status status="PASS" starttime="20201110 08:34:04.487" endtime="20201110 08:34:04.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.482" endtime="20201110 08:34:04.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.492" endtime="20201110 08:34:04.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.496" endtime="20201110 08:34:04.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.494" endtime="20201110 08:34:04.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.490" endtime="20201110 08:34:04.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.124" endtime="20201110 08:34:04.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.123" endtime="20201110 08:34:04.516"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.525" endtime="20201110 08:34:04.541"></status>
</kw>
<msg timestamp="20201110 08:34:04.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.524" endtime="20201110 08:34:04.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.543" endtime="20201110 08:34:04.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.545" endtime="20201110 08:34:04.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.521" endtime="20201110 08:34:04.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.519" endtime="20201110 08:34:04.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.555" endtime="20201110 08:34:04.841"></status>
</kw>
<msg timestamp="20201110 08:34:04.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.554" endtime="20201110 08:34:04.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.845" endtime="20201110 08:34:04.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.854" endtime="20201110 08:34:04.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.551" endtime="20201110 08:34:04.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.549" endtime="20201110 08:34:04.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.860" level="INFO">${RESULT} = [{'time': 0.022456597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9193999999996686e-05, 'source_diff': 1.9193999999996686e-05}, {'time': 0.022481417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:04.857" endtime="20201110 08:34:04.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.875" level="INFO">${ACCURACY} = {'source_diff': [1.9193999999996686e-05, 1.919499999999963e-05, 1.972299999999927e-05, 1.9180000000000585e-05, 1.983299999999688e-05, 1.9778000000001544e-05, 1.9792000000001114e-05, 1.9806000000000684...</msg>
<status status="PASS" starttime="20201110 08:34:04.861" endtime="20201110 08:34:04.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.879" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.878" endtime="20201110 08:34:04.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.882" level="INFO">VALUE: [1.9193999999996686e-05, 1.919499999999963e-05, 1.972299999999927e-05, 1.9180000000000585e-05, 1.983299999999688e-05, 1.9778000000001544e-05, 1.9792000000001114e-05, 1.9806000000000684e-05, 1.9179999999997116e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, 1.913900000000135e-05, 1.980500000000121e-05, 1.919499999999963e-05, 1.918100000000006e-05, 1.9792000000001114e-05, 1.9778000000001544e-05, 1.916700000000049e-05, 1.9806000000000684e-05, 1.9180000000000585e-05, 1.9207999999999725e-05, 1.9207999999999725e-05, 1.987500000000253e-05, 1.9194000000000155e-05, 1.9180000000000585e-05, 1.9207999999999725e-05, 1.9736000000002835e-05, 1.9207999999999725e-05, 1.9763999999998505e-05, 1.9792000000001114e-05, 1.9763999999998505e-05, 1.9735999999999365e-05, 1.9179999999997116e-05, 1.918100000000006e-05, 1.9194000000000155e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9791999999997645e-05, 1.9180000000000585e-05, 1.919499999999963e-05, 1.918100000000006e-05, 1.9194000000000155e-05, 1.979100000000164e-05, 1.97769999999986e-05, 1.919499999999963e-05, 1.9264000000001474e-05, 1.9792000000001114e-05, 1.97769999999986e-05, 1.9207999999999725e-05, 1.979100000000164e-05]</msg>
<status status="PASS" starttime="20201110 08:34:04.881" endtime="20201110 08:34:04.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.876" endtime="20201110 08:34:04.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.886" endtime="20201110 08:34:04.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.889" endtime="20201110 08:34:04.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.888" endtime="20201110 08:34:04.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.884" endtime="20201110 08:34:04.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.517" endtime="20201110 08:34:04.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.517" endtime="20201110 08:34:04.910"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.919" endtime="20201110 08:34:04.935"></status>
</kw>
<msg timestamp="20201110 08:34:04.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.917" endtime="20201110 08:34:04.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.937" endtime="20201110 08:34:04.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.939" endtime="20201110 08:34:04.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.915" endtime="20201110 08:34:04.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.912" endtime="20201110 08:34:04.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.950" endtime="20201110 08:34:05.236"></status>
</kw>
<msg timestamp="20201110 08:34:05.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022520375, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201110 08:34:04.949" endtime="20201110 08:34:05.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022520375, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201110 08:34:05.240" endtime="20201110 08:34:05.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.249" endtime="20201110 08:34:05.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.946" endtime="20201110 08:34:05.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.944" endtime="20201110 08:34:05.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.256" level="INFO">${RESULT} = [{'time': 0.022520375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.037499999999956e-05, 'source_diff': 2.037499999999956e-05}, {'time': 0.022550403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:05.252" endtime="20201110 08:34:05.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.269" level="INFO">${ACCURACY} = {'source_diff': [2.037499999999956e-05, 2.04029999999987e-05, 1.9708000000000225e-05, 1.9806000000000684e-05, 2.0387999999999656e-05, 1.976299999999903e-05, 2.04029999999987e-05, 1.9791999999997645e-0...</msg>
<status status="PASS" starttime="20201110 08:34:05.257" endtime="20201110 08:34:05.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.274" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.273" endtime="20201110 08:34:05.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.276" level="INFO">VALUE: [2.037499999999956e-05, 2.04029999999987e-05, 1.9708000000000225e-05, 1.9806000000000684e-05, 2.0387999999999656e-05, 1.976299999999903e-05, 2.04029999999987e-05, 1.9791999999997645e-05, 2.0387999999999656e-05, 2.038899999999913e-05, 2.036099999999999e-05, 2.0401999999999226e-05, 2.038899999999913e-05, 2.04029999999987e-05, 2.04029999999987e-05, 2.0958000000001475e-05, 2.041700000000174e-05, 2.0415999999998796e-05, 2.038899999999913e-05, 2.037499999999956e-05, 1.9792000000001114e-05, 2.038899999999913e-05, 2.038899999999913e-05, 2.03890000000026e-05, 2.038899999999913e-05, 2.037499999999956e-05, 2.04029999999987e-05, 2.0401999999999226e-05, 2.038899999999913e-05, 2.1000000000000185e-05, 2.034700000000042e-05, 2.0986000000000615e-05, 2.040300000000217e-05, 2.037499999999956e-05, 2.1014000000003225e-05, 2.1013999999999755e-05, 2.038899999999913e-05, 2.1000000000000185e-05, 2.101300000000028e-05, 2.10830000000016e-05, 1.9791999999997645e-05, 2.0999999999996716e-05, 2.037499999999956e-05, 2.038899999999913e-05, 1.980500000000121e-05, 1.9777999999998075e-05, 2.1013999999999755e-05, 2.1000000000000185e-05, 2.0416000000002266e-05, 2.041699999999827e-05]</msg>
<status status="PASS" starttime="20201110 08:34:05.275" endtime="20201110 08:34:05.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.270" endtime="20201110 08:34:05.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.280" endtime="20201110 08:34:05.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.283" endtime="20201110 08:34:05.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.282" endtime="20201110 08:34:05.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.278" endtime="20201110 08:34:05.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.911" endtime="20201110 08:34:05.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.910" endtime="20201110 08:34:05.304"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.313" endtime="20201110 08:34:05.328"></status>
</kw>
<msg timestamp="20201110 08:34:05.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.311" endtime="20201110 08:34:05.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.330" endtime="20201110 08:34:05.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.332" endtime="20201110 08:34:05.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.309" endtime="20201110 08:34:05.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.307" endtime="20201110 08:34:05.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.342" endtime="20201110 08:34:05.628"></status>
</kw>
<msg timestamp="20201110 08:34:05.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022460389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.341" endtime="20201110 08:34:05.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022460389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.633" endtime="20201110 08:34:05.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.641" endtime="20201110 08:34:05.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.338" endtime="20201110 08:34:05.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.336" endtime="20201110 08:34:05.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.648" level="INFO">${RESULT} = [{'time': 0.022482014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.022511778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:05.644" endtime="20201110 08:34:05.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.661" level="INFO">${ACCURACY} = {'source_diff': [2.162500000000081e-05, 2.1000000000000185e-05, 2.161100000000124e-05, 2.1000000000000185e-05, 2.161100000000124e-05, 2.0986000000000615e-05, 2.1000000000000185e-05, 2.159700000000167e...</msg>
<status status="PASS" starttime="20201110 08:34:05.649" endtime="20201110 08:34:05.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.666" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.665" endtime="20201110 08:34:05.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.669" level="INFO">VALUE: [2.162500000000081e-05, 2.1000000000000185e-05, 2.161100000000124e-05, 2.1000000000000185e-05, 2.161100000000124e-05, 2.0986000000000615e-05, 2.1000000000000185e-05, 2.159700000000167e-05, 2.161100000000124e-05, 2.1000000000000185e-05, 2.161100000000124e-05, 2.161100000000124e-05, 2.2221999999998826e-05, 2.0972000000001045e-05, 2.162500000000081e-05, 2.161100000000124e-05, 2.159700000000167e-05, 2.1013999999999755e-05, 2.1611999999997245e-05, 2.1583999999998105e-05, 2.1612000000000714e-05, 2.098700000000009e-05, 2.1000000000000185e-05, 2.1000000000000185e-05, 2.165299999999995e-05, 2.159700000000167e-05, 2.158299999999863e-05, 2.161099999999777e-05, 2.166700000000299e-05, 2.159700000000167e-05, 2.161100000000124e-05, 2.161099999999777e-05, 2.161099999999777e-05, 2.159700000000167e-05, 2.1013999999999755e-05, 2.0971999999997576e-05, 2.1612000000000714e-05, 2.156899999999906e-05, 2.15969999999982e-05, 2.159700000000167e-05, 2.0986000000000615e-05, 2.1666000000000046e-05, 2.159700000000167e-05, 2.162499999999734e-05, 2.0999999999996716e-05, 2.161100000000124e-05, 2.15969999999982e-05, 2.1597999999997675e-05, 2.165299999999995e-05, 2.165299999999995e-05]</msg>
<status status="PASS" starttime="20201110 08:34:05.667" endtime="20201110 08:34:05.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.662" endtime="20201110 08:34:05.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.679" endtime="20201110 08:34:05.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.683" endtime="20201110 08:34:05.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.681" endtime="20201110 08:34:05.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.677" endtime="20201110 08:34:05.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.305" endtime="20201110 08:34:05.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.305" endtime="20201110 08:34:05.704"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.712" endtime="20201110 08:34:05.728"></status>
</kw>
<msg timestamp="20201110 08:34:05.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.711" endtime="20201110 08:34:05.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.730" endtime="20201110 08:34:05.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.732" endtime="20201110 08:34:05.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.708" endtime="20201110 08:34:05.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.706" endtime="20201110 08:34:05.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.742" endtime="20201110 08:34:06.029"></status>
</kw>
<msg timestamp="20201110 08:34:06.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022235236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.741" endtime="20201110 08:34:06.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022235236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.033" endtime="20201110 08:34:06.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.041" endtime="20201110 08:34:06.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.738" endtime="20201110 08:34:06.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.736" endtime="20201110 08:34:06.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.048" level="INFO">${RESULT} = [{'time': 0.022257444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2208000000002726e-05, 'source_diff': 2.2208000000002726e-05}, {'time': 0.022294792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:06.045" endtime="20201110 08:34:06.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.062" level="INFO">${ACCURACY} = {'source_diff': [2.2208000000002726e-05, 2.22090000000022e-05, 2.2806000000000215e-05, 2.2207999999999256e-05, 2.2806000000000215e-05, 2.2819999999999785e-05, 2.2819999999999785e-05, 2.220799999999925...</msg>
<status status="PASS" starttime="20201110 08:34:06.049" endtime="20201110 08:34:06.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.067" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.066" endtime="20201110 08:34:06.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.069" level="INFO">VALUE: [2.2208000000002726e-05, 2.22090000000022e-05, 2.2806000000000215e-05, 2.2207999999999256e-05, 2.2806000000000215e-05, 2.2819999999999785e-05, 2.2819999999999785e-05, 2.2207999999999256e-05, 2.2222000000002295e-05, 2.2806000000000215e-05, 2.2222000000002295e-05, 2.281900000000031e-05, 2.2207999999999256e-05, 2.2207999999999256e-05, 2.220899999999873e-05, 2.2193999999999686e-05, 2.2193999999999686e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2236000000001865e-05, 2.2792000000000645e-05, 2.2791999999997176e-05, 2.2221999999998826e-05, 2.2221999999998826e-05, 2.2819999999999785e-05, 2.2792000000000645e-05, 2.280500000000074e-05, 2.281900000000031e-05, 2.2221999999998826e-05, 2.220899999999873e-05, 2.2791999999997176e-05, 2.281900000000031e-05, 2.2805999999996746e-05, 2.2818999999996842e-05, 2.2264000000001005e-05, 2.219499999999916e-05, 2.2861999999998495e-05, 2.2207999999999256e-05, 2.2207999999999256e-05, 2.2806000000000215e-05, 2.2222000000002295e-05, 2.280500000000074e-05, 2.2221999999998826e-05, 2.2833999999999355e-05, 2.27770000000016e-05, 2.2028000000000325e-05, 2.281900000000031e-05, 2.2166000000000546e-05, 2.2819999999999785e-05, 2.2207999999999256e-05]</msg>
<status status="PASS" starttime="20201110 08:34:06.068" endtime="20201110 08:34:06.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.063" endtime="20201110 08:34:06.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.073" endtime="20201110 08:34:06.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.076" endtime="20201110 08:34:06.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.075" endtime="20201110 08:34:06.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.071" endtime="20201110 08:34:06.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.705" endtime="20201110 08:34:06.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.704" endtime="20201110 08:34:06.097"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.106" endtime="20201110 08:34:06.122"></status>
</kw>
<msg timestamp="20201110 08:34:06.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.104" endtime="20201110 08:34:06.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.124" endtime="20201110 08:34:06.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.126" endtime="20201110 08:34:06.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.101" endtime="20201110 08:34:06.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.099" endtime="20201110 08:34:06.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.136" endtime="20201110 08:34:06.421"></status>
</kw>
<msg timestamp="20201110 08:34:06.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022573819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.135" endtime="20201110 08:34:06.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022573819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.426" endtime="20201110 08:34:06.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.434" endtime="20201110 08:34:06.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.132" endtime="20201110 08:34:06.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.130" endtime="20201110 08:34:06.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.441" level="INFO">${RESULT} = [{'time': 0.022573819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.334699999999995e-05, 'source_diff': 2.334699999999995e-05}, {'time': 0.022608875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:06.437" endtime="20201110 08:34:06.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.455" level="INFO">${ACCURACY} = {'source_diff': [2.334699999999995e-05, 2.34030000000017e-05, 2.3416000000001796e-05, 2.4013999999999286e-05, 2.3415999999998327e-05, 2.338900000000213e-05, 2.3485999999999646e-05, 2.2736000000002365e...</msg>
<status status="PASS" starttime="20201110 08:34:06.442" endtime="20201110 08:34:06.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.460" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.459" endtime="20201110 08:34:06.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.463" level="INFO">VALUE: [2.334699999999995e-05, 2.34030000000017e-05, 2.3416000000001796e-05, 2.4013999999999286e-05, 2.3415999999998327e-05, 2.338900000000213e-05, 2.3485999999999646e-05, 2.2736000000002365e-05, 2.34169999999978e-05, 2.341700000000127e-05, 2.3402000000002227e-05, 2.340299999999823e-05, 2.3972000000000576e-05, 2.338899999999866e-05, 2.3444000000000936e-05, 2.345899999999998e-05, 2.3416000000001796e-05, 2.4084000000000605e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.3458000000000506e-05, 2.3999999999999716e-05, 2.27770000000016e-05, 2.3415999999998327e-05, 2.2833999999999355e-05, 2.4041999999998426e-05, 2.2764000000001505e-05, 2.343100000000084e-05, 2.4012999999999812e-05, 2.3416000000001796e-05, 2.34169999999978e-05, 2.3401999999998757e-05, 2.404100000000242e-05, 2.2819999999999785e-05, 2.568099999999962e-05, 2.4026999999999382e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.340299999999823e-05, 2.34030000000017e-05, 2.3472000000000076e-05, 2.34030000000017e-05, 2.3430000000001366e-05, 2.34030000000017e-05, 2.3415999999998327e-05, 2.2806000000000215e-05, 2.337499999999909e-05, 2.4028000000002325e-05, 2.4013999999999286e-05, 2.2778000000001075e-05]</msg>
<status status="PASS" starttime="20201110 08:34:06.461" endtime="20201110 08:34:06.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.456" endtime="20201110 08:34:06.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.466" endtime="20201110 08:34:06.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.470" endtime="20201110 08:34:06.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.468" endtime="20201110 08:34:06.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.465" endtime="20201110 08:34:06.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.098" endtime="20201110 08:34:06.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.097" endtime="20201110 08:34:06.490"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.499" endtime="20201110 08:34:06.515"></status>
</kw>
<msg timestamp="20201110 08:34:06.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.498" endtime="20201110 08:34:06.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.516" endtime="20201110 08:34:06.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.519" endtime="20201110 08:34:06.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.495" endtime="20201110 08:34:06.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.493" endtime="20201110 08:34:06.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.529" endtime="20201110 08:34:06.816"></status>
</kw>
<msg timestamp="20201110 08:34:06.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.527" endtime="20201110 08:34:06.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.820" endtime="20201110 08:34:06.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.828" endtime="20201110 08:34:06.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.525" endtime="20201110 08:34:06.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.523" endtime="20201110 08:34:06.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.835" level="INFO">${RESULT} = [{'time': 0.022163375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4027999999998856e-05, 'source_diff': 2.4027999999998856e-05}, {'time': 0.022193694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:06.832" endtime="20201110 08:34:06.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.849" level="INFO">${ACCURACY} = {'source_diff': [2.4027999999998856e-05, 2.4707999999998287e-05, 2.4000000000003185e-05, 2.3986000000000146e-05, 2.462500000000034e-05, 2.462500000000034e-05, 2.4012999999999812e-05, 2.469399999999871...</msg>
<status status="PASS" starttime="20201110 08:34:06.836" endtime="20201110 08:34:06.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.853" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.852" endtime="20201110 08:34:06.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.856" level="INFO">VALUE: [2.4027999999998856e-05, 2.4707999999998287e-05, 2.4000000000003185e-05, 2.3986000000000146e-05, 2.462500000000034e-05, 2.462500000000034e-05, 2.4012999999999812e-05, 2.4693999999998717e-05, 2.462499999999687e-05, 2.4041999999998426e-05, 2.462500000000034e-05, 2.463899999999991e-05, 2.4027999999998856e-05, 2.4026999999999382e-05, 2.402700000000285e-05, 2.4027999999998856e-05, 2.462500000000034e-05, 2.462499999999687e-05, 2.462500000000034e-05, 2.461100000000077e-05, 2.462500000000034e-05, 2.465299999999948e-05, 2.462500000000034e-05, 2.4568999999998592e-05, 2.462500000000034e-05, 2.461100000000077e-05, 2.4000000000003185e-05, 2.404100000000242e-05, 2.4096999999997232e-05, 2.461100000000077e-05, 2.462500000000034e-05, 2.4013999999999286e-05, 2.461100000000077e-05, 2.3986000000000146e-05, 2.4637999999996968e-05, 2.3999999999999716e-05, 2.463899999999991e-05, 2.462500000000034e-05, 2.4013999999999286e-05, 2.463899999999991e-05, 2.4040999999998952e-05, 2.5666000000000577e-05, 2.462500000000034e-05, 2.458300000000163e-05, 2.45970000000012e-05, 2.4013999999999286e-05, 2.468100000000209e-05, 2.4026999999999382e-05, 2.4598000000000675e-05, 2.462500000000034e-05]</msg>
<status status="PASS" starttime="20201110 08:34:06.855" endtime="20201110 08:34:06.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.850" endtime="20201110 08:34:06.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.860" endtime="20201110 08:34:06.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.863" endtime="20201110 08:34:06.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.861" endtime="20201110 08:34:06.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.858" endtime="20201110 08:34:06.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.491" endtime="20201110 08:34:06.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.491" endtime="20201110 08:34:06.884"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.893" endtime="20201110 08:34:06.909"></status>
</kw>
<msg timestamp="20201110 08:34:06.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.891" endtime="20201110 08:34:06.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.910" endtime="20201110 08:34:06.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.913" endtime="20201110 08:34:06.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.888" endtime="20201110 08:34:06.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.886" endtime="20201110 08:34:06.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.923" endtime="20201110 08:34:07.210"></status>
</kw>
<msg timestamp="20201110 08:34:07.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.921" endtime="20201110 08:34:07.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.214" endtime="20201110 08:34:07.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.222" endtime="20201110 08:34:07.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.919" endtime="20201110 08:34:07.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.917" endtime="20201110 08:34:07.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.229" level="INFO">${RESULT} = [{'time': 0.022366375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5222000000001826e-05, 'source_diff': 2.5222000000001826e-05}, {'time': 0.022404556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:07.225" endtime="20201110 08:34:07.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.242" level="INFO">${ACCURACY} = {'source_diff': [2.5222000000001826e-05, 2.522299999999783e-05, 2.5832999999999412e-05, 2.5832999999999412e-05, 2.5250000000000966e-05, 2.5833999999998886e-05, 2.5236000000001396e-05, 2.52080000000022...</msg>
<status status="PASS" starttime="20201110 08:34:07.230" endtime="20201110 08:34:07.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.247" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.246" endtime="20201110 08:34:07.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.249" level="INFO">VALUE: [2.5222000000001826e-05, 2.522299999999783e-05, 2.5832999999999412e-05, 2.5832999999999412e-05, 2.5250000000000966e-05, 2.5833999999998886e-05, 2.5236000000001396e-05, 2.5208000000002256e-05, 2.5832999999999412e-05, 2.5832999999999412e-05, 2.586100000000202e-05, 2.5222000000001826e-05, 2.5236000000001396e-05, 2.5833999999998886e-05, 2.5249999999997497e-05, 2.5833999999998886e-05, 2.5221999999998357e-05, 2.5846999999998982e-05, 2.5222000000001826e-05, 2.583300000000288e-05, 2.519499999999869e-05, 2.583300000000288e-05, 2.5805999999999746e-05, 2.5235999999997927e-05, 2.5235999999997927e-05, 2.5236000000001396e-05, 2.5042000000002895e-05, 2.5250000000000966e-05, 2.5832999999999412e-05, 2.5278000000000106e-05, 2.5777000000001132e-05, 2.5250000000000966e-05, 2.5833999999998886e-05, 2.590300000000073e-05, 2.5805000000000272e-05, 2.5179999999999647e-05, 2.5221999999998357e-05, 2.515299999999998e-05, 2.5862000000001495e-05, 2.5235999999997927e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.5304999999999772e-05, 2.5832999999999412e-05, 2.5236000000001396e-05, 2.5833999999998886e-05, 2.5832999999999412e-05, 2.5236000000001396e-05, 2.5860999999998552e-05, 2.5236000000001396e-05]</msg>
<status status="PASS" starttime="20201110 08:34:07.248" endtime="20201110 08:34:07.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.243" endtime="20201110 08:34:07.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.253" endtime="20201110 08:34:07.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.256" endtime="20201110 08:34:07.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.255" endtime="20201110 08:34:07.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.251" endtime="20201110 08:34:07.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.885" endtime="20201110 08:34:07.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.884" endtime="20201110 08:34:07.277"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.286" endtime="20201110 08:34:07.301"></status>
</kw>
<msg timestamp="20201110 08:34:07.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.284" endtime="20201110 08:34:07.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.303" endtime="20201110 08:34:07.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.307" endtime="20201110 08:34:07.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.281" endtime="20201110 08:34:07.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.279" endtime="20201110 08:34:07.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.317" endtime="20201110 08:34:07.613"></status>
</kw>
<msg timestamp="20201110 08:34:07.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.316" endtime="20201110 08:34:07.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.618" endtime="20201110 08:34:07.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.626" endtime="20201110 08:34:07.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.313" endtime="20201110 08:34:07.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.311" endtime="20201110 08:34:07.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.632" level="INFO">${RESULT} = [{'time': 0.022207875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.641699999999733e-05, 'source_diff': 2.641699999999733e-05}, {'time': 0.022250069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:07.629" endtime="20201110 08:34:07.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.646" level="INFO">${ACCURACY} = {'source_diff': [2.641699999999733e-05, 2.7041000000001952e-05, 2.7042000000001426e-05, 2.6443999999996998e-05, 2.6387999999998718e-05, 2.5862000000001495e-05, 2.6444000000000467e-05, 2.58339999999988...</msg>
<status status="PASS" starttime="20201110 08:34:07.633" endtime="20201110 08:34:07.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.650" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.649" endtime="20201110 08:34:07.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.653" level="INFO">VALUE: [2.641699999999733e-05, 2.7041000000001952e-05, 2.7042000000001426e-05, 2.6443999999996998e-05, 2.6387999999998718e-05, 2.5862000000001495e-05, 2.6444000000000467e-05, 2.5833999999998886e-05, 2.6444000000000467e-05, 2.7042000000001426e-05, 2.6486000000002646e-05, 2.5861999999998025e-05, 2.6443999999996998e-05, 2.6444000000000467e-05, 2.5805999999999746e-05, 2.644499999999994e-05, 2.6999999999999247e-05, 2.643100000000037e-05, 2.5846999999998982e-05, 2.648699999999865e-05, 2.641699999999733e-05, 2.584700000000245e-05, 2.583300000000288e-05, 2.6512999999998843e-05, 2.64170000000008e-05, 2.7055000000001522e-05, 2.6429999999997428e-05, 2.6444000000000467e-05, 2.6415999999997858e-05, 2.5833999999998886e-05, 2.6444000000000467e-05, 2.64309999999969e-05, 2.5833999999998886e-05, 2.6250000000001966e-05, 2.7027999999998387e-05, 2.6444000000000467e-05, 2.586100000000202e-05, 2.583300000000288e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.6444000000000467e-05, 2.5846999999998982e-05, 2.64170000000008e-05, 2.6458000000000037e-05, 2.7042000000001426e-05, 2.7069000000001092e-05, 2.638900000000166e-05, 2.7056000000000996e-05, 2.6444000000000467e-05]</msg>
<status status="PASS" starttime="20201110 08:34:07.651" endtime="20201110 08:34:07.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.647" endtime="20201110 08:34:07.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.656" endtime="20201110 08:34:07.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.660" endtime="20201110 08:34:07.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.658" endtime="20201110 08:34:07.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.655" endtime="20201110 08:34:07.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.278" endtime="20201110 08:34:07.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.277" endtime="20201110 08:34:07.681"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.689" endtime="20201110 08:34:07.705"></status>
</kw>
<msg timestamp="20201110 08:34:07.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.688" endtime="20201110 08:34:07.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.706" endtime="20201110 08:34:07.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.709" endtime="20201110 08:34:07.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.685" endtime="20201110 08:34:07.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.683" endtime="20201110 08:34:07.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.718" endtime="20201110 08:34:08.004"></status>
</kw>
<msg timestamp="20201110 08:34:08.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.717" endtime="20201110 08:34:08.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.009" endtime="20201110 08:34:08.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.017" endtime="20201110 08:34:08.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.714" endtime="20201110 08:34:08.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.713" endtime="20201110 08:34:08.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.023" level="INFO">${RESULT} = [{'time': 0.021951347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7679999999998678e-05, 'source_diff': 2.7679999999998678e-05}, {'time': 0.021984083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:08.020" endtime="20201110 08:34:08.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.038" level="INFO">${ACCURACY} = {'source_diff': [2.7679999999998678e-05, 2.763900000000291e-05, 2.7056000000000996e-05, 2.7040999999998483e-05, 2.765300000000248e-05, 2.7000000000002716e-05, 2.7651999999999538e-05, 2.704199999999795...</msg>
<status status="PASS" starttime="20201110 08:34:08.024" endtime="20201110 08:34:08.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.043" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.042" endtime="20201110 08:34:08.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.045" level="INFO">VALUE: [2.7679999999998678e-05, 2.763900000000291e-05, 2.7056000000000996e-05, 2.7040999999998483e-05, 2.765300000000248e-05, 2.7000000000002716e-05, 2.7651999999999538e-05, 2.7041999999997957e-05, 2.7056000000000996e-05, 2.7611999999999776e-05, 2.7054999999998053e-05, 2.7638999999999442e-05, 2.7637999999999968e-05, 2.6985999999999677e-05, 2.7055000000001522e-05, 2.6985999999999677e-05, 2.7652999999999012e-05, 2.766699999999858e-05, 2.7027999999998387e-05, 2.7679999999998678e-05, 2.7042000000001426e-05, 2.7069000000001092e-05, 2.7054999999998053e-05, 2.7041999999997957e-05, 2.7068999999997623e-05, 2.7056000000000996e-05, 2.7040999999998483e-05, 2.7041999999997957e-05, 2.7708000000001287e-05, 2.7570000000001066e-05, 2.7042000000001426e-05, 2.7055000000001522e-05, 2.7597000000000732e-05, 2.7054999999998053e-05, 2.7041999999997957e-05, 2.7652999999999012e-05, 2.765300000000248e-05, 2.7651999999999538e-05, 2.763900000000291e-05, 2.7638999999999442e-05, 2.7040999999998483e-05, 2.7027999999998387e-05, 2.7040999999998483e-05, 2.7652999999999012e-05, 2.7027999999998387e-05, 2.7652000000003008e-05, 2.7624999999999872e-05, 2.7652999999999012e-05, 2.7056000000000996e-05, 2.7596999999997263e-05]</msg>
<status status="PASS" starttime="20201110 08:34:08.044" endtime="20201110 08:34:08.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.039" endtime="20201110 08:34:08.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.049" endtime="20201110 08:34:08.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.052" endtime="20201110 08:34:08.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.050" endtime="20201110 08:34:08.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.047" endtime="20201110 08:34:08.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.681" endtime="20201110 08:34:08.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.681" endtime="20201110 08:34:08.073"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.081" endtime="20201110 08:34:08.097"></status>
</kw>
<msg timestamp="20201110 08:34:08.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.080" endtime="20201110 08:34:08.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.099" endtime="20201110 08:34:08.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.101" endtime="20201110 08:34:08.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.077" endtime="20201110 08:34:08.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.075" endtime="20201110 08:34:08.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.111" endtime="20201110 08:34:08.416"></status>
</kw>
<msg timestamp="20201110 08:34:08.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.110" endtime="20201110 08:34:08.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.420" endtime="20201110 08:34:08.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.428" endtime="20201110 08:34:08.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.107" endtime="20201110 08:34:08.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.106" endtime="20201110 08:34:08.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.435" level="INFO">${RESULT} = [{'time': 0.022297306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8862000000001026e-05, 'source_diff': 2.8862000000001026e-05}, {'time': 0.022334181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:08.432" endtime="20201110 08:34:08.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.448" level="INFO">${ACCURACY} = {'source_diff': [2.8862000000001026e-05, 2.82370000000004e-05, 2.8250000000000497e-05, 2.8874999999997653e-05, 2.8903000000000262e-05, 2.8250000000000497e-05, 2.8264000000000067e-05, 2.884700000000198...</msg>
<status status="PASS" starttime="20201110 08:34:08.436" endtime="20201110 08:34:08.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.453" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.452" endtime="20201110 08:34:08.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.456" level="INFO">VALUE: [2.8862000000001026e-05, 2.82370000000004e-05, 2.8250000000000497e-05, 2.8874999999997653e-05, 2.8903000000000262e-05, 2.8250000000000497e-05, 2.8264000000000067e-05, 2.8847000000001982e-05, 2.8264000000000067e-05, 2.8250000000000497e-05, 2.8235999999997458e-05, 2.8222000000001357e-05, 2.8236000000000927e-05, 2.8250000000000497e-05, 2.8861000000001552e-05, 2.8278000000003106e-05, 2.8250000000000497e-05, 2.8860999999998083e-05, 2.8250000000000497e-05, 2.8860999999998083e-05, 2.8236000000000927e-05, 2.8250000000000497e-05, 2.8264000000000067e-05, 2.8291999999999207e-05, 2.8264000000000067e-05, 2.8847000000001982e-05, 2.8861000000001552e-05, 2.8861000000001552e-05, 2.8250000000000497e-05, 2.8847000000001982e-05, 2.8846999999998513e-05, 2.8861000000001552e-05, 2.8860999999998083e-05, 2.8264000000000067e-05, 2.8860999999998083e-05, 2.8264000000000067e-05, 2.8290999999999733e-05, 2.8221999999997888e-05, 2.8848000000001456e-05, 2.8834000000001886e-05, 2.8847999999997986e-05, 2.8207999999998318e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8236000000000927e-05, 2.8250000000000497e-05, 2.8235999999997458e-05, 2.8278000000003106e-05, 2.8236000000000927e-05]</msg>
<status status="PASS" starttime="20201110 08:34:08.454" endtime="20201110 08:34:08.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.449" endtime="20201110 08:34:08.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.459" endtime="20201110 08:34:08.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.463" endtime="20201110 08:34:08.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.461" endtime="20201110 08:34:08.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.458" endtime="20201110 08:34:08.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.074" endtime="20201110 08:34:08.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.073" endtime="20201110 08:34:08.484"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.492" endtime="20201110 08:34:08.508"></status>
</kw>
<msg timestamp="20201110 08:34:08.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.491" endtime="20201110 08:34:08.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.509" endtime="20201110 08:34:08.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.512" endtime="20201110 08:34:08.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.488" endtime="20201110 08:34:08.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.486" endtime="20201110 08:34:08.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.521" endtime="20201110 08:34:08.806"></status>
</kw>
<msg timestamp="20201110 08:34:08.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021871181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.520" endtime="20201110 08:34:08.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021871181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.811" endtime="20201110 08:34:08.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.819" endtime="20201110 08:34:08.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.517" endtime="20201110 08:34:08.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.516" endtime="20201110 08:34:08.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.826" level="INFO">${RESULT} = [{'time': 0.021871181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0070000000000097e-05, 'source_diff': 3.0070000000000097e-05}, {'time': 0.021914111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:08.822" endtime="20201110 08:34:08.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.839" level="INFO">${ACCURACY} = {'source_diff': [3.0070000000000097e-05, 2.9457999999999568e-05, 2.944499999999947e-05, 3.0055000000001053e-05, 3.0042000000000957e-05, 2.945899999999904e-05, 2.9485999999998708e-05, 2.887500000000112...</msg>
<status status="PASS" starttime="20201110 08:34:08.827" endtime="20201110 08:34:08.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.844" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.842" endtime="20201110 08:34:08.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.846" level="INFO">VALUE: [3.0070000000000097e-05, 2.9457999999999568e-05, 2.944499999999947e-05, 3.0055000000001053e-05, 3.0042000000000957e-05, 2.945899999999904e-05, 2.9485999999998708e-05, 2.8875000000001122e-05, 2.9443999999999998e-05, 2.8889000000000692e-05, 2.9457999999999568e-05, 2.9458000000003037e-05, 3.0083000000000193e-05, 2.9500000000001747e-05, 3.0042000000000957e-05, 2.944500000000294e-05, 2.9471999999999138e-05, 2.9514000000001317e-05, 2.94309999999999e-05, 2.9457999999999568e-05, 2.9457999999999568e-05, 2.9472000000002607e-05, 2.8833000000002412e-05, 2.8916999999999832e-05, 2.947300000000208e-05, 2.947299999999861e-05, 2.945899999999904e-05, 2.9486000000002177e-05, 2.945900000000251e-05, 3.0056000000000527e-05, 2.8860999999998083e-05, 2.8875000000001122e-05, 2.9457999999999568e-05, 2.8874999999997653e-05, 2.9471999999999138e-05, 2.8847999999997986e-05, 2.9471999999999138e-05, 2.9458000000003037e-05, 2.945899999999904e-05, 2.8861000000001552e-05, 2.947299999999861e-05, 2.9486000000002177e-05, 2.8847000000001982e-05, 2.9457999999999568e-05, 2.9457999999999568e-05, 2.9485999999998708e-05, 2.9471999999999138e-05, 3.0042000000000957e-05, 2.8875000000001122e-05, 2.9457999999999568e-05]</msg>
<status status="PASS" starttime="20201110 08:34:08.845" endtime="20201110 08:34:08.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.840" endtime="20201110 08:34:08.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.850" endtime="20201110 08:34:08.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.853" endtime="20201110 08:34:08.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.851" endtime="20201110 08:34:08.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.848" endtime="20201110 08:34:08.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.484" endtime="20201110 08:34:08.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.484" endtime="20201110 08:34:08.874"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.882" endtime="20201110 08:34:08.899"></status>
</kw>
<msg timestamp="20201110 08:34:08.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.881" endtime="20201110 08:34:08.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.901" endtime="20201110 08:34:08.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.903" endtime="20201110 08:34:08.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.878" endtime="20201110 08:34:08.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.876" endtime="20201110 08:34:08.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.913" endtime="20201110 08:34:09.199"></status>
</kw>
<msg timestamp="20201110 08:34:09.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.911" endtime="20201110 08:34:09.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.203" endtime="20201110 08:34:09.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.211" endtime="20201110 08:34:09.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.909" endtime="20201110 08:34:09.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.907" endtime="20201110 08:34:09.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.218" level="INFO">${RESULT} = [{'time': 0.021993708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.068000000000168e-05, 'source_diff': 3.068000000000168e-05}, {'time': 0.022029653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:09.215" endtime="20201110 08:34:09.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.232" level="INFO">${ACCURACY} = {'source_diff': [3.068000000000168e-05, 3.061099999999983e-05, 3.068100000000115e-05, 3.066699999999811e-05, 3.0070000000000097e-05, 3.069399999999778e-05, 3.069399999999778e-05, 3.0055000000001053e-0...</msg>
<status status="PASS" starttime="20201110 08:34:09.219" endtime="20201110 08:34:09.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.236" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.235" endtime="20201110 08:34:09.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.239" level="INFO">VALUE: [3.068000000000168e-05, 3.061099999999983e-05, 3.068100000000115e-05, 3.066699999999811e-05, 3.0070000000000097e-05, 3.069399999999778e-05, 3.069399999999778e-05, 3.0055000000001053e-05, 3.068100000000115e-05, 3.061099999999983e-05, 3.065299999999854e-05, 3.0070000000000097e-05, 3.0070000000000097e-05, 3.073599999999996e-05, 3.070900000000029e-05, 3.068000000000168e-05, 3.069500000000072e-05, 3.068000000000168e-05, 3.065300000000201e-05, 3.0083000000000193e-05, 3.0069000000000623e-05, 3.0070000000000097e-05, 3.068100000000115e-05, 3.0042000000000957e-05, 3.065300000000201e-05, 3.066600000000211e-05, 3.0056000000000527e-05, 3.0070000000000097e-05, 3.066700000000158e-05, 3.068000000000168e-05, 3.0056000000000527e-05, 3.066700000000158e-05, 3.0070000000000097e-05, 3.065300000000201e-05, 3.06249999999994e-05, 3.0056000000000527e-05, 3.0069999999996627e-05, 3.068099999999768e-05, 3.0070000000000097e-05, 3.0070000000000097e-05, 3.068000000000168e-05, 3.0055000000001053e-05, 3.0054999999997584e-05, 3.0069000000000623e-05, 3.067999999999821e-05, 3.0082999999996723e-05, 3.0111999999998806e-05, 3.063899999999897e-05, 3.072200000000039e-05, 3.0096999999999763e-05]</msg>
<status status="PASS" starttime="20201110 08:34:09.237" endtime="20201110 08:34:09.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.233" endtime="20201110 08:34:09.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.242" endtime="20201110 08:34:09.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.246" endtime="20201110 08:34:09.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.244" endtime="20201110 08:34:09.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.241" endtime="20201110 08:34:09.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.875" endtime="20201110 08:34:09.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.874" endtime="20201110 08:34:09.266"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.275" endtime="20201110 08:34:09.291"></status>
</kw>
<msg timestamp="20201110 08:34:09.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.273" endtime="20201110 08:34:09.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.292" endtime="20201110 08:34:09.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.295" endtime="20201110 08:34:09.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.271" endtime="20201110 08:34:09.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.269" endtime="20201110 08:34:09.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.305" endtime="20201110 08:34:09.590"></status>
</kw>
<msg timestamp="20201110 08:34:09.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.303" endtime="20201110 08:34:09.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.594" endtime="20201110 08:34:09.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.602" endtime="20201110 08:34:09.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.300" endtime="20201110 08:34:09.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.299" endtime="20201110 08:34:09.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.609" level="INFO">${RESULT} = [{'time': 0.022009569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1263000000000124e-05, 'source_diff': 3.1263000000000124e-05}, {'time': 0.022046653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:09.605" endtime="20201110 08:34:09.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.623" level="INFO">${ACCURACY} = {'source_diff': [3.1263000000000124e-05, 3.129199999999874e-05, 3.127799999999917e-05, 3.188900000000022e-05, 3.119399999999828e-05, 3.12639999999996e-05, 3.127799999999917e-05, 3.1846999999998044e-05...</msg>
<status status="PASS" starttime="20201110 08:34:09.610" endtime="20201110 08:34:09.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.628" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.627" endtime="20201110 08:34:09.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.630" level="INFO">VALUE: [3.1263000000000124e-05, 3.129199999999874e-05, 3.127799999999917e-05, 3.188900000000022e-05, 3.119399999999828e-05, 3.12639999999996e-05, 3.127799999999917e-05, 3.1846999999998044e-05, 3.068100000000115e-05, 3.127799999999917e-05, 3.127800000000264e-05, 3.123600000000046e-05, 3.120800000000132e-05, 3.183399999999795e-05, 3.129200000000221e-05, 3.187500000000065e-05, 3.187500000000065e-05, 3.187500000000065e-05, 3.129199999999874e-05, 3.127799999999917e-05, 3.188900000000022e-05, 3.1276999999999694e-05, 3.129199999999874e-05, 3.187500000000065e-05, 3.127800000000264e-05, 3.183300000000194e-05, 3.190299999999979e-05, 3.129199999999874e-05, 3.1860999999997613e-05, 3.190299999999979e-05, 3.1276999999999694e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.188900000000022e-05, 3.127799999999917e-05, 3.193099999999893e-05, 3.188900000000022e-05, 3.184799999999752e-05, 3.187499999999718e-05, 3.122300000000036e-05, 3.187500000000065e-05, 3.129199999999874e-05, 3.187500000000065e-05, 3.186100000000108e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.187499999999718e-05, 3.127799999999917e-05, 3.190299999999979e-05, 3.125000000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:34:09.629" endtime="20201110 08:34:09.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.624" endtime="20201110 08:34:09.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.634" endtime="20201110 08:34:09.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.637" endtime="20201110 08:34:09.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.636" endtime="20201110 08:34:09.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.632" endtime="20201110 08:34:09.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.267" endtime="20201110 08:34:09.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.267" endtime="20201110 08:34:09.658"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.667" endtime="20201110 08:34:09.683"></status>
</kw>
<msg timestamp="20201110 08:34:09.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.665" endtime="20201110 08:34:09.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.685" endtime="20201110 08:34:09.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.687" endtime="20201110 08:34:09.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.662" endtime="20201110 08:34:09.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.660" endtime="20201110 08:34:09.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.697" endtime="20201110 08:34:09.982"></status>
</kw>
<msg timestamp="20201110 08:34:09.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021959625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.695" endtime="20201110 08:34:09.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021959625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.986" endtime="20201110 08:34:09.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.994" endtime="20201110 08:34:09.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.693" endtime="20201110 08:34:09.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.691" endtime="20201110 08:34:09.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.001" level="INFO">${RESULT} = [{'time': 0.021992083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.24579999999991e-05, 'source_diff': 3.24579999999991e-05}, {'time': 0.022031931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:09.998" endtime="20201110 08:34:10.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.015" level="INFO">${ACCURACY} = {'source_diff': [3.24579999999991e-05, 3.187500000000065e-05, 3.24579999999991e-05, 3.245900000000204e-05, 3.248600000000171e-05, 3.248599999999824e-05, 3.30839999999992e-05, 3.245900000000204e-05, 3....</msg>
<status status="PASS" starttime="20201110 08:34:10.002" endtime="20201110 08:34:10.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.020" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.018" endtime="20201110 08:34:10.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.022" level="INFO">VALUE: [3.24579999999991e-05, 3.187500000000065e-05, 3.24579999999991e-05, 3.245900000000204e-05, 3.248600000000171e-05, 3.248599999999824e-05, 3.30839999999992e-05, 3.245900000000204e-05, 3.250000000000128e-05, 3.248599999999824e-05, 3.243099999999943e-05, 3.1860999999997613e-05, 3.190299999999979e-05, 3.250000000000128e-05, 3.187500000000065e-05, 3.187500000000065e-05, 3.3069000000000154e-05, 3.187500000000065e-05, 3.30839999999992e-05, 3.248600000000171e-05, 3.187500000000065e-05, 3.241699999999986e-05, 3.187500000000065e-05, 3.187500000000065e-05, 3.247200000000214e-05, 3.1804999999999334e-05, 3.188900000000022e-05, 3.188900000000022e-05, 3.247200000000214e-05, 3.188900000000022e-05, 3.247199999999867e-05, 3.306999999999963e-05, 3.250000000000128e-05, 3.248599999999824e-05, 3.249999999999781e-05, 3.187500000000065e-05, 3.247300000000161e-05, 3.249999999999781e-05, 3.248600000000171e-05, 3.187499999999718e-05, 3.187499999999718e-05, 3.24310000000029e-05, 3.250000000000128e-05, 3.249999999999781e-05, 3.188900000000022e-05, 3.3110999999998864e-05, 3.3069000000000154e-05, 3.315300000000104e-05, 3.247200000000214e-05, 3.186100000000108e-05]</msg>
<status status="PASS" starttime="20201110 08:34:10.021" endtime="20201110 08:34:10.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.016" endtime="20201110 08:34:10.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.026" endtime="20201110 08:34:10.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.029" endtime="20201110 08:34:10.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.028" endtime="20201110 08:34:10.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.024" endtime="20201110 08:34:10.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.659" endtime="20201110 08:34:10.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.658" endtime="20201110 08:34:10.050"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.059" endtime="20201110 08:34:10.076"></status>
</kw>
<msg timestamp="20201110 08:34:10.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.057" endtime="20201110 08:34:10.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.078" endtime="20201110 08:34:10.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.080" endtime="20201110 08:34:10.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.055" endtime="20201110 08:34:10.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.052" endtime="20201110 08:34:10.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.090" endtime="20201110 08:34:10.377"></status>
</kw>
<msg timestamp="20201110 08:34:10.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:10.089" endtime="20201110 08:34:10.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:10.381" endtime="20201110 08:34:10.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.389" endtime="20201110 08:34:10.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.086" endtime="20201110 08:34:10.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.085" endtime="20201110 08:34:10.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.396" level="INFO">${RESULT} = [{'time': 0.022099417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7916999999998424e-05, 'source_diff': 3.7916999999998424e-05}, {'time': 0.022150431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:10.393" endtime="20201110 08:34:10.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.409" level="INFO">${ACCURACY} = {'source_diff': [3.7916999999998424e-05, 3.7945000000001033e-05, 3.87919999999993e-05, 3.8276999999999756e-05, 3.8681000000002214e-05, 3.822199999999748e-05, 3.8305000000002365e-05, 3.8138999999999534...</msg>
<status status="PASS" starttime="20201110 08:34:10.397" endtime="20201110 08:34:10.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.414" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.413" endtime="20201110 08:34:10.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.417" level="INFO">VALUE: [3.7916999999998424e-05, 3.7945000000001033e-05, 3.87919999999993e-05, 3.8276999999999756e-05, 3.8681000000002214e-05, 3.822199999999748e-05, 3.8305000000002365e-05, 3.8138999999999534e-05, 3.820800000000138e-05, 3.8124999999999964e-05, 3.805599999999812e-05, 3.8639000000000034e-05, 3.8332999999998035e-05, 3.854199999999905e-05, 3.845799999999816e-05, 3.880599999999887e-05, 3.8625000000000465e-05, 3.8708999999997884e-05, 3.867999999999927e-05, 3.8375000000000214e-05, 3.804200000000202e-05, 3.8625000000000465e-05, 3.8375000000000214e-05, 3.820800000000138e-05, 3.8790999999999826e-05, 3.8805000000002865e-05, 3.8305000000002365e-05, 3.8790999999999826e-05, 3.795800000000113e-05, 3.8138999999999534e-05, 3.854200000000252e-05, 3.795800000000113e-05, 3.795800000000113e-05, 3.880599999999887e-05, 3.845799999999816e-05, 3.877799999999973e-05, 3.7958999999997134e-05, 3.815199999999963e-05, 3.855599999999862e-05, 3.79590000000006e-05, 3.79590000000006e-05, 3.8459000000001103e-05, 3.7945000000001033e-05, 3.8124999999999964e-05, 3.8360999999997175e-05, 3.820800000000138e-05, 3.873599999999755e-05, 3.8639000000000034e-05, 3.870800000000188e-05, 3.845799999999816e-05]</msg>
<status status="PASS" starttime="20201110 08:34:10.415" endtime="20201110 08:34:10.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.410" endtime="20201110 08:34:10.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.420" endtime="20201110 08:34:10.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.424" endtime="20201110 08:34:10.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.422" endtime="20201110 08:34:10.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.418" endtime="20201110 08:34:10.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.051" endtime="20201110 08:34:10.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.050" endtime="20201110 08:34:10.444"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.453" endtime="20201110 08:34:10.470"></status>
</kw>
<msg timestamp="20201110 08:34:10.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.451" endtime="20201110 08:34:10.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.471" endtime="20201110 08:34:10.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.474" endtime="20201110 08:34:10.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.449" endtime="20201110 08:34:10.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.447" endtime="20201110 08:34:10.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.484" endtime="20201110 08:34:10.769"></status>
</kw>
<msg timestamp="20201110 08:34:10.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.482" endtime="20201110 08:34:10.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.773" endtime="20201110 08:34:10.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.782" endtime="20201110 08:34:10.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.480" endtime="20201110 08:34:10.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.478" endtime="20201110 08:34:10.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.789" level="INFO">${RESULT} = [{'time': 0.022032306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9431000000002964e-05, 'source_diff': 3.9431000000002964e-05}, {'time': 0.022087319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:10.785" endtime="20201110 08:34:10.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.802" level="INFO">${ACCURACY} = {'source_diff': [3.9431000000002964e-05, 3.9625000000001465e-05, 3.969399999999984e-05, 3.920800000000238e-05, 3.973599999999855e-05, 3.9153000000000104e-05, 3.9541000000000576e-05, 3.927800000000023e...</msg>
<status status="PASS" starttime="20201110 08:34:10.790" endtime="20201110 08:34:10.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.807" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.806" endtime="20201110 08:34:10.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.809" level="INFO">VALUE: [3.9431000000002964e-05, 3.9625000000001465e-05, 3.969399999999984e-05, 3.920800000000238e-05, 3.973599999999855e-05, 3.9153000000000104e-05, 3.9541000000000576e-05, 3.927800000000023e-05, 3.895799999999866e-05, 3.97920000000003e-05, 3.9068999999999215e-05, 3.9402999999996885e-05, 3.954200000000005e-05, 3.931999999999894e-05, 3.9125000000000965e-05, 3.954200000000005e-05, 3.924999999999762e-05, 3.9818999999999966e-05, 3.906999999999869e-05, 3.902799999999998e-05, 3.9096999999998355e-05, 3.9054999999999646e-05, 3.9653000000000604e-05, 3.9527000000001006e-05, 3.9139000000000534e-05, 3.970799999999941e-05, 3.9277000000000756e-05, 3.943000000000002e-05, 3.9625000000001465e-05, 3.9860999999998675e-05, 3.919400000000281e-05, 3.930600000000284e-05, 3.895799999999866e-05, 3.97920000000003e-05, 3.895800000000213e-05, 3.947199999999873e-05, 3.9431000000002964e-05, 3.897300000000117e-05, 3.9458999999998634e-05, 3.9818999999999966e-05, 3.9832999999999535e-05, 3.9318999999999465e-05, 3.9625000000001465e-05, 3.969399999999984e-05, 3.9611000000001895e-05, 3.970799999999941e-05, 3.894399999999909e-05, 3.9624999999997995e-05, 3.9389000000000784e-05, 3.920800000000238e-05]</msg>
<status status="PASS" starttime="20201110 08:34:10.808" endtime="20201110 08:34:10.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.803" endtime="20201110 08:34:10.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.816" endtime="20201110 08:34:10.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.820" endtime="20201110 08:34:10.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.818" endtime="20201110 08:34:10.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.815" endtime="20201110 08:34:10.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.445" endtime="20201110 08:34:10.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.445" endtime="20201110 08:34:10.841"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.849" endtime="20201110 08:34:10.866"></status>
</kw>
<msg timestamp="20201110 08:34:10.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.848" endtime="20201110 08:34:10.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.867" endtime="20201110 08:34:10.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.870" endtime="20201110 08:34:10.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.845" endtime="20201110 08:34:10.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.843" endtime="20201110 08:34:10.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.880" endtime="20201110 08:34:11.165"></status>
</kw>
<msg timestamp="20201110 08:34:11.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021888458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:10.878" endtime="20201110 08:34:11.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021888458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:11.169" endtime="20201110 08:34:11.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.177" endtime="20201110 08:34:11.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.876" endtime="20201110 08:34:11.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.874" endtime="20201110 08:34:11.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.184" level="INFO">${RESULT} = [{'time': 0.02192875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.02920000000008e-05, 'source_diff': 4.02920000000008e-05}, {'time': 0.021988792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:34:11.181" endtime="20201110 08:34:11.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.198" level="INFO">${ACCURACY} = {'source_diff': [4.02920000000008e-05, 4.0653000000001605e-05, 4.0262999999998716e-05, 4.002800000000098e-05, 3.995799999999966e-05, 4.07920000000013e-05, 4.0124999999998495e-05, 4.049999999999887e-05...</msg>
<status status="PASS" starttime="20201110 08:34:11.185" endtime="20201110 08:34:11.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.203" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.202" endtime="20201110 08:34:11.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.205" level="INFO">VALUE: [4.02920000000008e-05, 4.0653000000001605e-05, 4.0262999999998716e-05, 4.002800000000098e-05, 3.995799999999966e-05, 4.07920000000013e-05, 4.0124999999998495e-05, 4.049999999999887e-05, 4.013800000000206e-05, 4.0055000000000646e-05, 4.0125000000001965e-05, 4.022200000000295e-05, 4.0153000000001104e-05, 4.0403000000001354e-05, 4.0541000000001576e-05, 4.002800000000098e-05, 4.0638999999998565e-05, 4.0888999999998815e-05, 4.0874999999999245e-05, 4.019400000000034e-05, 4.0333000000000035e-05, 4.07920000000013e-05, 4.0110999999998925e-05, 3.997199999999923e-05, 4.026400000000166e-05, 4.0458999999999634e-05, 4.0805000000001396e-05, 4.079199999999783e-05, 4.0805000000001396e-05, 4.0554999999997676e-05, 4.0040999999997606e-05, 4.0276999999998286e-05, 4.0804999999997926e-05, 4.074999999999912e-05, 3.997199999999923e-05, 4.0124999999998495e-05, 4.0917000000001424e-05, 4.0361000000002645e-05, 4.0360999999999175e-05, 4.052799999999801e-05, 3.995799999999966e-05, 4.069399999999737e-05, 4.0889000000002285e-05, 4.023599999999905e-05, 4.0139000000001535e-05, 4.005599999999665e-05, 4.063799999999909e-05, 4.0847000000000105e-05, 4.0847000000000105e-05, 4.0055000000000646e-05]</msg>
<status status="PASS" starttime="20201110 08:34:11.204" endtime="20201110 08:34:11.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.199" endtime="20201110 08:34:11.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.209" endtime="20201110 08:34:11.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.212" endtime="20201110 08:34:11.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.211" endtime="20201110 08:34:11.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.207" endtime="20201110 08:34:11.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.842" endtime="20201110 08:34:11.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.841" endtime="20201110 08:34:11.233"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.242" endtime="20201110 08:34:11.259"></status>
</kw>
<msg timestamp="20201110 08:34:11.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.240" endtime="20201110 08:34:11.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.260" endtime="20201110 08:34:11.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.262" endtime="20201110 08:34:11.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.238" endtime="20201110 08:34:11.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.236" endtime="20201110 08:34:11.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.272" endtime="20201110 08:34:11.558"></status>
</kw>
<msg timestamp="20201110 08:34:11.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021888181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.271" endtime="20201110 08:34:11.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021888181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.562" endtime="20201110 08:34:11.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.570" endtime="20201110 08:34:11.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.268" endtime="20201110 08:34:11.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.267" endtime="20201110 08:34:11.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.577" level="INFO">${RESULT} = [{'time': 0.021929792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1611000000000425e-05, 'source_diff': 4.1611000000000425e-05}, {'time': 0.021984764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:11.573" endtime="20201110 08:34:11.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.590" level="INFO">${ACCURACY} = {'source_diff': [4.1611000000000425e-05, 4.1666999999998705e-05, 4.1833000000001536e-05, 4.1652999999999135e-05, 4.129199999999833e-05, 4.095800000000066e-05, 4.129199999999833e-05, 4.1512999999999967...</msg>
<status status="PASS" starttime="20201110 08:34:11.578" endtime="20201110 08:34:11.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.595" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.594" endtime="20201110 08:34:11.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.597" level="INFO">VALUE: [4.1611000000000425e-05, 4.1666999999998705e-05, 4.1833000000001536e-05, 4.1652999999999135e-05, 4.129199999999833e-05, 4.095800000000066e-05, 4.129199999999833e-05, 4.1512999999999967e-05, 4.1624999999999995e-05, 4.1875000000000245e-05, 4.1709000000000884e-05, 4.159800000000033e-05, 4.104199999999808e-05, 4.0902999999998385e-05, 4.088799999999934e-05, 4.173600000000055e-05, 4.1083000000000786e-05, 4.11799999999983e-05, 4.1680999999998275e-05, 4.1041000000002076e-05, 4.1181000000001244e-05, 4.1930999999998525e-05, 4.155600000000162e-05, 4.179199999999883e-05, 4.1624999999999995e-05, 4.152800000000248e-05, 4.1638999999999565e-05, 4.1195000000000814e-05, 4.1152999999998635e-05, 4.09859999999998e-05, 4.1458999999997165e-05, 4.1624999999999995e-05, 4.1055000000001646e-05, 4.1125000000002965e-05, 4.168000000000227e-05, 4.1124999999999495e-05, 4.119400000000134e-05, 4.1624999999999995e-05, 4.120799999999744e-05, 4.0930999999997525e-05, 4.129199999999833e-05, 4.179199999999883e-05, 4.1124999999999495e-05, 4.154199999999858e-05, 4.1152999999998635e-05, 4.1695000000001314e-05, 4.127800000000223e-05, 4.17920000000023e-05, 4.177799999999926e-05, 4.14860000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:34:11.596" endtime="20201110 08:34:11.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.591" endtime="20201110 08:34:11.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.601" endtime="20201110 08:34:11.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.604" endtime="20201110 08:34:11.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.602" endtime="20201110 08:34:11.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.599" endtime="20201110 08:34:11.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.234" endtime="20201110 08:34:11.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.234" endtime="20201110 08:34:11.625"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.633" endtime="20201110 08:34:11.651"></status>
</kw>
<msg timestamp="20201110 08:34:11.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.632" endtime="20201110 08:34:11.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.652" endtime="20201110 08:34:11.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.655" endtime="20201110 08:34:11.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.629" endtime="20201110 08:34:11.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.627" endtime="20201110 08:34:11.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.665" endtime="20201110 08:34:11.951"></status>
</kw>
<msg timestamp="20201110 08:34:11.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.663" endtime="20201110 08:34:11.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.956" endtime="20201110 08:34:11.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.965" endtime="20201110 08:34:11.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.661" endtime="20201110 08:34:11.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.659" endtime="20201110 08:34:11.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.972" level="INFO">${RESULT} = [{'time': 0.022361319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.276300000000122e-05, 'source_diff': 4.276300000000122e-05}, {'time': 0.022415347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:11.968" endtime="20201110 08:34:11.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.986" level="INFO">${ACCURACY} = {'source_diff': [4.276300000000122e-05, 4.2068999999998746e-05, 4.2804999999999926e-05, 4.2290999999999856e-05, 4.195800000000166e-05, 4.2290999999999856e-05, 4.251400000000044e-05, 4.279199999999983e...</msg>
<status status="PASS" starttime="20201110 08:34:11.973" endtime="20201110 08:34:11.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.991" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.990" endtime="20201110 08:34:11.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.993" level="INFO">VALUE: [4.276300000000122e-05, 4.2068999999998746e-05, 4.2804999999999926e-05, 4.2290999999999856e-05, 4.195800000000166e-05, 4.2290999999999856e-05, 4.251400000000044e-05, 4.279199999999983e-05, 4.2125000000000495e-05, 4.2375000000000745e-05, 4.254199999999958e-05, 4.2125000000000495e-05, 4.2889000000000815e-05, 4.2903000000000385e-05, 4.2709000000001884e-05, 4.2639000000000565e-05, 4.273600000000155e-05, 4.2625000000000995e-05, 4.2208999999997915e-05, 4.194400000000209e-05, 4.2304999999999426e-05, 4.244399999999912e-05, 4.2125000000000495e-05, 4.252800000000001e-05, 4.2624999999997526e-05, 4.204199999999908e-05, 4.227799999999976e-05, 4.2125000000000495e-05, 4.272200000000198e-05, 4.1958999999997665e-05, 4.247200000000173e-05, 4.279199999999983e-05, 4.279199999999983e-05, 4.28059999999994e-05, 4.2473000000001204e-05, 4.197200000000123e-05, 4.263800000000109e-05, 4.270799999999894e-05, 4.195800000000166e-05, 4.2791000000000357e-05, 4.2625000000000995e-05, 4.273600000000155e-05, 4.245800000000216e-05, 4.27920000000033e-05, 4.2625000000000995e-05, 4.276400000000069e-05, 4.247199999999826e-05, 4.229199999999933e-05, 4.2582999999998816e-05, 4.2889000000000815e-05]</msg>
<status status="PASS" starttime="20201110 08:34:11.992" endtime="20201110 08:34:11.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.987" endtime="20201110 08:34:11.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.997" endtime="20201110 08:34:11.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.001" endtime="20201110 08:34:12.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.999" endtime="20201110 08:34:12.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.995" endtime="20201110 08:34:12.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.626" endtime="20201110 08:34:12.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.625" endtime="20201110 08:34:12.022"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.032" endtime="20201110 08:34:12.049"></status>
</kw>
<msg timestamp="20201110 08:34:12.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.030" endtime="20201110 08:34:12.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.050" endtime="20201110 08:34:12.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.053" endtime="20201110 08:34:12.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.026" endtime="20201110 08:34:12.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.024" endtime="20201110 08:34:12.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.063" endtime="20201110 08:34:12.350"></status>
</kw>
<msg timestamp="20201110 08:34:12.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023567861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023610944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.062" endtime="20201110 08:34:12.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023567861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023610944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.355" endtime="20201110 08:34:12.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.363" endtime="20201110 08:34:12.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.059" endtime="20201110 08:34:12.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.057" endtime="20201110 08:34:12.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.370" level="INFO">${RESULT} = [{'time': 0.023610944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3082999999999316e-05, 'source_diff': 4.3082999999999316e-05}, {'time': 0.023673958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:12.366" endtime="20201110 08:34:12.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.383" level="INFO">${ACCURACY} = {'source_diff': [4.3082999999999316e-05, 4.342999999999708e-05, 4.377700000000179e-05, 4.379099999999789e-05, 4.345799999999969e-05, 4.329200000000033e-05, 4.3610999999998956e-05, 4.3681000000000275e-...</msg>
<status status="PASS" starttime="20201110 08:34:12.371" endtime="20201110 08:34:12.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.388" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.387" endtime="20201110 08:34:12.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.390" level="INFO">VALUE: [4.3082999999999316e-05, 4.342999999999708e-05, 4.377700000000179e-05, 4.379099999999789e-05, 4.345799999999969e-05, 4.329200000000033e-05, 4.3610999999998956e-05, 4.3681000000000275e-05, 4.3110999999998456e-05, 4.3389000000001315e-05, 4.354200000000058e-05, 4.2958999999998665e-05, 4.326399999999772e-05, 4.309799999999836e-05, 4.3889000000001815e-05, 4.373599999999908e-05, 4.3458999999999165e-05, 4.329099999999739e-05, 4.3125000000001495e-05, 4.322200000000248e-05, 4.3139000000001065e-05, 4.369400000000037e-05, 4.3805000000000927e-05, 4.3652999999997666e-05, 4.369400000000037e-05, 4.347199999999926e-05, 4.33059999999999e-05, 4.345799999999969e-05, 4.33059999999999e-05, 4.3639000000001565e-05, 4.354200000000058e-05, 4.2958999999998665e-05, 4.379199999999736e-05, 4.3124999999998026e-05, 4.302800000000051e-05, 4.2875000000001245e-05, 4.3291000000000857e-05, 4.3125000000001495e-05, 4.322200000000248e-05, 4.3374999999998276e-05, 4.377799999999779e-05, 4.3138999999997596e-05, 4.3931000000000525e-05, 4.324999999999815e-05, 4.3624999999998526e-05, 4.322199999999901e-05, 4.327800000000076e-05, 4.348599999999883e-05, 4.3625000000001996e-05, 4.3222999999998485e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.389" endtime="20201110 08:34:12.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.384" endtime="20201110 08:34:12.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.394" endtime="20201110 08:34:12.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.397" endtime="20201110 08:34:12.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.395" endtime="20201110 08:34:12.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.392" endtime="20201110 08:34:12.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.023" endtime="20201110 08:34:12.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.022" endtime="20201110 08:34:12.418"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.426" endtime="20201110 08:34:12.443"></status>
</kw>
<msg timestamp="20201110 08:34:12.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.425" endtime="20201110 08:34:12.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.444" endtime="20201110 08:34:12.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.447" endtime="20201110 08:34:12.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.422" endtime="20201110 08:34:12.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.420" endtime="20201110 08:34:12.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.457" endtime="20201110 08:34:12.755"></status>
</kw>
<msg timestamp="20201110 08:34:12.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.455" endtime="20201110 08:34:12.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.759" endtime="20201110 08:34:12.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.767" endtime="20201110 08:34:12.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.453" endtime="20201110 08:34:12.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.451" endtime="20201110 08:34:12.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.774" level="INFO">${RESULT} = [{'time': 0.022016667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4610999999999956e-05, 'source_diff': 4.4610999999999956e-05}, {'time': 0.022076667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:12.771" endtime="20201110 08:34:12.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.789" level="INFO">${ACCURACY} = {'source_diff': [4.4610999999999956e-05, 4.3945000000000095e-05, 4.474999999999965e-05, 4.4333000000000566e-05, 4.395800000000019e-05, 4.445799999999722e-05, 4.4819000000001497e-05, 4.445800000000069e...</msg>
<status status="PASS" starttime="20201110 08:34:12.775" endtime="20201110 08:34:12.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.793" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.792" endtime="20201110 08:34:12.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.796" level="INFO">VALUE: [4.4610999999999956e-05, 4.3945000000000095e-05, 4.474999999999965e-05, 4.4333000000000566e-05, 4.395800000000019e-05, 4.445799999999722e-05, 4.4819000000001497e-05, 4.445800000000069e-05, 4.477799999999879e-05, 4.394400000000062e-05, 4.480499999999846e-05, 4.395800000000019e-05, 4.429200000000133e-05, 4.395800000000019e-05, 4.43060000000009e-05, 4.4624999999999526e-05, 4.4472999999999735e-05, 4.3931000000000525e-05, 4.3972999999999235e-05, 4.4444999999997126e-05, 4.4472999999999735e-05, 4.4347000000000136e-05, 4.4110999999999456e-05, 4.422200000000001e-05, 4.445800000000069e-05, 4.479100000000236e-05, 4.397199999999976e-05, 4.477799999999879e-05, 4.43060000000009e-05, 4.4624999999999526e-05, 4.4360999999999706e-05, 4.454200000000158e-05, 4.427799999999829e-05, 4.4639000000002566e-05, 4.4222999999999485e-05, 4.4624999999999526e-05, 4.4375000000002746e-05, 4.4374999999999276e-05, 4.4597000000000386e-05, 4.481899999999803e-05, 4.395800000000019e-05, 4.445800000000069e-05, 4.4138999999998596e-05, 4.4389000000002315e-05, 4.422200000000001e-05, 4.395800000000019e-05, 4.394400000000062e-05, 4.479199999999836e-05, 4.4096999999999886e-05, 4.455600000000115e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.794" endtime="20201110 08:34:12.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.790" endtime="20201110 08:34:12.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.799" endtime="20201110 08:34:12.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.803" endtime="20201110 08:34:12.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.801" endtime="20201110 08:34:12.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.798" endtime="20201110 08:34:12.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.419" endtime="20201110 08:34:12.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.418" endtime="20201110 08:34:12.823"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.832" endtime="20201110 08:34:12.849"></status>
</kw>
<msg timestamp="20201110 08:34:12.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.830" endtime="20201110 08:34:12.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.851" endtime="20201110 08:34:12.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.853" endtime="20201110 08:34:12.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.828" endtime="20201110 08:34:12.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.826" endtime="20201110 08:34:12.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.863" endtime="20201110 08:34:13.149"></status>
</kw>
<msg timestamp="20201110 08:34:13.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022062917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.862" endtime="20201110 08:34:13.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022062917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.153" endtime="20201110 08:34:13.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.161" endtime="20201110 08:34:13.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.859" endtime="20201110 08:34:13.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.857" endtime="20201110 08:34:13.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.168" level="INFO">${RESULT} = [{'time': 0.022062917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4959000000000665e-05, 'source_diff': 4.4959000000000665e-05}, {'time': 0.022121903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:13.164" endtime="20201110 08:34:13.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.181" level="INFO">${ACCURACY} = {'source_diff': [4.4959000000000665e-05, 4.562499999999706e-05, 4.5209000000000915e-05, 4.527799999999929e-05, 4.530599999999843e-05, 4.4959000000000665e-05, 4.5639000000000096e-05, 4.5375000000000276...</msg>
<status status="PASS" starttime="20201110 08:34:13.169" endtime="20201110 08:34:13.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.186" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.185" endtime="20201110 08:34:13.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.188" level="INFO">VALUE: [4.4959000000000665e-05, 4.562499999999706e-05, 4.5209000000000915e-05, 4.527799999999929e-05, 4.530599999999843e-05, 4.4959000000000665e-05, 4.5639000000000096e-05, 4.5375000000000276e-05, 4.570799999999847e-05, 4.545800000000169e-05, 4.5125000000000026e-05, 4.504099999999914e-05, 4.544399999999865e-05, 4.495800000000119e-05, 4.58060000000024e-05, 4.4945000000001095e-05, 4.5125000000000026e-05, 4.5694999999998376e-05, 4.519400000000187e-05, 4.5194999999997876e-05, 4.5402999999999416e-05, 4.5083000000001316e-05, 4.504199999999861e-05, 4.580499999999946e-05, 4.5111000000000456e-05, 4.5889000000000346e-05, 4.5889000000000346e-05, 4.505499999999871e-05, 4.5125000000000026e-05, 4.554200000000258e-05, 4.580599999999893e-05, 4.5138999999999596e-05, 4.552799999999954e-05, 4.529199999999886e-05, 4.4945000000001095e-05, 4.5625000000000526e-05, 4.541599999999951e-05, 4.557000000000172e-05, 4.5125000000000026e-05, 4.579199999999936e-05, 4.511199999999993e-05, 4.5875000000000776e-05, 4.525000000000015e-05, 4.498600000000033e-05, 4.494399999999815e-05, 4.526399999999972e-05, 4.495800000000119e-05, 4.529199999999886e-05, 4.5625000000000526e-05, 4.576400000000022e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.187" endtime="20201110 08:34:13.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.182" endtime="20201110 08:34:13.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.192" endtime="20201110 08:34:13.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.195" endtime="20201110 08:34:13.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.193" endtime="20201110 08:34:13.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.190" endtime="20201110 08:34:13.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.824" endtime="20201110 08:34:13.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.824" endtime="20201110 08:34:13.217"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.230" endtime="20201110 08:34:13.248"></status>
</kw>
<msg timestamp="20201110 08:34:13.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.228" endtime="20201110 08:34:13.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.250" endtime="20201110 08:34:13.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.252" endtime="20201110 08:34:13.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.224" endtime="20201110 08:34:13.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.220" endtime="20201110 08:34:13.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.262" endtime="20201110 08:34:13.548"></status>
</kw>
<msg timestamp="20201110 08:34:13.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028487986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028534097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.261" endtime="20201110 08:34:13.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028487986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028534097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.552" endtime="20201110 08:34:13.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.561" endtime="20201110 08:34:13.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.258" endtime="20201110 08:34:13.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.256" endtime="20201110 08:34:13.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.567" level="INFO">${RESULT} = [{'time': 0.028534097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6111000000001456e-05, 'source_diff': 4.6111000000001456e-05}, {'time': 0.028596097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:13.564" endtime="20201110 08:34:13.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.581" level="INFO">${ACCURACY} = {'source_diff': [4.6111000000001456e-05, 4.6125000000001026e-05, 4.670799999999947e-05, 4.629199999999986e-05, 4.613899999999713e-05, 4.6375000000001276e-05, 4.654200000000011e-05, 4.6639000000001096e...</msg>
<status status="PASS" starttime="20201110 08:34:13.568" endtime="20201110 08:34:13.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.585" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.584" endtime="20201110 08:34:13.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.588" level="INFO">VALUE: [4.6111000000001456e-05, 4.6125000000001026e-05, 4.670799999999947e-05, 4.629199999999986e-05, 4.613899999999713e-05, 4.6375000000001276e-05, 4.654200000000011e-05, 4.6639000000001096e-05, 4.6723000000001985e-05, 4.677800000000079e-05, 4.679200000000036e-05, 4.630599999999943e-05, 4.6459000000002165e-05, 4.645799999999922e-05, 4.629100000000039e-05, 4.595799999999872e-05, 4.679099999999742e-05, 4.6639000000001096e-05, 4.688899999999788e-05, 4.629199999999986e-05, 4.6625000000001526e-05, 4.672199999999904e-05, 4.677800000000079e-05, 4.598599999999786e-05, 4.630599999999943e-05, 4.6444999999999126e-05, 4.608400000000179e-05, 4.6709000000002415e-05, 4.680599999999993e-05, 4.5944999999998626e-05, 4.680500000000046e-05, 4.647199999999879e-05, 4.644399999999965e-05, 4.629099999999692e-05, 4.6653000000000666e-05, 4.654100000000064e-05, 4.625000000000115e-05, 4.612499999999756e-05, 4.622200000000201e-05, 4.629199999999986e-05, 4.648599999999836e-05, 4.677800000000079e-05, 4.6639000000001096e-05, 4.648600000000183e-05, 4.6653000000000666e-05, 4.6889000000001346e-05, 4.629199999999639e-05, 4.6625000000001526e-05, 4.6375000000001276e-05, 4.670799999999947e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.586" endtime="20201110 08:34:13.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.582" endtime="20201110 08:34:13.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.591" endtime="20201110 08:34:13.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.595" endtime="20201110 08:34:13.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.593" endtime="20201110 08:34:13.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.590" endtime="20201110 08:34:13.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.218" endtime="20201110 08:34:13.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.217" endtime="20201110 08:34:13.616"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.624" endtime="20201110 08:34:13.642"></status>
</kw>
<msg timestamp="20201110 08:34:13.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.623" endtime="20201110 08:34:13.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.644" endtime="20201110 08:34:13.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.646" endtime="20201110 08:34:13.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.620" endtime="20201110 08:34:13.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.618" endtime="20201110 08:34:13.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.656" endtime="20201110 08:34:13.942"></status>
</kw>
<msg timestamp="20201110 08:34:13.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022111278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.654" endtime="20201110 08:34:13.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022111278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.947" endtime="20201110 08:34:13.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.955" endtime="20201110 08:34:13.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.652" endtime="20201110 08:34:13.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.650" endtime="20201110 08:34:13.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.962" level="INFO">${RESULT} = [{'time': 0.022111278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7445000000000126e-05, 'source_diff': 4.7445000000000126e-05}, {'time': 0.022175292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:13.958" endtime="20201110 08:34:13.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.975" level="INFO">${ACCURACY} = {'source_diff': [4.7445000000000126e-05, 4.7472999999999266e-05, 4.7639000000002096e-05, 4.756899999999731e-05, 4.7445000000000126e-05, 4.729099999999792e-05, 4.777699999999885e-05, 4.762499999999906e...</msg>
<status status="PASS" starttime="20201110 08:34:13.963" endtime="20201110 08:34:13.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.980" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.979" endtime="20201110 08:34:13.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.982" level="INFO">VALUE: [4.7445000000000126e-05, 4.7472999999999266e-05, 4.7639000000002096e-05, 4.756899999999731e-05, 4.7445000000000126e-05, 4.729099999999792e-05, 4.777699999999885e-05, 4.762499999999906e-05, 4.704099999999767e-05, 4.783400000000007e-05, 4.756900000000078e-05, 4.755599999999721e-05, 4.730600000000043e-05, 4.711099999999899e-05, 4.702800000000104e-05, 4.7167000000000736e-05, 4.754200000000111e-05, 4.776399999999875e-05, 4.7473000000002735e-05, 4.7125000000002026e-05, 4.706900000000028e-05, 4.762499999999906e-05, 4.738899999999838e-05, 4.754099999999817e-05, 4.7181000000000306e-05, 4.784700000000017e-05, 4.71529999999977e-05, 4.780500000000146e-05, 4.7013999999998e-05, 4.732e-05, 4.729199999999739e-05, 4.7431000000000556e-05, 4.729200000000086e-05, 4.713899999999813e-05, 4.7722999999999516e-05, 4.780600000000093e-05, 4.7431000000000556e-05, 4.729200000000086e-05, 4.726299999999878e-05, 4.762499999999906e-05, 4.770800000000047e-05, 4.729099999999792e-05, 4.75139999999985e-05, 4.720799999999997e-05, 4.7139000000001596e-05, 4.737499999999881e-05, 4.722199999999954e-05, 4.695799999999972e-05, 4.780600000000093e-05, 4.7653000000001666e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.981" endtime="20201110 08:34:13.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.976" endtime="20201110 08:34:13.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.986" endtime="20201110 08:34:13.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.989" endtime="20201110 08:34:14.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.987" endtime="20201110 08:34:14.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.984" endtime="20201110 08:34:14.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.616" endtime="20201110 08:34:14.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.616" endtime="20201110 08:34:14.010"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.018" endtime="20201110 08:34:14.035"></status>
</kw>
<msg timestamp="20201110 08:34:14.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.017" endtime="20201110 08:34:14.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.037" endtime="20201110 08:34:14.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.039" endtime="20201110 08:34:14.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.014" endtime="20201110 08:34:14.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.012" endtime="20201110 08:34:14.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.049" endtime="20201110 08:34:14.335"></status>
</kw>
<msg timestamp="20201110 08:34:14.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.047" endtime="20201110 08:34:14.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.340" endtime="20201110 08:34:14.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.348" endtime="20201110 08:34:14.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.045" endtime="20201110 08:34:14.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.043" endtime="20201110 08:34:14.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.354" level="INFO">${RESULT} = [{'time': 0.022096278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859700000000092e-05, 'source_diff': 4.859700000000092e-05}, {'time': 0.022162292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:14.351" endtime="20201110 08:34:14.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.369" level="INFO">${ACCURACY} = {'source_diff': [4.859700000000092e-05, 4.813899999999913e-05, 4.837499999999981e-05, 4.8723000000000516e-05, 4.812499999999956e-05, 4.804199999999814e-05, 4.880499999999899e-05, 4.856899999999831e-05...</msg>
<status status="PASS" starttime="20201110 08:34:14.355" endtime="20201110 08:34:14.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.373" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.372" endtime="20201110 08:34:14.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.376" level="INFO">VALUE: [4.859700000000092e-05, 4.813899999999913e-05, 4.837499999999981e-05, 4.8723000000000516e-05, 4.812499999999956e-05, 4.804199999999814e-05, 4.880499999999899e-05, 4.856899999999831e-05, 4.856900000000178e-05, 4.863899999999963e-05, 4.838899999999938e-05, 4.81940000000014e-05, 4.797200000000029e-05, 4.811099999999999e-05, 4.872200000000104e-05, 4.830599999999796e-05, 4.809700000000042e-05, 4.854200000000211e-05, 4.862500000000006e-05, 4.8723000000000516e-05, 4.852800000000254e-05, 4.813899999999913e-05, 4.849999999999993e-05, 4.863800000000015e-05, 4.8707999999998e-05, 4.876399999999975e-05, 4.798599999999986e-05, 4.8681000000001806e-05, 4.870800000000147e-05, 4.845800000000122e-05, 4.812499999999956e-05, 4.820800000000097e-05, 4.824999999999968e-05, 4.807000000000075e-05, 4.888899999999988e-05, 4.8195000000000876e-05, 4.880600000000193e-05, 4.8472999999996796e-05, 4.831900000000153e-05, 4.815199999999922e-05, 4.820800000000097e-05, 4.804200000000161e-05, 4.845799999999775e-05, 4.8445000000001126e-05, 4.879099999999942e-05, 4.798599999999986e-05, 4.844400000000165e-05, 4.880599999999846e-05, 4.81529999999987e-05, 4.849999999999993e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.375" endtime="20201110 08:34:14.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.370" endtime="20201110 08:34:14.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.379" endtime="20201110 08:34:14.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.383" endtime="20201110 08:34:14.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.381" endtime="20201110 08:34:14.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.378" endtime="20201110 08:34:14.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.011" endtime="20201110 08:34:14.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.010" endtime="20201110 08:34:14.404"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.412" endtime="20201110 08:34:14.430"></status>
</kw>
<msg timestamp="20201110 08:34:14.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.411" endtime="20201110 08:34:14.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.432" endtime="20201110 08:34:14.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.434" endtime="20201110 08:34:14.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.408" endtime="20201110 08:34:14.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.406" endtime="20201110 08:34:14.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.444" endtime="20201110 08:34:14.730"></status>
</kw>
<msg timestamp="20201110 08:34:14.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.443" endtime="20201110 08:34:14.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.734" endtime="20201110 08:34:14.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.742" endtime="20201110 08:34:14.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.440" endtime="20201110 08:34:14.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.438" endtime="20201110 08:34:14.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.749" level="INFO">${RESULT} = [{'time': 0.021893431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.961200000000096e-05, 'source_diff': 4.961200000000096e-05}, {'time': 0.021963431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:14.745" endtime="20201110 08:34:14.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.762" level="INFO">${ACCURACY} = {'source_diff': [4.961200000000096e-05, 4.927799999999982e-05, 4.929199999999939e-05, 4.945799999999875e-05, 4.944400000000265e-05, 4.961099999999802e-05, 4.922199999999807e-05, 4.913900000000013e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:14.750" endtime="20201110 08:34:14.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.767" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.766" endtime="20201110 08:34:14.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.769" level="INFO">VALUE: [4.961200000000096e-05, 4.927799999999982e-05, 4.929199999999939e-05, 4.945799999999875e-05, 4.944400000000265e-05, 4.961099999999802e-05, 4.922199999999807e-05, 4.913900000000013e-05, 4.922200000000154e-05, 4.897199999999782e-05, 4.922200000000154e-05, 4.947200000000179e-05, 4.936099999999777e-05, 4.963900000000063e-05, 4.9208999999997977e-05, 4.913900000000013e-05, 4.938900000000038e-05, 4.955499999999974e-05, 4.962500000000106e-05, 4.908299999999838e-05, 4.958299999999888e-05, 4.937500000000081e-05, 4.954100000000017e-05, 4.912500000000056e-05, 4.9707999999999e-05, 4.9014e-05, 4.929199999999939e-05, 4.940299999999995e-05, 4.913900000000013e-05, 4.934700000000167e-05, 4.957000000000225e-05, 4.980599999999946e-05, 4.912500000000056e-05, 4.938900000000038e-05, 4.9223000000001016e-05, 4.930599999999896e-05, 4.929099999999992e-05, 4.972200000000204e-05, 4.895799999999825e-05, 4.955499999999974e-05, 4.904199999999914e-05, 4.930500000000296e-05, 4.977800000000032e-05, 4.959700000000192e-05, 4.92079999999985e-05, 4.959700000000192e-05, 4.970899999999848e-05, 4.962499999999759e-05, 4.904199999999914e-05, 4.9459000000001696e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.768" endtime="20201110 08:34:14.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.763" endtime="20201110 08:34:14.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.773" endtime="20201110 08:34:14.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.776" endtime="20201110 08:34:14.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.775" endtime="20201110 08:34:14.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.771" endtime="20201110 08:34:14.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.405" endtime="20201110 08:34:14.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.404" endtime="20201110 08:34:14.797"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.806" endtime="20201110 08:34:14.823"></status>
</kw>
<msg timestamp="20201110 08:34:14.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.804" endtime="20201110 08:34:14.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.824" endtime="20201110 08:34:14.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.827" endtime="20201110 08:34:14.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.802" endtime="20201110 08:34:14.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.800" endtime="20201110 08:34:14.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.837" endtime="20201110 08:34:15.122"></status>
</kw>
<msg timestamp="20201110 08:34:15.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021850083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.835" endtime="20201110 08:34:15.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021850083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.126" endtime="20201110 08:34:15.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.135" endtime="20201110 08:34:15.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.833" endtime="20201110 08:34:15.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.831" endtime="20201110 08:34:15.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.141" level="INFO">${RESULT} = [{'time': 0.021900347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.026400000000125e-05, 'source_diff': 5.026400000000125e-05}, {'time': 0.021971347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:15.138" endtime="20201110 08:34:15.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.155" level="INFO">${ACCURACY} = {'source_diff': [5.026400000000125e-05, 5.037499999999834e-05, 5.022199999999907e-05, 4.997199999999882e-05, 4.998600000000186e-05, 5.044400000000018e-05, 5.080600000000046e-05, 4.995799999999925e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:15.142" endtime="20201110 08:34:15.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.159" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.158" endtime="20201110 08:34:15.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.162" level="INFO">VALUE: [5.026400000000125e-05, 5.037499999999834e-05, 5.022199999999907e-05, 4.997199999999882e-05, 4.998600000000186e-05, 5.044400000000018e-05, 5.080600000000046e-05, 4.995799999999925e-05, 4.994499999999916e-05, 5.009800000000189e-05, 5.038899999999791e-05, 5.005500000000024e-05, 5.058399999999935e-05, 5.0387999999998434e-05, 5.072199999999957e-05, 5.024999999999821e-05, 5.05140000000015e-05, 5.080500000000099e-05, 4.995799999999925e-05, 5.044400000000018e-05, 5.047199999999932e-05, 5.045799999999975e-05, 4.9986999999997866e-05, 5.079200000000089e-05, 5.079200000000089e-05, 5.062500000000206e-05, 5.020899999999898e-05, 5.015200000000122e-05, 5.002800000000057e-05, 5.033299999999963e-05, 4.994399999999968e-05, 5.029099999999745e-05, 5.077699999999838e-05, 5.079100000000142e-05, 5.086099999999927e-05, 5.062499999999859e-05, 5.005599999999971e-05, 5.027800000000082e-05, 5.030599999999996e-05, 5.013900000000113e-05, 5.088900000000188e-05, 5.0209000000002446e-05, 5.008399999999885e-05, 5.036099999999877e-05, 5.087499999999884e-05, 5.0195000000002876e-05, 5.045799999999975e-05, 4.997200000000229e-05, 5.062500000000206e-05, 5.0014000000001e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.160" endtime="20201110 08:34:15.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.156" endtime="20201110 08:34:15.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.165" endtime="20201110 08:34:15.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.168" endtime="20201110 08:34:15.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.167" endtime="20201110 08:34:15.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.163" endtime="20201110 08:34:15.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.798" endtime="20201110 08:34:15.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.798" endtime="20201110 08:34:15.189"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.198" endtime="20201110 08:34:15.215"></status>
</kw>
<msg timestamp="20201110 08:34:15.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.196" endtime="20201110 08:34:15.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.216" endtime="20201110 08:34:15.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.219" endtime="20201110 08:34:15.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.194" endtime="20201110 08:34:15.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.192" endtime="20201110 08:34:15.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.229" endtime="20201110 08:34:15.515"></status>
</kw>
<msg timestamp="20201110 08:34:15.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:15.227" endtime="20201110 08:34:15.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:15.519" endtime="20201110 08:34:15.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.527" endtime="20201110 08:34:15.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.225" endtime="20201110 08:34:15.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.223" endtime="20201110 08:34:15.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.534" level="INFO">${RESULT} = [{'time': 0.0220245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1443999999997714e-05, 'source_diff': 5.1443999999997714e-05}, {'time': 0.0220885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:15.530" endtime="20201110 08:34:15.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.547" level="INFO">${ACCURACY} = {'source_diff': [5.1443999999997714e-05, 5.129200000000139e-05, 5.163899999999916e-05, 5.187499999999984e-05, 5.104200000000114e-05, 5.180600000000146e-05, 5.113899999999866e-05, 5.105600000000071e-05...</msg>
<status status="PASS" starttime="20201110 08:34:15.535" endtime="20201110 08:34:15.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.552" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.551" endtime="20201110 08:34:15.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.554" level="INFO">VALUE: [5.1443999999997714e-05, 5.129200000000139e-05, 5.163899999999916e-05, 5.187499999999984e-05, 5.104200000000114e-05, 5.180600000000146e-05, 5.113899999999866e-05, 5.105600000000071e-05, 5.112499999999909e-05, 5.122200000000007e-05, 5.112499999999909e-05, 5.147200000000032e-05, 5.112499999999909e-05, 5.156899999999784e-05, 5.158300000000088e-05, 5.1179999999997894e-05, 5.095800000000025e-05, 5.138899999999891e-05, 5.157000000000078e-05, 5.1708000000001e-05, 5.112500000000256e-05, 5.120899999999998e-05, 5.09729999999993e-05, 5.095899999999973e-05, 5.129200000000139e-05, 5.095800000000025e-05, 5.0929999999997644e-05, 5.113899999999866e-05, 5.187499999999984e-05, 5.106900000000081e-05, 5.130500000000149e-05, 5.13340000000001e-05, 5.172200000000057e-05, 5.145800000000075e-05, 5.132000000000053e-05, 5.132000000000053e-05, 5.147200000000032e-05, 5.161100000000002e-05, 5.14729999999998e-05, 5.129199999999792e-05, 5.099999999999896e-05, 5.183299999999766e-05, 5.1708000000001e-05, 5.119400000000093e-05, 5.11530000000017e-05, 5.122200000000007e-05, 5.179100000000242e-05, 5.129200000000139e-05, 5.112499999999909e-05, 5.105600000000071e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.553" endtime="20201110 08:34:15.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.548" endtime="20201110 08:34:15.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.558" endtime="20201110 08:34:15.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.561" endtime="20201110 08:34:15.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.560" endtime="20201110 08:34:15.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.556" endtime="20201110 08:34:15.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.190" endtime="20201110 08:34:15.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.190" endtime="20201110 08:34:15.582"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.590" endtime="20201110 08:34:15.608"></status>
</kw>
<msg timestamp="20201110 08:34:15.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.589" endtime="20201110 08:34:15.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.610" endtime="20201110 08:34:15.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.612" endtime="20201110 08:34:15.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.586" endtime="20201110 08:34:15.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.584" endtime="20201110 08:34:15.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.622" endtime="20201110 08:34:15.907"></status>
</kw>
<msg timestamp="20201110 08:34:15.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021994736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.620" endtime="20201110 08:34:15.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021994736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.911" endtime="20201110 08:34:15.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.919" endtime="20201110 08:34:15.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.618" endtime="20201110 08:34:15.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.616" endtime="20201110 08:34:15.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.926" level="INFO">${RESULT} = [{'time': 0.022047347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.261099999999755e-05, 'source_diff': 5.261099999999755e-05}, {'time': 0.022114375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:15.922" endtime="20201110 08:34:15.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.940" level="INFO">${ACCURACY} = {'source_diff': [5.261099999999755e-05, 5.26669999999993e-05, 5.2193999999998464e-05, 5.197200000000082e-05, 5.213900000000313e-05, 5.2457999999998284e-05, 5.22080000000015e-05, 5.1957999999997784e-05...</msg>
<status status="PASS" starttime="20201110 08:34:15.927" endtime="20201110 08:34:15.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.945" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.944" endtime="20201110 08:34:15.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.947" level="INFO">VALUE: [5.261099999999755e-05, 5.26669999999993e-05, 5.2193999999998464e-05, 5.197200000000082e-05, 5.213900000000313e-05, 5.2457999999998284e-05, 5.22080000000015e-05, 5.1957999999997784e-05, 5.213899999999966e-05, 5.220899999999751e-05, 5.197299999999683e-05, 5.248600000000089e-05, 5.213899999999966e-05, 5.277799999999985e-05, 5.212500000000009e-05, 5.204100000000267e-05, 5.1971999999997354e-05, 5.283299999999866e-05, 5.279199999999942e-05, 5.279199999999942e-05, 5.247200000000132e-05, 5.225000000000021e-05, 5.2708000000002e-05, 5.2707999999998534e-05, 5.2680000000002863e-05, 5.220900000000098e-05, 5.212500000000009e-05, 5.205600000000171e-05, 5.1971999999997354e-05, 5.197200000000082e-05, 5.280499999999952e-05, 5.281899999999909e-05, 5.1957999999997784e-05, 5.195800000000125e-05, 5.263900000000016e-05, 5.204199999999867e-05, 5.263900000000016e-05, 5.20279999999991e-05, 5.230600000000196e-05, 5.197200000000082e-05, 5.230599999999849e-05, 5.280599999999899e-05, 5.2165999999999324e-05, 5.205599999999824e-05, 5.245900000000123e-05, 5.283299999999866e-05, 5.229099999999945e-05, 5.248600000000089e-05, 5.212500000000009e-05, 5.25409999999997e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.946" endtime="20201110 08:34:15.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.941" endtime="20201110 08:34:15.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.955" endtime="20201110 08:34:15.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.959" endtime="20201110 08:34:15.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.957" endtime="20201110 08:34:15.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.954" endtime="20201110 08:34:15.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.583" endtime="20201110 08:34:15.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.582" endtime="20201110 08:34:15.979"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.988" endtime="20201110 08:34:16.005"></status>
</kw>
<msg timestamp="20201110 08:34:16.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.986" endtime="20201110 08:34:16.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.007" endtime="20201110 08:34:16.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.009" endtime="20201110 08:34:16.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.984" endtime="20201110 08:34:16.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.982" endtime="20201110 08:34:16.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.019" endtime="20201110 08:34:16.305"></status>
</kw>
<msg timestamp="20201110 08:34:16.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.018" endtime="20201110 08:34:16.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.309" endtime="20201110 08:34:16.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.317" endtime="20201110 08:34:16.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.015" endtime="20201110 08:34:16.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.014" endtime="20201110 08:34:16.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.326" level="INFO">${RESULT} = [{'time': 0.021985569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305499999999977e-05, 'source_diff': 5.305499999999977e-05}, {'time': 0.022052569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:16.322" endtime="20201110 08:34:16.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.339" level="INFO">${ACCURACY} = {'source_diff': [5.305499999999977e-05, 5.361100000000202e-05, 5.38609999999988e-05, 5.306899999999934e-05, 5.2971999999998354e-05, 5.380599999999999e-05, 5.329199999999992e-05, 5.380599999999999e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:16.327" endtime="20201110 08:34:16.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.344" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.343" endtime="20201110 08:34:16.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.347" level="INFO">VALUE: [5.305499999999977e-05, 5.361100000000202e-05, 5.38609999999988e-05, 5.306899999999934e-05, 5.2971999999998354e-05, 5.380599999999999e-05, 5.329199999999992e-05, 5.380599999999999e-05, 5.329199999999992e-05, 5.295800000000225e-05, 5.3693999999999964e-05, 5.370899999999901e-05, 5.380599999999999e-05, 5.330599999999949e-05, 5.379200000000042e-05, 5.381900000000009e-05, 5.3471999999998854e-05, 5.365300000000073e-05, 5.352700000000113e-05, 5.329199999999992e-05, 5.3471999999998854e-05, 5.369499999999944e-05, 5.337500000000134e-05, 5.32080000000025e-05, 5.2957999999998784e-05, 5.312499999999762e-05, 5.304199999999967e-05, 5.312499999999762e-05, 5.354200000000017e-05, 5.330599999999949e-05, 5.345899999999876e-05, 5.379100000000095e-05, 5.297200000000182e-05, 5.311099999999805e-05, 5.373600000000214e-05, 5.309700000000195e-05, 5.337499999999787e-05, 5.3707999999999534e-05, 5.380599999999999e-05, 5.313900000000066e-05, 5.387499999999837e-05, 5.372200000000257e-05, 5.29730000000013e-05, 5.380599999999999e-05, 5.3137999999997715e-05, 5.31669999999998e-05, 5.3651999999997785e-05, 5.338900000000091e-05, 5.3221999999998604e-05, 5.312499999999762e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.345" endtime="20201110 08:34:16.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.340" endtime="20201110 08:34:16.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.350" endtime="20201110 08:34:16.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.353" endtime="20201110 08:34:16.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.352" endtime="20201110 08:34:16.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.348" endtime="20201110 08:34:16.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.980" endtime="20201110 08:34:16.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.980" endtime="20201110 08:34:16.374"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.383" endtime="20201110 08:34:16.400"></status>
</kw>
<msg timestamp="20201110 08:34:16.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.381" endtime="20201110 08:34:16.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.402" endtime="20201110 08:34:16.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.404" endtime="20201110 08:34:16.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.379" endtime="20201110 08:34:16.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.377" endtime="20201110 08:34:16.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.414" endtime="20201110 08:34:16.700"></status>
</kw>
<msg timestamp="20201110 08:34:16.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:16.413" endtime="20201110 08:34:16.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:16.704" endtime="20201110 08:34:16.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.712" endtime="20201110 08:34:16.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.410" endtime="20201110 08:34:16.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.409" endtime="20201110 08:34:16.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.719" level="INFO">${RESULT} = [{'time': 0.022129111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.461099999999955e-05, 'source_diff': 5.461099999999955e-05}, {'time': 0.022198111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:16.715" endtime="20201110 08:34:16.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.732" level="INFO">${ACCURACY} = {'source_diff': [5.461099999999955e-05, 5.411099999999905e-05, 5.404200000000067e-05, 5.4680000000001394e-05, 5.438899999999844e-05, 5.487500000000284e-05, 5.437499999999887e-05, 5.488900000000241e-05...</msg>
<status status="PASS" starttime="20201110 08:34:16.720" endtime="20201110 08:34:16.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.737" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.736" endtime="20201110 08:34:16.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.739" level="INFO">VALUE: [5.461099999999955e-05, 5.411099999999905e-05, 5.404200000000067e-05, 5.4680000000001394e-05, 5.438899999999844e-05, 5.487500000000284e-05, 5.437499999999887e-05, 5.488900000000241e-05, 5.488900000000241e-05, 5.4388000000002434e-05, 5.4722000000000104e-05, 5.411099999999905e-05, 5.4235999999999174e-05, 5.409699999999948e-05, 5.4221999999999604e-05, 5.398600000000239e-05, 5.413900000000166e-05, 5.455599999999727e-05, 5.3957999999999784e-05, 5.4263999999998314e-05, 5.463899999999869e-05, 5.404200000000067e-05, 5.406999999999981e-05, 5.454200000000117e-05, 5.413900000000166e-05, 5.4208000000000034e-05, 5.4208000000000034e-05, 5.430499999999755e-05, 5.4458000000000284e-05, 5.397200000000282e-05, 5.413899999999819e-05, 5.4541999999997703e-05, 5.430600000000049e-05, 5.4791999999997953e-05, 5.3957999999999784e-05, 5.4291999999997453e-05, 5.482000000000056e-05, 5.395899999999926e-05, 5.397299999999883e-05, 5.430600000000049e-05, 5.412499999999862e-05, 5.452700000000213e-05, 5.4415999999998105e-05, 5.3985999999998924e-05, 5.480500000000152e-05, 5.412500000000209e-05, 5.4735999999999674e-05, 5.480600000000099e-05, 5.3971999999999354e-05, 5.4458000000000284e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.738" endtime="20201110 08:34:16.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.733" endtime="20201110 08:34:16.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.743" endtime="20201110 08:34:16.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.746" endtime="20201110 08:34:16.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.745" endtime="20201110 08:34:16.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.741" endtime="20201110 08:34:16.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.375" endtime="20201110 08:34:16.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.375" endtime="20201110 08:34:16.767"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.776" endtime="20201110 08:34:16.793"></status>
</kw>
<msg timestamp="20201110 08:34:16.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.774" endtime="20201110 08:34:16.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.795" endtime="20201110 08:34:16.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.797" endtime="20201110 08:34:16.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.771" endtime="20201110 08:34:16.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.769" endtime="20201110 08:34:16.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.807" endtime="20201110 08:34:17.093"></status>
</kw>
<msg timestamp="20201110 08:34:17.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022263069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.806" endtime="20201110 08:34:17.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022263069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.098" endtime="20201110 08:34:17.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.108" endtime="20201110 08:34:17.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.803" endtime="20201110 08:34:17.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.801" endtime="20201110 08:34:17.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.117" level="INFO">${RESULT} = [{'time': 0.022263069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4985999999999924e-05, 'source_diff': 5.4985999999999924e-05}, {'time': 0.022335056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:17.113" endtime="20201110 08:34:17.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.133" level="INFO">${ACCURACY} = {'source_diff': [5.4985999999999924e-05, 5.490299999999851e-05, 5.5236000000000174e-05, 5.5472000000000854e-05, 5.579100000000295e-05, 5.562500000000012e-05, 5.537499999999987e-05, 5.504099999999873e-...</msg>
<status status="PASS" starttime="20201110 08:34:17.119" endtime="20201110 08:34:17.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.138" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.137" endtime="20201110 08:34:17.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.141" level="INFO">VALUE: [5.4985999999999924e-05, 5.490299999999851e-05, 5.5236000000000174e-05, 5.5472000000000854e-05, 5.579100000000295e-05, 5.562500000000012e-05, 5.537499999999987e-05, 5.504099999999873e-05, 5.559699999999751e-05, 5.562500000000012e-05, 5.5443999999998245e-05, 5.5305999999998023e-05, 5.559700000000098e-05, 5.5041999999998203e-05, 5.544499999999772e-05, 5.4985999999999924e-05, 5.497299999999983e-05, 5.547300000000033e-05, 5.5166000000002324e-05, 5.498600000000339e-05, 5.531899999999812e-05, 5.5471999999997385e-05, 5.511100000000005e-05, 5.5722000000001104e-05, 5.51670000000018e-05, 5.538899999999944e-05, 5.540299999999901e-05, 5.505599999999777e-05, 5.5471999999997385e-05, 5.5457999999997815e-05, 5.495900000000026e-05, 5.4985999999999924e-05, 5.533300000000116e-05, 5.5638000000000215e-05, 5.577800000000285e-05, 5.529100000000245e-05, 5.562500000000012e-05, 5.5249999999999744e-05, 5.531899999999812e-05, 5.4958000000000784e-05, 5.5805999999998523e-05, 5.4972000000000354e-05, 5.4972000000000354e-05, 5.513900000000266e-05, 5.523699999999965e-05, 5.5791999999998954e-05, 5.495900000000026e-05, 5.512499999999962e-05, 5.572299999999711e-05, 5.579099999999948e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.139" endtime="20201110 08:34:17.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.134" endtime="20201110 08:34:17.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.144" endtime="20201110 08:34:17.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.148" endtime="20201110 08:34:17.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.146" endtime="20201110 08:34:17.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.143" endtime="20201110 08:34:17.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.768" endtime="20201110 08:34:17.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.767" endtime="20201110 08:34:17.169"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.177" endtime="20201110 08:34:17.195"></status>
</kw>
<msg timestamp="20201110 08:34:17.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.176" endtime="20201110 08:34:17.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.196" endtime="20201110 08:34:17.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.199" endtime="20201110 08:34:17.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.173" endtime="20201110 08:34:17.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.171" endtime="20201110 08:34:17.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.209" endtime="20201110 08:34:17.494"></status>
</kw>
<msg timestamp="20201110 08:34:17.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02235325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:17.207" endtime="20201110 08:34:17.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02235325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:17.498" endtime="20201110 08:34:17.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.507" endtime="20201110 08:34:17.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.205" endtime="20201110 08:34:17.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.203" endtime="20201110 08:34:17.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.513" level="INFO">${RESULT} = [{'time': 0.022409375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.612499999999715e-05, 'source_diff': 5.612499999999715e-05}, {'time': 0.022486375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:17.510" endtime="20201110 08:34:17.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.528" level="INFO">${ACCURACY} = {'source_diff': [5.612499999999715e-05, 5.6764000000000814e-05, 5.6805999999999524e-05, 5.6805999999999524e-05, 5.632000000000206e-05, 5.6819999999999093e-05, 5.662499999999765e-05, 5.6735999999998205...</msg>
<status status="PASS" starttime="20201110 08:34:17.514" endtime="20201110 08:34:17.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.532" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.531" endtime="20201110 08:34:17.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.535" level="INFO">VALUE: [5.612499999999715e-05, 5.6764000000000814e-05, 5.6805999999999524e-05, 5.6805999999999524e-05, 5.632000000000206e-05, 5.6819999999999093e-05, 5.662499999999765e-05, 5.6735999999998205e-05, 5.663899999999722e-05, 5.65549999999998e-05, 5.661100000000155e-05, 5.637500000000087e-05, 5.687500000000137e-05, 5.6027999999999634e-05, 5.630499999999955e-05, 5.5944000000002214e-05, 5.613900000000019e-05, 5.657000000000231e-05, 5.591699999999908e-05, 5.663899999999722e-05, 5.6555999999999274e-05, 5.662500000000112e-05, 5.68749999999979e-05, 5.620900000000151e-05, 5.6416000000000105e-05, 5.65549999999998e-05, 5.6152000000000285e-05, 5.656899999999937e-05, 5.63749999999974e-05, 5.656900000000284e-05, 5.6750000000001244e-05, 5.658299999999894e-05, 5.6569999999998843e-05, 5.6193999999998995e-05, 5.6055999999998773e-05, 5.594499999999822e-05, 5.647300000000133e-05, 5.663899999999722e-05, 5.687500000000137e-05, 5.638900000000044e-05, 5.63749999999974e-05, 5.687500000000137e-05, 5.6221999999998135e-05, 5.629099999999998e-05, 5.612499999999715e-05, 5.68749999999979e-05, 5.6055999999998773e-05, 5.6486000000001424e-05, 5.643099999999915e-05, 5.615299999999976e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.533" endtime="20201110 08:34:17.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.529" endtime="20201110 08:34:17.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.538" endtime="20201110 08:34:17.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.542" endtime="20201110 08:34:17.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.540" endtime="20201110 08:34:17.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.537" endtime="20201110 08:34:17.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.169" endtime="20201110 08:34:17.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.169" endtime="20201110 08:34:17.562"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.571" endtime="20201110 08:34:17.588"></status>
</kw>
<msg timestamp="20201110 08:34:17.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.569" endtime="20201110 08:34:17.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.590" endtime="20201110 08:34:17.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.592" endtime="20201110 08:34:17.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.567" endtime="20201110 08:34:17.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.565" endtime="20201110 08:34:17.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.602" endtime="20201110 08:34:17.887"></status>
</kw>
<msg timestamp="20201110 08:34:17.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.601" endtime="20201110 08:34:17.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.891" endtime="20201110 08:34:17.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.899" endtime="20201110 08:34:17.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.598" endtime="20201110 08:34:17.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.596" endtime="20201110 08:34:17.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.906" level="INFO">${RESULT} = [{'time': 0.021913944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.727700000000141e-05, 'source_diff': 5.727700000000141e-05}, {'time': 0.021989958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:17.903" endtime="20201110 08:34:17.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.919" level="INFO">${ACCURACY} = {'source_diff': [5.727700000000141e-05, 5.75550000000008e-05, 5.780500000000105e-05, 5.731900000000012e-05, 5.7278000000000884e-05, 5.6972000000002354e-05, 5.712500000000162e-05, 5.719499999999947e-05...</msg>
<status status="PASS" starttime="20201110 08:34:17.907" endtime="20201110 08:34:17.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.924" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.923" endtime="20201110 08:34:17.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.927" level="INFO">VALUE: [5.727700000000141e-05, 5.75550000000008e-05, 5.780500000000105e-05, 5.731900000000012e-05, 5.7278000000000884e-05, 5.6972000000002354e-05, 5.712500000000162e-05, 5.719499999999947e-05, 5.713899999999772e-05, 5.7236000000002174e-05, 5.744500000000319e-05, 5.7778000000001384e-05, 5.712499999999815e-05, 5.7055999999999774e-05, 5.7499999999998525e-05, 5.7444000000000245e-05, 5.780500000000105e-05, 5.716700000000033e-05, 5.7721999999999635e-05, 5.7513999999998094e-05, 5.7792000000000954e-05, 5.765300000000126e-05, 5.788900000000194e-05, 5.78749999999989e-05, 5.763899999999822e-05, 5.713900000000119e-05, 5.78610000000028e-05, 5.734699999999926e-05, 5.7708000000000065e-05, 5.6971999999998885e-05, 5.780500000000105e-05, 5.709700000000248e-05, 5.75550000000008e-05, 5.7000000000001494e-05, 5.6972000000002354e-05, 5.691700000000008e-05, 5.7791999999997484e-05, 5.713899999999772e-05, 5.78749999999989e-05, 5.7042000000000204e-05, 5.7528000000001134e-05, 5.7306000000000024e-05, 5.781900000000062e-05, 5.7637999999998746e-05, 5.7887999999998996e-05, 5.755499999999733e-05, 5.6943999999999745e-05, 5.780500000000105e-05, 5.7444000000000245e-05, 5.7792000000000954e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.925" endtime="20201110 08:34:17.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.920" endtime="20201110 08:34:17.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.930" endtime="20201110 08:34:17.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.933" endtime="20201110 08:34:17.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.932" endtime="20201110 08:34:17.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.928" endtime="20201110 08:34:17.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.563" endtime="20201110 08:34:17.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.563" endtime="20201110 08:34:17.954"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.963" endtime="20201110 08:34:17.981"></status>
</kw>
<msg timestamp="20201110 08:34:17.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.961" endtime="20201110 08:34:17.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.982" endtime="20201110 08:34:17.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.985" endtime="20201110 08:34:17.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.959" endtime="20201110 08:34:17.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.957" endtime="20201110 08:34:17.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.995" endtime="20201110 08:34:18.282"></status>
</kw>
<msg timestamp="20201110 08:34:18.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.993" endtime="20201110 08:34:18.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.286" endtime="20201110 08:34:18.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.294" endtime="20201110 08:34:18.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.991" endtime="20201110 08:34:18.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.989" endtime="20201110 08:34:18.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.301" level="INFO">${RESULT} = [{'time': 0.021980097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7930000000001175e-05, 'source_diff': 5.7930000000001175e-05}, {'time': 0.022060125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:18.298" endtime="20201110 08:34:18.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.314" level="INFO">${ACCURACY} = {'source_diff': [5.7930000000001175e-05, 5.8806000000001524e-05, 5.8444000000001245e-05, 5.7999999999999025e-05, 5.8458000000000815e-05, 5.8792000000001954e-05, 5.863899999999922e-05, 5.87090000000005...</msg>
<status status="PASS" starttime="20201110 08:34:18.302" endtime="20201110 08:34:18.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.319" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.318" endtime="20201110 08:34:18.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.321" level="INFO">VALUE: [5.7930000000001175e-05, 5.8806000000001524e-05, 5.8444000000001245e-05, 5.7999999999999025e-05, 5.8458000000000815e-05, 5.8792000000001954e-05, 5.863899999999922e-05, 5.870900000000054e-05, 5.8305999999997554e-05, 5.8292000000001454e-05, 5.808300000000044e-05, 5.8401999999999066e-05, 5.8208000000000565e-05, 5.829099999999851e-05, 5.886100000000033e-05, 5.8444000000001245e-05, 5.8485999999999955e-05, 5.816699999999786e-05, 5.8555999999997804e-05, 5.8458000000000815e-05, 5.8458000000000815e-05, 5.847299999999986e-05, 5.8806000000001524e-05, 5.8165999999998386e-05, 5.8430000000001675e-05, 5.8042000000001204e-05, 5.8429999999998206e-05, 5.863899999999922e-05, 5.804099999999826e-05, 5.7958000000000315e-05, 5.829099999999851e-05, 5.862499999999965e-05, 5.8070000000000344e-05, 5.8457999999997345e-05, 5.8292000000001454e-05, 5.795900000000326e-05, 5.861100000000008e-05, 5.822299999999961e-05, 5.8791999999998484e-05, 5.862499999999965e-05, 5.8222000000000135e-05, 5.7958000000000315e-05, 5.830499999999808e-05, 5.7971999999999885e-05, 5.880499999999858e-05, 5.863899999999922e-05, 5.840299999999854e-05, 5.88749999999999e-05, 5.843100000000115e-05, 5.88749999999999e-05]</msg>
<status status="PASS" starttime="20201110 08:34:18.320" endtime="20201110 08:34:18.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.315" endtime="20201110 08:34:18.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.325" endtime="20201110 08:34:18.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.328" endtime="20201110 08:34:18.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.327" endtime="20201110 08:34:18.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.323" endtime="20201110 08:34:18.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.955" endtime="20201110 08:34:18.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.955" endtime="20201110 08:34:18.349"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.358" endtime="20201110 08:34:18.375"></status>
</kw>
<msg timestamp="20201110 08:34:18.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.356" endtime="20201110 08:34:18.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.376" endtime="20201110 08:34:18.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.379" endtime="20201110 08:34:18.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.353" endtime="20201110 08:34:18.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.351" endtime="20201110 08:34:18.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.389" endtime="20201110 08:34:18.674"></status>
</kw>
<msg timestamp="20201110 08:34:18.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.387" endtime="20201110 08:34:18.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.678" endtime="20201110 08:34:18.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.686" endtime="20201110 08:34:18.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.385" endtime="20201110 08:34:18.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.383" endtime="20201110 08:34:18.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.693" level="INFO">${RESULT} = [{'time': 0.021857903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9777999999999915e-05, 'source_diff': 5.9777999999999915e-05}, {'time': 0.021938903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:18.690" endtime="20201110 08:34:18.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.706" level="INFO">${ACCURACY} = {'source_diff': [5.9777999999999915e-05, 5.9333999999997694e-05, 5.912500000000015e-05, 5.9652000000000316e-05, 5.91810000000019e-05, 5.966699999999936e-05, 5.9555999999998804e-05, 5.915299999999929e-...</msg>
<status status="PASS" starttime="20201110 08:34:18.694" endtime="20201110 08:34:18.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.711" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.710" endtime="20201110 08:34:18.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.713" level="INFO">VALUE: [5.9777999999999915e-05, 5.9333999999997694e-05, 5.912500000000015e-05, 5.9652000000000316e-05, 5.91810000000019e-05, 5.966699999999936e-05, 5.9555999999998804e-05, 5.915299999999929e-05, 5.9722000000001635e-05, 5.965299999999979e-05, 5.9541999999999234e-05, 5.8958000000001315e-05, 5.9457999999998346e-05, 5.9791999999999484e-05, 5.9319999999998124e-05, 5.961099999999761e-05, 5.9542000000002704e-05, 5.9151999999999816e-05, 5.9179999999998956e-05, 5.9638000000000746e-05, 5.938899999999997e-05, 5.93750000000004e-05, 5.9193999999998526e-05, 5.8944000000001745e-05, 5.9486000000000955e-05, 5.9819999999998624e-05, 5.8944000000001745e-05, 5.913899999999972e-05, 5.988900000000047e-05, 5.905499999999883e-05, 5.911099999999711e-05, 5.9528000000003134e-05, 5.9263999999999845e-05, 5.979100000000001e-05, 5.981900000000262e-05, 5.980499999999958e-05, 5.8957999999997845e-05, 5.962500000000065e-05, 5.9707999999998596e-05, 5.915299999999929e-05, 5.986099999999786e-05, 5.9055999999998304e-05, 5.913899999999972e-05, 5.9736000000001205e-05, 5.9166000000002855e-05, 5.988900000000047e-05, 5.9027999999999164e-05, 5.8944000000001745e-05, 5.929099999999951e-05, 5.9458000000001815e-05]</msg>
<status status="PASS" starttime="20201110 08:34:18.712" endtime="20201110 08:34:18.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.707" endtime="20201110 08:34:18.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.717" endtime="20201110 08:34:18.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.720" endtime="20201110 08:34:18.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.719" endtime="20201110 08:34:18.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.715" endtime="20201110 08:34:18.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.350" endtime="20201110 08:34:18.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.349" endtime="20201110 08:34:18.741"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.750" endtime="20201110 08:34:18.767"></status>
</kw>
<msg timestamp="20201110 08:34:18.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.748" endtime="20201110 08:34:18.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.769" endtime="20201110 08:34:18.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.771" endtime="20201110 08:34:18.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.746" endtime="20201110 08:34:18.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.744" endtime="20201110 08:34:18.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.781" endtime="20201110 08:34:19.067"></status>
</kw>
<msg timestamp="20201110 08:34:19.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.780" endtime="20201110 08:34:19.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.071" endtime="20201110 08:34:19.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.079" endtime="20201110 08:34:19.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.777" endtime="20201110 08:34:19.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.776" endtime="20201110 08:34:19.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.086" level="INFO">${RESULT} = [{'time': 0.021988278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0569999999999374e-05, 'source_diff': 6.0569999999999374e-05}, {'time': 0.022070278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:19.082" endtime="20201110 08:34:19.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.100" level="INFO">${ACCURACY} = {'source_diff': [6.0569999999999374e-05, 6.013899999999725e-05, 6.037499999999793e-05, 6.070900000000254e-05, 6.030500000000008e-05, 6.083299999999972e-05, 6.079099999999754e-05, 6.029100000000051e-05...</msg>
<status status="PASS" starttime="20201110 08:34:19.087" endtime="20201110 08:34:19.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.105" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.104" endtime="20201110 08:34:19.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.107" level="INFO">VALUE: [6.0569999999999374e-05, 6.013899999999725e-05, 6.037499999999793e-05, 6.070900000000254e-05, 6.030500000000008e-05, 6.083299999999972e-05, 6.079099999999754e-05, 6.029100000000051e-05, 6.012500000000115e-05, 6.0694000000000026e-05, 5.9929999999999706e-05, 6.0291999999999984e-05, 5.9958000000002315e-05, 6.0806000000000054e-05, 6.0778000000000915e-05, 5.994500000000222e-05, 6.0528000000000665e-05, 6.013900000000072e-05, 6.008299999999897e-05, 6.0792000000000485e-05, 5.9957999999998846e-05, 6.0416000000000636e-05, 6.0457999999999346e-05, 6.061099999999861e-05, 6.005499999999983e-05, 6.0778000000000915e-05, 6.012499999999768e-05, 6.0569999999999374e-05, 6.012500000000115e-05, 6.0750000000001775e-05, 5.997300000000136e-05, 6.062499999999818e-05, 6.087499999999843e-05, 6.005499999999983e-05, 6.0457999999999346e-05, 5.9971999999998415e-05, 5.9957999999998846e-05, 6.013900000000072e-05, 6.0235999999998235e-05, 6.016699999999986e-05, 6.0069999999998874e-05, 6.0471999999998916e-05, 6.062499999999818e-05, 6.0069999999998874e-05, 5.997300000000136e-05, 5.995900000000179e-05, 5.997299999999789e-05, 5.995900000000179e-05, 6.061099999999861e-05, 6.090299999999757e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.106" endtime="20201110 08:34:19.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.101" endtime="20201110 08:34:19.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.111" endtime="20201110 08:34:19.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.114" endtime="20201110 08:34:19.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.113" endtime="20201110 08:34:19.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.109" endtime="20201110 08:34:19.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.742" endtime="20201110 08:34:19.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.741" endtime="20201110 08:34:19.135"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.144" endtime="20201110 08:34:19.162"></status>
</kw>
<msg timestamp="20201110 08:34:19.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.142" endtime="20201110 08:34:19.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.163" endtime="20201110 08:34:19.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.166" endtime="20201110 08:34:19.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.139" endtime="20201110 08:34:19.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.137" endtime="20201110 08:34:19.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.176" endtime="20201110 08:34:19.462"></status>
</kw>
<msg timestamp="20201110 08:34:19.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022504486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.174" endtime="20201110 08:34:19.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022504486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.466" endtime="20201110 08:34:19.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.474" endtime="20201110 08:34:19.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.172" endtime="20201110 08:34:19.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.170" endtime="20201110 08:34:19.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.481" level="INFO">${RESULT} = [{'time': 0.022565431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.094499999999975e-05, 'source_diff': 6.094499999999975e-05}, {'time': 0.022639431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:19.477" endtime="20201110 08:34:19.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.494" level="INFO">${ACCURACY} = {'source_diff': [6.094499999999975e-05, 6.097300000000236e-05, 6.108299999999997e-05, 6.15690000000009e-05, 6.147199999999992e-05, 6.179100000000201e-05, 6.0971999999999416e-05, 6.145800000000035e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:19.482" endtime="20201110 08:34:19.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.499" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.498" endtime="20201110 08:34:19.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.501" level="INFO">VALUE: [6.094499999999975e-05, 6.097300000000236e-05, 6.108299999999997e-05, 6.15690000000009e-05, 6.147199999999992e-05, 6.179100000000201e-05, 6.0971999999999416e-05, 6.145800000000035e-05, 6.133300000000022e-05, 6.113900000000172e-05, 6.162499999999918e-05, 6.163899999999875e-05, 6.157000000000037e-05, 6.129200000000098e-05, 6.1028000000001165e-05, 6.132000000000012e-05, 6.130500000000108e-05, 6.147199999999992e-05, 6.112500000000215e-05, 6.188900000000247e-05, 6.109699999999954e-05, 6.145800000000035e-05, 6.112499999999868e-05, 6.15560000000008e-05, 6.0944000000000276e-05, 6.147199999999992e-05, 6.130600000000055e-05, 6.177800000000191e-05, 6.148700000000243e-05, 6.111099999999911e-05, 6.17499999999993e-05, 6.137499999999893e-05, 6.166700000000136e-05, 6.12080000000001e-05, 6.0930000000000706e-05, 6.163900000000222e-05, 6.158399999999994e-05, 6.130600000000055e-05, 6.111100000000258e-05, 6.13889999999985e-05, 6.194400000000128e-05, 6.170900000000007e-05, 6.181999999999716e-05, 6.095899999999932e-05, 6.112500000000215e-05, 6.13880000000025e-05, 6.136099999999936e-05, 6.145899999999982e-05, 6.1888999999999e-05, 6.190299999999857e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.500" endtime="20201110 08:34:19.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.495" endtime="20201110 08:34:19.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.505" endtime="20201110 08:34:19.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.508" endtime="20201110 08:34:19.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.507" endtime="20201110 08:34:19.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.503" endtime="20201110 08:34:19.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.136" endtime="20201110 08:34:19.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.135" endtime="20201110 08:34:19.529"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.537" endtime="20201110 08:34:19.555"></status>
</kw>
<msg timestamp="20201110 08:34:19.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.536" endtime="20201110 08:34:19.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.557" endtime="20201110 08:34:19.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.559" endtime="20201110 08:34:19.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.533" endtime="20201110 08:34:19.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.531" endtime="20201110 08:34:19.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.569" endtime="20201110 08:34:19.854"></status>
</kw>
<msg timestamp="20201110 08:34:19.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.568" endtime="20201110 08:34:19.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.858" endtime="20201110 08:34:19.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.867" endtime="20201110 08:34:19.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.565" endtime="20201110 08:34:19.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.563" endtime="20201110 08:34:19.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.873" level="INFO">${RESULT} = [{'time': 0.022016417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.244500000000125e-05, 'source_diff': 6.244500000000125e-05}, {'time': 0.022097431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:19.870" endtime="20201110 08:34:19.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.887" level="INFO">${ACCURACY} = {'source_diff': [6.244500000000125e-05, 6.262500000000018e-05, 6.279199999999902e-05, 6.267999999999899e-05, 6.280500000000258e-05, 6.279099999999954e-05, 6.245799999999788e-05, 6.195800000000085e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:19.874" endtime="20201110 08:34:19.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.891" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.890" endtime="20201110 08:34:19.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.894" level="INFO">VALUE: [6.244500000000125e-05, 6.262500000000018e-05, 6.279199999999902e-05, 6.267999999999899e-05, 6.280500000000258e-05, 6.279099999999954e-05, 6.245799999999788e-05, 6.195800000000085e-05, 6.261100000000061e-05, 6.237499999999993e-05, 6.22080000000011e-05, 6.234700000000079e-05, 6.263900000000322e-05, 6.255599999999834e-05, 6.279200000000248e-05, 6.231899999999818e-05, 6.230499999999861e-05, 6.277699999999997e-05, 6.195800000000085e-05, 6.230500000000208e-05, 6.245799999999788e-05, 6.232000000000112e-05, 6.209699999999707e-05, 6.202800000000216e-05, 6.216699999999839e-05, 6.23889999999995e-05, 6.259699999999757e-05, 6.263899999999975e-05, 6.22499999999998e-05, 6.227799999999895e-05, 6.284699999999782e-05, 6.261100000000061e-05, 6.255500000000233e-05, 6.247200000000092e-05, 6.280499999999911e-05, 6.197200000000042e-05, 6.20699999999974e-05, 6.20560000000013e-05, 6.245900000000082e-05, 6.197200000000042e-05, 6.194500000000075e-05, 6.194500000000075e-05, 6.193100000000118e-05, 6.245799999999788e-05, 6.248600000000049e-05, 6.231899999999818e-05, 6.212499999999968e-05, 6.22080000000011e-05, 6.194400000000128e-05, 6.24439999999983e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.892" endtime="20201110 08:34:19.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.888" endtime="20201110 08:34:19.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.897" endtime="20201110 08:34:19.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.901" endtime="20201110 08:34:19.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.899" endtime="20201110 08:34:19.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.896" endtime="20201110 08:34:19.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.530" endtime="20201110 08:34:19.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.529" endtime="20201110 08:34:19.921"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.930" endtime="20201110 08:34:19.949"></status>
</kw>
<msg timestamp="20201110 08:34:19.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.928" endtime="20201110 08:34:19.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.950" endtime="20201110 08:34:19.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.953" endtime="20201110 08:34:19.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.926" endtime="20201110 08:34:19.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.924" endtime="20201110 08:34:19.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.963" endtime="20201110 08:34:20.250"></status>
</kw>
<msg timestamp="20201110 08:34:20.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022060653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022124097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.961" endtime="20201110 08:34:20.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022060653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022124097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.254" endtime="20201110 08:34:20.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.262" endtime="20201110 08:34:20.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.959" endtime="20201110 08:34:20.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.957" endtime="20201110 08:34:20.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.269" level="INFO">${RESULT} = [{'time': 0.022124097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.34439999999993e-05, 'source_diff': 6.34439999999993e-05}, {'time': 0.022207111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:20.265" endtime="20201110 08:34:20.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.282" level="INFO">${ACCURACY} = {'source_diff': [6.34439999999993e-05, 6.380500000000011e-05, 6.326400000000038e-05, 6.379200000000002e-05, 6.380599999999959e-05, 6.330599999999909e-05, 6.345899999999835e-05, 6.35699999999989e-05, 6...</msg>
<status status="PASS" starttime="20201110 08:34:20.270" endtime="20201110 08:34:20.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.287" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.286" endtime="20201110 08:34:20.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.289" level="INFO">VALUE: [6.34439999999993e-05, 6.380500000000011e-05, 6.326400000000038e-05, 6.379200000000002e-05, 6.380599999999959e-05, 6.330599999999909e-05, 6.345899999999835e-05, 6.35699999999989e-05, 6.372300000000164e-05, 6.295900000000132e-05, 6.348600000000149e-05, 6.297200000000142e-05, 6.361100000000161e-05, 6.323600000000124e-05, 6.377799999999698e-05, 6.345799999999888e-05, 6.362500000000118e-05, 6.30279999999997e-05, 6.379200000000002e-05, 6.345900000000182e-05, 6.330600000000255e-05, 6.295900000000132e-05, 6.363899999999728e-05, 6.318099999999896e-05, 6.297199999999795e-05, 6.34439999999993e-05, 6.295800000000185e-05, 6.311100000000111e-05, 6.35560000000028e-05, 6.295800000000185e-05, 6.327799999999995e-05, 6.351400000000063e-05, 6.345799999999888e-05, 6.317999999999949e-05, 6.355599999999934e-05, 6.326400000000038e-05, 6.295799999999838e-05, 6.379200000000002e-05, 6.362499999999771e-05, 6.322200000000167e-05, 6.297200000000142e-05, 6.359700000000204e-05, 6.37219999999987e-05, 6.299999999999709e-05, 6.362500000000118e-05, 6.337499999999746e-05, 6.311100000000111e-05, 6.333299999999875e-05, 6.312499999999721e-05, 6.372299999999817e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.288" endtime="20201110 08:34:20.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.283" endtime="20201110 08:34:20.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.293" endtime="20201110 08:34:20.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.296" endtime="20201110 08:34:20.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.295" endtime="20201110 08:34:20.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.291" endtime="20201110 08:34:20.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.922" endtime="20201110 08:34:20.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.922" endtime="20201110 08:34:20.317"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.325" endtime="20201110 08:34:20.344"></status>
</kw>
<msg timestamp="20201110 08:34:20.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.324" endtime="20201110 08:34:20.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.345" endtime="20201110 08:34:20.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.348" endtime="20201110 08:34:20.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.321" endtime="20201110 08:34:20.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.319" endtime="20201110 08:34:20.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.357" endtime="20201110 08:34:20.643"></status>
</kw>
<msg timestamp="20201110 08:34:20.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.356" endtime="20201110 08:34:20.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.647" endtime="20201110 08:34:20.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.655" endtime="20201110 08:34:20.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.353" endtime="20201110 08:34:20.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.352" endtime="20201110 08:34:20.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.662" level="INFO">${RESULT} = [{'time': 0.022019681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.411199999999811e-05, 'source_diff': 6.411199999999811e-05}, {'time': 0.022101708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:20.658" endtime="20201110 08:34:20.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.676" level="INFO">${ACCURACY} = {'source_diff': [6.411199999999811e-05, 6.430500000000061e-05, 6.397200000000242e-05, 6.461100000000261e-05, 6.456900000000043e-05, 6.434699999999932e-05, 6.474999999999884e-05, 6.397200000000242e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:20.663" endtime="20201110 08:34:20.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.681" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.680" endtime="20201110 08:34:20.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.683" level="INFO">VALUE: [6.411199999999811e-05, 6.430500000000061e-05, 6.397200000000242e-05, 6.461100000000261e-05, 6.456900000000043e-05, 6.434699999999932e-05, 6.474999999999884e-05, 6.397200000000242e-05, 6.401400000000113e-05, 6.479200000000102e-05, 6.412499999999821e-05, 6.405599999999984e-05, 6.397300000000189e-05, 6.412499999999821e-05, 6.40829999999995e-05, 6.448599999999902e-05, 6.412500000000168e-05, 6.45280000000012e-05, 6.473599999999927e-05, 6.395799999999938e-05, 6.447199999999945e-05, 6.480600000000059e-05, 6.412499999999821e-05, 6.47219999999997e-05, 6.469399999999709e-05, 6.404200000000027e-05, 6.398599999999852e-05, 6.397200000000242e-05, 6.411100000000211e-05, 6.405500000000036e-05, 6.430500000000061e-05, 6.427799999999748e-05, 6.447199999999945e-05, 6.474999999999884e-05, 6.443100000000021e-05, 6.413900000000125e-05, 6.488899999999853e-05, 6.43340000000027e-05, 6.40280000000007e-05, 6.398599999999852e-05, 6.462500000000218e-05, 6.455500000000086e-05, 6.433299999999975e-05, 6.47769999999985e-05, 6.448599999999902e-05, 6.476400000000188e-05, 6.406899999999993e-05, 6.436099999999889e-05, 6.455600000000034e-05, 6.447199999999945e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.682" endtime="20201110 08:34:20.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.677" endtime="20201110 08:34:20.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.687" endtime="20201110 08:34:20.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.690" endtime="20201110 08:34:20.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.689" endtime="20201110 08:34:20.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.685" endtime="20201110 08:34:20.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.318" endtime="20201110 08:34:20.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.317" endtime="20201110 08:34:20.711"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.719" endtime="20201110 08:34:20.738"></status>
</kw>
<msg timestamp="20201110 08:34:20.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.718" endtime="20201110 08:34:20.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.739" endtime="20201110 08:34:20.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.742" endtime="20201110 08:34:20.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.715" endtime="20201110 08:34:20.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.713" endtime="20201110 08:34:20.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.751" endtime="20201110 08:34:21.037"></status>
</kw>
<msg timestamp="20201110 08:34:21.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.750" endtime="20201110 08:34:21.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.041" endtime="20201110 08:34:21.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.050" endtime="20201110 08:34:21.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.747" endtime="20201110 08:34:21.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.746" endtime="20201110 08:34:21.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.056" level="INFO">${RESULT} = [{'time': 0.021950111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.562499999999971e-05, 'source_diff': 6.562499999999971e-05}, {'time': 0.022037097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.053" endtime="20201110 08:34:21.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.070" level="INFO">${ACCURACY} = {'source_diff': [6.562499999999971e-05, 6.494399999999734e-05, 6.527800000000195e-05, 6.582000000000116e-05, 6.495800000000038e-05, 6.574999999999984e-05, 6.491700000000114e-05, 6.579200000000202e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:21.057" endtime="20201110 08:34:21.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.074" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.073" endtime="20201110 08:34:21.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.077" level="INFO">VALUE: [6.562499999999971e-05, 6.494399999999734e-05, 6.527800000000195e-05, 6.582000000000116e-05, 6.495800000000038e-05, 6.574999999999984e-05, 6.491700000000114e-05, 6.579200000000202e-05, 6.494500000000028e-05, 6.547200000000045e-05, 6.497199999999995e-05, 6.579099999999907e-05, 6.547200000000045e-05, 6.547200000000045e-05, 6.513899999999878e-05, 6.593100000000171e-05, 6.511199999999912e-05, 6.580600000000159e-05, 6.512499999999921e-05, 6.53890000000025e-05, 6.587499999999996e-05, 6.555600000000134e-05, 6.501399999999866e-05, 6.513799999999931e-05, 6.586100000000039e-05, 6.588899999999953e-05, 6.540300000000207e-05, 6.505500000000136e-05, 6.547200000000045e-05, 6.506899999999746e-05, 6.586100000000039e-05, 6.520800000000063e-05, 6.563899999999928e-05, 6.53890000000025e-05, 6.587499999999996e-05, 6.505500000000136e-05, 6.529200000000152e-05, 6.531899999999771e-05, 6.515299999999835e-05, 6.536099999999989e-05, 6.538899999999903e-05, 6.52220000000002e-05, 6.562499999999971e-05, 6.520800000000063e-05, 6.497199999999995e-05, 6.512499999999921e-05, 6.57090000000006e-05, 6.512499999999921e-05, 6.522299999999967e-05, 6.556899999999796e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.075" endtime="20201110 08:34:21.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.071" endtime="20201110 08:34:21.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.085" endtime="20201110 08:34:21.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.088" endtime="20201110 08:34:21.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.087" endtime="20201110 08:34:21.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.083" endtime="20201110 08:34:21.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.712" endtime="20201110 08:34:21.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.711" endtime="20201110 08:34:21.109"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.118" endtime="20201110 08:34:21.136"></status>
</kw>
<msg timestamp="20201110 08:34:21.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.116" endtime="20201110 08:34:21.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.137" endtime="20201110 08:34:21.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.140" endtime="20201110 08:34:21.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.114" endtime="20201110 08:34:21.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.111" endtime="20201110 08:34:21.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.150" endtime="20201110 08:34:21.435"></status>
</kw>
<msg timestamp="20201110 08:34:21.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022250875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.148" endtime="20201110 08:34:21.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022250875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.439" endtime="20201110 08:34:21.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.447" endtime="20201110 08:34:21.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.146" endtime="20201110 08:34:21.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.144" endtime="20201110 08:34:21.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.454" level="INFO">${RESULT} = [{'time': 0.022250875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.629199999999905e-05, 'source_diff': 6.629199999999905e-05}, {'time': 0.022336875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.451" endtime="20201110 08:34:21.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.467" level="INFO">${ACCURACY} = {'source_diff': [6.629199999999905e-05, 6.622199999999773e-05, 6.647200000000145e-05, 6.630600000000209e-05, 6.647200000000145e-05, 6.598699999999999e-05, 6.612500000000021e-05, 6.600000000000009e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:21.455" endtime="20201110 08:34:21.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.472" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.471" endtime="20201110 08:34:21.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.474" level="INFO">VALUE: [6.629199999999905e-05, 6.622199999999773e-05, 6.647200000000145e-05, 6.630600000000209e-05, 6.647200000000145e-05, 6.598699999999999e-05, 6.612500000000021e-05, 6.600000000000009e-05, 6.629099999999957e-05, 6.683299999999878e-05, 6.629099999999957e-05, 6.663900000000028e-05, 6.619399999999859e-05, 6.680599999999912e-05, 6.680600000000259e-05, 6.661099999999767e-05, 6.604200000000227e-05, 6.613800000000031e-05, 6.652799999999973e-05, 6.633300000000175e-05, 6.597300000000042e-05, 6.60280000000027e-05, 6.595800000000138e-05, 6.597199999999748e-05, 6.662500000000071e-05, 6.623600000000077e-05, 6.663900000000028e-05, 6.615300000000282e-05, 6.630599999999862e-05, 6.611099999999717e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.67090000000016e-05, 6.679199999999955e-05, 6.594500000000128e-05, 6.613899999999978e-05, 6.605500000000236e-05, 6.680499999999964e-05, 6.630499999999914e-05, 6.59440000000018e-05, 6.670800000000213e-05, 6.60419999999988e-05, 6.645799999999841e-05, 6.60280000000027e-05, 6.601399999999966e-05, 6.611100000000064e-05, 6.69160000000002e-05, 6.60280000000027e-05, 6.594399999999834e-05, 6.679100000000007e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.473" endtime="20201110 08:34:21.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.468" endtime="20201110 08:34:21.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.478" endtime="20201110 08:34:21.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.481" endtime="20201110 08:34:21.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.480" endtime="20201110 08:34:21.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.476" endtime="20201110 08:34:21.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.110" endtime="20201110 08:34:21.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.109" endtime="20201110 08:34:21.502"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.511" endtime="20201110 08:34:21.529"></status>
</kw>
<msg timestamp="20201110 08:34:21.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.509" endtime="20201110 08:34:21.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.531" endtime="20201110 08:34:21.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.533" endtime="20201110 08:34:21.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.507" endtime="20201110 08:34:21.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.505" endtime="20201110 08:34:21.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.543" endtime="20201110 08:34:21.829"></status>
</kw>
<msg timestamp="20201110 08:34:21.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.541" endtime="20201110 08:34:21.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.833" endtime="20201110 08:34:21.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.841" endtime="20201110 08:34:21.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.539" endtime="20201110 08:34:21.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.537" endtime="20201110 08:34:21.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.848" level="INFO">${RESULT} = [{'time': 0.022344667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.745899999999888e-05, 'source_diff': 6.745899999999888e-05}, {'time': 0.022426667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.845" endtime="20201110 08:34:21.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.861" level="INFO">${ACCURACY} = {'source_diff': [6.745899999999888e-05, 6.695900000000185e-05, 6.786099999999892e-05, 6.756999999999944e-05, 6.722199999999873e-05, 6.779100000000107e-05, 6.730500000000014e-05, 6.762499999999824e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:21.849" endtime="20201110 08:34:21.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.866" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.865" endtime="20201110 08:34:21.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.868" level="INFO">VALUE: [6.745899999999888e-05, 6.695900000000185e-05, 6.786099999999892e-05, 6.756999999999944e-05, 6.722199999999873e-05, 6.779100000000107e-05, 6.730500000000014e-05, 6.762499999999824e-05, 6.791700000000067e-05, 6.723600000000177e-05, 6.779200000000055e-05, 6.694400000000281e-05, 6.77359999999988e-05, 6.698600000000152e-05, 6.727800000000048e-05, 6.712500000000121e-05, 6.77229999999987e-05, 6.756899999999996e-05, 6.704100000000032e-05, 6.698599999999805e-05, 6.713900000000078e-05, 6.720800000000263e-05, 6.719500000000253e-05, 6.738900000000103e-05, 6.787500000000196e-05, 6.722199999999873e-05, 6.748599999999855e-05, 6.745899999999888e-05, 6.762499999999824e-05, 6.708299999999903e-05, 6.780500000000064e-05, 6.729100000000057e-05, 6.715300000000035e-05, 6.756899999999996e-05, 6.713900000000078e-05, 6.787500000000196e-05, 6.70419999999998e-05, 6.762500000000171e-05, 6.769499999999956e-05, 6.781999999999969e-05, 6.763900000000128e-05, 6.763899999999781e-05, 6.726399999999744e-05, 6.713800000000131e-05, 6.788899999999806e-05, 6.754100000000082e-05, 6.730599999999962e-05, 6.761099999999867e-05, 6.787499999999849e-05, 6.755599999999987e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.867" endtime="20201110 08:34:21.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.862" endtime="20201110 08:34:21.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.872" endtime="20201110 08:34:21.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.875" endtime="20201110 08:34:21.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.874" endtime="20201110 08:34:21.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.870" endtime="20201110 08:34:21.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.503" endtime="20201110 08:34:21.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.502" endtime="20201110 08:34:21.896"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.905" endtime="20201110 08:34:21.923"></status>
</kw>
<msg timestamp="20201110 08:34:21.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.903" endtime="20201110 08:34:21.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.924" endtime="20201110 08:34:21.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.927" endtime="20201110 08:34:21.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.901" endtime="20201110 08:34:21.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.899" endtime="20201110 08:34:21.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.937" endtime="20201110 08:34:22.224"></status>
</kw>
<msg timestamp="20201110 08:34:22.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022042569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.935" endtime="20201110 08:34:22.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022042569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.228" endtime="20201110 08:34:22.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.236" endtime="20201110 08:34:22.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.933" endtime="20201110 08:34:22.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.931" endtime="20201110 08:34:22.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.243" level="INFO">${RESULT} = [{'time': 0.022042569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.879100000000207e-05, 'source_diff': 6.879100000000207e-05}, {'time': 0.022124569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:22.239" endtime="20201110 08:34:22.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.257" level="INFO">${ACCURACY} = {'source_diff': [6.879100000000207e-05, 6.804100000000132e-05, 6.848599999999955e-05, 6.87909999999986e-05, 6.847199999999998e-05, 6.847199999999998e-05, 6.815300000000135e-05, 6.887499999999949e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:22.244" endtime="20201110 08:34:22.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.262" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.261" endtime="20201110 08:34:22.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.264" level="INFO">VALUE: [6.879100000000207e-05, 6.804100000000132e-05, 6.848599999999955e-05, 6.87909999999986e-05, 6.847199999999998e-05, 6.847199999999998e-05, 6.815300000000135e-05, 6.887499999999949e-05, 6.822199999999973e-05, 6.813900000000178e-05, 6.804199999999733e-05, 6.833399999999976e-05, 6.812499999999874e-05, 6.80420000000008e-05, 6.847199999999998e-05, 6.797199999999948e-05, 6.795799999999991e-05, 6.884799999999983e-05, 6.881900000000121e-05, 6.847199999999998e-05, 6.812499999999874e-05, 6.819500000000006e-05, 6.848599999999955e-05, 6.829200000000105e-05, 6.797299999999895e-05, 6.825000000000234e-05, 6.797200000000295e-05, 6.862499999999924e-05, 6.888900000000253e-05, 6.804100000000132e-05, 6.795799999999991e-05, 6.879199999999808e-05, 6.832000000000019e-05, 6.880600000000112e-05, 6.813900000000178e-05, 6.887499999999949e-05, 6.837499999999899e-05, 6.870900000000013e-05, 6.863799999999934e-05, 6.872200000000023e-05, 6.830499999999767e-05, 6.831900000000071e-05, 6.82909999999981e-05, 6.813899999999831e-05, 6.854199999999783e-05, 6.880600000000112e-05, 6.880600000000112e-05, 6.845800000000041e-05, 6.879199999999808e-05, 6.830600000000062e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.263" endtime="20201110 08:34:22.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.258" endtime="20201110 08:34:22.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.268" endtime="20201110 08:34:22.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.271" endtime="20201110 08:34:22.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.270" endtime="20201110 08:34:22.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.266" endtime="20201110 08:34:22.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.897" endtime="20201110 08:34:22.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.896" endtime="20201110 08:34:22.292"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.300" endtime="20201110 08:34:22.318"></status>
</kw>
<msg timestamp="20201110 08:34:22.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.299" endtime="20201110 08:34:22.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.320" endtime="20201110 08:34:22.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.322" endtime="20201110 08:34:22.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.296" endtime="20201110 08:34:22.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.294" endtime="20201110 08:34:22.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.334" endtime="20201110 08:34:22.620"></status>
</kw>
<msg timestamp="20201110 08:34:22.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.331" endtime="20201110 08:34:22.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.624" endtime="20201110 08:34:22.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.632" endtime="20201110 08:34:22.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.328" endtime="20201110 08:34:22.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.327" endtime="20201110 08:34:22.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.639" level="INFO">${RESULT} = [{'time': 0.022050472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.945800000000141e-05, 'source_diff': 6.945800000000141e-05}, {'time': 0.022132472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:22.636" endtime="20201110 08:34:22.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.653" level="INFO">${ACCURACY} = {'source_diff': [6.945800000000141e-05, 6.913899999999931e-05, 6.962500000000024e-05, 6.895799999999744e-05, 6.966700000000242e-05, 6.938899999999956e-05, 6.970799999999819e-05, 6.913900000000278e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:22.640" endtime="20201110 08:34:22.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.657" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.656" endtime="20201110 08:34:22.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.660" level="INFO">VALUE: [6.945800000000141e-05, 6.913899999999931e-05, 6.962500000000024e-05, 6.895799999999744e-05, 6.966700000000242e-05, 6.938899999999956e-05, 6.970799999999819e-05, 6.913900000000278e-05, 6.975000000000037e-05, 6.897199999999701e-05, 6.89030000000021e-05, 6.947200000000098e-05, 6.963899999999981e-05, 6.90970000000006e-05, 6.97909999999996e-05, 6.980499999999917e-05, 6.945800000000141e-05, 6.894400000000134e-05, 6.930599999999815e-05, 6.894500000000081e-05, 6.916600000000245e-05, 6.968100000000199e-05, 6.979199999999908e-05, 6.980499999999917e-05, 6.899999999999962e-05, 6.963899999999981e-05, 6.927799999999901e-05, 6.929199999999858e-05, 6.895800000000091e-05, 6.947200000000098e-05, 6.916699999999845e-05, 6.954199999999883e-05, 6.947199999999751e-05, 6.895899999999691e-05, 6.962500000000024e-05, 6.902799999999876e-05, 6.947199999999751e-05, 6.977700000000003e-05, 6.912499999999974e-05, 6.972200000000123e-05, 6.901399999999919e-05, 6.915300000000235e-05, 6.95420000000023e-05, 6.963899999999981e-05, 6.988900000000006e-05, 6.937499999999999e-05, 6.988900000000006e-05, 6.92230000000002e-05, 6.945899999999741e-05, 6.92909999999991e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.658" endtime="20201110 08:34:22.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.654" endtime="20201110 08:34:22.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.663" endtime="20201110 08:34:22.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.667" endtime="20201110 08:34:22.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.665" endtime="20201110 08:34:22.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.661" endtime="20201110 08:34:22.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.293" endtime="20201110 08:34:22.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.292" endtime="20201110 08:34:22.687"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.696" endtime="20201110 08:34:22.714"></status>
</kw>
<msg timestamp="20201110 08:34:22.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.694" endtime="20201110 08:34:22.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.715" endtime="20201110 08:34:22.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.718" endtime="20201110 08:34:22.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.692" endtime="20201110 08:34:22.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.690" endtime="20201110 08:34:22.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.728" endtime="20201110 08:34:23.014"></status>
</kw>
<msg timestamp="20201110 08:34:23.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.726" endtime="20201110 08:34:23.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.018" endtime="20201110 08:34:23.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.026" endtime="20201110 08:34:23.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.724" endtime="20201110 08:34:23.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.722" endtime="20201110 08:34:23.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.033" level="INFO">${RESULT} = [{'time': 0.021968528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.011100000000117e-05, 'source_diff': 7.011100000000117e-05}, {'time': 0.022052486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.029" endtime="20201110 08:34:23.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.046" level="INFO">${ACCURACY} = {'source_diff': [7.011100000000117e-05, 7.076400000000094e-05, 7.065299999999691e-05, 7.031999999999872e-05, 7.019500000000206e-05, 7.062500000000124e-05, 7.022299999999773e-05, 7.016599999999998e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:23.034" endtime="20201110 08:34:23.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.051" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.050" endtime="20201110 08:34:23.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.053" level="INFO">VALUE: [7.011100000000117e-05, 7.076400000000094e-05, 7.065299999999691e-05, 7.031999999999872e-05, 7.019500000000206e-05, 7.062500000000124e-05, 7.022299999999773e-05, 7.016599999999998e-05, 7.047300000000145e-05, 7.013799999999737e-05, 7.004099999999985e-05, 7.034700000000185e-05, 7.045799999999894e-05, 7.083299999999931e-05, 7.047199999999851e-05, 6.995799999999844e-05, 7.000000000000062e-05, 7.080600000000312e-05, 7.013900000000031e-05, 7.07230000000017e-05, 7.031900000000271e-05, 7.066600000000048e-05, 7.081899999999974e-05, 7.036100000000142e-05, 7.080599999999965e-05, 7.030499999999967e-05, 7.049999999999765e-05, 7.079200000000008e-05, 7.048600000000155e-05, 6.995900000000138e-05, 7.029199999999958e-05, 7.030599999999915e-05, 7.075000000000137e-05, 7.04169999999997e-05, 7.012500000000074e-05, 7.038900000000056e-05, 7.072199999999876e-05, 7.066699999999995e-05, 7.00420000000028e-05, 7.030600000000262e-05, 6.997200000000148e-05, 7.080599999999965e-05, 7.062500000000124e-05, 7.005600000000237e-05, 7.059800000000158e-05, 7.03620000000009e-05, 7.072200000000223e-05, 7.080500000000017e-05, 6.995800000000191e-05, 7.083299999999931e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.052" endtime="20201110 08:34:23.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.047" endtime="20201110 08:34:23.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.057" endtime="20201110 08:34:23.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.060" endtime="20201110 08:34:23.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.059" endtime="20201110 08:34:23.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.055" endtime="20201110 08:34:23.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.688" endtime="20201110 08:34:23.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.688" endtime="20201110 08:34:23.081"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.090" endtime="20201110 08:34:23.107"></status>
</kw>
<msg timestamp="20201110 08:34:23.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.088" endtime="20201110 08:34:23.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.109" endtime="20201110 08:34:23.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.111" endtime="20201110 08:34:23.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.086" endtime="20201110 08:34:23.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.083" endtime="20201110 08:34:23.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.121" endtime="20201110 08:34:23.407"></status>
</kw>
<msg timestamp="20201110 08:34:23.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.120" endtime="20201110 08:34:23.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.411" endtime="20201110 08:34:23.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.419" endtime="20201110 08:34:23.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.117" endtime="20201110 08:34:23.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.116" endtime="20201110 08:34:23.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.426" level="INFO">${RESULT} = [{'time': 0.022104583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.150000000000212e-05, 'source_diff': 7.150000000000212e-05}, {'time': 0.022188542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.423" endtime="20201110 08:34:23.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.439" level="INFO">${ACCURACY} = {'source_diff': [7.150000000000212e-05, 7.163899999999834e-05, 7.182000000000022e-05, 7.190200000000216e-05, 7.137499999999852e-05, 7.104100000000085e-05, 7.148599999999908e-05, 7.147199999999951e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:23.427" endtime="20201110 08:34:23.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.444" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.443" endtime="20201110 08:34:23.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.446" level="INFO">VALUE: [7.150000000000212e-05, 7.163899999999834e-05, 7.182000000000022e-05, 7.190200000000216e-05, 7.137499999999852e-05, 7.104100000000085e-05, 7.148599999999908e-05, 7.147199999999951e-05, 7.144400000000037e-05, 7.182000000000022e-05, 7.097199999999901e-05, 7.109699999999913e-05, 7.172299999999923e-05, 7.180600000000065e-05, 7.115300000000088e-05, 7.145799999999994e-05, 7.187499999999902e-05, 7.104100000000085e-05, 7.147199999999951e-05, 7.163899999999834e-05, 7.140300000000113e-05, 7.104200000000033e-05, 7.115300000000088e-05, 7.170800000000019e-05, 7.177800000000151e-05, 7.097199999999901e-05, 7.115200000000141e-05, 7.140199999999819e-05, 7.104200000000033e-05, 7.137500000000199e-05, 7.180500000000117e-05, 7.130500000000067e-05, 7.127800000000101e-05, 7.129200000000058e-05, 7.147200000000298e-05, 7.147199999999951e-05, 7.163899999999834e-05, 7.187499999999902e-05, 7.120899999999916e-05, 7.162499999999877e-05, 7.14300000000008e-05, 7.138800000000209e-05, 7.172199999999976e-05, 7.163900000000181e-05, 7.17360000000028e-05, 7.180500000000117e-05, 7.144400000000037e-05, 7.112500000000174e-05, 7.15560000000004e-05, 7.180600000000065e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.445" endtime="20201110 08:34:23.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.440" endtime="20201110 08:34:23.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.450" endtime="20201110 08:34:23.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.453" endtime="20201110 08:34:23.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.452" endtime="20201110 08:34:23.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.448" endtime="20201110 08:34:23.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.082" endtime="20201110 08:34:23.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.081" endtime="20201110 08:34:23.474"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.483" endtime="20201110 08:34:23.502"></status>
</kw>
<msg timestamp="20201110 08:34:23.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.481" endtime="20201110 08:34:23.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.503" endtime="20201110 08:34:23.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.506" endtime="20201110 08:34:23.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.479" endtime="20201110 08:34:23.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.477" endtime="20201110 08:34:23.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.516" endtime="20201110 08:34:23.801"></status>
</kw>
<msg timestamp="20201110 08:34:23.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022340111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022412903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.514" endtime="20201110 08:34:23.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022340111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022412903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.805" endtime="20201110 08:34:23.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.813" endtime="20201110 08:34:23.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.511" endtime="20201110 08:34:23.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.510" endtime="20201110 08:34:23.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.820" level="INFO">${RESULT} = [{'time': 0.022412903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.279200000000208e-05, 'source_diff': 7.279200000000208e-05}, {'time': 0.022498903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.817" endtime="20201110 08:34:23.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.834" level="INFO">${ACCURACY} = {'source_diff': [7.279200000000208e-05, 7.230600000000115e-05, 7.209700000000013e-05, 7.245900000000041e-05, 7.26110000000002e-05, 7.288800000000012e-05, 7.273600000000033e-05, 7.195800000000044e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:23.821" endtime="20201110 08:34:23.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.839" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.838" endtime="20201110 08:34:23.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.841" level="INFO">VALUE: [7.279200000000208e-05, 7.230600000000115e-05, 7.209700000000013e-05, 7.245900000000041e-05, 7.26110000000002e-05, 7.288800000000012e-05, 7.273600000000033e-05, 7.195800000000044e-05, 7.263899999999934e-05, 7.288899999999959e-05, 7.220799999999722e-05, 7.19439999999974e-05, 7.263899999999934e-05, 7.234699999999691e-05, 7.269500000000109e-05, 7.212499999999927e-05, 7.20560000000009e-05, 7.281899999999827e-05, 7.229099999999863e-05, 7.279099999999913e-05, 7.213899999999884e-05, 7.205500000000142e-05, 7.21109999999997e-05, 7.223599999999983e-05, 7.213899999999884e-05, 7.222200000000026e-05, 7.222299999999973e-05, 7.212499999999927e-05, 7.25560000000014e-05, 7.263799999999987e-05, 7.251299999999974e-05, 7.212500000000274e-05, 7.288899999999959e-05, 7.204199999999786e-05, 7.262499999999977e-05, 7.288899999999959e-05, 7.208400000000004e-05, 7.230599999999768e-05, 7.229200000000158e-05, 7.205599999999743e-05, 7.212499999999927e-05, 7.288800000000012e-05, 7.240299999999866e-05, 7.237499999999952e-05, 7.25690000000015e-05, 7.195800000000044e-05, 7.245800000000094e-05, 7.247199999999704e-05, 7.213899999999884e-05, 7.269500000000109e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.840" endtime="20201110 08:34:23.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.835" endtime="20201110 08:34:23.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.845" endtime="20201110 08:34:23.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.848" endtime="20201110 08:34:23.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.847" endtime="20201110 08:34:23.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.843" endtime="20201110 08:34:23.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.475" endtime="20201110 08:34:23.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.475" endtime="20201110 08:34:23.869"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.878" endtime="20201110 08:34:23.896"></status>
</kw>
<msg timestamp="20201110 08:34:23.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.876" endtime="20201110 08:34:23.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.897" endtime="20201110 08:34:23.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.900" endtime="20201110 08:34:23.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.874" endtime="20201110 08:34:23.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.871" endtime="20201110 08:34:23.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.909" endtime="20201110 08:34:24.195"></status>
</kw>
<msg timestamp="20201110 08:34:24.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.908" endtime="20201110 08:34:24.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.199" endtime="20201110 08:34:24.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.207" endtime="20201110 08:34:24.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.905" endtime="20201110 08:34:24.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.904" endtime="20201110 08:34:24.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.214" level="INFO">${RESULT} = [{'time': 0.022015194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.38049999999997e-05, 'source_diff': 7.38049999999997e-05}, {'time': 0.022106153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:24.210" endtime="20201110 08:34:24.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.228" level="INFO">${ACCURACY} = {'source_diff': [7.38049999999997e-05, 7.355599999999893e-05, 7.330599999999868e-05, 7.316599999999951e-05, 7.355599999999893e-05, 7.295800000000144e-05, 7.31379999999969e-05, 7.355499999999945e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:34:24.215" endtime="20201110 08:34:24.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.232" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.231" endtime="20201110 08:34:24.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.235" level="INFO">VALUE: [7.38049999999997e-05, 7.355599999999893e-05, 7.330599999999868e-05, 7.316599999999951e-05, 7.355599999999893e-05, 7.295800000000144e-05, 7.31379999999969e-05, 7.355499999999945e-05, 7.312500000000027e-05, 7.301399999999972e-05, 7.381899999999927e-05, 7.368099999999905e-05, 7.387499999999755e-05, 7.32500000000004e-05, 7.312500000000027e-05, 7.340299999999966e-05, 7.370899999999819e-05, 7.38049999999997e-05, 7.366600000000001e-05, 7.355499999999945e-05, 7.359699999999816e-05, 7.355499999999945e-05, 7.29170000000022e-05, 7.301399999999972e-05, 7.379199999999961e-05, 7.36110000000012e-05, 7.366699999999948e-05, 7.362500000000077e-05, 7.35560000000024e-05, 7.363900000000034e-05, 7.390200000000069e-05, 7.370800000000219e-05, 7.312500000000027e-05, 7.390300000000016e-05, 7.372200000000176e-05, 7.297199999999754e-05, 7.379199999999961e-05, 7.313899999999984e-05, 7.37500000000009e-05, 7.295899999999744e-05, 7.329199999999911e-05, 7.300000000000015e-05, 7.298599999999711e-05, 7.344400000000237e-05, 7.363900000000034e-05, 7.372199999999829e-05, 7.313899999999984e-05, 7.354199999999936e-05, 7.35829999999986e-05, 7.322200000000126e-05]</msg>
<status status="PASS" starttime="20201110 08:34:24.233" endtime="20201110 08:34:24.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.229" endtime="20201110 08:34:24.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.238" endtime="20201110 08:34:24.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.242" endtime="20201110 08:34:24.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.240" endtime="20201110 08:34:24.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.237" endtime="20201110 08:34:24.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.870" endtime="20201110 08:34:24.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.869" endtime="20201110 08:34:24.263"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.271" endtime="20201110 08:34:24.289"></status>
</kw>
<msg timestamp="20201110 08:34:24.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.270" endtime="20201110 08:34:24.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.291" endtime="20201110 08:34:24.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.293" endtime="20201110 08:34:24.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.267" endtime="20201110 08:34:24.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.265" endtime="20201110 08:34:24.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.303" endtime="20201110 08:34:24.588"></status>
</kw>
<msg timestamp="20201110 08:34:24.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.302" endtime="20201110 08:34:24.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.592" endtime="20201110 08:34:24.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.601" endtime="20201110 08:34:24.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.299" endtime="20201110 08:34:24.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.298" endtime="20201110 08:34:24.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.607" level="INFO">${RESULT} = [{'time': 0.022119847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429100000000063e-05, 'source_diff': 7.429100000000063e-05}, {'time': 0.022207847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:24.604" endtime="20201110 08:34:24.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.621" level="INFO">${ACCURACY} = {'source_diff': [7.429100000000063e-05, 7.422199999999879e-05, 7.43050000000002e-05, 7.43050000000002e-05, 7.413900000000084e-05, 7.405599999999943e-05, 7.394499999999887e-05, 7.481999999999975e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:34:24.608" endtime="20201110 08:34:24.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.625" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.624" endtime="20201110 08:34:24.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.628" level="INFO">VALUE: [7.429100000000063e-05, 7.422199999999879e-05, 7.43050000000002e-05, 7.43050000000002e-05, 7.413900000000084e-05, 7.405599999999943e-05, 7.394499999999887e-05, 7.481999999999975e-05, 7.395899999999844e-05, 7.412500000000127e-05, 7.409700000000213e-05, 7.397199999999854e-05, 7.480499999999723e-05, 7.481900000000027e-05, 7.44439999999999e-05, 7.43050000000002e-05, 7.437499999999805e-05, 7.427800000000054e-05, 7.395799999999897e-05, 7.429200000000011e-05, 7.480600000000018e-05, 7.429200000000011e-05, 7.398599999999811e-05, 7.461099999999873e-05, 7.470799999999972e-05, 7.395800000000244e-05, 7.433299999999934e-05, 7.46110000000022e-05, 7.488900000000159e-05, 7.405599999999943e-05, 7.412500000000127e-05, 7.472299999999876e-05, 7.431999999999925e-05, 7.413899999999737e-05, 7.470899999999919e-05, 7.429100000000063e-05, 7.451399999999775e-05, 7.397200000000201e-05, 7.48050000000007e-05, 7.429200000000011e-05, 7.413900000000084e-05, 7.422200000000226e-05, 7.469400000000015e-05, 7.470900000000266e-05, 7.463900000000134e-05, 7.454200000000036e-05, 7.46379999999984e-05, 7.420800000000269e-05, 7.429100000000063e-05, 7.463899999999787e-05]</msg>
<status status="PASS" starttime="20201110 08:34:24.626" endtime="20201110 08:34:24.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.622" endtime="20201110 08:34:24.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.631" endtime="20201110 08:34:24.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.635" endtime="20201110 08:34:24.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.633" endtime="20201110 08:34:24.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.630" endtime="20201110 08:34:24.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.264" endtime="20201110 08:34:24.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.263" endtime="20201110 08:34:24.656"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.664" endtime="20201110 08:34:24.682"></status>
</kw>
<msg timestamp="20201110 08:34:24.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.663" endtime="20201110 08:34:24.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.684" endtime="20201110 08:34:24.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.687" endtime="20201110 08:34:24.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.660" endtime="20201110 08:34:24.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.658" endtime="20201110 08:34:24.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.698" endtime="20201110 08:34:24.985"></status>
</kw>
<msg timestamp="20201110 08:34:24.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.697" endtime="20201110 08:34:24.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.989" endtime="20201110 08:34:24.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.997" endtime="20201110 08:34:24.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.694" endtime="20201110 08:34:24.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.692" endtime="20201110 08:34:25.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.004" level="INFO">${RESULT} = [{'time': 0.021993264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.493099999999683e-05, 'source_diff': 7.493099999999683e-05}, {'time': 0.022090278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:25.001" endtime="20201110 08:34:25.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.017" level="INFO">${ACCURACY} = {'source_diff': [7.493099999999683e-05, 7.547200000000004e-05, 7.547299999999951e-05, 7.56249999999993e-05, 7.554100000000188e-05, 7.497199999999954e-05, 7.497199999999954e-05, 7.540199999999872e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:25.005" endtime="20201110 08:34:25.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.022" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.021" endtime="20201110 08:34:25.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.024" level="INFO">VALUE: [7.493099999999683e-05, 7.547200000000004e-05, 7.547299999999951e-05, 7.56249999999993e-05, 7.554100000000188e-05, 7.497199999999954e-05, 7.497199999999954e-05, 7.540199999999872e-05, 7.580499999999823e-05, 7.529200000000111e-05, 7.516700000000098e-05, 7.555600000000093e-05, 7.544500000000037e-05, 7.532000000000025e-05, 7.548699999999908e-05, 7.541700000000123e-05, 7.533300000000034e-05, 7.498599999999911e-05, 7.563900000000234e-05, 7.520800000000022e-05, 7.545800000000047e-05, 7.563899999999887e-05, 7.522199999999979e-05, 7.561099999999973e-05, 7.519500000000012e-05, 7.580600000000118e-05, 7.498700000000205e-05, 7.544500000000037e-05, 7.533300000000034e-05, 7.530499999999773e-05, 7.580499999999823e-05, 7.513900000000184e-05, 7.538899999999862e-05, 7.586099999999998e-05, 7.555600000000093e-05, 7.563899999999887e-05, 7.522199999999979e-05, 7.577799999999857e-05, 7.563899999999887e-05, 7.590199999999922e-05, 7.570900000000019e-05, 7.49440000000004e-05, 7.581900000000127e-05, 7.497199999999954e-05, 7.55830000000006e-05, 7.569400000000115e-05, 7.513900000000184e-05, 7.507e-05, 7.497199999999954e-05, 7.54310000000008e-05]</msg>
<status status="PASS" starttime="20201110 08:34:25.023" endtime="20201110 08:34:25.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.018" endtime="20201110 08:34:25.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.028" endtime="20201110 08:34:25.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.031" endtime="20201110 08:34:25.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.030" endtime="20201110 08:34:25.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.026" endtime="20201110 08:34:25.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.657" endtime="20201110 08:34:25.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.656" endtime="20201110 08:34:25.052"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.061" endtime="20201110 08:34:25.079"></status>
</kw>
<msg timestamp="20201110 08:34:25.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.059" endtime="20201110 08:34:25.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.081" endtime="20201110 08:34:25.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.083" endtime="20201110 08:34:25.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.057" endtime="20201110 08:34:25.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.055" endtime="20201110 08:34:25.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.093" endtime="20201110 08:34:25.379"></status>
</kw>
<msg timestamp="20201110 08:34:25.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.092" endtime="20201110 08:34:25.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.383" endtime="20201110 08:34:25.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.392" endtime="20201110 08:34:25.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.089" endtime="20201110 08:34:25.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.088" endtime="20201110 08:34:25.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.398" level="INFO">${RESULT} = [{'time': 0.022064694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.67770000000001e-05, 'source_diff': 7.67770000000001e-05}, {'time': 0.022161708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:25.395" endtime="20201110 08:34:25.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.413" level="INFO">${ACCURACY} = {'source_diff': [7.67770000000001e-05, 7.604099999999892e-05, 7.663899999999987e-05, 7.686100000000098e-05, 7.654199999999889e-05, 7.647200000000104e-05, 7.663899999999987e-05, 7.620900000000069e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:25.399" endtime="20201110 08:34:25.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.417" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.416" endtime="20201110 08:34:25.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.420" level="INFO">VALUE: [7.67770000000001e-05, 7.604099999999892e-05, 7.663899999999987e-05, 7.686100000000098e-05, 7.654199999999889e-05, 7.647200000000104e-05, 7.663899999999987e-05, 7.620900000000069e-05, 7.616599999999904e-05, 7.688900000000012e-05, 7.604199999999839e-05, 7.662499999999683e-05, 7.687500000000055e-05, 7.602699999999935e-05, 7.663899999999987e-05, 7.601400000000272e-05, 7.686200000000046e-05, 7.629199999999864e-05, 7.656999999999803e-05, 7.669499999999815e-05, 7.60839999999971e-05, 7.604199999999839e-05, 7.66250000000003e-05, 7.688900000000012e-05, 7.622200000000079e-05, 7.680499999999923e-05, 7.59440000000014e-05, 7.59440000000014e-05, 7.665300000000291e-05, 7.605600000000143e-05, 7.632000000000125e-05, 7.677799999999957e-05, 7.665199999999997e-05, 7.688799999999718e-05, 7.609700000000066e-05, 7.62769999999996e-05, 7.629099999999917e-05, 7.597199999999707e-05, 7.680499999999923e-05, 7.661100000000073e-05, 7.63890000000031e-05, 7.605599999999796e-05, 7.613900000000284e-05, 7.606999999999753e-05, 7.645900000000094e-05, 7.68189999999988e-05, 7.681900000000227e-05, 7.66250000000003e-05, 7.6764e-05, 7.59440000000014e-05]</msg>
<status status="PASS" starttime="20201110 08:34:25.418" endtime="20201110 08:34:25.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.414" endtime="20201110 08:34:25.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.423" endtime="20201110 08:34:25.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.427" endtime="20201110 08:34:25.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.425" endtime="20201110 08:34:25.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.422" endtime="20201110 08:34:25.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.053" endtime="20201110 08:34:25.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.053" endtime="20201110 08:34:25.448"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.456" endtime="20201110 08:34:25.475"></status>
</kw>
<msg timestamp="20201110 08:34:25.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.455" endtime="20201110 08:34:25.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.477" endtime="20201110 08:34:25.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.479" endtime="20201110 08:34:25.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.452" endtime="20201110 08:34:25.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.450" endtime="20201110 08:34:25.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.489" endtime="20201110 08:34:25.775"></status>
</kw>
<msg timestamp="20201110 08:34:25.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.488" endtime="20201110 08:34:25.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.779" endtime="20201110 08:34:25.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.787" endtime="20201110 08:34:25.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.485" endtime="20201110 08:34:25.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.483" endtime="20201110 08:34:25.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.794" level="INFO">${RESULT} = [{'time': 0.022281208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694399999999893e-05, 'source_diff': 7.694399999999893e-05}, {'time': 0.022377278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:25.790" endtime="20201110 08:34:25.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.807" level="INFO">${ACCURACY} = {'source_diff': [7.694399999999893e-05, 7.716699999999951e-05, 7.705499999999949e-05, 7.694399999999893e-05, 7.71250000000008e-05, 7.737499999999758e-05, 7.74030000000002e-05, 7.738900000000062e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:34:25.795" endtime="20201110 08:34:25.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.812" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.811" endtime="20201110 08:34:25.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.814" level="INFO">VALUE: [7.694399999999893e-05, 7.716699999999951e-05, 7.705499999999949e-05, 7.694399999999893e-05, 7.71250000000008e-05, 7.737499999999758e-05, 7.74030000000002e-05, 7.738900000000062e-05, 7.704199999999939e-05, 7.76250000000013e-05, 7.772199999999882e-05, 7.772300000000176e-05, 7.706899999999905e-05, 7.76250000000013e-05, 7.706899999999905e-05, 7.730599999999921e-05, 7.734700000000191e-05, 7.780599999999971e-05, 7.711100000000123e-05, 7.720900000000169e-05, 7.779200000000014e-05, 7.697200000000154e-05, 7.729100000000017e-05, 7.719500000000212e-05, 7.772200000000229e-05, 7.77909999999972e-05, 7.783400000000232e-05, 7.7457999999999e-05, 7.695900000000144e-05, 7.730599999999921e-05, 7.729199999999964e-05, 7.763900000000087e-05, 7.776399999999753e-05, 7.76250000000013e-05, 7.787500000000155e-05, 7.777800000000057e-05, 7.713900000000037e-05, 7.770799999999925e-05, 7.779200000000014e-05, 7.747199999999857e-05, 7.733400000000182e-05, 7.713900000000037e-05, 7.758299999999912e-05, 7.745899999999847e-05, 7.780500000000024e-05, 7.784699999999894e-05, 7.702799999999982e-05, 7.73050000000032e-05, 7.761099999999826e-05, 7.734699999999844e-05]</msg>
<status status="PASS" starttime="20201110 08:34:25.813" endtime="20201110 08:34:25.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.808" endtime="20201110 08:34:25.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.818" endtime="20201110 08:34:25.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.821" endtime="20201110 08:34:25.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.820" endtime="20201110 08:34:25.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.816" endtime="20201110 08:34:25.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.449" endtime="20201110 08:34:25.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.448" endtime="20201110 08:34:25.842"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.851" endtime="20201110 08:34:25.870"></status>
</kw>
<msg timestamp="20201110 08:34:25.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.849" endtime="20201110 08:34:25.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.871" endtime="20201110 08:34:25.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.874" endtime="20201110 08:34:25.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.847" endtime="20201110 08:34:25.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.845" endtime="20201110 08:34:25.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.884" endtime="20201110 08:34:26.171"></status>
</kw>
<msg timestamp="20201110 08:34:26.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022087236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.882" endtime="20201110 08:34:26.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022087236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.175" endtime="20201110 08:34:26.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.183" endtime="20201110 08:34:26.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.880" endtime="20201110 08:34:26.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.878" endtime="20201110 08:34:26.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.190" level="INFO">${RESULT} = [{'time': 0.022087236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.844400000000043e-05, 'source_diff': 7.844400000000043e-05}, {'time': 0.02218225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:26.187" endtime="20201110 08:34:26.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.204" level="INFO">${ACCURACY} = {'source_diff': [7.844400000000043e-05, 7.81250000000018e-05, 7.888900000000212e-05, 7.887499999999908e-05, 7.870899999999972e-05, 7.794500000000287e-05, 7.847199999999957e-05, 7.813799999999843e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:26.191" endtime="20201110 08:34:26.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.208" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.207" endtime="20201110 08:34:26.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.210" level="INFO">VALUE: [7.844400000000043e-05, 7.81250000000018e-05, 7.888900000000212e-05, 7.887499999999908e-05, 7.870899999999972e-05, 7.794500000000287e-05, 7.847199999999957e-05, 7.813799999999843e-05, 7.806900000000006e-05, 7.879100000000167e-05, 7.833299999999987e-05, 7.826399999999803e-05, 7.880600000000071e-05, 7.79579999999995e-05, 7.844500000000337e-05, 7.81389999999979e-05, 7.804200000000039e-05, 7.863900000000187e-05, 7.844400000000043e-05, 7.823599999999889e-05, 7.847199999999957e-05, 7.863900000000187e-05, 7.854100000000142e-05, 7.79579999999995e-05, 7.829200000000064e-05, 7.848599999999914e-05, 7.812499999999833e-05, 7.863900000000187e-05, 7.81389999999979e-05, 7.851400000000175e-05, 7.830500000000074e-05, 7.847200000000304e-05, 7.862499999999883e-05, 7.804100000000092e-05, 7.830499999999727e-05, 7.86389999999984e-05, 7.887499999999908e-05, 7.888900000000212e-05, 7.805599999999996e-05, 7.886100000000298e-05, 7.81389999999979e-05, 7.872200000000329e-05, 7.829100000000117e-05, 7.808299999999962e-05, 7.822199999999932e-05, 7.865300000000144e-05, 7.854199999999742e-05, 7.827800000000107e-05, 7.880599999999724e-05, 7.836099999999901e-05]</msg>
<status status="PASS" starttime="20201110 08:34:26.209" endtime="20201110 08:34:26.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.205" endtime="20201110 08:34:26.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.219" endtime="20201110 08:34:26.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.222" endtime="20201110 08:34:26.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.220" endtime="20201110 08:34:26.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.217" endtime="20201110 08:34:26.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.843" endtime="20201110 08:34:26.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.842" endtime="20201110 08:34:26.243"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.253" endtime="20201110 08:34:26.272"></status>
</kw>
<msg timestamp="20201110 08:34:26.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.251" endtime="20201110 08:34:26.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.273" endtime="20201110 08:34:26.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.276" endtime="20201110 08:34:26.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.248" endtime="20201110 08:34:26.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.246" endtime="20201110 08:34:26.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.286" endtime="20201110 08:34:26.572"></status>
</kw>
<msg timestamp="20201110 08:34:26.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023622347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023701486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.284" endtime="20201110 08:34:26.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023622347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023701486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.576" endtime="20201110 08:34:26.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.584" endtime="20201110 08:34:26.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.281" endtime="20201110 08:34:26.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.280" endtime="20201110 08:34:26.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.591" level="INFO">${RESULT} = [{'time': 0.023701486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.913900000000237e-05, 'source_diff': 7.913900000000237e-05}, {'time': 0.023796458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:26.588" endtime="20201110 08:34:26.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.604" level="INFO">${ACCURACY} = {'source_diff': [7.913900000000237e-05, 7.977699999999963e-05, 7.927800000000207e-05, 7.92779999999986e-05, 7.947200000000057e-05, 7.898600000000311e-05, 7.898599999999964e-05, 7.888899999999865e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:26.592" endtime="20201110 08:34:26.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.609" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.608" endtime="20201110 08:34:26.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.611" level="INFO">VALUE: [7.913900000000237e-05, 7.977699999999963e-05, 7.927800000000207e-05, 7.92779999999986e-05, 7.947200000000057e-05, 7.898600000000311e-05, 7.898599999999964e-05, 7.888899999999865e-05, 7.912499999999933e-05, 7.904199999999792e-05, 7.930600000000121e-05, 7.9764000000003e-05, 7.97909999999992e-05, 7.9458000000001e-05, 7.962499999999983e-05, 7.973600000000039e-05, 7.898599999999964e-05, 7.929200000000164e-05, 7.929199999999817e-05, 7.922200000000032e-05, 7.981999999999781e-05, 7.92909999999987e-05, 7.947200000000057e-05, 7.942999999999839e-05, 7.965299999999897e-05, 7.905500000000149e-05, 7.894400000000093e-05, 7.9458000000001e-05, 7.980600000000171e-05, 7.980599999999824e-05, 7.936100000000001e-05, 7.980600000000171e-05, 7.912499999999933e-05, 7.940199999999925e-05, 7.902699999999888e-05, 7.965299999999897e-05, 7.940299999999872e-05, 7.936100000000001e-05, 7.920800000000075e-05, 7.945799999999753e-05, 7.976399999999953e-05, 7.944499999999743e-05, 7.922200000000032e-05, 7.929200000000164e-05, 7.91389999999989e-05, 7.987500000000008e-05, 7.898599999999964e-05, 7.968099999999811e-05, 7.972200000000082e-05, 7.947200000000057e-05]</msg>
<status status="PASS" starttime="20201110 08:34:26.610" endtime="20201110 08:34:26.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.605" endtime="20201110 08:34:26.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.615" endtime="20201110 08:34:26.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.618" endtime="20201110 08:34:26.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.617" endtime="20201110 08:34:26.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.613" endtime="20201110 08:34:26.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.244" endtime="20201110 08:34:26.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.244" endtime="20201110 08:34:26.639"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.648" endtime="20201110 08:34:26.667"></status>
</kw>
<msg timestamp="20201110 08:34:26.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.646" endtime="20201110 08:34:26.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.668" endtime="20201110 08:34:26.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.671" endtime="20201110 08:34:26.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.644" endtime="20201110 08:34:26.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.641" endtime="20201110 08:34:26.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.680" endtime="20201110 08:34:26.966"></status>
</kw>
<msg timestamp="20201110 08:34:26.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022144944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.679" endtime="20201110 08:34:26.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022144944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.970" endtime="20201110 08:34:26.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.979" endtime="20201110 08:34:26.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.676" endtime="20201110 08:34:26.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.675" endtime="20201110 08:34:26.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.985" level="INFO">${RESULT} = [{'time': 0.022144944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.012500000000033e-05, 'source_diff': 8.012500000000033e-05}, {'time': 0.022245944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:26.982" endtime="20201110 08:34:26.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.000" level="INFO">${ACCURACY} = {'source_diff': [8.012500000000033e-05, 8.080499999999977e-05, 8.027700000000013e-05, 8.030499999999927e-05, 8.047200000000157e-05, 7.997200000000107e-05, 7.997200000000107e-05, 8.06390000000004e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:26.986" endtime="20201110 08:34:27.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.004" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.003" endtime="20201110 08:34:27.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.007" level="INFO">VALUE: [8.012500000000033e-05, 8.080499999999977e-05, 8.027700000000013e-05, 8.030499999999927e-05, 8.047200000000157e-05, 7.997200000000107e-05, 7.997200000000107e-05, 8.06390000000004e-05, 8.05840000000016e-05, 8.013800000000043e-05, 8.084799999999795e-05, 8.005599999999849e-05, 8.025000000000046e-05, 7.994400000000193e-05, 8.083300000000238e-05, 8.031899999999884e-05, 8.032000000000178e-05, 8.030599999999874e-05, 8.047200000000157e-05, 8.030600000000221e-05, 8.000000000000021e-05, 8.030499999999927e-05, 8.083300000000238e-05, 8.045900000000147e-05, 8.030499999999927e-05, 8.04719999999981e-05, 8.08329999999989e-05, 8.02779999999996e-05, 8.01389999999999e-05, 8.072200000000182e-05, 8.012500000000033e-05, 8.005599999999849e-05, 8.045900000000147e-05, 8.062500000000083e-05, 8.073600000000139e-05, 8.047200000000157e-05, 8.030500000000274e-05, 7.995799999999803e-05, 7.998600000000064e-05, 8.0458000000002e-05, 8.01389999999999e-05, 8.022200000000132e-05, 8.04719999999981e-05, 8.051400000000028e-05, 8.06520000000005e-05, 8.082000000000228e-05, 8.06520000000005e-05, 7.995799999999803e-05, 8.07910000000002e-05, 7.988899999999965e-05]</msg>
<status status="PASS" starttime="20201110 08:34:27.005" endtime="20201110 08:34:27.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.001" endtime="20201110 08:34:27.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.010" endtime="20201110 08:34:27.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.014" endtime="20201110 08:34:27.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.012" endtime="20201110 08:34:27.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.009" endtime="20201110 08:34:27.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.640" endtime="20201110 08:34:27.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.639" endtime="20201110 08:34:27.035"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.043" endtime="20201110 08:34:27.062"></status>
</kw>
<msg timestamp="20201110 08:34:27.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.042" endtime="20201110 08:34:27.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.063" endtime="20201110 08:34:27.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.066" endtime="20201110 08:34:27.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.039" endtime="20201110 08:34:27.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.037" endtime="20201110 08:34:27.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.076" endtime="20201110 08:34:27.360"></status>
</kw>
<msg timestamp="20201110 08:34:27.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022427472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.074" endtime="20201110 08:34:27.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022427472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.365" endtime="20201110 08:34:27.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.373" endtime="20201110 08:34:27.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.072" endtime="20201110 08:34:27.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.070" endtime="20201110 08:34:27.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.379" level="INFO">${RESULT} = [{'time': 0.022427472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.12780000000006e-05, 'source_diff': 8.12780000000006e-05}, {'time': 0.022524486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:27.376" endtime="20201110 08:34:27.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.393" level="INFO">${ACCURACY} = {'source_diff': [8.12780000000006e-05, 8.188899999999819e-05, 8.104200000000339e-05, 8.130500000000027e-05, 8.162499999999837e-05, 8.155599999999999e-05, 8.097200000000207e-05, 8.17919999999972e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:34:27.380" endtime="20201110 08:34:27.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.397" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.396" endtime="20201110 08:34:27.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.400" level="INFO">VALUE: [8.12780000000006e-05, 8.188899999999819e-05, 8.104200000000339e-05, 8.130500000000027e-05, 8.162499999999837e-05, 8.155599999999999e-05, 8.097200000000207e-05, 8.17919999999972e-05, 8.11109999999983e-05, 8.122199999999885e-05, 8.127700000000113e-05, 8.095799999999903e-05, 8.13049999999968e-05, 8.12780000000006e-05, 8.181999999999981e-05, 8.098600000000164e-05, 8.14719999999991e-05, 8.162499999999837e-05, 8.184799999999895e-05, 8.191599999999785e-05, 8.122299999999832e-05, 8.1458000000003e-05, 8.1152999999997e-05, 8.122200000000232e-05, 8.097200000000207e-05, 8.18329999999999e-05, 8.161100000000227e-05, 8.104199999999992e-05, 8.111100000000177e-05, 8.137500000000158e-05, 8.173700000000186e-05, 8.097299999999807e-05, 8.115199999999753e-05, 8.170799999999978e-05, 8.105500000000002e-05, 8.16109999999988e-05, 8.09719999999986e-05, 8.170799999999978e-05, 8.187500000000208e-05, 8.137500000000158e-05, 8.176300000000206e-05, 8.098700000000111e-05, 8.168000000000064e-05, 8.12780000000006e-05, 8.12910000000007e-05, 8.10970000000022e-05, 8.122199999999885e-05, 8.095799999999903e-05, 8.094399999999946e-05, 8.147200000000257e-05]</msg>
<status status="PASS" starttime="20201110 08:34:27.398" endtime="20201110 08:34:27.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.394" endtime="20201110 08:34:27.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.403" endtime="20201110 08:34:27.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.407" endtime="20201110 08:34:27.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.405" endtime="20201110 08:34:27.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.402" endtime="20201110 08:34:27.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.036" endtime="20201110 08:34:27.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.035" endtime="20201110 08:34:27.427"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.436" endtime="20201110 08:34:27.456"></status>
</kw>
<msg timestamp="20201110 08:34:27.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.435" endtime="20201110 08:34:27.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.457" endtime="20201110 08:34:27.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.460" endtime="20201110 08:34:27.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.432" endtime="20201110 08:34:27.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.430" endtime="20201110 08:34:27.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.470" endtime="20201110 08:34:27.754"></status>
</kw>
<msg timestamp="20201110 08:34:27.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.468" endtime="20201110 08:34:27.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.758" endtime="20201110 08:34:27.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.767" endtime="20201110 08:34:27.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.466" endtime="20201110 08:34:27.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.464" endtime="20201110 08:34:27.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.773" level="INFO">${RESULT} = [{'time': 0.022512389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.243100000000086e-05, 'source_diff': 8.243100000000086e-05}, {'time': 0.022616403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:27.770" endtime="20201110 08:34:27.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.787" level="INFO">${ACCURACY} = {'source_diff': [8.243100000000086e-05, 8.19589999999995e-05, 8.262499999999937e-05, 8.252699999999891e-05, 8.19719999999996e-05, 8.195800000000003e-05, 8.212499999999887e-05, 8.290300000000222e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:34:27.774" endtime="20201110 08:34:27.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.791" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.790" endtime="20201110 08:34:27.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.794" level="INFO">VALUE: [8.243100000000086e-05, 8.19589999999995e-05, 8.262499999999937e-05, 8.252699999999891e-05, 8.19719999999996e-05, 8.195800000000003e-05, 8.212499999999887e-05, 8.290300000000222e-05, 8.287499999999962e-05, 8.218100000000061e-05, 8.213899999999844e-05, 8.252799999999838e-05, 8.27780000000021e-05, 8.212499999999887e-05, 8.240199999999878e-05, 8.223599999999942e-05, 8.279099999999873e-05, 8.194400000000046e-05, 8.248599999999967e-05, 8.230500000000127e-05, 8.282000000000081e-05, 8.27919999999982e-05, 8.232000000000031e-05, 8.230600000000074e-05, 8.247299999999957e-05, 8.247299999999957e-05, 8.19719999999996e-05, 8.22910000000017e-05, 8.245800000000053e-05, 8.26390000000024e-05, 8.223599999999942e-05, 8.280599999999777e-05, 8.280600000000124e-05, 8.26390000000024e-05, 8.204199999999745e-05, 8.2459e-05, 8.26520000000025e-05, 8.236200000000249e-05, 8.222199999999985e-05, 8.24720000000001e-05, 8.245800000000053e-05, 8.24720000000001e-05, 8.24720000000001e-05, 8.245800000000053e-05, 8.27919999999982e-05, 8.21390000000019e-05, 8.272299999999982e-05, 8.280600000000124e-05, 8.19589999999995e-05, 8.240199999999878e-05]</msg>
<status status="PASS" starttime="20201110 08:34:27.792" endtime="20201110 08:34:27.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.788" endtime="20201110 08:34:27.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.797" endtime="20201110 08:34:27.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.801" endtime="20201110 08:34:27.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.799" endtime="20201110 08:34:27.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.796" endtime="20201110 08:34:27.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.428" endtime="20201110 08:34:27.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.428" endtime="20201110 08:34:27.822"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.830" endtime="20201110 08:34:27.849"></status>
</kw>
<msg timestamp="20201110 08:34:27.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.829" endtime="20201110 08:34:27.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.850" endtime="20201110 08:34:27.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.853" endtime="20201110 08:34:27.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.826" endtime="20201110 08:34:27.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.824" endtime="20201110 08:34:27.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.863" endtime="20201110 08:34:28.148"></status>
</kw>
<msg timestamp="20201110 08:34:28.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.861" endtime="20201110 08:34:28.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.152" endtime="20201110 08:34:28.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.160" endtime="20201110 08:34:28.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.859" endtime="20201110 08:34:28.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.857" endtime="20201110 08:34:28.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.167" level="INFO">${RESULT} = [{'time': 0.022314639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.295800000000103e-05, 'source_diff': 8.295800000000103e-05}, {'time': 0.022412639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:28.164" endtime="20201110 08:34:28.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.180" level="INFO">${ACCURACY} = {'source_diff': [8.295800000000103e-05, 8.337500000000012e-05, 8.29590000000005e-05, 8.362500000000037e-05, 8.390200000000028e-05, 8.343000000000239e-05, 8.317999999999867e-05, 8.377700000000016e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:28.168" endtime="20201110 08:34:28.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.185" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.184" endtime="20201110 08:34:28.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.187" level="INFO">VALUE: [8.295800000000103e-05, 8.337500000000012e-05, 8.29590000000005e-05, 8.362500000000037e-05, 8.390200000000028e-05, 8.343000000000239e-05, 8.317999999999867e-05, 8.377700000000016e-05, 8.295799999999756e-05, 8.313899999999944e-05, 8.338900000000316e-05, 8.355599999999852e-05, 8.355599999999852e-05, 8.370900000000125e-05, 8.330600000000174e-05, 8.34720000000011e-05, 8.380500000000277e-05, 8.347199999999763e-05, 8.345799999999806e-05, 8.348600000000067e-05, 8.312499999999987e-05, 8.351399999999981e-05, 8.331999999999784e-05, 8.313899999999944e-05, 8.305600000000149e-05, 8.330599999999827e-05, 8.348600000000067e-05, 8.363800000000046e-05, 8.305499999999855e-05, 8.379099999999973e-05, 8.380500000000277e-05, 8.345799999999806e-05, 8.363899999999994e-05, 8.391699999999933e-05, 8.372199999999788e-05, 8.332000000000131e-05, 8.362500000000037e-05, 8.372300000000082e-05, 8.304200000000192e-05, 8.38049999999993e-05, 8.351399999999981e-05, 8.3152999999999e-05, 8.383299999999844e-05, 8.352799999999938e-05, 8.37919999999992e-05, 8.332000000000131e-05, 8.313899999999944e-05, 8.336100000000055e-05, 8.355499999999905e-05, 8.38049999999993e-05]</msg>
<status status="PASS" starttime="20201110 08:34:28.186" endtime="20201110 08:34:28.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.181" endtime="20201110 08:34:28.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.191" endtime="20201110 08:34:28.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.194" endtime="20201110 08:34:28.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.193" endtime="20201110 08:34:28.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.189" endtime="20201110 08:34:28.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.822" endtime="20201110 08:34:28.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.822" endtime="20201110 08:34:28.215"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.224" endtime="20201110 08:34:28.243"></status>
</kw>
<msg timestamp="20201110 08:34:28.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.222" endtime="20201110 08:34:28.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.244" endtime="20201110 08:34:28.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.247" endtime="20201110 08:34:28.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.220" endtime="20201110 08:34:28.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.218" endtime="20201110 08:34:28.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.257" endtime="20201110 08:34:28.543"></status>
</kw>
<msg timestamp="20201110 08:34:28.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.255" endtime="20201110 08:34:28.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.547" endtime="20201110 08:34:28.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.555" endtime="20201110 08:34:28.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.253" endtime="20201110 08:34:28.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.251" endtime="20201110 08:34:28.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.562" level="INFO">${RESULT} = [{'time': 0.022072694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.41110000000013e-05, 'source_diff': 8.41110000000013e-05}, {'time': 0.022171708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:28.558" endtime="20201110 08:34:28.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.576" level="INFO">${ACCURACY} = {'source_diff': [8.41110000000013e-05, 8.46249999999979e-05, 8.422199999999838e-05, 8.4153e-05, 8.404199999999945e-05, 8.39859999999977e-05, 8.437500000000112e-05, 8.42919999999997e-05, 8.409799999999...</msg>
<status status="PASS" starttime="20201110 08:34:28.563" endtime="20201110 08:34:28.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.581" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.580" endtime="20201110 08:34:28.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.583" level="INFO">VALUE: [8.41110000000013e-05, 8.46249999999979e-05, 8.422199999999838e-05, 8.4153e-05, 8.404199999999945e-05, 8.39859999999977e-05, 8.437500000000112e-05, 8.42919999999997e-05, 8.409799999999773e-05, 8.438900000000069e-05, 8.472199999999888e-05, 8.413900000000044e-05, 8.420800000000228e-05, 8.427800000000013e-05, 8.459699999999876e-05, 8.41110000000013e-05, 8.397199999999813e-05, 8.436200000000102e-05, 8.39309999999989e-05, 8.395899999999804e-05, 8.46249999999979e-05, 8.488800000000171e-05, 8.405499999999955e-05, 8.416699999999958e-05, 8.437500000000112e-05, 8.452800000000038e-05, 8.42919999999997e-05, 8.462500000000137e-05, 8.459699999999876e-05, 8.456999999999909e-05, 8.487500000000162e-05, 8.422199999999838e-05, 8.445799999999906e-05, 8.41110000000013e-05, 8.456899999999962e-05, 8.41249999999974e-05, 8.488900000000119e-05, 8.455599999999952e-05, 8.411099999999783e-05, 8.487500000000162e-05, 8.455599999999952e-05, 8.413900000000044e-05, 8.46110000000018e-05, 8.463900000000094e-05, 8.420799999999881e-05, 8.480599999999977e-05, 8.413899999999697e-05, 8.425000000000099e-05, 8.463900000000094e-05, 8.438900000000069e-05]</msg>
<status status="PASS" starttime="20201110 08:34:28.582" endtime="20201110 08:34:28.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.577" endtime="20201110 08:34:28.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.587" endtime="20201110 08:34:28.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.590" endtime="20201110 08:34:28.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.588" endtime="20201110 08:34:28.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.585" endtime="20201110 08:34:28.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.216" endtime="20201110 08:34:28.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.215" endtime="20201110 08:34:28.611"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.619" endtime="20201110 08:34:28.638"></status>
</kw>
<msg timestamp="20201110 08:34:28.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.618" endtime="20201110 08:34:28.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.639" endtime="20201110 08:34:28.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.642" endtime="20201110 08:34:28.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.615" endtime="20201110 08:34:28.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.613" endtime="20201110 08:34:28.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.652" endtime="20201110 08:34:28.937"></status>
</kw>
<msg timestamp="20201110 08:34:28.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.650" endtime="20201110 08:34:28.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.941" endtime="20201110 08:34:28.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.950" endtime="20201110 08:34:28.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.648" endtime="20201110 08:34:28.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.646" endtime="20201110 08:34:28.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.957" level="INFO">${RESULT} = [{'time': 0.021994583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.559700000000323e-05, 'source_diff': 8.559700000000323e-05}, {'time': 0.022096597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:28.953" endtime="20201110 08:34:28.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.970" level="INFO">${ACCURACY} = {'source_diff': [8.559700000000323e-05, 8.53050000000008e-05, 8.56530000000015e-05, 8.557000000000009e-05, 8.49309999999999e-05, 8.494499999999947e-05, 8.497300000000207e-05, 8.49729999999986e-05, 8.5...</msg>
<status status="PASS" starttime="20201110 08:34:28.957" endtime="20201110 08:34:28.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.975" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.973" endtime="20201110 08:34:28.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.977" level="INFO">VALUE: [8.559700000000323e-05, 8.53050000000008e-05, 8.56530000000015e-05, 8.557000000000009e-05, 8.49309999999999e-05, 8.494499999999947e-05, 8.497300000000207e-05, 8.49729999999986e-05, 8.586099999999958e-05, 8.545800000000006e-05, 8.580499999999783e-05, 8.495799999999956e-05, 8.533299999999994e-05, 8.550000000000224e-05, 8.513899999999797e-05, 8.555600000000052e-05, 8.497199999999913e-05, 8.5153000000001e-05, 8.554199999999748e-05, 8.533299999999994e-05, 8.513799999999849e-05, 8.569400000000074e-05, 8.511099999999883e-05, 8.522200000000285e-05, 8.49720000000026e-05, 8.513900000000144e-05, 8.555600000000052e-05, 8.497199999999913e-05, 8.574999999999902e-05, 8.49729999999986e-05, 8.501400000000131e-05, 8.529100000000123e-05, 8.529100000000123e-05, 8.53050000000008e-05, 8.575000000000249e-05, 8.563900000000194e-05, 8.569400000000074e-05, 8.54310000000004e-05, 8.544499999999997e-05, 8.586099999999958e-05, 8.545899999999954e-05, 8.580499999999783e-05, 8.54859999999992e-05, 8.577700000000216e-05, 8.579099999999826e-05, 8.495799999999956e-05, 8.497199999999913e-05, 8.530600000000027e-05, 8.49309999999999e-05, 8.561099999999933e-05]</msg>
<status status="PASS" starttime="20201110 08:34:28.976" endtime="20201110 08:34:28.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.971" endtime="20201110 08:34:28.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.980" endtime="20201110 08:34:28.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.984" endtime="20201110 08:34:29.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.982" endtime="20201110 08:34:29.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.979" endtime="20201110 08:34:29.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.612" endtime="20201110 08:34:29.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.611" endtime="20201110 08:34:29.005"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.013" endtime="20201110 08:34:29.033"></status>
</kw>
<msg timestamp="20201110 08:34:29.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.012" endtime="20201110 08:34:29.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.035" endtime="20201110 08:34:29.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.037" endtime="20201110 08:34:29.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.009" endtime="20201110 08:34:29.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.007" endtime="20201110 08:34:29.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.047" endtime="20201110 08:34:29.333"></status>
</kw>
<msg timestamp="20201110 08:34:29.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.045" endtime="20201110 08:34:29.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.337" endtime="20201110 08:34:29.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.345" endtime="20201110 08:34:29.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.043" endtime="20201110 08:34:29.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.041" endtime="20201110 08:34:29.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.352" level="INFO">${RESULT} = [{'time': 0.022077472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.661100000000033e-05, 'source_diff': 8.661100000000033e-05}, {'time': 0.022182486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:29.349" endtime="20201110 08:34:29.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.365" level="INFO">${ACCURACY} = {'source_diff': [8.661100000000033e-05, 8.63050000000018e-05, 8.62920000000017e-05, 8.661100000000033e-05, 8.654199999999848e-05, 8.636100000000008e-05, 8.630600000000127e-05, 8.676299999999665e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:34:29.353" endtime="20201110 08:34:29.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.370" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.369" endtime="20201110 08:34:29.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.372" level="INFO">VALUE: [8.661100000000033e-05, 8.63050000000018e-05, 8.62920000000017e-05, 8.661100000000033e-05, 8.654199999999848e-05, 8.636100000000008e-05, 8.630600000000127e-05, 8.676299999999665e-05, 8.615199999999906e-05, 8.618000000000167e-05, 8.624999999999952e-05, 8.597200000000013e-05, 8.644399999999802e-05, 8.66249999999999e-05, 8.604200000000145e-05, 8.632000000000084e-05, 8.68059999999983e-05, 8.629199999999823e-05, 8.645900000000054e-05, 8.647200000000063e-05, 8.595800000000056e-05, 8.679100000000273e-05, 8.67920000000022e-05, 8.665299999999904e-05, 8.638899999999922e-05, 8.619500000000072e-05, 8.682000000000134e-05, 8.645900000000054e-05, 8.636100000000008e-05, 8.613799999999949e-05, 8.670799999999784e-05, 8.644400000000149e-05, 8.63470000000005e-05, 8.663899999999947e-05, 8.688899999999972e-05, 8.672200000000088e-05, 8.597200000000013e-05, 8.627800000000213e-05, 8.64730000000001e-05, 8.68050000000023e-05, 8.613900000000244e-05, 8.638899999999922e-05, 8.638899999999922e-05, 8.620799999999734e-05, 8.677799999999916e-05, 8.647200000000063e-05, 8.677799999999916e-05, 8.597200000000013e-05, 8.679199999999873e-05, 8.663900000000294e-05]</msg>
<status status="PASS" starttime="20201110 08:34:29.371" endtime="20201110 08:34:29.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.366" endtime="20201110 08:34:29.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.376" endtime="20201110 08:34:29.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.379" endtime="20201110 08:34:29.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.378" endtime="20201110 08:34:29.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.374" endtime="20201110 08:34:29.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.006" endtime="20201110 08:34:29.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.005" endtime="20201110 08:34:29.400"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.409" endtime="20201110 08:34:29.427"></status>
</kw>
<msg timestamp="20201110 08:34:29.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.407" endtime="20201110 08:34:29.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.429" endtime="20201110 08:34:29.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.431" endtime="20201110 08:34:29.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.405" endtime="20201110 08:34:29.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.403" endtime="20201110 08:34:29.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.441" endtime="20201110 08:34:29.726"></status>
</kw>
<msg timestamp="20201110 08:34:29.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.439" endtime="20201110 08:34:29.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.730" endtime="20201110 08:34:29.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.738" endtime="20201110 08:34:29.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.437" endtime="20201110 08:34:29.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.435" endtime="20201110 08:34:29.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.745" level="INFO">${RESULT} = [{'time': 0.022101958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.761100000000133e-05, 'source_diff': 8.761100000000133e-05}, {'time': 0.022203986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:29.742" endtime="20201110 08:34:29.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.758" level="INFO">${ACCURACY} = {'source_diff': [8.761100000000133e-05, 8.730499999999933e-05, 8.780499999999983e-05, 8.727799999999966e-05, 8.765300000000004e-05, 8.705600000000202e-05, 8.773599999999798e-05, 8.779199999999973e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:29.746" endtime="20201110 08:34:29.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.763" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.762" endtime="20201110 08:34:29.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.765" level="INFO">VALUE: [8.761100000000133e-05, 8.730499999999933e-05, 8.780499999999983e-05, 8.727799999999966e-05, 8.765300000000004e-05, 8.705600000000202e-05, 8.773599999999798e-05, 8.779199999999973e-05, 8.747199999999816e-05, 8.737500000000065e-05, 8.713899999999997e-05, 8.773600000000145e-05, 8.73050000000028e-05, 8.694400000000199e-05, 8.697199999999766e-05, 8.730600000000227e-05, 8.765300000000004e-05, 8.744399999999902e-05, 8.720900000000129e-05, 8.763800000000099e-05, 8.704099999999951e-05, 8.730499999999933e-05, 8.715299999999954e-05, 8.738900000000022e-05, 8.722200000000138e-05, 8.695800000000156e-05, 8.72920000000027e-05, 8.741699999999936e-05, 8.69730000000006e-05, 8.777800000000016e-05, 8.763799999999752e-05, 8.755499999999958e-05, 8.765300000000004e-05, 8.738900000000022e-05, 8.723600000000095e-05, 8.759700000000176e-05, 8.755599999999905e-05, 8.697200000000113e-05, 8.690299999999929e-05, 8.695900000000104e-05, 8.76120000000008e-05, 8.704099999999951e-05, 8.745799999999859e-05, 8.747200000000163e-05, 8.697199999999766e-05, 8.730600000000227e-05, 8.697200000000113e-05, 8.777800000000016e-05, 8.711100000000083e-05, 8.770900000000179e-05]</msg>
<status status="PASS" starttime="20201110 08:34:29.764" endtime="20201110 08:34:29.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.759" endtime="20201110 08:34:29.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.769" endtime="20201110 08:34:29.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.772" endtime="20201110 08:34:29.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.771" endtime="20201110 08:34:29.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.767" endtime="20201110 08:34:29.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.401" endtime="20201110 08:34:29.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.401" endtime="20201110 08:34:29.793"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.802" endtime="20201110 08:34:29.821"></status>
</kw>
<msg timestamp="20201110 08:34:29.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.800" endtime="20201110 08:34:29.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.823" endtime="20201110 08:34:29.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.825" endtime="20201110 08:34:29.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.798" endtime="20201110 08:34:29.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.796" endtime="20201110 08:34:29.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.836" endtime="20201110 08:34:30.122"></status>
</kw>
<msg timestamp="20201110 08:34:30.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022126764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.834" endtime="20201110 08:34:30.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022126764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.126" endtime="20201110 08:34:30.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.135" endtime="20201110 08:34:30.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.831" endtime="20201110 08:34:30.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.829" endtime="20201110 08:34:30.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.141" level="INFO">${RESULT} = [{'time': 0.022126764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.827800000000066e-05, 'source_diff': 8.827800000000066e-05}, {'time': 0.022234764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:30.138" endtime="20201110 08:34:30.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.156" level="INFO">${ACCURACY} = {'source_diff': [8.827800000000066e-05, 8.886099999999911e-05, 8.838900000000122e-05, 8.798599999999823e-05, 8.798599999999823e-05, 8.865200000000156e-05, 8.856900000000015e-05, 8.794399999999952e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:30.142" endtime="20201110 08:34:30.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.160" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.159" endtime="20201110 08:34:30.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.163" level="INFO">VALUE: [8.827800000000066e-05, 8.886099999999911e-05, 8.838900000000122e-05, 8.798599999999823e-05, 8.798599999999823e-05, 8.865200000000156e-05, 8.856900000000015e-05, 8.794399999999952e-05, 8.797199999999866e-05, 8.88060000000003e-05, 8.829200000000023e-05, 8.81670000000001e-05, 8.888899999999825e-05, 8.883399999999944e-05, 8.886099999999911e-05, 8.887499999999868e-05, 8.887500000000215e-05, 8.872200000000288e-05, 8.845799999999959e-05, 8.88060000000003e-05, 8.83059999999998e-05, 8.862499999999843e-05, 8.887500000000215e-05, 8.820899999999882e-05, 8.845899999999907e-05, 8.83189999999999e-05, 8.811100000000183e-05, 8.806899999999965e-05, 8.880500000000083e-05, 8.845799999999959e-05, 8.797200000000213e-05, 8.877799999999769e-05, 8.879200000000073e-05, 8.7944999999999e-05, 8.83059999999998e-05, 8.83059999999998e-05, 8.879199999999726e-05, 8.823600000000195e-05, 8.812499999999793e-05, 8.870799999999984e-05, 8.798599999999823e-05, 8.795800000000256e-05, 8.881999999999987e-05, 8.83059999999998e-05, 8.83059999999998e-05, 8.79730000000016e-05, 8.870899999999932e-05, 8.797200000000213e-05, 8.865300000000104e-05, 8.806899999999965e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.161" endtime="20201110 08:34:30.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.157" endtime="20201110 08:34:30.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.166" endtime="20201110 08:34:30.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.170" endtime="20201110 08:34:30.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.168" endtime="20201110 08:34:30.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.165" endtime="20201110 08:34:30.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.794" endtime="20201110 08:34:30.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.794" endtime="20201110 08:34:30.190"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.199" endtime="20201110 08:34:30.219"></status>
</kw>
<msg timestamp="20201110 08:34:30.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.197" endtime="20201110 08:34:30.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.220" endtime="20201110 08:34:30.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.223" endtime="20201110 08:34:30.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.195" endtime="20201110 08:34:30.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.193" endtime="20201110 08:34:30.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.233" endtime="20201110 08:34:30.516"></status>
</kw>
<msg timestamp="20201110 08:34:30.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022408847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.231" endtime="20201110 08:34:30.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022408847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.520" endtime="20201110 08:34:30.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.529" endtime="20201110 08:34:30.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.229" endtime="20201110 08:34:30.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.227" endtime="20201110 08:34:30.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.535" level="INFO">${RESULT} = [{'time': 0.022408847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.94999999999993e-05, 'source_diff': 8.94999999999993e-05}, {'time': 0.022514806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:30.532" endtime="20201110 08:34:30.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.549" level="INFO">${ACCURACY} = {'source_diff': [8.94999999999993e-05, 8.93199999999969e-05, 8.967999999999823e-05, 8.966599999999866e-05, 8.895799999999662e-05, 8.927700000000219e-05, 8.912499999999893e-05, 8.904200000000098e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:34:30.536" endtime="20201110 08:34:30.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.553" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.552" endtime="20201110 08:34:30.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.556" level="INFO">VALUE: [8.94999999999993e-05, 8.93199999999969e-05, 8.967999999999823e-05, 8.966599999999866e-05, 8.895799999999662e-05, 8.927700000000219e-05, 8.912499999999893e-05, 8.904200000000098e-05, 8.947200000000016e-05, 8.93199999999969e-05, 8.913900000000197e-05, 8.990299999999882e-05, 8.954199999999801e-05, 8.897200000000313e-05, 8.894400000000052e-05, 8.929099999999829e-05, 8.9638999999999e-05, 8.988899999999925e-05, 8.988899999999925e-05, 8.911099999999936e-05, 8.898599999999923e-05, 8.897299999999914e-05, 8.933300000000047e-05, 8.945800000000059e-05, 8.969500000000075e-05, 8.955499999999811e-05, 8.898599999999923e-05, 8.912499999999893e-05, 8.940300000000179e-05, 8.905599999999708e-05, 8.947200000000016e-05, 8.958400000000019e-05, 8.920899999999982e-05, 8.951399999999887e-05, 8.906899999999718e-05, 8.956899999999768e-05, 8.956900000000115e-05, 8.938899999999875e-05, 8.987499999999968e-05, 8.987499999999968e-05, 8.965299999999857e-05, 8.897299999999914e-05, 8.966599999999866e-05, 8.937500000000265e-05, 8.972200000000041e-05, 8.952799999999844e-05, 8.965300000000204e-05, 8.926400000000209e-05, 8.945800000000059e-05, 8.894400000000052e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.554" endtime="20201110 08:34:30.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.550" endtime="20201110 08:34:30.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.559" endtime="20201110 08:34:30.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.563" endtime="20201110 08:34:30.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.561" endtime="20201110 08:34:30.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.558" endtime="20201110 08:34:30.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.191" endtime="20201110 08:34:30.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.191" endtime="20201110 08:34:30.583"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.592" endtime="20201110 08:34:30.612"></status>
</kw>
<msg timestamp="20201110 08:34:30.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.590" endtime="20201110 08:34:30.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.613" endtime="20201110 08:34:30.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.616" endtime="20201110 08:34:30.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.588" endtime="20201110 08:34:30.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.586" endtime="20201110 08:34:30.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.626" endtime="20201110 08:34:30.911"></status>
</kw>
<msg timestamp="20201110 08:34:30.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022253625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.624" endtime="20201110 08:34:30.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022253625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.915" endtime="20201110 08:34:30.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.923" endtime="20201110 08:34:30.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.622" endtime="20201110 08:34:30.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.620" endtime="20201110 08:34:30.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.930" level="INFO">${RESULT} = [{'time': 0.022344083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.045800000000159e-05, 'source_diff': 9.045800000000159e-05}, {'time': 0.022454139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:30.927" endtime="20201110 08:34:30.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.943" level="INFO">${ACCURACY} = {'source_diff': [9.045800000000159e-05, 9.036100000000061e-05, 9.061099999999739e-05, 9.088900000000025e-05, 9.01939999999983e-05, 8.990300000000229e-05, 9.0639e-05, 9.009699999999732e-05, 9.0639e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:30.931" endtime="20201110 08:34:30.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.948" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.947" endtime="20201110 08:34:30.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.950" level="INFO">VALUE: [9.045800000000159e-05, 9.036100000000061e-05, 9.061099999999739e-05, 9.088900000000025e-05, 9.01939999999983e-05, 8.990300000000229e-05, 9.0639e-05, 9.009699999999732e-05, 9.0639e-05, 9.052799999999944e-05, 9.080499999999936e-05, 9.080499999999936e-05, 9.081899999999893e-05, 8.997200000000066e-05, 9.044400000000202e-05, 9.045799999999812e-05, 9.03060000000018e-05, 8.998600000000023e-05, 9.082000000000187e-05, 9.048600000000073e-05, 9.054200000000248e-05, 9.080500000000283e-05, 8.995800000000109e-05, 9.012499999999993e-05, 9.073600000000098e-05, 9.062500000000043e-05, 9.022199999999744e-05, 9.047200000000116e-05, 9.026399999999962e-05, 9.009800000000026e-05, 9.040199999999984e-05, 9.025000000000005e-05, 9.047199999999769e-05, 8.997200000000066e-05, 9.045800000000159e-05, 9.041700000000236e-05, 9.043100000000193e-05, 9.080599999999883e-05, 8.990299999999882e-05, 9.08060000000023e-05, 9.06520000000001e-05, 9.052699999999997e-05, 9.0639e-05, 9.036099999999714e-05, 9.036100000000061e-05, 9.073600000000098e-05, 9.08060000000023e-05, 9.027799999999919e-05, 9.019400000000177e-05, 9.022299999999692e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.949" endtime="20201110 08:34:30.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.944" endtime="20201110 08:34:30.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.954" endtime="20201110 08:34:30.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.957" endtime="20201110 08:34:30.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.956" endtime="20201110 08:34:30.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.952" endtime="20201110 08:34:30.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.584" endtime="20201110 08:34:30.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.584" endtime="20201110 08:34:30.978"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.987" endtime="20201110 08:34:31.005"></status>
</kw>
<msg timestamp="20201110 08:34:31.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.985" endtime="20201110 08:34:31.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.007" endtime="20201110 08:34:31.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.009" endtime="20201110 08:34:31.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.982" endtime="20201110 08:34:31.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.980" endtime="20201110 08:34:31.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.019" endtime="20201110 08:34:31.304"></status>
</kw>
<msg timestamp="20201110 08:34:31.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.017" endtime="20201110 08:34:31.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.308" endtime="20201110 08:34:31.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.317" endtime="20201110 08:34:31.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.015" endtime="20201110 08:34:31.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.013" endtime="20201110 08:34:31.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.324" level="INFO">${RESULT} = [{'time': 0.021930431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.183399999999897e-05, 'source_diff': 9.183399999999897e-05}, {'time': 0.022039403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.320" endtime="20201110 08:34:31.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.338" level="INFO">${ACCURACY} = {'source_diff': [9.183399999999897e-05, 9.155599999999958e-05, 9.134700000000204e-05, 9.147299999999817e-05, 9.161200000000133e-05, 9.187500000000168e-05, 9.14719999999987e-05, 9.112500000000093e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:31.325" endtime="20201110 08:34:31.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.342" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.341" endtime="20201110 08:34:31.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.345" level="INFO">VALUE: [9.183399999999897e-05, 9.155599999999958e-05, 9.134700000000204e-05, 9.147299999999817e-05, 9.161200000000133e-05, 9.187500000000168e-05, 9.14719999999987e-05, 9.112500000000093e-05, 9.104100000000004e-05, 9.14719999999987e-05, 9.179199999999679e-05, 9.13060000000028e-05, 9.179200000000026e-05, 9.11390000000005e-05, 9.126400000000062e-05, 9.145900000000207e-05, 9.176300000000165e-05, 9.095799999999862e-05, 9.11390000000005e-05, 9.172200000000241e-05, 9.11390000000005e-05, 9.175000000000155e-05, 9.097199999999819e-05, 9.183300000000297e-05, 9.0945000000002e-05, 9.11390000000005e-05, 9.138800000000127e-05, 9.166600000000066e-05, 9.147200000000216e-05, 9.095800000000209e-05, 9.179200000000026e-05, 9.129199999999976e-05, 9.127800000000019e-05, 9.112499999999746e-05, 9.154200000000001e-05, 9.11520000000006e-05, 9.158299999999925e-05, 9.11390000000005e-05, 9.188900000000125e-05, 9.106899999999918e-05, 9.180599999999983e-05, 9.162500000000143e-05, 9.151400000000087e-05, 9.127800000000019e-05, 9.132000000000237e-05, 9.11390000000005e-05, 9.156899999999968e-05, 9.127800000000019e-05, 9.11390000000005e-05, 9.172200000000241e-05]</msg>
<status status="PASS" starttime="20201110 08:34:31.343" endtime="20201110 08:34:31.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.339" endtime="20201110 08:34:31.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.349" endtime="20201110 08:34:31.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.354" endtime="20201110 08:34:31.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.352" endtime="20201110 08:34:31.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.347" endtime="20201110 08:34:31.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.979" endtime="20201110 08:34:31.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.978" endtime="20201110 08:34:31.375"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.383" endtime="20201110 08:34:31.403"></status>
</kw>
<msg timestamp="20201110 08:34:31.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.381" endtime="20201110 08:34:31.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.404" endtime="20201110 08:34:31.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.407" endtime="20201110 08:34:31.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.379" endtime="20201110 08:34:31.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.377" endtime="20201110 08:34:31.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.417" endtime="20201110 08:34:31.702"></status>
</kw>
<msg timestamp="20201110 08:34:31.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.415" endtime="20201110 08:34:31.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.706" endtime="20201110 08:34:31.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.714" endtime="20201110 08:34:31.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.413" endtime="20201110 08:34:31.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.411" endtime="20201110 08:34:31.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.721" level="INFO">${RESULT} = [{'time': 0.022079861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.277799999999822e-05, 'source_diff': 9.277799999999822e-05}, {'time': 0.022193875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.717" endtime="20201110 08:34:31.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.781" level="INFO">${ACCURACY} = {'source_diff': [9.277799999999822e-05, 9.272199999999994e-05, 9.215300000000107e-05, 9.204199999999704e-05, 9.24589999999996e-05, 9.261099999999939e-05, 9.219499999999978e-05, 9.230500000000086e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:31.722" endtime="20201110 08:34:31.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.785" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.784" endtime="20201110 08:34:31.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.787" level="INFO">VALUE: [9.277799999999822e-05, 9.272199999999994e-05, 9.215300000000107e-05, 9.204199999999704e-05, 9.24589999999996e-05, 9.261099999999939e-05, 9.219499999999978e-05, 9.230500000000086e-05, 9.231900000000043e-05, 9.21390000000015e-05, 9.266699999999767e-05, 9.212499999999846e-05, 9.287499999999921e-05, 9.238899999999828e-05, 9.273600000000298e-05, 9.244500000000003e-05, 9.244500000000003e-05, 9.211099999999889e-05, 9.288899999999878e-05, 9.288900000000225e-05, 9.270800000000037e-05, 9.229199999999729e-05, 9.230600000000033e-05, 9.274999999999908e-05, 9.230600000000033e-05, 9.279200000000126e-05, 9.24589999999996e-05, 9.24719999999997e-05, 9.19719999999992e-05, 9.204200000000051e-05, 9.21390000000015e-05, 9.273599999999951e-05, 9.215300000000107e-05, 9.255600000000058e-05, 9.277799999999822e-05, 9.227799999999772e-05, 9.19589999999991e-05, 9.230499999999739e-05, 9.280499999999789e-05, 9.231900000000043e-05, 9.263899999999853e-05, 9.238899999999828e-05, 9.236099999999914e-05, 9.287499999999921e-05, 9.295800000000062e-05, 9.204200000000051e-05, 9.230500000000086e-05, 9.213799999999855e-05, 9.272199999999994e-05, 9.287499999999921e-05]</msg>
<status status="PASS" starttime="20201110 08:34:31.786" endtime="20201110 08:34:31.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.781" endtime="20201110 08:34:31.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.791" endtime="20201110 08:34:31.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.795" endtime="20201110 08:34:31.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.793" endtime="20201110 08:34:31.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.789" endtime="20201110 08:34:31.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.375" endtime="20201110 08:34:31.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.375" endtime="20201110 08:34:31.816"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.824" endtime="20201110 08:34:31.844"></status>
</kw>
<msg timestamp="20201110 08:34:31.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.823" endtime="20201110 08:34:31.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.845" endtime="20201110 08:34:31.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.847" endtime="20201110 08:34:31.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.820" endtime="20201110 08:34:31.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.818" endtime="20201110 08:34:31.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.856" endtime="20201110 08:34:32.142"></status>
</kw>
<msg timestamp="20201110 08:34:32.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021982361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.855" endtime="20201110 08:34:32.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021982361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.146" endtime="20201110 08:34:32.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.154" endtime="20201110 08:34:32.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.852" endtime="20201110 08:34:32.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.851" endtime="20201110 08:34:32.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.161" level="INFO">${RESULT} = [{'time': 0.021982361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.329199999999829e-05, 'source_diff': 9.329199999999829e-05}, {'time': 0.022096375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:32.158" endtime="20201110 08:34:32.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.175" level="INFO">${ACCURACY} = {'source_diff': [9.329199999999829e-05, 9.322200000000044e-05, 9.329199999999829e-05, 9.312500000000293e-05, 9.387500000000021e-05, 9.344400000000155e-05, 9.337499999999971e-05, 9.306900000000118e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:32.162" endtime="20201110 08:34:32.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.179" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.178" endtime="20201110 08:34:32.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.182" level="INFO">VALUE: [9.329199999999829e-05, 9.322200000000044e-05, 9.329199999999829e-05, 9.312500000000293e-05, 9.387500000000021e-05, 9.344400000000155e-05, 9.337499999999971e-05, 9.306900000000118e-05, 9.379099999999932e-05, 9.295799999999715e-05, 9.370800000000137e-05, 9.326400000000262e-05, 9.298599999999976e-05, 9.380600000000183e-05, 9.29590000000001e-05, 9.362499999999996e-05, 9.37079999999979e-05, 9.380500000000236e-05, 9.380500000000236e-05, 9.379199999999879e-05, 9.316700000000164e-05, 9.355600000000158e-05, 9.359699999999735e-05, 9.338900000000275e-05, 9.322299999999992e-05, 9.329199999999829e-05, 9.362499999999996e-05, 9.322200000000044e-05, 9.306900000000118e-05, 9.390299999999935e-05, 9.39720000000012e-05, 9.369399999999833e-05, 9.333400000000047e-05, 9.384700000000107e-05, 9.340299999999885e-05, 9.313899999999903e-05, 9.305499999999814e-05, 9.312499999999946e-05, 9.36940000000018e-05, 9.381900000000193e-05, 9.313899999999903e-05, 9.372200000000094e-05, 9.380600000000183e-05, 9.381999999999793e-05, 9.342999999999851e-05, 9.315199999999912e-05, 9.341599999999894e-05, 9.348600000000026e-05, 9.345799999999765e-05, 9.295800000000062e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.180" endtime="20201110 08:34:32.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.176" endtime="20201110 08:34:32.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.185" endtime="20201110 08:34:32.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.188" endtime="20201110 08:34:32.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.187" endtime="20201110 08:34:32.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.184" endtime="20201110 08:34:32.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.817" endtime="20201110 08:34:32.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.816" endtime="20201110 08:34:32.209"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.218" endtime="20201110 08:34:32.238"></status>
</kw>
<msg timestamp="20201110 08:34:32.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.216" endtime="20201110 08:34:32.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.239" endtime="20201110 08:34:32.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.242" endtime="20201110 08:34:32.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.214" endtime="20201110 08:34:32.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.212" endtime="20201110 08:34:32.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.253" endtime="20201110 08:34:32.540"></status>
</kw>
<msg timestamp="20201110 08:34:32.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.251" endtime="20201110 08:34:32.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.544" endtime="20201110 08:34:32.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.553" endtime="20201110 08:34:32.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.248" endtime="20201110 08:34:32.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.245" endtime="20201110 08:34:32.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.559" level="INFO">${RESULT} = [{'time': 0.022321944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.392999999999901e-05, 'source_diff': 9.392999999999901e-05}, {'time': 0.022433958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:32.556" endtime="20201110 08:34:32.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.573" level="INFO">${ACCURACY} = {'source_diff': [9.392999999999901e-05, 9.395800000000162e-05, 9.480499999999989e-05, 9.447199999999822e-05, 9.463900000000053e-05, 9.405599999999861e-05, 9.39720000000012e-05, 9.44729999999977e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:34:32.560" endtime="20201110 08:34:32.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.578" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.577" endtime="20201110 08:34:32.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.580" level="INFO">VALUE: [9.392999999999901e-05, 9.395800000000162e-05, 9.480499999999989e-05, 9.447199999999822e-05, 9.463900000000053e-05, 9.405599999999861e-05, 9.39720000000012e-05, 9.44729999999977e-05, 9.440299999999985e-05, 9.39720000000012e-05, 9.480499999999989e-05, 9.462500000000096e-05, 9.473599999999804e-05, 9.41529999999996e-05, 9.477799999999675e-05, 9.39720000000012e-05, 9.398600000000076e-05, 9.481999999999893e-05, 9.398600000000076e-05, 9.481899999999946e-05, 9.430499999999939e-05, 9.420899999999788e-05, 9.456899999999921e-05, 9.448600000000126e-05, 9.46940000000028e-05, 9.461099999999792e-05, 9.39590000000011e-05, 9.434700000000157e-05, 9.431900000000243e-05, 9.444399999999908e-05, 9.46530000000001e-05, 9.422199999999797e-05, 9.419499999999831e-05, 9.422200000000144e-05, 9.395800000000162e-05, 9.430599999999886e-05, 9.480599999999936e-05, 9.44590000000016e-05, 9.39720000000012e-05, 9.463900000000053e-05, 9.454100000000007e-05, 9.429099999999982e-05, 9.463900000000053e-05, 9.437500000000071e-05, 9.438900000000028e-05, 9.495799999999915e-05, 9.434700000000157e-05, 9.491600000000044e-05, 9.420899999999788e-05, 9.433299999999853e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.579" endtime="20201110 08:34:32.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.574" endtime="20201110 08:34:32.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.584" endtime="20201110 08:34:32.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.587" endtime="20201110 08:34:32.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.586" endtime="20201110 08:34:32.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.582" endtime="20201110 08:34:32.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.210" endtime="20201110 08:34:32.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.210" endtime="20201110 08:34:32.608"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.617" endtime="20201110 08:34:32.636"></status>
</kw>
<msg timestamp="20201110 08:34:32.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.615" endtime="20201110 08:34:32.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.637" endtime="20201110 08:34:32.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.640" endtime="20201110 08:34:32.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.612" endtime="20201110 08:34:32.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.610" endtime="20201110 08:34:32.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.649" endtime="20201110 08:34:32.935"></status>
</kw>
<msg timestamp="20201110 08:34:32.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.647" endtime="20201110 08:34:32.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.940" endtime="20201110 08:34:32.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.948" endtime="20201110 08:34:32.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.644" endtime="20201110 08:34:32.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.643" endtime="20201110 08:34:32.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.955" level="INFO">${RESULT} = [{'time': 0.021960014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.545799999999965e-05, 'source_diff': 9.545799999999965e-05}, {'time': 0.022069042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:32.951" endtime="20201110 08:34:32.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.968" level="INFO">${ACCURACY} = {'source_diff': [9.545799999999965e-05, 9.49590000000021e-05, 9.49729999999982e-05, 9.545899999999913e-05, 9.545899999999913e-05, 9.577700000000175e-05, 9.559699999999935e-05, 9.587499999999874e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:34:32.956" endtime="20201110 08:34:32.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.972" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.971" endtime="20201110 08:34:32.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.975" level="INFO">VALUE: [9.545799999999965e-05, 9.49590000000021e-05, 9.49729999999982e-05, 9.545899999999913e-05, 9.545899999999913e-05, 9.577700000000175e-05, 9.559699999999935e-05, 9.587499999999874e-05, 9.538900000000128e-05, 9.588899999999831e-05, 9.588900000000178e-05, 9.538900000000128e-05, 9.576400000000165e-05, 9.55140000000014e-05, 9.565200000000162e-05, 9.57079999999999e-05, 9.580500000000089e-05, 9.580500000000089e-05, 9.562499999999849e-05, 9.504200000000004e-05, 9.545799999999965e-05, 9.49729999999982e-05, 9.563899999999806e-05, 9.516700000000017e-05, 9.563799999999859e-05, 9.554100000000107e-05, 9.581900000000046e-05, 9.54729999999987e-05, 9.49720000000022e-05, 9.547199999999922e-05, 9.562500000000196e-05, 9.536100000000214e-05, 9.587499999999874e-05, 9.504200000000004e-05, 9.581900000000046e-05, 9.495800000000262e-05, 9.580500000000089e-05, 9.495800000000262e-05, 9.497199999999872e-05, 9.51530000000006e-05, 9.522199999999897e-05, 9.562499999999849e-05, 9.555600000000011e-05, 9.565199999999816e-05, 9.57079999999999e-05, 9.547199999999922e-05, 9.491600000000044e-05, 9.54859999999988e-05, 9.49859999999983e-05, 9.513900000000103e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.974" endtime="20201110 08:34:32.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.969" endtime="20201110 08:34:32.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.978" endtime="20201110 08:34:32.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.982" endtime="20201110 08:34:33.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.980" endtime="20201110 08:34:33.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.977" endtime="20201110 08:34:33.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.609" endtime="20201110 08:34:33.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.608" endtime="20201110 08:34:33.003"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.011" endtime="20201110 08:34:33.031"></status>
</kw>
<msg timestamp="20201110 08:34:33.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.010" endtime="20201110 08:34:33.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.033" endtime="20201110 08:34:33.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.035" endtime="20201110 08:34:33.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.007" endtime="20201110 08:34:33.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.005" endtime="20201110 08:34:33.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.044" endtime="20201110 08:34:33.330"></status>
</kw>
<msg timestamp="20201110 08:34:33.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02233475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022431528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:33.043" endtime="20201110 08:34:33.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02233475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022431528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:33.334" endtime="20201110 08:34:33.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.342" endtime="20201110 08:34:33.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.040" endtime="20201110 08:34:33.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.038" endtime="20201110 08:34:33.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:33.349" level="INFO">${RESULT} = [{'time': 0.022431528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.677799999999875e-05, 'source_diff': 9.677799999999875e-05}, {'time': 0.022540556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:33.346" endtime="20201110 08:34:33.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:33.364" level="INFO">${ACCURACY} = {'source_diff': [9.677799999999875e-05, 9.636199999999914e-05, 9.605600000000061e-05, 9.595799999999668e-05, 9.677699999999928e-05, 9.681900000000146e-05, 9.676399999999918e-05, 9.627799999999825e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:33.350" endtime="20201110 08:34:33.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.368" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:34:33.367" endtime="20201110 08:34:33.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.371" level="INFO">VALUE: [9.677799999999875e-05, 9.636199999999914e-05, 9.605600000000061e-05, 9.595799999999668e-05, 9.677699999999928e-05, 9.681900000000146e-05, 9.676399999999918e-05, 9.627799999999825e-05, 9.66799999999983e-05, 9.640300000000185e-05, 9.605600000000061e-05, 9.68059999999979e-05, 9.665200000000262e-05, 9.655500000000164e-05, 9.679100000000232e-05, 9.662499999999949e-05, 9.62080000000004e-05, 9.649999999999936e-05, 9.647200000000022e-05, 9.612500000000246e-05, 9.688899999999931e-05, 9.636099999999967e-05, 9.622199999999997e-05, 9.595800000000015e-05, 9.630499999999792e-05, 9.631900000000096e-05, 9.613900000000203e-05, 9.657000000000068e-05, 9.61669999999977e-05, 9.675000000000308e-05, 9.631900000000096e-05, 9.63470000000001e-05, 9.597199999999972e-05, 9.663899999999906e-05, 9.619399999999736e-05, 9.611099999999942e-05, 9.688899999999931e-05, 9.602800000000147e-05, 9.632000000000043e-05, 9.613899999999856e-05, 9.688899999999931e-05, 9.637500000000271e-05, 9.655499999999817e-05, 9.643000000000151e-05, 9.647200000000022e-05, 9.597199999999972e-05, 9.600000000000233e-05, 9.665299999999863e-05, 9.607000000000018e-05, 9.598700000000224e-05]</msg>
<status status="PASS" starttime="20201110 08:34:33.370" endtime="20201110 08:34:33.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.365" endtime="20201110 08:34:33.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.375" endtime="20201110 08:34:33.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.378" endtime="20201110 08:34:33.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.376" endtime="20201110 08:34:33.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.373" endtime="20201110 08:34:33.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.004" endtime="20201110 08:34:33.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.003" endtime="20201110 08:34:33.399"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.407" endtime="20201110 08:34:33.427"></status>
</kw>
<msg timestamp="20201110 08:34:33.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.406" endtime="20201110 08:34:33.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.428" endtime="20201110 08:34:33.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.431" endtime="20201110 08:34:33.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.403" endtime="20201110 08:34:33.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.401" endtime="20201110 08:34:33.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.440" endtime="20201110 08:34:33.726"></status>
</kw>
<msg timestamp="20201110 08:34:33.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.438" endtime="20201110 08:34:33.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.730" endtime="20201110 08:34:33.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.739" endtime="20201110 08:34:33.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.436" endtime="20201110 08:34:33.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.434" endtime="20201110 08:34:33.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:33.745" level="INFO">${RESULT} = [{'time': 0.022097472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.763900000000006e-05, 'source_diff': 9.763900000000006e-05}, {'time': 0.022210472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:33.742" endtime="20201110 08:34:33.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:33.759" level="INFO">${ACCURACY} = {'source_diff': [9.763900000000006e-05, 9.745799999999818e-05, 9.773600000000104e-05, 9.78340000000015e-05, 9.768099999999877e-05, 9.740300000000285e-05, 9.79020000000004e-05, 9.75279999999995e-05, 9....</msg>
<status status="PASS" starttime="20201110 08:34:33.746" endtime="20201110 08:34:33.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.763" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:34:33.762" endtime="20201110 08:34:33.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.766" level="INFO">VALUE: [9.763900000000006e-05, 9.745799999999818e-05, 9.773600000000104e-05, 9.78340000000015e-05, 9.768099999999877e-05, 9.740300000000285e-05, 9.79020000000004e-05, 9.75279999999995e-05, 9.69860000000003e-05, 9.763800000000059e-05, 9.738899999999981e-05, 9.738899999999981e-05, 9.755499999999917e-05, 9.697200000000072e-05, 9.690300000000235e-05, 9.713899999999956e-05, 9.709699999999738e-05, 9.783299999999856e-05, 9.726300000000021e-05, 9.733299999999806e-05, 9.711100000000042e-05, 9.705499999999867e-05, 9.694400000000158e-05, 9.762500000000049e-05, 9.722200000000097e-05, 9.75409999999996e-05, 9.763900000000006e-05, 9.705599999999814e-05, 9.731900000000196e-05, 9.756900000000221e-05, 9.71669999999987e-05, 9.76530000000031e-05, 9.755599999999864e-05, 9.748599999999732e-05, 9.699999999999986e-05, 9.758400000000125e-05, 9.787500000000074e-05, 9.705499999999867e-05, 9.695800000000115e-05, 9.73470000000011e-05, 9.712499999999999e-05, 9.736100000000067e-05, 9.755599999999864e-05, 9.763900000000006e-05, 9.737500000000024e-05, 9.788900000000031e-05, 9.737500000000024e-05, 9.7721999999998e-05, 9.747199999999775e-05, 9.713899999999956e-05]</msg>
<status status="PASS" starttime="20201110 08:34:33.764" endtime="20201110 08:34:33.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.760" endtime="20201110 08:34:33.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.769" endtime="20201110 08:34:33.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.773" endtime="20201110 08:34:33.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.771" endtime="20201110 08:34:33.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.768" endtime="20201110 08:34:33.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.400" endtime="20201110 08:34:33.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.399" endtime="20201110 08:34:33.793"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.802" endtime="20201110 08:34:33.821"></status>
</kw>
<msg timestamp="20201110 08:34:33.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.800" endtime="20201110 08:34:33.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.823" endtime="20201110 08:34:33.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.825" endtime="20201110 08:34:33.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.798" endtime="20201110 08:34:33.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.796" endtime="20201110 08:34:33.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.834" endtime="20201110 08:34:34.121"></status>
</kw>
<msg timestamp="20201110 08:34:34.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.833" endtime="20201110 08:34:34.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.125" endtime="20201110 08:34:34.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.134" endtime="20201110 08:34:34.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.830" endtime="20201110 08:34:34.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.829" endtime="20201110 08:34:34.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.140" level="INFO">${RESULT} = [{'time': 0.022098347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.861100000000192e-05, 'source_diff': 9.861100000000192e-05}, {'time': 0.022213361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:34.137" endtime="20201110 08:34:34.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.154" level="INFO">${ACCURACY} = {'source_diff': [9.861100000000192e-05, 9.831899999999949e-05, 9.795800000000215e-05, 9.813900000000056e-05, 9.838900000000081e-05, 9.836100000000167e-05, 9.83609999999982e-05, 9.869499999999934e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:34.141" endtime="20201110 08:34:34.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.158" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.157" endtime="20201110 08:34:34.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.161" level="INFO">VALUE: [9.861100000000192e-05, 9.831899999999949e-05, 9.795800000000215e-05, 9.813900000000056e-05, 9.838900000000081e-05, 9.836100000000167e-05, 9.83609999999982e-05, 9.869499999999934e-05, 9.830499999999992e-05, 9.863900000000106e-05, 9.838900000000081e-05, 9.879100000000085e-05, 9.8721999999999e-05, 9.881999999999946e-05, 9.813900000000056e-05, 9.872299999999848e-05, 9.813900000000056e-05, 9.888900000000131e-05, 9.888899999999784e-05, 9.838900000000081e-05, 9.837500000000124e-05, 9.854200000000007e-05, 9.856899999999974e-05, 9.888900000000131e-05, 9.837500000000124e-05, 9.806999999999871e-05, 9.801400000000043e-05, 9.827800000000025e-05, 9.798599999999782e-05, 9.812500000000099e-05, 9.855500000000017e-05, 9.829199999999982e-05, 9.8334000000002e-05, 9.83059999999994e-05, 9.847199999999875e-05, 9.863900000000106e-05, 9.872300000000195e-05, 9.795799999999869e-05, 9.880500000000042e-05, 9.861100000000192e-05, 9.804199999999957e-05, 9.865300000000063e-05, 9.854200000000007e-05, 9.797199999999825e-05, 9.798700000000077e-05, 9.86800000000003e-05, 9.837500000000124e-05, 9.872200000000247e-05, 9.831899999999949e-05, 9.862500000000149e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.159" endtime="20201110 08:34:34.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.154" endtime="20201110 08:34:34.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.164" endtime="20201110 08:34:34.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.167" endtime="20201110 08:34:34.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.166" endtime="20201110 08:34:34.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.162" endtime="20201110 08:34:34.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.794" endtime="20201110 08:34:34.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.794" endtime="20201110 08:34:34.188"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.197" endtime="20201110 08:34:34.217"></status>
</kw>
<msg timestamp="20201110 08:34:34.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.195" endtime="20201110 08:34:34.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.218" endtime="20201110 08:34:34.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.221" endtime="20201110 08:34:34.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.193" endtime="20201110 08:34:34.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.191" endtime="20201110 08:34:34.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.230" endtime="20201110 08:34:34.517"></status>
</kw>
<msg timestamp="20201110 08:34:34.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022231125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.228" endtime="20201110 08:34:34.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022231125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.522" endtime="20201110 08:34:34.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.530" endtime="20201110 08:34:34.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.226" endtime="20201110 08:34:34.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.224" endtime="20201110 08:34:34.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.537" level="INFO">${RESULT} = [{'time': 0.022231125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.961099999999945e-05, 'source_diff': 9.961099999999945e-05}, {'time': 0.022346139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:34.533" endtime="20201110 08:34:34.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.550" level="INFO">${ACCURACY} = {'source_diff': [9.961099999999945e-05, 9.897199999999926e-05, 9.897199999999926e-05, 9.982000000000046e-05, 9.931900000000049e-05, 9.980500000000142e-05, 9.963899999999859e-05, 9.988900000000231e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:34.538" endtime="20201110 08:34:34.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.554" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.553" endtime="20201110 08:34:34.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.557" level="INFO">VALUE: [9.961099999999945e-05, 9.897199999999926e-05, 9.897199999999926e-05, 9.982000000000046e-05, 9.931900000000049e-05, 9.980500000000142e-05, 9.963899999999859e-05, 9.988900000000231e-05, 9.990300000000188e-05, 9.938899999999834e-05, 9.968100000000077e-05, 9.895899999999916e-05, 9.894499999999959e-05, 9.94020000000019e-05, 9.912499999999852e-05, 9.920799999999994e-05, 9.961099999999945e-05, 9.952799999999803e-05, 9.98060000000009e-05, 9.979200000000132e-05, 9.98479999999996e-05, 9.913900000000156e-05, 9.972299999999948e-05, 9.89860000000023e-05, 9.974999999999914e-05, 9.930500000000092e-05, 9.930500000000092e-05, 9.929200000000082e-05, 9.965300000000163e-05, 9.906999999999971e-05, 9.94869999999988e-05, 9.962500000000249e-05, 9.990199999999894e-05, 9.90410000000011e-05, 9.947199999999976e-05, 9.912500000000199e-05, 9.987500000000274e-05, 9.904200000000057e-05, 9.961099999999945e-05, 9.970800000000044e-05, 9.943099999999705e-05, 9.895899999999916e-05, 9.909799999999885e-05, 9.970800000000044e-05, 9.929100000000135e-05, 9.931900000000049e-05, 9.915300000000113e-05, 9.93470000000031e-05, 9.937500000000224e-05, 9.955599999999717e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.555" endtime="20201110 08:34:34.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.551" endtime="20201110 08:34:34.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.560" endtime="20201110 08:34:34.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.564" endtime="20201110 08:34:34.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.562" endtime="20201110 08:34:34.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.559" endtime="20201110 08:34:34.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.189" endtime="20201110 08:34:34.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.189" endtime="20201110 08:34:34.585"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.593" endtime="20201110 08:34:34.613"></status>
</kw>
<msg timestamp="20201110 08:34:34.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.592" endtime="20201110 08:34:34.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.614" endtime="20201110 08:34:34.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.617" endtime="20201110 08:34:34.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.589" endtime="20201110 08:34:34.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.587" endtime="20201110 08:34:34.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.626" endtime="20201110 08:34:34.913"></status>
</kw>
<msg timestamp="20201110 08:34:34.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.624" endtime="20201110 08:34:34.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.917" endtime="20201110 08:34:34.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.925" endtime="20201110 08:34:34.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.622" endtime="20201110 08:34:34.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.620" endtime="20201110 08:34:34.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.932" level="INFO">${RESULT} = [{'time': 0.021987347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010027800000000225, 'source_diff': 0.00010027800000000225}, {'time': 0.022105444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:34.928" endtime="20201110 08:34:34.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.946" level="INFO">${ACCURACY} = {'source_diff': [0.00010027800000000225, 0.00010012499999999952, 0.0001004999999999999, 0.0001008060000000019, 0.0001003060000000014, 0.00010080599999999842, 0.00010027800000000225, 0.0001003610000000...</msg>
<status status="PASS" starttime="20201110 08:34:34.933" endtime="20201110 08:34:34.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.950" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.949" endtime="20201110 08:34:34.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.953" level="INFO">VALUE: [0.00010027800000000225, 0.00010012499999999952, 0.0001004999999999999, 0.0001008060000000019, 0.0001003060000000014, 0.00010080599999999842, 0.00010027800000000225, 0.0001003610000000002, 0.00010077799999999928, 0.00010009700000000038, 0.000100722000000001, 0.00010019400000000137, 0.00010037499999999977, 0.00010087500000000027, 0.0001000419999999981, 9.995799999999722e-05, 0.00010013799999999962, 0.0001005549999999987, 0.00010037499999999977, 0.00010080500000000242, 0.00010079200000000232, 0.00010044499999999762, 0.00010080599999999842, 0.00010063900000000306, 0.00010038899999999934, 0.00010088899999999984, 0.0001000549999999982, 0.00010029099999999888, 0.00010077799999999928, 0.00010029199999999835, 9.995799999999722e-05, 0.00010062500000000002, 0.00010076300000000024, 0.00010063899999999959, 9.99869999999993e-05, 0.00010080500000000242, 9.998599999999983e-05, 0.00010079099999999938, 9.997200000000026e-05, 0.00010013899999999909, 0.00010020800000000094, 0.0001001670000000017, 0.00010070900000000091, 0.00010029199999999835, 0.00010026299999999974, 0.00010047199999999729, 0.00010080499999999895, 0.0001008060000000019, 9.998599999999983e-05, 0.0001003060000000014]</msg>
<status status="PASS" starttime="20201110 08:34:34.951" endtime="20201110 08:34:34.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.947" endtime="20201110 08:34:34.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.956" endtime="20201110 08:34:34.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.960" endtime="20201110 08:34:34.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.958" endtime="20201110 08:34:34.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.955" endtime="20201110 08:34:34.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.586" endtime="20201110 08:34:34.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.585" endtime="20201110 08:34:34.981"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.989" endtime="20201110 08:34:35.009"></status>
</kw>
<msg timestamp="20201110 08:34:35.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.988" endtime="20201110 08:34:35.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.010" endtime="20201110 08:34:35.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.013" endtime="20201110 08:34:35.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.985" endtime="20201110 08:34:35.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.983" endtime="20201110 08:34:35.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.022" endtime="20201110 08:34:35.308"></status>
</kw>
<msg timestamp="20201110 08:34:35.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.020" endtime="20201110 08:34:35.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.312" endtime="20201110 08:34:35.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.320" endtime="20201110 08:34:35.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.018" endtime="20201110 08:34:35.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.016" endtime="20201110 08:34:35.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.327" level="INFO">${RESULT} = [{'time': 0.021963528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010098600000000083, 'source_diff': 0.00010098600000000083}, {'time': 0.0220855, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:35.324" endtime="20201110 08:34:35.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:35.340" level="INFO">${ACCURACY} = {'source_diff': [0.00010098600000000083, 0.00010126400000000021, 0.00010163900000000059, 0.00010156999999999874, 0.00010177800000000028, 0.00010113900000000009, 0.00010119400000000237, 0.0001011390000...</msg>
<status status="PASS" starttime="20201110 08:34:35.328" endtime="20201110 08:34:35.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.344" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:34:35.343" endtime="20201110 08:34:35.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.347" level="INFO">VALUE: [0.00010098600000000083, 0.00010126400000000021, 0.00010163900000000059, 0.00010156999999999874, 0.00010177800000000028, 0.00010113900000000009, 0.00010119400000000237, 0.00010113900000000009, 0.0001018749999999978, 0.00010109700000000138, 0.00010097199999999779, 0.00010165300000000016, 0.00010111100000000095, 0.00010113900000000009, 0.00010138900000000034, 0.00010191699999999998, 0.00010138900000000034, 0.00010140299999999991, 0.000101722000000002, 0.00010112499999999705, 0.00010176299999999777, 0.00010179199999999985, 0.00010129199999999935, 0.00010130599999999892, 0.00010097200000000126, 0.00010130499999999945, 0.00010113900000000009, 0.00010120799999999847, 0.0001013060000000024, 0.00010095800000000169, 0.00010161100000000145, 0.00010109700000000138, 0.00010159799999999788, 0.00010122300000000098, 0.00010112500000000052, 0.00010170799999999897, 0.00010130499999999945, 0.00010145799999999872, 0.00010163900000000059, 0.00010123600000000108, 0.00010180599999999942, 0.00010113900000000009, 0.00010123600000000108, 0.000101722000000002, 0.00010190300000000041, 0.0001015549999999997, 0.00010131900000000249, 0.00010113900000000009, 0.0001013749999999973, 0.00010155599999999917]</msg>
<status status="PASS" starttime="20201110 08:34:35.346" endtime="20201110 08:34:35.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.341" endtime="20201110 08:34:35.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.350" endtime="20201110 08:34:35.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.354" endtime="20201110 08:34:35.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.352" endtime="20201110 08:34:35.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.349" endtime="20201110 08:34:35.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.981" endtime="20201110 08:34:35.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.981" endtime="20201110 08:34:35.375"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.384" endtime="20201110 08:34:35.404"></status>
</kw>
<msg timestamp="20201110 08:34:35.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.382" endtime="20201110 08:34:35.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.405" endtime="20201110 08:34:35.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.408" endtime="20201110 08:34:35.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.380" endtime="20201110 08:34:35.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.377" endtime="20201110 08:34:35.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.417" endtime="20201110 08:34:35.704"></status>
</kw>
<msg timestamp="20201110 08:34:35.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023190097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023292389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.415" endtime="20201110 08:34:35.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023190097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023292389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.708" endtime="20201110 08:34:35.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.716" endtime="20201110 08:34:35.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.413" endtime="20201110 08:34:35.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.411" endtime="20201110 08:34:35.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.722" level="INFO">${RESULT} = [{'time': 0.023292389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010229200000000035, 'source_diff': 0.00010229200000000035}, {'time': 0.023410389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:35.719" endtime="20201110 08:34:35.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:35.735" level="INFO">${ACCURACY} = {'source_diff': [0.00010229200000000035, 0.0001020420000000001, 0.00010197299999999826, 0.000102513999999998, 0.00010263799999999865, 0.00010238900000000134, 0.0001020550000000002, 0.00010229100000000...</msg>
<status status="PASS" starttime="20201110 08:34:35.723" endtime="20201110 08:34:35.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.740" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:34:35.739" endtime="20201110 08:34:35.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.742" level="INFO">VALUE: [0.00010229200000000035, 0.0001020420000000001, 0.00010197299999999826, 0.000102513999999998, 0.00010263799999999865, 0.00010238900000000134, 0.0001020550000000002, 0.00010229100000000088, 0.00010261100000000245, 0.00010286099999999923, 0.00010205599999999967, 0.00010226399999999775, 0.00010227800000000078, 0.00010218000000000033, 0.0001021939999999999, 0.00010229100000000088, 0.00010213900000000109, 0.00010206899999999977, 0.00010263899999999812, 0.00010205599999999967, 0.00010280600000000042, 0.00010216600000000076, 0.00010288900000000184, 0.00010238800000000187, 0.0001022220000000025, 0.00010279100000000138, 0.00010247199999999929, 0.00010265299999999769, 0.00010238899999999787, 0.00010206999999999924, 0.00010277800000000128, 0.00010198600000000183, 0.00010248599999999886, 0.00010197199999999879, 0.00010197199999999879, 0.00010276400000000172, 0.00010265300000000116, 0.00010205599999999967, 0.00010282, 0.00010198600000000183, 0.00010265199999999822, 0.00010256900000000027, 0.00010194399999999965, 0.00010197200000000226, 0.00010244400000000015, 0.00010280600000000042, 0.00010265300000000116, 0.00010243000000000058, 0.00010272300000000248, 0.00010227699999999784]</msg>
<status status="PASS" starttime="20201110 08:34:35.741" endtime="20201110 08:34:35.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.736" endtime="20201110 08:34:35.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.746" endtime="20201110 08:34:35.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.749" endtime="20201110 08:34:35.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.748" endtime="20201110 08:34:35.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.744" endtime="20201110 08:34:35.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.376" endtime="20201110 08:34:35.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.375" endtime="20201110 08:34:35.770"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.779" endtime="20201110 08:34:35.799"></status>
</kw>
<msg timestamp="20201110 08:34:35.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.777" endtime="20201110 08:34:35.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.800" endtime="20201110 08:34:35.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.803" endtime="20201110 08:34:35.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.775" endtime="20201110 08:34:35.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.772" endtime="20201110 08:34:35.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.812" endtime="20201110 08:34:36.099"></status>
</kw>
<msg timestamp="20201110 08:34:36.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022315583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.810" endtime="20201110 08:34:36.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022315583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.103" endtime="20201110 08:34:36.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.112" endtime="20201110 08:34:36.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.808" endtime="20201110 08:34:36.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.806" endtime="20201110 08:34:36.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.118" level="INFO">${RESULT} = [{'time': 0.022315583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010379099999999891, 'source_diff': 0.00010379099999999891}, {'time': 0.022438583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:36.115" endtime="20201110 08:34:36.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.131" level="INFO">${ACCURACY} = {'source_diff': [0.00010379099999999891, 0.00010370800000000097, 0.00010343000000000158, 0.00010330499999999798, 0.00010329199999999789, 0.00010380600000000142, 0.00010329200000000135, 0.0001036119999...</msg>
<status status="PASS" starttime="20201110 08:34:36.119" endtime="20201110 08:34:36.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.136" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.135" endtime="20201110 08:34:36.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.138" level="INFO">VALUE: [0.00010379099999999891, 0.00010370800000000097, 0.00010343000000000158, 0.00010330499999999798, 0.00010329199999999789, 0.00010380600000000142, 0.00010329200000000135, 0.00010361199999999945, 0.00010370899999999697, 0.00010290199999999847, 0.00010313899999999862, 0.00010320800000000047, 0.00010316700000000123, 0.00010388899999999937, 0.00010312499999999905, 0.00010298699999999883, 0.00010333300000000059, 0.00010348599999999986, 0.00010374999999999968, 0.00010309699999999991, 0.00010340299999999844, 0.00010305499999999773, 0.00010347200000000029, 0.00010345800000000072, 0.00010379199999999839, 0.00010351400000000247, 0.00010354199999999814, 0.00010297199999999979, 0.00010330500000000145, 0.00010363899999999912, 0.00010355600000000117, 0.00010362499999999955, 0.00010386100000000023, 0.00010372200000000054, 0.00010380600000000142, 0.00010295899999999969, 0.00010380499999999848, 0.00010379099999999891, 0.00010362499999999955, 0.00010388899999999937, 0.00010388899999999937, 0.00010322200000000004, 0.00010329200000000135, 0.00010320800000000047, 0.00010372300000000001, 0.00010313799999999915, 0.00010306900000000077, 0.00010380499999999848, 0.00010301400000000197, 0.00010315300000000166]</msg>
<status status="PASS" starttime="20201110 08:34:36.137" endtime="20201110 08:34:36.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.132" endtime="20201110 08:34:36.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.142" endtime="20201110 08:34:36.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.145" endtime="20201110 08:34:36.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.144" endtime="20201110 08:34:36.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.140" endtime="20201110 08:34:36.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.771" endtime="20201110 08:34:36.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.770" endtime="20201110 08:34:36.166"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.174" endtime="20201110 08:34:36.194"></status>
</kw>
<msg timestamp="20201110 08:34:36.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.173" endtime="20201110 08:34:36.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.196" endtime="20201110 08:34:36.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.198" endtime="20201110 08:34:36.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.170" endtime="20201110 08:34:36.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.168" endtime="20201110 08:34:36.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.207" endtime="20201110 08:34:36.493"></status>
</kw>
<msg timestamp="20201110 08:34:36.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.206" endtime="20201110 08:34:36.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.497" endtime="20201110 08:34:36.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.505" endtime="20201110 08:34:36.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.203" endtime="20201110 08:34:36.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.201" endtime="20201110 08:34:36.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.512" level="INFO">${RESULT} = [{'time': 0.022401861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010444399999999868, 'source_diff': 0.00010444399999999868}, {'time': 0.022517875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:36.509" endtime="20201110 08:34:36.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.526" level="INFO">${ACCURACY} = {'source_diff': [0.00010444399999999868, 0.00010431899999999855, 0.00010447199999999782, 0.00010480599999999896, 0.00010462500000000055, 0.00010488900000000037, 0.0001043880000000004, 0.00010406900000...</msg>
<status status="PASS" starttime="20201110 08:34:36.513" endtime="20201110 08:34:36.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.531" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.530" endtime="20201110 08:34:36.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.533" level="INFO">VALUE: [0.00010444399999999868, 0.00010431899999999855, 0.00010447199999999782, 0.00010480599999999896, 0.00010462500000000055, 0.00010488900000000037, 0.0001043880000000004, 0.00010406900000000177, 0.00010430500000000245, 0.00010463900000000012, 0.0001040559999999982, 0.00010413899999999962, 0.00010422200000000104, 0.00010395900000000069, 0.00010465200000000022, 0.0001043750000000003, 0.00010434700000000116, 0.00010440299999999944, 0.00010441699999999901, 0.00010438899999999987, 0.00010495799999999875, 0.00010434700000000116, 0.00010437499999999683, 0.00010488900000000037, 0.0001048750000000008, 0.00010440299999999944, 0.00010490299999999994, 0.00010454199999999914, 0.00010445800000000172, 0.00010480599999999896, 0.00010413900000000309, 0.00010490299999999994, 0.00010422200000000104, 0.00010430499999999898, 0.00010480499999999948, 0.00010431899999999855, 0.00010430499999999898, 0.00010427799999999932, 0.00010413899999999962, 0.00010438899999999987, 0.00010438899999999987, 0.0001042360000000006, 0.00010442999999999911, 0.00010445800000000172, 0.00010415299999999919, 0.00010422199999999757, 0.00010481999999999853, 0.00010397200000000079, 0.00010449999999999696, 0.00010479199999999939]</msg>
<status status="PASS" starttime="20201110 08:34:36.532" endtime="20201110 08:34:36.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.527" endtime="20201110 08:34:36.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.541" endtime="20201110 08:34:36.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.544" endtime="20201110 08:34:36.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.543" endtime="20201110 08:34:36.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.539" endtime="20201110 08:34:36.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.167" endtime="20201110 08:34:36.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.166" endtime="20201110 08:34:36.565"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.573" endtime="20201110 08:34:36.594"></status>
</kw>
<msg timestamp="20201110 08:34:36.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.572" endtime="20201110 08:34:36.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.595" endtime="20201110 08:34:36.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.597" endtime="20201110 08:34:36.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.569" endtime="20201110 08:34:36.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.567" endtime="20201110 08:34:36.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.606" endtime="20201110 08:34:36.893"></status>
</kw>
<msg timestamp="20201110 08:34:36.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.605" endtime="20201110 08:34:36.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.897" endtime="20201110 08:34:36.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.905" endtime="20201110 08:34:36.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.602" endtime="20201110 08:34:36.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.601" endtime="20201110 08:34:36.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.911" level="INFO">${RESULT} = [{'time': 0.022213097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010579100000000091, 'source_diff': 0.00010579100000000091}, {'time': 0.022338111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:36.908" endtime="20201110 08:34:36.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.924" level="INFO">${ACCURACY} = {'source_diff': [0.00010579100000000091, 0.00010522200000000204, 0.00010581999999999953, 0.00010495799999999875, 0.00010548600000000186, 0.00010495899999999822, 0.00010530599999999946, 0.0001054719999...</msg>
<status status="PASS" starttime="20201110 08:34:36.912" endtime="20201110 08:34:36.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.929" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.928" endtime="20201110 08:34:36.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.931" level="INFO">VALUE: [0.00010579100000000091, 0.00010522200000000204, 0.00010581999999999953, 0.00010495799999999875, 0.00010548600000000186, 0.00010495899999999822, 0.00010530599999999946, 0.00010547199999999882, 0.00010565300000000069, 0.00010505499999999973, 0.0001056949999999994, 0.0001050559999999992, 0.00010530599999999946, 0.00010548600000000186, 0.00010547299999999829, 0.00010513900000000062, 0.00010522200000000204, 0.00010548600000000186, 0.00010516699999999976, 0.00010569399999999993, 0.00010547199999999882, 0.00010580599999999996, 0.00010497200000000179, 0.00010530599999999946, 0.00010515200000000072, 0.00010555500000000023, 0.00010547199999999882, 0.00010580499999999701, 0.00010515300000000019, 0.00010587499999999833, 0.0001053750000000013, 0.00010522200000000204, 0.00010545899999999872, 0.00010563900000000112, 0.00010554100000000066, 0.00010580500000000048, 0.00010563899999999765, 0.00010590300000000094, 0.00010522199999999857, 0.00010497200000000179, 0.00010512500000000105, 0.0001050559999999992, 0.00010580599999999996, 0.00010512500000000105, 0.0001050689999999993, 0.00010497200000000179, 0.00010563900000000112, 0.00010587499999999833, 0.00010590300000000094, 0.00010540300000000044]</msg>
<status status="PASS" starttime="20201110 08:34:36.930" endtime="20201110 08:34:36.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.925" endtime="20201110 08:34:36.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.935" endtime="20201110 08:34:36.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.938" endtime="20201110 08:34:36.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.937" endtime="20201110 08:34:36.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.933" endtime="20201110 08:34:36.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.566" endtime="20201110 08:34:36.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.565" endtime="20201110 08:34:36.959"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.968" endtime="20201110 08:34:36.987"></status>
</kw>
<msg timestamp="20201110 08:34:36.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.966" endtime="20201110 08:34:36.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.989" endtime="20201110 08:34:36.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.991" endtime="20201110 08:34:36.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.963" endtime="20201110 08:34:36.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.961" endtime="20201110 08:34:36.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.000" endtime="20201110 08:34:37.287"></status>
</kw>
<msg timestamp="20201110 08:34:37.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022029625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022136389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.999" endtime="20201110 08:34:37.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022029625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022136389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.292" endtime="20201110 08:34:37.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.300" endtime="20201110 08:34:37.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.996" endtime="20201110 08:34:37.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.994" endtime="20201110 08:34:37.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.306" level="INFO">${RESULT} = [{'time': 0.022136389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010676399999999878, 'source_diff': 0.00010676399999999878}, {'time': 0.022263389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:37.303" endtime="20201110 08:34:37.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:37.319" level="INFO">${ACCURACY} = {'source_diff': [0.00010676399999999878, 0.00010597200000000279, 0.00010629200000000089, 0.00010645899999999972, 0.00010679200000000139, 0.00010627699999999837, 0.00010629100000000141, 0.0001059440000...</msg>
<status status="PASS" starttime="20201110 08:34:37.307" endtime="20201110 08:34:37.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.324" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:34:37.323" endtime="20201110 08:34:37.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.326" level="INFO">VALUE: [0.00010676399999999878, 0.00010597200000000279, 0.00010629200000000089, 0.00010645899999999972, 0.00010679200000000139, 0.00010627699999999837, 0.00010629100000000141, 0.00010594400000000018, 0.00010680599999999749, 0.00010629199999999742, 0.00010641700000000101, 0.00010597299999999879, 0.00010640300000000144, 0.00010662500000000255, 0.00010681899999999758, 0.00010672200000000007, 0.00010630500000000098, 0.00010680600000000096, 0.00010613900000000162, 0.00010602800000000107, 0.00010647299999999929, 0.00010630599999999699, 0.00010615200000000172, 0.00010622199999999957, 0.00010630500000000098, 0.00010652800000000157, 0.00010597200000000279, 0.00010622199999999957, 0.00010659699999999994, 0.00010680600000000096, 0.00010679200000000139, 0.00010633300000000012, 0.00010645800000000025, 0.00010663900000000212, 0.00010634699999999969, 0.00010602800000000107, 0.00010597199999999932, 0.00010597299999999879, 0.00010629200000000089, 0.00010594499999999965, 0.00010648600000000286, 0.00010647199999999982, 0.00010663899999999865, 0.00010640300000000144, 0.00010657000000000028, 0.00010630600000000046, 0.00010597199999999932, 0.00010612499999999858, 0.00010598700000000183, 0.00010606899999999683]</msg>
<status status="PASS" starttime="20201110 08:34:37.325" endtime="20201110 08:34:37.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.320" endtime="20201110 08:34:37.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.330" endtime="20201110 08:34:37.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:37.333" endtime="20201110 08:34:37.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.332" endtime="20201110 08:34:37.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.328" endtime="20201110 08:34:37.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.960" endtime="20201110 08:34:37.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.959" endtime="20201110 08:34:37.354"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.364" endtime="20201110 08:34:37.384"></status>
</kw>
<msg timestamp="20201110 08:34:37.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.362" endtime="20201110 08:34:37.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.385" endtime="20201110 08:34:37.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.388" endtime="20201110 08:34:37.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.359" endtime="20201110 08:34:37.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.356" endtime="20201110 08:34:37.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.397" endtime="20201110 08:34:37.683"></status>
</kw>
<msg timestamp="20201110 08:34:37.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023868514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023975611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.395" endtime="20201110 08:34:37.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023868514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023975611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.687" endtime="20201110 08:34:37.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.696" endtime="20201110 08:34:37.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.393" endtime="20201110 08:34:37.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.391" endtime="20201110 08:34:37.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.702" level="INFO">${RESULT} = [{'time': 0.023975611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010709700000000044, 'source_diff': 0.00010709700000000044}, {'time': 0.024102639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:37.699" endtime="20201110 08:34:37.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:37.715" level="INFO">${ACCURACY} = {'source_diff': [0.00010709700000000044, 0.00010712499999999958, 0.00010755599999999824, 0.00010697299999999979, 0.00010731899999999808, 0.0001070279999999986, 0.00010697200000000032, 0.00010729100000...</msg>
<status status="PASS" starttime="20201110 08:34:37.703" endtime="20201110 08:34:37.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.720" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:34:37.719" endtime="20201110 08:34:37.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.722" level="INFO">VALUE: [0.00010709700000000044, 0.00010712499999999958, 0.00010755599999999824, 0.00010697299999999979, 0.00010731899999999808, 0.0001070279999999986, 0.00010697200000000032, 0.00010729100000000241, 0.00010747200000000082, 0.00010730600000000146, 0.00010782000000000153, 0.00010713899999999915, 0.00010722300000000004, 0.00010747300000000029, 0.00010697199999999685, 0.00010699999999999946, 0.00010712499999999958, 0.0001070279999999986, 0.00010697200000000032, 0.00010712499999999958, 0.00010741700000000201, 0.00010795799999999828, 0.0001073889999999994, 0.000107208000000001, 0.00010762500000000008, 0.00010705499999999826, 0.00010729199999999842, 0.00010787500000000033, 0.00010780600000000196, 0.00010697200000000032, 0.00010780600000000196, 0.00010748600000000039, 0.00010730500000000198, 0.00010697200000000032, 0.00010747199999999735, 0.00010698599999999989, 0.00010780599999999849, 0.00010713899999999915, 0.00010786099999999729, 0.00010722300000000004, 0.00010715199999999925, 0.00010755499999999876, 0.00010747200000000082, 0.00010745799999999778, 0.0001071950000000009, 0.00010768100000000183, 0.00010727800000000232, 0.00010729199999999842, 0.00010779199999999892, 0.00010691599999999857]</msg>
<status status="PASS" starttime="20201110 08:34:37.721" endtime="20201110 08:34:37.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.716" endtime="20201110 08:34:37.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.726" endtime="20201110 08:34:37.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:37.729" endtime="20201110 08:34:37.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.727" endtime="20201110 08:34:37.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.724" endtime="20201110 08:34:37.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.355" endtime="20201110 08:34:37.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.354" endtime="20201110 08:34:37.750"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.758" endtime="20201110 08:34:37.778"></status>
</kw>
<msg timestamp="20201110 08:34:37.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.757" endtime="20201110 08:34:37.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.779" endtime="20201110 08:34:37.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.782" endtime="20201110 08:34:37.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.754" endtime="20201110 08:34:37.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.752" endtime="20201110 08:34:37.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.791" endtime="20201110 08:34:38.077"></status>
</kw>
<msg timestamp="20201110 08:34:38.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.789" endtime="20201110 08:34:38.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.081" endtime="20201110 08:34:38.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.090" endtime="20201110 08:34:38.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.787" endtime="20201110 08:34:38.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.785" endtime="20201110 08:34:38.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.096" level="INFO">${RESULT} = [{'time': 0.022125653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001085699999999988, 'source_diff': 0.0001085699999999988}, {'time': 0.022255653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:38.093" endtime="20201110 08:34:38.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.111" level="INFO">${ACCURACY} = {'source_diff': [0.0001085699999999988, 0.00010795900000000122, 0.00010879199999999992, 0.00010879199999999992, 0.00010844399999999921, 0.0001082769999999969, 0.00010844399999999921, 0.000107957999999...</msg>
<status status="PASS" starttime="20201110 08:34:38.097" endtime="20201110 08:34:38.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.115" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.114" endtime="20201110 08:34:38.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.118" level="INFO">VALUE: [0.0001085699999999988, 0.00010795900000000122, 0.00010879199999999992, 0.00010879199999999992, 0.00010844399999999921, 0.0001082769999999969, 0.00010844399999999921, 0.00010795799999999828, 0.00010797200000000132, 0.00010876400000000078, 0.00010797300000000079, 0.00010833399999999813, 0.00010847200000000182, 0.00010847200000000182, 0.00010812500000000058, 0.00010890300000000047, 0.00010805599999999874, 0.00010797200000000132, 0.00010812500000000058, 0.00010872300000000154, 0.00010834700000000169, 0.00010815200000000025, 0.00010888899999999743, 0.00010893099999999961, 0.00010855499999999976, 0.00010806899999999883, 0.00010855599999999924, 0.00010849999999999749, 0.00010877800000000035, 0.00010847200000000182, 0.00010833299999999865, 0.00010880500000000001, 0.00010880500000000001, 0.00010797199999999785, 0.00010848600000000139, 0.00010830600000000246, 0.00010880600000000296, 0.00010863900000000065, 0.00010806899999999883, 0.00010829099999999994, 0.00010830499999999951, 0.00010830500000000298, 0.00010862500000000108, 0.00010804199999999917, 0.00010862499999999761, 0.0001082500000000007, 0.00010812500000000058, 0.00010887499999999786, 0.00010820799999999853, 0.00010847199999999835]</msg>
<status status="PASS" starttime="20201110 08:34:38.116" endtime="20201110 08:34:38.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.111" endtime="20201110 08:34:38.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.121" endtime="20201110 08:34:38.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.125" endtime="20201110 08:34:38.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.123" endtime="20201110 08:34:38.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.119" endtime="20201110 08:34:38.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.751" endtime="20201110 08:34:38.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.750" endtime="20201110 08:34:38.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.464" endtime="20201110 08:34:38.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.149" endtime="20201110 08:34:38.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.148" endtime="20201110 08:34:38.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.147" endtime="20201110 08:34:38.169"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:58.394" endtime="20201110 08:34:38.170" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.176" endtime="20201110 08:34:38.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.175" endtime="20201110 08:34:38.197"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.219" endtime="20201110 08:34:38.234"></status>
</kw>
<msg timestamp="20201110 08:34:38.235" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.215" endtime="20201110 08:34:38.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.237" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.236" endtime="20201110 08:34:38.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.240" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:38.238" endtime="20201110 08:34:38.240"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:38.211" endtime="20201110 08:34:38.241"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:38.207" endtime="20201110 08:34:38.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.205" endtime="20201110 08:34:38.242"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:38.245" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:38.245" endtime="20201110 08:34:38.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.242" endtime="20201110 08:34:38.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.203" endtime="20201110 08:34:38.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.202" endtime="20201110 08:34:38.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.247" endtime="20201110 08:34:38.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.200" endtime="20201110 08:34:38.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.198" endtime="20201110 08:34:38.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.174" endtime="20201110 08:34:38.250"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.260" endtime="20201110 08:34:38.275"></status>
</kw>
<msg timestamp="20201110 08:34:38.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.258" endtime="20201110 08:34:38.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.277" endtime="20201110 08:34:38.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.279" endtime="20201110 08:34:38.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.255" endtime="20201110 08:34:38.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.253" endtime="20201110 08:34:38.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.288" endtime="20201110 08:34:38.575"></status>
</kw>
<msg timestamp="20201110 08:34:38.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076027181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076036806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.286" endtime="20201110 08:34:38.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076027181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076036806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.579" endtime="20201110 08:34:38.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.587" endtime="20201110 08:34:38.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.284" endtime="20201110 08:34:38.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.282" endtime="20201110 08:34:38.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.594" level="INFO">${RESULT} = [{'time': 0.076036806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.076056875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:38.591" endtime="20201110 08:34:38.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.608" level="INFO">${ACCURACY} = {'source_diff': [9.624999999999218e-06, 9.582999999993569e-06, 9.666000000005393e-06, 9.597000000000078e-06, 9.624999999999218e-06, 8.985999999988614e-06, 8.971999999995983e-06, 9.597000000000078e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:38.595" endtime="20201110 08:34:38.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.613" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.612" endtime="20201110 08:34:38.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.615" level="INFO">VALUE: [9.624999999999218e-06, 9.582999999993569e-06, 9.666000000005393e-06, 9.597000000000078e-06, 9.624999999999218e-06, 8.985999999988614e-06, 8.971999999995983e-06, 9.597000000000078e-06, 9.597999999999551e-06, 9.583000000007447e-06, 9.597000000000078e-06, 9.624999999999218e-06, 8.986000000002492e-06, 9.000000000009e-06, 9.042000000000772e-06, 8.958000000003352e-06, 9.58400000000692e-06, 9.611000000006586e-06, 8.986000000002492e-06, 8.999999999995123e-06, 9.597999999999551e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.610999999992709e-06, 9.610999999992709e-06, 9.055000000007807e-06, 9.014000000001632e-06, 8.999999999995123e-06, 8.999999999995123e-06, 9.624999999999218e-06, 9.597000000000078e-06, 9.611000000006586e-06, 8.986000000002492e-06, 9.555999999993903e-06, 8.986000000002492e-06, 9.610999999992709e-06, 8.972000000009861e-06, 9.582999999993569e-06, 9.638999999991849e-06, 9.611000000006586e-06, 9.610999999992709e-06, 8.986000000002492e-06, 9.624999999999218e-06, 8.986999999988088e-06, 9.611999999992182e-06, 9.611999999992182e-06, 8.985999999988614e-06, 9.610999999992709e-06, 9.610999999992709e-06, 9.01299999998828e-06]</msg>
<status status="PASS" starttime="20201110 08:34:38.614" endtime="20201110 08:34:38.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.609" endtime="20201110 08:34:38.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.618" endtime="20201110 08:34:38.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.622" endtime="20201110 08:34:38.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.620" endtime="20201110 08:34:38.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.617" endtime="20201110 08:34:38.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.251" endtime="20201110 08:34:38.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.251" endtime="20201110 08:34:38.642"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.651" endtime="20201110 08:34:38.666"></status>
</kw>
<msg timestamp="20201110 08:34:38.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.650" endtime="20201110 08:34:38.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.668" endtime="20201110 08:34:38.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.670" endtime="20201110 08:34:38.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.647" endtime="20201110 08:34:38.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.645" endtime="20201110 08:34:38.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.679" endtime="20201110 08:34:38.965"></status>
</kw>
<msg timestamp="20201110 08:34:38.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022376597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.678" endtime="20201110 08:34:38.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022376597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.970" endtime="20201110 08:34:38.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.978" endtime="20201110 08:34:38.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.675" endtime="20201110 08:34:38.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.673" endtime="20201110 08:34:38.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.985" level="INFO">${RESULT} = [{'time': 0.022376597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.022396444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:38.982" endtime="20201110 08:34:38.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.000" level="INFO">${ACCURACY} = {'source_diff': [1.0222000000000703e-05, 1.0194000000001563e-05, 1.0860999999997428e-05, 1.0208000000001133e-05, 1.0152999999998857e-05, 1.0208000000001133e-05, 1.0194000000001563e-05, 1.0208000000001...</msg>
<status status="PASS" starttime="20201110 08:34:38.986" endtime="20201110 08:34:39.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.005" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.004" endtime="20201110 08:34:39.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.007" level="INFO">VALUE: [1.0222000000000703e-05, 1.0194000000001563e-05, 1.0860999999997428e-05, 1.0208000000001133e-05, 1.0152999999998857e-05, 1.0208000000001133e-05, 1.0194000000001563e-05, 1.0208000000001133e-05, 1.0889000000000038e-05, 9.597000000000078e-06, 1.0805999999998622e-05, 1.0236000000000273e-05, 1.0207999999997663e-05, 1.0193999999998093e-05, 1.0209000000000606e-05, 1.0209000000000606e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0806000000002092e-05, 1.0209000000000606e-05, 9.597000000000078e-06, 1.0805999999998622e-05, 9.597999999999551e-06, 1.0806000000002092e-05, 1.0194000000001563e-05, 1.0833000000001758e-05, 1.0209000000000606e-05, 1.0818999999998719e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0847000000001328e-05, 1.0194000000001563e-05, 1.0195000000001037e-05, 1.0193999999998093e-05, 1.0223000000000176e-05, 1.0805000000002618e-05, 1.0167000000001897e-05, 1.0222000000000703e-05, 1.0804999999999149e-05, 1.0791999999999052e-05, 1.0195000000001037e-05, 1.0208000000001133e-05, 1.0209000000000606e-05, 1.0208000000001133e-05, 1.0236000000000273e-05, 1.0195000000001037e-05, 1.0777999999999482e-05, 1.0207999999997663e-05, 1.0820000000001662e-05, 1.0736000000000773e-05]</msg>
<status status="PASS" starttime="20201110 08:34:39.006" endtime="20201110 08:34:39.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.001" endtime="20201110 08:34:39.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.011" endtime="20201110 08:34:39.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.015" endtime="20201110 08:34:39.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.013" endtime="20201110 08:34:39.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.009" endtime="20201110 08:34:39.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.644" endtime="20201110 08:34:39.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.643" endtime="20201110 08:34:39.037"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.050" endtime="20201110 08:34:39.066"></status>
</kw>
<msg timestamp="20201110 08:34:39.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.048" endtime="20201110 08:34:39.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.068" endtime="20201110 08:34:39.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.072" endtime="20201110 08:34:39.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.044" endtime="20201110 08:34:39.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.041" endtime="20201110 08:34:39.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.086" endtime="20201110 08:34:39.375"></status>
</kw>
<msg timestamp="20201110 08:34:39.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028307889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028319319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.084" endtime="20201110 08:34:39.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028307889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028319319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.379" endtime="20201110 08:34:39.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.387" endtime="20201110 08:34:39.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.080" endtime="20201110 08:34:39.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.077" endtime="20201110 08:34:39.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:39.394" level="INFO">${RESULT} = [{'time': 0.028319319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1429999999999774e-05, 'source_diff': 1.1429999999999774e-05}, {'time': 0.028337944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:39.391" endtime="20201110 08:34:39.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.407" level="INFO">${ACCURACY} = {'source_diff': [1.1429999999999774e-05, 1.0818999999998719e-05, 1.1416999999999677e-05, 1.1388999999997068e-05, 1.1416000000000204e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.1416000000000...</msg>
<status status="PASS" starttime="20201110 08:34:39.395" endtime="20201110 08:34:39.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.412" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.411" endtime="20201110 08:34:39.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.414" level="INFO">VALUE: [1.1429999999999774e-05, 1.0818999999998719e-05, 1.1416999999999677e-05, 1.1388999999997068e-05, 1.1416000000000204e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.1416000000000204e-05, 1.0832999999998288e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.2013999999997693e-05, 1.1416000000000204e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.0834000000001232e-05, 1.1403000000000107e-05, 1.1486000000001523e-05, 1.1403000000000107e-05, 1.1443999999999344e-05, 1.2028000000000733e-05, 1.1416999999999677e-05, 1.1402000000000634e-05, 1.0792000000002522e-05, 1.1416000000000204e-05, 1.2027999999997263e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.1430999999999247e-05, 1.1416999999999677e-05, 1.0819000000002188e-05, 1.1457999999998913e-05, 1.1416000000000204e-05, 1.1472999999997957e-05, 1.0833999999997762e-05, 1.0777000000000009e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.1430000000003243e-05, 1.1429999999999774e-05, 1.1416999999999677e-05, 1.1459000000001857e-05, 1.0805999999998622e-05, 1.1416000000000204e-05, 1.2000000000001593e-05, 1.1443999999999344e-05, 1.2027000000001259e-05]</msg>
<status status="PASS" starttime="20201110 08:34:39.413" endtime="20201110 08:34:39.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.408" endtime="20201110 08:34:39.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.418" endtime="20201110 08:34:39.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.421" endtime="20201110 08:34:39.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.420" endtime="20201110 08:34:39.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.416" endtime="20201110 08:34:39.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.038" endtime="20201110 08:34:39.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.038" endtime="20201110 08:34:39.442"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.451" endtime="20201110 08:34:39.466"></status>
</kw>
<msg timestamp="20201110 08:34:39.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.450" endtime="20201110 08:34:39.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.468" endtime="20201110 08:34:39.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.470" endtime="20201110 08:34:39.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.447" endtime="20201110 08:34:39.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.445" endtime="20201110 08:34:39.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.479" endtime="20201110 08:34:39.789"></status>
</kw>
<msg timestamp="20201110 08:34:39.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022934431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.478" endtime="20201110 08:34:39.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022934431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.794" endtime="20201110 08:34:39.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.802" endtime="20201110 08:34:39.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.475" endtime="20201110 08:34:39.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.473" endtime="20201110 08:34:39.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:39.808" level="INFO">${RESULT} = [{'time': 0.022934431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.022953194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:39.805" endtime="20201110 08:34:39.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.822" level="INFO">${ACCURACY} = {'source_diff': [1.2028000000000733e-05, 1.2583000000000039e-05, 1.2583999999999512e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2028000000000...</msg>
<status status="PASS" starttime="20201110 08:34:39.809" endtime="20201110 08:34:39.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.826" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.825" endtime="20201110 08:34:39.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.829" level="INFO">VALUE: [1.2028000000000733e-05, 1.2583000000000039e-05, 1.2583999999999512e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2680999999997028e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2014000000001163e-05, 1.2000000000001593e-05, 1.2028000000000733e-05, 1.2611000000002648e-05, 1.2637999999998845e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2652999999997888e-05, 1.2028000000000733e-05, 1.2611000000002648e-05, 1.2610999999999178e-05, 1.2653000000001358e-05, 1.2027000000001259e-05, 1.2610999999999178e-05, 1.2028000000000733e-05, 1.2637999999998845e-05, 1.2624999999998748e-05, 1.2013999999997693e-05, 1.2624999999998748e-05, 1.2612000000002122e-05, 1.2625000000002218e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2014000000001163e-05, 1.2625000000002218e-05, 1.202699999999779e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2055999999999872e-05, 1.2027000000001259e-05, 1.204099999999736e-05, 1.2000000000001593e-05, 1.2625000000002218e-05, 1.2638999999998318e-05, 1.2624999999998748e-05, 1.2013999999997693e-05]</msg>
<status status="PASS" starttime="20201110 08:34:39.827" endtime="20201110 08:34:39.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.823" endtime="20201110 08:34:39.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.832" endtime="20201110 08:34:39.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.836" endtime="20201110 08:34:39.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.834" endtime="20201110 08:34:39.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.831" endtime="20201110 08:34:39.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.443" endtime="20201110 08:34:39.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.443" endtime="20201110 08:34:39.857"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.865" endtime="20201110 08:34:39.881"></status>
</kw>
<msg timestamp="20201110 08:34:39.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.864" endtime="20201110 08:34:39.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.882" endtime="20201110 08:34:39.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.885" endtime="20201110 08:34:39.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.861" endtime="20201110 08:34:39.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.859" endtime="20201110 08:34:39.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.894" endtime="20201110 08:34:40.179"></status>
</kw>
<msg timestamp="20201110 08:34:40.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.892" endtime="20201110 08:34:40.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.183" endtime="20201110 08:34:40.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.191" endtime="20201110 08:34:40.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.889" endtime="20201110 08:34:40.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.888" endtime="20201110 08:34:40.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.198" level="INFO">${RESULT} = [{'time': 0.021989944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.022009472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:40.195" endtime="20201110 08:34:40.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:40.211" level="INFO">${ACCURACY} = {'source_diff': [1.3847000000000859e-05, 1.3207999999997194e-05, 1.3236000000003273e-05, 1.2625000000002218e-05, 1.3235999999999803e-05, 1.3222999999999707e-05, 1.3236999999999277e-05, 1.3195000000000...</msg>
<status status="PASS" starttime="20201110 08:34:40.199" endtime="20201110 08:34:40.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.216" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:34:40.215" endtime="20201110 08:34:40.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.219" level="INFO">VALUE: [1.3847000000000859e-05, 1.3207999999997194e-05, 1.3236000000003273e-05, 1.2625000000002218e-05, 1.3235999999999803e-05, 1.3222999999999707e-05, 1.3236999999999277e-05, 1.3195000000000567e-05, 1.3208000000000664e-05, 1.383299999999782e-05, 1.384699999999739e-05, 1.3235999999999803e-05, 1.3917000000002178e-05, 1.3236999999999277e-05, 1.3235999999999803e-05, 1.3193999999997624e-05, 1.3222999999999707e-05, 1.3833000000001289e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.2624999999998748e-05, 1.3235999999999803e-05, 1.3221999999996764e-05, 1.3207999999997194e-05, 1.3235999999999803e-05, 1.3833000000001289e-05, 1.3167000000001428e-05, 1.3820000000001192e-05, 1.3833000000001289e-05, 1.3264000000002413e-05, 1.3820000000001192e-05, 1.3833999999997293e-05, 1.3847000000000859e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3208000000000664e-05, 1.3820000000001192e-05, 1.3848000000000332e-05, 1.3236000000003273e-05, 1.3250000000002843e-05, 1.3222000000000234e-05, 1.3180999999997528e-05, 1.3792000000002053e-05, 1.3819000000001719e-05, 1.3222999999999707e-05, 1.3235999999999803e-05, 1.3264000000002413e-05, 1.3165999999998484e-05]</msg>
<status status="PASS" starttime="20201110 08:34:40.217" endtime="20201110 08:34:40.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.212" endtime="20201110 08:34:40.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.222" endtime="20201110 08:34:40.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:40.226" endtime="20201110 08:34:40.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.224" endtime="20201110 08:34:40.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.220" endtime="20201110 08:34:40.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.858" endtime="20201110 08:34:40.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.857" endtime="20201110 08:34:40.251"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.263" endtime="20201110 08:34:40.279"></status>
</kw>
<msg timestamp="20201110 08:34:40.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.262" endtime="20201110 08:34:40.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.280" endtime="20201110 08:34:40.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.283" endtime="20201110 08:34:40.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.259" endtime="20201110 08:34:40.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.257" endtime="20201110 08:34:40.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.291" endtime="20201110 08:34:40.578"></status>
</kw>
<msg timestamp="20201110 08:34:40.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030121778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030135625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.290" endtime="20201110 08:34:40.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030121778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030135625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.582" endtime="20201110 08:34:40.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.590" endtime="20201110 08:34:40.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.287" endtime="20201110 08:34:40.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.286" endtime="20201110 08:34:40.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.597" level="INFO">${RESULT} = [{'time': 0.030135625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.030156764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:40.594" endtime="20201110 08:34:40.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:40.611" level="INFO">${ACCURACY} = {'source_diff': [1.3847000000000859e-05, 1.383299999999782e-05, 1.5014000000000693e-05, 1.4444000000002344e-05, 1.4416999999999208e-05, 1.4429999999999304e-05, 1.4457999999998444e-05, 1.50140000000006...</msg>
<status status="PASS" starttime="20201110 08:34:40.598" endtime="20201110 08:34:40.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.615" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:34:40.614" endtime="20201110 08:34:40.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.618" level="INFO">VALUE: [1.3847000000000859e-05, 1.383299999999782e-05, 1.5014000000000693e-05, 1.4444000000002344e-05, 1.4416999999999208e-05, 1.4429999999999304e-05, 1.4457999999998444e-05, 1.5014000000000693e-05, 1.3819000000001719e-05, 1.4402000000000165e-05, 1.4431000000002248e-05, 1.5041999999999833e-05, 1.3834000000000762e-05, 1.5055999999999403e-05, 1.4459000000001387e-05, 1.3820000000001192e-05, 1.4485999999997584e-05, 1.4444000000002344e-05, 1.3833000000001289e-05, 1.4430000000002774e-05, 1.4443999999998874e-05, 1.4472000000001484e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.381899999999825e-05, 1.4431000000002248e-05, 1.4444000000002344e-05, 1.4457999999998444e-05, 1.3833000000001289e-05, 1.3874999999999998e-05, 1.4471999999998014e-05, 1.384699999999739e-05, 1.4457999999998444e-05, 1.3833000000001289e-05, 1.4431000000002248e-05, 1.4416999999999208e-05, 1.3833000000001289e-05, 1.4444999999998348e-05, 1.3902999999999138e-05, 1.4429999999999304e-05, 1.4457999999998444e-05, 1.4443999999998874e-05, 1.4429999999999304e-05, 1.5055999999999403e-05, 1.3819000000001719e-05, 1.3833000000001289e-05, 1.4444000000002344e-05, 1.3834000000000762e-05, 1.4389000000003538e-05, 1.5028000000000263e-05]</msg>
<status status="PASS" starttime="20201110 08:34:40.617" endtime="20201110 08:34:40.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.612" endtime="20201110 08:34:40.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.622" endtime="20201110 08:34:40.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:40.625" endtime="20201110 08:34:40.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.624" endtime="20201110 08:34:40.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.620" endtime="20201110 08:34:40.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.252" endtime="20201110 08:34:40.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.251" endtime="20201110 08:34:40.646"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.655" endtime="20201110 08:34:40.670"></status>
</kw>
<msg timestamp="20201110 08:34:40.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.653" endtime="20201110 08:34:40.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.672" endtime="20201110 08:34:40.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.674" endtime="20201110 08:34:40.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.650" endtime="20201110 08:34:40.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.648" endtime="20201110 08:34:40.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.683" endtime="20201110 08:34:40.972"></status>
</kw>
<msg timestamp="20201110 08:34:40.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022340125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022355764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.682" endtime="20201110 08:34:40.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022340125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022355764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.976" endtime="20201110 08:34:40.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.984" endtime="20201110 08:34:40.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.679" endtime="20201110 08:34:40.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.677" endtime="20201110 08:34:40.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.991" level="INFO">${RESULT} = [{'time': 0.022355764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.563900000000132e-05, 'source_diff': 1.563900000000132e-05}, {'time': 0.022381667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:40.988" endtime="20201110 08:34:40.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:41.005" level="INFO">${ACCURACY} = {'source_diff': [1.563900000000132e-05, 1.5084000000002012e-05, 1.561100000000218e-05, 1.504100000000036e-05, 1.563900000000132e-05, 1.5041999999999833e-05, 1.504100000000036e-05, 1.5055999999999403e-...</msg>
<status status="PASS" starttime="20201110 08:34:40.992" endtime="20201110 08:34:41.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.009" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:34:41.008" endtime="20201110 08:34:41.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.012" level="INFO">VALUE: [1.563900000000132e-05, 1.5084000000002012e-05, 1.561100000000218e-05, 1.504100000000036e-05, 1.563900000000132e-05, 1.5041999999999833e-05, 1.504100000000036e-05, 1.5055999999999403e-05, 1.5055999999999403e-05, 1.504100000000036e-05, 1.5665999999997515e-05, 1.5125000000001249e-05, 1.5041999999999833e-05, 1.5666000000000985e-05, 1.5694000000000125e-05, 1.5041999999999833e-05, 1.565300000000089e-05, 1.563900000000132e-05, 1.562500000000175e-05, 1.4985999999998084e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.563900000000132e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.5055999999999403e-05, 1.504100000000036e-05, 1.565300000000089e-05, 1.504100000000036e-05, 1.501299999999775e-05, 1.4971999999998514e-05, 1.565300000000089e-05, 1.565299999999742e-05, 1.562499999999828e-05, 1.5014000000000693e-05, 1.505499999999993e-05, 1.5056000000002873e-05, 1.5041999999999833e-05, 1.5056000000002873e-05, 1.5679999999997085e-05, 1.558299999999957e-05, 1.563899999999785e-05, 1.502700000000079e-05, 1.563899999999785e-05, 1.5055999999999403e-05, 1.504100000000036e-05, 1.504100000000036e-05, 1.5041999999999833e-05, 1.565300000000089e-05, 1.563900000000132e-05]</msg>
<status status="PASS" starttime="20201110 08:34:41.010" endtime="20201110 08:34:41.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.006" endtime="20201110 08:34:41.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.015" endtime="20201110 08:34:41.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.019" endtime="20201110 08:34:41.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.017" endtime="20201110 08:34:41.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.014" endtime="20201110 08:34:41.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.647" endtime="20201110 08:34:41.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.646" endtime="20201110 08:34:41.043"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.061" endtime="20201110 08:34:41.080"></status>
</kw>
<msg timestamp="20201110 08:34:41.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.058" endtime="20201110 08:34:41.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.083" endtime="20201110 08:34:41.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.088" endtime="20201110 08:34:41.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.053" endtime="20201110 08:34:41.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.048" endtime="20201110 08:34:41.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.107" endtime="20201110 08:34:41.400"></status>
</kw>
<msg timestamp="20201110 08:34:41.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036677014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036693875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.104" endtime="20201110 08:34:41.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036677014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036693875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.404" endtime="20201110 08:34:41.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.413" endtime="20201110 08:34:41.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.099" endtime="20201110 08:34:41.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.095" endtime="20201110 08:34:41.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:41.419" level="INFO">${RESULT} = [{'time': 0.036693875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.686099999999996e-05, 'source_diff': 1.686099999999996e-05}, {'time': 0.036721931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:41.416" endtime="20201110 08:34:41.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:41.433" level="INFO">${ACCURACY} = {'source_diff': [1.686099999999996e-05, 1.6250000000002374e-05, 1.686099999999996e-05, 1.686099999999996e-05, 1.6249999999995435e-05, 1.6221999999996295e-05, 1.6250000000002374e-05, 1.5653000000004358...</msg>
<status status="PASS" starttime="20201110 08:34:41.420" endtime="20201110 08:34:41.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.437" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:34:41.436" endtime="20201110 08:34:41.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.440" level="INFO">VALUE: [1.686099999999996e-05, 1.6250000000002374e-05, 1.686099999999996e-05, 1.686099999999996e-05, 1.6249999999995435e-05, 1.6221999999996295e-05, 1.6250000000002374e-05, 1.5653000000004358e-05, 1.6263999999995005e-05, 1.6237000000002277e-05, 1.686099999999996e-05, 1.6264000000001944e-05, 1.563899999999785e-05, 1.6250000000002374e-05, 1.6249999999995435e-05, 1.6250000000002374e-05, 1.6249999999995435e-05, 1.6263999999995005e-05, 1.686099999999996e-05, 1.6250000000002374e-05, 1.684700000000039e-05, 1.561099999999871e-05, 1.687499999999953e-05, 1.686099999999996e-05, 1.68889999999991e-05, 1.684700000000039e-05, 1.683300000000082e-05, 1.6249999999995435e-05, 1.6195000000003568e-05, 1.6834000000000293e-05, 1.6249999999995435e-05, 1.6250000000002374e-05, 1.6292000000001083e-05, 1.6249999999995435e-05, 1.6250000000002374e-05, 1.6249999999995435e-05, 1.6847999999999863e-05, 1.565299999999742e-05, 1.6263999999995005e-05, 1.6221999999996295e-05, 1.6193999999997155e-05, 1.623699999999534e-05, 1.6278000000001513e-05, 1.6250000000002374e-05, 1.6778000000002014e-05, 1.687499999999953e-05, 1.5653000000004358e-05, 1.6250000000002374e-05, 1.6264000000001944e-05, 1.6320000000000223e-05]</msg>
<status status="PASS" starttime="20201110 08:34:41.439" endtime="20201110 08:34:41.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.434" endtime="20201110 08:34:41.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.444" endtime="20201110 08:34:41.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.447" endtime="20201110 08:34:41.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.445" endtime="20201110 08:34:41.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.442" endtime="20201110 08:34:41.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.045" endtime="20201110 08:34:41.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.044" endtime="20201110 08:34:41.468"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.478" endtime="20201110 08:34:41.493"></status>
</kw>
<msg timestamp="20201110 08:34:41.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.476" endtime="20201110 08:34:41.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.495" endtime="20201110 08:34:41.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.497" endtime="20201110 08:34:41.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.473" endtime="20201110 08:34:41.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.471" endtime="20201110 08:34:41.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.506" endtime="20201110 08:34:41.794"></status>
</kw>
<msg timestamp="20201110 08:34:41.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023195181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.505" endtime="20201110 08:34:41.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023195181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.798" endtime="20201110 08:34:41.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.807" endtime="20201110 08:34:41.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.502" endtime="20201110 08:34:41.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.500" endtime="20201110 08:34:41.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:41.813" level="INFO">${RESULT} = [{'time': 0.023213306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.812500000000078e-05, 'source_diff': 1.812500000000078e-05}, {'time': 0.023235847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:41.810" endtime="20201110 08:34:41.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:41.827" level="INFO">${ACCURACY} = {'source_diff': [1.812500000000078e-05, 1.7444000000001875e-05, 1.7459000000000918e-05, 1.684699999999692e-05, 1.7472000000001014e-05, 1.688900000000257e-05, 1.8056000000002403e-05, 1.7458000000001445...</msg>
<status status="PASS" starttime="20201110 08:34:41.814" endtime="20201110 08:34:41.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.832" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:34:41.830" endtime="20201110 08:34:41.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.834" level="INFO">VALUE: [1.812500000000078e-05, 1.7444000000001875e-05, 1.7459000000000918e-05, 1.684699999999692e-05, 1.7472000000001014e-05, 1.688900000000257e-05, 1.8056000000002403e-05, 1.7458000000001445e-05, 1.744499999999788e-05, 1.745899999999745e-05, 1.7457999999997975e-05, 1.7458000000001445e-05, 1.7459000000000918e-05, 1.6791999999998114e-05, 1.7415999999999265e-05, 1.7472000000001014e-05, 1.7443999999998405e-05, 1.7443999999998405e-05, 1.7459000000000918e-05, 1.7458000000001445e-05, 1.8056000000002403e-05, 1.687499999999953e-05, 1.687499999999953e-05, 1.743099999999831e-05, 1.686099999999996e-05, 1.7415999999999265e-05, 1.7500000000000154e-05, 1.7443999999998405e-05, 1.6806000000001153e-05, 1.737500000000003e-05, 1.7457999999997975e-05, 1.684700000000039e-05, 1.806899999999903e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.744499999999788e-05, 1.8055999999998934e-05, 1.806899999999903e-05, 1.744499999999788e-05, 1.745899999999745e-05, 1.7472000000001014e-05, 1.744499999999788e-05, 1.686099999999996e-05, 1.744499999999788e-05, 1.684700000000039e-05, 1.7473000000000488e-05, 1.684700000000039e-05, 1.8055999999998934e-05, 1.686099999999996e-05, 1.6763999999998974e-05]</msg>
<status status="PASS" starttime="20201110 08:34:41.833" endtime="20201110 08:34:41.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.828" endtime="20201110 08:34:41.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.838" endtime="20201110 08:34:41.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.842" endtime="20201110 08:34:41.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.840" endtime="20201110 08:34:41.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.836" endtime="20201110 08:34:41.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.469" endtime="20201110 08:34:41.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.468" endtime="20201110 08:34:41.863"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.871" endtime="20201110 08:34:41.887"></status>
</kw>
<msg timestamp="20201110 08:34:41.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.870" endtime="20201110 08:34:41.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.888" endtime="20201110 08:34:41.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.891" endtime="20201110 08:34:41.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.867" endtime="20201110 08:34:41.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.865" endtime="20201110 08:34:41.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.900" endtime="20201110 08:34:42.189"></status>
</kw>
<msg timestamp="20201110 08:34:42.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022300389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.898" endtime="20201110 08:34:42.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022300389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.193" endtime="20201110 08:34:42.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.202" endtime="20201110 08:34:42.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.896" endtime="20201110 08:34:42.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.894" endtime="20201110 08:34:42.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.209" level="INFO">${RESULT} = [{'time': 0.022300389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.869499999999913e-05, 'source_diff': 1.869499999999913e-05}, {'time': 0.022329, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:34:42.205" endtime="20201110 08:34:42.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:42.222" level="INFO">${ACCURACY} = {'source_diff': [1.869499999999913e-05, 1.865300000000042e-05, 1.8069999999998504e-05, 1.862499999999781e-05, 1.80690000000025e-05, 1.8680000000000085e-05, 1.863899999999738e-05, 1.8055999999998934e-0...</msg>
<status status="PASS" starttime="20201110 08:34:42.210" endtime="20201110 08:34:42.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.227" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:34:42.226" endtime="20201110 08:34:42.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.229" level="INFO">VALUE: [1.869499999999913e-05, 1.865300000000042e-05, 1.8069999999998504e-05, 1.862499999999781e-05, 1.80690000000025e-05, 1.8680000000000085e-05, 1.863899999999738e-05, 1.8055999999998934e-05, 1.8638000000001376e-05, 1.8598000000001613e-05, 1.862500000000128e-05, 1.8084000000001543e-05, 1.8680000000000085e-05, 1.80829999999986e-05, 1.865300000000042e-05, 1.866699999999999e-05, 1.866699999999999e-05, 1.80829999999986e-05, 1.8680000000000085e-05, 1.805499999999946e-05, 1.865300000000042e-05, 1.8666000000000516e-05, 1.806899999999903e-05, 1.8041999999999364e-05, 1.865300000000042e-05, 1.805499999999946e-05, 1.806899999999903e-05, 1.866699999999999e-05, 1.868099999999956e-05, 1.868099999999956e-05, 1.86950000000026e-05, 1.8056000000002403e-05, 1.805499999999946e-05, 1.866699999999999e-05, 1.866699999999999e-05, 1.865300000000042e-05, 1.8069999999998504e-05, 1.866699999999999e-05, 1.813900000000035e-05, 1.809700000000164e-05, 1.8665999999997046e-05, 1.806899999999903e-05, 1.80690000000025e-05, 1.812500000000078e-05, 1.8069999999998504e-05, 1.8041999999999364e-05, 1.8027999999999794e-05, 1.868099999999956e-05, 1.866699999999999e-05, 1.8069999999998504e-05]</msg>
<status status="PASS" starttime="20201110 08:34:42.228" endtime="20201110 08:34:42.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.223" endtime="20201110 08:34:42.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.233" endtime="20201110 08:34:42.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:42.236" endtime="20201110 08:34:42.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.235" endtime="20201110 08:34:42.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.231" endtime="20201110 08:34:42.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.864" endtime="20201110 08:34:42.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.863" endtime="20201110 08:34:42.257"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.266" endtime="20201110 08:34:42.281"></status>
</kw>
<msg timestamp="20201110 08:34:42.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.264" endtime="20201110 08:34:42.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.283" endtime="20201110 08:34:42.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.285" endtime="20201110 08:34:42.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.262" endtime="20201110 08:34:42.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.260" endtime="20201110 08:34:42.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.294" endtime="20201110 08:34:42.580"></status>
</kw>
<msg timestamp="20201110 08:34:42.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022617111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022636389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.292" endtime="20201110 08:34:42.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022617111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022636389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.584" endtime="20201110 08:34:42.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.592" endtime="20201110 08:34:42.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.290" endtime="20201110 08:34:42.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.288" endtime="20201110 08:34:42.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.600" level="INFO">${RESULT} = [{'time': 0.022636389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9278000000001044e-05, 'source_diff': 1.9278000000001044e-05}, {'time': 0.022661139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:42.596" endtime="20201110 08:34:42.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:42.615" level="INFO">${ACCURACY} = {'source_diff': [1.9278000000001044e-05, 1.9264000000001474e-05, 1.929100000000114e-05, 1.987499999999906e-05, 1.9278000000001044e-05, 1.9264000000001474e-05, 1.9249999999998435e-05, 1.866699999999999...</msg>
<status status="PASS" starttime="20201110 08:34:42.601" endtime="20201110 08:34:42.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.621" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:34:42.620" endtime="20201110 08:34:42.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.624" level="INFO">VALUE: [1.9278000000001044e-05, 1.9264000000001474e-05, 1.929100000000114e-05, 1.987499999999906e-05, 1.9278000000001044e-05, 1.9264000000001474e-05, 1.9249999999998435e-05, 1.866699999999999e-05, 1.9264000000001474e-05, 1.9264000000001474e-05, 1.9278000000001044e-05, 1.979099999999817e-05, 1.9319999999999754e-05, 1.9264000000001474e-05, 1.9235999999998865e-05, 1.9263000000002e-05, 1.987499999999906e-05, 1.9264000000001474e-05, 1.927700000000157e-05, 1.927700000000157e-05, 1.927700000000157e-05, 1.9208000000003195e-05, 1.85829999999991e-05, 1.987499999999906e-05, 1.987499999999906e-05, 1.927700000000157e-05, 1.926299999999853e-05, 1.9306000000000184e-05, 1.988899999999863e-05, 1.9264000000001474e-05, 1.98890000000021e-05, 1.9277999999997575e-05, 1.9264000000001474e-05, 1.9278000000001044e-05, 1.9278000000001044e-05, 1.9263999999998005e-05, 1.865300000000042e-05, 1.933299999999985e-05, 1.8680000000000085e-05, 1.9250000000001904e-05, 1.9263999999998005e-05, 1.990300000000167e-05, 1.987499999999906e-05, 1.9292000000000614e-05, 1.987499999999906e-05, 1.9278000000001044e-05, 1.9292000000000614e-05, 1.9278000000001044e-05, 1.92769999999981e-05, 1.987499999999906e-05]</msg>
<status status="PASS" starttime="20201110 08:34:42.623" endtime="20201110 08:34:42.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.616" endtime="20201110 08:34:42.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.628" endtime="20201110 08:34:42.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:42.633" endtime="20201110 08:34:42.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.631" endtime="20201110 08:34:42.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.626" endtime="20201110 08:34:42.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.258" endtime="20201110 08:34:42.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.257" endtime="20201110 08:34:42.655"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.663" endtime="20201110 08:34:42.679"></status>
</kw>
<msg timestamp="20201110 08:34:42.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.662" endtime="20201110 08:34:42.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.680" endtime="20201110 08:34:42.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.683" endtime="20201110 08:34:42.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.659" endtime="20201110 08:34:42.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.657" endtime="20201110 08:34:42.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.692" endtime="20201110 08:34:42.980"></status>
</kw>
<msg timestamp="20201110 08:34:42.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.690" endtime="20201110 08:34:42.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.984" endtime="20201110 08:34:42.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.993" endtime="20201110 08:34:42.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.688" endtime="20201110 08:34:42.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.686" endtime="20201110 08:34:42.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.999" level="INFO">${RESULT} = [{'time': 0.022414375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0513999999999255e-05, 'source_diff': 2.0513999999999255e-05}, {'time': 0.022444972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:42.996" endtime="20201110 08:34:43.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:43.013" level="INFO">${ACCURACY} = {'source_diff': [2.0513999999999255e-05, 2.0458000000000975e-05, 2.0513999999999255e-05, 2.054100000000239e-05, 2.0458000000000975e-05, 1.990300000000167e-05, 2.0527999999998825e-05, 2.049999999999968...</msg>
<status status="PASS" starttime="20201110 08:34:43.000" endtime="20201110 08:34:43.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.018" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:34:43.017" endtime="20201110 08:34:43.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.020" level="INFO">VALUE: [2.0513999999999255e-05, 2.0458000000000975e-05, 2.0513999999999255e-05, 2.054100000000239e-05, 2.0458000000000975e-05, 1.990300000000167e-05, 2.0527999999998825e-05, 2.0499999999999685e-05, 2.0471999999997076e-05, 2.0527999999998825e-05, 2.113899999999988e-05, 2.0472000000000545e-05, 2.0486000000000115e-05, 1.987500000000253e-05, 2.047300000000002e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 1.987499999999906e-05, 2.051299999999978e-05, 2.1112000000000214e-05, 1.987500000000253e-05, 2.0499999999999685e-05, 1.987499999999906e-05, 2.0486000000000115e-05, 2.0472000000000545e-05, 1.986099999999949e-05, 2.1084000000001074e-05, 1.987499999999906e-05, 1.987500000000253e-05, 2.0472000000000545e-05, 2.0472000000000545e-05, 2.047300000000002e-05, 2.0486000000000115e-05, 2.0472000000000545e-05, 1.987499999999906e-05, 1.986099999999949e-05, 2.0486000000000115e-05, 1.987499999999906e-05, 2.0486000000000115e-05, 2.047300000000002e-05, 1.987499999999906e-05, 2.10830000000016e-05, 2.0458000000000975e-05, 2.0486000000000115e-05, 1.9901999999998726e-05, 1.987499999999906e-05, 2.0429999999998366e-05, 1.986099999999949e-05, 2.10830000000016e-05, 2.0486000000000115e-05]</msg>
<status status="PASS" starttime="20201110 08:34:43.019" endtime="20201110 08:34:43.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.014" endtime="20201110 08:34:43.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.024" endtime="20201110 08:34:43.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.027" endtime="20201110 08:34:43.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.026" endtime="20201110 08:34:43.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.022" endtime="20201110 08:34:43.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.655" endtime="20201110 08:34:43.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.655" endtime="20201110 08:34:43.048"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.057" endtime="20201110 08:34:43.072"></status>
</kw>
<msg timestamp="20201110 08:34:43.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.055" endtime="20201110 08:34:43.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.074" endtime="20201110 08:34:43.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.076" endtime="20201110 08:34:43.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.052" endtime="20201110 08:34:43.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.050" endtime="20201110 08:34:43.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.085" endtime="20201110 08:34:43.372"></status>
</kw>
<msg timestamp="20201110 08:34:43.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.084" endtime="20201110 08:34:43.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.377" endtime="20201110 08:34:43.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.385" endtime="20201110 08:34:43.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.081" endtime="20201110 08:34:43.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.079" endtime="20201110 08:34:43.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.392" level="INFO">${RESULT} = [{'time': 0.022301292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.022337014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:43.389" endtime="20201110 08:34:43.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:43.406" level="INFO">${ACCURACY} = {'source_diff': [2.162500000000081e-05, 2.1069999999998035e-05, 2.1665999999996577e-05, 2.1056000000001934e-05, 2.1084000000001074e-05, 2.113899999999988e-05, 2.10830000000016e-05, 2.168099999999909e-...</msg>
<status status="PASS" starttime="20201110 08:34:43.393" endtime="20201110 08:34:43.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.410" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:34:43.409" endtime="20201110 08:34:43.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.413" level="INFO">VALUE: [2.162500000000081e-05, 2.1069999999998035e-05, 2.1665999999996577e-05, 2.1056000000001934e-05, 2.1084000000001074e-05, 2.113899999999988e-05, 2.10830000000016e-05, 2.168099999999909e-05, 2.1070000000001504e-05, 2.106899999999856e-05, 2.10969999999977e-05, 2.111100000000074e-05, 2.10830000000016e-05, 2.108299999999813e-05, 2.1679999999999616e-05, 2.1680000000003086e-05, 2.10830000000016e-05, 2.1721999999998326e-05, 2.1707999999998756e-05, 2.10830000000016e-05, 2.1694000000002656e-05, 2.1097999999997175e-05, 2.108299999999813e-05, 2.1083999999997605e-05, 2.1084000000001074e-05, 2.1666000000000046e-05, 2.1055999999998465e-05, 2.1679999999999616e-05, 2.106900000000203e-05, 2.168099999999909e-05, 2.1055999999998465e-05, 2.168100000000256e-05, 2.17090000000017e-05, 2.1693999999999186e-05, 2.1098000000000644e-05, 2.1098000000000644e-05, 2.1070000000001504e-05, 2.104099999999942e-05, 2.113899999999988e-05, 2.108299999999813e-05, 2.1083999999997605e-05, 2.1693999999999186e-05, 2.108299999999813e-05, 2.168099999999909e-05, 2.169499999999866e-05, 2.108299999999813e-05, 2.108299999999813e-05, 2.1083999999997605e-05, 2.109700000000117e-05, 2.169499999999866e-05]</msg>
<status status="PASS" starttime="20201110 08:34:43.411" endtime="20201110 08:34:43.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.407" endtime="20201110 08:34:43.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.416" endtime="20201110 08:34:43.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.420" endtime="20201110 08:34:43.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.418" endtime="20201110 08:34:43.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.415" endtime="20201110 08:34:43.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.049" endtime="20201110 08:34:43.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.048" endtime="20201110 08:34:43.441"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.449" endtime="20201110 08:34:43.464"></status>
</kw>
<msg timestamp="20201110 08:34:43.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.448" endtime="20201110 08:34:43.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.466" endtime="20201110 08:34:43.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.468" endtime="20201110 08:34:43.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.445" endtime="20201110 08:34:43.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.443" endtime="20201110 08:34:43.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.477" endtime="20201110 08:34:43.765"></status>
</kw>
<msg timestamp="20201110 08:34:43.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022319917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.476" endtime="20201110 08:34:43.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022319917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.769" endtime="20201110 08:34:43.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.778" endtime="20201110 08:34:43.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.473" endtime="20201110 08:34:43.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.471" endtime="20201110 08:34:43.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.786" level="INFO">${RESULT} = [{'time': 0.022319917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.288900000000163e-05, 'source_diff': 2.288900000000163e-05}, {'time': 0.022352028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:43.782" endtime="20201110 08:34:43.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:43.799" level="INFO">${ACCURACY} = {'source_diff': [2.288900000000163e-05, 2.2264000000001005e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.294499999999991e-05, 2.2292000000000145e-05, 2.229100000000067e-05, 2.169500000000213e...</msg>
<status status="PASS" starttime="20201110 08:34:43.787" endtime="20201110 08:34:43.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.804" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:34:43.803" endtime="20201110 08:34:43.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.806" level="INFO">VALUE: [2.288900000000163e-05, 2.2264000000001005e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.294499999999991e-05, 2.2292000000000145e-05, 2.229100000000067e-05, 2.169500000000213e-05, 2.287500000000206e-05, 2.229100000000067e-05, 2.166699999999952e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.287500000000206e-05, 2.2221999999998826e-05, 2.291700000000077e-05, 2.169499999999866e-05, 2.2305999999999715e-05, 2.2278000000000575e-05, 2.2320000000002754e-05, 2.2847999999998925e-05, 2.1722000000001795e-05, 2.288899999999816e-05, 2.169500000000213e-05, 2.230500000000024e-05, 2.2292000000000145e-05, 2.2902000000001727e-05, 2.2264000000001005e-05, 2.2305999999999715e-05, 2.1693999999999186e-05, 2.2278000000000575e-05, 2.283299999999988e-05, 2.2292000000000145e-05, 2.165299999999995e-05, 2.2292000000000145e-05, 2.169499999999866e-05, 2.2292000000000145e-05, 2.287500000000206e-05, 2.229100000000067e-05, 2.288899999999816e-05, 2.2292000000000145e-05, 2.2263999999997536e-05, 2.231899999999981e-05, 2.229100000000067e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.1750000000000935e-05, 2.288900000000163e-05, 2.291700000000077e-05]</msg>
<status status="PASS" starttime="20201110 08:34:43.805" endtime="20201110 08:34:43.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.800" endtime="20201110 08:34:43.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.810" endtime="20201110 08:34:43.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.814" endtime="20201110 08:34:43.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.812" endtime="20201110 08:34:43.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.808" endtime="20201110 08:34:43.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.442" endtime="20201110 08:34:43.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.441" endtime="20201110 08:34:43.835"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.843" endtime="20201110 08:34:43.859"></status>
</kw>
<msg timestamp="20201110 08:34:43.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.842" endtime="20201110 08:34:43.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.861" endtime="20201110 08:34:43.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.863" endtime="20201110 08:34:43.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.839" endtime="20201110 08:34:43.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.837" endtime="20201110 08:34:43.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.872" endtime="20201110 08:34:44.159"></status>
</kw>
<msg timestamp="20201110 08:34:44.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.871" endtime="20201110 08:34:44.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.164" endtime="20201110 08:34:44.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.172" endtime="20201110 08:34:44.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.868" endtime="20201110 08:34:44.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.867" endtime="20201110 08:34:44.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:44.179" level="INFO">${RESULT} = [{'time': 0.022424833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.354100000000192e-05, 'source_diff': 2.354100000000192e-05}, {'time': 0.022452847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:44.175" endtime="20201110 08:34:44.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:44.192" level="INFO">${ACCURACY} = {'source_diff': [2.354100000000192e-05, 2.29030000000012e-05, 2.290299999999773e-05, 2.356900000000106e-05, 2.3472000000000076e-05, 2.29030000000012e-05, 2.3513999999998786e-05, 2.288899999999816e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:44.180" endtime="20201110 08:34:44.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.197" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:34:44.196" endtime="20201110 08:34:44.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.199" level="INFO">VALUE: [2.354100000000192e-05, 2.29030000000012e-05, 2.290299999999773e-05, 2.356900000000106e-05, 2.3472000000000076e-05, 2.29030000000012e-05, 2.3513999999998786e-05, 2.288899999999816e-05, 2.2901999999998257e-05, 2.29030000000012e-05, 2.290299999999773e-05, 2.3499999999999216e-05, 2.3486000000003115e-05, 2.40970000000007e-05, 2.3472000000000076e-05, 2.288899999999816e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.291700000000077e-05, 2.3500000000002685e-05, 2.3513999999998786e-05, 2.3499999999999216e-05, 2.3458000000000506e-05, 2.287499999999859e-05, 2.3485999999999646e-05, 2.3500000000002685e-05, 2.3514000000002255e-05, 2.3499999999999216e-05, 2.354100000000192e-05, 2.3499999999999216e-05, 2.2901999999998257e-05, 2.3499999999999216e-05, 2.3499999999999216e-05, 2.3499999999999216e-05, 2.3485999999999646e-05, 2.287500000000206e-05, 2.3512999999999312e-05, 2.288900000000163e-05, 2.29030000000012e-05, 2.412499999999984e-05, 2.344500000000041e-05, 2.3500000000002685e-05, 2.288900000000163e-05, 2.288900000000163e-05, 2.3513999999998786e-05, 2.288899999999816e-05, 2.3472000000000076e-05, 2.3499999999999216e-05, 2.288900000000163e-05, 2.288899999999816e-05]</msg>
<status status="PASS" starttime="20201110 08:34:44.198" endtime="20201110 08:34:44.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.193" endtime="20201110 08:34:44.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.203" endtime="20201110 08:34:44.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:44.207" endtime="20201110 08:34:44.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.205" endtime="20201110 08:34:44.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.201" endtime="20201110 08:34:44.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.835" endtime="20201110 08:34:44.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.835" endtime="20201110 08:34:44.227"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.236" endtime="20201110 08:34:44.252"></status>
</kw>
<msg timestamp="20201110 08:34:44.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.235" endtime="20201110 08:34:44.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.254" endtime="20201110 08:34:44.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.256" endtime="20201110 08:34:44.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.232" endtime="20201110 08:34:44.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.230" endtime="20201110 08:34:44.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.265" endtime="20201110 08:34:44.554"></status>
</kw>
<msg timestamp="20201110 08:34:44.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.263" endtime="20201110 08:34:44.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.558" endtime="20201110 08:34:44.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.567" endtime="20201110 08:34:44.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.261" endtime="20201110 08:34:44.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.259" endtime="20201110 08:34:44.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:44.573" level="INFO">${RESULT} = [{'time': 0.022512639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4708000000001756e-05, 'source_diff': 2.4708000000001756e-05}, {'time': 0.022549389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:44.570" endtime="20201110 08:34:44.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:44.587" level="INFO">${ACCURACY} = {'source_diff': [2.4708000000001756e-05, 2.4070000000001035e-05, 2.411100000000027e-05, 2.4707999999998287e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.4137999999999937e-05, 2.4096999999997232e-...</msg>
<status status="PASS" starttime="20201110 08:34:44.574" endtime="20201110 08:34:44.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.591" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:34:44.590" endtime="20201110 08:34:44.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.594" level="INFO">VALUE: [2.4708000000001756e-05, 2.4070000000001035e-05, 2.411100000000027e-05, 2.4707999999998287e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.4137999999999937e-05, 2.4096999999997232e-05, 2.404100000000242e-05, 2.40970000000007e-05, 2.4707999999998287e-05, 2.413900000000288e-05, 2.4082999999997662e-05, 2.412499999999984e-05, 2.4082999999997662e-05, 2.470900000000123e-05, 2.4069999999997566e-05, 2.469499999999819e-05, 2.4694000000002186e-05, 2.411100000000027e-05, 2.4180000000002116e-05, 2.4721999999997857e-05, 2.4707999999998287e-05, 2.4084000000000605e-05, 2.415299999999898e-05, 2.411100000000027e-05, 2.468100000000209e-05, 2.412499999999984e-05, 2.4679999999999147e-05, 2.4098000000000175e-05, 2.40970000000007e-05, 2.4707999999998287e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.4736000000000896e-05, 2.4179999999998647e-05, 2.411100000000027e-05, 2.4151999999999507e-05, 2.4708000000001756e-05, 2.4707999999998287e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.4694000000002186e-05, 2.40970000000007e-05, 2.4027999999998856e-05, 2.468099999999862e-05, 2.4735999999997427e-05, 2.412499999999984e-05, 2.4707999999998287e-05]</msg>
<status status="PASS" starttime="20201110 08:34:44.592" endtime="20201110 08:34:44.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.588" endtime="20201110 08:34:44.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.597" endtime="20201110 08:34:44.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:44.601" endtime="20201110 08:34:44.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.599" endtime="20201110 08:34:44.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.596" endtime="20201110 08:34:44.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.228" endtime="20201110 08:34:44.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.228" endtime="20201110 08:34:44.621"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.630" endtime="20201110 08:34:44.646"></status>
</kw>
<msg timestamp="20201110 08:34:44.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.629" endtime="20201110 08:34:44.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.647" endtime="20201110 08:34:44.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.650" endtime="20201110 08:34:44.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.626" endtime="20201110 08:34:44.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.624" endtime="20201110 08:34:44.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.661" endtime="20201110 08:34:44.962"></status>
</kw>
<msg timestamp="20201110 08:34:44.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022253, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:44.658" endtime="20201110 08:34:44.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022253, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:44.966" endtime="20201110 08:34:44.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.975" endtime="20201110 08:34:44.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.655" endtime="20201110 08:34:44.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.653" endtime="20201110 08:34:44.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:44.982" level="INFO">${RESULT} = [{'time': 0.022253, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.593099999999987e-05, 'source_diff': 2.593099999999987e-05}, {'time': 0.022287903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:34:44.978" endtime="20201110 08:34:44.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:44.995" level="INFO">${ACCURACY} = {'source_diff': [2.593099999999987e-05, 2.593099999999987e-05, 2.5278000000000106e-05, 2.4736000000000896e-05, 2.5318999999999342e-05, 2.5318999999999342e-05, 2.5319999999998816e-05, 2.530599999999924...</msg>
<status status="PASS" starttime="20201110 08:34:44.983" endtime="20201110 08:34:44.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.000" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:34:44.999" endtime="20201110 08:34:45.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.002" level="INFO">VALUE: [2.593099999999987e-05, 2.593099999999987e-05, 2.5278000000000106e-05, 2.4736000000000896e-05, 2.5318999999999342e-05, 2.5318999999999342e-05, 2.5319999999998816e-05, 2.5305999999999246e-05, 2.4693999999998717e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.5318999999999342e-05, 2.59170000000003e-05, 2.4736000000000896e-05, 2.5306000000002715e-05, 2.5943999999999967e-05, 2.533300000000238e-05, 2.5305999999999246e-05, 2.536100000000152e-05, 2.5916000000000827e-05, 2.5346999999998482e-05, 2.5291999999999676e-05, 2.59170000000003e-05, 2.538900000000066e-05, 2.5304999999999772e-05, 2.5305999999999246e-05, 2.5320000000002285e-05, 2.5318999999999342e-05, 2.5930000000000397e-05, 2.5305999999999246e-05, 2.5319999999998816e-05, 2.5318999999999342e-05, 2.5304999999999772e-05, 2.5305999999999246e-05, 2.5318999999999342e-05, 2.59170000000003e-05, 2.5319999999998816e-05, 2.537500000000109e-05, 2.5333999999998386e-05, 2.5305999999999246e-05, 2.533300000000238e-05, 2.5304999999999772e-05, 2.4707999999998287e-05, 2.4708000000001756e-05, 2.594499999999944e-05, 2.5249999999997497e-05, 2.4694000000002186e-05, 2.4707999999998287e-05, 2.5304999999999772e-05, 2.5318999999999342e-05]</msg>
<status status="PASS" starttime="20201110 08:34:45.001" endtime="20201110 08:34:45.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.996" endtime="20201110 08:34:45.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.006" endtime="20201110 08:34:45.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:45.009" endtime="20201110 08:34:45.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.008" endtime="20201110 08:34:45.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.004" endtime="20201110 08:34:45.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.622" endtime="20201110 08:34:45.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.622" endtime="20201110 08:34:45.030"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.039" endtime="20201110 08:34:45.057"></status>
</kw>
<msg timestamp="20201110 08:34:45.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.037" endtime="20201110 08:34:45.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.059" endtime="20201110 08:34:45.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.062" endtime="20201110 08:34:45.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.034" endtime="20201110 08:34:45.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.032" endtime="20201110 08:34:45.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.076" endtime="20201110 08:34:45.365"></status>
</kw>
<msg timestamp="20201110 08:34:45.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023181444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023207958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.073" endtime="20201110 08:34:45.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023181444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023207958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.369" endtime="20201110 08:34:45.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.377" endtime="20201110 08:34:45.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.070" endtime="20201110 08:34:45.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.067" endtime="20201110 08:34:45.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:45.384" level="INFO">${RESULT} = [{'time': 0.023207958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6514000000001786e-05, 'source_diff': 2.6514000000001786e-05}, {'time': 0.023242722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:45.381" endtime="20201110 08:34:45.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:45.397" level="INFO">${ACCURACY} = {'source_diff': [2.6514000000001786e-05, 2.5943999999999967e-05, 2.6527000000001882e-05, 2.588900000000116e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.6556000000000496e-05, 2.5943999999999967e-...</msg>
<status status="PASS" starttime="20201110 08:34:45.385" endtime="20201110 08:34:45.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.402" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:34:45.401" endtime="20201110 08:34:45.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.404" level="INFO">VALUE: [2.6514000000001786e-05, 2.5943999999999967e-05, 2.6527000000001882e-05, 2.588900000000116e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.6556000000000496e-05, 2.5943999999999967e-05, 2.6513999999998317e-05, 2.713900000000241e-05, 2.6514000000001786e-05, 2.59170000000003e-05, 2.590299999999726e-05, 2.6514000000001786e-05, 2.5916000000000827e-05, 3.0514000000002317e-05, 2.6513999999998317e-05, 2.5916000000000827e-05, 2.6556000000000496e-05, 2.6527999999997887e-05, 2.6556000000000496e-05, 2.5930000000000397e-05, 2.6527000000001882e-05, 2.590300000000073e-05, 2.6513999999998317e-05, 2.59170000000003e-05, 2.6514000000001786e-05, 2.6514000000001786e-05, 2.7124999999999372e-05, 2.5943999999999967e-05, 2.6499999999998747e-05, 2.5915999999997358e-05, 2.6513999999998317e-05, 2.6513999999998317e-05, 2.6528000000001356e-05, 2.5957999999999537e-05, 2.6528000000001356e-05, 2.6513999999998317e-05, 2.59170000000003e-05, 2.6514000000001786e-05, 2.590300000000073e-05, 2.6527999999997887e-05, 2.59170000000003e-05, 2.6513999999998317e-05, 2.6527999999997887e-05, 2.6526999999998413e-05, 2.593099999999987e-05, 2.6500000000002216e-05, 2.5902000000001257e-05, 2.5985999999998677e-05]</msg>
<status status="PASS" starttime="20201110 08:34:45.403" endtime="20201110 08:34:45.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.398" endtime="20201110 08:34:45.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.408" endtime="20201110 08:34:45.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:45.411" endtime="20201110 08:34:45.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.410" endtime="20201110 08:34:45.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.406" endtime="20201110 08:34:45.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.031" endtime="20201110 08:34:45.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.030" endtime="20201110 08:34:45.432"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.441" endtime="20201110 08:34:45.456"></status>
</kw>
<msg timestamp="20201110 08:34:45.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.439" endtime="20201110 08:34:45.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.458" endtime="20201110 08:34:45.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.460" endtime="20201110 08:34:45.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.437" endtime="20201110 08:34:45.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.435" endtime="20201110 08:34:45.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.476" endtime="20201110 08:34:45.773"></status>
</kw>
<msg timestamp="20201110 08:34:45.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022180694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.472" endtime="20201110 08:34:45.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022180694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.778" endtime="20201110 08:34:45.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.787" endtime="20201110 08:34:45.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.467" endtime="20201110 08:34:45.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.464" endtime="20201110 08:34:45.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:45.794" level="INFO">${RESULT} = [{'time': 0.022180694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7124999999999372e-05, 'source_diff': 2.7124999999999372e-05}, {'time': 0.022221722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:45.791" endtime="20201110 08:34:45.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:45.807" level="INFO">${ACCURACY} = {'source_diff': [2.7124999999999372e-05, 2.7222000000000357e-05, 2.7124999999999372e-05, 2.7722000000000857e-05, 2.7721999999997388e-05, 2.7124999999999372e-05, 2.7138999999998942e-05, 2.7749999999999...</msg>
<status status="PASS" starttime="20201110 08:34:45.795" endtime="20201110 08:34:45.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.812" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:34:45.811" endtime="20201110 08:34:45.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.814" level="INFO">VALUE: [2.7124999999999372e-05, 2.7222000000000357e-05, 2.7124999999999372e-05, 2.7722000000000857e-05, 2.7721999999997388e-05, 2.7124999999999372e-05, 2.7138999999998942e-05, 2.7749999999999997e-05, 2.7138999999998942e-05, 2.7735999999996958e-05, 2.7069000000001092e-05, 2.7110999999999802e-05, 2.718100000000112e-05, 2.7124999999999372e-05, 2.7736000000000427e-05, 2.715300000000198e-05, 2.712500000000284e-05, 2.711100000000327e-05, 2.7124999999999372e-05, 2.715299999999851e-05, 2.7124999999999372e-05, 2.7736000000000427e-05, 2.712500000000284e-05, 2.7749999999999997e-05, 2.769500000000119e-05, 2.7124999999999372e-05, 2.7708000000001287e-05, 2.7138999999998942e-05, 2.7124999999999372e-05, 2.7138999999998942e-05, 2.7137999999999468e-05, 2.7124999999999372e-05, 2.7124999999999372e-05, 2.7110999999999802e-05, 2.7694000000001717e-05, 2.7722000000000857e-05, 2.7124999999999372e-05, 2.7736000000000427e-05, 2.7124999999999372e-05, 2.7138999999998942e-05, 2.7722000000000857e-05, 2.7749999999999997e-05, 2.718100000000112e-05, 2.7138999999998942e-05, 2.7736000000000427e-05, 2.718100000000112e-05, 2.712500000000284e-05, 2.7124999999999372e-05, 2.7124999999999372e-05, 2.7124999999999372e-05]</msg>
<status status="PASS" starttime="20201110 08:34:45.813" endtime="20201110 08:34:45.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.808" endtime="20201110 08:34:45.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.818" endtime="20201110 08:34:45.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:45.821" endtime="20201110 08:34:45.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.820" endtime="20201110 08:34:45.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.816" endtime="20201110 08:34:45.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.433" endtime="20201110 08:34:45.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.433" endtime="20201110 08:34:45.842"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.851" endtime="20201110 08:34:45.866"></status>
</kw>
<msg timestamp="20201110 08:34:45.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.849" endtime="20201110 08:34:45.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.868" endtime="20201110 08:34:45.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.870" endtime="20201110 08:34:45.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.847" endtime="20201110 08:34:45.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.845" endtime="20201110 08:34:45.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.879" endtime="20201110 08:34:46.168"></status>
</kw>
<msg timestamp="20201110 08:34:46.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022149528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.878" endtime="20201110 08:34:46.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022149528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.172" endtime="20201110 08:34:46.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.181" endtime="20201110 08:34:46.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.875" endtime="20201110 08:34:46.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.874" endtime="20201110 08:34:46.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.187" level="INFO">${RESULT} = [{'time': 0.022149528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8347000000001482e-05, 'source_diff': 2.8347000000001482e-05}, {'time': 0.022182514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:46.184" endtime="20201110 08:34:46.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:46.201" level="INFO">${ACCURACY} = {'source_diff': [2.8347000000001482e-05, 2.8347000000001482e-05, 2.77369999999999e-05, 2.894500000000244e-05, 2.8333000000001912e-05, 2.8346999999998013e-05, 2.7736000000000427e-05, 2.7736000000000427...</msg>
<status status="PASS" starttime="20201110 08:34:46.188" endtime="20201110 08:34:46.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.205" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:34:46.204" endtime="20201110 08:34:46.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.208" level="INFO">VALUE: [2.8347000000001482e-05, 2.8347000000001482e-05, 2.77369999999999e-05, 2.894500000000244e-05, 2.8333000000001912e-05, 2.8346999999998013e-05, 2.7736000000000427e-05, 2.7736000000000427e-05, 2.7736000000000427e-05, 2.8957999999999068e-05, 2.8347000000001482e-05, 2.8333999999997916e-05, 2.8957999999999068e-05, 2.8347000000001482e-05, 2.8332999999998443e-05, 2.7736000000000427e-05, 2.894499999999897e-05, 2.8334000000001386e-05, 2.8346999999998013e-05, 2.89309999999994e-05, 2.8361000000001052e-05, 2.8332999999998443e-05, 2.8348000000000956e-05, 2.8332999999998443e-05, 2.8319000000002342e-05, 2.895899999999854e-05, 2.8318999999998873e-05, 2.897299999999811e-05, 2.8333999999997916e-05, 2.8333000000001912e-05, 2.89309999999994e-05, 2.894499999999897e-05, 2.8304999999999303e-05, 2.8346999999998013e-05, 2.8318999999998873e-05, 2.8333999999997916e-05, 2.8361000000001052e-05, 2.8332999999998443e-05, 2.8333000000001912e-05, 2.7777999999999137e-05, 2.7722000000000857e-05, 2.769500000000119e-05, 2.8346999999998013e-05, 2.841699999999933e-05, 2.8320000000001816e-05, 2.8346999999998013e-05, 2.8986000000001677e-05, 2.8347000000001482e-05, 2.7749999999999997e-05, 2.8347000000001482e-05]</msg>
<status status="PASS" starttime="20201110 08:34:46.206" endtime="20201110 08:34:46.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.202" endtime="20201110 08:34:46.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.211" endtime="20201110 08:34:46.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.215" endtime="20201110 08:34:46.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.213" endtime="20201110 08:34:46.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.210" endtime="20201110 08:34:46.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.843" endtime="20201110 08:34:46.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.843" endtime="20201110 08:34:46.235"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.244" endtime="20201110 08:34:46.259"></status>
</kw>
<msg timestamp="20201110 08:34:46.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.242" endtime="20201110 08:34:46.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.261" endtime="20201110 08:34:46.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.263" endtime="20201110 08:34:46.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.240" endtime="20201110 08:34:46.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.238" endtime="20201110 08:34:46.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.272" endtime="20201110 08:34:46.559"></status>
</kw>
<msg timestamp="20201110 08:34:46.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022174042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.270" endtime="20201110 08:34:46.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022174042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.564" endtime="20201110 08:34:46.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.572" endtime="20201110 08:34:46.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.268" endtime="20201110 08:34:46.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.266" endtime="20201110 08:34:46.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.579" level="INFO">${RESULT} = [{'time': 0.022203028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8985999999998208e-05, 'source_diff': 2.8985999999998208e-05}, {'time': 0.022244347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:46.576" endtime="20201110 08:34:46.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:46.592" level="INFO">${ACCURACY} = {'source_diff': [2.8985999999998208e-05, 2.9555000000000553e-05, 2.8943999999999498e-05, 2.9542000000000457e-05, 2.9555000000000553e-05, 2.9528000000000887e-05, 2.8943999999999498e-05, 2.9540999999997...</msg>
<status status="PASS" starttime="20201110 08:34:46.580" endtime="20201110 08:34:46.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.597" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:34:46.596" endtime="20201110 08:34:46.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.599" level="INFO">VALUE: [2.8985999999998208e-05, 2.9555000000000553e-05, 2.8943999999999498e-05, 2.9542000000000457e-05, 2.9555000000000553e-05, 2.9528000000000887e-05, 2.8943999999999498e-05, 2.9540999999997514e-05, 2.9555000000000553e-05, 2.9556000000000027e-05, 2.9556000000000027e-05, 2.894499999999897e-05, 2.9542000000000457e-05, 2.9555000000000553e-05, 2.9526999999997944e-05, 2.9528000000000887e-05, 2.9541000000000983e-05, 2.8943999999999498e-05, 2.8943999999999498e-05, 2.9569000000000123e-05, 2.895900000000201e-05, 2.9555000000000553e-05, 2.895899999999854e-05, 2.9540999999997514e-05, 2.9556000000000027e-05, 2.9569000000000123e-05, 2.9555000000000553e-05, 2.9541000000000983e-05, 2.9540999999997514e-05, 2.8929999999999928e-05, 2.9541000000000983e-05, 2.9542000000000457e-05, 2.8929999999999928e-05, 2.9556000000000027e-05, 2.894499999999897e-05, 2.8958000000002537e-05, 2.9555000000000553e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9499999999998278e-05, 2.9569999999999597e-05, 2.8889000000000692e-05, 2.9528000000000887e-05, 2.9542000000000457e-05, 2.9540999999997514e-05, 2.894500000000244e-05, 2.9556000000000027e-05, 2.9542000000000457e-05, 2.9528000000000887e-05]</msg>
<status status="PASS" starttime="20201110 08:34:46.598" endtime="20201110 08:34:46.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.593" endtime="20201110 08:34:46.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.603" endtime="20201110 08:34:46.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.607" endtime="20201110 08:34:46.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.605" endtime="20201110 08:34:46.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.601" endtime="20201110 08:34:46.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.236" endtime="20201110 08:34:46.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.236" endtime="20201110 08:34:46.628"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.640" endtime="20201110 08:34:46.658"></status>
</kw>
<msg timestamp="20201110 08:34:46.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.638" endtime="20201110 08:34:46.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.660" endtime="20201110 08:34:46.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.663" endtime="20201110 08:34:46.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.635" endtime="20201110 08:34:46.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.632" endtime="20201110 08:34:46.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.672" endtime="20201110 08:34:46.959"></status>
</kw>
<msg timestamp="20201110 08:34:46.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027354986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027385139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.670" endtime="20201110 08:34:46.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027354986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027385139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.963" endtime="20201110 08:34:46.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.971" endtime="20201110 08:34:46.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.668" endtime="20201110 08:34:46.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.666" endtime="20201110 08:34:46.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.978" level="INFO">${RESULT} = [{'time': 0.027385139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0152999999998042e-05, 'source_diff': 3.0152999999998042e-05}, {'time': 0.027423208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:46.974" endtime="20201110 08:34:46.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:46.991" level="INFO">${ACCURACY} = {'source_diff': [3.0152999999998042e-05, 3.073599999999996e-05, 3.073599999999996e-05, 3.073599999999996e-05, 3.073599999999996e-05, 3.0124999999998903e-05, 3.0152999999998042e-05, 3.0139000000001942e...</msg>
<status status="PASS" starttime="20201110 08:34:46.979" endtime="20201110 08:34:46.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.996" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:34:46.995" endtime="20201110 08:34:46.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.998" level="INFO">VALUE: [3.0152999999998042e-05, 3.073599999999996e-05, 3.073599999999996e-05, 3.073599999999996e-05, 3.073599999999996e-05, 3.0124999999998903e-05, 3.0152999999998042e-05, 3.0139000000001942e-05, 3.0138999999998473e-05, 3.0152999999998042e-05, 3.0153000000001512e-05, 3.073599999999996e-05, 3.0139000000001942e-05, 3.077799999999867e-05, 3.0124999999998903e-05, 3.073599999999996e-05, 3.013800000000247e-05, 3.074999999999953e-05, 3.073599999999996e-05, 3.074999999999953e-05, 3.013800000000247e-05, 3.074999999999953e-05, 3.0167000000001082e-05, 3.0138999999998473e-05, 3.073599999999996e-05, 3.0166000000001608e-05, 3.0139000000001942e-05, 3.0152999999998042e-05, 3.074999999999953e-05, 3.0138999999998473e-05, 3.0139000000001942e-05, 3.0166999999997612e-05, 3.0152999999998042e-05, 3.015199999999857e-05, 3.0152000000002038e-05, 3.074999999999953e-05, 3.015199999999857e-05, 3.0153000000001512e-05, 3.074999999999953e-05, 3.0137999999999e-05, 3.0152000000002038e-05, 3.083300000000094e-05, 3.0181000000000652e-05, 3.07639999999991e-05, 3.07639999999991e-05, 3.072200000000039e-05, 3.074999999999953e-05, 3.0138999999998473e-05, 3.0166999999997612e-05, 3.074999999999953e-05]</msg>
<status status="PASS" starttime="20201110 08:34:46.997" endtime="20201110 08:34:47.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.992" endtime="20201110 08:34:47.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.008" endtime="20201110 08:34:47.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:47.011" endtime="20201110 08:34:47.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.010" endtime="20201110 08:34:47.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.006" endtime="20201110 08:34:47.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.630" endtime="20201110 08:34:47.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.629" endtime="20201110 08:34:47.032"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.040" endtime="20201110 08:34:47.057"></status>
</kw>
<msg timestamp="20201110 08:34:47.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.039" endtime="20201110 08:34:47.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.059" endtime="20201110 08:34:47.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.061" endtime="20201110 08:34:47.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.036" endtime="20201110 08:34:47.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.034" endtime="20201110 08:34:47.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.070" endtime="20201110 08:34:47.356"></status>
</kw>
<msg timestamp="20201110 08:34:47.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022227278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.069" endtime="20201110 08:34:47.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022227278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.361" endtime="20201110 08:34:47.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.369" endtime="20201110 08:34:47.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.066" endtime="20201110 08:34:47.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.064" endtime="20201110 08:34:47.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:47.376" level="INFO">${RESULT} = [{'time': 0.022227278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.130599999999831e-05, 'source_diff': 3.130599999999831e-05}, {'time': 0.022264125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:47.372" endtime="20201110 08:34:47.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:47.389" level="INFO">${ACCURACY} = {'source_diff': [3.130599999999831e-05, 3.1346999999997543e-05, 3.074999999999953e-05, 3.137500000000015e-05, 3.144500000000147e-05, 3.136100000000058e-05, 3.074999999999953e-05, 3.1348000000000487e-0...</msg>
<status status="PASS" starttime="20201110 08:34:47.377" endtime="20201110 08:34:47.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.394" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:34:47.392" endtime="20201110 08:34:47.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.396" level="INFO">VALUE: [3.130599999999831e-05, 3.1346999999997543e-05, 3.074999999999953e-05, 3.137500000000015e-05, 3.144500000000147e-05, 3.136100000000058e-05, 3.074999999999953e-05, 3.1348000000000487e-05, 3.0750000000003e-05, 3.195900000000154e-05, 3.194500000000197e-05, 3.197200000000164e-05, 3.137500000000015e-05, 3.073599999999996e-05, 3.134700000000101e-05, 3.074999999999953e-05, 3.1348000000000487e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.0750000000003e-05, 3.195900000000154e-05, 3.073599999999996e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.069400000000125e-05, 3.1362000000000056e-05, 3.136100000000058e-05, 3.077799999999867e-05, 3.136100000000058e-05, 3.136100000000058e-05, 3.1348000000000487e-05, 3.134700000000101e-05, 3.136100000000058e-05, 3.1276999999999694e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.074999999999953e-05, 3.134700000000101e-05, 3.1360999999997113e-05, 3.136100000000058e-05, 3.136100000000058e-05, 3.1360999999997113e-05, 3.074999999999953e-05, 3.140300000000276e-05, 3.197200000000164e-05, 3.1348000000000487e-05, 3.19579999999986e-05, 3.068000000000168e-05, 3.198600000000121e-05]</msg>
<status status="PASS" starttime="20201110 08:34:47.395" endtime="20201110 08:34:47.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.390" endtime="20201110 08:34:47.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.399" endtime="20201110 08:34:47.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:47.403" endtime="20201110 08:34:47.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.401" endtime="20201110 08:34:47.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.398" endtime="20201110 08:34:47.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.033" endtime="20201110 08:34:47.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.032" endtime="20201110 08:34:47.424"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.432" endtime="20201110 08:34:47.448"></status>
</kw>
<msg timestamp="20201110 08:34:47.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.431" endtime="20201110 08:34:47.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.450" endtime="20201110 08:34:47.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.452" endtime="20201110 08:34:47.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.428" endtime="20201110 08:34:47.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.426" endtime="20201110 08:34:47.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.461" endtime="20201110 08:34:47.749"></status>
</kw>
<msg timestamp="20201110 08:34:47.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02226375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:47.460" endtime="20201110 08:34:47.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02226375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:47.754" endtime="20201110 08:34:47.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.762" endtime="20201110 08:34:47.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.457" endtime="20201110 08:34:47.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.456" endtime="20201110 08:34:47.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:47.769" level="INFO">${RESULT} = [{'time': 0.02226375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2582999999999224e-05, 'source_diff': 3.2582999999999224e-05}, {'time': 0.022301819, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:47.765" endtime="20201110 08:34:47.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:47.782" level="INFO">${ACCURACY} = {'source_diff': [3.2582999999999224e-05, 3.261100000000183e-05, 3.25839999999987e-05, 3.255599999999956e-05, 3.2555000000000084e-05, 3.248600000000171e-05, 3.25700000000026e-05, 3.251400000000085e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:47.770" endtime="20201110 08:34:47.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.787" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:34:47.786" endtime="20201110 08:34:47.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.789" level="INFO">VALUE: [3.2582999999999224e-05, 3.261100000000183e-05, 3.25839999999987e-05, 3.255599999999956e-05, 3.2555000000000084e-05, 3.248600000000171e-05, 3.25700000000026e-05, 3.251400000000085e-05, 3.2568999999999654e-05, 3.190299999999979e-05, 3.256900000000312e-05, 3.256999999999913e-05, 3.255599999999956e-05, 3.197199999999817e-05, 3.194399999999903e-05, 3.197200000000164e-05, 3.255599999999956e-05, 3.195899999999807e-05, 3.2541000000000514e-05, 3.195900000000154e-05, 3.19579999999986e-05, 3.201400000000035e-05, 3.252799999999695e-05, 3.255599999999956e-05, 3.2582999999999224e-05, 3.263900000000097e-05, 3.19579999999986e-05, 3.197200000000164e-05, 3.2582999999999224e-05, 3.255600000000303e-05, 3.195899999999807e-05, 3.195900000000154e-05, 3.254199999999999e-05, 3.2568999999999654e-05, 3.2568999999999654e-05, 3.197199999999817e-05, 3.197200000000164e-05, 3.195800000000207e-05, 3.2541000000000514e-05, 3.252800000000042e-05, 3.2568999999999654e-05, 3.19440000000025e-05, 3.19579999999986e-05, 3.197199999999817e-05, 3.190299999999979e-05, 3.2568999999999654e-05, 3.195899999999807e-05, 3.2582999999999224e-05, 3.255599999999956e-05, 3.194399999999903e-05]</msg>
<status status="PASS" starttime="20201110 08:34:47.788" endtime="20201110 08:34:47.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.783" endtime="20201110 08:34:47.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.793" endtime="20201110 08:34:47.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:47.796" endtime="20201110 08:34:47.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.795" endtime="20201110 08:34:47.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.791" endtime="20201110 08:34:47.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.425" endtime="20201110 08:34:47.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.424" endtime="20201110 08:34:47.817"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.825" endtime="20201110 08:34:47.841"></status>
</kw>
<msg timestamp="20201110 08:34:47.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.824" endtime="20201110 08:34:47.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.843" endtime="20201110 08:34:47.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.845" endtime="20201110 08:34:47.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.821" endtime="20201110 08:34:47.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.819" endtime="20201110 08:34:47.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.854" endtime="20201110 08:34:48.142"></status>
</kw>
<msg timestamp="20201110 08:34:48.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022193736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022226903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.853" endtime="20201110 08:34:48.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022193736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022226903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.146" endtime="20201110 08:34:48.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.154" endtime="20201110 08:34:48.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.850" endtime="20201110 08:34:48.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.848" endtime="20201110 08:34:48.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:48.161" level="INFO">${RESULT} = [{'time': 0.022226903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.316700000000061e-05, 'source_diff': 3.316700000000061e-05}, {'time': 0.022274722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:48.157" endtime="20201110 08:34:48.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:48.174" level="INFO">${ACCURACY} = {'source_diff': [3.316700000000061e-05, 3.313900000000147e-05, 3.780600000000134e-05, 3.315300000000104e-05, 3.376399999999863e-05, 3.316700000000061e-05, 3.3776999999998725e-05, 3.376399999999863e-05...</msg>
<status status="PASS" starttime="20201110 08:34:48.162" endtime="20201110 08:34:48.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.179" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:34:48.178" endtime="20201110 08:34:48.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.181" level="INFO">VALUE: [3.316700000000061e-05, 3.313900000000147e-05, 3.780600000000134e-05, 3.315300000000104e-05, 3.376399999999863e-05, 3.316700000000061e-05, 3.3776999999998725e-05, 3.376399999999863e-05, 3.3790999999998295e-05, 3.3762999999999155e-05, 3.376399999999863e-05, 3.316600000000114e-05, 3.318100000000018e-05, 3.320899999999932e-05, 3.309700000000276e-05, 3.318000000000071e-05, 3.376399999999863e-05, 3.316599999999767e-05, 3.37779999999982e-05, 3.319499999999975e-05, 3.318100000000018e-05, 3.376399999999863e-05, 3.316600000000114e-05, 3.315300000000104e-05, 3.318000000000071e-05, 3.31250000000019e-05, 3.379200000000124e-05, 3.373699999999896e-05, 3.317999999999724e-05, 3.317999999999724e-05, 3.377800000000167e-05, 3.315299999999757e-05, 3.315300000000104e-05, 3.37640000000021e-05, 3.315300000000104e-05, 3.379200000000124e-05, 3.318000000000071e-05, 3.374999999999906e-05, 3.315300000000104e-05, 3.3762999999999155e-05, 3.372199999999992e-05, 3.3777000000002194e-05, 3.377800000000167e-05, 3.374999999999906e-05, 3.316600000000114e-05, 3.309799999999877e-05, 3.316600000000114e-05, 3.316599999999767e-05, 3.316600000000114e-05, 3.375000000000253e-05]</msg>
<status status="PASS" starttime="20201110 08:34:48.180" endtime="20201110 08:34:48.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.175" endtime="20201110 08:34:48.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.185" endtime="20201110 08:34:48.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.188" endtime="20201110 08:34:48.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.187" endtime="20201110 08:34:48.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.183" endtime="20201110 08:34:48.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.818" endtime="20201110 08:34:48.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.817" endtime="20201110 08:34:48.209"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.217" endtime="20201110 08:34:48.234"></status>
</kw>
<msg timestamp="20201110 08:34:48.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.216" endtime="20201110 08:34:48.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.235" endtime="20201110 08:34:48.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.238" endtime="20201110 08:34:48.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.213" endtime="20201110 08:34:48.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.211" endtime="20201110 08:34:48.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.247" endtime="20201110 08:34:48.535"></status>
</kw>
<msg timestamp="20201110 08:34:48.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.245" endtime="20201110 08:34:48.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.540" endtime="20201110 08:34:48.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.549" endtime="20201110 08:34:48.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.243" endtime="20201110 08:34:48.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.241" endtime="20201110 08:34:48.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:48.556" level="INFO">${RESULT} = [{'time': 0.022158972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4388999999999253e-05, 'source_diff': 3.4388999999999253e-05}, {'time': 0.022207319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:48.553" endtime="20201110 08:34:48.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:48.569" level="INFO">${ACCURACY} = {'source_diff': [3.4388999999999253e-05, 3.4374999999999684e-05, 3.498600000000074e-05, 3.376399999999863e-05, 3.501399999999988e-05, 3.4402999999998823e-05, 3.4374999999999684e-05, 3.4388999999999253...</msg>
<status status="PASS" starttime="20201110 08:34:48.557" endtime="20201110 08:34:48.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.574" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:34:48.573" endtime="20201110 08:34:48.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.576" level="INFO">VALUE: [3.4388999999999253e-05, 3.4374999999999684e-05, 3.498600000000074e-05, 3.376399999999863e-05, 3.501399999999988e-05, 3.4402999999998823e-05, 3.4374999999999684e-05, 3.4388999999999253e-05, 3.4445000000001e-05, 3.379200000000124e-05, 3.4388999999999253e-05, 3.438900000000272e-05, 3.4361000000000114e-05, 3.4388999999999253e-05, 3.380600000000081e-05, 3.4374999999999684e-05, 3.49580000000016e-05, 3.4374999999999684e-05, 3.440199999999935e-05, 3.4374999999999684e-05, 3.37779999999982e-05, 3.4361000000000114e-05, 3.436200000000306e-05, 3.497200000000117e-05, 3.4361000000000114e-05, 3.49580000000016e-05, 3.4374999999999684e-05, 3.4374999999999684e-05, 3.4318999999997934e-05, 3.438900000000272e-05, 3.4333000000000974e-05, 3.504199999999902e-05, 3.4847000000001044e-05, 3.37779999999982e-05, 3.4374999999999684e-05, 3.37779999999982e-05, 3.4374999999999684e-05, 3.437500000000315e-05, 3.4361000000000114e-05, 3.440300000000229e-05, 3.49719999999977e-05, 3.375000000000253e-05, 3.4374999999999684e-05, 3.4346999999997074e-05, 3.4388999999999253e-05, 3.4360999999996644e-05, 3.4374999999999684e-05, 3.438900000000272e-05, 3.4374999999999684e-05, 3.376399999999863e-05]</msg>
<status status="PASS" starttime="20201110 08:34:48.575" endtime="20201110 08:34:48.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.570" endtime="20201110 08:34:48.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.580" endtime="20201110 08:34:48.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.584" endtime="20201110 08:34:48.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.582" endtime="20201110 08:34:48.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.578" endtime="20201110 08:34:48.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.210" endtime="20201110 08:34:48.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.209" endtime="20201110 08:34:48.605"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.614" endtime="20201110 08:34:48.630"></status>
</kw>
<msg timestamp="20201110 08:34:48.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.612" endtime="20201110 08:34:48.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.632" endtime="20201110 08:34:48.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.634" endtime="20201110 08:34:48.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.610" endtime="20201110 08:34:48.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.608" endtime="20201110 08:34:48.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.643" endtime="20201110 08:34:48.931"></status>
</kw>
<msg timestamp="20201110 08:34:48.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.641" endtime="20201110 08:34:48.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.935" endtime="20201110 08:34:48.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.943" endtime="20201110 08:34:48.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.639" endtime="20201110 08:34:48.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.637" endtime="20201110 08:34:48.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:48.950" level="INFO">${RESULT} = [{'time': 0.022287778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.497200000000117e-05, 'source_diff': 3.497200000000117e-05}, {'time': 0.022334069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:48.947" endtime="20201110 08:34:48.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:48.963" level="INFO">${ACCURACY} = {'source_diff': [3.497200000000117e-05, 3.497200000000117e-05, 3.556999999999866e-05, 3.5625000000000934e-05, 3.5583000000002224e-05, 3.55840000000017e-05, 3.55840000000017e-05, 3.497200000000117e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:48.951" endtime="20201110 08:34:48.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.968" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:34:48.967" endtime="20201110 08:34:48.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.970" level="INFO">VALUE: [3.497200000000117e-05, 3.497200000000117e-05, 3.556999999999866e-05, 3.5625000000000934e-05, 3.5583000000002224e-05, 3.55840000000017e-05, 3.55840000000017e-05, 3.497200000000117e-05, 3.5596999999998324e-05, 3.554199999999952e-05, 3.5582999999998755e-05, 3.5611000000001364e-05, 3.49450000000015e-05, 3.552799999999995e-05, 3.497200000000117e-05, 3.5040999999999545e-05, 3.5611000000001364e-05, 3.5040999999999545e-05, 3.5596999999998324e-05, 3.501399999999988e-05, 3.497300000000064e-05, 3.4902999999999323e-05, 3.497300000000064e-05, 3.498600000000074e-05, 3.55979999999978e-05, 3.498600000000074e-05, 3.5554999999999615e-05, 3.5568999999999185e-05, 3.498600000000074e-05, 3.5597000000001794e-05, 3.497200000000117e-05, 3.55840000000017e-05, 3.5582999999998755e-05, 3.505600000000206e-05, 3.500000000000031e-05, 3.555600000000256e-05, 3.49719999999977e-05, 3.5054999999999115e-05, 3.5582999999998755e-05, 3.5653000000000074e-05, 3.558399999999823e-05, 3.498600000000074e-05, 3.5568999999999185e-05, 3.5568999999999185e-05, 3.556999999999866e-05, 3.5596999999998324e-05, 3.5625000000000934e-05, 3.5596999999998324e-05, 3.5610999999997894e-05, 3.500000000000031e-05]</msg>
<status status="PASS" starttime="20201110 08:34:48.969" endtime="20201110 08:34:48.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.964" endtime="20201110 08:34:48.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.974" endtime="20201110 08:34:48.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.977" endtime="20201110 08:34:48.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.976" endtime="20201110 08:34:48.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.972" endtime="20201110 08:34:48.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.606" endtime="20201110 08:34:48.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.605" endtime="20201110 08:34:48.998"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.007" endtime="20201110 08:34:49.023"></status>
</kw>
<msg timestamp="20201110 08:34:49.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.005" endtime="20201110 08:34:49.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.025" endtime="20201110 08:34:49.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.027" endtime="20201110 08:34:49.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.003" endtime="20201110 08:34:49.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.001" endtime="20201110 08:34:49.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.036" endtime="20201110 08:34:49.323"></status>
</kw>
<msg timestamp="20201110 08:34:49.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.035" endtime="20201110 08:34:49.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.327" endtime="20201110 08:34:49.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.336" endtime="20201110 08:34:49.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.032" endtime="20201110 08:34:49.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.030" endtime="20201110 08:34:49.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:49.343" level="INFO">${RESULT} = [{'time': 0.022792333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.673600000000249e-05, 'source_diff': 3.673600000000249e-05}, {'time': 0.022838056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:49.339" endtime="20201110 08:34:49.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:49.356" level="INFO">${ACCURACY} = {'source_diff': [3.673600000000249e-05, 3.556999999999866e-05, 3.619399999999981e-05, 3.679200000000077e-05, 3.6125000000001434e-05, 3.680599999999687e-05, 3.6763000000002155e-05, 3.620899999999885e-0...</msg>
<status status="PASS" starttime="20201110 08:34:49.344" endtime="20201110 08:34:49.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.360" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:34:49.359" endtime="20201110 08:34:49.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.363" level="INFO">VALUE: [3.673600000000249e-05, 3.556999999999866e-05, 3.619399999999981e-05, 3.679200000000077e-05, 3.6125000000001434e-05, 3.680599999999687e-05, 3.6763000000002155e-05, 3.620899999999885e-05, 3.680599999999687e-05, 3.682000000000338e-05, 3.618000000000024e-05, 3.6180999999999713e-05, 3.619499999999928e-05, 3.619399999999981e-05, 3.620799999999938e-05, 3.6180999999999713e-05, 3.618000000000024e-05, 3.6263000000001655e-05, 3.623599999999852e-05, 3.679200000000077e-05, 3.5596999999998324e-05, 3.619399999999981e-05, 3.623599999999852e-05, 3.619399999999981e-05, 3.618000000000024e-05, 3.623600000000199e-05, 3.6124999999997964e-05, 3.680600000000034e-05, 3.618000000000024e-05, 3.619399999999981e-05, 3.67919999999973e-05, 3.619499999999928e-05, 3.6805000000000865e-05, 3.623599999999852e-05, 3.619399999999981e-05, 3.619399999999981e-05, 3.619399999999981e-05, 3.620799999999938e-05, 3.6180999999999713e-05, 3.611199999999787e-05, 3.619499999999928e-05, 3.618100000000318e-05, 3.6805000000000865e-05, 3.679200000000077e-05, 3.622200000000242e-05, 3.620800000000285e-05, 3.618000000000024e-05, 3.619499999999928e-05, 3.626400000000113e-05, 3.6180999999999713e-05]</msg>
<status status="PASS" starttime="20201110 08:34:49.361" endtime="20201110 08:34:49.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.357" endtime="20201110 08:34:49.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.366" endtime="20201110 08:34:49.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:49.370" endtime="20201110 08:34:49.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.368" endtime="20201110 08:34:49.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.365" endtime="20201110 08:34:49.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.999" endtime="20201110 08:34:49.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.999" endtime="20201110 08:34:49.391"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.399" endtime="20201110 08:34:49.416"></status>
</kw>
<msg timestamp="20201110 08:34:49.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.398" endtime="20201110 08:34:49.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.417" endtime="20201110 08:34:49.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.420" endtime="20201110 08:34:49.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.395" endtime="20201110 08:34:49.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.393" endtime="20201110 08:34:49.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.429" endtime="20201110 08:34:49.717"></status>
</kw>
<msg timestamp="20201110 08:34:49.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02223125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:49.427" endtime="20201110 08:34:49.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02223125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:49.721" endtime="20201110 08:34:49.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.729" endtime="20201110 08:34:49.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.425" endtime="20201110 08:34:49.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.423" endtime="20201110 08:34:49.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:49.736" level="INFO">${RESULT} = [{'time': 0.022268056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.680600000000034e-05, 'source_diff': 3.680600000000034e-05}, {'time': 0.022311472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:49.732" endtime="20201110 08:34:49.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:49.749" level="INFO">${ACCURACY} = {'source_diff': [3.680600000000034e-05, 3.742999999999802e-05, 3.7416999999997924e-05, 3.7389000000002254e-05, 3.738799999999931e-05, 3.7388999999998784e-05, 3.7403000000001824e-05, 3.7403000000001824...</msg>
<status status="PASS" starttime="20201110 08:34:49.737" endtime="20201110 08:34:49.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.754" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:34:49.753" endtime="20201110 08:34:49.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.756" level="INFO">VALUE: [3.680600000000034e-05, 3.742999999999802e-05, 3.7416999999997924e-05, 3.7389000000002254e-05, 3.738799999999931e-05, 3.7388999999998784e-05, 3.7403000000001824e-05, 3.7403000000001824e-05, 3.6791000000001295e-05, 3.7388999999998784e-05, 3.680600000000034e-05, 3.676400000000163e-05, 3.740200000000235e-05, 3.7389000000002254e-05, 3.7403000000001824e-05, 3.7388999999998784e-05, 3.7431000000000964e-05, 3.7403000000001824e-05, 3.7403000000001824e-05, 3.7416999999997924e-05, 3.799999999999984e-05, 3.741600000000192e-05, 3.6833000000000005e-05, 3.740200000000235e-05, 3.7388999999998784e-05, 3.7403000000001824e-05, 3.7388999999998784e-05, 3.6860999999999144e-05, 3.7416999999997924e-05, 3.7403000000001824e-05, 3.7417000000001394e-05, 3.740199999999888e-05, 3.7402999999998354e-05, 3.6833000000000005e-05, 3.732000000000041e-05, 3.741599999999845e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.7402999999998354e-05, 3.740199999999888e-05, 3.679200000000077e-05, 3.740199999999888e-05, 3.7402999999998354e-05, 3.7416999999997924e-05, 3.741600000000192e-05, 3.67780000000012e-05, 3.79859999999968e-05, 3.7374999999999214e-05, 3.801400000000288e-05, 3.7402999999998354e-05]</msg>
<status status="PASS" starttime="20201110 08:34:49.755" endtime="20201110 08:34:49.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.750" endtime="20201110 08:34:49.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.760" endtime="20201110 08:34:49.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:49.763" endtime="20201110 08:34:49.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.762" endtime="20201110 08:34:49.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.758" endtime="20201110 08:34:49.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.392" endtime="20201110 08:34:49.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.391" endtime="20201110 08:34:49.784"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.793" endtime="20201110 08:34:49.810"></status>
</kw>
<msg timestamp="20201110 08:34:49.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.791" endtime="20201110 08:34:49.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.812" endtime="20201110 08:34:49.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.814" endtime="20201110 08:34:49.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.789" endtime="20201110 08:34:49.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.787" endtime="20201110 08:34:49.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.823" endtime="20201110 08:34:50.110"></status>
</kw>
<msg timestamp="20201110 08:34:50.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022389153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.822" endtime="20201110 08:34:50.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022389153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.114" endtime="20201110 08:34:50.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.122" endtime="20201110 08:34:50.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.819" endtime="20201110 08:34:50.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.818" endtime="20201110 08:34:50.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:50.129" level="INFO">${RESULT} = [{'time': 0.022389153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4749999999999244e-05, 'source_diff': 5.4749999999999244e-05}, {'time': 0.022455167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:50.126" endtime="20201110 08:34:50.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:50.142" level="INFO">${ACCURACY} = {'source_diff': [5.4749999999999244e-05, 5.436100000000277e-05, 5.433399999999963e-05, 5.413899999999819e-05, 5.452700000000213e-05, 5.45410000000017e-05, 5.4735999999999674e-05, 5.4680000000001394e-0...</msg>
<status status="PASS" starttime="20201110 08:34:50.130" endtime="20201110 08:34:50.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.147" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:34:50.146" endtime="20201110 08:34:50.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.149" level="INFO">VALUE: [5.4749999999999244e-05, 5.436100000000277e-05, 5.433399999999963e-05, 5.413899999999819e-05, 5.452700000000213e-05, 5.45410000000017e-05, 5.4735999999999674e-05, 5.4680000000001394e-05, 5.4458000000000284e-05, 5.4708000000000534e-05, 5.38609999999988e-05, 5.43609999999993e-05, 5.43609999999993e-05, 5.40280000000011e-05, 5.419499999999994e-05, 5.405600000000024e-05, 5.413899999999819e-05, 5.436100000000277e-05, 5.419499999999994e-05, 5.3999999999998494e-05, 5.4527999999998134e-05, 5.4680000000001394e-05, 5.434699999999973e-05, 5.4194000000000464e-05, 5.43609999999993e-05, 5.383299999999966e-05, 5.404200000000067e-05, 5.384699999999923e-05, 5.401400000000153e-05, 5.381999999999956e-05, 5.3985999999998924e-05, 5.4527999999998134e-05, 5.4291999999997453e-05, 5.386100000000227e-05, 5.419499999999994e-05, 5.40280000000011e-05, 5.436199999999877e-05, 5.4208000000000034e-05, 5.418100000000037e-05, 5.43609999999993e-05, 5.43609999999993e-05, 5.452700000000213e-05, 5.4194000000000464e-05, 5.384699999999923e-05, 5.45280000000016e-05, 5.3985999999998924e-05, 5.38609999999988e-05, 5.463899999999869e-05, 5.387500000000184e-05, 5.454200000000117e-05]</msg>
<status status="PASS" starttime="20201110 08:34:50.148" endtime="20201110 08:34:50.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.143" endtime="20201110 08:34:50.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.153" endtime="20201110 08:34:50.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:50.156" endtime="20201110 08:34:50.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.155" endtime="20201110 08:34:50.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.151" endtime="20201110 08:34:50.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.785" endtime="20201110 08:34:50.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.785" endtime="20201110 08:34:50.177"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.186" endtime="20201110 08:34:50.203"></status>
</kw>
<msg timestamp="20201110 08:34:50.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.184" endtime="20201110 08:34:50.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.205" endtime="20201110 08:34:50.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.207" endtime="20201110 08:34:50.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.182" endtime="20201110 08:34:50.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.180" endtime="20201110 08:34:50.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.216" endtime="20201110 08:34:50.502"></status>
</kw>
<msg timestamp="20201110 08:34:50.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022593153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.215" endtime="20201110 08:34:50.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022593153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.507" endtime="20201110 08:34:50.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.515" endtime="20201110 08:34:50.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.212" endtime="20201110 08:34:50.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.210" endtime="20201110 08:34:50.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:50.522" level="INFO">${RESULT} = [{'time': 0.022593153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.559700000000098e-05, 'source_diff': 5.559700000000098e-05}, {'time': 0.022659153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:50.518" endtime="20201110 08:34:50.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:50.535" level="INFO">${ACCURACY} = {'source_diff': [5.559700000000098e-05, 5.48609999999998e-05, 5.4901999999999035e-05, 5.49730000000033e-05, 5.556899999999837e-05, 5.569500000000144e-05, 5.554099999999923e-05, 5.552699999999966e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:50.523" endtime="20201110 08:34:50.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.540" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:34:50.539" endtime="20201110 08:34:50.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.542" level="INFO">VALUE: [5.559700000000098e-05, 5.48609999999998e-05, 5.4901999999999035e-05, 5.49730000000033e-05, 5.556899999999837e-05, 5.569500000000144e-05, 5.554099999999923e-05, 5.552699999999966e-05, 5.5166000000002324e-05, 5.502699999999916e-05, 5.5180000000001894e-05, 5.50280000000021e-05, 5.5499999999999994e-05, 5.501400000000253e-05, 5.5513999999999564e-05, 5.5707999999998065e-05, 5.5527999999999134e-05, 5.5541999999998704e-05, 5.537499999999987e-05, 5.488899999999894e-05, 5.513899999999919e-05, 5.56809999999984e-05, 5.519500000000094e-05, 5.53480000000002e-05, 5.48609999999998e-05, 5.5665999999999355e-05, 5.5693999999998495e-05, 5.5179999999998425e-05, 5.490299999999851e-05, 5.533300000000116e-05, 5.48609999999998e-05, 5.5041999999998203e-05, 5.487499999999937e-05, 5.570900000000101e-05, 5.48609999999998e-05, 5.53610000000003e-05, 5.48609999999998e-05, 5.5041999999998203e-05, 5.532000000000106e-05, 5.536199999999977e-05, 5.50410000000022e-05, 5.5693999999998495e-05, 5.5180000000001894e-05, 5.487499999999937e-05, 5.5707999999998065e-05, 5.5527999999999134e-05, 5.5736000000000674e-05, 5.487499999999937e-05, 5.518100000000137e-05, 5.519499999999747e-05]</msg>
<status status="PASS" starttime="20201110 08:34:50.541" endtime="20201110 08:34:50.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.536" endtime="20201110 08:34:50.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.546" endtime="20201110 08:34:50.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:50.549" endtime="20201110 08:34:50.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.548" endtime="20201110 08:34:50.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.544" endtime="20201110 08:34:50.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.178" endtime="20201110 08:34:50.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.177" endtime="20201110 08:34:50.570"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.578" endtime="20201110 08:34:50.595"></status>
</kw>
<msg timestamp="20201110 08:34:50.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.577" endtime="20201110 08:34:50.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.597" endtime="20201110 08:34:50.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.599" endtime="20201110 08:34:50.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.574" endtime="20201110 08:34:50.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.572" endtime="20201110 08:34:50.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.608" endtime="20201110 08:34:50.897"></status>
</kw>
<msg timestamp="20201110 08:34:50.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.606" endtime="20201110 08:34:50.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.901" endtime="20201110 08:34:50.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.909" endtime="20201110 08:34:50.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.604" endtime="20201110 08:34:50.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.602" endtime="20201110 08:34:50.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:50.916" level="INFO">${RESULT} = [{'time': 0.022215764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.659699999999851e-05, 'source_diff': 5.659699999999851e-05}, {'time': 0.022279806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:50.913" endtime="20201110 08:34:50.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:50.929" level="INFO">${ACCURACY} = {'source_diff': [5.659699999999851e-05, 5.640300000000001e-05, 5.669499999999897e-05, 5.6513999999997094e-05, 5.63610000000013e-05, 5.6541999999999704e-05, 5.637500000000087e-05, 5.6222000000001604e-0...</msg>
<status status="PASS" starttime="20201110 08:34:50.917" endtime="20201110 08:34:50.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.934" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:34:50.933" endtime="20201110 08:34:50.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.936" level="INFO">VALUE: [5.659699999999851e-05, 5.640300000000001e-05, 5.669499999999897e-05, 5.6513999999997094e-05, 5.63610000000013e-05, 5.6541999999999704e-05, 5.637500000000087e-05, 5.6222000000001604e-05, 5.6208000000002034e-05, 5.637500000000087e-05, 5.615299999999976e-05, 5.6193999999998995e-05, 5.6014000000000064e-05, 5.665300000000026e-05, 5.6027999999999634e-05, 5.6193999999998995e-05, 5.6193999999998995e-05, 5.66809999999994e-05, 5.6541999999999704e-05, 5.6250000000000744e-05, 5.6014000000000064e-05, 5.6014000000000064e-05, 5.6041999999999204e-05, 5.6194000000002464e-05, 5.58480000000007e-05, 5.661099999999808e-05, 5.6208000000002034e-05, 5.588899999999994e-05, 5.6693999999999495e-05, 5.587500000000037e-05, 5.612500000000062e-05, 5.6528000000000134e-05, 5.634699999999826e-05, 5.6708000000002534e-05, 5.61809999999989e-05, 5.587500000000037e-05, 5.65549999999998e-05, 5.63610000000013e-05, 5.58749999999969e-05, 5.61809999999989e-05, 5.58619999999968e-05, 5.6193999999998995e-05, 5.584700000000123e-05, 5.6693999999999495e-05, 5.6679999999999925e-05, 5.637500000000087e-05, 5.6528000000000134e-05, 5.6000000000000494e-05, 5.634699999999826e-05, 5.665299999999679e-05]</msg>
<status status="PASS" starttime="20201110 08:34:50.935" endtime="20201110 08:34:50.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.930" endtime="20201110 08:34:50.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.940" endtime="20201110 08:34:50.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:50.943" endtime="20201110 08:34:50.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.942" endtime="20201110 08:34:50.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.938" endtime="20201110 08:34:50.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.571" endtime="20201110 08:34:50.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.570" endtime="20201110 08:34:50.964"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.973" endtime="20201110 08:34:50.990"></status>
</kw>
<msg timestamp="20201110 08:34:50.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.971" endtime="20201110 08:34:50.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.992" endtime="20201110 08:34:50.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.995" endtime="20201110 08:34:50.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.969" endtime="20201110 08:34:50.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.967" endtime="20201110 08:34:50.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.003" endtime="20201110 08:34:51.291"></status>
</kw>
<msg timestamp="20201110 08:34:51.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022247597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.002" endtime="20201110 08:34:51.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022247597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.295" endtime="20201110 08:34:51.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.303" endtime="20201110 08:34:51.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.999" endtime="20201110 08:34:51.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.998" endtime="20201110 08:34:51.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.310" level="INFO">${RESULT} = [{'time': 0.022305347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7749999999998775e-05, 'source_diff': 5.7749999999998775e-05}, {'time': 0.022367347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:51.306" endtime="20201110 08:34:51.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:51.323" level="INFO">${ACCURACY} = {'source_diff': [5.7749999999998775e-05, 5.7694000000000495e-05, 5.691700000000008e-05, 5.7193999999999995e-05, 5.7708000000000065e-05, 5.6971999999998885e-05, 5.687500000000137e-05, 5.719499999999947...</msg>
<status status="PASS" starttime="20201110 08:34:51.311" endtime="20201110 08:34:51.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.328" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:34:51.327" endtime="20201110 08:34:51.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.330" level="INFO">VALUE: [5.7749999999998775e-05, 5.7694000000000495e-05, 5.691700000000008e-05, 5.7193999999999995e-05, 5.7708000000000065e-05, 5.6971999999998885e-05, 5.687500000000137e-05, 5.719499999999947e-05, 5.736099999999883e-05, 5.770899999999954e-05, 5.769500000000344e-05, 5.7014000000001064e-05, 5.7528000000001134e-05, 5.766700000000083e-05, 5.75550000000008e-05, 5.686099999999833e-05, 5.754100000000123e-05, 5.7694000000000495e-05, 5.7514000000001564e-05, 5.7028000000000634e-05, 5.7193999999999995e-05, 5.7430000000000675e-05, 5.71809999999999e-05, 5.769499999999997e-05, 5.688899999999747e-05, 5.71809999999999e-05, 5.719499999999947e-05, 5.766699999999736e-05, 5.73619999999983e-05, 5.68480000000017e-05, 5.7708000000000065e-05, 5.702700000000116e-05, 5.73610000000023e-05, 5.7514000000001564e-05, 5.7166000000000855e-05, 5.7193999999999995e-05, 5.684700000000223e-05, 5.690300000000051e-05, 5.7028000000000634e-05, 5.73610000000023e-05, 5.7735999999999205e-05, 5.734699999999926e-05, 5.736099999999883e-05, 5.68480000000017e-05, 5.711200000000152e-05, 5.7528000000001134e-05, 5.7694000000000495e-05, 5.702700000000116e-05, 5.752700000000166e-05, 5.7708000000000065e-05]</msg>
<status status="PASS" starttime="20201110 08:34:51.329" endtime="20201110 08:34:51.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.324" endtime="20201110 08:34:51.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.334" endtime="20201110 08:34:51.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.337" endtime="20201110 08:34:51.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.335" endtime="20201110 08:34:51.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.332" endtime="20201110 08:34:51.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.965" endtime="20201110 08:34:51.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.965" endtime="20201110 08:34:51.358"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.366" endtime="20201110 08:34:51.384"></status>
</kw>
<msg timestamp="20201110 08:34:51.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.365" endtime="20201110 08:34:51.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.386" endtime="20201110 08:34:51.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.388" endtime="20201110 08:34:51.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.362" endtime="20201110 08:34:51.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.360" endtime="20201110 08:34:51.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.397" endtime="20201110 08:34:51.684"></status>
</kw>
<msg timestamp="20201110 08:34:51.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.396" endtime="20201110 08:34:51.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.688" endtime="20201110 08:34:51.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.697" endtime="20201110 08:34:51.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.393" endtime="20201110 08:34:51.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.391" endtime="20201110 08:34:51.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.703" level="INFO">${RESULT} = [{'time': 0.022218028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8264000000002314e-05, 'source_diff': 5.8264000000002314e-05}, {'time': 0.022283028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:51.700" endtime="20201110 08:34:51.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:51.717" level="INFO">${ACCURACY} = {'source_diff': [5.8264000000002314e-05, 5.836099999999983e-05, 5.788899999999847e-05, 5.81810000000009e-05, 5.791700000000108e-05, 5.8347999999999733e-05, 5.841700000000158e-05, 5.854100000000223e-05...</msg>
<status status="PASS" starttime="20201110 08:34:51.704" endtime="20201110 08:34:51.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.721" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:34:51.720" endtime="20201110 08:34:51.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.724" level="INFO">VALUE: [5.8264000000002314e-05, 5.836099999999983e-05, 5.788899999999847e-05, 5.81810000000009e-05, 5.791700000000108e-05, 5.8347999999999733e-05, 5.841700000000158e-05, 5.854100000000223e-05, 5.854099999999876e-05, 5.8041999999997734e-05, 5.8042000000001204e-05, 5.8541999999998234e-05, 5.8513999999999095e-05, 5.78749999999989e-05, 5.786099999999933e-05, 5.7820000000000094e-05, 5.788899999999847e-05, 5.78749999999989e-05, 5.784799999999923e-05, 5.8527999999998664e-05, 5.786200000000227e-05, 5.786200000000227e-05, 5.8151999999998816e-05, 5.790300000000151e-05, 5.802699999999869e-05, 5.8736000000000205e-05, 5.8528000000002134e-05, 5.836099999999983e-05, 5.783300000000019e-05, 5.834700000000026e-05, 5.8541999999998234e-05, 5.869500000000097e-05, 5.834700000000026e-05, 5.819500000000047e-05, 5.8514000000002564e-05, 5.858300000000094e-05, 5.8027999999998164e-05, 5.8194000000000995e-05, 5.801299999999912e-05, 5.78749999999989e-05, 5.8208000000000565e-05, 5.834700000000026e-05, 5.8028000000001634e-05, 5.840300000000201e-05, 5.786099999999933e-05, 5.78610000000028e-05, 5.8027999999998164e-05, 5.819500000000047e-05, 5.7999999999999025e-05, 5.8528000000002134e-05]</msg>
<status status="PASS" starttime="20201110 08:34:51.722" endtime="20201110 08:34:51.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.718" endtime="20201110 08:34:51.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.727" endtime="20201110 08:34:51.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.731" endtime="20201110 08:34:51.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.729" endtime="20201110 08:34:51.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.726" endtime="20201110 08:34:51.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.359" endtime="20201110 08:34:51.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.358" endtime="20201110 08:34:51.751"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.760" endtime="20201110 08:34:51.778"></status>
</kw>
<msg timestamp="20201110 08:34:51.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.759" endtime="20201110 08:34:51.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.779" endtime="20201110 08:34:51.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.782" endtime="20201110 08:34:51.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.756" endtime="20201110 08:34:51.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.754" endtime="20201110 08:34:51.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.791" endtime="20201110 08:34:52.078"></status>
</kw>
<msg timestamp="20201110 08:34:52.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.789" endtime="20201110 08:34:52.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.082" endtime="20201110 08:34:52.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.090" endtime="20201110 08:34:52.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.787" endtime="20201110 08:34:52.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.785" endtime="20201110 08:34:52.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:52.097" level="INFO">${RESULT} = [{'time': 0.022222083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.95689999999989e-05, 'source_diff': 5.95689999999989e-05}, {'time': 0.022287097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:52.094" endtime="20201110 08:34:52.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:52.110" level="INFO">${ACCURACY} = {'source_diff': [5.95689999999989e-05, 5.9179999999998956e-05, 5.9514000000000095e-05, 5.9180000000002425e-05, 5.969500000000197e-05, 5.934700000000126e-05, 5.916699999999886e-05, 5.918099999999843e-0...</msg>
<status status="PASS" starttime="20201110 08:34:52.098" endtime="20201110 08:34:52.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.115" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:34:52.114" endtime="20201110 08:34:52.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.117" level="INFO">VALUE: [5.95689999999989e-05, 5.9179999999998956e-05, 5.9514000000000095e-05, 5.9180000000002425e-05, 5.969500000000197e-05, 5.934700000000126e-05, 5.916699999999886e-05, 5.918099999999843e-05, 5.9013999999999595e-05, 5.9013999999999595e-05, 5.936100000000083e-05, 5.96949999999985e-05, 5.96810000000024e-05, 5.884700000000076e-05, 5.936100000000083e-05, 5.884700000000076e-05, 5.9014000000003064e-05, 5.93750000000004e-05, 5.890300000000251e-05, 5.936100000000083e-05, 5.9193999999998526e-05, 5.9541999999999234e-05, 5.918099999999843e-05, 5.9069999999997874e-05, 5.9541999999999234e-05, 5.8792000000001954e-05, 5.970899999999807e-05, 5.8848000000000233e-05, 5.904099999999926e-05, 5.951300000000062e-05, 5.93750000000004e-05, 5.9193999999998526e-05, 5.8972000000000885e-05, 5.886100000000033e-05, 5.936099999999736e-05, 5.930499999999908e-05, 5.88749999999999e-05, 5.96810000000024e-05, 5.970900000000154e-05, 5.918099999999843e-05, 5.8848000000000233e-05, 5.936100000000083e-05, 5.9387999999997027e-05, 5.88619999999998e-05, 5.941700000000258e-05, 5.934700000000126e-05, 5.9679999999999456e-05, 5.893099999999818e-05, 5.913899999999972e-05, 5.8972000000000885e-05]</msg>
<status status="PASS" starttime="20201110 08:34:52.116" endtime="20201110 08:34:52.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.111" endtime="20201110 08:34:52.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.141" endtime="20201110 08:34:52.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:52.144" endtime="20201110 08:34:52.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.143" endtime="20201110 08:34:52.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.139" endtime="20201110 08:34:52.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.752" endtime="20201110 08:34:52.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.752" endtime="20201110 08:34:52.165"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.174" endtime="20201110 08:34:52.191"></status>
</kw>
<msg timestamp="20201110 08:34:52.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.172" endtime="20201110 08:34:52.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.192" endtime="20201110 08:34:52.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.195" endtime="20201110 08:34:52.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.170" endtime="20201110 08:34:52.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.168" endtime="20201110 08:34:52.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.204" endtime="20201110 08:34:52.492"></status>
</kw>
<msg timestamp="20201110 08:34:52.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022161875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.202" endtime="20201110 08:34:52.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022161875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.497" endtime="20201110 08:34:52.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.505" endtime="20201110 08:34:52.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.200" endtime="20201110 08:34:52.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.198" endtime="20201110 08:34:52.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:52.511" level="INFO">${RESULT} = [{'time': 0.022222125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0249999999997805e-05, 'source_diff': 6.0249999999997805e-05}, {'time': 0.022296153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:52.508" endtime="20201110 08:34:52.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:52.525" level="INFO">${ACCURACY} = {'source_diff': [6.0249999999997805e-05, 6.037499999999793e-05, 6.0056000000002774e-05, 6.06949999999995e-05, 6.018099999999943e-05, 6.0416000000000636e-05, 6.0514000000001095e-05, 5.9833999999998194e...</msg>
<status status="PASS" starttime="20201110 08:34:52.512" endtime="20201110 08:34:52.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.529" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:34:52.528" endtime="20201110 08:34:52.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.532" level="INFO">VALUE: [6.0249999999997805e-05, 6.037499999999793e-05, 6.0056000000002774e-05, 6.06949999999995e-05, 6.018099999999943e-05, 6.0416000000000636e-05, 6.0514000000001095e-05, 5.9833999999998194e-05, 6.036099999999836e-05, 6.0193999999999526e-05, 6.0707999999999596e-05, 5.98750000000009e-05, 6.0166000000000386e-05, 6.036100000000183e-05, 6.036099999999836e-05, 6.0513999999997625e-05, 5.984699999999829e-05, 6.0542000000000235e-05, 6.06949999999995e-05, 6.0542000000000235e-05, 6.0014000000000595e-05, 6.036100000000183e-05, 6.018099999999943e-05, 5.9777999999999915e-05, 5.986099999999786e-05, 6.036100000000183e-05, 6.0528000000000665e-05, 6.0041999999999734e-05, 6.0028000000000165e-05, 6.0694000000000026e-05, 6.06949999999995e-05, 6.061099999999861e-05, 6.0041999999999734e-05, 6.0013999999997125e-05, 5.9929999999999706e-05, 6.016699999999986e-05, 6.069500000000297e-05, 5.9888999999997e-05, 6.06949999999995e-05, 6.0694000000000026e-05, 6.038900000000097e-05, 6.002700000000069e-05, 6.0041999999999734e-05, 6.034699999999879e-05, 6.0569999999999374e-05, 6.034699999999879e-05, 6.0193999999999526e-05, 6.0514000000001095e-05, 5.9972000000001885e-05, 6.0014000000000595e-05]</msg>
<status status="PASS" starttime="20201110 08:34:52.530" endtime="20201110 08:34:52.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.526" endtime="20201110 08:34:52.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.535" endtime="20201110 08:34:52.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:52.539" endtime="20201110 08:34:52.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.537" endtime="20201110 08:34:52.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.534" endtime="20201110 08:34:52.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.166" endtime="20201110 08:34:52.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.166" endtime="20201110 08:34:52.560"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.568" endtime="20201110 08:34:52.586"></status>
</kw>
<msg timestamp="20201110 08:34:52.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.567" endtime="20201110 08:34:52.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.587" endtime="20201110 08:34:52.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.590" endtime="20201110 08:34:52.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.564" endtime="20201110 08:34:52.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.562" endtime="20201110 08:34:52.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.599" endtime="20201110 08:34:52.885"></status>
</kw>
<msg timestamp="20201110 08:34:52.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.597" endtime="20201110 08:34:52.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.889" endtime="20201110 08:34:52.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.897" endtime="20201110 08:34:52.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.595" endtime="20201110 08:34:52.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.593" endtime="20201110 08:34:52.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:52.904" level="INFO">${RESULT} = [{'time': 0.022182764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.127800000000141e-05, 'source_diff': 6.127800000000141e-05}, {'time': 0.02225075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:52.900" endtime="20201110 08:34:52.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:52.917" level="INFO">${ACCURACY} = {'source_diff': [6.127800000000141e-05, 6.0999999999998555e-05, 6.118100000000043e-05, 6.15279999999982e-05, 6.132000000000012e-05, 6.0847999999998764e-05, 6.137499999999893e-05, 6.0971999999999416e-0...</msg>
<status status="PASS" starttime="20201110 08:34:52.905" endtime="20201110 08:34:52.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.922" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:34:52.921" endtime="20201110 08:34:52.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.924" level="INFO">VALUE: [6.127800000000141e-05, 6.0999999999998555e-05, 6.118100000000043e-05, 6.15279999999982e-05, 6.132000000000012e-05, 6.0847999999998764e-05, 6.137499999999893e-05, 6.0971999999999416e-05, 6.118100000000043e-05, 6.165199999999885e-05, 6.0999999999998555e-05, 6.119400000000053e-05, 6.15279999999982e-05, 6.081900000000015e-05, 6.086099999999886e-05, 6.168100000000093e-05, 6.149999999999906e-05, 6.1195e-05, 6.0820000000003094e-05, 6.086099999999886e-05, 6.1195e-05, 6.1195e-05, 6.0888999999998e-05, 6.134799999999926e-05, 6.116599999999792e-05, 6.151299999999915e-05, 6.136099999999936e-05, 6.119400000000053e-05, 6.12080000000001e-05, 6.12080000000001e-05, 6.10560000000003e-05, 6.0985999999998985e-05, 6.16950000000005e-05, 6.15690000000009e-05, 6.136099999999936e-05, 6.154200000000123e-05, 6.0847999999998764e-05, 6.1027999999997695e-05, 6.12080000000001e-05, 6.169399999999756e-05, 6.151299999999915e-05, 6.119400000000053e-05, 6.145800000000035e-05, 6.169399999999756e-05, 6.169400000000103e-05, 6.15279999999982e-05, 6.136099999999936e-05, 6.152800000000166e-05, 6.170900000000007e-05, 6.08750000000019e-05]</msg>
<status status="PASS" starttime="20201110 08:34:52.923" endtime="20201110 08:34:52.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.918" endtime="20201110 08:34:52.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.928" endtime="20201110 08:34:52.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:52.931" endtime="20201110 08:34:52.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.929" endtime="20201110 08:34:52.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.926" endtime="20201110 08:34:52.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.560" endtime="20201110 08:34:52.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.560" endtime="20201110 08:34:52.952"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.960" endtime="20201110 08:34:52.978"></status>
</kw>
<msg timestamp="20201110 08:34:52.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.959" endtime="20201110 08:34:52.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.979" endtime="20201110 08:34:52.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.982" endtime="20201110 08:34:52.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.956" endtime="20201110 08:34:52.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.954" endtime="20201110 08:34:52.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.991" endtime="20201110 08:34:53.277"></status>
</kw>
<msg timestamp="20201110 08:34:53.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022176458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.989" endtime="20201110 08:34:53.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022176458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.281" endtime="20201110 08:34:53.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.289" endtime="20201110 08:34:53.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.987" endtime="20201110 08:34:53.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.985" endtime="20201110 08:34:53.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:53.296" level="INFO">${RESULT} = [{'time': 0.022239208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.27500000000003e-05, 'source_diff': 6.27500000000003e-05}, {'time': 0.022306208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:53.293" endtime="20201110 08:34:53.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:53.310" level="INFO">${ACCURACY} = {'source_diff': [6.27500000000003e-05, 6.269400000000203e-05, 6.220799999999763e-05, 6.184700000000029e-05, 6.267999999999899e-05, 6.269399999999856e-05, 6.219399999999806e-05, 6.26950000000015e-05, 6...</msg>
<status status="PASS" starttime="20201110 08:34:53.297" endtime="20201110 08:34:53.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.314" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:34:53.313" endtime="20201110 08:34:53.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.317" level="INFO">VALUE: [6.27500000000003e-05, 6.269400000000203e-05, 6.220799999999763e-05, 6.184700000000029e-05, 6.267999999999899e-05, 6.269399999999856e-05, 6.219399999999806e-05, 6.26950000000015e-05, 6.186099999999986e-05, 6.223600000000024e-05, 6.20279999999987e-05, 6.25690000000019e-05, 6.269400000000203e-05, 6.252800000000266e-05, 6.254099999999929e-05, 6.252699999999972e-05, 6.236100000000036e-05, 6.186099999999986e-05, 6.267999999999899e-05, 6.227699999999947e-05, 6.187499999999943e-05, 6.179199999999802e-05, 6.202800000000216e-05, 6.269499999999803e-05, 6.234700000000079e-05, 6.254099999999929e-05, 6.220900000000057e-05, 6.26950000000015e-05, 6.268100000000193e-05, 6.237499999999993e-05, 6.241699999999864e-05, 6.18750000000029e-05, 6.267999999999899e-05, 6.269400000000203e-05, 6.219399999999806e-05, 6.234700000000079e-05, 6.20279999999987e-05, 6.20279999999987e-05, 6.2195000000001e-05, 6.236100000000036e-05, 6.263899999999975e-05, 6.237499999999993e-05, 6.193100000000118e-05, 6.205500000000183e-05, 6.186099999999986e-05, 6.202699999999922e-05, 6.234699999999732e-05, 6.266599999999942e-05, 6.190300000000204e-05, 6.22080000000011e-05]</msg>
<status status="PASS" starttime="20201110 08:34:53.315" endtime="20201110 08:34:53.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.310" endtime="20201110 08:34:53.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.320" endtime="20201110 08:34:53.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:53.324" endtime="20201110 08:34:53.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.322" endtime="20201110 08:34:53.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.318" endtime="20201110 08:34:53.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.953" endtime="20201110 08:34:53.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.952" endtime="20201110 08:34:53.344"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.353" endtime="20201110 08:34:53.370"></status>
</kw>
<msg timestamp="20201110 08:34:53.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.351" endtime="20201110 08:34:53.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.371" endtime="20201110 08:34:53.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.374" endtime="20201110 08:34:53.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.349" endtime="20201110 08:34:53.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.347" endtime="20201110 08:34:53.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.383" endtime="20201110 08:34:53.670"></status>
</kw>
<msg timestamp="20201110 08:34:53.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022140361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.381" endtime="20201110 08:34:53.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022140361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.674" endtime="20201110 08:34:53.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.682" endtime="20201110 08:34:53.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.379" endtime="20201110 08:34:53.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.377" endtime="20201110 08:34:53.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:53.689" level="INFO">${RESULT} = [{'time': 0.022203278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291699999999914e-05, 'source_diff': 6.291699999999914e-05}, {'time': 0.022280319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:53.686" endtime="20201110 08:34:53.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:53.702" level="INFO">${ACCURACY} = {'source_diff': [6.291699999999914e-05, 6.37219999999987e-05, 6.301400000000013e-05, 6.286100000000086e-05, 6.3195000000002e-05, 6.35280000000002e-05, 6.35690000000029e-05, 6.367999999999999e-05, 6.37...</msg>
<status status="PASS" starttime="20201110 08:34:53.690" endtime="20201110 08:34:53.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.707" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:34:53.706" endtime="20201110 08:34:53.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.709" level="INFO">VALUE: [6.291699999999914e-05, 6.37219999999987e-05, 6.301400000000013e-05, 6.286100000000086e-05, 6.3195000000002e-05, 6.35280000000002e-05, 6.35690000000029e-05, 6.367999999999999e-05, 6.376400000000088e-05, 6.30699999999984e-05, 6.32219999999982e-05, 6.369399999999956e-05, 6.319399999999906e-05, 6.30279999999997e-05, 6.32500000000008e-05, 6.284699999999782e-05, 6.355599999999934e-05, 6.319499999999853e-05, 6.30279999999997e-05, 6.284800000000076e-05, 6.323600000000124e-05, 6.284700000000129e-05, 6.319399999999906e-05, 6.369399999999956e-05, 6.370799999999913e-05, 6.334699999999832e-05, 6.336099999999789e-05, 6.319399999999906e-05, 6.368100000000293e-05, 6.318099999999896e-05, 6.284699999999782e-05, 6.29020000000001e-05, 6.319499999999853e-05, 6.286100000000086e-05, 6.329100000000004e-05, 6.37080000000026e-05, 6.352700000000072e-05, 6.287500000000043e-05, 6.343100000000268e-05, 6.318000000000296e-05, 6.369399999999956e-05, 6.319399999999906e-05, 6.334700000000179e-05, 6.3195000000002e-05, 6.337500000000093e-05, 6.366699999999989e-05, 6.336100000000136e-05, 6.279199999999902e-05, 6.322200000000167e-05, 6.290299999999957e-05]</msg>
<status status="PASS" starttime="20201110 08:34:53.708" endtime="20201110 08:34:53.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.703" endtime="20201110 08:34:53.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.713" endtime="20201110 08:34:53.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:53.717" endtime="20201110 08:34:53.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.715" endtime="20201110 08:34:53.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.711" endtime="20201110 08:34:53.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.345" endtime="20201110 08:34:53.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.345" endtime="20201110 08:34:53.737"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.746" endtime="20201110 08:34:53.763"></status>
</kw>
<msg timestamp="20201110 08:34:53.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.744" endtime="20201110 08:34:53.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.765" endtime="20201110 08:34:53.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.767" endtime="20201110 08:34:53.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.742" endtime="20201110 08:34:53.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.740" endtime="20201110 08:34:53.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.777" endtime="20201110 08:34:54.066"></status>
</kw>
<msg timestamp="20201110 08:34:54.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02241925, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:53.774" endtime="20201110 08:34:54.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02241925, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:54.070" endtime="20201110 08:34:54.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.078" endtime="20201110 08:34:54.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.772" endtime="20201110 08:34:54.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.770" endtime="20201110 08:34:54.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.085" level="INFO">${RESULT} = [{'time': 0.02241925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.47500000000023e-05, 'source_diff': 6.47500000000023e-05}, {'time': 0.02249725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201110 08:34:54.081" endtime="20201110 08:34:54.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:54.098" level="INFO">${ACCURACY} = {'source_diff': [6.47500000000023e-05, 6.419400000000006e-05, 6.434699999999932e-05, 6.45280000000012e-05, 6.452799999999773e-05, 6.436099999999889e-05, 6.415300000000082e-05, 6.418099999999996e-05, 6...</msg>
<status status="PASS" starttime="20201110 08:34:54.086" endtime="20201110 08:34:54.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.103" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:34:54.102" endtime="20201110 08:34:54.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.105" level="INFO">VALUE: [6.47500000000023e-05, 6.419400000000006e-05, 6.434699999999932e-05, 6.45280000000012e-05, 6.452799999999773e-05, 6.436099999999889e-05, 6.415300000000082e-05, 6.418099999999996e-05, 6.469500000000003e-05, 6.452700000000172e-05, 6.386100000000186e-05, 6.419400000000006e-05, 6.40829999999995e-05, 6.387500000000143e-05, 6.469400000000056e-05, 6.438899999999803e-05, 6.384699999999882e-05, 6.455600000000034e-05, 6.386099999999839e-05, 6.440199999999813e-05, 6.381999999999916e-05, 6.429200000000052e-05, 6.40280000000007e-05, 6.437500000000193e-05, 6.436099999999889e-05, 6.469400000000056e-05, 6.420799999999963e-05, 6.419400000000006e-05, 6.434699999999932e-05, 6.417999999999702e-05, 6.470800000000013e-05, 6.436099999999889e-05, 6.40280000000007e-05, 6.419499999999953e-05, 6.419499999999953e-05, 6.411099999999864e-05, 6.386099999999839e-05, 6.387500000000143e-05, 6.387500000000143e-05, 6.436099999999889e-05, 6.436099999999889e-05, 6.469400000000056e-05, 6.420799999999963e-05, 6.42219999999992e-05, 6.433299999999975e-05, 6.424999999999834e-05, 6.434699999999932e-05, 6.3889000000001e-05, 6.468100000000046e-05, 6.40280000000007e-05]</msg>
<status status="PASS" starttime="20201110 08:34:54.104" endtime="20201110 08:34:54.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.099" endtime="20201110 08:34:54.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.109" endtime="20201110 08:34:54.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:54.112" endtime="20201110 08:34:54.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.110" endtime="20201110 08:34:54.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.107" endtime="20201110 08:34:54.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.738" endtime="20201110 08:34:54.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.738" endtime="20201110 08:34:54.133"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.141" endtime="20201110 08:34:54.159"></status>
</kw>
<msg timestamp="20201110 08:34:54.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.140" endtime="20201110 08:34:54.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.161" endtime="20201110 08:34:54.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.165" endtime="20201110 08:34:54.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.137" endtime="20201110 08:34:54.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.135" endtime="20201110 08:34:54.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.175" endtime="20201110 08:34:54.471"></status>
</kw>
<msg timestamp="20201110 08:34:54.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022247347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022312778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.173" endtime="20201110 08:34:54.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022247347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022312778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.476" endtime="20201110 08:34:54.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.484" endtime="20201110 08:34:54.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.170" endtime="20201110 08:34:54.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.168" endtime="20201110 08:34:54.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.491" level="INFO">${RESULT} = [{'time': 0.022312778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.543099999999774e-05, 'source_diff': 6.543099999999774e-05}, {'time': 0.022391778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:54.487" endtime="20201110 08:34:54.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:54.504" level="INFO">${ACCURACY} = {'source_diff': [6.543099999999774e-05, 6.536099999999989e-05, 6.52090000000001e-05, 6.486100000000286e-05, 6.498599999999952e-05, 6.520800000000063e-05, 6.554099999999882e-05, 6.486099999999939e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:54.492" endtime="20201110 08:34:54.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.509" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:34:54.508" endtime="20201110 08:34:54.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.511" level="INFO">VALUE: [6.543099999999774e-05, 6.536099999999989e-05, 6.52090000000001e-05, 6.486100000000286e-05, 6.498599999999952e-05, 6.520800000000063e-05, 6.554099999999882e-05, 6.486099999999939e-05, 6.570800000000113e-05, 6.486100000000286e-05, 6.570799999999766e-05, 6.536099999999989e-05, 6.551399999999916e-05, 6.569400000000156e-05, 6.50280000000017e-05, 6.483300000000025e-05, 6.52090000000001e-05, 6.552799999999873e-05, 6.536199999999937e-05, 6.502799999999823e-05, 6.502700000000222e-05, 6.566599999999895e-05, 6.563899999999928e-05, 6.486099999999939e-05, 6.486099999999939e-05, 6.520799999999716e-05, 6.519400000000106e-05, 6.518100000000096e-05, 6.492999999999777e-05, 6.502799999999823e-05, 6.506899999999746e-05, 6.536099999999989e-05, 6.569500000000103e-05, 6.486199999999887e-05, 6.569500000000103e-05, 6.577799999999898e-05, 6.569400000000156e-05, 6.501399999999866e-05, 6.569400000000156e-05, 6.567999999999852e-05, 6.50280000000017e-05, 6.534700000000032e-05, 6.569400000000156e-05, 6.55280000000022e-05, 6.479199999999755e-05, 6.536099999999989e-05, 6.488899999999853e-05, 6.53479999999998e-05, 6.568100000000146e-05, 6.551400000000263e-05]</msg>
<status status="PASS" starttime="20201110 08:34:54.510" endtime="20201110 08:34:54.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.505" endtime="20201110 08:34:54.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.515" endtime="20201110 08:34:54.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:54.518" endtime="20201110 08:34:54.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.517" endtime="20201110 08:34:54.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.513" endtime="20201110 08:34:54.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.134" endtime="20201110 08:34:54.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.133" endtime="20201110 08:34:54.539"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.548" endtime="20201110 08:34:54.565"></status>
</kw>
<msg timestamp="20201110 08:34:54.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.546" endtime="20201110 08:34:54.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.567" endtime="20201110 08:34:54.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.569" endtime="20201110 08:34:54.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.543" endtime="20201110 08:34:54.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.541" endtime="20201110 08:34:54.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.578" endtime="20201110 08:34:54.879"></status>
</kw>
<msg timestamp="20201110 08:34:54.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.577" endtime="20201110 08:34:54.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.884" endtime="20201110 08:34:54.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.892" endtime="20201110 08:34:54.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.574" endtime="20201110 08:34:54.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.572" endtime="20201110 08:34:54.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.899" level="INFO">${RESULT} = [{'time': 0.022371028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.593100000000171e-05, 'source_diff': 6.593100000000171e-05}, {'time': 0.022444028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:54.895" endtime="20201110 08:34:54.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:54.912" level="INFO">${ACCURACY} = {'source_diff': [6.593100000000171e-05, 6.60280000000027e-05, 6.655599999999887e-05, 6.63480000000008e-05, 6.652799999999973e-05, 6.620799999999816e-05, 6.602699999999975e-05, 6.674999999999737e-05, 6...</msg>
<status status="PASS" starttime="20201110 08:34:54.900" endtime="20201110 08:34:54.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.917" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:34:54.916" endtime="20201110 08:34:54.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.919" level="INFO">VALUE: [6.593100000000171e-05, 6.60280000000027e-05, 6.655599999999887e-05, 6.63480000000008e-05, 6.652799999999973e-05, 6.620799999999816e-05, 6.602699999999975e-05, 6.674999999999737e-05, 6.604099999999932e-05, 6.586100000000039e-05, 6.617999999999902e-05, 6.586100000000039e-05, 6.665299999999985e-05, 6.600000000000009e-05, 6.651400000000016e-05, 6.651400000000016e-05, 6.67090000000016e-05, 6.652799999999973e-05, 6.652799999999973e-05, 6.654099999999982e-05, 6.604099999999932e-05, 6.652700000000025e-05, 6.601399999999966e-05, 6.636100000000089e-05, 6.669399999999909e-05, 6.617999999999902e-05, 6.636100000000089e-05, 6.648600000000102e-05, 6.669500000000203e-05, 6.62090000000011e-05, 6.601399999999966e-05, 6.602799999999923e-05, 6.619499999999806e-05, 6.63480000000008e-05, 6.64029999999996e-05, 6.602699999999975e-05, 6.586100000000039e-05, 6.587499999999996e-05, 6.631899999999871e-05, 6.652799999999973e-05, 6.652799999999973e-05, 6.666699999999942e-05, 6.637500000000046e-05, 6.668099999999899e-05, 6.67090000000016e-05, 6.60419999999988e-05, 6.65419999999993e-05, 6.618100000000196e-05, 6.636100000000089e-05, 6.58480000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:34:54.918" endtime="20201110 08:34:54.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.913" endtime="20201110 08:34:54.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.922" endtime="20201110 08:34:54.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:54.926" endtime="20201110 08:34:54.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.924" endtime="20201110 08:34:54.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.921" endtime="20201110 08:34:54.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.540" endtime="20201110 08:34:54.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.539" endtime="20201110 08:34:54.947"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.955" endtime="20201110 08:34:54.973"></status>
</kw>
<msg timestamp="20201110 08:34:54.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.954" endtime="20201110 08:34:54.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.974" endtime="20201110 08:34:54.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.977" endtime="20201110 08:34:54.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.951" endtime="20201110 08:34:54.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.949" endtime="20201110 08:34:54.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.986" endtime="20201110 08:34:55.272"></status>
</kw>
<msg timestamp="20201110 08:34:55.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.984" endtime="20201110 08:34:55.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.276" endtime="20201110 08:34:55.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.284" endtime="20201110 08:34:55.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.982" endtime="20201110 08:34:55.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.980" endtime="20201110 08:34:55.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:55.291" level="INFO">${RESULT} = [{'time': 0.022221056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7583999999999e-05, 'source_diff': 6.7583999999999e-05}, {'time': 0.022293111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201110 08:34:55.287" endtime="20201110 08:34:55.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:55.304" level="INFO">${ACCURACY} = {'source_diff': [6.7583999999999e-05, 6.773600000000227e-05, 6.736100000000189e-05, 6.74030000000006e-05, 6.69030000000001e-05, 6.769400000000009e-05, 6.718000000000002e-05, 6.769400000000009e-05, 6.7...</msg>
<status status="PASS" starttime="20201110 08:34:55.292" endtime="20201110 08:34:55.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.309" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:34:55.308" endtime="20201110 08:34:55.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.311" level="INFO">VALUE: [6.7583999999999e-05, 6.773600000000227e-05, 6.736100000000189e-05, 6.74030000000006e-05, 6.69030000000001e-05, 6.769400000000009e-05, 6.718000000000002e-05, 6.769400000000009e-05, 6.701400000000066e-05, 6.75420000000003e-05, 6.719499999999906e-05, 6.752799999999726e-05, 6.718099999999949e-05, 6.758299999999953e-05, 6.770800000000313e-05, 6.770799999999966e-05, 6.687500000000096e-05, 6.697200000000195e-05, 6.768000000000052e-05, 6.702800000000023e-05, 6.744399999999984e-05, 6.687499999999749e-05, 6.736100000000189e-05, 6.684700000000182e-05, 6.770899999999913e-05, 6.752800000000073e-05, 6.769500000000303e-05, 6.69160000000002e-05, 6.774999999999837e-05, 6.702700000000075e-05, 6.734700000000232e-05, 6.754100000000082e-05, 6.751399999999769e-05, 6.747199999999898e-05, 6.74030000000006e-05, 6.759799999999858e-05, 6.74030000000006e-05, 6.734699999999885e-05, 6.702800000000023e-05, 6.736100000000189e-05, 6.77359999999988e-05, 6.713900000000078e-05, 6.769499999999956e-05, 6.752800000000073e-05, 6.751299999999821e-05, 6.736100000000189e-05, 6.737500000000146e-05, 6.686099999999792e-05, 6.686100000000139e-05, 6.769400000000009e-05]</msg>
<status status="PASS" starttime="20201110 08:34:55.310" endtime="20201110 08:34:55.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.305" endtime="20201110 08:34:55.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.315" endtime="20201110 08:34:55.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:55.318" endtime="20201110 08:34:55.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.317" endtime="20201110 08:34:55.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.313" endtime="20201110 08:34:55.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.948" endtime="20201110 08:34:55.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.947" endtime="20201110 08:34:55.339"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.348" endtime="20201110 08:34:55.365"></status>
</kw>
<msg timestamp="20201110 08:34:55.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.346" endtime="20201110 08:34:55.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.367" endtime="20201110 08:34:55.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.369" endtime="20201110 08:34:55.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.343" endtime="20201110 08:34:55.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.341" endtime="20201110 08:34:55.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.378" endtime="20201110 08:34:55.666"></status>
</kw>
<msg timestamp="20201110 08:34:55.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.377" endtime="20201110 08:34:55.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.671" endtime="20201110 08:34:55.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.679" endtime="20201110 08:34:55.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.374" endtime="20201110 08:34:55.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.372" endtime="20201110 08:34:55.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:55.686" level="INFO">${RESULT} = [{'time': 0.022252819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.808300000000003e-05, 'source_diff': 6.808300000000003e-05}, {'time': 0.022328833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:55.682" endtime="20201110 08:34:55.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:55.700" level="INFO">${ACCURACY} = {'source_diff': [6.808300000000003e-05, 6.854099999999835e-05, 6.869400000000109e-05, 6.802700000000175e-05, 6.852799999999826e-05, 6.817999999999755e-05, 6.85420000000013e-05, 6.787499999999849e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:55.687" endtime="20201110 08:34:55.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.704" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:34:55.703" endtime="20201110 08:34:55.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.707" level="INFO">VALUE: [6.808300000000003e-05, 6.854099999999835e-05, 6.869400000000109e-05, 6.802700000000175e-05, 6.852799999999826e-05, 6.817999999999755e-05, 6.85420000000013e-05, 6.787499999999849e-05, 6.8584e-05, 6.802799999999776e-05, 6.816700000000092e-05, 6.787499999999849e-05, 6.83619999999989e-05, 6.787500000000196e-05, 6.819500000000006e-05, 6.852700000000225e-05, 6.870800000000066e-05, 6.836099999999942e-05, 6.847199999999998e-05, 6.852800000000173e-05, 6.801399999999819e-05, 6.82220000000032e-05, 6.820800000000016e-05, 6.869500000000056e-05, 6.870900000000013e-05, 6.80420000000008e-05, 6.834799999999933e-05, 6.844500000000031e-05, 6.836099999999942e-05, 6.784699999999935e-05, 6.836099999999942e-05, 6.818000000000102e-05, 6.786100000000239e-05, 6.784699999999935e-05, 6.80420000000008e-05, 6.795799999999991e-05, 6.794400000000034e-05, 6.851399999999869e-05, 6.818100000000049e-05, 6.819500000000006e-05, 6.836099999999942e-05, 6.852800000000173e-05, 6.854100000000182e-05, 6.786100000000239e-05, 6.849999999999912e-05, 6.868000000000152e-05, 6.851400000000216e-05, 6.833300000000028e-05, 6.852800000000173e-05, 6.802800000000123e-05]</msg>
<status status="PASS" starttime="20201110 08:34:55.705" endtime="20201110 08:34:55.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.701" endtime="20201110 08:34:55.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.710" endtime="20201110 08:34:55.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:55.714" endtime="20201110 08:34:55.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.712" endtime="20201110 08:34:55.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.708" endtime="20201110 08:34:55.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.340" endtime="20201110 08:34:55.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.339" endtime="20201110 08:34:55.734"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.743" endtime="20201110 08:34:55.761"></status>
</kw>
<msg timestamp="20201110 08:34:55.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.741" endtime="20201110 08:34:55.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.763" endtime="20201110 08:34:55.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.765" endtime="20201110 08:34:55.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.739" endtime="20201110 08:34:55.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.737" endtime="20201110 08:34:55.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.774" endtime="20201110 08:34:56.061"></status>
</kw>
<msg timestamp="20201110 08:34:56.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022140069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.772" endtime="20201110 08:34:56.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022140069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.065" endtime="20201110 08:34:56.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.074" endtime="20201110 08:34:56.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.770" endtime="20201110 08:34:56.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.768" endtime="20201110 08:34:56.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.080" level="INFO">${RESULT} = [{'time': 0.022209333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.92640000000029e-05, 'source_diff': 6.92640000000029e-05}, {'time': 0.022291347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:56.077" endtime="20201110 08:34:56.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:56.093" level="INFO">${ACCURACY} = {'source_diff': [6.92640000000029e-05, 6.937499999999999e-05, 6.936100000000042e-05, 6.933299999999781e-05, 6.886099999999992e-05, 6.954199999999883e-05, 6.952799999999926e-05, 6.954199999999883e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:56.081" endtime="20201110 08:34:56.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.098" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:34:56.097" endtime="20201110 08:34:56.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.100" level="INFO">VALUE: [6.92640000000029e-05, 6.937499999999999e-05, 6.936100000000042e-05, 6.933299999999781e-05, 6.886099999999992e-05, 6.954199999999883e-05, 6.952799999999926e-05, 6.954199999999883e-05, 6.886099999999992e-05, 6.920899999999716e-05, 6.934800000000033e-05, 6.968100000000199e-05, 6.890299999999863e-05, 6.931899999999824e-05, 6.887499999999949e-05, 6.952799999999926e-05, 6.955600000000187e-05, 6.902800000000223e-05, 6.918100000000149e-05, 6.886099999999992e-05, 6.936099999999695e-05, 6.884700000000035e-05, 6.969499999999809e-05, 6.952800000000273e-05, 6.969500000000156e-05, 6.952799999999926e-05, 6.904099999999885e-05, 6.952700000000325e-05, 6.901399999999919e-05, 6.952800000000273e-05, 6.961100000000067e-05, 6.937499999999999e-05, 6.952799999999926e-05, 6.909699999999713e-05, 6.970899999999766e-05, 6.936100000000042e-05, 6.883400000000026e-05, 6.934800000000033e-05, 6.968099999999852e-05, 6.890299999999863e-05, 6.902699999999928e-05, 6.955499999999892e-05, 6.901400000000266e-05, 6.952800000000273e-05, 6.966599999999948e-05, 6.972200000000123e-05, 6.888899999999906e-05, 6.969400000000209e-05, 6.969500000000156e-05, 6.950000000000012e-05]</msg>
<status status="PASS" starttime="20201110 08:34:56.099" endtime="20201110 08:34:56.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.094" endtime="20201110 08:34:56.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.104" endtime="20201110 08:34:56.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:56.107" endtime="20201110 08:34:56.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.106" endtime="20201110 08:34:56.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.102" endtime="20201110 08:34:56.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.735" endtime="20201110 08:34:56.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.735" endtime="20201110 08:34:56.128"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.137" endtime="20201110 08:34:56.154"></status>
</kw>
<msg timestamp="20201110 08:34:56.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.135" endtime="20201110 08:34:56.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.156" endtime="20201110 08:34:56.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.158" endtime="20201110 08:34:56.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.133" endtime="20201110 08:34:56.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.131" endtime="20201110 08:34:56.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.167" endtime="20201110 08:34:56.454"></status>
</kw>
<msg timestamp="20201110 08:34:56.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.166" endtime="20201110 08:34:56.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.458" endtime="20201110 08:34:56.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.467" endtime="20201110 08:34:56.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.163" endtime="20201110 08:34:56.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.161" endtime="20201110 08:34:56.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.473" level="INFO">${RESULT} = [{'time': 0.022169264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.04169999999997e-05, 'source_diff': 7.04169999999997e-05}, {'time': 0.022250278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:56.470" endtime="20201110 08:34:56.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:56.487" level="INFO">${ACCURACY} = {'source_diff': [7.04169999999997e-05, 6.987499999999702e-05, 7.037500000000099e-05, 7.036099999999795e-05, 7.069499999999909e-05, 7.036100000000142e-05, 7.068099999999952e-05, 7.070799999999919e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:56.474" endtime="20201110 08:34:56.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.491" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:34:56.490" endtime="20201110 08:34:56.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.494" level="INFO">VALUE: [7.04169999999997e-05, 6.987499999999702e-05, 7.037500000000099e-05, 7.036099999999795e-05, 7.069499999999909e-05, 7.036100000000142e-05, 7.068099999999952e-05, 7.070799999999919e-05, 7.020799999999869e-05, 6.988900000000006e-05, 7.002799999999976e-05, 6.986100000000092e-05, 7.037499999999752e-05, 7.022199999999826e-05, 7.033299999999881e-05, 7.001400000000019e-05, 7.068099999999952e-05, 7.033400000000176e-05, 7.036099999999795e-05, 7.051400000000069e-05, 7.068000000000005e-05, 7.019399999999912e-05, 7.054100000000035e-05, 6.984700000000135e-05, 7.069399999999962e-05, 7.020799999999869e-05, 7.002799999999976e-05, 7.004199999999933e-05, 7.054199999999983e-05, 7.002799999999976e-05, 7.052800000000026e-05, 7.037500000000099e-05, 7.052800000000026e-05, 6.984800000000083e-05, 7.051400000000069e-05, 7.069399999999962e-05, 7.069399999999962e-05, 6.986099999999745e-05, 7.009800000000108e-05, 7.034699999999838e-05, 7.017999999999955e-05, 6.986099999999745e-05, 6.987500000000049e-05, 6.988900000000006e-05, 7.051400000000069e-05, 7.002799999999976e-05, 7.069500000000256e-05, 7.069499999999909e-05, 7.066600000000048e-05, 7.004099999999985e-05]</msg>
<status status="PASS" starttime="20201110 08:34:56.492" endtime="20201110 08:34:56.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.488" endtime="20201110 08:34:56.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.497" endtime="20201110 08:34:56.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:56.501" endtime="20201110 08:34:56.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.499" endtime="20201110 08:34:56.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.496" endtime="20201110 08:34:56.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.129" endtime="20201110 08:34:56.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.128" endtime="20201110 08:34:56.521"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.530" endtime="20201110 08:34:56.548"></status>
</kw>
<msg timestamp="20201110 08:34:56.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.529" endtime="20201110 08:34:56.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.550" endtime="20201110 08:34:56.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.552" endtime="20201110 08:34:56.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.526" endtime="20201110 08:34:56.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.524" endtime="20201110 08:34:56.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.561" endtime="20201110 08:34:56.847"></status>
</kw>
<msg timestamp="20201110 08:34:56.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.560" endtime="20201110 08:34:56.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.852" endtime="20201110 08:34:56.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.860" endtime="20201110 08:34:56.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.557" endtime="20201110 08:34:56.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.555" endtime="20201110 08:34:56.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.867" level="INFO">${RESULT} = [{'time': 0.022200889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.144499999999984e-05, 'source_diff': 7.144499999999984e-05}, {'time': 0.022286903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:56.863" endtime="20201110 08:34:56.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:56.880" level="INFO">${ACCURACY} = {'source_diff': [7.144499999999984e-05, 7.152800000000126e-05, 7.079200000000008e-05, 7.102800000000076e-05, 7.119500000000306e-05, 7.086099999999845e-05, 7.102800000000076e-05, 7.119400000000012e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:56.868" endtime="20201110 08:34:56.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.884" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:34:56.883" endtime="20201110 08:34:56.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.887" level="INFO">VALUE: [7.144499999999984e-05, 7.152800000000126e-05, 7.079200000000008e-05, 7.102800000000076e-05, 7.119500000000306e-05, 7.086099999999845e-05, 7.102800000000076e-05, 7.119400000000012e-05, 7.166599999999801e-05, 7.154099999999788e-05, 7.086099999999845e-05, 7.136099999999895e-05, 7.149999999999865e-05, 7.119400000000012e-05, 7.086099999999845e-05, 7.169500000000009e-05, 7.136100000000242e-05, 7.134699999999938e-05, 7.152800000000126e-05, 7.102800000000076e-05, 7.136199999999843e-05, 7.119400000000012e-05, 7.086100000000192e-05, 7.136099999999895e-05, 7.169400000000062e-05, 7.136099999999895e-05, 7.170800000000019e-05, 7.115299999999741e-05, 7.084699999999888e-05, 7.119499999999959e-05, 7.137499999999852e-05, 7.137499999999852e-05, 7.086100000000192e-05, 7.13620000000019e-05, 7.168100000000052e-05, 7.087500000000149e-05, 7.099999999999815e-05, 7.169400000000062e-05, 7.136100000000242e-05, 7.086099999999845e-05, 7.086099999999845e-05, 7.086099999999845e-05, 7.123700000000177e-05, 7.087500000000149e-05, 7.154200000000083e-05, 7.169500000000009e-05, 7.086199999999793e-05, 7.154099999999788e-05, 7.086100000000192e-05, 7.119400000000012e-05]</msg>
<status status="PASS" starttime="20201110 08:34:56.886" endtime="20201110 08:34:56.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.881" endtime="20201110 08:34:56.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.890" endtime="20201110 08:34:56.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:56.894" endtime="20201110 08:34:56.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.892" endtime="20201110 08:34:56.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.889" endtime="20201110 08:34:56.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.522" endtime="20201110 08:34:56.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.522" endtime="20201110 08:34:56.915"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.923" endtime="20201110 08:34:56.941"></status>
</kw>
<msg timestamp="20201110 08:34:56.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.922" endtime="20201110 08:34:56.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.943" endtime="20201110 08:34:56.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.945" endtime="20201110 08:34:56.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.919" endtime="20201110 08:34:56.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.917" endtime="20201110 08:34:56.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.954" endtime="20201110 08:34:57.244"></status>
</kw>
<msg timestamp="20201110 08:34:57.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022161417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.953" endtime="20201110 08:34:57.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022161417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.248" endtime="20201110 08:34:57.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.256" endtime="20201110 08:34:57.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.950" endtime="20201110 08:34:57.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.949" endtime="20201110 08:34:57.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:57.263" level="INFO">${RESULT} = [{'time': 0.022233736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.231900000000124e-05, 'source_diff': 7.231900000000124e-05}, {'time': 0.022320694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:57.259" endtime="20201110 08:34:57.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:57.276" level="INFO">${ACCURACY} = {'source_diff': [7.231900000000124e-05, 7.270799999999772e-05, 7.269399999999815e-05, 7.254099999999888e-05, 7.248600000000008e-05, 7.202799999999829e-05, 7.240300000000213e-05, 7.236099999999995e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:57.264" endtime="20201110 08:34:57.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.280" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:34:57.279" endtime="20201110 08:34:57.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.283" level="INFO">VALUE: [7.231900000000124e-05, 7.270799999999772e-05, 7.269399999999815e-05, 7.254099999999888e-05, 7.248600000000008e-05, 7.202799999999829e-05, 7.240300000000213e-05, 7.236099999999995e-05, 7.20560000000009e-05, 7.266699999999848e-05, 7.269500000000109e-05, 7.254200000000183e-05, 7.204100000000185e-05, 7.236099999999995e-05, 7.204100000000185e-05, 7.198599999999958e-05, 7.255499999999845e-05, 7.230500000000167e-05, 7.209799999999961e-05, 7.267999999999858e-05, 7.219400000000112e-05, 7.184699999999988e-05, 7.184699999999988e-05, 7.257000000000097e-05, 7.216700000000145e-05, 7.268099999999805e-05, 7.205500000000142e-05, 7.268100000000152e-05, 7.202799999999829e-05, 7.254099999999888e-05, 7.181899999999727e-05, 7.188900000000206e-05, 7.241699999999823e-05, 7.252800000000226e-05, 7.233300000000081e-05, 7.188900000000206e-05, 7.202799999999829e-05, 7.202799999999829e-05, 7.190199999999869e-05, 7.202800000000176e-05, 7.220800000000069e-05, 7.215300000000188e-05, 7.252699999999931e-05, 7.202800000000176e-05, 7.218000000000155e-05, 7.237499999999952e-05, 7.218000000000155e-05, 7.227699999999906e-05, 7.219400000000112e-05, 7.269499999999762e-05]</msg>
<status status="PASS" starttime="20201110 08:34:57.281" endtime="20201110 08:34:57.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.277" endtime="20201110 08:34:57.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.292" endtime="20201110 08:34:57.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:57.295" endtime="20201110 08:34:57.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.294" endtime="20201110 08:34:57.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.290" endtime="20201110 08:34:57.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.916" endtime="20201110 08:34:57.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.915" endtime="20201110 08:34:57.316"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.325" endtime="20201110 08:34:57.342"></status>
</kw>
<msg timestamp="20201110 08:34:57.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.323" endtime="20201110 08:34:57.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.344" endtime="20201110 08:34:57.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.346" endtime="20201110 08:34:57.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.320" endtime="20201110 08:34:57.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.318" endtime="20201110 08:34:57.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.355" endtime="20201110 08:34:57.643"></status>
</kw>
<msg timestamp="20201110 08:34:57.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022262958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.354" endtime="20201110 08:34:57.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022262958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.647" endtime="20201110 08:34:57.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.655" endtime="20201110 08:34:57.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.351" endtime="20201110 08:34:57.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.350" endtime="20201110 08:34:57.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:57.662" level="INFO">${RESULT} = [{'time': 0.022262958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.376400000000047e-05, 'source_diff': 7.376400000000047e-05}, {'time': 0.022347958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:57.658" endtime="20201110 08:34:57.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:57.675" level="INFO">${ACCURACY} = {'source_diff': [7.376400000000047e-05, 7.369400000000262e-05, 7.302799999999929e-05, 7.302799999999929e-05, 7.336099999999748e-05, 7.302799999999929e-05, 7.291599999999926e-05, 7.351400000000022e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:57.663" endtime="20201110 08:34:57.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.680" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:34:57.679" endtime="20201110 08:34:57.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.682" level="INFO">VALUE: [7.376400000000047e-05, 7.369400000000262e-05, 7.302799999999929e-05, 7.302799999999929e-05, 7.336099999999748e-05, 7.302799999999929e-05, 7.291599999999926e-05, 7.351400000000022e-05, 7.369500000000209e-05, 7.306899999999852e-05, 7.372200000000176e-05, 7.336200000000043e-05, 7.286100000000045e-05, 7.301300000000024e-05, 7.287500000000002e-05, 7.284700000000088e-05, 7.284700000000088e-05, 7.334699999999791e-05, 7.336100000000095e-05, 7.337500000000052e-05, 7.336100000000095e-05, 7.316699999999898e-05, 7.358300000000206e-05, 7.304199999999886e-05, 7.369500000000209e-05, 7.367999999999958e-05, 7.336100000000095e-05, 7.316599999999951e-05, 7.369399999999915e-05, 7.334699999999791e-05, 7.286100000000045e-05, 7.286100000000045e-05, 7.318099999999855e-05, 7.369499999999862e-05, 7.283400000000079e-05, 7.368099999999905e-05, 7.302800000000276e-05, 7.320800000000169e-05, 7.370799999999872e-05, 7.351300000000074e-05, 7.369399999999915e-05, 7.369400000000262e-05, 7.316699999999898e-05, 7.369400000000262e-05, 7.326399999999997e-05, 7.320900000000116e-05, 7.352799999999979e-05, 7.369500000000209e-05, 7.352799999999979e-05, 7.301399999999972e-05]</msg>
<status status="PASS" starttime="20201110 08:34:57.681" endtime="20201110 08:34:57.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.676" endtime="20201110 08:34:57.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.686" endtime="20201110 08:34:57.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:57.689" endtime="20201110 08:34:57.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.688" endtime="20201110 08:34:57.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.684" endtime="20201110 08:34:57.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.317" endtime="20201110 08:34:57.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.316" endtime="20201110 08:34:57.710"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.720" endtime="20201110 08:34:57.738"></status>
</kw>
<msg timestamp="20201110 08:34:57.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.718" endtime="20201110 08:34:57.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.739" endtime="20201110 08:34:57.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.742" endtime="20201110 08:34:57.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.715" endtime="20201110 08:34:57.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.713" endtime="20201110 08:34:57.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.751" endtime="20201110 08:34:58.037"></status>
</kw>
<msg timestamp="20201110 08:34:58.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023237069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023311292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.749" endtime="20201110 08:34:58.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023237069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023311292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.042" endtime="20201110 08:34:58.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.050" endtime="20201110 08:34:58.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.747" endtime="20201110 08:34:58.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.745" endtime="20201110 08:34:58.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.057" level="INFO">${RESULT} = [{'time': 0.023311292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.422300000000173e-05, 'source_diff': 7.422300000000173e-05}, {'time': 0.023398306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:58.053" endtime="20201110 08:34:58.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:58.070" level="INFO">${ACCURACY} = {'source_diff': [7.422300000000173e-05, 7.469499999999962e-05, 7.469400000000015e-05, 7.395799999999897e-05, 7.401400000000072e-05, 7.429100000000063e-05, 7.383300000000231e-05, 7.386100000000145e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:58.058" endtime="20201110 08:34:58.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.075" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:34:58.074" endtime="20201110 08:34:58.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.077" level="INFO">VALUE: [7.422300000000173e-05, 7.469499999999962e-05, 7.469400000000015e-05, 7.395799999999897e-05, 7.401400000000072e-05, 7.429100000000063e-05, 7.383300000000231e-05, 7.386100000000145e-05, 7.452800000000079e-05, 7.419399999999965e-05, 7.454200000000036e-05, 7.452800000000079e-05, 7.402800000000029e-05, 7.402800000000029e-05, 7.434800000000186e-05, 7.454100000000088e-05, 7.436100000000195e-05, 7.402700000000081e-05, 7.418000000000008e-05, 7.402800000000029e-05, 7.466700000000048e-05, 7.469400000000015e-05, 7.452800000000079e-05, 7.468100000000005e-05, 7.423599999999836e-05, 7.390199999999722e-05, 7.400000000000115e-05, 7.456900000000002e-05, 7.390300000000016e-05, 7.379100000000013e-05, 7.413900000000084e-05, 7.386100000000145e-05, 7.469400000000015e-05, 7.387500000000102e-05, 7.386100000000145e-05, 7.430599999999968e-05, 7.390300000000016e-05, 7.469499999999962e-05, 7.436100000000195e-05, 7.420899999999869e-05, 7.391699999999973e-05, 7.470799999999972e-05, 7.42639999999975e-05, 7.401399999999725e-05, 7.418000000000008e-05, 7.404199999999986e-05, 7.387500000000102e-05, 7.383399999999832e-05, 7.469400000000015e-05, 7.437499999999805e-05]</msg>
<status status="PASS" starttime="20201110 08:34:58.076" endtime="20201110 08:34:58.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.071" endtime="20201110 08:34:58.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.081" endtime="20201110 08:34:58.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:58.084" endtime="20201110 08:34:58.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.082" endtime="20201110 08:34:58.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.079" endtime="20201110 08:34:58.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.711" endtime="20201110 08:34:58.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.710" endtime="20201110 08:34:58.105"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.113" endtime="20201110 08:34:58.131"></status>
</kw>
<msg timestamp="20201110 08:34:58.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.112" endtime="20201110 08:34:58.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.133" endtime="20201110 08:34:58.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.135" endtime="20201110 08:34:58.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.109" endtime="20201110 08:34:58.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.107" endtime="20201110 08:34:58.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.144" endtime="20201110 08:34:58.431"></status>
</kw>
<msg timestamp="20201110 08:34:58.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.143" endtime="20201110 08:34:58.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.435" endtime="20201110 08:34:58.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.443" endtime="20201110 08:34:58.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.140" endtime="20201110 08:34:58.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.138" endtime="20201110 08:34:58.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.450" level="INFO">${RESULT} = [{'time': 0.022159611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.497199999999954e-05, 'source_diff': 7.497199999999954e-05}, {'time': 0.022243583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:58.447" endtime="20201110 08:34:58.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:58.463" level="INFO">${ACCURACY} = {'source_diff': [7.497199999999954e-05, 7.519400000000065e-05, 7.504100000000138e-05, 7.561099999999973e-05, 7.519400000000065e-05, 7.519400000000065e-05, 7.499999999999868e-05, 7.502800000000129e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:58.451" endtime="20201110 08:34:58.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.468" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:34:58.467" endtime="20201110 08:34:58.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.470" level="INFO">VALUE: [7.497199999999954e-05, 7.519400000000065e-05, 7.504100000000138e-05, 7.561099999999973e-05, 7.519400000000065e-05, 7.519400000000065e-05, 7.499999999999868e-05, 7.502800000000129e-05, 7.569499999999715e-05, 7.488900000000159e-05, 7.552800000000179e-05, 7.486200000000193e-05, 7.536100000000295e-05, 7.572200000000029e-05, 7.488899999999812e-05, 7.569399999999768e-05, 7.566599999999854e-05, 7.569400000000115e-05, 7.552799999999832e-05, 7.519400000000065e-05, 7.537500000000252e-05, 7.533399999999982e-05, 7.554199999999789e-05, 7.486100000000245e-05, 7.502699999999835e-05, 7.569500000000062e-05, 7.518000000000108e-05, 7.552699999999885e-05, 7.552799999999832e-05, 7.501399999999825e-05, 7.534699999999991e-05, 7.536099999999948e-05, 7.537499999999905e-05, 7.502800000000129e-05, 7.502800000000129e-05, 7.570900000000019e-05, 7.538800000000262e-05, 7.486200000000193e-05, 7.505500000000095e-05, 7.552699999999885e-05, 7.534699999999991e-05, 7.53050000000012e-05, 7.552800000000179e-05, 7.502799999999782e-05, 7.519500000000012e-05, 7.548600000000308e-05, 7.519500000000012e-05, 7.552799999999832e-05, 7.550000000000265e-05, 7.536199999999896e-05]</msg>
<status status="PASS" starttime="20201110 08:34:58.469" endtime="20201110 08:34:58.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.464" endtime="20201110 08:34:58.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.474" endtime="20201110 08:34:58.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:58.477" endtime="20201110 08:34:58.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.476" endtime="20201110 08:34:58.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.472" endtime="20201110 08:34:58.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.106" endtime="20201110 08:34:58.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.105" endtime="20201110 08:34:58.498"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.507" endtime="20201110 08:34:58.525"></status>
</kw>
<msg timestamp="20201110 08:34:58.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.505" endtime="20201110 08:34:58.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.527" endtime="20201110 08:34:58.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.529" endtime="20201110 08:34:58.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.502" endtime="20201110 08:34:58.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.500" endtime="20201110 08:34:58.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.538" endtime="20201110 08:34:58.826"></status>
</kw>
<msg timestamp="20201110 08:34:58.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022603806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.537" endtime="20201110 08:34:58.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022603806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.830" endtime="20201110 08:34:58.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.839" endtime="20201110 08:34:58.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.534" endtime="20201110 08:34:58.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.532" endtime="20201110 08:34:58.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.845" level="INFO">${RESULT} = [{'time': 0.022603806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.62639999999995e-05, 'source_diff': 7.62639999999995e-05}, {'time': 0.022690833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:58.842" endtime="20201110 08:34:58.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:58.858" level="INFO">${ACCURACY} = {'source_diff': [7.62639999999995e-05, 7.634700000000091e-05, 7.619399999999818e-05, 7.619400000000165e-05, 7.652799999999932e-05, 7.636100000000048e-05, 7.670800000000172e-05, 7.668099999999858e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:58.846" endtime="20201110 08:34:58.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.863" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:34:58.862" endtime="20201110 08:34:58.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.865" level="INFO">VALUE: [7.62639999999995e-05, 7.634700000000091e-05, 7.619399999999818e-05, 7.619400000000165e-05, 7.652799999999932e-05, 7.636100000000048e-05, 7.670800000000172e-05, 7.668099999999858e-05, 7.670800000000172e-05, 7.654200000000236e-05, 7.636100000000048e-05, 7.654199999999889e-05, 7.672200000000129e-05, 7.654099999999942e-05, 7.620799999999775e-05, 7.602699999999935e-05, 7.641700000000223e-05, 7.650000000000018e-05, 7.587499999999955e-05, 7.636100000000048e-05, 7.586099999999998e-05, 7.65700000000015e-05, 7.619500000000112e-05, 7.605599999999796e-05, 7.652800000000279e-05, 7.602799999999882e-05, 7.591699999999826e-05, 7.59029999999987e-05, 7.634699999999744e-05, 7.652699999999985e-05, 7.633299999999787e-05, 7.619399999999818e-05, 7.586099999999998e-05, 7.654199999999889e-05, 7.637500000000005e-05, 7.620900000000069e-05, 7.587499999999955e-05, 7.586099999999998e-05, 7.652799999999932e-05, 7.669500000000162e-05, 7.652699999999985e-05, 7.586099999999998e-05, 7.622199999999732e-05, 7.636100000000048e-05, 7.624999999999993e-05, 7.652799999999932e-05, 7.645800000000147e-05, 7.618099999999808e-05, 7.584700000000041e-05, 7.650000000000018e-05]</msg>
<status status="PASS" starttime="20201110 08:34:58.864" endtime="20201110 08:34:58.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.859" endtime="20201110 08:34:58.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.869" endtime="20201110 08:34:58.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:58.872" endtime="20201110 08:34:58.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.871" endtime="20201110 08:34:58.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.867" endtime="20201110 08:34:58.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.499" endtime="20201110 08:34:58.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.498" endtime="20201110 08:34:58.893"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.902" endtime="20201110 08:34:58.921"></status>
</kw>
<msg timestamp="20201110 08:34:58.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.900" endtime="20201110 08:34:58.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.922" endtime="20201110 08:34:58.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.925" endtime="20201110 08:34:58.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.898" endtime="20201110 08:34:58.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.896" endtime="20201110 08:34:58.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.934" endtime="20201110 08:34:59.220"></status>
</kw>
<msg timestamp="20201110 08:34:59.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022160097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.932" endtime="20201110 08:34:59.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022160097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.225" endtime="20201110 08:34:59.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.233" endtime="20201110 08:34:59.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.929" endtime="20201110 08:34:59.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.928" endtime="20201110 08:34:59.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.240" level="INFO">${RESULT} = [{'time': 0.022237514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.741699999999976e-05, 'source_diff': 7.741699999999976e-05}, {'time': 0.022322542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:59.236" endtime="20201110 08:34:59.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:59.253" level="INFO">${ACCURACY} = {'source_diff': [7.741699999999976e-05, 7.754199999999989e-05, 7.769499999999915e-05, 7.736099999999801e-05, 7.769499999999915e-05, 7.768000000000011e-05, 7.702700000000035e-05, 7.72640000000005e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:59.241" endtime="20201110 08:34:59.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.257" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:34:59.256" endtime="20201110 08:34:59.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.260" level="INFO">VALUE: [7.741699999999976e-05, 7.754199999999989e-05, 7.769499999999915e-05, 7.736099999999801e-05, 7.769499999999915e-05, 7.768000000000011e-05, 7.702700000000035e-05, 7.72640000000005e-05, 7.768000000000011e-05, 7.736100000000148e-05, 7.686099999999751e-05, 7.769399999999968e-05, 7.719499999999865e-05, 7.777800000000057e-05, 7.736100000000148e-05, 7.684800000000089e-05, 7.734799999999792e-05, 7.752800000000032e-05, 7.687500000000055e-05, 7.702700000000035e-05, 7.686099999999751e-05, 7.770799999999925e-05, 7.736100000000148e-05, 7.769499999999915e-05, 7.77229999999983e-05, 7.684700000000141e-05, 7.687500000000055e-05, 7.752800000000032e-05, 7.736200000000096e-05, 7.752799999999685e-05, 7.701300000000078e-05, 7.719399999999918e-05, 7.763900000000087e-05, 7.756999999999903e-05, 7.736099999999801e-05, 7.765300000000044e-05, 7.702799999999982e-05, 7.737499999999758e-05, 7.769500000000262e-05, 7.702799999999982e-05, 7.715299999999994e-05, 7.736200000000096e-05, 7.752800000000032e-05, 7.704099999999992e-05, 7.74310000000028e-05, 7.736100000000148e-05, 7.752799999999685e-05, 7.754199999999989e-05, 7.701400000000025e-05, 7.737499999999758e-05]</msg>
<status status="PASS" starttime="20201110 08:34:59.259" endtime="20201110 08:34:59.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.254" endtime="20201110 08:34:59.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.264" endtime="20201110 08:34:59.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.267" endtime="20201110 08:34:59.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.265" endtime="20201110 08:34:59.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.262" endtime="20201110 08:34:59.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.894" endtime="20201110 08:34:59.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.894" endtime="20201110 08:34:59.288"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.296" endtime="20201110 08:34:59.314"></status>
</kw>
<msg timestamp="20201110 08:34:59.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.295" endtime="20201110 08:34:59.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.316" endtime="20201110 08:34:59.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.318" endtime="20201110 08:34:59.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.292" endtime="20201110 08:34:59.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.290" endtime="20201110 08:34:59.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.327" endtime="20201110 08:34:59.614"></status>
</kw>
<msg timestamp="20201110 08:34:59.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.326" endtime="20201110 08:34:59.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.618" endtime="20201110 08:34:59.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.627" endtime="20201110 08:34:59.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.323" endtime="20201110 08:34:59.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.322" endtime="20201110 08:34:59.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.633" level="INFO">${RESULT} = [{'time': 0.022206875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.793099999999983e-05, 'source_diff': 7.793099999999983e-05}, {'time': 0.022296972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:59.630" endtime="20201110 08:34:59.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:59.647" level="INFO">${ACCURACY} = {'source_diff': [7.793099999999983e-05, 7.844400000000043e-05, 7.852800000000132e-05, 7.790199999999775e-05, 7.852800000000132e-05, 7.820900000000269e-05, 7.818100000000008e-05, 7.869400000000068e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:59.634" endtime="20201110 08:34:59.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.651" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:34:59.650" endtime="20201110 08:34:59.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.653" level="INFO">VALUE: [7.793099999999983e-05, 7.844400000000043e-05, 7.852800000000132e-05, 7.790199999999775e-05, 7.852800000000132e-05, 7.820900000000269e-05, 7.818100000000008e-05, 7.869400000000068e-05, 7.815200000000147e-05, 7.816600000000104e-05, 7.852800000000132e-05, 7.84030000000012e-05, 7.836100000000248e-05, 7.852800000000132e-05, 7.805599999999996e-05, 7.786100000000198e-05, 7.819499999999965e-05, 7.837500000000205e-05, 7.870800000000025e-05, 7.870800000000025e-05, 7.836099999999901e-05, 7.836100000000248e-05, 7.784700000000241e-05, 7.804200000000039e-05, 7.801400000000125e-05, 7.869400000000068e-05, 7.804200000000039e-05, 7.818100000000008e-05, 7.852800000000132e-05, 7.786100000000198e-05, 7.793000000000036e-05, 7.787499999999808e-05, 7.838899999999815e-05, 7.786100000000198e-05, 7.834699999999944e-05, 7.870800000000025e-05, 7.787500000000155e-05, 7.819400000000018e-05, 7.852799999999785e-05, 7.820900000000269e-05, 7.787499999999808e-05, 7.836099999999901e-05, 7.819499999999965e-05, 7.869500000000015e-05, 7.847199999999957e-05, 7.788899999999765e-05, 7.852699999999838e-05, 7.852800000000132e-05, 7.837499999999858e-05, 7.833299999999987e-05]</msg>
<status status="PASS" starttime="20201110 08:34:59.652" endtime="20201110 08:34:59.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.647" endtime="20201110 08:34:59.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.657" endtime="20201110 08:34:59.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.661" endtime="20201110 08:34:59.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.659" endtime="20201110 08:34:59.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.655" endtime="20201110 08:34:59.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.289" endtime="20201110 08:34:59.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.288" endtime="20201110 08:34:59.681"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.690" endtime="20201110 08:34:59.708"></status>
</kw>
<msg timestamp="20201110 08:34:59.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.688" endtime="20201110 08:34:59.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.710" endtime="20201110 08:34:59.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.712" endtime="20201110 08:34:59.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.686" endtime="20201110 08:34:59.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.684" endtime="20201110 08:34:59.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.721" endtime="20201110 08:35:00.008"></status>
</kw>
<msg timestamp="20201110 08:35:00.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022237278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.720" endtime="20201110 08:35:00.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022237278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.013" endtime="20201110 08:35:00.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.021" endtime="20201110 08:35:00.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.717" endtime="20201110 08:35:00.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.715" endtime="20201110 08:35:00.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:00.027" level="INFO">${RESULT} = [{'time': 0.022316361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.908300000000063e-05, 'source_diff': 7.908300000000063e-05}, {'time': 0.022409431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:00.024" endtime="20201110 08:35:00.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:00.041" level="INFO">${ACCURACY} = {'source_diff': [7.908300000000063e-05, 7.90840000000001e-05, 7.937499999999958e-05, 7.886099999999951e-05, 7.919500000000065e-05, 7.89030000000017e-05, 7.902800000000182e-05, 7.884800000000289e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:35:00.028" endtime="20201110 08:35:00.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.045" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:35:00.044" endtime="20201110 08:35:00.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.048" level="INFO">VALUE: [7.908300000000063e-05, 7.90840000000001e-05, 7.937499999999958e-05, 7.886099999999951e-05, 7.919500000000065e-05, 7.89030000000017e-05, 7.902800000000182e-05, 7.884800000000289e-05, 7.952700000000285e-05, 7.937500000000305e-05, 7.94169999999983e-05, 7.969399999999821e-05, 7.961100000000026e-05, 7.954199999999842e-05, 7.969399999999821e-05, 7.887500000000255e-05, 7.951399999999928e-05, 7.969500000000115e-05, 7.919500000000065e-05, 7.918100000000108e-05, 7.958299999999766e-05, 7.969399999999821e-05, 7.918000000000161e-05, 7.886099999999951e-05, 7.954200000000189e-05, 7.951399999999928e-05, 7.919500000000065e-05, 7.969499999999768e-05, 7.969500000000115e-05, 7.886099999999951e-05, 7.934799999999992e-05, 7.902799999999835e-05, 7.968099999999811e-05, 7.952699999999938e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.919400000000118e-05, 7.954200000000189e-05, 7.902800000000182e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.952800000000232e-05, 7.966700000000201e-05, 7.951399999999928e-05, 7.952800000000232e-05, 7.952699999999938e-05, 7.952700000000285e-05, 7.972200000000082e-05, 7.930499999999827e-05, 7.952799999999885e-05]</msg>
<status status="PASS" starttime="20201110 08:35:00.046" endtime="20201110 08:35:00.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.042" endtime="20201110 08:35:00.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.051" endtime="20201110 08:35:00.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:00.055" endtime="20201110 08:35:00.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.053" endtime="20201110 08:35:00.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.050" endtime="20201110 08:35:00.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.682" endtime="20201110 08:35:00.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.682" endtime="20201110 08:35:00.076"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.084" endtime="20201110 08:35:00.103"></status>
</kw>
<msg timestamp="20201110 08:35:00.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.083" endtime="20201110 08:35:00.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.104" endtime="20201110 08:35:00.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.107" endtime="20201110 08:35:00.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.080" endtime="20201110 08:35:00.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.078" endtime="20201110 08:35:00.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.116" endtime="20201110 08:35:00.404"></status>
</kw>
<msg timestamp="20201110 08:35:00.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022073944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022154042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.114" endtime="20201110 08:35:00.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022073944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022154042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.408" endtime="20201110 08:35:00.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.416" endtime="20201110 08:35:00.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.112" endtime="20201110 08:35:00.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.110" endtime="20201110 08:35:00.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:00.423" level="INFO">${RESULT} = [{'time': 0.022154042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.00979999999972e-05, 'source_diff': 8.00979999999972e-05}, {'time': 0.022249042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:00.420" endtime="20201110 08:35:00.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:00.436" level="INFO">${ACCURACY} = {'source_diff': [8.00979999999972e-05, 8.036100000000101e-05, 7.988899999999965e-05, 8.00130000000003e-05, 8.036100000000101e-05, 7.987500000000008e-05, 8.036100000000101e-05, 8.067999999999964e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:35:00.424" endtime="20201110 08:35:00.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.441" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:35:00.440" endtime="20201110 08:35:00.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.443" level="INFO">VALUE: [8.00979999999972e-05, 8.036100000000101e-05, 7.988899999999965e-05, 8.00130000000003e-05, 8.036100000000101e-05, 7.987500000000008e-05, 8.036100000000101e-05, 8.067999999999964e-05, 7.986100000000051e-05, 8.018099999999861e-05, 8.069500000000215e-05, 7.986100000000051e-05, 8.052799999999985e-05, 8.037500000000058e-05, 7.986100000000051e-05, 8.037499999999712e-05, 8.051400000000028e-05, 8.002699999999988e-05, 7.999999999999674e-05, 7.986100000000051e-05, 8.048599999999767e-05, 8.002799999999935e-05, 8.069499999999868e-05, 8.037499999999712e-05, 8.069500000000215e-05, 8.001399999999978e-05, 8.068099999999911e-05, 8.004099999999945e-05, 8.054099999999995e-05, 8.052700000000038e-05, 7.986099999999705e-05, 8.069399999999921e-05, 8.005599999999849e-05, 8.068100000000258e-05, 8.020900000000122e-05, 8.002799999999935e-05, 8.069499999999868e-05, 8.055499999999952e-05, 8.069400000000268e-05, 7.986100000000051e-05, 8.016599999999957e-05, 8.034700000000145e-05, 8.036099999999755e-05, 8.004200000000239e-05, 8.069399999999921e-05, 8.070799999999878e-05, 8.001400000000325e-05, 8.052799999999985e-05, 7.986100000000051e-05, 8.019499999999818e-05]</msg>
<status status="PASS" starttime="20201110 08:35:00.442" endtime="20201110 08:35:00.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.437" endtime="20201110 08:35:00.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.447" endtime="20201110 08:35:00.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:00.450" endtime="20201110 08:35:00.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.449" endtime="20201110 08:35:00.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.445" endtime="20201110 08:35:00.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.077" endtime="20201110 08:35:00.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.076" endtime="20201110 08:35:00.471"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.480" endtime="20201110 08:35:00.498"></status>
</kw>
<msg timestamp="20201110 08:35:00.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.478" endtime="20201110 08:35:00.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.500" endtime="20201110 08:35:00.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.502" endtime="20201110 08:35:00.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.476" endtime="20201110 08:35:00.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.474" endtime="20201110 08:35:00.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.511" endtime="20201110 08:35:00.799"></status>
</kw>
<msg timestamp="20201110 08:35:00.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.510" endtime="20201110 08:35:00.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.803" endtime="20201110 08:35:00.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.811" endtime="20201110 08:35:00.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.507" endtime="20201110 08:35:00.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.506" endtime="20201110 08:35:00.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:00.818" level="INFO">${RESULT} = [{'time': 0.022259042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.174999999999849e-05, 'source_diff': 8.174999999999849e-05}, {'time': 0.022352056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:00.815" endtime="20201110 08:35:00.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:00.831" level="INFO">${ACCURACY} = {'source_diff': [8.174999999999849e-05, 8.137499999999812e-05, 8.154100000000095e-05, 8.154100000000095e-05, 8.154099999999748e-05, 8.104100000000045e-05, 8.120799999999928e-05, 8.087500000000108e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:00.819" endtime="20201110 08:35:00.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.836" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:35:00.835" endtime="20201110 08:35:00.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.838" level="INFO">VALUE: [8.174999999999849e-05, 8.137499999999812e-05, 8.154100000000095e-05, 8.154100000000095e-05, 8.154099999999748e-05, 8.104100000000045e-05, 8.120799999999928e-05, 8.087500000000108e-05, 8.113899999999744e-05, 8.119399999999971e-05, 8.169499999999968e-05, 8.101400000000078e-05, 8.136099999999855e-05, 8.154200000000042e-05, 8.120799999999928e-05, 8.106899999999959e-05, 8.095799999999903e-05, 8.120799999999928e-05, 8.152800000000085e-05, 8.169399999999674e-05, 8.169400000000021e-05, 8.169400000000021e-05, 8.087500000000108e-05, 8.169499999999968e-05, 8.156900000000009e-05, 8.119500000000265e-05, 8.154099999999748e-05, 8.169399999999674e-05, 8.086100000000151e-05, 8.137499999999812e-05, 8.169400000000021e-05, 8.120799999999928e-05, 8.167999999999717e-05, 8.119399999999971e-05, 8.170899999999925e-05, 8.120899999999875e-05, 8.091600000000032e-05, 8.136200000000149e-05, 8.115199999999753e-05, 8.120799999999928e-05, 8.08329999999989e-05, 8.102700000000088e-05, 8.169400000000021e-05, 8.137500000000158e-05, 8.09169999999998e-05, 8.136099999999855e-05, 8.088900000000065e-05, 8.136099999999855e-05, 8.119499999999918e-05, 8.118099999999961e-05]</msg>
<status status="PASS" starttime="20201110 08:35:00.837" endtime="20201110 08:35:00.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.832" endtime="20201110 08:35:00.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.842" endtime="20201110 08:35:00.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:00.845" endtime="20201110 08:35:00.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.844" endtime="20201110 08:35:00.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.840" endtime="20201110 08:35:00.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.472" endtime="20201110 08:35:00.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.471" endtime="20201110 08:35:00.866"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.875" endtime="20201110 08:35:00.894"></status>
</kw>
<msg timestamp="20201110 08:35:00.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.873" endtime="20201110 08:35:00.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.895" endtime="20201110 08:35:00.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.897" endtime="20201110 08:35:00.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.871" endtime="20201110 08:35:00.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.869" endtime="20201110 08:35:00.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.906" endtime="20201110 08:35:01.193"></status>
</kw>
<msg timestamp="20201110 08:35:01.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022242069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.905" endtime="20201110 08:35:01.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022242069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.197" endtime="20201110 08:35:01.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.206" endtime="20201110 08:35:01.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.902" endtime="20201110 08:35:01.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.901" endtime="20201110 08:35:01.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.212" level="INFO">${RESULT} = [{'time': 0.022242069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.21109999999993e-05, 'source_diff': 8.21109999999993e-05}, {'time': 0.022329069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:01.209" endtime="20201110 08:35:01.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:01.226" level="INFO">${ACCURACY} = {'source_diff': [8.21109999999993e-05, 8.222199999999985e-05, 8.202800000000135e-05, 8.184699999999948e-05, 8.184699999999948e-05, 8.236099999999955e-05, 8.181900000000034e-05, 8.204200000000092e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:01.213" endtime="20201110 08:35:01.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.230" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:35:01.229" endtime="20201110 08:35:01.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.233" level="INFO">VALUE: [8.21109999999993e-05, 8.222199999999985e-05, 8.202800000000135e-05, 8.184699999999948e-05, 8.184699999999948e-05, 8.236099999999955e-05, 8.181900000000034e-05, 8.204200000000092e-05, 8.22369999999989e-05, 8.270800000000078e-05, 8.23330000000004e-05, 8.252800000000185e-05, 8.254199999999795e-05, 8.202800000000135e-05, 8.236199999999902e-05, 8.187500000000208e-05, 8.236099999999955e-05, 8.222199999999985e-05, 8.187500000000208e-05, 8.187499999999862e-05, 8.234699999999998e-05, 8.186099999999905e-05, 8.186099999999905e-05, 8.254199999999795e-05, 8.220900000000322e-05, 8.269500000000068e-05, 8.252799999999838e-05, 8.268000000000164e-05, 8.258400000000013e-05, 8.187499999999862e-05, 8.268000000000164e-05, 8.237499999999912e-05, 8.222199999999985e-05, 8.184699999999948e-05, 8.269500000000068e-05, 8.236100000000302e-05, 8.236099999999955e-05, 8.254199999999795e-05, 8.254100000000195e-05, 8.234699999999998e-05, 8.204100000000145e-05, 8.255499999999805e-05, 8.257000000000056e-05, 8.186099999999905e-05, 8.219400000000071e-05, 8.237499999999912e-05, 8.220899999999975e-05, 8.202800000000135e-05, 8.222199999999985e-05, 8.256900000000109e-05]</msg>
<status status="PASS" starttime="20201110 08:35:01.231" endtime="20201110 08:35:01.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.227" endtime="20201110 08:35:01.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.236" endtime="20201110 08:35:01.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:01.240" endtime="20201110 08:35:01.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.238" endtime="20201110 08:35:01.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.235" endtime="20201110 08:35:01.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.867" endtime="20201110 08:35:01.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.867" endtime="20201110 08:35:01.260"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.269" endtime="20201110 08:35:01.288"></status>
</kw>
<msg timestamp="20201110 08:35:01.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.268" endtime="20201110 08:35:01.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.289" endtime="20201110 08:35:01.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.292" endtime="20201110 08:35:01.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.265" endtime="20201110 08:35:01.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.263" endtime="20201110 08:35:01.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.300" endtime="20201110 08:35:01.587"></status>
</kw>
<msg timestamp="20201110 08:35:01.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022499208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.299" endtime="20201110 08:35:01.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022499208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.591" endtime="20201110 08:35:01.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.599" endtime="20201110 08:35:01.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.296" endtime="20201110 08:35:01.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.295" endtime="20201110 08:35:01.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.606" level="INFO">${RESULT} = [{'time': 0.022582792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.358400000000113e-05, 'source_diff': 8.358400000000113e-05}, {'time': 0.022672792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:01.602" endtime="20201110 08:35:01.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:01.619" level="INFO">${ACCURACY} = {'source_diff': [8.358400000000113e-05, 8.284799999999995e-05, 8.337500000000012e-05, 8.337500000000012e-05, 8.290299999999876e-05, 8.304099999999898e-05, 8.345800000000153e-05, 8.28049999999983e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:01.607" endtime="20201110 08:35:01.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.624" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:35:01.623" endtime="20201110 08:35:01.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.626" level="INFO">VALUE: [8.358400000000113e-05, 8.284799999999995e-05, 8.337500000000012e-05, 8.337500000000012e-05, 8.290299999999876e-05, 8.304099999999898e-05, 8.345800000000153e-05, 8.28049999999983e-05, 8.370900000000125e-05, 8.355599999999852e-05, 8.352799999999938e-05, 8.316699999999858e-05, 8.288899999999919e-05, 8.315300000000247e-05, 8.319400000000171e-05, 8.337500000000012e-05, 8.337500000000012e-05, 8.354099999999948e-05, 8.323600000000042e-05, 8.370800000000178e-05, 8.301400000000278e-05, 8.318099999999815e-05, 8.372300000000082e-05, 8.370900000000125e-05, 8.370899999999779e-05, 8.286100000000005e-05, 8.319500000000118e-05, 8.317999999999867e-05, 8.369399999999874e-05, 8.302800000000235e-05, 8.318100000000161e-05, 8.319399999999824e-05, 8.336100000000055e-05, 8.316699999999858e-05, 8.287499999999962e-05, 8.284700000000048e-05, 8.369500000000168e-05, 8.369500000000168e-05, 8.344500000000143e-05, 8.370799999999831e-05, 8.3152000000003e-05, 8.302799999999888e-05, 8.352799999999938e-05, 8.319400000000171e-05, 8.352799999999938e-05, 8.288899999999919e-05, 8.336100000000055e-05, 8.368100000000211e-05, 8.351399999999981e-05, 8.304099999999898e-05]</msg>
<status status="PASS" starttime="20201110 08:35:01.625" endtime="20201110 08:35:01.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.620" endtime="20201110 08:35:01.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.630" endtime="20201110 08:35:01.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:01.633" endtime="20201110 08:35:01.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.632" endtime="20201110 08:35:01.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.628" endtime="20201110 08:35:01.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.261" endtime="20201110 08:35:01.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.261" endtime="20201110 08:35:01.654"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.663" endtime="20201110 08:35:01.682"></status>
</kw>
<msg timestamp="20201110 08:35:01.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.661" endtime="20201110 08:35:01.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.684" endtime="20201110 08:35:01.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.688" endtime="20201110 08:35:01.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.659" endtime="20201110 08:35:01.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.656" endtime="20201110 08:35:01.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.699" endtime="20201110 08:35:01.987"></status>
</kw>
<msg timestamp="20201110 08:35:01.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022403736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.697" endtime="20201110 08:35:01.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022403736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.992" endtime="20201110 08:35:01.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.000" endtime="20201110 08:35:02.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.694" endtime="20201110 08:35:02.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.691" endtime="20201110 08:35:02.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.006" level="INFO">${RESULT} = [{'time': 0.022403736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.416699999999958e-05, 'source_diff': 8.416699999999958e-05}, {'time': 0.022499681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:02.003" endtime="20201110 08:35:02.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:02.020" level="INFO">${ACCURACY} = {'source_diff': [8.416699999999958e-05, 8.436200000000102e-05, 8.456899999999962e-05, 8.469399999999974e-05, 8.456899999999962e-05, 8.437499999999765e-05, 8.452800000000038e-05, 8.469399999999974e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:02.007" endtime="20201110 08:35:02.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.024" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:35:02.023" endtime="20201110 08:35:02.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.027" level="INFO">VALUE: [8.416699999999958e-05, 8.436200000000102e-05, 8.456899999999962e-05, 8.469399999999974e-05, 8.456899999999962e-05, 8.437499999999765e-05, 8.452800000000038e-05, 8.469399999999974e-05, 8.386099999999758e-05, 8.418099999999915e-05, 8.401399999999684e-05, 8.384700000000148e-05, 8.420900000000175e-05, 8.401400000000031e-05, 8.468099999999965e-05, 8.419399999999924e-05, 8.470799999999931e-05, 8.438899999999722e-05, 8.437499999999765e-05, 8.386100000000105e-05, 8.469399999999974e-05, 8.46530000000005e-05, 8.452800000000038e-05, 8.436100000000155e-05, 8.452800000000038e-05, 8.401400000000031e-05, 8.436200000000102e-05, 8.401300000000084e-05, 8.468000000000017e-05, 8.436099999999808e-05, 8.438900000000069e-05, 8.401400000000031e-05, 8.469399999999974e-05, 8.419499999999872e-05, 8.436099999999808e-05, 8.454199999999995e-05, 8.406899999999912e-05, 8.468099999999965e-05, 8.404099999999998e-05, 8.388900000000019e-05, 8.388900000000019e-05, 8.419399999999924e-05, 8.450000000000124e-05, 8.418099999999915e-05, 8.386099999999758e-05, 8.469500000000268e-05, 8.386100000000105e-05, 8.437500000000112e-05, 8.470800000000278e-05, 8.402799999999988e-05]</msg>
<status status="PASS" starttime="20201110 08:35:02.025" endtime="20201110 08:35:02.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.021" endtime="20201110 08:35:02.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.030" endtime="20201110 08:35:02.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.034" endtime="20201110 08:35:02.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.032" endtime="20201110 08:35:02.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.029" endtime="20201110 08:35:02.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.655" endtime="20201110 08:35:02.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.654" endtime="20201110 08:35:02.054"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.063" endtime="20201110 08:35:02.082"></status>
</kw>
<msg timestamp="20201110 08:35:02.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.062" endtime="20201110 08:35:02.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.083" endtime="20201110 08:35:02.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.086" endtime="20201110 08:35:02.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.059" endtime="20201110 08:35:02.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.057" endtime="20201110 08:35:02.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.095" endtime="20201110 08:35:02.382"></status>
</kw>
<msg timestamp="20201110 08:35:02.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022617042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.093" endtime="20201110 08:35:02.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022617042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.386" endtime="20201110 08:35:02.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.394" endtime="20201110 08:35:02.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.091" endtime="20201110 08:35:02.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.089" endtime="20201110 08:35:02.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.401" level="INFO">${RESULT} = [{'time': 0.022701972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.493000000000042e-05, 'source_diff': 8.493000000000042e-05}, {'time': 0.022793972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:02.398" endtime="20201110 08:35:02.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:02.414" level="INFO">${ACCURACY} = {'source_diff': [8.493000000000042e-05, 8.551399999999834e-05, 8.520799999999981e-05, 8.505600000000002e-05, 8.568100000000065e-05, 8.536100000000255e-05, 8.568100000000065e-05, 8.520899999999929e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:02.402" endtime="20201110 08:35:02.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.419" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:35:02.418" endtime="20201110 08:35:02.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.421" level="INFO">VALUE: [8.493000000000042e-05, 8.551399999999834e-05, 8.520799999999981e-05, 8.505600000000002e-05, 8.568100000000065e-05, 8.536100000000255e-05, 8.568100000000065e-05, 8.520899999999929e-05, 8.536099999999908e-05, 8.536099999999908e-05, 8.569400000000074e-05, 8.486100000000205e-05, 8.53469999999995e-05, 8.520799999999981e-05, 8.574999999999902e-05, 8.519499999999972e-05, 8.519499999999972e-05, 8.522300000000232e-05, 8.555599999999705e-05, 8.509699999999926e-05, 8.536200000000202e-05, 8.53469999999995e-05, 8.504100000000098e-05, 8.569399999999727e-05, 8.537499999999865e-05, 8.56530000000015e-05, 8.487500000000162e-05, 8.501400000000131e-05, 8.533399999999941e-05, 8.558300000000019e-05, 8.520899999999929e-05, 8.520899999999929e-05, 8.569500000000022e-05, 8.502700000000141e-05, 8.504100000000098e-05, 8.522199999999938e-05, 8.552799999999791e-05, 8.573599999999945e-05, 8.518100000000015e-05, 8.570800000000031e-05, 8.518100000000015e-05, 8.537499999999865e-05, 8.519499999999972e-05, 8.487499999999815e-05, 8.573600000000292e-05, 8.486100000000205e-05, 8.552700000000191e-05, 8.569400000000074e-05, 8.486099999999858e-05, 8.559799999999923e-05]</msg>
<status status="PASS" starttime="20201110 08:35:02.420" endtime="20201110 08:35:02.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.415" endtime="20201110 08:35:02.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.432" endtime="20201110 08:35:02.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.435" endtime="20201110 08:35:02.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.434" endtime="20201110 08:35:02.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.430" endtime="20201110 08:35:02.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.055" endtime="20201110 08:35:02.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.055" endtime="20201110 08:35:02.456"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.465" endtime="20201110 08:35:02.484"></status>
</kw>
<msg timestamp="20201110 08:35:02.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.463" endtime="20201110 08:35:02.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.485" endtime="20201110 08:35:02.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.488" endtime="20201110 08:35:02.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.460" endtime="20201110 08:35:02.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.458" endtime="20201110 08:35:02.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.496" endtime="20201110 08:35:02.783"></status>
</kw>
<msg timestamp="20201110 08:35:02.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.495" endtime="20201110 08:35:02.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.788" endtime="20201110 08:35:02.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.796" endtime="20201110 08:35:02.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.492" endtime="20201110 08:35:02.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.491" endtime="20201110 08:35:02.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.803" level="INFO">${RESULT} = [{'time': 0.022609986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.661099999999686e-05, 'source_diff': 8.661099999999686e-05}, {'time': 0.022700972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:02.800" endtime="20201110 08:35:02.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:02.816" level="INFO">${ACCURACY} = {'source_diff': [8.661099999999686e-05, 8.636100000000008e-05, 8.5847e-05, 8.649999999999977e-05, 8.586099999999958e-05, 8.66530000000025e-05, 8.618099999999768e-05, 8.669500000000122e-05, 8.620799999...</msg>
<status status="PASS" starttime="20201110 08:35:02.804" endtime="20201110 08:35:02.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.821" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:35:02.820" endtime="20201110 08:35:02.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.823" level="INFO">VALUE: [8.661099999999686e-05, 8.636100000000008e-05, 8.5847e-05, 8.649999999999977e-05, 8.586099999999958e-05, 8.66530000000025e-05, 8.618099999999768e-05, 8.669500000000122e-05, 8.620799999999734e-05, 8.586099999999958e-05, 8.587500000000262e-05, 8.586099999999958e-05, 8.636100000000008e-05, 8.604199999999798e-05, 8.669400000000174e-05, 8.619499999999725e-05, 8.619500000000072e-05, 8.675000000000002e-05, 8.608300000000069e-05, 8.670799999999784e-05, 8.669500000000122e-05, 8.651399999999934e-05, 8.665199999999956e-05, 8.651399999999934e-05, 8.587500000000262e-05, 8.636100000000008e-05, 8.620800000000081e-05, 8.622200000000038e-05, 8.654199999999848e-05, 8.591599999999838e-05, 8.604200000000145e-05, 8.626399999999909e-05, 8.602699999999894e-05, 8.66799999999987e-05, 8.673600000000045e-05, 8.652799999999891e-05, 8.63470000000005e-05, 8.643099999999793e-05, 8.63470000000005e-05, 8.604200000000145e-05, 8.604200000000145e-05, 8.602800000000188e-05, 8.669500000000122e-05, 8.634799999999998e-05, 8.588899999999872e-05, 8.586099999999958e-05, 8.604099999999851e-05, 8.586099999999958e-05, 8.604200000000145e-05, 8.668100000000165e-05]</msg>
<status status="PASS" starttime="20201110 08:35:02.822" endtime="20201110 08:35:02.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.817" endtime="20201110 08:35:02.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.827" endtime="20201110 08:35:02.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.830" endtime="20201110 08:35:02.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.829" endtime="20201110 08:35:02.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.825" endtime="20201110 08:35:02.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.457" endtime="20201110 08:35:02.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.456" endtime="20201110 08:35:02.851"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.860" endtime="20201110 08:35:02.879"></status>
</kw>
<msg timestamp="20201110 08:35:02.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.858" endtime="20201110 08:35:02.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.880" endtime="20201110 08:35:02.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.883" endtime="20201110 08:35:02.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.856" endtime="20201110 08:35:02.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.854" endtime="20201110 08:35:02.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.892" endtime="20201110 08:35:03.179"></status>
</kw>
<msg timestamp="20201110 08:35:03.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022355097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.890" endtime="20201110 08:35:03.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022355097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.183" endtime="20201110 08:35:03.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.193" endtime="20201110 08:35:03.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.888" endtime="20201110 08:35:03.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.886" endtime="20201110 08:35:03.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:03.199" level="INFO">${RESULT} = [{'time': 0.022355097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.742999999999945e-05, 'source_diff': 8.742999999999945e-05}, {'time': 0.022448111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:03.196" endtime="20201110 08:35:03.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:03.218" level="INFO">${ACCURACY} = {'source_diff': [8.742999999999945e-05, 8.719399999999877e-05, 8.719399999999877e-05, 8.719399999999877e-05, 8.719499999999825e-05, 8.680600000000177e-05, 8.688899999999972e-05, 8.722200000000138e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:03.202" endtime="20201110 08:35:03.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.225" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:35:03.224" endtime="20201110 08:35:03.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.228" level="INFO">VALUE: [8.742999999999945e-05, 8.719399999999877e-05, 8.719399999999877e-05, 8.719399999999877e-05, 8.719499999999825e-05, 8.680600000000177e-05, 8.688899999999972e-05, 8.722200000000138e-05, 8.736200000000055e-05, 8.755500000000305e-05, 8.719399999999877e-05, 8.769399999999927e-05, 8.702799999999941e-05, 8.720799999999834e-05, 8.769499999999875e-05, 8.754199999999948e-05, 8.720900000000129e-05, 8.718100000000215e-05, 8.770900000000179e-05, 8.702799999999941e-05, 8.68050000000023e-05, 8.687500000000015e-05, 8.704100000000298e-05, 8.772199999999841e-05, 8.751400000000034e-05, 8.702799999999941e-05, 8.736100000000108e-05, 8.719499999999825e-05, 8.736100000000108e-05, 8.768100000000265e-05, 8.702799999999941e-05, 8.736199999999708e-05, 8.686100000000058e-05, 8.686100000000058e-05, 8.736100000000108e-05, 8.702800000000288e-05, 8.769400000000274e-05, 8.719499999999825e-05, 8.737499999999718e-05, 8.686100000000058e-05, 8.688899999999972e-05, 8.768099999999918e-05, 8.752799999999991e-05, 8.719399999999877e-05, 8.723599999999748e-05, 8.752700000000044e-05, 8.719399999999877e-05, 8.701399999999984e-05, 8.736100000000108e-05, 8.736099999999761e-05]</msg>
<status status="PASS" starttime="20201110 08:35:03.226" endtime="20201110 08:35:03.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.220" endtime="20201110 08:35:03.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.231" endtime="20201110 08:35:03.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:03.235" endtime="20201110 08:35:03.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.233" endtime="20201110 08:35:03.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.230" endtime="20201110 08:35:03.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.852" endtime="20201110 08:35:03.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.851" endtime="20201110 08:35:03.256"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.264" endtime="20201110 08:35:03.283"></status>
</kw>
<msg timestamp="20201110 08:35:03.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.263" endtime="20201110 08:35:03.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.285" endtime="20201110 08:35:03.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.287" endtime="20201110 08:35:03.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.260" endtime="20201110 08:35:03.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.258" endtime="20201110 08:35:03.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.296" endtime="20201110 08:35:03.585"></status>
</kw>
<msg timestamp="20201110 08:35:03.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.295" endtime="20201110 08:35:03.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.589" endtime="20201110 08:35:03.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.597" endtime="20201110 08:35:03.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.292" endtime="20201110 08:35:03.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.290" endtime="20201110 08:35:03.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:03.604" level="INFO">${RESULT} = [{'time': 0.022429972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.869400000000027e-05, 'source_diff': 8.869400000000027e-05}, {'time': 0.022525986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:03.601" endtime="20201110 08:35:03.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:03.617" level="INFO">${ACCURACY} = {'source_diff': [8.869400000000027e-05, 8.787500000000115e-05, 8.854200000000048e-05, 8.84860000000022e-05, 8.834699999999904e-05, 8.798599999999823e-05, 8.870899999999932e-05, 8.852800000000091e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:03.605" endtime="20201110 08:35:03.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.622" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:35:03.621" endtime="20201110 08:35:03.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.624" level="INFO">VALUE: [8.869400000000027e-05, 8.787500000000115e-05, 8.854200000000048e-05, 8.84860000000022e-05, 8.834699999999904e-05, 8.798599999999823e-05, 8.870899999999932e-05, 8.852800000000091e-05, 8.848599999999873e-05, 8.787500000000115e-05, 8.852699999999797e-05, 8.836099999999861e-05, 8.829200000000023e-05, 8.786100000000158e-05, 8.840300000000079e-05, 8.788900000000072e-05, 8.786100000000158e-05, 8.870899999999932e-05, 8.819499999999925e-05, 8.819499999999925e-05, 8.804100000000051e-05, 8.819400000000324e-05, 8.854100000000101e-05, 8.793099999999943e-05, 8.852800000000091e-05, 8.786100000000158e-05, 8.870799999999984e-05, 8.802800000000041e-05, 8.858299999999972e-05, 8.836100000000208e-05, 8.823599999999848e-05, 8.854100000000101e-05, 8.870799999999984e-05, 8.804100000000051e-05, 8.836099999999861e-05, 8.854200000000048e-05, 8.852800000000091e-05, 8.854200000000048e-05, 8.870899999999932e-05, 8.822299999999839e-05, 8.819500000000272e-05, 8.801400000000084e-05, 8.819499999999925e-05, 8.833299999999947e-05, 8.786099999999811e-05, 8.834700000000251e-05, 8.841700000000036e-05, 8.819400000000324e-05, 8.841700000000036e-05, 8.804199999999998e-05]</msg>
<status status="PASS" starttime="20201110 08:35:03.623" endtime="20201110 08:35:03.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.618" endtime="20201110 08:35:03.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.628" endtime="20201110 08:35:03.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:03.631" endtime="20201110 08:35:03.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.630" endtime="20201110 08:35:03.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.626" endtime="20201110 08:35:03.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.256" endtime="20201110 08:35:03.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.256" endtime="20201110 08:35:03.652"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.661" endtime="20201110 08:35:03.680"></status>
</kw>
<msg timestamp="20201110 08:35:03.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.659" endtime="20201110 08:35:03.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.682" endtime="20201110 08:35:03.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.684" endtime="20201110 08:35:03.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.657" endtime="20201110 08:35:03.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.654" endtime="20201110 08:35:03.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.693" endtime="20201110 08:35:03.980"></status>
</kw>
<msg timestamp="20201110 08:35:03.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.691" endtime="20201110 08:35:03.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.984" endtime="20201110 08:35:03.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.992" endtime="20201110 08:35:03.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.689" endtime="20201110 08:35:03.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.687" endtime="20201110 08:35:03.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:03.999" level="INFO">${RESULT} = [{'time': 0.022383375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.911099999999936e-05, 'source_diff': 8.911099999999936e-05}, {'time': 0.022481375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:03.996" endtime="20201110 08:35:03.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:04.012" level="INFO">${ACCURACY} = {'source_diff': [8.911099999999936e-05, 8.920800000000034e-05, 8.970800000000084e-05, 8.898599999999923e-05, 8.937499999999918e-05, 8.970900000000032e-05, 8.919500000000025e-05, 8.968099999999771e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:04.000" endtime="20201110 08:35:04.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.017" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:35:04.016" endtime="20201110 08:35:04.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.019" level="INFO">VALUE: [8.911099999999936e-05, 8.920800000000034e-05, 8.970800000000084e-05, 8.898599999999923e-05, 8.937499999999918e-05, 8.970900000000032e-05, 8.919500000000025e-05, 8.968099999999771e-05, 8.952700000000244e-05, 8.934700000000004e-05, 8.952699999999897e-05, 8.917999999999773e-05, 8.937500000000265e-05, 8.884799999999901e-05, 8.918100000000068e-05, 8.934700000000004e-05, 8.936099999999961e-05, 8.970900000000032e-05, 8.969400000000127e-05, 8.886099999999911e-05, 8.96939999999978e-05, 8.938900000000222e-05, 8.904199999999751e-05, 8.902800000000141e-05, 8.890299999999782e-05, 8.887500000000215e-05, 8.938900000000222e-05, 8.919500000000025e-05, 8.886100000000258e-05, 8.937499999999918e-05, 8.936099999999961e-05, 8.967999999999823e-05, 8.972200000000041e-05, 8.952800000000191e-05, 8.919400000000077e-05, 8.954200000000148e-05, 8.934700000000004e-05, 8.909699999999979e-05, 8.905600000000055e-05, 8.952799999999844e-05, 8.913900000000197e-05, 8.920800000000034e-05, 8.91389999999985e-05, 8.920800000000034e-05, 8.96939999999978e-05, 8.924999999999905e-05, 8.934700000000004e-05, 8.969500000000075e-05, 8.916699999999764e-05, 8.947200000000016e-05]</msg>
<status status="PASS" starttime="20201110 08:35:04.018" endtime="20201110 08:35:04.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.013" endtime="20201110 08:35:04.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.023" endtime="20201110 08:35:04.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.026" endtime="20201110 08:35:04.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.025" endtime="20201110 08:35:04.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.021" endtime="20201110 08:35:04.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.653" endtime="20201110 08:35:04.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.652" endtime="20201110 08:35:04.047"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.056" endtime="20201110 08:35:04.075"></status>
</kw>
<msg timestamp="20201110 08:35:04.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.054" endtime="20201110 08:35:04.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.076" endtime="20201110 08:35:04.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.079" endtime="20201110 08:35:04.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.052" endtime="20201110 08:35:04.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.050" endtime="20201110 08:35:04.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.088" endtime="20201110 08:35:04.375"></status>
</kw>
<msg timestamp="20201110 08:35:04.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.086" endtime="20201110 08:35:04.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.379" endtime="20201110 08:35:04.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.387" endtime="20201110 08:35:04.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.084" endtime="20201110 08:35:04.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.082" endtime="20201110 08:35:04.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.394" level="INFO">${RESULT} = [{'time': 0.022345903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.076400000000012e-05, 'source_diff': 9.076400000000012e-05}, {'time': 0.022449917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:04.391" endtime="20201110 08:35:04.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:04.410" level="INFO">${ACCURACY} = {'source_diff': [9.076400000000012e-05, 8.984800000000001e-05, 9.019499999999778e-05, 9.002699999999947e-05, 9.034700000000104e-05, 9.036099999999714e-05, 9.069400000000227e-05, 9.054199999999901e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:04.395" endtime="20201110 08:35:04.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.416" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:35:04.414" endtime="20201110 08:35:04.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.419" level="INFO">VALUE: [9.076400000000012e-05, 8.984800000000001e-05, 9.019499999999778e-05, 9.002699999999947e-05, 9.034700000000104e-05, 9.036099999999714e-05, 9.069400000000227e-05, 9.054199999999901e-05, 9.052800000000291e-05, 9.054199999999901e-05, 9.036100000000061e-05, 9.022300000000039e-05, 9.052799999999944e-05, 9.037500000000018e-05, 8.998600000000023e-05, 9.056899999999868e-05, 9.002699999999947e-05, 9.019400000000177e-05, 9.068099999999871e-05, 9.066699999999914e-05, 9.020800000000134e-05, 9.036099999999714e-05, 8.987499999999968e-05, 9.036100000000061e-05, 9.070800000000184e-05, 9.067999999999923e-05, 9.054099999999954e-05, 9.036100000000061e-05, 9.06939999999988e-05, 9.01800000000022e-05, 9.055599999999858e-05, 9.072200000000141e-05, 9.0639e-05, 8.987499999999968e-05, 8.990199999999934e-05, 8.986199999999958e-05, 8.993100000000143e-05, 9.070799999999837e-05, 9.036100000000061e-05, 8.9945000000001e-05, 9.069400000000227e-05, 9.052800000000291e-05, 8.986100000000011e-05, 9.038899999999975e-05, 8.984700000000054e-05, 8.986100000000011e-05, 9.001399999999937e-05, 8.988799999999977e-05, 9.073600000000098e-05, 9.06939999999988e-05]</msg>
<status status="PASS" starttime="20201110 08:35:04.417" endtime="20201110 08:35:04.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.411" endtime="20201110 08:35:04.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.423" endtime="20201110 08:35:04.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.427" endtime="20201110 08:35:04.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.425" endtime="20201110 08:35:04.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.421" endtime="20201110 08:35:04.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.048" endtime="20201110 08:35:04.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.048" endtime="20201110 08:35:04.448"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.457" endtime="20201110 08:35:04.477"></status>
</kw>
<msg timestamp="20201110 08:35:04.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.455" endtime="20201110 08:35:04.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.478" endtime="20201110 08:35:04.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.481" endtime="20201110 08:35:04.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.453" endtime="20201110 08:35:04.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.451" endtime="20201110 08:35:04.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.490" endtime="20201110 08:35:04.776"></status>
</kw>
<msg timestamp="20201110 08:35:04.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022774361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022865278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.488" endtime="20201110 08:35:04.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022774361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022865278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.780" endtime="20201110 08:35:04.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.788" endtime="20201110 08:35:04.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.486" endtime="20201110 08:35:04.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.484" endtime="20201110 08:35:04.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.795" level="INFO">${RESULT} = [{'time': 0.022865278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.091699999999939e-05, 'source_diff': 9.091699999999939e-05}, {'time': 0.022967306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:04.791" endtime="20201110 08:35:04.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:04.808" level="INFO">${ACCURACY} = {'source_diff': [9.091699999999939e-05, 9.087500000000068e-05, 9.154099999999707e-05, 9.087500000000068e-05, 9.137500000000118e-05, 9.163899999999753e-05, 9.102799999999994e-05, 9.152800000000044e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:04.796" endtime="20201110 08:35:04.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.813" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:35:04.812" endtime="20201110 08:35:04.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.817" level="INFO">VALUE: [9.091699999999939e-05, 9.087500000000068e-05, 9.154099999999707e-05, 9.087500000000068e-05, 9.137500000000118e-05, 9.163899999999753e-05, 9.102799999999994e-05, 9.152800000000044e-05, 9.104199999999951e-05, 9.136099999999814e-05, 9.144399999999955e-05, 9.120899999999835e-05, 9.155500000000011e-05, 9.086100000000111e-05, 9.11939999999993e-05, 9.134699999999857e-05, 9.120800000000234e-05, 9.173599999999851e-05, 9.102799999999994e-05, 9.137499999999771e-05, 9.136100000000161e-05, 9.151400000000087e-05, 9.137499999999771e-05, 9.152800000000044e-05, 9.170799999999937e-05, 9.102700000000047e-05, 9.081899999999893e-05, 9.166699999999667e-05, 9.086099999999764e-05, 9.101400000000037e-05, 9.11939999999993e-05, 9.088900000000025e-05, 9.101400000000037e-05, 9.152800000000044e-05, 9.151400000000087e-05, 9.152700000000097e-05, 9.152700000000097e-05, 9.16520000000011e-05, 9.148600000000173e-05, 9.133300000000247e-05, 9.152800000000044e-05, 9.122199999999844e-05, 9.119499999999878e-05, 9.134700000000204e-05, 9.134800000000151e-05, 9.119499999999878e-05, 9.170799999999937e-05, 9.101299999999743e-05, 9.11939999999993e-05, 9.170799999999937e-05]</msg>
<status status="PASS" starttime="20201110 08:35:04.815" endtime="20201110 08:35:04.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.809" endtime="20201110 08:35:04.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.820" endtime="20201110 08:35:04.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.824" endtime="20201110 08:35:04.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.822" endtime="20201110 08:35:04.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.819" endtime="20201110 08:35:04.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.449" endtime="20201110 08:35:04.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.449" endtime="20201110 08:35:04.845"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.854" endtime="20201110 08:35:04.873"></status>
</kw>
<msg timestamp="20201110 08:35:04.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.852" endtime="20201110 08:35:04.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.875" endtime="20201110 08:35:04.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.877" endtime="20201110 08:35:04.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.850" endtime="20201110 08:35:04.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.848" endtime="20201110 08:35:04.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.886" endtime="20201110 08:35:05.174"></status>
</kw>
<msg timestamp="20201110 08:35:05.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02236175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:04.885" endtime="20201110 08:35:05.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02236175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:05.178" endtime="20201110 08:35:05.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.187" endtime="20201110 08:35:05.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.882" endtime="20201110 08:35:05.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.880" endtime="20201110 08:35:05.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.193" level="INFO">${RESULT} = [{'time': 0.02236175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.276399999999865e-05, 'source_diff': 9.276399999999865e-05}, {'time': 0.022465764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:35:05.190" endtime="20201110 08:35:05.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:05.206" level="INFO">${ACCURACY} = {'source_diff': [9.276399999999865e-05, 9.205600000000008e-05, 9.223699999999849e-05, 9.249999999999883e-05, 9.222299999999892e-05, 9.236199999999861e-05, 9.201400000000137e-05, 9.254099999999807e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:05.194" endtime="20201110 08:35:05.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.211" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:35:05.210" endtime="20201110 08:35:05.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.213" level="INFO">VALUE: [9.276399999999865e-05, 9.205600000000008e-05, 9.223699999999849e-05, 9.249999999999883e-05, 9.222299999999892e-05, 9.236199999999861e-05, 9.201400000000137e-05, 9.254099999999807e-05, 9.21520000000016e-05, 9.236099999999914e-05, 9.21940000000003e-05, 9.21940000000003e-05, 9.252800000000144e-05, 9.270899999999985e-05, 9.219499999999978e-05, 9.251400000000187e-05, 9.255499999999764e-05, 9.183399999999897e-05, 9.222199999999944e-05, 9.220799999999987e-05, 9.186100000000211e-05, 9.236100000000261e-05, 9.202799999999747e-05, 9.187499999999821e-05, 9.268100000000071e-05, 9.2639000000002e-05, 9.270899999999985e-05, 9.229200000000076e-05, 9.202800000000094e-05, 9.2026999999998e-05, 9.201400000000137e-05, 9.255500000000111e-05, 9.19719999999992e-05, 9.234699999999957e-05, 9.218100000000021e-05, 9.237499999999871e-05, 9.251400000000187e-05, 9.277799999999822e-05, 9.20139999999979e-05, 9.270800000000037e-05, 9.218000000000073e-05, 9.21940000000003e-05, 9.186099999999864e-05, 9.222199999999944e-05, 9.186099999999864e-05, 9.236099999999914e-05, 9.270899999999985e-05, 9.219499999999978e-05, 9.269499999999681e-05, 9.254199999999754e-05]</msg>
<status status="PASS" starttime="20201110 08:35:05.212" endtime="20201110 08:35:05.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.207" endtime="20201110 08:35:05.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.217" endtime="20201110 08:35:05.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:05.221" endtime="20201110 08:35:05.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.219" endtime="20201110 08:35:05.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.215" endtime="20201110 08:35:05.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.846" endtime="20201110 08:35:05.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.846" endtime="20201110 08:35:05.242"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.250" endtime="20201110 08:35:05.270"></status>
</kw>
<msg timestamp="20201110 08:35:05.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.249" endtime="20201110 08:35:05.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.271" endtime="20201110 08:35:05.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.274" endtime="20201110 08:35:05.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.246" endtime="20201110 08:35:05.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.244" endtime="20201110 08:35:05.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.282" endtime="20201110 08:35:05.569"></status>
</kw>
<msg timestamp="20201110 08:35:05.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022529, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02262225, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:35:05.281" endtime="20201110 08:35:05.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022529, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02262225, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:35:05.573" endtime="20201110 08:35:05.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.581" endtime="20201110 08:35:05.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.278" endtime="20201110 08:35:05.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.277" endtime="20201110 08:35:05.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.588" level="INFO">${RESULT} = [{'time': 0.02262225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.324999999999958e-05, 'source_diff': 9.324999999999958e-05}, {'time': 0.022729292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:35:05.584" endtime="20201110 08:35:05.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:05.601" level="INFO">${ACCURACY} = {'source_diff': [9.324999999999958e-05, 9.340300000000232e-05, 9.287499999999921e-05, 9.302800000000194e-05, 9.288899999999878e-05, 9.320900000000035e-05, 9.32079999999974e-05, 9.358299999999778e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:05.589" endtime="20201110 08:35:05.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.606" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:35:05.605" endtime="20201110 08:35:05.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.608" level="INFO">VALUE: [9.324999999999958e-05, 9.340300000000232e-05, 9.287499999999921e-05, 9.302800000000194e-05, 9.288899999999878e-05, 9.320900000000035e-05, 9.32079999999974e-05, 9.358299999999778e-05, 9.35139999999994e-05, 9.319399999999783e-05, 9.31940000000013e-05, 9.322200000000044e-05, 9.313899999999903e-05, 9.287499999999921e-05, 9.302800000000194e-05, 9.369500000000128e-05, 9.283399999999997e-05, 9.320800000000087e-05, 9.302700000000247e-05, 9.347199999999722e-05, 9.349999999999983e-05, 9.336100000000014e-05, 9.36940000000018e-05, 9.354200000000201e-05, 9.370900000000085e-05, 9.304199999999804e-05, 9.302799999999847e-05, 9.319500000000078e-05, 9.36940000000018e-05, 9.30139999999989e-05, 9.324999999999958e-05, 9.320800000000087e-05, 9.286100000000311e-05, 9.35139999999994e-05, 9.369500000000128e-05, 9.336100000000014e-05, 9.338899999999928e-05, 9.319499999999731e-05, 9.305500000000161e-05, 9.3026999999999e-05, 9.35139999999994e-05, 9.36940000000018e-05, 9.352799999999897e-05, 9.37079999999979e-05, 9.372200000000094e-05, 9.336100000000014e-05, 9.311099999999989e-05, 9.375000000000008e-05, 9.286199999999911e-05, 9.355499999999864e-05]</msg>
<status status="PASS" starttime="20201110 08:35:05.607" endtime="20201110 08:35:05.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.602" endtime="20201110 08:35:05.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.612" endtime="20201110 08:35:05.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:05.615" endtime="20201110 08:35:05.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.613" endtime="20201110 08:35:05.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.610" endtime="20201110 08:35:05.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.242" endtime="20201110 08:35:05.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.242" endtime="20201110 08:35:05.636"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.644" endtime="20201110 08:35:05.664"></status>
</kw>
<msg timestamp="20201110 08:35:05.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.643" endtime="20201110 08:35:05.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.665" endtime="20201110 08:35:05.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.668" endtime="20201110 08:35:05.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.640" endtime="20201110 08:35:05.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.638" endtime="20201110 08:35:05.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.677" endtime="20201110 08:35:05.963"></status>
</kw>
<msg timestamp="20201110 08:35:05.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.675" endtime="20201110 08:35:05.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.967" endtime="20201110 08:35:05.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.976" endtime="20201110 08:35:05.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.673" endtime="20201110 08:35:05.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.671" endtime="20201110 08:35:05.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.982" level="INFO">${RESULT} = [{'time': 0.022679264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.425000000000058e-05, 'source_diff': 9.425000000000058e-05}, {'time': 0.022788264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:05.979" endtime="20201110 08:35:05.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:05.995" level="INFO">${ACCURACY} = {'source_diff': [9.425000000000058e-05, 9.436099999999767e-05, 9.437500000000071e-05, 9.419500000000178e-05, 9.437500000000071e-05, 9.434700000000157e-05, 9.387500000000021e-05, 9.437500000000071e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:05.983" endtime="20201110 08:35:05.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.000" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:35:05.999" endtime="20201110 08:35:06.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.002" level="INFO">VALUE: [9.425000000000058e-05, 9.436099999999767e-05, 9.437500000000071e-05, 9.419500000000178e-05, 9.437500000000071e-05, 9.434700000000157e-05, 9.387500000000021e-05, 9.437500000000071e-05, 9.469399999999933e-05, 9.402800000000294e-05, 9.387500000000021e-05, 9.404200000000251e-05, 9.454199999999954e-05, 9.388899999999978e-05, 9.422200000000144e-05, 9.45270000000005e-05, 9.386099999999717e-05, 9.45270000000005e-05, 9.420800000000187e-05, 9.43469999999981e-05, 9.422200000000144e-05, 9.402799999999947e-05, 9.469500000000228e-05, 9.436099999999767e-05, 9.422200000000144e-05, 9.384800000000054e-05, 9.4027e-05, 9.45270000000005e-05, 9.47079999999989e-05, 9.43469999999981e-05, 9.454199999999954e-05, 9.425000000000058e-05, 9.419499999999831e-05, 9.419500000000178e-05, 9.469499999999881e-05, 9.426400000000015e-05, 9.437500000000071e-05, 9.437500000000071e-05, 9.437500000000071e-05, 9.40139999999999e-05, 9.469399999999933e-05, 9.404199999999904e-05, 9.454199999999954e-05, 9.452799999999997e-05, 9.386100000000064e-05, 9.449999999999736e-05, 9.470800000000237e-05, 9.423600000000101e-05, 9.45270000000005e-05, 9.40139999999999e-05]</msg>
<status status="PASS" starttime="20201110 08:35:06.001" endtime="20201110 08:35:06.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.996" endtime="20201110 08:35:06.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.006" endtime="20201110 08:35:06.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:06.010" endtime="20201110 08:35:06.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.008" endtime="20201110 08:35:06.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.005" endtime="20201110 08:35:06.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.637" endtime="20201110 08:35:06.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.636" endtime="20201110 08:35:06.030"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.039" endtime="20201110 08:35:06.059"></status>
</kw>
<msg timestamp="20201110 08:35:06.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.037" endtime="20201110 08:35:06.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.060" endtime="20201110 08:35:06.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.063" endtime="20201110 08:35:06.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.035" endtime="20201110 08:35:06.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.033" endtime="20201110 08:35:06.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.072" endtime="20201110 08:35:06.358"></status>
</kw>
<msg timestamp="20201110 08:35:06.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.070" endtime="20201110 08:35:06.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.362" endtime="20201110 08:35:06.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.370" endtime="20201110 08:35:06.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.068" endtime="20201110 08:35:06.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.066" endtime="20201110 08:35:06.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:06.377" level="INFO">${RESULT} = [{'time': 0.022587625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.544400000000008e-05, 'source_diff': 9.544400000000008e-05}, {'time': 0.022690625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:06.373" endtime="20201110 08:35:06.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:06.390" level="INFO">${ACCURACY} = {'source_diff': [9.544400000000008e-05, 9.486099999999817e-05, 9.569499999999981e-05, 9.505599999999961e-05, 9.554200000000054e-05, 9.536099999999867e-05, 9.57079999999999e-05, 9.502699999999753e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:06.378" endtime="20201110 08:35:06.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.395" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:35:06.394" endtime="20201110 08:35:06.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.397" level="INFO">VALUE: [9.544400000000008e-05, 9.486099999999817e-05, 9.569499999999981e-05, 9.505599999999961e-05, 9.554200000000054e-05, 9.536099999999867e-05, 9.57079999999999e-05, 9.502699999999753e-05, 9.486100000000164e-05, 9.536100000000214e-05, 9.486100000000164e-05, 9.540300000000085e-05, 9.480599999999936e-05, 9.552800000000097e-05, 9.518099999999974e-05, 9.570899999999938e-05, 9.536199999999814e-05, 9.52079999999994e-05, 9.511100000000189e-05, 9.554100000000107e-05, 9.50140000000009e-05, 9.57079999999999e-05, 9.519399999999983e-05, 9.520900000000235e-05, 9.554200000000054e-05, 9.487500000000121e-05, 9.519499999999931e-05, 9.502800000000047e-05, 9.519399999999983e-05, 9.518000000000026e-05, 9.504200000000004e-05, 9.55279999999975e-05, 9.55279999999975e-05, 9.537500000000171e-05, 9.568100000000024e-05, 9.569499999999981e-05, 9.504200000000004e-05, 9.552800000000097e-05, 9.55409999999976e-05, 9.572199999999947e-05, 9.483299999999903e-05, 9.504200000000004e-05, 9.568000000000076e-05, 9.552800000000097e-05, 9.552800000000097e-05, 9.537500000000171e-05, 9.534799999999857e-05, 9.552800000000097e-05, 9.576399999999818e-05, 9.55270000000015e-05]</msg>
<status status="PASS" starttime="20201110 08:35:06.396" endtime="20201110 08:35:06.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.391" endtime="20201110 08:35:06.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.401" endtime="20201110 08:35:06.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:06.404" endtime="20201110 08:35:06.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.402" endtime="20201110 08:35:06.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.399" endtime="20201110 08:35:06.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.031" endtime="20201110 08:35:06.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.031" endtime="20201110 08:35:06.425"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.433" endtime="20201110 08:35:06.454"></status>
</kw>
<msg timestamp="20201110 08:35:06.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.432" endtime="20201110 08:35:06.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.456" endtime="20201110 08:35:06.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.458" endtime="20201110 08:35:06.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.429" endtime="20201110 08:35:06.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.427" endtime="20201110 08:35:06.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.467" endtime="20201110 08:35:06.755"></status>
</kw>
<msg timestamp="20201110 08:35:06.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.465" endtime="20201110 08:35:06.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.759" endtime="20201110 08:35:06.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.767" endtime="20201110 08:35:06.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.463" endtime="20201110 08:35:06.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.461" endtime="20201110 08:35:06.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:06.774" level="INFO">${RESULT} = [{'time': 0.022275458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.625000000000258e-05, 'source_diff': 9.625000000000258e-05}, {'time': 0.022386514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:06.770" endtime="20201110 08:35:06.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:06.787" level="INFO">${ACCURACY} = {'source_diff': [9.625000000000258e-05, 9.640299999999838e-05, 9.586099999999917e-05, 9.586099999999917e-05, 9.654200000000154e-05, 9.636099999999967e-05, 9.632000000000043e-05, 9.602800000000147e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:06.775" endtime="20201110 08:35:06.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.792" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:35:06.791" endtime="20201110 08:35:06.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.794" level="INFO">VALUE: [9.625000000000258e-05, 9.640299999999838e-05, 9.586099999999917e-05, 9.586099999999917e-05, 9.654200000000154e-05, 9.636099999999967e-05, 9.632000000000043e-05, 9.602800000000147e-05, 9.619500000000031e-05, 9.63470000000001e-05, 9.586099999999917e-05, 9.586100000000264e-05, 9.586099999999917e-05, 9.638900000000228e-05, 9.583300000000003e-05, 9.654199999999807e-05, 9.672299999999995e-05, 9.66799999999983e-05, 9.638899999999881e-05, 9.65409999999986e-05, 9.605500000000114e-05, 9.637499999999924e-05, 9.652800000000197e-05, 9.64859999999998e-05, 9.657000000000068e-05, 9.620899999999988e-05, 9.669500000000081e-05, 9.654199999999807e-05, 9.638799999999934e-05, 9.60409999999981e-05, 9.652699999999903e-05, 9.669400000000133e-05, 9.636099999999967e-05, 9.638899999999881e-05, 9.669400000000133e-05, 9.673699999999952e-05, 9.588899999999831e-05, 9.63470000000001e-05, 9.602800000000147e-05, 9.669400000000133e-05, 9.619400000000083e-05, 9.669400000000133e-05, 9.58469999999996e-05, 9.604200000000104e-05, 9.605600000000061e-05, 9.588899999999831e-05, 9.602800000000147e-05, 9.626399999999868e-05, 9.613899999999856e-05, 9.640299999999838e-05]</msg>
<status status="PASS" starttime="20201110 08:35:06.793" endtime="20201110 08:35:06.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.788" endtime="20201110 08:35:06.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.798" endtime="20201110 08:35:06.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:06.801" endtime="20201110 08:35:06.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.800" endtime="20201110 08:35:06.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.796" endtime="20201110 08:35:06.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.426" endtime="20201110 08:35:06.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.425" endtime="20201110 08:35:06.822"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.830" endtime="20201110 08:35:06.851"></status>
</kw>
<msg timestamp="20201110 08:35:06.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.829" endtime="20201110 08:35:06.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.852" endtime="20201110 08:35:06.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.855" endtime="20201110 08:35:06.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.826" endtime="20201110 08:35:06.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.824" endtime="20201110 08:35:06.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.864" endtime="20201110 08:35:07.151"></status>
</kw>
<msg timestamp="20201110 08:35:07.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022209306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022306389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.863" endtime="20201110 08:35:07.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022209306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022306389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.155" endtime="20201110 08:35:07.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.163" endtime="20201110 08:35:07.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.860" endtime="20201110 08:35:07.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.858" endtime="20201110 08:35:07.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:07.170" level="INFO">${RESULT} = [{'time': 0.022306389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.708299999999781e-05, 'source_diff': 9.708299999999781e-05}, {'time': 0.022413403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:07.167" endtime="20201110 08:35:07.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:07.183" level="INFO">${ACCURACY} = {'source_diff': [9.708299999999781e-05, 9.73609999999972e-05, 9.723599999999707e-05, 9.752700000000003e-05, 9.770799999999843e-05, 9.702699999999953e-05, 9.70409999999991e-05, 9.704199999999857e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:35:07.171" endtime="20201110 08:35:07.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.188" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:35:07.187" endtime="20201110 08:35:07.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.190" level="INFO">VALUE: [9.708299999999781e-05, 9.73609999999972e-05, 9.723599999999707e-05, 9.752700000000003e-05, 9.770799999999843e-05, 9.702699999999953e-05, 9.70409999999991e-05, 9.704199999999857e-05, 9.75279999999995e-05, 9.770799999999843e-05, 9.729199999999882e-05, 9.686100000000017e-05, 9.736100000000067e-05, 9.748700000000027e-05, 9.7027000000003e-05, 9.72080000000014e-05, 9.690299999999888e-05, 9.683300000000103e-05, 9.737499999999677e-05, 9.692999999999855e-05, 9.7027999999999e-05, 9.7027999999999e-05, 9.75279999999995e-05, 9.769500000000181e-05, 9.755499999999917e-05, 9.702699999999953e-05, 9.719399999999837e-05, 9.686100000000017e-05, 9.738899999999981e-05, 9.702800000000247e-05, 9.769499999999834e-05, 9.758299999999831e-05, 9.755599999999864e-05, 9.769500000000181e-05, 9.686199999999964e-05, 9.752700000000003e-05, 9.752700000000003e-05, 9.737500000000024e-05, 9.76799999999993e-05, 9.770799999999843e-05, 9.75279999999995e-05, 9.752800000000297e-05, 9.719499999999784e-05, 9.759700000000135e-05, 9.737500000000024e-05, 9.77080000000019e-05, 9.686100000000017e-05, 9.73609999999972e-05, 9.76799999999993e-05, 9.683300000000103e-05]</msg>
<status status="PASS" starttime="20201110 08:35:07.189" endtime="20201110 08:35:07.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.184" endtime="20201110 08:35:07.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.194" endtime="20201110 08:35:07.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:07.197" endtime="20201110 08:35:07.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.196" endtime="20201110 08:35:07.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.192" endtime="20201110 08:35:07.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.823" endtime="20201110 08:35:07.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.822" endtime="20201110 08:35:07.218"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.227" endtime="20201110 08:35:07.246"></status>
</kw>
<msg timestamp="20201110 08:35:07.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.225" endtime="20201110 08:35:07.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.248" endtime="20201110 08:35:07.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.250" endtime="20201110 08:35:07.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.222" endtime="20201110 08:35:07.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.220" endtime="20201110 08:35:07.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.259" endtime="20201110 08:35:07.546"></status>
</kw>
<msg timestamp="20201110 08:35:07.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.258" endtime="20201110 08:35:07.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.550" endtime="20201110 08:35:07.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.559" endtime="20201110 08:35:07.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.255" endtime="20201110 08:35:07.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.253" endtime="20201110 08:35:07.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:07.565" level="INFO">${RESULT} = [{'time': 0.022304847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.861099999999845e-05, 'source_diff': 9.861099999999845e-05}, {'time': 0.022412847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:07.562" endtime="20201110 08:35:07.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:07.579" level="INFO">${ACCURACY} = {'source_diff': [9.861099999999845e-05, 9.85410000000006e-05, 9.874999999999814e-05, 9.869399999999987e-05, 9.790299999999988e-05, 9.869499999999934e-05, 9.78470000000016e-05, 9.819499999999884e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:35:07.566" endtime="20201110 08:35:07.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.583" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:35:07.582" endtime="20201110 08:35:07.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.586" level="INFO">VALUE: [9.861099999999845e-05, 9.85410000000006e-05, 9.874999999999814e-05, 9.869399999999987e-05, 9.790299999999988e-05, 9.869499999999934e-05, 9.78470000000016e-05, 9.819499999999884e-05, 9.787499999999727e-05, 9.836200000000114e-05, 9.847199999999875e-05, 9.816600000000023e-05, 9.851400000000093e-05, 9.83609999999982e-05, 9.826300000000121e-05, 9.802799999999653e-05, 9.788899999999684e-05, 9.869499999999934e-05, 9.85280000000005e-05, 9.82080000000024e-05, 9.837499999999777e-05, 9.801400000000043e-05, 9.858400000000225e-05, 9.801399999999696e-05, 9.869499999999934e-05, 9.787500000000074e-05, 9.843000000000005e-05, 9.819499999999884e-05, 9.837500000000124e-05, 9.806899999999924e-05, 9.786100000000117e-05, 9.870799999999944e-05, 9.8028e-05, 9.8028e-05, 9.786100000000117e-05, 9.854200000000007e-05, 9.83059999999994e-05, 9.870899999999891e-05, 9.854200000000007e-05, 9.786200000000064e-05, 9.83609999999982e-05, 9.788900000000031e-05, 9.819399999999937e-05, 9.856999999999921e-05, 9.82219999999985e-05, 9.818099999999927e-05, 9.869499999999934e-05, 9.836100000000167e-05, 9.85280000000005e-05, 9.820799999999894e-05]</msg>
<status status="PASS" starttime="20201110 08:35:07.584" endtime="20201110 08:35:07.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.580" endtime="20201110 08:35:07.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.593" endtime="20201110 08:35:07.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:07.597" endtime="20201110 08:35:07.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.595" endtime="20201110 08:35:07.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.592" endtime="20201110 08:35:07.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.219" endtime="20201110 08:35:07.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.218" endtime="20201110 08:35:07.618"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.626" endtime="20201110 08:35:07.646"></status>
</kw>
<msg timestamp="20201110 08:35:07.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.625" endtime="20201110 08:35:07.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.648" endtime="20201110 08:35:07.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.650" endtime="20201110 08:35:07.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.622" endtime="20201110 08:35:07.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.620" endtime="20201110 08:35:07.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.659" endtime="20201110 08:35:07.946"></status>
</kw>
<msg timestamp="20201110 08:35:07.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.657" endtime="20201110 08:35:07.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.950" endtime="20201110 08:35:07.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.958" endtime="20201110 08:35:07.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.655" endtime="20201110 08:35:07.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.653" endtime="20201110 08:35:07.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:07.965" level="INFO">${RESULT} = [{'time': 0.022237958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.924999999999864e-05, 'source_diff': 9.924999999999864e-05}, {'time': 0.022343, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:35:07.962" endtime="20201110 08:35:07.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:07.978" level="INFO">${ACCURACY} = {'source_diff': [9.924999999999864e-05, 9.940299999999791e-05, 9.937499999999877e-05, 9.970800000000044e-05, 9.969400000000087e-05, 9.938900000000181e-05, 9.902799999999753e-05, 9.96670000000012e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:07.966" endtime="20201110 08:35:07.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.983" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:35:07.982" endtime="20201110 08:35:07.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.985" level="INFO">VALUE: [9.924999999999864e-05, 9.940299999999791e-05, 9.937499999999877e-05, 9.970800000000044e-05, 9.969400000000087e-05, 9.938900000000181e-05, 9.902799999999753e-05, 9.96670000000012e-05, 9.95419999999976e-05, 9.88059999999999e-05, 9.886100000000217e-05, 9.888900000000131e-05, 9.887499999999827e-05, 9.908400000000275e-05, 9.886100000000217e-05, 9.88609999999987e-05, 9.887499999999827e-05, 9.93609999999992e-05, 9.937499999999877e-05, 9.969400000000087e-05, 9.906900000000024e-05, 9.904099999999763e-05, 9.970799999999697e-05, 9.952799999999803e-05, 9.902799999999753e-05, 9.90419999999971e-05, 9.920900000000288e-05, 9.936100000000267e-05, 9.88059999999999e-05, 9.948700000000227e-05, 9.937499999999877e-05, 9.92219999999995e-05, 9.951400000000193e-05, 9.969400000000087e-05, 9.904200000000057e-05, 9.952799999999803e-05, 9.884699999999913e-05, 9.9028000000001e-05, 9.93479999999991e-05, 9.970800000000044e-05, 9.919400000000037e-05, 9.938900000000181e-05, 9.902699999999806e-05, 9.884699999999913e-05, 9.887500000000174e-05, 9.952799999999803e-05, 9.904200000000057e-05, 9.957000000000021e-05, 9.936100000000267e-05, 9.943000000000105e-05]</msg>
<status status="PASS" starttime="20201110 08:35:07.984" endtime="20201110 08:35:07.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.979" endtime="20201110 08:35:07.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.989" endtime="20201110 08:35:07.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:07.992" endtime="20201110 08:35:08.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.991" endtime="20201110 08:35:08.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.987" endtime="20201110 08:35:08.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.618" endtime="20201110 08:35:08.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.618" endtime="20201110 08:35:08.013"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.022" endtime="20201110 08:35:08.042"></status>
</kw>
<msg timestamp="20201110 08:35:08.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.020" endtime="20201110 08:35:08.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.043" endtime="20201110 08:35:08.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.046" endtime="20201110 08:35:08.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.018" endtime="20201110 08:35:08.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.016" endtime="20201110 08:35:08.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.054" endtime="20201110 08:35:08.342"></status>
</kw>
<msg timestamp="20201110 08:35:08.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:08.053" endtime="20201110 08:35:08.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:08.346" endtime="20201110 08:35:08.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.354" endtime="20201110 08:35:08.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.050" endtime="20201110 08:35:08.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.049" endtime="20201110 08:35:08.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:08.361" level="INFO">${RESULT} = [{'time': 0.022509278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010008400000000028, 'source_diff': 0.00010008400000000028}, {'time': 0.022616347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:08.358" endtime="20201110 08:35:08.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:08.374" level="INFO">${ACCURACY} = {'source_diff': [0.00010008400000000028, 0.0001001939999999979, 0.000100028000000002, 0.0001001939999999979, 0.00010037499999999977, 0.00010051400000000293, 9.99999999999994e-05, 0.0001005280000000025...</msg>
<status status="PASS" starttime="20201110 08:35:08.362" endtime="20201110 08:35:08.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.378" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:35:08.377" endtime="20201110 08:35:08.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.381" level="INFO">VALUE: [0.00010008400000000028, 0.0001001939999999979, 0.000100028000000002, 0.0001001939999999979, 0.00010037499999999977, 0.00010051400000000293, 9.99999999999994e-05, 0.0001005280000000025, 0.00010019400000000137, 0.00010051399999999946, 0.00010019499999999737, 0.0001003480000000001, 0.0001003610000000002, 0.00010038899999999934, 0.00010019400000000137, 0.00010059699999999741, 0.0001006939999999984, 0.00010069400000000187, 0.00010020800000000094, 0.00010000000000000286, 9.984700000000013e-05, 0.0001006809999999983, 0.00010013899999999909, 0.00010001300000000296, 0.0001000410000000021, 9.98609999999997e-05, 0.00010001399999999896, 0.00010034700000000063, 0.0001000419999999981, 0.00010037499999999977, 0.00010070900000000091, 0.00010063899999999959, 0.00010069499999999787, 9.98609999999997e-05, 0.00010023600000000008, 0.00010072199999999754, 0.00010069400000000187, 0.00010052799999999903, 0.00010066699999999873, 0.00010036099999999673, 0.00010051399999999946, 0.0001003610000000002, 0.00010052799999999903, 9.986100000000317e-05, 0.00010040299999999891, 0.00010020800000000094, 0.00010052799999999903, 0.00010001399999999896, 0.00010034700000000063, 0.00010069499999999787]</msg>
<status status="PASS" starttime="20201110 08:35:08.380" endtime="20201110 08:35:08.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.375" endtime="20201110 08:35:08.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.384" endtime="20201110 08:35:08.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:08.388" endtime="20201110 08:35:08.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.386" endtime="20201110 08:35:08.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.383" endtime="20201110 08:35:08.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.014" endtime="20201110 08:35:08.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.013" endtime="20201110 08:35:08.409"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.417" endtime="20201110 08:35:08.437"></status>
</kw>
<msg timestamp="20201110 08:35:08.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.416" endtime="20201110 08:35:08.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.438" endtime="20201110 08:35:08.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.441" endtime="20201110 08:35:08.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.413" endtime="20201110 08:35:08.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.411" endtime="20201110 08:35:08.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.450" endtime="20201110 08:35:08.736"></status>
</kw>
<msg timestamp="20201110 08:35:08.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022182208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:08.448" endtime="20201110 08:35:08.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022182208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:08.740" endtime="20201110 08:35:08.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.748" endtime="20201110 08:35:08.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.446" endtime="20201110 08:35:08.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.444" endtime="20201110 08:35:08.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:08.754" level="INFO">${RESULT} = [{'time': 0.0222835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010129200000000282, 'source_diff': 0.00010129200000000282}, {'time': 0.022394458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:08.751" endtime="20201110 08:35:08.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:08.768" level="INFO">${ACCURACY} = {'source_diff': [0.00010129200000000282, 0.00010115200000000019, 0.0001011939999999989, 0.00010152800000000003, 0.00010101399999999996, 0.00010101399999999996, 0.0001013480000000011, 0.000101680999999...</msg>
<status status="PASS" starttime="20201110 08:35:08.755" endtime="20201110 08:35:08.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.772" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:35:08.771" endtime="20201110 08:35:08.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.774" level="INFO">VALUE: [0.00010129200000000282, 0.00010115200000000019, 0.0001011939999999989, 0.00010152800000000003, 0.00010101399999999996, 0.00010101399999999996, 0.0001013480000000011, 0.0001016809999999993, 0.00010152800000000003, 0.00010104099999999963, 0.00010120799999999847, 0.00010154100000000013, 0.0001015419999999996, 0.00010099999999999693, 0.00010151400000000046, 0.00010119499999999837, 0.00010086099999999723, 0.0001016809999999993, 0.00010152700000000056, 0.0001013749999999973, 0.00010154100000000013, 0.0001010419999999991, 0.00010152800000000003, 0.0001015419999999996, 0.000101513999999997, 0.0001008610000000007, 0.00010134700000000163, 0.00010133400000000153, 0.00010151400000000046, 0.0001008879999999969, 0.00010125000000000065, 0.00010154100000000013, 0.00010120800000000194, 0.0001016939999999994, 0.00010137500000000077, 0.0001008610000000007, 0.00010102799999999953, 0.00010118100000000227, 0.00010108300000000181, 0.00010102700000000006, 0.00010151400000000046, 0.00010170799999999897, 0.00010104200000000257, 0.0001015419999999996, 0.00010169400000000287, 0.00010108299999999834, 0.0001010419999999991, 0.00010152800000000003, 0.00010165200000000069, 0.00010116599999999976]</msg>
<status status="PASS" starttime="20201110 08:35:08.773" endtime="20201110 08:35:08.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.768" endtime="20201110 08:35:08.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.778" endtime="20201110 08:35:08.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:08.782" endtime="20201110 08:35:08.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.780" endtime="20201110 08:35:08.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.777" endtime="20201110 08:35:08.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.410" endtime="20201110 08:35:08.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.409" endtime="20201110 08:35:08.802"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.811" endtime="20201110 08:35:08.831"></status>
</kw>
<msg timestamp="20201110 08:35:08.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.809" endtime="20201110 08:35:08.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.832" endtime="20201110 08:35:08.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.835" endtime="20201110 08:35:08.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.807" endtime="20201110 08:35:08.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.805" endtime="20201110 08:35:08.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.844" endtime="20201110 08:35:09.130"></status>
</kw>
<msg timestamp="20201110 08:35:09.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:08.842" endtime="20201110 08:35:09.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.134" endtime="20201110 08:35:09.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.142" endtime="20201110 08:35:09.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.840" endtime="20201110 08:35:09.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.838" endtime="20201110 08:35:09.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.149" level="INFO">${RESULT} = [{'time': 0.022675153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010259699999999941, 'source_diff': 0.00010259699999999941}, {'time': 0.022784167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:09.146" endtime="20201110 08:35:09.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:09.162" level="INFO">${ACCURACY} = {'source_diff': [0.00010259699999999941, 0.00010270899999999944, 0.0001023610000000022, 0.00010202700000000106, 0.00010220800000000294, 0.0001020550000000002, 0.00010274999999999868, 0.000102193999999...</msg>
<status status="PASS" starttime="20201110 08:35:09.150" endtime="20201110 08:35:09.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.166" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:35:09.165" endtime="20201110 08:35:09.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.169" level="INFO">VALUE: [0.00010259699999999941, 0.00010270899999999944, 0.0001023610000000022, 0.00010202700000000106, 0.00010220800000000294, 0.0001020550000000002, 0.00010274999999999868, 0.0001021939999999999, 0.0001021939999999999, 0.00010201400000000097, 0.00010252799999999757, 0.00010219499999999937, 0.00010219499999999937, 0.00010188899999999737, 0.00010186099999999823, 0.00010236099999999873, 0.00010202800000000053, 0.00010262499999999855, 0.000102722000000003, 0.00010254199999999714, 0.0001025420000000006, 0.00010202800000000053, 0.00010219499999999937, 0.00010252799999999757, 0.0001021939999999999, 0.00010227699999999784, 0.0001020420000000001, 0.00010252799999999757, 0.000102513999999998, 0.00010219499999999937, 0.00010255600000000017, 0.00010190200000000094, 0.0001020420000000001, 0.00010241700000000048, 0.0001026940000000004, 0.00010251400000000147, 0.0001021939999999999, 0.00010215300000000066, 0.00010202800000000053, 0.0001025000000000019, 0.0001021809999999998, 0.00010254199999999714, 0.0001018749999999978, 0.00010252800000000103, 0.00010252700000000156, 0.00010252800000000103, 0.00010225000000000165, 0.00010220799999999947, 0.00010236099999999873, 0.00010220900000000241]</msg>
<status status="PASS" starttime="20201110 08:35:09.167" endtime="20201110 08:35:09.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.163" endtime="20201110 08:35:09.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.172" endtime="20201110 08:35:09.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:09.176" endtime="20201110 08:35:09.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.174" endtime="20201110 08:35:09.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.171" endtime="20201110 08:35:09.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.803" endtime="20201110 08:35:09.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.803" endtime="20201110 08:35:09.196"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.205" endtime="20201110 08:35:09.225"></status>
</kw>
<msg timestamp="20201110 08:35:09.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.203" endtime="20201110 08:35:09.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.226" endtime="20201110 08:35:09.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.228" endtime="20201110 08:35:09.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.201" endtime="20201110 08:35:09.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.199" endtime="20201110 08:35:09.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.237" endtime="20201110 08:35:09.525"></status>
</kw>
<msg timestamp="20201110 08:35:09.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022056833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022160208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.236" endtime="20201110 08:35:09.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022056833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022160208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.529" endtime="20201110 08:35:09.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.537" endtime="20201110 08:35:09.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.233" endtime="20201110 08:35:09.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.232" endtime="20201110 08:35:09.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.544" level="INFO">${RESULT} = [{'time': 0.022160208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001033749999999993, 'source_diff': 0.0001033749999999993}, {'time': 0.022278208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:09.540" endtime="20201110 08:35:09.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:09.557" level="INFO">${ACCURACY} = {'source_diff': [0.0001033749999999993, 0.00010368000000000183, 0.00010286099999999923, 0.00010322200000000004, 0.00010301400000000197, 0.0001028749999999988, 0.00010286099999999923, 0.000102902000000...</msg>
<status status="PASS" starttime="20201110 08:35:09.545" endtime="20201110 08:35:09.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.561" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:35:09.560" endtime="20201110 08:35:09.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.564" level="INFO">VALUE: [0.0001033749999999993, 0.00010368000000000183, 0.00010286099999999923, 0.00010322200000000004, 0.00010301400000000197, 0.0001028749999999988, 0.00010286099999999923, 0.00010290200000000194, 0.0001030550000000012, 0.00010320800000000047, 0.00010281900000000052, 0.0001031940000000009, 0.00010284699999999966, 0.00010284699999999966, 0.00010352800000000204, 0.00010320899999999994, 0.0001030139999999985, 0.00010302800000000154, 0.0001030139999999985, 0.00010320800000000047, 0.00010304100000000163, 0.0001036940000000014, 0.00010372200000000054, 0.00010366700000000173, 0.00010336099999999973, 0.00010284699999999966, 0.00010336099999999973, 0.00010354199999999814, 0.00010304099999999816, 0.00010322200000000004, 0.000103513999999999, 0.0001030139999999985, 0.0001030420000000011, 0.00010374999999999968, 0.00010304199999999764, 0.00010288899999999837, 0.00010330600000000092, 0.00010284799999999913, 0.00010280600000000042, 0.00010354100000000213, 0.00010338899999999887, 0.0001036940000000014, 0.00010286099999999923, 0.00010334700000000016, 0.00010338899999999887, 0.00010286099999999923, 0.00010338899999999887, 0.00010337500000000277, 0.0001028610000000027, 0.00010351299999999952]</msg>
<status status="PASS" starttime="20201110 08:35:09.562" endtime="20201110 08:35:09.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.558" endtime="20201110 08:35:09.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.567" endtime="20201110 08:35:09.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:09.571" endtime="20201110 08:35:09.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.569" endtime="20201110 08:35:09.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.566" endtime="20201110 08:35:09.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.197" endtime="20201110 08:35:09.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.197" endtime="20201110 08:35:09.591"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.600" endtime="20201110 08:35:09.620"></status>
</kw>
<msg timestamp="20201110 08:35:09.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.598" endtime="20201110 08:35:09.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.621" endtime="20201110 08:35:09.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.624" endtime="20201110 08:35:09.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.596" endtime="20201110 08:35:09.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.594" endtime="20201110 08:35:09.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.633" endtime="20201110 08:35:09.921"></status>
</kw>
<msg timestamp="20201110 08:35:09.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.631" endtime="20201110 08:35:09.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.925" endtime="20201110 08:35:09.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.933" endtime="20201110 08:35:09.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.629" endtime="20201110 08:35:09.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.627" endtime="20201110 08:35:09.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.939" level="INFO">${RESULT} = [{'time': 0.022293847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010461099999999751, 'source_diff': 0.00010461099999999751}, {'time': 0.022412861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:09.936" endtime="20201110 08:35:09.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:09.952" level="INFO">${ACCURACY} = {'source_diff': [0.00010461099999999751, 0.00010455499999999923, 0.00010404199999999864, 0.0001043750000000003, 0.0001038749999999998, 0.00010390299999999894, 0.00010437499999999683, 0.000104027999999...</msg>
<status status="PASS" starttime="20201110 08:35:09.940" endtime="20201110 08:35:09.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.957" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:35:09.956" endtime="20201110 08:35:09.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.959" level="INFO">VALUE: [0.00010461099999999751, 0.00010455499999999923, 0.00010404199999999864, 0.0001043750000000003, 0.0001038749999999998, 0.00010390299999999894, 0.00010437499999999683, 0.00010402799999999907, 0.0001046949999999984, 0.00010386100000000023, 0.00010436099999999726, 0.0001045550000000027, 0.00010386100000000023, 0.00010388899999999937, 0.00010404199999999864, 0.0001038749999999998, 0.00010470899999999797, 0.0001045550000000027, 0.00010470800000000197, 0.00010451300000000052, 0.00010402700000000306, 0.00010416599999999929, 0.00010394399999999818, 0.00010402799999999907, 0.00010433299999999812, 0.0001045420000000026, 0.00010454199999999914, 0.0001038749999999998, 0.00010479199999999939, 0.0001038749999999998, 0.00010475000000000068, 0.00010452799999999957, 0.0001040420000000021, 0.00010415299999999919, 0.00010386100000000023, 0.00010452799999999957, 0.00010422199999999757, 0.00010419500000000137, 0.00010422199999999757, 0.00010473599999999764, 0.00010468000000000283, 0.00010469399999999893, 0.00010454199999999914, 0.00010388899999999937, 0.00010456999999999828, 0.0001045559999999987, 0.0001038749999999998, 0.00010436100000000073, 0.00010467999999999936, 0.00010436100000000073]</msg>
<status status="PASS" starttime="20201110 08:35:09.958" endtime="20201110 08:35:09.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.953" endtime="20201110 08:35:09.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.963" endtime="20201110 08:35:09.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:09.966" endtime="20201110 08:35:09.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.965" endtime="20201110 08:35:09.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.961" endtime="20201110 08:35:09.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.592" endtime="20201110 08:35:09.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.592" endtime="20201110 08:35:09.987"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.996" endtime="20201110 08:35:10.016"></status>
</kw>
<msg timestamp="20201110 08:35:10.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.994" endtime="20201110 08:35:10.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.017" endtime="20201110 08:35:10.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.020" endtime="20201110 08:35:10.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.992" endtime="20201110 08:35:10.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.990" endtime="20201110 08:35:10.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.029" endtime="20201110 08:35:10.316"></status>
</kw>
<msg timestamp="20201110 08:35:10.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022364417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.027" endtime="20201110 08:35:10.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022364417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.320" endtime="20201110 08:35:10.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.328" endtime="20201110 08:35:10.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.025" endtime="20201110 08:35:10.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.023" endtime="20201110 08:35:10.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:10.334" level="INFO">${RESULT} = [{'time': 0.022364417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010543099999999958, 'source_diff': 0.00010543099999999958}, {'time': 0.0224785, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:10.331" endtime="20201110 08:35:10.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:10.347" level="INFO">${ACCURACY} = {'source_diff': [0.00010543099999999958, 0.00010561099999999851, 0.00010486199999999724, 0.00010520800000000247, 0.00010537499999999783, 0.00010569399999999993, 0.00010536099999999826, 0.0001056939999...</msg>
<status status="PASS" starttime="20201110 08:35:10.335" endtime="20201110 08:35:10.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.352" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:35:10.351" endtime="20201110 08:35:10.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.354" level="INFO">VALUE: [0.00010543099999999958, 0.00010561099999999851, 0.00010486199999999724, 0.00010520800000000247, 0.00010537499999999783, 0.00010569399999999993, 0.00010536099999999826, 0.00010569399999999993, 0.00010520900000000194, 0.00010570899999999897, 0.00010484799999999767, 0.0001048620000000007, 0.00010536100000000173, 0.000105207999999999, 0.00010575000000000168, 0.0001050140000000005, 0.0001048750000000008, 0.00010565300000000069, 0.00010490299999999994, 0.00010504199999999964, 0.00010501399999999703, 0.00010537499999999783, 0.00010554100000000066, 0.00010486100000000123, 0.00010552800000000057, 0.00010484700000000166, 0.00010486099999999776, 0.00010513899999999715, 0.00010538900000000087, 0.00010554200000000014, 0.00010491600000000004, 0.0001056949999999994, 0.00010525000000000118, 0.00010569399999999993, 0.00010519399999999943, 0.00010537499999999783, 0.00010552800000000057, 0.0001050140000000005, 0.00010504199999999964, 0.00010484799999999767, 0.00010480599999999896, 0.00010502700000000059, 0.00010502700000000059, 0.00010536099999999826, 0.00010519399999999943, 0.0001056940000000034, 0.0001055279999999971, 0.00010504199999999964, 0.0001053750000000013, 0.00010565299999999722]</msg>
<status status="PASS" starttime="20201110 08:35:10.353" endtime="20201110 08:35:10.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.348" endtime="20201110 08:35:10.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.358" endtime="20201110 08:35:10.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:10.361" endtime="20201110 08:35:10.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.360" endtime="20201110 08:35:10.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.356" endtime="20201110 08:35:10.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.988" endtime="20201110 08:35:10.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.988" endtime="20201110 08:35:10.382"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.390" endtime="20201110 08:35:10.411"></status>
</kw>
<msg timestamp="20201110 08:35:10.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.389" endtime="20201110 08:35:10.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.412" endtime="20201110 08:35:10.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.415" endtime="20201110 08:35:10.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.386" endtime="20201110 08:35:10.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.384" endtime="20201110 08:35:10.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.426" endtime="20201110 08:35:10.712"></status>
</kw>
<msg timestamp="20201110 08:35:10.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.424" endtime="20201110 08:35:10.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.716" endtime="20201110 08:35:10.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.724" endtime="20201110 08:35:10.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.421" endtime="20201110 08:35:10.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.419" endtime="20201110 08:35:10.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:10.731" level="INFO">${RESULT} = [{'time': 0.022239097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010631900000000055, 'source_diff': 0.00010631900000000055}, {'time': 0.022356056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:10.727" endtime="20201110 08:35:10.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:10.744" level="INFO">${ACCURACY} = {'source_diff': [0.00010631900000000055, 0.00010637499999999883, 0.00010616600000000129, 0.00010586099999999876, 0.0001065690000000008, 0.00010602800000000107, 0.0001065279999999981, 0.000106694000000...</msg>
<status status="PASS" starttime="20201110 08:35:10.731" endtime="20201110 08:35:10.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.748" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:35:10.747" endtime="20201110 08:35:10.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.750" level="INFO">VALUE: [0.00010631900000000055, 0.00010637499999999883, 0.00010616600000000129, 0.00010586099999999876, 0.0001065690000000008, 0.00010602800000000107, 0.0001065279999999981, 0.00010669400000000093, 0.00010593000000000061, 0.00010637499999999883, 0.0001066950000000004, 0.00010602800000000107, 0.00010652700000000209, 0.00010619399999999696, 0.00010626399999999828, 0.00010613899999999815, 0.00010622199999999957, 0.00010640299999999797, 0.00010604200000000064, 0.0001065279999999981, 0.00010655500000000123, 0.0001058889999999979, 0.00010633300000000012, 0.000106208, 0.00010602800000000107, 0.00010586099999999876, 0.00010654199999999767, 0.00010652800000000157, 0.00010580599999999996, 0.0001060279999999976, 0.00010602800000000107, 0.00010619400000000043, 0.00010654100000000166, 0.00010619400000000043, 0.00010623700000000208, 0.00010668099999999736, 0.00010602800000000107, 0.00010584700000000266, 0.00010670899999999997, 0.00010620899999999947, 0.00010604100000000116, 0.0001058750000000018, 0.00010654099999999819, 0.00010604199999999717, 0.0001058750000000018, 0.00010586099999999876, 0.00010654200000000114, 0.00010586099999999876, 0.0001061949999999999, 0.00010666700000000126]</msg>
<status status="PASS" starttime="20201110 08:35:10.749" endtime="20201110 08:35:10.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.744" endtime="20201110 08:35:10.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.754" endtime="20201110 08:35:10.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:10.757" endtime="20201110 08:35:10.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.756" endtime="20201110 08:35:10.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.752" endtime="20201110 08:35:10.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.383" endtime="20201110 08:35:10.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.382" endtime="20201110 08:35:10.778"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.787" endtime="20201110 08:35:10.807"></status>
</kw>
<msg timestamp="20201110 08:35:10.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.785" endtime="20201110 08:35:10.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.809" endtime="20201110 08:35:10.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.811" endtime="20201110 08:35:10.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.783" endtime="20201110 08:35:10.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.781" endtime="20201110 08:35:10.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.820" endtime="20201110 08:35:11.108"></status>
</kw>
<msg timestamp="20201110 08:35:11.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022203208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022310278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.819" endtime="20201110 08:35:11.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022203208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022310278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.112" endtime="20201110 08:35:11.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.120" endtime="20201110 08:35:11.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.816" endtime="20201110 08:35:11.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.815" endtime="20201110 08:35:11.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.126" level="INFO">${RESULT} = [{'time': 0.022310278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010707000000000078, 'source_diff': 0.00010707000000000078}, {'time': 0.022424319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:11.123" endtime="20201110 08:35:11.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:11.139" level="INFO">${ACCURACY} = {'source_diff': [0.00010707000000000078, 0.00010738799999999993, 0.00010704099999999869, 0.00010754100000000266, 0.00010768000000000236, 0.00010767999999999889, 0.00010719400000000143, 0.0001070419999...</msg>
<status status="PASS" starttime="20201110 08:35:11.127" endtime="20201110 08:35:11.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.144" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:35:11.143" endtime="20201110 08:35:11.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.146" level="INFO">VALUE: [0.00010707000000000078, 0.00010738799999999993, 0.00010704099999999869, 0.00010754100000000266, 0.00010768000000000236, 0.00010767999999999889, 0.00010719400000000143, 0.00010704199999999817, 0.00010686099999999976, 0.00010682000000000053, 0.00010770900000000097, 0.0001071950000000009, 0.00010754100000000266, 0.00010719400000000143, 0.00010688900000000237, 0.0001075279999999991, 0.00010752800000000257, 0.00010740299999999897, 0.00010687499999999933, 0.00010702800000000207, 0.00010720900000000047, 0.00010722200000000057, 0.000107208000000001, 0.00010763899999999965, 0.00010704199999999817, 0.00010768000000000236, 0.00010687499999999933, 0.00010686099999999976, 0.00010752800000000257, 0.0001076950000000014, 0.0001076950000000014, 0.00010702699999999912, 0.00010686099999999976, 0.00010736100000000026, 0.0001070279999999986, 0.00010686099999999976, 0.00010704200000000164, 0.00010723600000000014, 0.0001075279999999991, 0.0001075279999999991, 0.00010768000000000236, 0.00010686099999999976, 0.00010723600000000014, 0.00010769400000000193, 0.000107208000000001, 0.00010702800000000207, 0.00010686099999999976, 0.00010687499999999933, 0.00010687499999999933, 0.00010738900000000287]</msg>
<status status="PASS" starttime="20201110 08:35:11.145" endtime="20201110 08:35:11.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.140" endtime="20201110 08:35:11.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.150" endtime="20201110 08:35:11.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:11.153" endtime="20201110 08:35:11.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.152" endtime="20201110 08:35:11.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.148" endtime="20201110 08:35:11.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.779" endtime="20201110 08:35:11.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.779" endtime="20201110 08:35:11.174"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.183" endtime="20201110 08:35:11.202"></status>
</kw>
<msg timestamp="20201110 08:35:11.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.181" endtime="20201110 08:35:11.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.204" endtime="20201110 08:35:11.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.206" endtime="20201110 08:35:11.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.179" endtime="20201110 08:35:11.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.176" endtime="20201110 08:35:11.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.215" endtime="20201110 08:35:11.502"></status>
</kw>
<msg timestamp="20201110 08:35:11.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022665028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.214" endtime="20201110 08:35:11.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022665028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.506" endtime="20201110 08:35:11.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.514" endtime="20201110 08:35:11.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.211" endtime="20201110 08:35:11.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.210" endtime="20201110 08:35:11.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.521" level="INFO">${RESULT} = [{'time': 0.022773639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010861099999999804, 'source_diff': 0.00010861099999999804}, {'time': 0.022890639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:11.518" endtime="20201110 08:35:11.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:11.534" level="INFO">${ACCURACY} = {'source_diff': [0.00010861099999999804, 0.00010782000000000153, 0.00010837499999999736, 0.00010854199999999967, 0.00010859699999999847, 0.00010875000000000121, 0.00010837500000000083, 0.0001085280000...</msg>
<status status="PASS" starttime="20201110 08:35:11.522" endtime="20201110 08:35:11.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.538" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:35:11.537" endtime="20201110 08:35:11.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.541" level="INFO">VALUE: [0.00010861099999999804, 0.00010782000000000153, 0.00010837499999999736, 0.00010854199999999967, 0.00010859699999999847, 0.00010875000000000121, 0.00010837500000000083, 0.0001085280000000001, 0.00010837500000000083, 0.00010822200000000157, 0.0001085280000000001, 0.00010820900000000147, 0.00010782000000000153, 0.00010855499999999976, 0.00010837500000000083, 0.00010869399999999946, 0.00010870799999999903, 0.00010804199999999917, 0.00010804199999999917, 0.0001087219999999986, 0.00010854199999999967, 0.00010822300000000104, 0.00010856899999999933, 0.00010831899999999908, 0.00010869399999999946, 0.0001087219999999986, 0.00010787500000000033, 0.00010786100000000076, 0.00010786100000000076, 0.0001080279999999996, 0.00010804200000000264, 0.00010854199999999967, 0.00010834800000000117, 0.00010870799999999903, 0.00010786100000000076, 0.00010836100000000126, 0.00010867999999999989, 0.0001078889999999999, 0.00010801400000000003, 0.00010849999999999749, 0.00010837500000000083, 0.00010802800000000307, 0.00010802700000000012, 0.0001085699999999988, 0.00010787500000000033, 0.00010836100000000126, 0.00010848600000000139, 0.0001081950000000019, 0.00010854199999999967, 0.0001078889999999999]</msg>
<status status="PASS" starttime="20201110 08:35:11.539" endtime="20201110 08:35:11.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.535" endtime="20201110 08:35:11.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.544" endtime="20201110 08:35:11.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:11.548" endtime="20201110 08:35:11.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.546" endtime="20201110 08:35:11.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.543" endtime="20201110 08:35:11.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.175" endtime="20201110 08:35:11.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.174" endtime="20201110 08:35:11.568"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.577" endtime="20201110 08:35:11.597"></status>
</kw>
<msg timestamp="20201110 08:35:11.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.576" endtime="20201110 08:35:11.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.599" endtime="20201110 08:35:11.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.601" endtime="20201110 08:35:11.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.573" endtime="20201110 08:35:11.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.571" endtime="20201110 08:35:11.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.610" endtime="20201110 08:35:11.896"></status>
</kw>
<msg timestamp="20201110 08:35:11.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.608" endtime="20201110 08:35:11.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.901" endtime="20201110 08:35:11.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.909" endtime="20201110 08:35:11.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.606" endtime="20201110 08:35:11.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.604" endtime="20201110 08:35:11.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.915" level="INFO">${RESULT} = [{'time': 0.022737861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010925000000000171, 'source_diff': 0.00010925000000000171}, {'time': 0.022855875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:11.912" endtime="20201110 08:35:11.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:11.929" level="INFO">${ACCURACY} = {'source_diff': [0.00010925000000000171, 0.00010963900000000165, 0.00010887500000000133, 0.00010901400000000103, 0.00010883399999999863, 0.00010952700000000162, 0.00010887500000000133, 0.0001093610000...</msg>
<status status="PASS" starttime="20201110 08:35:11.916" endtime="20201110 08:35:11.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.933" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:35:11.932" endtime="20201110 08:35:11.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.936" level="INFO">VALUE: [0.00010925000000000171, 0.00010963900000000165, 0.00010887500000000133, 0.00010901400000000103, 0.00010883399999999863, 0.00010952700000000162, 0.00010887500000000133, 0.00010936100000000226, 0.00010919399999999996, 0.00010919399999999996, 0.00010918099999999986, 0.00010937500000000183, 0.0001090280000000006, 0.00010884800000000167, 0.00010904099999999722, 0.00010968000000000089, 0.00010952700000000162, 0.00010969400000000046, 0.0001095280000000011, 0.00010969399999999699, 0.00010936099999999879, 0.00010929200000000042, 0.00010969499999999993, 0.00010936099999999879, 0.00010883299999999915, 0.00010900000000000146, 0.00010918000000000039, 0.00010952799999999763, 0.00010919399999999996, 0.00010886099999999829, 0.00010969499999999993, 0.000108902000000001, 0.0001095280000000011, 0.00010970800000000003, 0.00010954099999999772, 0.00010954099999999772, 0.00010937499999999836, 0.00010887500000000133, 0.00010954200000000067, 0.0001090280000000006, 0.00010918099999999986, 0.00010934800000000217, 0.00010900000000000146, 0.00010954099999999772, 0.00010918000000000039, 0.00010918000000000039, 0.00010886099999999829, 0.00010972200000000307, 0.00010904200000000017, 0.00010904099999999722]</msg>
<status status="PASS" starttime="20201110 08:35:11.935" endtime="20201110 08:35:11.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.930" endtime="20201110 08:35:11.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.939" endtime="20201110 08:35:11.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:11.943" endtime="20201110 08:35:11.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.941" endtime="20201110 08:35:11.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.938" endtime="20201110 08:35:11.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.569" endtime="20201110 08:35:11.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.569" endtime="20201110 08:35:11.964"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.972" endtime="20201110 08:35:11.992"></status>
</kw>
<msg timestamp="20201110 08:35:11.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.971" endtime="20201110 08:35:11.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.994" endtime="20201110 08:35:11.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.996" endtime="20201110 08:35:11.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.968" endtime="20201110 08:35:11.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.966" endtime="20201110 08:35:11.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.005" endtime="20201110 08:35:12.292"></status>
</kw>
<msg timestamp="20201110 08:35:12.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02224625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:12.004" endtime="20201110 08:35:12.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02224625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:12.296" endtime="20201110 08:35:12.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.304" endtime="20201110 08:35:12.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.001" endtime="20201110 08:35:12.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.999" endtime="20201110 08:35:12.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:12.310" level="INFO">${RESULT} = [{'time': 0.022356681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011043100000000111, 'source_diff': 0.00011043100000000111}, {'time': 0.022479694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:12.307" endtime="20201110 08:35:12.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:12.323" level="INFO">${ACCURACY} = {'source_diff': [0.00011043100000000111, 0.00011037500000000283, 0.0001107220000000006, 0.0001105549999999983, 0.00011067999999999842, 0.00010981900000000058, 0.00010986100000000276, 0.000109861000000...</msg>
<status status="PASS" starttime="20201110 08:35:12.311" endtime="20201110 08:35:12.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.328" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:35:12.327" endtime="20201110 08:35:12.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.330" level="INFO">VALUE: [0.00011043100000000111, 0.00011037500000000283, 0.0001107220000000006, 0.0001105549999999983, 0.00011067999999999842, 0.00010981900000000058, 0.00010986100000000276, 0.00010986100000000276, 0.00010997199999999985, 0.00011002799999999813, 0.00010998699999999889, 0.00011002699999999865, 0.00010986099999999929, 0.00011001400000000203, 0.00010986099999999929, 0.00011034699999999675, 0.00011051400000000253, 0.00011006900000000083, 0.00011068100000000136, 0.00010987500000000233, 0.00011002700000000212, 0.00011036100000000326, 0.00011020800000000053, 0.00011055600000000124, 0.00011068100000000136, 0.00011068099999999789, 0.0001100280000000016, 0.00011051399999999906, 0.00010986199999999877, 0.00011030499999999804, 0.00011009699999999997, 0.00011066600000000232, 0.00011054200000000167, 0.00011036099999999979, 0.00011032000000000056, 0.00011054200000000167, 0.00011002799999999813, 0.0001098479999999992, 0.00011001300000000255, 0.00011054100000000219, 0.00011019400000000096, 0.00011052799999999863, 0.0001102220000000001, 0.00010986100000000276, 0.00011002799999999813, 0.00011030599999999752, 0.00011036199999999927, 0.00010986099999999929, 0.00011051399999999906, 0.00011037499999999936]</msg>
<status status="PASS" starttime="20201110 08:35:12.329" endtime="20201110 08:35:12.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.324" endtime="20201110 08:35:12.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.334" endtime="20201110 08:35:12.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:12.337" endtime="20201110 08:35:12.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.336" endtime="20201110 08:35:12.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.332" endtime="20201110 08:35:12.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.965" endtime="20201110 08:35:12.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.964" endtime="20201110 08:35:12.358"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.367" endtime="20201110 08:35:12.388"></status>
</kw>
<msg timestamp="20201110 08:35:12.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:12.365" endtime="20201110 08:35:12.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:12.389" endtime="20201110 08:35:12.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.392" endtime="20201110 08:35:12.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.362" endtime="20201110 08:35:12.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.360" endtime="20201110 08:35:12.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.400" endtime="20201110 08:35:12.687"></status>
</kw>
<msg timestamp="20201110 08:35:12.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:12.399" endtime="20201110 08:35:12.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:12.691" endtime="20201110 08:35:12.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.700" endtime="20201110 08:35:12.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.396" endtime="20201110 08:35:12.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.395" endtime="20201110 08:35:12.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:12.706" level="INFO">${RESULT} = [{'time': 0.022595528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011108400000000088, 'source_diff': 0.00011108400000000088}, {'time': 0.022715556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:12.703" endtime="20201110 08:35:12.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:12.719" level="INFO">${ACCURACY} = {'source_diff': [0.00011108400000000088, 0.00011122300000000057, 0.00011170899999999803, 0.00011170800000000203, 0.00011134700000000122, 0.00011116599999999935, 0.00011112500000000011, 0.0001109999999...</msg>
<status status="PASS" starttime="20201110 08:35:12.707" endtime="20201110 08:35:12.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.724" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:35:12.723" endtime="20201110 08:35:12.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.726" level="INFO">VALUE: [0.00011108400000000088, 0.00011122300000000057, 0.00011170899999999803, 0.00011170800000000203, 0.00011134700000000122, 0.00011116599999999935, 0.00011112500000000011, 0.00011099999999999999, 0.00011102799999999913, 0.00011086100000000029, 0.0001117090000000015, 0.00011169499999999846, 0.00011102799999999913, 0.0001117220000000016, 0.00011119399999999849, 0.00011151400000000006, 0.0001115419999999992, 0.00011152799999999963, 0.00011116700000000229, 0.00011134699999999775, 0.00011168099999999889, 0.00011136200000000027, 0.00011086100000000029, 0.00011136100000000079, 0.00011167999999999942, 0.0001117220000000016, 0.00011141699999999907, 0.0001110830000000014, 0.0001110419999999987, 0.0001110419999999987, 0.00011138899999999993, 0.00011134700000000122, 0.00011086100000000029, 0.00011136100000000079, 0.00011134700000000122, 0.00011137500000000036, 0.00011137500000000036, 0.00011119500000000143, 0.0001108480000000002, 0.0001112220000000011, 0.00011154099999999972, 0.00011086100000000029, 0.00011169400000000246, 0.00011119400000000196, 0.00011152799999999963, 0.00011134700000000122, 0.000111209000000001, 0.00011104200000000217, 0.00011166699999999932, 0.0001112220000000011]</msg>
<status status="PASS" starttime="20201110 08:35:12.725" endtime="20201110 08:35:12.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.720" endtime="20201110 08:35:12.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.736" endtime="20201110 08:35:12.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:12.740" endtime="20201110 08:35:12.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.738" endtime="20201110 08:35:12.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.735" endtime="20201110 08:35:12.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.359" endtime="20201110 08:35:12.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.358" endtime="20201110 08:35:12.761"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.769" endtime="20201110 08:35:12.789"></status>
</kw>
<msg timestamp="20201110 08:35:12.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:12.768" endtime="20201110 08:35:12.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:12.791" endtime="20201110 08:35:12.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.793" endtime="20201110 08:35:12.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.765" endtime="20201110 08:35:12.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.763" endtime="20201110 08:35:12.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.802" endtime="20201110 08:35:13.091"></status>
</kw>
<msg timestamp="20201110 08:35:13.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:12.801" endtime="20201110 08:35:13.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.095" endtime="20201110 08:35:13.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.103" endtime="20201110 08:35:13.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.798" endtime="20201110 08:35:13.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.796" endtime="20201110 08:35:13.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:13.109" level="INFO">${RESULT} = [{'time': 0.022416833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011243000000000017, 'source_diff': 0.00011243000000000017}, {'time': 0.022534861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:13.106" endtime="20201110 08:35:13.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:13.122" level="INFO">${ACCURACY} = {'source_diff': [0.00011243000000000017, 0.00011269399999999999, 0.00011191699999999957, 0.00011186100000000129, 0.00011236099999999832, 0.00011232000000000256, 0.00011187500000000086, 0.0001125280000...</msg>
<status status="PASS" starttime="20201110 08:35:13.110" endtime="20201110 08:35:13.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.127" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:35:13.126" endtime="20201110 08:35:13.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.129" level="INFO">VALUE: [0.00011243000000000017, 0.00011269399999999999, 0.00011191699999999957, 0.00011186100000000129, 0.00011236099999999832, 0.00011232000000000256, 0.00011187500000000086, 0.00011252800000000063, 0.00011252699999999768, 0.00011269399999999999, 0.00011252800000000063, 0.00011197199999999838, 0.00011269399999999999, 0.00011237500000000136, 0.00011186100000000129, 0.00011202800000000013, 0.00011251400000000106, 0.00011201300000000108, 0.00011252700000000115, 0.00011238900000000093, 0.00011193100000000261, 0.00011265300000000075, 0.00011186100000000129, 0.00011269499999999946, 0.00011251400000000106, 0.00011236200000000127, 0.00011202700000000065, 0.00011270800000000303, 0.00011251400000000106, 0.00011217999999999992, 0.00011202800000000013, 0.00011220899999999853, 0.00011202800000000013, 0.00011270899999999903, 0.00011234799999999823, 0.00011268000000000042, 0.00011270799999999956, 0.00011267999999999695, 0.00011201400000000056, 0.0001125420000000002, 0.00011186100000000129, 0.00011218099999999939, 0.00011219499999999896, 0.00011254100000000072, 0.00011270799999999956, 0.00011217999999999992, 0.00011245799999999931, 0.0001120419999999997, 0.00011219399999999949, 0.00011202800000000013]</msg>
<status status="PASS" starttime="20201110 08:35:13.128" endtime="20201110 08:35:13.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.123" endtime="20201110 08:35:13.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.133" endtime="20201110 08:35:13.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:13.136" endtime="20201110 08:35:13.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.135" endtime="20201110 08:35:13.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.131" endtime="20201110 08:35:13.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.762" endtime="20201110 08:35:13.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.761" endtime="20201110 08:35:13.157"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.165" endtime="20201110 08:35:13.185"></status>
</kw>
<msg timestamp="20201110 08:35:13.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.164" endtime="20201110 08:35:13.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.186" endtime="20201110 08:35:13.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.189" endtime="20201110 08:35:13.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.161" endtime="20201110 08:35:13.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.159" endtime="20201110 08:35:13.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.198" endtime="20201110 08:35:13.486"></status>
</kw>
<msg timestamp="20201110 08:35:13.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.196" endtime="20201110 08:35:13.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.490" endtime="20201110 08:35:13.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.498" endtime="20201110 08:35:13.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.194" endtime="20201110 08:35:13.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.192" endtime="20201110 08:35:13.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:13.504" level="INFO">${RESULT} = [{'time': 0.022176014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000113597, 'source_diff': 0.000113597}, {'time': 0.022299014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000112985999999...</msg>
<status status="PASS" starttime="20201110 08:35:13.501" endtime="20201110 08:35:13.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:13.517" level="INFO">${ACCURACY} = {'source_diff': [0.000113597, 0.00011298599999999895, 0.0001130420000000007, 0.0001132359999999992, 0.0001130420000000007, 0.00011304099999999775, 0.00011352699999999868, 0.00011327799999999791, 0.000...</msg>
<status status="PASS" starttime="20201110 08:35:13.505" endtime="20201110 08:35:13.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.522" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:35:13.521" endtime="20201110 08:35:13.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.524" level="INFO">VALUE: [0.000113597, 0.00011298599999999895, 0.0001130420000000007, 0.0001132359999999992, 0.0001130420000000007, 0.00011304099999999775, 0.00011352699999999868, 0.00011327799999999791, 0.0001130420000000007, 0.00011352800000000163, 0.00011320800000000006, 0.00011354199999999773, 0.0001135550000000013, 0.00011288799999999849, 0.00011326399999999834, 0.00011304100000000122, 0.00011331900000000061, 0.0001128749999999984, 0.00011370800000000056, 0.00011370800000000056, 0.0001133749999999989, 0.00011370900000000003, 0.00011322199999999963, 0.00011345800000000031, 0.00011369399999999752, 0.00011355499999999782, 0.0001133749999999989, 0.00011286100000000229, 0.00011288900000000143, 0.0001137229999999996, 0.00011302800000000113, 0.00011369400000000099, 0.00011369400000000099, 0.00011286099999999882, 0.00011319400000000049, 0.00011336099999999932, 0.00011284699999999925, 0.00011319499999999996, 0.00011352799999999816, 0.00011318100000000039, 0.00011369500000000046, 0.00011336099999999932, 0.00011334699999999975, 0.00011288900000000143, 0.00011368000000000142, 0.00011319400000000049, 0.00011319499999999996, 0.00011286099999999882, 0.00011319499999999996, 0.00011370800000000056]</msg>
<status status="PASS" starttime="20201110 08:35:13.523" endtime="20201110 08:35:13.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.518" endtime="20201110 08:35:13.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.528" endtime="20201110 08:35:13.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:13.531" endtime="20201110 08:35:13.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.530" endtime="20201110 08:35:13.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.526" endtime="20201110 08:35:13.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.158" endtime="20201110 08:35:13.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.157" endtime="20201110 08:35:13.552"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.561" endtime="20201110 08:35:13.581"></status>
</kw>
<msg timestamp="20201110 08:35:13.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.559" endtime="20201110 08:35:13.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.583" endtime="20201110 08:35:13.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.585" endtime="20201110 08:35:13.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.557" endtime="20201110 08:35:13.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.555" endtime="20201110 08:35:13.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.594" endtime="20201110 08:35:13.881"></status>
</kw>
<msg timestamp="20201110 08:35:13.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:13.592" endtime="20201110 08:35:13.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:13.885" endtime="20201110 08:35:13.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.894" endtime="20201110 08:35:13.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.590" endtime="20201110 08:35:13.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.588" endtime="20201110 08:35:13.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:13.900" level="INFO">${RESULT} = [{'time': 0.022224931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011443099999999817, 'source_diff': 0.00011443099999999817}, {'time': 0.022346944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:13.897" endtime="20201110 08:35:13.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:13.913" level="INFO">${ACCURACY} = {'source_diff': [0.00011443099999999817, 0.00011418000000000192, 0.00011451300000000011, 0.00011476399999999984, 0.0001140559999999978, 0.00011454199999999873, 0.00011419500000000096, 0.00011470900000...</msg>
<status status="PASS" starttime="20201110 08:35:13.901" endtime="20201110 08:35:13.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.918" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:35:13.917" endtime="20201110 08:35:13.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.920" level="INFO">VALUE: [0.00011443099999999817, 0.00011418000000000192, 0.00011451300000000011, 0.00011476399999999984, 0.0001140559999999978, 0.00011454199999999873, 0.00011419500000000096, 0.00011470900000000103, 0.0001140420000000017, 0.00011391700000000157, 0.00011433400000000066, 0.0001142360000000002, 0.0001138749999999994, 0.0001143749999999999, 0.00011430600000000152, 0.00011454199999999873, 0.00011406900000000136, 0.00011387500000000286, 0.00011420800000000106, 0.00011438899999999946, 0.00011451399999999959, 0.00011456900000000186, 0.00011454199999999873, 0.00011415299999999878, 0.00011470800000000156, 0.0001138749999999994, 0.00011388900000000243, 0.00011433400000000066, 0.0001143749999999999, 0.0001143749999999999, 0.00011447199999999741, 0.00011388899999999896, 0.00011409799999999998, 0.00011475000000000027, 0.00011452799999999916, 0.00011463900000000318, 0.00011420800000000106, 0.00011436100000000032, 0.00011383300000000068, 0.00011384700000000025, 0.00011384700000000025, 0.00011434700000000075, 0.0001143749999999999, 0.00011469500000000146, 0.00011470899999999756, 0.00011454099999999925, 0.00011402700000000265, 0.00011419400000000149, 0.00011457000000000134, 0.00011451399999999959]</msg>
<status status="PASS" starttime="20201110 08:35:13.919" endtime="20201110 08:35:13.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.914" endtime="20201110 08:35:13.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.924" endtime="20201110 08:35:13.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:13.927" endtime="20201110 08:35:13.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.926" endtime="20201110 08:35:13.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.922" endtime="20201110 08:35:13.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.553" endtime="20201110 08:35:13.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.553" endtime="20201110 08:35:13.948"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.958" endtime="20201110 08:35:13.978"></status>
</kw>
<msg timestamp="20201110 08:35:13.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.956" endtime="20201110 08:35:13.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.980" endtime="20201110 08:35:13.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.982" endtime="20201110 08:35:13.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.953" endtime="20201110 08:35:13.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.951" endtime="20201110 08:35:13.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.991" endtime="20201110 08:35:14.278"></status>
</kw>
<msg timestamp="20201110 08:35:14.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023455708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023571139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.990" endtime="20201110 08:35:14.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023455708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023571139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.282" endtime="20201110 08:35:14.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.290" endtime="20201110 08:35:14.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.987" endtime="20201110 08:35:14.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.986" endtime="20201110 08:35:14.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:14.297" level="INFO">${RESULT} = [{'time': 0.023571139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011543100000000264, 'source_diff': 0.00011543100000000264}, {'time': 0.023692167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:14.293" endtime="20201110 08:35:14.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:14.310" level="INFO">${ACCURACY} = {'source_diff': [0.00011543100000000264, 0.0001157230000000016, 0.00011520899999999806, 0.00011520900000000153, 0.00011570799999999909, 0.00011537499999999742, 0.00011504100000000322, 0.00011537500000...</msg>
<status status="PASS" starttime="20201110 08:35:14.297" endtime="20201110 08:35:14.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.314" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:35:14.313" endtime="20201110 08:35:14.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.316" level="INFO">VALUE: [0.00011543100000000264, 0.0001157230000000016, 0.00011520899999999806, 0.00011520900000000153, 0.00011570799999999909, 0.00011537499999999742, 0.00011504100000000322, 0.0001153750000000009, 0.00011543099999999917, 0.0001148750000000004, 0.00011504199999999923, 0.00011526400000000034, 0.00011502799999999966, 0.00011567999999999995, 0.00011502799999999966, 0.00011551399999999712, 0.00011502799999999966, 0.0001157499999999978, 0.00011501400000000009, 0.00011502799999999966, 0.00011504199999999923, 0.00011576400000000084, 0.00011569399999999952, 0.0001150689999999989, 0.00011494399999999877, 0.00011554199999999973, 0.00011502799999999966, 0.00011552800000000016, 0.00011569500000000246, 0.00011536099999999785, 0.0001148750000000004, 0.00011484699999999778, 0.00011512500000000064, 0.00011484699999999778, 0.00011505600000000227, 0.00011540300000000003, 0.0001155420000000032, 0.00011570899999999856, 0.00011579199999999998, 0.00011537499999999742, 0.00011554100000000025, 0.0001148750000000004, 0.00011504199999999923, 0.00011504199999999923, 0.00011481999999999812, 0.0001148750000000004, 0.00011550000000000102, 0.00011537499999999742, 0.00011519399999999902, 0.00011536100000000132]</msg>
<status status="PASS" starttime="20201110 08:35:14.315" endtime="20201110 08:35:14.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.310" endtime="20201110 08:35:14.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.320" endtime="20201110 08:35:14.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:14.323" endtime="20201110 08:35:14.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.322" endtime="20201110 08:35:14.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.318" endtime="20201110 08:35:14.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.949" endtime="20201110 08:35:14.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.949" endtime="20201110 08:35:14.344"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.353" endtime="20201110 08:35:14.373"></status>
</kw>
<msg timestamp="20201110 08:35:14.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:14.351" endtime="20201110 08:35:14.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:14.374" endtime="20201110 08:35:14.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.377" endtime="20201110 08:35:14.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.349" endtime="20201110 08:35:14.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.347" endtime="20201110 08:35:14.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.386" endtime="20201110 08:35:14.673"></status>
</kw>
<msg timestamp="20201110 08:35:14.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022240694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.384" endtime="20201110 08:35:14.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022240694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.677" endtime="20201110 08:35:14.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.685" endtime="20201110 08:35:14.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.381" endtime="20201110 08:35:14.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.380" endtime="20201110 08:35:14.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:14.692" level="INFO">${RESULT} = [{'time': 0.022356764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011607000000000284, 'source_diff': 0.00011607000000000284}, {'time': 0.022480792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:14.689" endtime="20201110 08:35:14.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:14.705" level="INFO">${ACCURACY} = {'source_diff': [0.00011607000000000284, 0.00011673599999999923, 0.00011601399999999762, 0.00011600000000000152, 0.0001158750000000014, 0.00011640300000000103, 0.00011669400000000052, 0.00011636099999...</msg>
<status status="PASS" starttime="20201110 08:35:14.693" endtime="20201110 08:35:14.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.709" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:35:14.708" endtime="20201110 08:35:14.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.712" level="INFO">VALUE: [0.00011607000000000284, 0.00011673599999999923, 0.00011601399999999762, 0.00011600000000000152, 0.0001158750000000014, 0.00011640300000000103, 0.00011669400000000052, 0.00011636099999999885, 0.00011636100000000232, 0.00011604200000000023, 0.00011669499999999999, 0.00011637499999999842, 0.00011652800000000116, 0.00011601400000000109, 0.00011651300000000211, 0.00011604100000000075, 0.00011654200000000073, 0.00011669400000000052, 0.00011669400000000052, 0.00011670899999999956, 0.00011633400000000266, 0.00011669499999999999, 0.00011652799999999769, 0.00011640300000000103, 0.00011669400000000052, 0.0001163750000000019, 0.00011620799999999959, 0.00011669399999999705, 0.00011586099999999835, 0.00011620899999999906, 0.00011636100000000232, 0.00011601399999999762, 0.00011602700000000118, 0.00011654100000000125, 0.00011654200000000073, 0.00011588900000000096, 0.00011654200000000073, 0.0001167499999999988, 0.00011604200000000023, 0.00011652800000000116, 0.00011652700000000168, 0.00011654100000000125, 0.00011604100000000075, 0.00011665300000000128, 0.00011586099999999835, 0.00011636100000000232, 0.00011601399999999762, 0.0001163750000000019, 0.00011636199999999833, 0.00011584699999999878]</msg>
<status status="PASS" starttime="20201110 08:35:14.710" endtime="20201110 08:35:14.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.706" endtime="20201110 08:35:14.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.715" endtime="20201110 08:35:14.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:14.719" endtime="20201110 08:35:14.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.717" endtime="20201110 08:35:14.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.714" endtime="20201110 08:35:14.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.345" endtime="20201110 08:35:14.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.345" endtime="20201110 08:35:14.739"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.748" endtime="20201110 08:35:14.768"></status>
</kw>
<msg timestamp="20201110 08:35:14.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:14.746" endtime="20201110 08:35:14.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:14.770" endtime="20201110 08:35:14.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.772" endtime="20201110 08:35:14.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.744" endtime="20201110 08:35:14.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.742" endtime="20201110 08:35:14.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.782" endtime="20201110 08:35:15.068"></status>
</kw>
<msg timestamp="20201110 08:35:15.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.780" endtime="20201110 08:35:15.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.072" endtime="20201110 08:35:15.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.080" endtime="20201110 08:35:15.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.778" endtime="20201110 08:35:15.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.776" endtime="20201110 08:35:15.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:15.086" level="INFO">${RESULT} = [{'time': 0.022534722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011723599999999973, 'source_diff': 0.00011723599999999973}, {'time': 0.022660778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:15.083" endtime="20201110 08:35:15.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:15.099" level="INFO">${ACCURACY} = {'source_diff': [0.00011723599999999973, 0.00011690299999999806, 0.00011720799999999712, 0.00011702799999999819, 0.000117388999999999, 0.00011722200000000016, 0.00011754099999999879, 0.000117540999999...</msg>
<status status="PASS" starttime="20201110 08:35:15.087" endtime="20201110 08:35:15.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.104" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:35:15.103" endtime="20201110 08:35:15.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.106" level="INFO">VALUE: [0.00011723599999999973, 0.00011690299999999806, 0.00011720799999999712, 0.00011702799999999819, 0.000117388999999999, 0.00011722200000000016, 0.00011754099999999879, 0.00011754099999999879, 0.00011770800000000109, 0.0001168750000000024, 0.00011751399999999912, 0.00011736099999999985, 0.00011720799999999712, 0.00011720900000000006, 0.00011726399999999887, 0.00011719399999999755, 0.00011752799999999869, 0.00011769399999999805, 0.00011687499999999892, 0.00011769399999999805, 0.00011719500000000049, 0.00011769499999999752, 0.00011770900000000056, 0.000117695000000001, 0.00011754099999999879, 0.00011719399999999755, 0.00011686099999999935, 0.00011734699999999681, 0.00011720800000000059, 0.0001177089999999971, 0.00011770900000000056, 0.00011679199999999751, 0.00011720800000000059, 0.00011704100000000175, 0.0001168750000000024, 0.00011754199999999826, 0.00011702800000000166, 0.00011702800000000166, 0.00011702800000000166, 0.00011754200000000173, 0.00011687499999999892, 0.00011720800000000059, 0.00011754099999999879, 0.00011723599999999973, 0.00011768000000000195, 0.00011719400000000102, 0.00011752799999999869, 0.00011768100000000142, 0.00011769499999999752, 0.00011754100000000225]</msg>
<status status="PASS" starttime="20201110 08:35:15.105" endtime="20201110 08:35:15.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.100" endtime="20201110 08:35:15.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.110" endtime="20201110 08:35:15.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:15.113" endtime="20201110 08:35:15.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.112" endtime="20201110 08:35:15.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.108" endtime="20201110 08:35:15.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.740" endtime="20201110 08:35:15.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.740" endtime="20201110 08:35:15.134"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.142" endtime="20201110 08:35:15.164"></status>
</kw>
<msg timestamp="20201110 08:35:15.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.141" endtime="20201110 08:35:15.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.165" endtime="20201110 08:35:15.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.168" endtime="20201110 08:35:15.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.138" endtime="20201110 08:35:15.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.136" endtime="20201110 08:35:15.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.177" endtime="20201110 08:35:15.466"></status>
</kw>
<msg timestamp="20201110 08:35:15.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.175" endtime="20201110 08:35:15.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.470" endtime="20201110 08:35:15.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.478" endtime="20201110 08:35:15.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.173" endtime="20201110 08:35:15.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.171" endtime="20201110 08:35:15.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:15.485" level="INFO">${RESULT} = [{'time': 0.022243806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011794500000000124, 'source_diff': 0.00011794500000000124}, {'time': 0.022371819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:15.482" endtime="20201110 08:35:15.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:15.498" level="INFO">${ACCURACY} = {'source_diff': [0.00011794500000000124, 0.00011820800000000159, 0.00011870800000000209, 0.00011836100000000085, 0.00011790299999999906, 0.00011787499999999992, 0.00011854199999999926, 0.0001182080000...</msg>
<status status="PASS" starttime="20201110 08:35:15.486" endtime="20201110 08:35:15.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.503" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:35:15.502" endtime="20201110 08:35:15.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.505" level="INFO">VALUE: [0.00011794500000000124, 0.00011820800000000159, 0.00011870800000000209, 0.00011836100000000085, 0.00011790299999999906, 0.00011787499999999992, 0.00011854199999999926, 0.00011820800000000159, 0.00011854199999999926, 0.00011790199999999959, 0.00011820800000000159, 0.000118389, 0.00011802799999999919, 0.00011834700000000128, 0.00011801399999999962, 0.00011780600000000155, 0.00011802799999999919, 0.00011836100000000085, 0.00011836200000000033, 0.00011836099999999738, 0.0001178889999999995, 0.00011851400000000012, 0.00011836100000000085, 0.00011837499999999695, 0.00011804200000000223, 0.00011820900000000106, 0.00011804199999999876, 0.00011850000000000055, 0.00011788900000000296, 0.00011851400000000012, 0.00011863900000000024, 0.00011786100000000035, 0.00011786100000000035, 0.0001187089999999981, 0.00011786099999999688, 0.00011869499999999852, 0.00011801400000000309, 0.00011802699999999972, 0.00011870800000000209, 0.0001182500000000003, 0.00011820799999999812, 0.00011786100000000035, 0.00011850000000000055, 0.00011805499999999886, 0.00011820799999999812, 0.0001182500000000003, 0.00011836100000000085, 0.00011837500000000042, 0.00011870800000000209, 0.00011788900000000296]</msg>
<status status="PASS" starttime="20201110 08:35:15.504" endtime="20201110 08:35:15.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.499" endtime="20201110 08:35:15.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.509" endtime="20201110 08:35:15.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:15.512" endtime="20201110 08:35:15.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.511" endtime="20201110 08:35:15.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.507" endtime="20201110 08:35:15.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.135" endtime="20201110 08:35:15.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.134" endtime="20201110 08:35:15.533"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.542" endtime="20201110 08:35:15.562"></status>
</kw>
<msg timestamp="20201110 08:35:15.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.540" endtime="20201110 08:35:15.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.564" endtime="20201110 08:35:15.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.566" endtime="20201110 08:35:15.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.538" endtime="20201110 08:35:15.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.535" endtime="20201110 08:35:15.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.575" endtime="20201110 08:35:15.862"></status>
</kw>
<msg timestamp="20201110 08:35:15.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.573" endtime="20201110 08:35:15.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.867" endtime="20201110 08:35:15.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.874" endtime="20201110 08:35:15.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.571" endtime="20201110 08:35:15.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.569" endtime="20201110 08:35:15.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:15.881" level="INFO">${RESULT} = [{'time': 0.022475194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001197500000000018, 'source_diff': 0.0001197500000000018}, {'time': 0.022601208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:15.878" endtime="20201110 08:35:15.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:15.894" level="INFO">${ACCURACY} = {'source_diff': [0.0001197500000000018, 0.00011952700000000122, 0.00011952799999999722, 0.00011969400000000005, 0.00011919399999999955, 0.00011886099999999789, 0.00011970900000000256, 0.00011969400000...</msg>
<status status="PASS" starttime="20201110 08:35:15.882" endtime="20201110 08:35:15.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.899" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:35:15.898" endtime="20201110 08:35:15.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.901" level="INFO">VALUE: [0.0001197500000000018, 0.00011952700000000122, 0.00011952799999999722, 0.00011969400000000005, 0.00011919399999999955, 0.00011886099999999789, 0.00011970900000000256, 0.00011969400000000005, 0.00011970799999999962, 0.00011969400000000005, 0.00011970799999999962, 0.00011902800000000019, 0.00011936100000000185, 0.00011972199999999919, 0.0001191110000000016, 0.00011884800000000126, 0.00011887500000000092, 0.00011920799999999912, 0.00011966600000000091, 0.0001189309999999992, 0.00011959800000000201, 0.00011919499999999902, 0.00011936100000000185, 0.00011936100000000185, 0.00011888800000000102, 0.00011887499999999745, 0.00011934699999999882, 0.00011926400000000087, 0.00011951399999999765, 0.00011948600000000198, 0.00011902800000000019, 0.00011904199999999976, 0.00011934800000000176, 0.00011952799999999722, 0.00011968000000000048, 0.00011936100000000185, 0.00011886100000000135, 0.00011950000000000155, 0.00011904199999999976, 0.00011954199999999679, 0.00011898600000000148, 0.00011954100000000079, 0.00011972199999999919, 0.00011887499999999745, 0.00011969400000000005, 0.00011886100000000135, 0.00011969400000000005, 0.00011919499999999902, 0.00011969499999999952, 0.00011904199999999976]</msg>
<status status="PASS" starttime="20201110 08:35:15.900" endtime="20201110 08:35:15.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.895" endtime="20201110 08:35:15.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.905" endtime="20201110 08:35:15.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:15.908" endtime="20201110 08:35:15.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.907" endtime="20201110 08:35:15.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.903" endtime="20201110 08:35:15.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.534" endtime="20201110 08:35:15.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.533" endtime="20201110 08:35:15.929"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.938" endtime="20201110 08:35:15.958"></status>
</kw>
<msg timestamp="20201110 08:35:15.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.936" endtime="20201110 08:35:15.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.960" endtime="20201110 08:35:15.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.962" endtime="20201110 08:35:15.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.934" endtime="20201110 08:35:15.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.931" endtime="20201110 08:35:15.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.971" endtime="20201110 08:35:16.261"></status>
</kw>
<msg timestamp="20201110 08:35:16.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022423347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.970" endtime="20201110 08:35:16.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022423347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.265" endtime="20201110 08:35:16.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.273" endtime="20201110 08:35:16.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.967" endtime="20201110 08:35:16.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.966" endtime="20201110 08:35:16.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:16.280" level="INFO">${RESULT} = [{'time': 0.022423347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012043000000000123, 'source_diff': 0.00012043000000000123}, {'time': 0.022548361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:16.276" endtime="20201110 08:35:16.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:16.337" level="INFO">${ACCURACY} = {'source_diff': [0.00012043000000000123, 0.00012020800000000012, 0.00012055600000000083, 0.00012004200000000076, 0.00011994499999999977, 0.00012019500000000002, 0.00012034699999999982, 0.0001207080000...</msg>
<status status="PASS" starttime="20201110 08:35:16.281" endtime="20201110 08:35:16.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.342" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:35:16.341" endtime="20201110 08:35:16.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.344" level="INFO">VALUE: [0.00012043000000000123, 0.00012020800000000012, 0.00012055600000000083, 0.00012004200000000076, 0.00011994499999999977, 0.00012019500000000002, 0.00012034699999999982, 0.00012070800000000062, 0.00012052700000000222, 0.00012005600000000033, 0.00012070800000000062, 0.00012049999999999908, 0.00012002800000000119, 0.00012042999999999776, 0.0001202089999999996, 0.00012069400000000105, 0.00012073599999999976, 0.00012034699999999982, 0.00012019400000000055, 0.00012069500000000052, 0.00012066699999999791, 0.00012015300000000131, 0.00012051400000000212, 0.00012033399999999972, 0.00011986099999999889, 0.00012004200000000076, 0.00012005600000000033, 0.00012070800000000062, 0.00011986099999999889, 0.00012037499999999896, 0.00012023599999999926, 0.00011987499999999846, 0.00011986100000000235, 0.00012002700000000172, 0.00011987499999999846, 0.00011988899999999802, 0.00012070800000000062, 0.00011986099999999889, 0.00012041599999999819, 0.00012055500000000136, 0.00012036199999999886, 0.00012070799999999715, 0.00012068000000000148, 0.00012037499999999896, 0.00012072200000000019, 0.00012070800000000062, 0.00012004199999999729, 0.0001202089999999996, 0.00011984800000000226, 0.00011984699999999932]</msg>
<status status="PASS" starttime="20201110 08:35:16.343" endtime="20201110 08:35:16.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.338" endtime="20201110 08:35:16.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.348" endtime="20201110 08:35:16.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:16.351" endtime="20201110 08:35:16.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.350" endtime="20201110 08:35:16.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.346" endtime="20201110 08:35:16.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.930" endtime="20201110 08:35:16.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.929" endtime="20201110 08:35:16.372"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.381" endtime="20201110 08:35:16.401"></status>
</kw>
<msg timestamp="20201110 08:35:16.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:16.380" endtime="20201110 08:35:16.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:16.403" endtime="20201110 08:35:16.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.405" endtime="20201110 08:35:16.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.376" endtime="20201110 08:35:16.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.374" endtime="20201110 08:35:16.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.414" endtime="20201110 08:35:16.700"></status>
</kw>
<msg timestamp="20201110 08:35:16.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.413" endtime="20201110 08:35:16.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.704" endtime="20201110 08:35:16.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.712" endtime="20201110 08:35:16.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.410" endtime="20201110 08:35:16.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.409" endtime="20201110 08:35:16.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:16.719" level="INFO">${RESULT} = [{'time': 0.022835333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012142999999999876, 'source_diff': 0.00012142999999999876}, {'time': 0.022963403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:16.716" endtime="20201110 08:35:16.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:16.732" level="INFO">${ACCURACY} = {'source_diff': [0.00012142999999999876, 0.00012175000000000033, 0.00012117999999999851, 0.00012170800000000162, 0.00012154199999999879, 0.00012169500000000152, 0.00012172200000000119, 0.0001208889999...</msg>
<status status="PASS" starttime="20201110 08:35:16.720" endtime="20201110 08:35:16.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.737" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:35:16.736" endtime="20201110 08:35:16.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.739" level="INFO">VALUE: [0.00012142999999999876, 0.00012175000000000033, 0.00012117999999999851, 0.00012170800000000162, 0.00012154199999999879, 0.00012169500000000152, 0.00012172200000000119, 0.00012088899999999903, 0.00012133300000000125, 0.00012102699999999925, 0.00012087500000000292, 0.00012083300000000075, 0.00012118099999999798, 0.00012138899999999953, 0.00012105600000000133, 0.00012086099999999989, 0.00012119400000000155, 0.00012154099999999932, 0.00012105600000000133, 0.00012087500000000292, 0.00012154199999999879, 0.00012151399999999965, 0.00012169499999999805, 0.00012118099999999798, 0.00012111199999999961, 0.00012106900000000143, 0.00012170800000000162, 0.00012102800000000219, 0.00012154199999999879, 0.00012087499999999946, 0.00012169499999999805, 0.00012152799999999922, 0.00012168100000000195, 0.00012116600000000241, 0.00012169399999999858, 0.00012137499999999996, 0.00012086099999999989, 0.00012104200000000176, 0.0001214029999999991, 0.0001217090000000011, 0.00012169499999999805, 0.00012117999999999851, 0.00012152699999999975, 0.00012155600000000183, 0.00012079200000000151, 0.00012136100000000039, 0.00012119500000000102, 0.00012086099999999989, 0.00012154199999999879, 0.00012165300000000281]</msg>
<status status="PASS" starttime="20201110 08:35:16.738" endtime="20201110 08:35:16.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.733" endtime="20201110 08:35:16.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.743" endtime="20201110 08:35:16.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:16.746" endtime="20201110 08:35:16.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.745" endtime="20201110 08:35:16.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.741" endtime="20201110 08:35:16.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.373" endtime="20201110 08:35:16.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.372" endtime="20201110 08:35:16.767"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.776" endtime="20201110 08:35:16.797"></status>
</kw>
<msg timestamp="20201110 08:35:16.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:16.775" endtime="20201110 08:35:16.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:16.798" endtime="20201110 08:35:16.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.801" endtime="20201110 08:35:16.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.771" endtime="20201110 08:35:16.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.769" endtime="20201110 08:35:16.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.809" endtime="20201110 08:35:17.094"></status>
</kw>
<msg timestamp="20201110 08:35:17.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023160653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023283069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.808" endtime="20201110 08:35:17.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023160653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023283069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.099" endtime="20201110 08:35:17.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.107" endtime="20201110 08:35:17.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.805" endtime="20201110 08:35:17.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.804" endtime="20201110 08:35:17.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.113" level="INFO">${RESULT} = [{'time': 0.023283069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001224160000000002, 'source_diff': 0.0001224160000000002}, {'time': 0.023412083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:17.110" endtime="20201110 08:35:17.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:17.126" level="INFO">${ACCURACY} = {'source_diff': [0.0001224160000000002, 0.00012183300000000175, 0.00012236100000000139, 0.0001225419999999998, 0.00012201400000000015, 0.00012248599999999804, 0.00012251400000000065, 0.000122027999999...</msg>
<status status="PASS" starttime="20201110 08:35:17.114" endtime="20201110 08:35:17.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.131" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:35:17.130" endtime="20201110 08:35:17.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.133" level="INFO">VALUE: [0.0001224160000000002, 0.00012183300000000175, 0.00012236100000000139, 0.0001225419999999998, 0.00012201400000000015, 0.00012248599999999804, 0.00012251400000000065, 0.00012202799999999972, 0.00012188900000000003, 0.00012220799999999865, 0.00012187500000000046, 0.00012202799999999972, 0.00012187499999999699, 0.00012238900000000053, 0.00012269499999999905, 0.00012251399999999718, 0.00012223600000000126, 0.00012236100000000139, 0.00012202700000000025, 0.00012205600000000233, 0.0001222770000000005, 0.00012229100000000007, 0.00012180600000000208, 0.00012222300000000116, 0.00012202799999999972, 0.00012252700000000075, 0.0001222770000000005, 0.0001227220000000022, 0.00012270799999999915, 0.0001219579999999984, 0.0001223480000000013, 0.00012220899999999812, 0.00012190200000000012, 0.00012220799999999865, 0.00012252700000000075, 0.00012204199999999929, 0.0001222359999999978, 0.00012219500000000202, 0.00012252800000000022, 0.00012269499999999905, 0.00012209700000000157, 0.00012234799999999782, 0.0001222220000000017, 0.00012188900000000003, 0.00012236100000000139, 0.00012252800000000022, 0.0001227090000000021, 0.00012270899999999862, 0.00012269499999999905, 0.00012236200000000086]</msg>
<status status="PASS" starttime="20201110 08:35:17.132" endtime="20201110 08:35:17.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.127" endtime="20201110 08:35:17.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.137" endtime="20201110 08:35:17.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:17.140" endtime="20201110 08:35:17.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.139" endtime="20201110 08:35:17.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.135" endtime="20201110 08:35:17.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.768" endtime="20201110 08:35:17.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.767" endtime="20201110 08:35:17.161"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.169" endtime="20201110 08:35:17.191"></status>
</kw>
<msg timestamp="20201110 08:35:17.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:17.168" endtime="20201110 08:35:17.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:17.193" endtime="20201110 08:35:17.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.195" endtime="20201110 08:35:17.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.165" endtime="20201110 08:35:17.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.163" endtime="20201110 08:35:17.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.204" endtime="20201110 08:35:17.490"></status>
</kw>
<msg timestamp="20201110 08:35:17.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022857458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022980861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.203" endtime="20201110 08:35:17.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022857458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022980861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.494" endtime="20201110 08:35:17.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.502" endtime="20201110 08:35:17.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.200" endtime="20201110 08:35:17.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.198" endtime="20201110 08:35:17.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.509" level="INFO">${RESULT} = [{'time': 0.022980861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001234030000000011, 'source_diff': 0.0001234030000000011}, {'time': 0.023118944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:17.506" endtime="20201110 08:35:17.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:17.522" level="INFO">${ACCURACY} = {'source_diff': [0.0001234030000000011, 0.00012340199999999815, 0.00012336099999999892, 0.0001230420000000003, 0.0001228619999999979, 0.00012354099999999785, 0.00012304099999999735, 0.0001231940000000...</msg>
<status status="PASS" starttime="20201110 08:35:17.510" endtime="20201110 08:35:17.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.527" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:35:17.526" endtime="20201110 08:35:17.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.529" level="INFO">VALUE: [0.0001234030000000011, 0.00012340199999999815, 0.00012336099999999892, 0.0001230420000000003, 0.0001228619999999979, 0.00012354099999999785, 0.00012304099999999735, 0.00012319400000000008, 0.00012369400000000058, 0.00012369400000000058, 0.00012319499999999955, 0.00012319499999999955, 0.00012370899999999962, 0.00012372199999999972, 0.00012320799999999965, 0.00012341700000000067, 0.00012369400000000058, 0.00012336100000000239, 0.0001235420000000008, 0.00012369500000000005, 0.00012324999999999836, 0.00012354099999999785, 0.0001233190000000002, 0.00012320799999999965, 0.00012302800000000072, 0.00012284699999999885, 0.00012277800000000047, 0.00012336099999999892, 0.00012283399999999875, 0.0001231800000000005, 0.00012355500000000089, 0.00012337499999999849, 0.00012352800000000122, 0.00012301400000000115, 0.00012375000000000233, 0.00012302800000000072, 0.00012302800000000072, 0.00012286099999999842, 0.00012323600000000226, 0.00012352799999999775, 0.0001230420000000003, 0.00012283299999999928, 0.0001232090000000026, 0.00012318099999999998, 0.0001232640000000014, 0.0001228619999999979, 0.00012317999999999704, 0.00012320799999999965, 0.0001228189999999997, 0.00012355600000000036]</msg>
<status status="PASS" starttime="20201110 08:35:17.528" endtime="20201110 08:35:17.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.523" endtime="20201110 08:35:17.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.532" endtime="20201110 08:35:17.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:17.536" endtime="20201110 08:35:17.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.534" endtime="20201110 08:35:17.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.531" endtime="20201110 08:35:17.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.162" endtime="20201110 08:35:17.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.161" endtime="20201110 08:35:17.557"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.565" endtime="20201110 08:35:17.586"></status>
</kw>
<msg timestamp="20201110 08:35:17.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:17.564" endtime="20201110 08:35:17.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:17.588" endtime="20201110 08:35:17.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.590" endtime="20201110 08:35:17.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.561" endtime="20201110 08:35:17.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.559" endtime="20201110 08:35:17.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.599" endtime="20201110 08:35:17.884"></status>
</kw>
<msg timestamp="20201110 08:35:17.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022194861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02231925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:17.598" endtime="20201110 08:35:17.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022194861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02231925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:17.889" endtime="20201110 08:35:17.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.897" endtime="20201110 08:35:17.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.595" endtime="20201110 08:35:17.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.594" endtime="20201110 08:35:17.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.903" level="INFO">${RESULT} = [{'time': 0.02231925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012438899999999906, 'source_diff': 0.00012438899999999906}, {'time': 0.022454278, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:35:17.900" endtime="20201110 08:35:17.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:17.917" level="INFO">${ACCURACY} = {'source_diff': [0.00012438899999999906, 0.00012437499999999949, 0.00012418100000000099, 0.00012437499999999949, 0.00012404099999999835, 0.00012404099999999835, 0.00012404199999999782, 0.0001246939999...</msg>
<status status="PASS" starttime="20201110 08:35:17.904" endtime="20201110 08:35:17.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.922" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:35:17.921" endtime="20201110 08:35:17.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.924" level="INFO">VALUE: [0.00012438899999999906, 0.00012437499999999949, 0.00012418100000000099, 0.00012437499999999949, 0.00012404099999999835, 0.00012404099999999835, 0.00012404199999999782, 0.0001246939999999981, 0.0001241939999999976, 0.00012451399999999918, 0.00012454199999999832, 0.00012455500000000189, 0.000124680000000002, 0.0001244450000000008, 0.00012402799999999825, 0.00012420799999999718, 0.00012420800000000065, 0.0001245420000000018, 0.00012387500000000246, 0.00012386099999999942, 0.00012468100000000149, 0.00012452699999999928, 0.00012476399999999943, 0.00012437500000000296, 0.00012387499999999899, 0.00012407000000000043, 0.00012434700000000035, 0.00012437499999999949, 0.00012469400000000158, 0.00012419400000000108, 0.00012386099999999942, 0.00012470800000000115, 0.00012405600000000086, 0.00012419500000000055, 0.00012390299999999813, 0.00012387499999999899, 0.0001247360000000003, 0.00012436099999999992, 0.00012402699999999878, 0.00012380499999999767, 0.00012419400000000108, 0.00012470799999999768, 0.00012437499999999949, 0.00012437499999999949, 0.00012455500000000189, 0.00012402699999999878, 0.00012383300000000028, 0.00012402799999999825, 0.00012433300000000078, 0.0001241389999999988]</msg>
<status status="PASS" starttime="20201110 08:35:17.923" endtime="20201110 08:35:17.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.918" endtime="20201110 08:35:17.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.931" endtime="20201110 08:35:17.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:17.935" endtime="20201110 08:35:17.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.933" endtime="20201110 08:35:17.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.930" endtime="20201110 08:35:17.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.558" endtime="20201110 08:35:17.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.557" endtime="20201110 08:35:17.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.250" endtime="20201110 08:35:17.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:17.959" endtime="20201110 08:35:17.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.958" endtime="20201110 08:35:17.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.957" endtime="20201110 08:35:17.980"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:38.171" endtime="20201110 08:35:17.980" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:56.890" endtime="20201110 08:35:17.983"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.039" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:35:18.047" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:35:19.196" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:35:18.038" endtime="20201110 08:35:19.196"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.199" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:35:19.197" endtime="20201110 08:35:19.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.036" endtime="20201110 08:35:19.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:19.202" endtime="20201110 08:35:19.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.200" endtime="20201110 08:35:19.388"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.400" endtime="20201110 08:35:19.414"></status>
</kw>
<msg timestamp="20201110 08:35:19.415" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.398" endtime="20201110 08:35:19.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.416" endtime="20201110 08:35:19.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.420" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:35:19.418" endtime="20201110 08:35:19.421"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:19.396" endtime="20201110 08:35:19.421"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:19.394" endtime="20201110 08:35:19.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.393" endtime="20201110 08:35:19.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:35:19.427" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:35:19.426" endtime="20201110 08:35:19.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.423" endtime="20201110 08:35:19.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.392" endtime="20201110 08:35:19.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.391" endtime="20201110 08:35:19.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.429" endtime="20201110 08:35:19.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.390" endtime="20201110 08:35:19.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.432" endtime="20201110 08:35:19.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.388" endtime="20201110 08:35:19.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.035" endtime="20201110 08:35:19.435"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:19.442" endtime="20201110 08:35:19.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.440" endtime="20201110 08:35:19.462"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.475" endtime="20201110 08:35:19.489"></status>
</kw>
<msg timestamp="20201110 08:35:19.490" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.473" endtime="20201110 08:35:19.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.492" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.491" endtime="20201110 08:35:19.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.495" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:35:19.493" endtime="20201110 08:35:19.495"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:19.471" endtime="20201110 08:35:19.496"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:19.468" endtime="20201110 08:35:19.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.467" endtime="20201110 08:35:19.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:35:19.501" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:35:19.500" endtime="20201110 08:35:19.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.498" endtime="20201110 08:35:19.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.466" endtime="20201110 08:35:19.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.466" endtime="20201110 08:35:19.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.502" endtime="20201110 08:35:19.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.464" endtime="20201110 08:35:19.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.462" endtime="20201110 08:35:19.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.439" endtime="20201110 08:35:19.505"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:19.508" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.517" endtime="20201110 08:35:21.610"></status>
</kw>
<msg timestamp="20201110 08:35:21.611" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 394165, 'start-iter': 1, 'wakeups': [404177, 414178, 424178, 434178, 4...</msg>
<status status="PASS" starttime="20201110 08:35:19.516" endtime="20201110 08:35:21.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.613" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 394165, 'start-iter': 1, 'wakeups': [404177, 414178, 424178, 434178, 4...</msg>
<status status="PASS" starttime="20201110 08:35:21.612" endtime="20201110 08:35:21.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.615" endtime="20201110 08:35:21.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.513" endtime="20201110 08:35:21.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.510" endtime="20201110 08:35:21.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:21.620" level="INFO">${RESULT} = {'wakeups': [404177, 414178, 424178, 434178, 444178, 454178, 464178, 474178, 484178, 494178, 504178, 514178, 524178, 534178, 544178, 554178, 564178, 574178, 584178, 594178, 604178, 614178, 624178, 634...</msg>
<status status="PASS" starttime="20201110 08:35:21.618" endtime="20201110 08:35:21.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.624" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:21.623" endtime="20201110 08:35:21.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.626" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:21.626" endtime="20201110 08:35:21.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.621" endtime="20201110 08:35:21.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.631" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:21.630" endtime="20201110 08:35:21.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.633" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:21.632" endtime="20201110 08:35:21.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.628" endtime="20201110 08:35:21.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.638" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:21.637" endtime="20201110 08:35:21.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.640" level="INFO">VALUE: 394165</msg>
<status status="PASS" starttime="20201110 08:35:21.639" endtime="20201110 08:35:21.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.635" endtime="20201110 08:35:21.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.645" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:21.644" endtime="20201110 08:35:21.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.647" level="INFO">VALUE: [404177, 414178, 424178, 434178, 444178, 454178, 464178, 474178, 484178, 494178, 504178, 514178, 524178, 534178, 544178, 554178, 564178, 574178, 584178, 594178, 604178, 614178, 624178, 634178, 644178, 654178, 664178, 674178, 684178, 694178, 704178, 714178, 724178, 734178, 744178, 754178, 764178, 774178, 784178, 794178, 804178, 814178, 824178, 834178, 844178, 854178, 864178, 874178, 884178, 894178, 904178, 914178, 924178, 934178, 944178, 954178, 964178, 974178, 984178, 994178, 1004178, 1014178, 1024178, 1034178, 1044178, 1054178, 1064178, 1074178, 1084178, 1094178, 1104178, 1114178, 1124178, 1134178, 1144178, 1154178, 1164178, 1174178, 1184178, 1194178, 1204178, 1214178, 1224178, 1234178, 1244178, 1254178, 1264178, 1274178, 1284178, 1294178, 1304178, 1314178, 1324178, 1334178, 1344178, 1354178, 1364178, 1374178, 1384178, 1394178]</msg>
<status status="PASS" starttime="20201110 08:35:21.646" endtime="20201110 08:35:21.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.642" endtime="20201110 08:35:21.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.654" endtime="20201110 08:35:21.952"></status>
</kw>
<msg timestamp="20201110 08:35:21.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065972472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075986194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.653" endtime="20201110 08:35:21.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065972472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075986194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.956" endtime="20201110 08:35:21.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.963" endtime="20201110 08:35:21.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.650" endtime="20201110 08:35:21.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.649" endtime="20201110 08:35:21.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:21.990" level="INFO">${RESULT} = {'source_diff': [0, 0.010013722000000003, 0.010002194999999992, 0.010001083000000008, 0.01000122199999999, 0.010001152999999999, 0.010001139000000006, 0.010001153000000013, 0.010001166999999977, 0.010...</msg>
<status status="PASS" starttime="20201110 08:35:21.967" endtime="20201110 08:35:21.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.994" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:21.993" endtime="20201110 08:35:21.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.996" level="INFO">VALUE: 0.065972472</msg>
<status status="PASS" starttime="20201110 08:35:21.996" endtime="20201110 08:35:21.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.991" endtime="20201110 08:35:21.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.002" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:22.001" endtime="20201110 08:35:22.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.004" level="INFO">VALUE: [0.075986194, 0.085988389, 0.095989472, 0.105990694, 0.115991847, 0.125992986, 0.135994139, 0.145995306, 0.155996375, 0.165997583, 0.175998667, 0.185999889, 0.196000986, 0.206002181, 0.216003292, 0.2260045, 0.236005583, 0.246006792, 0.256007889, 0.266009097, 0.276010167, 0.286011389, 0.296012486, 0.306013681, 0.316014778, 0.326015986, 0.336017069, 0.346018306, 0.356019375, 0.366020583, 0.376021764, 0.386022889, 0.396023972, 0.406025222, 0.416026306, 0.426027486, 0.436028597, 0.446029806, 0.456030889, 0.466032097, 0.476033208, 0.486034403, 0.496035569, 0.506036694, 0.516037778, 0.526039042, 0.536040083, 0.546041306, 0.556042403, 0.566043597, 0.576044694, 0.586045903, 0.596046986, 0.606048208, 0.616049306, 0.6260505, 0.636051583, 0.646052819, 0.656053889, 0.666055097, 0.676056208, 0.686057417, 0.696058486, 0.706059708, 0.716060792, 0.726062028, 0.736063139, 0.746064306, 0.756065403, 0.766066611, 0.776067722, 0.786068917, 0.79607, 0.806071222, 0.816072292, 0.826073569, 0.836074597, 0.846075861, 0.856076903, 0.866078111, 0.876079208, 0.886080417, 0.896081514, 0.906082722, 0.916083806, 0.926085014, 0.936086125, 0.946087319, 0.956088417, 0.966089625, 0.97609075, 0.986091917, 0.996093042, 1.006094264, 1.016095306, 1.026096528, 1.036097625, 1.046098903, 1.056099931, 1.066101139] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:22.003" endtime="20201110 08:35:22.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.998" endtime="20201110 08:35:22.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.007" endtime="20201110 08:35:22.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:22.010" endtime="20201110 08:35:22.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.009" endtime="20201110 08:35:22.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.005" endtime="20201110 08:35:22.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.509" endtime="20201110 08:35:22.031"></status>
</kw>
<msg timestamp="20201110 08:35:22.031" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.039" endtime="20201110 08:35:24.154"></status>
</kw>
<msg timestamp="20201110 08:35:24.155" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2916598, 'start-iter': 1, 'wakeups': [2926611, 2936611, 2946611, 29566...</msg>
<status status="PASS" starttime="20201110 08:35:22.038" endtime="20201110 08:35:24.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.158" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2916598, 'start-iter': 1, 'wakeups': [2926611, 2936611, 2946611, 29566...</msg>
<status status="PASS" starttime="20201110 08:35:24.156" endtime="20201110 08:35:24.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.159" endtime="20201110 08:35:24.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.035" endtime="20201110 08:35:24.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.033" endtime="20201110 08:35:24.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.164" level="INFO">${RESULT} = {'wakeups': [2926611, 2936611, 2946611, 2956611, 2966611, 2976611, 2986611, 2996611, 3006611, 3016611, 3026611, 3036611, 3046611, 3056611, 3066611, 3076611, 3086611, 3096611, 3106611, 3116611, 3126611...</msg>
<status status="PASS" starttime="20201110 08:35:24.162" endtime="20201110 08:35:24.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.169" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:24.168" endtime="20201110 08:35:24.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.172" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:24.170" endtime="20201110 08:35:24.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.165" endtime="20201110 08:35:24.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.177" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:24.176" endtime="20201110 08:35:24.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.179" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:24.178" endtime="20201110 08:35:24.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.173" endtime="20201110 08:35:24.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.184" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:24.183" endtime="20201110 08:35:24.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.186" level="INFO">VALUE: 2916598</msg>
<status status="PASS" starttime="20201110 08:35:24.185" endtime="20201110 08:35:24.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.180" endtime="20201110 08:35:24.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.191" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:24.190" endtime="20201110 08:35:24.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.193" level="INFO">VALUE: [2926611, 2936611, 2946611, 2956611, 2966611, 2976611, 2986611, 2996611, 3006611, 3016611, 3026611, 3036611, 3046611, 3056611, 3066611, 3076611, 3086611, 3096611, 3106611, 3116611, 3126611, 3136611, 3146611, 3156611, 3166611, 3176611, 3186611, 3196611, 3206611, 3216611, 3226611, 3236611, 3246611, 3256611, 3266611, 3276611, 3286611, 3296611, 3306611, 3316611, 3326611, 3336611, 3346611, 3356611, 3366611, 3376611, 3386611, 3396611, 3406611, 3416611, 3426611, 3436611, 3446611, 3456611, 3466611, 3476611, 3486611, 3496611, 3506611, 3516611, 3526611, 3536611, 3546611, 3556611, 3566611, 3576611, 3586611, 3596611, 3606611, 3616611, 3626611, 3636611, 3646611, 3656611, 3666611, 3676611, 3686611, 3696611, 3706611, 3716611, 3726611, 3736611, 3746611, 3756611, 3766611, 3776611, 3786611, 3796611, 3806611, 3816611, 3826611, 3836611, 3846611, 3856611, 3866611, 3876611, 3886611, 3896611, 3906611, 3916611]</msg>
<status status="PASS" starttime="20201110 08:35:24.192" endtime="20201110 08:35:24.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.187" endtime="20201110 08:35:24.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.200" endtime="20201110 08:35:24.493"></status>
</kw>
<msg timestamp="20201110 08:35:24.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020006944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030021361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.199" endtime="20201110 08:35:24.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020006944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030021361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.497" endtime="20201110 08:35:24.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.505" endtime="20201110 08:35:24.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.196" endtime="20201110 08:35:24.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.195" endtime="20201110 08:35:24.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.532" level="INFO">${RESULT} = {'source_diff': [0, 0.010014417000000001, 0.010001181000000001, 0.010001083000000001, 0.010001207999999998, 0.010001083999999993, 0.010001208000000011, 0.010001097, 0.01000119499999999, 0.010001083000...</msg>
<status status="PASS" starttime="20201110 08:35:24.508" endtime="20201110 08:35:24.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.537" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:24.536" endtime="20201110 08:35:24.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.539" level="INFO">VALUE: 0.020006944</msg>
<status status="PASS" starttime="20201110 08:35:24.538" endtime="20201110 08:35:24.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.533" endtime="20201110 08:35:24.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.544" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:24.543" endtime="20201110 08:35:24.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.546" level="INFO">VALUE: [0.030021361, 0.040022542, 0.050023625, 0.060024833, 0.070025917, 0.080027125, 0.090028222, 0.100029417, 0.1100305, 0.120031722, 0.130032806, 0.140034028, 0.150035139, 0.160036319, 0.170037431, 0.180038611, 0.190039736, 0.200040903, 0.210042014, 0.220043222, 0.230044333, 0.240045514, 0.250046597, 0.260047806, 0.270048889, 0.280050097, 0.290051194, 0.300052403, 0.3100535, 0.320054694, 0.330055778, 0.340057042, 0.350058083, 0.360059319, 0.370060389, 0.380061597, 0.390062681, 0.400063889, 0.410064986, 0.420066194, 0.430067292, 0.440068486, 0.450069569, 0.460070792, 0.470071875, 0.480073083, 0.490074181, 0.500075389, 0.510076472, 0.520077681, 0.530078778, 0.540079986, 0.550081083, 0.560082278, 0.570083361, 0.580084583, 0.590085681, 0.600086875, 0.610087972, 0.620089194, 0.630090278, 0.640091486, 0.650092583, 0.660093833, 0.670094889, 0.680096069, 0.690097167, 0.700098389, 0.7100995, 0.720100667, 0.730101764, 0.740102972, 0.750104125, 0.760105292, 0.770106361, 0.780107569, 0.790108681, 0.800109889, 0.810110972, 0.820112208, 0.83011325, 0.840114472, 0.850115569, 0.860116764, 0.870117847, 0.880119083, 0.890120153, 0.900121361, 0.910122458, 0.920123708, 0.930124778, 0.940125958, 0.950127042, 0.960128264, 0.970129347, 0.980130556, 0.990131653, 1.000132861, 1.010133944, 1.020135153] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:24.546" endtime="20201110 08:35:24.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.540" endtime="20201110 08:35:24.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.550" endtime="20201110 08:35:24.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:24.553" endtime="20201110 08:35:24.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.551" endtime="20201110 08:35:24.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.548" endtime="20201110 08:35:24.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.032" endtime="20201110 08:35:24.574"></status>
</kw>
<msg timestamp="20201110 08:35:24.574" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.582" endtime="20201110 08:35:26.696"></status>
</kw>
<msg timestamp="20201110 08:35:26.697" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5458531, 'start-iter': 1, 'wakeups': [5468544, 5478544, 5488544, 54985...</msg>
<status status="PASS" starttime="20201110 08:35:24.580" endtime="20201110 08:35:26.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.703" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5458531, 'start-iter': 1, 'wakeups': [5468544, 5478544, 5488544, 54985...</msg>
<status status="PASS" starttime="20201110 08:35:26.699" endtime="20201110 08:35:26.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.705" endtime="20201110 08:35:26.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.578" endtime="20201110 08:35:26.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.576" endtime="20201110 08:35:26.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:26.713" level="INFO">${RESULT} = {'wakeups': [5468544, 5478544, 5488544, 5498544, 5508544, 5518544, 5528544, 5538544, 5548544, 5558544, 5568544, 5578544, 5588544, 5598544, 5608544, 5618544, 5628544, 5638544, 5648544, 5658544, 5668544...</msg>
<status status="PASS" starttime="20201110 08:35:26.711" endtime="20201110 08:35:26.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.717" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:26.716" endtime="20201110 08:35:26.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.720" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:26.719" endtime="20201110 08:35:26.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.714" endtime="20201110 08:35:26.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.725" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:26.724" endtime="20201110 08:35:26.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.727" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:26.726" endtime="20201110 08:35:26.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.721" endtime="20201110 08:35:26.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.732" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:26.731" endtime="20201110 08:35:26.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.734" level="INFO">VALUE: 5458531</msg>
<status status="PASS" starttime="20201110 08:35:26.733" endtime="20201110 08:35:26.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.728" endtime="20201110 08:35:26.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.739" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:26.738" endtime="20201110 08:35:26.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.741" level="INFO">VALUE: [5468544, 5478544, 5488544, 5498544, 5508544, 5518544, 5528544, 5538544, 5548544, 5558544, 5568544, 5578544, 5588544, 5598544, 5608544, 5618544, 5628544, 5638544, 5648544, 5658544, 5668544, 5678544, 5688544, 5698544, 5708544, 5718544, 5728544, 5738544, 5748544, 5758544, 5768544, 5778544, 5788544, 5798544, 5808544, 5818544, 5828544, 5838544, 5848544, 5858544, 5868544, 5878544, 5888544, 5898544, 5908544, 5918544, 5928544, 5938544, 5948544, 5958544, 5968544, 5978544, 5988544, 5998544, 6008544, 6018544, 6028544, 6038544, 6048544, 6058544, 6068544, 6078544, 6088544, 6098544, 6108544, 6118544, 6128544, 6138544, 6148544, 6158544, 6168544, 6178544, 6188544, 6198544, 6208544, 6218544, 6228544, 6238544, 6248544, 6258544, 6268544, 6278544, 6288544, 6298544, 6308544, 6318544, 6328544, 6338544, 6348544, 6358544, 6368544, 6378544, 6388544, 6398544, 6408544, 6418544, 6428544, 6438544, 6448544, 6458544]</msg>
<status status="PASS" starttime="20201110 08:35:26.740" endtime="20201110 08:35:26.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.736" endtime="20201110 08:35:26.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.748" endtime="20201110 08:35:27.039"></status>
</kw>
<msg timestamp="20201110 08:35:27.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019424653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029438694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:26.747" endtime="20201110 08:35:27.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019424653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029438694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.043" endtime="20201110 08:35:27.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.050" endtime="20201110 08:35:27.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.744" endtime="20201110 08:35:27.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.743" endtime="20201110 08:35:27.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.077" level="INFO">${RESULT} = {'source_diff': [0, 0.010014041000000001, 0.010001208999999997, 0.010001097, 0.010001208000000004, 0.010001084, 0.010001207999999998, 0.010001082999999994, 0.010001209000000011, 0.010001097, 0.0100012...</msg>
<status status="PASS" starttime="20201110 08:35:27.054" endtime="20201110 08:35:27.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.081" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:27.080" endtime="20201110 08:35:27.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.083" level="INFO">VALUE: 0.019424653</msg>
<status status="PASS" starttime="20201110 08:35:27.082" endtime="20201110 08:35:27.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.078" endtime="20201110 08:35:27.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.089" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:27.088" endtime="20201110 08:35:27.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.091" level="INFO">VALUE: [0.029438694, 0.039439903, 0.049441, 0.059442208, 0.069443292, 0.0794445, 0.089445583, 0.099446792, 0.109447889, 0.119449167, 0.129450167, 0.139451389, 0.149452458, 0.159453667, 0.169454806, 0.179455986, 0.189457069, 0.199458292, 0.209459347, 0.219460556, 0.229461639, 0.239462861, 0.249463944, 0.259465167, 0.269466236, 0.279467444, 0.289468556, 0.299469806, 0.309470875, 0.319472042, 0.329473125, 0.339474347, 0.349475431, 0.359476639, 0.369477736, 0.379478931, 0.389480014, 0.399481264, 0.409482319, 0.419483597, 0.429484611, 0.439485819, 0.449486903, 0.459488125, 0.469489222, 0.479490417, 0.4894915, 0.499492722, 0.509493806, 0.519495014, 0.529496097, 0.539497306, 0.549498403, 0.559499597, 0.569500694, 0.579501903, 0.589502986, 0.599504194, 0.609505278, 0.6195065, 0.629507583, 0.639508792, 0.649509875, 0.659511097, 0.669512167, 0.679513417, 0.689514486, 0.699515694, 0.709516764, 0.719517972, 0.729519056, 0.739520278, 0.749521361, 0.759522625, 0.769523653, 0.779524875, 0.789525958, 0.799527167, 0.80952825, 0.819529458, 0.829530542, 0.839531778, 0.849532847, 0.859534056, 0.869535139, 0.879536347, 0.889537458, 0.899538653, 0.90953975, 0.919540958, 0.929542028, 0.93954325, 0.949544333, 0.959545542, 0.969546694, 0.979547833, 0.989548958, 0.999550139, 1.009551222, 1.019552444] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:27.090" endtime="20201110 08:35:27.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.085" endtime="20201110 08:35:27.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.094" endtime="20201110 08:35:27.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:27.098" endtime="20201110 08:35:27.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.096" endtime="20201110 08:35:27.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.093" endtime="20201110 08:35:27.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.574" endtime="20201110 08:35:27.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.507" endtime="20201110 08:35:27.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.506" endtime="20201110 08:35:27.119"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:27.121" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.129" endtime="20201110 08:35:29.242"></status>
</kw>
<msg timestamp="20201110 08:35:29.243" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8005717, 'start-iter': 1, 'wakeups': [8015741, 8025741, 8035741, 80457...</msg>
<status status="PASS" starttime="20201110 08:35:27.128" endtime="20201110 08:35:29.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.249" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8005717, 'start-iter': 1, 'wakeups': [8015741, 8025741, 8035741, 80457...</msg>
<status status="PASS" starttime="20201110 08:35:29.245" endtime="20201110 08:35:29.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.251" endtime="20201110 08:35:29.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.125" endtime="20201110 08:35:29.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.123" endtime="20201110 08:35:29.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:29.262" level="INFO">${RESULT} = {'wakeups': [8015741, 8025741, 8035741, 8045741, 8055741, 8065741, 8075741, 8085741, 8095741, 8105741, 8115741, 8125741, 8135741, 8145741, 8155741, 8165741, 8175741, 8185741, 8195741, 8205741, 8215741...</msg>
<status status="PASS" starttime="20201110 08:35:29.258" endtime="20201110 08:35:29.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.268" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:29.267" endtime="20201110 08:35:29.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.270" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:29.269" endtime="20201110 08:35:29.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.264" endtime="20201110 08:35:29.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.275" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:29.274" endtime="20201110 08:35:29.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.278" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:29.276" endtime="20201110 08:35:29.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.271" endtime="20201110 08:35:29.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.284" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:29.283" endtime="20201110 08:35:29.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.286" level="INFO">VALUE: 8005717</msg>
<status status="PASS" starttime="20201110 08:35:29.285" endtime="20201110 08:35:29.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.279" endtime="20201110 08:35:29.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.291" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:29.290" endtime="20201110 08:35:29.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.298" level="INFO">VALUE: [8015741, 8025741, 8035741, 8045741, 8055741, 8065741, 8075741, 8085741, 8095741, 8105741, 8115741, 8125741, 8135741, 8145741, 8155741, 8165741, 8175741, 8185741, 8195741, 8205741, 8215741, 8225741, 8235741, 8245741, 8255741, 8265741, 8275741, 8285741, 8295741, 8305741, 8315741, 8325741, 8335741, 8345741, 8355741, 8365741, 8375741, 8385741, 8395741, 8405741, 8415741, 8425741, 8435741, 8445741, 8455741, 8465741, 8475741, 8485741, 8495741, 8505741, 8515741, 8525741, 8535741, 8545741, 8555741, 8565741, 8575741, 8585741, 8595741, 8605741, 8615741, 8625741, 8635741, 8645741, 8655741, 8665741, 8675741, 8685741, 8695741, 8705741, 8715741, 8725741, 8735741, 8745741, 8755741, 8765741, 8775741, 8785741, 8795741, 8805741, 8815741, 8825741, 8835741, 8845741, 8855741, 8865741, 8875741, 8885741, 8895741, 8905741, 8915741, 8925741, 8935741, 8945741, 8955741, 8965741, 8975741, 8985741, 8995741, 9005741]</msg>
<status status="PASS" starttime="20201110 08:35:29.292" endtime="20201110 08:35:29.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.288" endtime="20201110 08:35:29.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.306" endtime="20201110 08:35:29.595"></status>
</kw>
<msg timestamp="20201110 08:35:29.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032015556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.304" endtime="20201110 08:35:29.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032015556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.599" endtime="20201110 08:35:29.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.606" endtime="20201110 08:35:29.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.301" endtime="20201110 08:35:29.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.300" endtime="20201110 08:35:29.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:29.633" level="INFO">${RESULT} = {'source_diff': [0, 0.010026417, 0.010001221999999997, 0.010001069000000001, 0.010001209000000004, 0.010001082999999994, 0.010001207999999998, 0.010001097, 0.010001209000000011, 0.010001068999999987, ...</msg>
<status status="PASS" starttime="20201110 08:35:29.610" endtime="20201110 08:35:29.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.638" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:29.637" endtime="20201110 08:35:29.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.640" level="INFO">VALUE: 0.021989139</msg>
<status status="PASS" starttime="20201110 08:35:29.639" endtime="20201110 08:35:29.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.634" endtime="20201110 08:35:29.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.646" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:29.645" endtime="20201110 08:35:29.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.648" level="INFO">VALUE: [0.032015556, 0.042016778, 0.052017847, 0.062019056, 0.072020139, 0.082021347, 0.092022444, 0.102023653, 0.112024722, 0.122025986, 0.132027042, 0.14202825, 0.152029319, 0.162030528, 0.172031653, 0.182032889, 0.192033917, 0.202035111, 0.212036194, 0.222037403, 0.2320385, 0.242039722, 0.252040792, 0.262042, 0.272043083, 0.282044306, 0.292045389, 0.302046597, 0.312047722, 0.322048958, 0.332049972, 0.342051181, 0.352052278, 0.362053472, 0.372054569, 0.382055764, 0.392056847, 0.402058097, 0.412059236, 0.422060361, 0.432061444, 0.442062653, 0.452063736, 0.462064944, 0.472066042, 0.482067264, 0.492068361, 0.502069542, 0.512070639, 0.522071875, 0.532072917, 0.542074125, 0.552075208, 0.562076472, 0.572077514, 0.582078722, 0.592079806, 0.602081028, 0.612082097, 0.622083306, 0.632084389, 0.642085611, 0.652086722, 0.662087903, 0.672088986, 0.682090208, 0.692091292, 0.702092514, 0.712093583, 0.722094792, 0.732095875, 0.742097083, 0.752098181, 0.762099375, 0.772100458, 0.782101667, 0.792102736, 0.802103944, 0.812105014, 0.822106222, 0.832107333, 0.842108514, 0.852109583, 0.862110792, 0.872111861, 0.882113083, 0.892114153, 0.902115361, 0.912116431, 0.922117639, 0.932118736, 0.942119972, 0.952121014, 0.962122208, 0.972123292, 0.9821245, 0.992125597, 1.002126778, 1.012127861, 1.022129069] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:29.647" endtime="20201110 08:35:29.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.642" endtime="20201110 08:35:29.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.651" endtime="20201110 08:35:29.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:29.654" endtime="20201110 08:35:29.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.653" endtime="20201110 08:35:29.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.649" endtime="20201110 08:35:29.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.122" endtime="20201110 08:35:29.675"></status>
</kw>
<msg timestamp="20201110 08:35:29.675" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.683" endtime="20201110 08:35:31.791"></status>
</kw>
<msg timestamp="20201110 08:35:31.792" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10559775, 'start-iter': 1, 'wakeups': [10569799, 10579799, 10589799, 1...</msg>
<status status="PASS" starttime="20201110 08:35:29.682" endtime="20201110 08:35:31.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.798" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10559775, 'start-iter': 1, 'wakeups': [10569799, 10579799, 10589799, 1...</msg>
<status status="PASS" starttime="20201110 08:35:31.794" endtime="20201110 08:35:31.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:31.800" endtime="20201110 08:35:31.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.679" endtime="20201110 08:35:31.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.677" endtime="20201110 08:35:31.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:31.811" level="INFO">${RESULT} = {'wakeups': [10569799, 10579799, 10589799, 10599799, 10609799, 10619799, 10629799, 10639799, 10649799, 10659799, 10669799, 10679799, 10689799, 10699799, 10709799, 10719799, 10729799, 10739799, 1074979...</msg>
<status status="PASS" starttime="20201110 08:35:31.807" endtime="20201110 08:35:31.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.820" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:31.818" endtime="20201110 08:35:31.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.824" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:31.822" endtime="20201110 08:35:31.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.813" endtime="20201110 08:35:31.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.834" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:31.832" endtime="20201110 08:35:31.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.838" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:31.836" endtime="20201110 08:35:31.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.827" endtime="20201110 08:35:31.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.843" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:31.842" endtime="20201110 08:35:31.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.845" level="INFO">VALUE: 10559775</msg>
<status status="PASS" starttime="20201110 08:35:31.844" endtime="20201110 08:35:31.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.839" endtime="20201110 08:35:31.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.850" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:31.848" endtime="20201110 08:35:31.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.853" level="INFO">VALUE: [10569799, 10579799, 10589799, 10599799, 10609799, 10619799, 10629799, 10639799, 10649799, 10659799, 10669799, 10679799, 10689799, 10699799, 10709799, 10719799, 10729799, 10739799, 10749799, 10759799, 10769799, 10779799, 10789799, 10799799, 10809799, 10819799, 10829799, 10839799, 10849799, 10859799, 10869799, 10879799, 10889799, 10899799, 10909799, 10919799, 10929799, 10939799, 10949799, 10959799, 10969799, 10979799, 10989799, 10999799, 11009799, 11019799, 11029799, 11039799, 11049799, 11059799, 11069799, 11079799, 11089799, 11099799, 11109799, 11119799, 11129799, 11139799, 11149799, 11159799, 11169799, 11179799, 11189799, 11199799, 11209799, 11219799, 11229799, 11239799, 11249799, 11259799, 11269799, 11279799, 11289799, 11299799, 11309799, 11319799, 11329799, 11339799, 11349799, 11359799, 11369799, 11379799, 11389799, 11399799, 11409799, 11419799, 11429799, 11439799, 11449799, 11459799, 11469799, 11479799, 11489799, 11499799, 11509799, 11519799, 11529799, 11539799, 11549799, 11559799]</msg>
<status status="PASS" starttime="20201110 08:35:31.852" endtime="20201110 08:35:31.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.846" endtime="20201110 08:35:31.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:31.860" endtime="20201110 08:35:32.152"></status>
</kw>
<msg timestamp="20201110 08:35:32.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029641583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:31.859" endtime="20201110 08:35:32.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029641583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:32.156" endtime="20201110 08:35:32.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.163" endtime="20201110 08:35:32.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.856" endtime="20201110 08:35:32.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.854" endtime="20201110 08:35:32.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:32.189" level="INFO">${RESULT} = {'source_diff': [0, 0.010026471999999998, 0.010001152999999999, 0.010001083000000001, 0.010001250000000003, 0.010001069999999994, 0.010001194000000005, 0.01000107, 0.010001250000000003, 0.010001041000...</msg>
<status status="PASS" starttime="20201110 08:35:32.166" endtime="20201110 08:35:32.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.194" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:32.193" endtime="20201110 08:35:32.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.196" level="INFO">VALUE: 0.019615111</msg>
<status status="PASS" starttime="20201110 08:35:32.195" endtime="20201110 08:35:32.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.190" endtime="20201110 08:35:32.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.201" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:32.200" endtime="20201110 08:35:32.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.203" level="INFO">VALUE: [0.029641583, 0.039642736, 0.049643819, 0.059645069, 0.069646139, 0.079647333, 0.089648403, 0.099649653, 0.109650694, 0.119651917, 0.129652972, 0.139654194, 0.149655264, 0.159656486, 0.169657556, 0.179658778, 0.189659847, 0.199661056, 0.209662139, 0.219663361, 0.229664444, 0.239665653, 0.249666722, 0.259667944, 0.269669042, 0.279670292, 0.289671319, 0.299672528, 0.309673611, 0.319674847, 0.329675917, 0.339677125, 0.349678194, 0.359679417, 0.369680486, 0.379681694, 0.389682778, 0.399683986, 0.409685111, 0.419686292, 0.429687375, 0.439688639, 0.449689653, 0.459690875, 0.469691958, 0.479693236, 0.48969425, 0.499695472, 0.509696556, 0.51969775, 0.529698903, 0.539700056, 0.549701167, 0.559702361, 0.569703431, 0.579704639, 0.589705722, 0.599706917, 0.609708, 0.619709208, 0.629710292, 0.639711514, 0.649712583, 0.659713806, 0.669714875, 0.679716097, 0.689717181, 0.699718403, 0.709719472, 0.719720681, 0.729721764, 0.739722972, 0.749724069, 0.759725278, 0.769726361, 0.779727556, 0.789728639, 0.799729847, 0.809730944, 0.819732181, 0.829733222, 0.839734472, 0.849735514, 0.859736722, 0.869737806, 0.879739014, 0.889740097, 0.899741319, 0.909742403, 0.919743625, 0.929744694, 0.939745917, 0.949746986, 0.959748194, 0.969749278, 0.979750486, 0.989751569, 0.999752778, 1.009753861, 1.019755069] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:32.202" endtime="20201110 08:35:32.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.197" endtime="20201110 08:35:32.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.206" endtime="20201110 08:35:32.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:32.210" endtime="20201110 08:35:32.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.208" endtime="20201110 08:35:32.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.205" endtime="20201110 08:35:32.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.676" endtime="20201110 08:35:32.231"></status>
</kw>
<msg timestamp="20201110 08:35:32.231" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.239" endtime="20201110 08:35:34.347"></status>
</kw>
<msg timestamp="20201110 08:35:34.348" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13115583, 'start-iter': 1, 'wakeups': [13125608, 13135607, 13145607, 1...</msg>
<status status="PASS" starttime="20201110 08:35:32.238" endtime="20201110 08:35:34.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.358" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13115583, 'start-iter': 1, 'wakeups': [13125608, 13135607, 13145607, 1...</msg>
<status status="PASS" starttime="20201110 08:35:34.354" endtime="20201110 08:35:34.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.360" endtime="20201110 08:35:34.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.235" endtime="20201110 08:35:34.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.233" endtime="20201110 08:35:34.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:34.371" level="INFO">${RESULT} = {'wakeups': [13125608, 13135607, 13145607, 13155607, 13165607, 13175607, 13185607, 13195607, 13205607, 13215607, 13225607, 13235607, 13245607, 13255607, 13265607, 13275607, 13285607, 13295607, 1330560...</msg>
<status status="PASS" starttime="20201110 08:35:34.367" endtime="20201110 08:35:34.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.380" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:34.378" endtime="20201110 08:35:34.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.385" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:34.382" endtime="20201110 08:35:34.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.373" endtime="20201110 08:35:34.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.395" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:34.393" endtime="20201110 08:35:34.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.400" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:34.398" endtime="20201110 08:35:34.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.388" endtime="20201110 08:35:34.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.410" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:34.408" endtime="20201110 08:35:34.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.414" level="INFO">VALUE: 13115583</msg>
<status status="PASS" starttime="20201110 08:35:34.413" endtime="20201110 08:35:34.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.403" endtime="20201110 08:35:34.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.419" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:34.418" endtime="20201110 08:35:34.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.422" level="INFO">VALUE: [13125608, 13135607, 13145607, 13155607, 13165607, 13175607, 13185607, 13195607, 13205607, 13215607, 13225607, 13235607, 13245607, 13255607, 13265607, 13275607, 13285607, 13295607, 13305607, 13315607, 13325607, 13335607, 13345607, 13355607, 13365607, 13375607, 13385607, 13395607, 13405607, 13415607, 13425607, 13435607, 13445607, 13455607, 13465607, 13475607, 13485607, 13495607, 13505607, 13515607, 13525607, 13535607, 13545607, 13555607, 13565607, 13575607, 13585607, 13595607, 13605607, 13615607, 13625607, 13635607, 13645607, 13655607, 13665607, 13675607, 13685607, 13695607, 13705607, 13715607, 13725607, 13735607, 13745607, 13755607, 13765607, 13775607, 13785607, 13795607, 13805607, 13815607, 13825607, 13835607, 13845607, 13855607, 13865607, 13875607, 13885607, 13895607, 13905607, 13915607, 13925607, 13935607, 13945607, 13955607, 13965607, 13975607, 13985607, 13995607, 14005607, 14015607, 14025607, 14035607, 14045607, 14055607, 14065607, 14075607, 14085607, 14095607, 14105607, 14115607]</msg>
<status status="PASS" starttime="20201110 08:35:34.420" endtime="20201110 08:35:34.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.416" endtime="20201110 08:35:34.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.430" endtime="20201110 08:35:34.721"></status>
</kw>
<msg timestamp="20201110 08:35:34.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019205472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029232222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:34.427" endtime="20201110 08:35:34.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019205472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029232222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:34.725" endtime="20201110 08:35:34.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.732" endtime="20201110 08:35:34.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.425" endtime="20201110 08:35:34.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.423" endtime="20201110 08:35:34.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:34.759" level="INFO">${RESULT} = {'source_diff': [0, 0.010026749999999997, 0.010000195, 0.010001083000000001, 0.010001250000000003, 0.010001069000000001, 0.010001208999999997, 0.010001054999999995, 0.010001209000000011, 0.01000109699...</msg>
<status status="PASS" starttime="20201110 08:35:34.736" endtime="20201110 08:35:34.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.764" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:34.763" endtime="20201110 08:35:34.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.766" level="INFO">VALUE: 0.019205472</msg>
<status status="PASS" starttime="20201110 08:35:34.765" endtime="20201110 08:35:34.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.760" endtime="20201110 08:35:34.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.771" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:34.770" endtime="20201110 08:35:34.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.773" level="INFO">VALUE: [0.029232222, 0.039232417, 0.0492335, 0.05923475, 0.069235819, 0.079237028, 0.089238083, 0.099239292, 0.109240389, 0.119241597, 0.129242653, 0.139243861, 0.149244958, 0.159246153, 0.169247236, 0.179248444, 0.189249528, 0.199250764, 0.209251847, 0.219253028, 0.229254125, 0.239255319, 0.249256403, 0.259257611, 0.269258694, 0.279259944, 0.289261014, 0.29926225, 0.309263278, 0.3192645, 0.329265569, 0.339266792, 0.349267861, 0.359269069, 0.369270153, 0.379271375, 0.389272444, 0.399273667, 0.40927475, 0.419276, 0.429277028, 0.43927825, 0.449279319, 0.459280556, 0.469281694, 0.479282819, 0.489283903, 0.499285139, 0.509286208, 0.519287403, 0.529288486, 0.539289694, 0.549290778, 0.559291986, 0.569293069, 0.579294278, 0.589295361, 0.599296569, 0.609297667, 0.619298875, 0.629299958, 0.639301167, 0.649302236, 0.659303458, 0.669304528, 0.679305792, 0.689306819, 0.699308028, 0.709309111, 0.719310333, 0.729311472, 0.739312611, 0.749313694, 0.759314903, 0.769316014, 0.779317194, 0.789318278, 0.7993195, 0.809320583, 0.819321792, 0.829322875, 0.839324069, 0.849325167, 0.859326361, 0.869327444, 0.879328667, 0.889329736, 0.899330944, 0.909332028, 0.91933325, 0.929334319, 0.939335542, 0.949336611, 0.959337819, 0.969338903, 0.979340111, 0.989341222, 0.999342417, 1.0093435, 1.019344694] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:34.772" endtime="20201110 08:35:34.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.767" endtime="20201110 08:35:34.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.776" endtime="20201110 08:35:34.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:34.780" endtime="20201110 08:35:34.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.778" endtime="20201110 08:35:34.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.775" endtime="20201110 08:35:34.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.232" endtime="20201110 08:35:34.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.120" endtime="20201110 08:35:34.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.119" endtime="20201110 08:35:34.801"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:34.803" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.812" endtime="20201110 08:35:36.919"></status>
</kw>
<msg timestamp="20201110 08:35:36.920" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15688647, 'start-iter': 1, 'wakeups': [15698687, 15708686, 15718686, 1...</msg>
<status status="PASS" starttime="20201110 08:35:34.810" endtime="20201110 08:35:36.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.927" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15688647, 'start-iter': 1, 'wakeups': [15698687, 15708686, 15718686, 1...</msg>
<status status="PASS" starttime="20201110 08:35:36.923" endtime="20201110 08:35:36.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.929" endtime="20201110 08:35:36.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.807" endtime="20201110 08:35:36.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.805" endtime="20201110 08:35:36.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:36.940" level="INFO">${RESULT} = {'wakeups': [15698687, 15708686, 15718686, 15728686, 15738686, 15748686, 15758686, 15768686, 15778686, 15788686, 15798686, 15808686, 15818686, 15828686, 15838686, 15848686, 15858686, 15868686, 1587868...</msg>
<status status="PASS" starttime="20201110 08:35:36.936" endtime="20201110 08:35:36.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.949" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:36.947" endtime="20201110 08:35:36.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.953" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:36.951" endtime="20201110 08:35:36.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.942" endtime="20201110 08:35:36.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.963" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:36.961" endtime="20201110 08:35:36.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.967" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:36.965" endtime="20201110 08:35:36.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.956" endtime="20201110 08:35:36.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.977" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:36.975" endtime="20201110 08:35:36.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.982" level="INFO">VALUE: 15688647</msg>
<status status="PASS" starttime="20201110 08:35:36.980" endtime="20201110 08:35:36.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.970" endtime="20201110 08:35:36.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.992" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:36.990" endtime="20201110 08:35:36.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.996" level="INFO">VALUE: [15698687, 15708686, 15718686, 15728686, 15738686, 15748686, 15758686, 15768686, 15778686, 15788686, 15798686, 15808686, 15818686, 15828686, 15838686, 15848686, 15858686, 15868686, 15878686, 15888686, 15898686, 15908686, 15918686, 15928686, 15938686, 15948686, 15958686, 15968686, 15978686, 15988686, 15998686, 16008686, 16018686, 16028686, 16038686, 16048686, 16058686, 16068686, 16078686, 16088686, 16098686, 16108686, 16118686, 16128686, 16138686, 16148686, 16158686, 16168686, 16178686, 16188686, 16198686, 16208686, 16218686, 16228686, 16238686, 16248686, 16258686, 16268686, 16278686, 16288686, 16298686, 16308686, 16318686, 16328686, 16338686, 16348686, 16358686, 16368686, 16378686, 16388686, 16398686, 16408686, 16418686, 16428686, 16438686, 16448686, 16458686, 16468686, 16478686, 16488686, 16498686, 16508686, 16518686, 16528686, 16538686, 16548686, 16558686, 16568686, 16578686, 16588686, 16598686, 16608686, 16618686, 16628686, 16638686, 16648686, 16658686, 16668686, 16678686, 16688686]</msg>
<status status="PASS" starttime="20201110 08:35:36.994" endtime="20201110 08:35:36.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.985" endtime="20201110 08:35:36.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.011" endtime="20201110 08:35:37.308"></status>
</kw>
<msg timestamp="20201110 08:35:37.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022837667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032879292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:37.008" endtime="20201110 08:35:37.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022837667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032879292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:37.312" endtime="20201110 08:35:37.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.320" endtime="20201110 08:35:37.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.003" endtime="20201110 08:35:37.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.999" endtime="20201110 08:35:37.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:37.346" level="INFO">${RESULT} = {'source_diff': [0, 0.010041624999999998, 0.010000055, 0.010001056000000001, 0.010001208000000004, 0.010001082999999994, 0.010001208999999997, 0.010001097, 0.010001180999999998, 0.010001083000000008, ...</msg>
<status status="PASS" starttime="20201110 08:35:37.323" endtime="20201110 08:35:37.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.351" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:37.350" endtime="20201110 08:35:37.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.353" level="INFO">VALUE: 0.022837667</msg>
<status status="PASS" starttime="20201110 08:35:37.352" endtime="20201110 08:35:37.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.348" endtime="20201110 08:35:37.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.359" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:37.358" endtime="20201110 08:35:37.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.361" level="INFO">VALUE: [0.032879292, 0.042879347, 0.052880403, 0.062881611, 0.072882694, 0.082883903, 0.092885, 0.102886181, 0.112887264, 0.1228885, 0.132889556, 0.142890764, 0.152891847, 0.162893056, 0.172894153, 0.182895333, 0.192896417, 0.202897625, 0.212898722, 0.222899931, 0.232901, 0.242902208, 0.252903306, 0.262904514, 0.272905583, 0.282906806, 0.292907875, 0.302909069, 0.312910167, 0.322911375, 0.332912444, 0.342913667, 0.352914736, 0.362915944, 0.372917042, 0.382918236, 0.392919319, 0.402920528, 0.412921611, 0.422922819, 0.432923903, 0.442925111, 0.452926181, 0.462927389, 0.472928472, 0.482929681, 0.492930764, 0.502931972, 0.512933056, 0.522934264, 0.532935347, 0.542936556, 0.552937653, 0.562938861, 0.572939931, 0.582941139, 0.592942222, 0.602943431, 0.6129445, 0.622945722, 0.632946792, 0.642948014, 0.652949125, 0.662950306, 0.672951375, 0.682952597, 0.692953667, 0.702954875, 0.712956028, 0.722957167, 0.732958278, 0.742959458, 0.752960528, 0.762961792, 0.772962889, 0.782964028, 0.792965111, 0.802966319, 0.812967403, 0.822968611, 0.83296975, 0.842970903, 0.852971986, 0.862973194, 0.872974278, 0.882975542, 0.892976569, 0.902977778, 0.912978861, 0.922980069, 0.932981139, 0.942982361, 0.952983431, 0.962984667, 0.972985736, 0.982986931, 0.992988014, 1.002989236, 1.012990306, 1.022991556] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:37.360" endtime="20201110 08:35:37.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.355" endtime="20201110 08:35:37.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.364" endtime="20201110 08:35:37.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:37.367" endtime="20201110 08:35:37.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.366" endtime="20201110 08:35:37.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.362" endtime="20201110 08:35:37.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.804" endtime="20201110 08:35:37.388"></status>
</kw>
<msg timestamp="20201110 08:35:37.388" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.396" endtime="20201110 08:35:39.503"></status>
</kw>
<msg timestamp="20201110 08:35:39.504" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18272198, 'start-iter': 1, 'wakeups': [18282238, 18292237, 18302237, 1...</msg>
<status status="PASS" starttime="20201110 08:35:37.394" endtime="20201110 08:35:39.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.510" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18272198, 'start-iter': 1, 'wakeups': [18282238, 18292237, 18302237, 1...</msg>
<status status="PASS" starttime="20201110 08:35:39.506" endtime="20201110 08:35:39.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:39.512" endtime="20201110 08:35:39.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.392" endtime="20201110 08:35:39.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.390" endtime="20201110 08:35:39.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:39.524" level="INFO">${RESULT} = {'wakeups': [18282238, 18292237, 18302237, 18312237, 18322237, 18332237, 18342237, 18352237, 18362237, 18372237, 18382237, 18392237, 18402237, 18412237, 18422237, 18432237, 18442237, 18452237, 1846223...</msg>
<status status="PASS" starttime="20201110 08:35:39.520" endtime="20201110 08:35:39.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.535" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:39.531" endtime="20201110 08:35:39.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.539" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:39.537" endtime="20201110 08:35:39.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.526" endtime="20201110 08:35:39.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.554" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:39.552" endtime="20201110 08:35:39.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.558" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:39.556" endtime="20201110 08:35:39.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.547" endtime="20201110 08:35:39.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.568" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:39.566" endtime="20201110 08:35:39.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.572" level="INFO">VALUE: 18272198</msg>
<status status="PASS" starttime="20201110 08:35:39.570" endtime="20201110 08:35:39.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.561" endtime="20201110 08:35:39.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.582" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:39.580" endtime="20201110 08:35:39.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.587" level="INFO">VALUE: [18282238, 18292237, 18302237, 18312237, 18322237, 18332237, 18342237, 18352237, 18362237, 18372237, 18382237, 18392237, 18402237, 18412237, 18422237, 18432237, 18442237, 18452237, 18462237, 18472237, 18482237, 18492237, 18502237, 18512237, 18522237, 18532237, 18542237, 18552237, 18562237, 18572237, 18582237, 18592237, 18602237, 18612237, 18622237, 18632237, 18642237, 18652237, 18662237, 18672237, 18682237, 18692237, 18702237, 18712237, 18722237, 18732237, 18742237, 18752237, 18762237, 18772237, 18782237, 18792237, 18802237, 18812237, 18822237, 18832237, 18842237, 18852237, 18862237, 18872237, 18882237, 18892237, 18902237, 18912237, 18922237, 18932237, 18942237, 18952237, 18962237, 18972237, 18982237, 18992237, 19002237, 19012237, 19022237, 19032237, 19042237, 19052237, 19062237, 19072237, 19082237, 19092237, 19102237, 19112237, 19122237, 19132237, 19142237, 19152237, 19162237, 19172237, 19182237, 19192237, 19202237, 19212237, 19222237, 19232237, 19242237, 19252237, 19262237, 19272237]</msg>
<status status="PASS" starttime="20201110 08:35:39.585" endtime="20201110 08:35:39.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.575" endtime="20201110 08:35:39.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:39.602" endtime="20201110 08:35:39.894"></status>
</kw>
<msg timestamp="20201110 08:35:39.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019194417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029236375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:39.599" endtime="20201110 08:35:39.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019194417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029236375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:39.898" endtime="20201110 08:35:39.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:39.905" endtime="20201110 08:35:39.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.594" endtime="20201110 08:35:39.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.590" endtime="20201110 08:35:39.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:39.933" level="INFO">${RESULT} = {'source_diff': [0, 0.010041958, 0.010000056000000004, 0.010001068999999994, 0.010001222000000004, 0.010001056000000001, 0.010001207999999998, 0.010001097, 0.010001223000000004, 0.010001054999999995, ...</msg>
<status status="PASS" starttime="20201110 08:35:39.909" endtime="20201110 08:35:39.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.937" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:39.936" endtime="20201110 08:35:39.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.939" level="INFO">VALUE: 0.019194417</msg>
<status status="PASS" starttime="20201110 08:35:39.938" endtime="20201110 08:35:39.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.934" endtime="20201110 08:35:39.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.945" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:39.943" endtime="20201110 08:35:39.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.947" level="INFO">VALUE: [0.029236375, 0.039236431, 0.0492375, 0.059238722, 0.069239778, 0.079240986, 0.089242083, 0.099243306, 0.109244361, 0.119245569, 0.129246653, 0.139247861, 0.149248917, 0.159250125, 0.169251222, 0.179252417, 0.1892535, 0.199254694, 0.209255792, 0.219257, 0.229258083, 0.239259278, 0.249260389, 0.259261556, 0.269262653, 0.279263861, 0.289264944, 0.299266139, 0.309267208, 0.319268417, 0.3292695, 0.339270722, 0.349271875, 0.359273, 0.369274069, 0.379275278, 0.389276361, 0.399277569, 0.409278681, 0.419279861, 0.429280958, 0.439282181, 0.449283222, 0.459284431, 0.469285514, 0.479286722, 0.489287806, 0.499289014, 0.509290083, 0.519291306, 0.529292375, 0.539293583, 0.549294667, 0.559295875, 0.569296958, 0.579298153, 0.589299236, 0.599300444, 0.609301528, 0.619302736, 0.629303819, 0.639305028, 0.649306097, 0.659307306, 0.669308389, 0.679309611, 0.689310681, 0.699311889, 0.709312958, 0.719314181, 0.72931525, 0.739316458, 0.749317556, 0.759318764, 0.769319833, 0.779321028, 0.789322111, 0.799323333, 0.809324417, 0.819325611, 0.829326708, 0.839327903, 0.849329, 0.859330194, 0.869331264, 0.879332528, 0.889333569, 0.899334792, 0.909335833, 0.919337042, 0.929338139, 0.939339347, 0.949340417, 0.959341667, 0.969342778, 0.979343917, 0.989345069, 0.999346194, 1.009347292, 1.019348486] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:39.946" endtime="20201110 08:35:39.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.940" endtime="20201110 08:35:39.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:39.950" endtime="20201110 08:35:39.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:39.953" endtime="20201110 08:35:39.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.952" endtime="20201110 08:35:39.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.948" endtime="20201110 08:35:39.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.389" endtime="20201110 08:35:39.974"></status>
</kw>
<msg timestamp="20201110 08:35:39.974" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:39.982" endtime="20201110 08:35:42.090"></status>
</kw>
<msg timestamp="20201110 08:35:42.091" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20858383, 'start-iter': 1, 'wakeups': [20868423, 20878422, 20888422, 2...</msg>
<status status="PASS" starttime="20201110 08:35:39.981" endtime="20201110 08:35:42.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.097" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20858383, 'start-iter': 1, 'wakeups': [20868423, 20878422, 20888422, 2...</msg>
<status status="PASS" starttime="20201110 08:35:42.093" endtime="20201110 08:35:42.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.099" endtime="20201110 08:35:42.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.978" endtime="20201110 08:35:42.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.976" endtime="20201110 08:35:42.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:42.110" level="INFO">${RESULT} = {'wakeups': [20868423, 20878422, 20888422, 20898422, 20908422, 20918422, 20928422, 20938422, 20948422, 20958422, 20968422, 20978422, 20988422, 20998422, 21008422, 21018422, 21028422, 21038422, 2104842...</msg>
<status status="PASS" starttime="20201110 08:35:42.106" endtime="20201110 08:35:42.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.118" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:42.116" endtime="20201110 08:35:42.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.122" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:42.120" endtime="20201110 08:35:42.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.112" endtime="20201110 08:35:42.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.132" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:42.130" endtime="20201110 08:35:42.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.137" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:42.135" endtime="20201110 08:35:42.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.125" endtime="20201110 08:35:42.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.149" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:42.147" endtime="20201110 08:35:42.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.154" level="INFO">VALUE: 20858383</msg>
<status status="PASS" starttime="20201110 08:35:42.152" endtime="20201110 08:35:42.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.140" endtime="20201110 08:35:42.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.164" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:42.162" endtime="20201110 08:35:42.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.168" level="INFO">VALUE: [20868423, 20878422, 20888422, 20898422, 20908422, 20918422, 20928422, 20938422, 20948422, 20958422, 20968422, 20978422, 20988422, 20998422, 21008422, 21018422, 21028422, 21038422, 21048422, 21058422, 21068422, 21078422, 21088422, 21098422, 21108422, 21118422, 21128422, 21138422, 21148422, 21158422, 21168422, 21178422, 21188422, 21198422, 21208422, 21218422, 21228422, 21238422, 21248422, 21258422, 21268422, 21278422, 21288422, 21298422, 21308422, 21318422, 21328422, 21338422, 21348422, 21358422, 21368422, 21378422, 21388422, 21398422, 21408422, 21418422, 21428422, 21438422, 21448422, 21458422, 21468422, 21478422, 21488422, 21498422, 21508422, 21518422, 21528422, 21538422, 21548422, 21558422, 21568422, 21578422, 21588422, 21598422, 21608422, 21618422, 21628422, 21638422, 21648422, 21658422, 21668422, 21678422, 21688422, 21698422, 21708422, 21718422, 21728422, 21738422, 21748422, 21758422, 21768422, 21778422, 21788422, 21798422, 21808422, 21818422, 21828422, 21838422, 21848422, 21858422]</msg>
<status status="PASS" starttime="20201110 08:35:42.166" endtime="20201110 08:35:42.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.157" endtime="20201110 08:35:42.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.176" endtime="20201110 08:35:42.467"></status>
</kw>
<msg timestamp="20201110 08:35:42.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019132167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029173833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:42.175" endtime="20201110 08:35:42.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019132167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029173833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:42.470" endtime="20201110 08:35:42.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.478" endtime="20201110 08:35:42.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.172" endtime="20201110 08:35:42.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.171" endtime="20201110 08:35:42.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:42.504" level="INFO">${RESULT} = {'source_diff': [0, 0.010041666000000001, 0.009999985999999999, 0.010001084, 0.010001208000000004, 0.010001082999999994, 0.010001250000000003, 0.010001027999999995, 0.010001195000000004, 0.01000108299...</msg>
<status status="PASS" starttime="20201110 08:35:42.481" endtime="20201110 08:35:42.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.509" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:42.508" endtime="20201110 08:35:42.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.511" level="INFO">VALUE: 0.019132167</msg>
<status status="PASS" starttime="20201110 08:35:42.510" endtime="20201110 08:35:42.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.505" endtime="20201110 08:35:42.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.517" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:42.515" endtime="20201110 08:35:42.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.519" level="INFO">VALUE: [0.029173833, 0.039173819, 0.049174903, 0.059176111, 0.069177194, 0.079178444, 0.089179472, 0.099180667, 0.10918175, 0.119182972, 0.129184028, 0.13918525, 0.149186319, 0.159187528, 0.169188597, 0.179189806, 0.189190903, 0.199192097, 0.209193181, 0.219194389, 0.229195458, 0.239196653, 0.249197736, 0.259198944, 0.269200042, 0.279201236, 0.289202319, 0.299203514, 0.309204625, 0.319205819, 0.329206889, 0.339208083, 0.349209181, 0.359210375, 0.369211458, 0.379212653, 0.38921375, 0.399214944, 0.409216014, 0.41921725, 0.429218319, 0.439219514, 0.449220611, 0.459221833, 0.469222889, 0.479224125, 0.489225167, 0.499226417, 0.509227444, 0.519228653, 0.529229764, 0.539230944, 0.549232028, 0.559233222, 0.569234306, 0.579235514, 0.589236625, 0.599237792, 0.609238889, 0.619240083, 0.629241167, 0.639242361, 0.649243444, 0.659244681, 0.66924575, 0.679246958, 0.689248028, 0.699249236, 0.709250319, 0.719251528, 0.729252597, 0.739253792, 0.749254889, 0.759256083, 0.769257167, 0.779258361, 0.789259458, 0.799260653, 0.809261806, 0.819262931, 0.829264014, 0.839265222, 0.849266319, 0.859267514, 0.869268583, 0.879269792, 0.889270875, 0.899272083, 0.909273153, 0.919274361, 0.929275444, 0.939276681, 0.949277736, 0.959278944, 0.969280014, 0.979281236, 0.989282319, 0.999283514, 1.009284583, 1.019285792] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:42.518" endtime="20201110 08:35:42.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.512" endtime="20201110 08:35:42.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.522" endtime="20201110 08:35:42.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:42.526" endtime="20201110 08:35:42.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.524" endtime="20201110 08:35:42.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.521" endtime="20201110 08:35:42.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.975" endtime="20201110 08:35:42.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.802" endtime="20201110 08:35:42.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.801" endtime="20201110 08:35:42.547"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:42.549" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.557" endtime="20201110 08:35:44.665"></status>
</kw>
<msg timestamp="20201110 08:35:44.666" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23433441, 'start-iter': 1, 'wakeups': [23443497, 23453497, 23463497, 2...</msg>
<status status="PASS" starttime="20201110 08:35:42.556" endtime="20201110 08:35:44.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.672" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23433441, 'start-iter': 1, 'wakeups': [23443497, 23453497, 23463497, 2...</msg>
<status status="PASS" starttime="20201110 08:35:44.668" endtime="20201110 08:35:44.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.674" endtime="20201110 08:35:44.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.553" endtime="20201110 08:35:44.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.551" endtime="20201110 08:35:44.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:44.685" level="INFO">${RESULT} = {'wakeups': [23443497, 23453497, 23463497, 23473497, 23483497, 23493497, 23503497, 23513497, 23523497, 23533497, 23543497, 23553497, 23563497, 23573497, 23583497, 23593497, 23603497, 23613497, 2362349...</msg>
<status status="PASS" starttime="20201110 08:35:44.681" endtime="20201110 08:35:44.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.693" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:44.691" endtime="20201110 08:35:44.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.698" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:44.696" endtime="20201110 08:35:44.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.687" endtime="20201110 08:35:44.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.708" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:44.706" endtime="20201110 08:35:44.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.712" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:44.710" endtime="20201110 08:35:44.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.701" endtime="20201110 08:35:44.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.722" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:44.720" endtime="20201110 08:35:44.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.727" level="INFO">VALUE: 23433441</msg>
<status status="PASS" starttime="20201110 08:35:44.725" endtime="20201110 08:35:44.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.715" endtime="20201110 08:35:44.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.737" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:44.735" endtime="20201110 08:35:44.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.742" level="INFO">VALUE: [23443497, 23453497, 23463497, 23473497, 23483497, 23493497, 23503497, 23513497, 23523497, 23533497, 23543497, 23553497, 23563497, 23573497, 23583497, 23593497, 23603497, 23613497, 23623497, 23633497, 23643497, 23653497, 23663497, 23673497, 23683497, 23693497, 23703497, 23713497, 23723497, 23733497, 23743497, 23753497, 23763497, 23773497, 23783497, 23793497, 23803497, 23813497, 23823497, 23833497, 23843497, 23853497, 23863497, 23873497, 23883497, 23893497, 23903497, 23913497, 23923497, 23933497, 23943497, 23953497, 23963497, 23973497, 23983497, 23993497, 24003497, 24013497, 24023497, 24033497, 24043497, 24053497, 24063497, 24073497, 24083497, 24093497, 24103497, 24113497, 24123497, 24133497, 24143497, 24153497, 24163497, 24173497, 24183497, 24193497, 24203497, 24213497, 24223497, 24233497, 24243497, 24253497, 24263497, 24273497, 24283497, 24293497, 24303497, 24313497, 24323497, 24333497, 24343497, 24353497, 24363497, 24373497, 24383497, 24393497, 24403497, 24413497, 24423497, 24433497]</msg>
<status status="PASS" starttime="20201110 08:35:44.739" endtime="20201110 08:35:44.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.730" endtime="20201110 08:35:44.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.751" endtime="20201110 08:35:45.044"></status>
</kw>
<msg timestamp="20201110 08:35:45.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031854986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:44.750" endtime="20201110 08:35:45.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031854986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.048" endtime="20201110 08:35:45.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.055" endtime="20201110 08:35:45.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.747" endtime="20201110 08:35:45.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.745" endtime="20201110 08:35:45.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:45.082" level="INFO">${RESULT} = {'source_diff': [0, 0.010058305000000003, 0.010000707999999997, 0.010001084, 0.010001193999999998, 0.01000107, 0.010001207999999998, 0.010001097, 0.010001222000000004, 0.010001042000000002, 0.01000120...</msg>
<status status="PASS" starttime="20201110 08:35:45.059" endtime="20201110 08:35:45.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.087" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:45.086" endtime="20201110 08:35:45.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.089" level="INFO">VALUE: 0.021796681</msg>
<status status="PASS" starttime="20201110 08:35:45.088" endtime="20201110 08:35:45.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.083" endtime="20201110 08:35:45.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.094" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:45.093" endtime="20201110 08:35:45.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.096" level="INFO">VALUE: [0.031854986, 0.041855694, 0.051856778, 0.061857972, 0.071859042, 0.08186025, 0.091861347, 0.101862569, 0.111863611, 0.121864819, 0.131865889, 0.141867097, 0.151868167, 0.161869417, 0.171870458, 0.181871681, 0.191872736, 0.201873958, 0.211875069, 0.221876222, 0.231877319, 0.241878514, 0.251879583, 0.261880806, 0.271881889, 0.281883083, 0.291884167, 0.301885375, 0.311886444, 0.321887639, 0.331888722, 0.341889931, 0.351891014, 0.361892208, 0.371893306, 0.3818945, 0.391895569, 0.401896778, 0.411897875, 0.421899083, 0.431900139, 0.441901403, 0.451902444, 0.461903653, 0.471904708, 0.481905917, 0.491907, 0.501908208, 0.511909278, 0.521910486, 0.531911583, 0.541912778, 0.551913861, 0.561915056, 0.571916139, 0.581917347, 0.591918417, 0.601919625, 0.611920694, 0.621921903, 0.631923, 0.641924194, 0.651925319, 0.661926486, 0.671927569, 0.681928764, 0.691929847, 0.701931056, 0.711932139, 0.721933333, 0.731934417, 0.741935611, 0.751936694, 0.761937903, 0.771938986, 0.781940236, 0.791941292, 0.801942472, 0.811943542, 0.82194475, 0.831945833, 0.841947042, 0.851948111, 0.861949319, 0.871950403, 0.881951653, 0.891952694, 0.901953903, 0.911954958, 0.921956167, 0.93195725, 0.941958472, 0.951959528, 0.961960736, 0.971961833, 0.981963028, 0.991964097, 1.001965306, 1.011966389, 1.021967597] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:45.095" endtime="20201110 08:35:45.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.090" endtime="20201110 08:35:45.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.099" endtime="20201110 08:35:45.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:45.102" endtime="20201110 08:35:45.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.101" endtime="20201110 08:35:45.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.097" endtime="20201110 08:35:45.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.550" endtime="20201110 08:35:45.124"></status>
</kw>
<msg timestamp="20201110 08:35:45.124" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.132" endtime="20201110 08:35:47.240"></status>
</kw>
<msg timestamp="20201110 08:35:47.241" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26008758, 'start-iter': 1, 'wakeups': [26018815, 26028814, 26038814, 2...</msg>
<status status="PASS" starttime="20201110 08:35:45.131" endtime="20201110 08:35:47.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.247" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26008758, 'start-iter': 1, 'wakeups': [26018815, 26028814, 26038814, 2...</msg>
<status status="PASS" starttime="20201110 08:35:47.243" endtime="20201110 08:35:47.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.249" endtime="20201110 08:35:47.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.128" endtime="20201110 08:35:47.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.126" endtime="20201110 08:35:47.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:47.260" level="INFO">${RESULT} = {'wakeups': [26018815, 26028814, 26038814, 26048814, 26058814, 26068814, 26078814, 26088814, 26098814, 26108814, 26118814, 26128814, 26138814, 26148814, 26158814, 26168814, 26178814, 26188814, 2619881...</msg>
<status status="PASS" starttime="20201110 08:35:47.256" endtime="20201110 08:35:47.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.268" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:47.266" endtime="20201110 08:35:47.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.273" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:47.271" endtime="20201110 08:35:47.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.262" endtime="20201110 08:35:47.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.283" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:47.281" endtime="20201110 08:35:47.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.287" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:47.285" endtime="20201110 08:35:47.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.276" endtime="20201110 08:35:47.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.297" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:47.295" endtime="20201110 08:35:47.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.301" level="INFO">VALUE: 26008758</msg>
<status status="PASS" starttime="20201110 08:35:47.299" endtime="20201110 08:35:47.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.290" endtime="20201110 08:35:47.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.311" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:47.309" endtime="20201110 08:35:47.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.316" level="INFO">VALUE: [26018815, 26028814, 26038814, 26048814, 26058814, 26068814, 26078814, 26088814, 26098814, 26108814, 26118814, 26128814, 26138814, 26148814, 26158814, 26168814, 26178814, 26188814, 26198814, 26208814, 26218814, 26228814, 26238814, 26248814, 26258814, 26268814, 26278814, 26288814, 26298814, 26308814, 26318814, 26328814, 26338814, 26348814, 26358814, 26368814, 26378814, 26388814, 26398814, 26408814, 26418814, 26428814, 26438814, 26448814, 26458814, 26468814, 26478814, 26488814, 26498814, 26508814, 26518814, 26528814, 26538814, 26548814, 26558814, 26568814, 26578814, 26588814, 26598814, 26608814, 26618814, 26628814, 26638814, 26648814, 26658814, 26668814, 26678814, 26688814, 26698814, 26708814, 26718814, 26728814, 26738814, 26748814, 26758814, 26768814, 26778814, 26788814, 26798814, 26808814, 26818814, 26828814, 26838814, 26848814, 26858814, 26868814, 26878814, 26888814, 26898814, 26908814, 26918814, 26928814, 26938814, 26948814, 26958814, 26968814, 26978814, 26988814, 26998814, 27008814]</msg>
<status status="PASS" starttime="20201110 08:35:47.313" endtime="20201110 08:35:47.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.304" endtime="20201110 08:35:47.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.332" endtime="20201110 08:35:47.625"></status>
</kw>
<msg timestamp="20201110 08:35:47.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020570264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030629097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:47.328" endtime="20201110 08:35:47.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020570264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030629097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:47.628" endtime="20201110 08:35:47.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.636" endtime="20201110 08:35:47.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.323" endtime="20201110 08:35:47.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.319" endtime="20201110 08:35:47.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:47.663" level="INFO">${RESULT} = {'source_diff': [0, 0.010058833, 0.009999874999999998, 0.01000107, 0.010001277000000003, 0.010001014000000003, 0.01000124999999999, 0.010001014000000003, 0.010001208999999997, 0.010001069000000001, 0....</msg>
<status status="PASS" starttime="20201110 08:35:47.639" endtime="20201110 08:35:47.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.667" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:47.666" endtime="20201110 08:35:47.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.669" level="INFO">VALUE: 0.020570264</msg>
<status status="PASS" starttime="20201110 08:35:47.668" endtime="20201110 08:35:47.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.664" endtime="20201110 08:35:47.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.675" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:47.674" endtime="20201110 08:35:47.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.677" level="INFO">VALUE: [0.030629097, 0.040628972, 0.050630042, 0.060631319, 0.070632333, 0.080633583, 0.090634597, 0.100635806, 0.110636875, 0.120638097, 0.130639153, 0.140640389, 0.150641444, 0.160642639, 0.170643722, 0.180644917, 0.190646014, 0.200647208, 0.210648361, 0.220649486, 0.230650569, 0.240651778, 0.250652833, 0.260654083, 0.270655139, 0.280656333, 0.290657403, 0.300658625, 0.310659694, 0.320660903, 0.330661958, 0.340663167, 0.35066425, 0.360665444, 0.370666528, 0.380667722, 0.390668861, 0.400670028, 0.410671083, 0.420672292, 0.430673444, 0.440674569, 0.450675653, 0.460676861, 0.470677931, 0.480679139, 0.490680208, 0.500681417, 0.5106825, 0.520683708, 0.530684778, 0.540685986, 0.550687056, 0.560688347, 0.570689361, 0.580690542, 0.590691625, 0.600692833, 0.610693931, 0.620695111, 0.630696181, 0.640697417, 0.650698472, 0.660699708, 0.670700778, 0.680702028, 0.690703083, 0.700704306, 0.710705403, 0.720706611, 0.730707778, 0.740708917, 0.750710014, 0.760711222, 0.770712333, 0.780713556, 0.790714625, 0.800715833, 0.810716944, 0.820718139, 0.830719236, 0.840720458, 0.850721542, 0.86072275, 0.870723847, 0.880725111, 0.890726139, 0.900727361, 0.9107285, 0.920729667, 0.93073075, 0.940731972, 0.950733069, 0.960734278, 0.970735361, 0.980736583, 0.990737681, 1.000738903, 1.010739972, 1.020741194] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:47.676" endtime="20201110 08:35:47.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.671" endtime="20201110 08:35:47.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.680" endtime="20201110 08:35:47.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:47.683" endtime="20201110 08:35:47.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.682" endtime="20201110 08:35:47.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.678" endtime="20201110 08:35:47.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.124" endtime="20201110 08:35:47.704"></status>
</kw>
<msg timestamp="20201110 08:35:47.705" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.713" endtime="20201110 08:35:49.821"></status>
</kw>
<msg timestamp="20201110 08:35:49.822" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28589691, 'start-iter': 1, 'wakeups': [28599748, 28609747, 28619747, 2...</msg>
<status status="PASS" starttime="20201110 08:35:47.712" endtime="20201110 08:35:49.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.829" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28589691, 'start-iter': 1, 'wakeups': [28599748, 28609747, 28619747, 2...</msg>
<status status="PASS" starttime="20201110 08:35:49.825" endtime="20201110 08:35:49.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.831" endtime="20201110 08:35:49.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.709" endtime="20201110 08:35:49.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.707" endtime="20201110 08:35:49.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:49.842" level="INFO">${RESULT} = {'wakeups': [28599748, 28609747, 28619747, 28629747, 28639747, 28649747, 28659747, 28669747, 28679747, 28689747, 28699747, 28709747, 28719747, 28729747, 28739747, 28749747, 28759747, 28769747, 2877974...</msg>
<status status="PASS" starttime="20201110 08:35:49.838" endtime="20201110 08:35:49.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.853" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:49.849" endtime="20201110 08:35:49.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.857" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:49.855" endtime="20201110 08:35:49.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.844" endtime="20201110 08:35:49.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.867" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:49.865" endtime="20201110 08:35:49.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.871" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:49.869" endtime="20201110 08:35:49.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.860" endtime="20201110 08:35:49.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.877" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:49.876" endtime="20201110 08:35:49.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.879" level="INFO">VALUE: 28589691</msg>
<status status="PASS" starttime="20201110 08:35:49.878" endtime="20201110 08:35:49.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.874" endtime="20201110 08:35:49.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.884" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:49.883" endtime="20201110 08:35:49.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.886" level="INFO">VALUE: [28599748, 28609747, 28619747, 28629747, 28639747, 28649747, 28659747, 28669747, 28679747, 28689747, 28699747, 28709747, 28719747, 28729747, 28739747, 28749747, 28759747, 28769747, 28779747, 28789747, 28799747, 28809747, 28819747, 28829747, 28839747, 28849747, 28859747, 28869747, 28879747, 28889747, 28899747, 28909747, 28919747, 28929747, 28939747, 28949747, 28959747, 28969747, 28979747, 28989747, 28999747, 29009747, 29019747, 29029747, 29039747, 29049747, 29059747, 29069747, 29079747, 29089747, 29099747, 29109747, 29119747, 29129747, 29139747, 29149747, 29159747, 29169747, 29179747, 29189747, 29199747, 29209747, 29219747, 29229747, 29239747, 29249747, 29259747, 29269747, 29279747, 29289747, 29299747, 29309747, 29319747, 29329747, 29339747, 29349747, 29359747, 29369747, 29379747, 29389747, 29399747, 29409747, 29419747, 29429747, 29439747, 29449747, 29459747, 29469747, 29479747, 29489747, 29499747, 29509747, 29519747, 29529747, 29539747, 29549747, 29559747, 29569747, 29579747, 29589747]</msg>
<status status="PASS" starttime="20201110 08:35:49.885" endtime="20201110 08:35:49.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.881" endtime="20201110 08:35:49.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.894" endtime="20201110 08:35:50.185"></status>
</kw>
<msg timestamp="20201110 08:35:50.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020536875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030595403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:49.892" endtime="20201110 08:35:50.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020536875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030595403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:50.189" endtime="20201110 08:35:50.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.197" endtime="20201110 08:35:50.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.890" endtime="20201110 08:35:50.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.888" endtime="20201110 08:35:50.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:50.224" level="INFO">${RESULT} = {'source_diff': [0, 0.010058528, 0.009999915999999998, 0.010001056000000001, 0.010001193999999998, 0.010001098000000007, 0.010001193999999991, 0.010001083000000008, 0.010001208999999997, 0.01000111100...</msg>
<status status="PASS" starttime="20201110 08:35:50.200" endtime="20201110 08:35:50.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.229" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:50.228" endtime="20201110 08:35:50.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.231" level="INFO">VALUE: 0.020536875</msg>
<status status="PASS" starttime="20201110 08:35:50.230" endtime="20201110 08:35:50.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.225" endtime="20201110 08:35:50.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.236" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:50.235" endtime="20201110 08:35:50.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.238" level="INFO">VALUE: [0.030595403, 0.040595319, 0.050596375, 0.060597569, 0.070598667, 0.080599861, 0.090600944, 0.100602153, 0.110603264, 0.120604472, 0.130605556, 0.140606778, 0.150607847, 0.160609069, 0.170610153, 0.180611361, 0.190612458, 0.200613667, 0.21061475, 0.220615958, 0.230617056, 0.240618333, 0.250619347, 0.260620583, 0.270621653, 0.280622889, 0.290623958, 0.300625194, 0.310626264, 0.320627472, 0.330628556, 0.340629778, 0.350630903, 0.360632083, 0.370633167, 0.380634389, 0.390635472, 0.400636681, 0.410637792, 0.420639014, 0.430640069, 0.440641306, 0.450642375, 0.460643639, 0.470644681, 0.480645889, 0.490647, 0.500648236, 0.510649278, 0.520650514, 0.530651597, 0.540652819, 0.550653889, 0.560655111, 0.570656278, 0.580657417, 0.590658486, 0.600659708, 0.610660792, 0.620662028, 0.630663097, 0.640664306, 0.650665403, 0.660666611, 0.670667736, 0.680668931, 0.69067, 0.700671236, 0.710672306, 0.720673542, 0.730674611, 0.740675819, 0.750676931, 0.760678125, 0.770679208, 0.780680431, 0.790681514, 0.800682806, 0.810683819, 0.820685056, 0.830686139, 0.840687361, 0.850688444, 0.860689653, 0.870690736, 0.880692, 0.890693028, 0.90069425, 0.910695333, 0.920696597, 0.930697639, 0.940698847, 0.950699944, 0.960701208, 0.970702236, 0.980703486, 0.990704583, 1.000705764, 1.010706847, 1.020708069] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:50.237" endtime="20201110 08:35:50.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.232" endtime="20201110 08:35:50.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.241" endtime="20201110 08:35:50.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:50.244" endtime="20201110 08:35:50.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.243" endtime="20201110 08:35:50.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.239" endtime="20201110 08:35:50.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.705" endtime="20201110 08:35:50.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.548" endtime="20201110 08:35:50.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.547" endtime="20201110 08:35:50.265"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:50.268" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.276" endtime="20201110 08:35:52.384"></status>
</kw>
<msg timestamp="20201110 08:35:52.385" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31151870, 'start-iter': 1, 'wakeups': [31161946, 31171945, 31181945, 3...</msg>
<status status="PASS" starttime="20201110 08:35:50.274" endtime="20201110 08:35:52.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.391" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31151870, 'start-iter': 1, 'wakeups': [31161946, 31171945, 31181945, 3...</msg>
<status status="PASS" starttime="20201110 08:35:52.387" endtime="20201110 08:35:52.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.393" endtime="20201110 08:35:52.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.272" endtime="20201110 08:35:52.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.270" endtime="20201110 08:35:52.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:52.405" level="INFO">${RESULT} = {'wakeups': [31161946, 31171945, 31181945, 31191945, 31201945, 31211945, 31221945, 31231945, 31241945, 31251945, 31261945, 31271945, 31281945, 31291945, 31301945, 31311945, 31321945, 31331945, 3134194...</msg>
<status status="PASS" starttime="20201110 08:35:52.401" endtime="20201110 08:35:52.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.413" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:52.411" endtime="20201110 08:35:52.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.417" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:52.415" endtime="20201110 08:35:52.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.407" endtime="20201110 08:35:52.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.427" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:52.425" endtime="20201110 08:35:52.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.432" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:52.430" endtime="20201110 08:35:52.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.420" endtime="20201110 08:35:52.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.444" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:52.442" endtime="20201110 08:35:52.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.448" level="INFO">VALUE: 31151870</msg>
<status status="PASS" starttime="20201110 08:35:52.446" endtime="20201110 08:35:52.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.435" endtime="20201110 08:35:52.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.458" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:52.456" endtime="20201110 08:35:52.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.463" level="INFO">VALUE: [31161946, 31171945, 31181945, 31191945, 31201945, 31211945, 31221945, 31231945, 31241945, 31251945, 31261945, 31271945, 31281945, 31291945, 31301945, 31311945, 31321945, 31331945, 31341945, 31351945, 31361945, 31371945, 31381945, 31391945, 31401945, 31411945, 31421945, 31431945, 31441945, 31451945, 31461945, 31471945, 31481945, 31491945, 31501945, 31511945, 31521945, 31531945, 31541945, 31551945, 31561945, 31571945, 31581945, 31591945, 31601945, 31611945, 31621945, 31631945, 31641945, 31651945, 31661945, 31671945, 31681945, 31691945, 31701945, 31711945, 31721945, 31731945, 31741945, 31751945, 31761945, 31771945, 31781945, 31791945, 31801945, 31811945, 31821945, 31831945, 31841945, 31851945, 31861945, 31871945, 31881945, 31891945, 31901945, 31911945, 31921945, 31931945, 31941945, 31951945, 31961945, 31971945, 31981945, 31991945, 32001945, 32011945, 32021945, 32031945, 32041945, 32051945, 32061945, 32071945, 32081945, 32091945, 32101945, 32111945, 32121945, 32131945, 32141945, 32151945]</msg>
<status status="PASS" starttime="20201110 08:35:52.460" endtime="20201110 08:35:52.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.451" endtime="20201110 08:35:52.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.478" endtime="20201110 08:35:52.779"></status>
</kw>
<msg timestamp="20201110 08:35:52.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031968347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:52.475" endtime="20201110 08:35:52.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031968347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:52.782" endtime="20201110 08:35:52.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.790" endtime="20201110 08:35:52.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.469" endtime="20201110 08:35:52.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.466" endtime="20201110 08:35:52.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:52.817" level="INFO">${RESULT} = {'source_diff': [0, 0.010077889, 0.010000597, 0.01000107, 0.010001193999999998, 0.010001111000000007, 0.010001166999999991, 0.010001083000000008, 0.010001208999999997, 0.010001097, 0.01000119399999999...</msg>
<status status="PASS" starttime="20201110 08:35:52.793" endtime="20201110 08:35:52.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.822" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:52.821" endtime="20201110 08:35:52.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.824" level="INFO">VALUE: 0.021890458</msg>
<status status="PASS" starttime="20201110 08:35:52.823" endtime="20201110 08:35:52.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.818" endtime="20201110 08:35:52.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.830" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:52.829" endtime="20201110 08:35:52.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.832" level="INFO">VALUE: [0.031968347, 0.041968944, 0.051970014, 0.061971208, 0.071972319, 0.081973486, 0.091974569, 0.101975778, 0.111976875, 0.121978069, 0.131979167, 0.141980375, 0.1519815, 0.161982681, 0.171983778, 0.181984972, 0.191986097, 0.201987264, 0.211988347, 0.221989556, 0.231990653, 0.241991861, 0.251992944, 0.261994167, 0.27199525, 0.281996458, 0.291997542, 0.301998764, 0.311999847, 0.322001056, 0.332002153, 0.342003361, 0.352004458, 0.362005667, 0.372006792, 0.382007972, 0.392009042, 0.402010319, 0.412011347, 0.422012556, 0.432013639, 0.442014861, 0.452015958, 0.462017181, 0.472018236, 0.482019458, 0.492020542, 0.502021792, 0.512022861, 0.522024069, 0.532025139, 0.542026361, 0.552027444, 0.562028653, 0.57202975, 0.582030958, 0.592032042, 0.60203325, 0.612034333, 0.622035556, 0.632036653, 0.642037847, 0.652038944, 0.662040153, 0.672041236, 0.682042458, 0.692043556, 0.702044764, 0.712045833, 0.722047069, 0.732048153, 0.742049347, 0.752050431, 0.762051667, 0.772052736, 0.782053944, 0.792055042, 0.80205625, 0.812057347, 0.822058569, 0.832059639, 0.842060847, 0.852061931, 0.862063167, 0.872064306, 0.882065444, 0.892066542, 0.902067764, 0.912068847, 0.922070042, 0.932071208, 0.942072347, 0.952073444, 0.962074681, 0.972075736, 0.982076958, 0.992078028, 1.00207925, 1.012080375, 1.022081583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:52.831" endtime="20201110 08:35:52.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.826" endtime="20201110 08:35:52.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.836" endtime="20201110 08:35:52.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:52.840" endtime="20201110 08:35:52.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.838" endtime="20201110 08:35:52.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.834" endtime="20201110 08:35:52.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.268" endtime="20201110 08:35:52.861"></status>
</kw>
<msg timestamp="20201110 08:35:52.861" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.869" endtime="20201110 08:35:54.977"></status>
</kw>
<msg timestamp="20201110 08:35:54.978" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33745179, 'start-iter': 1, 'wakeups': [33755255, 33765254, 33775254, 3...</msg>
<status status="PASS" starttime="20201110 08:35:52.868" endtime="20201110 08:35:54.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.984" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33745179, 'start-iter': 1, 'wakeups': [33755255, 33765254, 33775254, 3...</msg>
<status status="PASS" starttime="20201110 08:35:54.980" endtime="20201110 08:35:54.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.986" endtime="20201110 08:35:54.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.865" endtime="20201110 08:35:54.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.863" endtime="20201110 08:35:54.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:54.997" level="INFO">${RESULT} = {'wakeups': [33755255, 33765254, 33775254, 33785254, 33795254, 33805254, 33815254, 33825254, 33835254, 33845254, 33855254, 33865254, 33875254, 33885254, 33895254, 33905254, 33915254, 33925254, 3393525...</msg>
<status status="PASS" starttime="20201110 08:35:54.993" endtime="20201110 08:35:54.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.006" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:55.004" endtime="20201110 08:35:55.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.011" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:55.009" endtime="20201110 08:35:55.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.999" endtime="20201110 08:35:55.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.028" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:55.026" endtime="20201110 08:35:55.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.033" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:55.031" endtime="20201110 08:35:55.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.021" endtime="20201110 08:35:55.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.043" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:55.041" endtime="20201110 08:35:55.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.047" level="INFO">VALUE: 33745179</msg>
<status status="PASS" starttime="20201110 08:35:55.045" endtime="20201110 08:35:55.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.036" endtime="20201110 08:35:55.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.059" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:55.055" endtime="20201110 08:35:55.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.065" level="INFO">VALUE: [33755255, 33765254, 33775254, 33785254, 33795254, 33805254, 33815254, 33825254, 33835254, 33845254, 33855254, 33865254, 33875254, 33885254, 33895254, 33905254, 33915254, 33925254, 33935254, 33945254, 33955254, 33965254, 33975254, 33985254, 33995254, 34005254, 34015254, 34025254, 34035254, 34045254, 34055254, 34065254, 34075254, 34085254, 34095254, 34105254, 34115254, 34125254, 34135254, 34145254, 34155254, 34165254, 34175254, 34185254, 34195254, 34205254, 34215254, 34225254, 34235254, 34245254, 34255254, 34265254, 34275254, 34285254, 34295254, 34305254, 34315254, 34325254, 34335254, 34345254, 34355254, 34365254, 34375254, 34385254, 34395254, 34405254, 34415254, 34425254, 34435254, 34445254, 34455254, 34465254, 34475254, 34485254, 34495254, 34505254, 34515254, 34525254, 34535254, 34545254, 34555254, 34565254, 34575254, 34585254, 34595254, 34605254, 34615254, 34625254, 34635254, 34645254, 34655254, 34665254, 34675254, 34685254, 34695254, 34705254, 34715254, 34725254, 34735254, 34745254]</msg>
<status status="PASS" starttime="20201110 08:35:55.062" endtime="20201110 08:35:55.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.050" endtime="20201110 08:35:55.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.080" endtime="20201110 08:35:55.376"></status>
</kw>
<msg timestamp="20201110 08:35:55.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029753847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:55.077" endtime="20201110 08:35:55.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029753847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:55.380" endtime="20201110 08:35:55.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.388" endtime="20201110 08:35:55.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.071" endtime="20201110 08:35:55.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.068" endtime="20201110 08:35:55.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:55.415" level="INFO">${RESULT} = {'source_diff': [0, 0.010077554999999998, 0.010000542000000001, 0.010001083000000001, 0.010001221999999997, 0.01000107, 0.010001207999999998, 0.010001084000000007, 0.010001207999999998, 0.010001097, 0...</msg>
<status status="PASS" starttime="20201110 08:35:55.391" endtime="20201110 08:35:55.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.420" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:55.418" endtime="20201110 08:35:55.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.422" level="INFO">VALUE: 0.019676292</msg>
<status status="PASS" starttime="20201110 08:35:55.421" endtime="20201110 08:35:55.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.416" endtime="20201110 08:35:55.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.427" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:55.426" endtime="20201110 08:35:55.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.430" level="INFO">VALUE: [0.029753847, 0.039754389, 0.049755472, 0.059756694, 0.069757764, 0.079758972, 0.089760056, 0.099761264, 0.109762361, 0.119763569, 0.129764653, 0.139765875, 0.149766944, 0.159768153, 0.16976925, 0.179770486, 0.189771542, 0.19977275, 0.209773875, 0.219775069, 0.229776194, 0.239777361, 0.249778431, 0.259779653, 0.269780722, 0.279781944, 0.289783097, 0.299784236, 0.309785319, 0.319786542, 0.329787625, 0.339788833, 0.349789931, 0.359791153, 0.369792222, 0.379793431, 0.389794528, 0.39979575, 0.409796833, 0.419798042, 0.429799111, 0.439800319, 0.449801431, 0.459802625, 0.469803708, 0.479804958, 0.489806028, 0.499807222, 0.509808306, 0.519809542, 0.529810611, 0.539811847, 0.549812917, 0.559814111, 0.569815194, 0.579816472, 0.589817514, 0.599818708, 0.609819806, 0.619821028, 0.629822097, 0.639823375, 0.649824389, 0.659825611, 0.669826694, 0.679827903, 0.689829028, 0.699830208, 0.709831292, 0.7198325, 0.729833653, 0.739834806, 0.749835903, 0.759837111, 0.769838208, 0.779839403, 0.7898405, 0.799841708, 0.809842792, 0.819844, 0.829845083, 0.839846292, 0.849847375, 0.859848597, 0.869849681, 0.879850889, 0.889851972, 0.899853194, 0.909854278, 0.9198555, 0.929856569, 0.939857792, 0.949858875, 0.959860083, 0.969861181, 0.979862403, 0.989863486, 0.999864681, 1.009865764, 1.019866986] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:55.429" endtime="20201110 08:35:55.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.423" endtime="20201110 08:35:55.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.433" endtime="20201110 08:35:55.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:55.437" endtime="20201110 08:35:55.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.435" endtime="20201110 08:35:55.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.431" endtime="20201110 08:35:55.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.861" endtime="20201110 08:35:55.458"></status>
</kw>
<msg timestamp="20201110 08:35:55.458" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.466" endtime="20201110 08:35:57.574"></status>
</kw>
<msg timestamp="20201110 08:35:57.575" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36342233, 'start-iter': 1, 'wakeups': [36352308, 36362308, 36372308, 3...</msg>
<status status="PASS" starttime="20201110 08:35:55.465" endtime="20201110 08:35:57.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.581" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36342233, 'start-iter': 1, 'wakeups': [36352308, 36362308, 36372308, 3...</msg>
<status status="PASS" starttime="20201110 08:35:57.577" endtime="20201110 08:35:57.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.583" endtime="20201110 08:35:57.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.462" endtime="20201110 08:35:57.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.460" endtime="20201110 08:35:57.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:57.594" level="INFO">${RESULT} = {'wakeups': [36352308, 36362308, 36372308, 36382308, 36392308, 36402308, 36412308, 36422308, 36432308, 36442308, 36452308, 36462308, 36472308, 36482308, 36492308, 36502308, 36512308, 36522308, 3653230...</msg>
<status status="PASS" starttime="20201110 08:35:57.590" endtime="20201110 08:35:57.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.603" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:57.601" endtime="20201110 08:35:57.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.607" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:57.605" endtime="20201110 08:35:57.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.596" endtime="20201110 08:35:57.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.617" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:57.615" endtime="20201110 08:35:57.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.622" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:57.620" endtime="20201110 08:35:57.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.610" endtime="20201110 08:35:57.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.633" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:57.630" endtime="20201110 08:35:57.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.637" level="INFO">VALUE: 36342233</msg>
<status status="PASS" starttime="20201110 08:35:57.635" endtime="20201110 08:35:57.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.625" endtime="20201110 08:35:57.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.647" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:57.645" endtime="20201110 08:35:57.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.652" level="INFO">VALUE: [36352308, 36362308, 36372308, 36382308, 36392308, 36402308, 36412308, 36422308, 36432308, 36442308, 36452308, 36462308, 36472308, 36482308, 36492308, 36502308, 36512308, 36522308, 36532308, 36542308, 36552308, 36562308, 36572308, 36582308, 36592308, 36602308, 36612308, 36622308, 36632308, 36642308, 36652308, 36662308, 36672308, 36682308, 36692308, 36702308, 36712308, 36722308, 36732308, 36742308, 36752308, 36762308, 36772308, 36782308, 36792308, 36802308, 36812308, 36822308, 36832308, 36842308, 36852308, 36862308, 36872308, 36882308, 36892308, 36902308, 36912308, 36922308, 36932308, 36942308, 36952308, 36962308, 36972308, 36982308, 36992308, 37002308, 37012308, 37022308, 37032308, 37042308, 37052308, 37062308, 37072308, 37082308, 37092308, 37102308, 37112308, 37122308, 37132308, 37142308, 37152308, 37162308, 37172308, 37182308, 37192308, 37202308, 37212308, 37222308, 37232308, 37242308, 37252308, 37262308, 37272308, 37282308, 37292308, 37302308, 37312308, 37322308, 37332308, 37342308]</msg>
<status status="PASS" starttime="20201110 08:35:57.650" endtime="20201110 08:35:57.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.640" endtime="20201110 08:35:57.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.659" endtime="20201110 08:35:57.952"></status>
</kw>
<msg timestamp="20201110 08:35:57.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019588889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029666125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:57.657" endtime="20201110 08:35:57.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019588889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029666125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:57.956" endtime="20201110 08:35:57.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.964" endtime="20201110 08:35:57.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.655" endtime="20201110 08:35:57.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.653" endtime="20201110 08:35:57.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:57.991" level="INFO">${RESULT} = {'source_diff': [0, 0.010077236, 0.010001527999999996, 0.010001111, 0.010001194000000005, 0.010001084, 0.010001207999999998, 0.010001069000000001, 0.010001208999999997, 0.010001097, 0.0100011940000000...</msg>
<status status="PASS" starttime="20201110 08:35:57.967" endtime="20201110 08:35:57.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.995" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:57.994" endtime="20201110 08:35:57.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.997" level="INFO">VALUE: 0.019588889</msg>
<status status="PASS" starttime="20201110 08:35:57.996" endtime="20201110 08:35:57.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.992" endtime="20201110 08:35:57.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.003" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:58.002" endtime="20201110 08:35:58.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.005" level="INFO">VALUE: [0.029666125, 0.039667653, 0.049668764, 0.059669958, 0.069671042, 0.07967225, 0.089673319, 0.099674528, 0.109675625, 0.119676819, 0.129677903, 0.139679111, 0.149680194, 0.159681431, 0.169682514, 0.179683722, 0.189684792, 0.199686, 0.209687083, 0.219688292, 0.229689403, 0.239690611, 0.249691736, 0.259692931, 0.269693986, 0.279695208, 0.289696319, 0.299697472, 0.309698556, 0.319699778, 0.329700861, 0.339702069, 0.349703167, 0.359704361, 0.369705444, 0.379706681, 0.389707792, 0.399708958, 0.409710056, 0.41971125, 0.429712347, 0.439713583, 0.449714639, 0.459715847, 0.469716958, 0.479718139, 0.48971925, 0.499720444, 0.509721542, 0.51972275, 0.529723833, 0.539725028, 0.549726111, 0.559727319, 0.569728403, 0.579729625, 0.589730708, 0.599731917, 0.609733, 0.619734222, 0.629735306, 0.639736542, 0.649737597, 0.659738806, 0.669739903, 0.679741097, 0.689742194, 0.699743403, 0.709744486, 0.719745694, 0.729746778, 0.739747986, 0.749749069, 0.759750292, 0.769751375, 0.779752583, 0.789753681, 0.799754889, 0.809755958, 0.819757167, 0.829758292, 0.839759472, 0.849760597, 0.859761764, 0.869762861, 0.879764069, 0.889765139, 0.899766361, 0.909767486, 0.919768667, 0.92976975, 0.939770958, 0.949772042, 0.959773306, 0.969774333, 0.979775556, 0.989776625, 0.999777903, 1.009778917, 1.019780153] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:58.004" endtime="20201110 08:35:58.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.999" endtime="20201110 08:35:58.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.009" endtime="20201110 08:35:58.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:58.012" endtime="20201110 08:35:58.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.010" endtime="20201110 08:35:58.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.007" endtime="20201110 08:35:58.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.459" endtime="20201110 08:35:58.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.266" endtime="20201110 08:35:58.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.266" endtime="20201110 08:35:58.033"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:58.036" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.045" endtime="20201110 08:36:00.152"></status>
</kw>
<msg timestamp="20201110 08:36:00.153" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38920540, 'start-iter': 1, 'wakeups': [38930637, 38940636, 38950636, 3...</msg>
<status status="PASS" starttime="20201110 08:35:58.043" endtime="20201110 08:36:00.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.159" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38920540, 'start-iter': 1, 'wakeups': [38930637, 38940636, 38950636, 3...</msg>
<status status="PASS" starttime="20201110 08:36:00.155" endtime="20201110 08:36:00.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.161" endtime="20201110 08:36:00.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.039" endtime="20201110 08:36:00.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.038" endtime="20201110 08:36:00.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:00.173" level="INFO">${RESULT} = {'wakeups': [38930637, 38940636, 38950636, 38960636, 38970636, 38980636, 38990636, 39000636, 39010636, 39020636, 39030636, 39040636, 39050636, 39060636, 39070636, 39080636, 39090636, 39100636, 3911063...</msg>
<status status="PASS" starttime="20201110 08:36:00.168" endtime="20201110 08:36:00.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.181" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:00.179" endtime="20201110 08:36:00.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.186" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:00.184" endtime="20201110 08:36:00.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.175" endtime="20201110 08:36:00.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.196" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:00.194" endtime="20201110 08:36:00.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.200" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:00.198" endtime="20201110 08:36:00.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.189" endtime="20201110 08:36:00.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.210" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:36:00.208" endtime="20201110 08:36:00.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.215" level="INFO">VALUE: 38920540</msg>
<status status="PASS" starttime="20201110 08:36:00.213" endtime="20201110 08:36:00.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.203" endtime="20201110 08:36:00.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.225" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:00.223" endtime="20201110 08:36:00.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.235" level="INFO">VALUE: [38930637, 38940636, 38950636, 38960636, 38970636, 38980636, 38990636, 39000636, 39010636, 39020636, 39030636, 39040636, 39050636, 39060636, 39070636, 39080636, 39090636, 39100636, 39110636, 39120636, 39130636, 39140636, 39150636, 39160636, 39170636, 39180636, 39190636, 39200636, 39210636, 39220636, 39230636, 39240636, 39250636, 39260636, 39270636, 39280636, 39290636, 39300636, 39310636, 39320636, 39330636, 39340636, 39350636, 39360636, 39370636, 39380636, 39390636, 39400636, 39410636, 39420636, 39430636, 39440636, 39450636, 39460636, 39470636, 39480636, 39490636, 39500636, 39510636, 39520636, 39530636, 39540636, 39550636, 39560636, 39570636, 39580636, 39590636, 39600636, 39610636, 39620636, 39630636, 39640636, 39650636, 39660636, 39670636, 39680636, 39690636, 39700636, 39710636, 39720636, 39730636, 39740636, 39750636, 39760636, 39770636, 39780636, 39790636, 39800636, 39810636, 39820636, 39830636, 39840636, 39850636, 39860636, 39870636, 39880636, 39890636, 39900636, 39910636, 39920636]</msg>
<status status="PASS" starttime="20201110 08:36:00.228" endtime="20201110 08:36:00.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.218" endtime="20201110 08:36:00.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.251" endtime="20201110 08:36:00.550"></status>
</kw>
<msg timestamp="20201110 08:36:00.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023155181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033254306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:00.248" endtime="20201110 08:36:00.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023155181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033254306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:00.554" endtime="20201110 08:36:00.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.561" endtime="20201110 08:36:00.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.242" endtime="20201110 08:36:00.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.239" endtime="20201110 08:36:00.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:00.590" level="INFO">${RESULT} = {'source_diff': [0, 0.010099124999999997, 0.010000069, 0.010001028000000002, 0.010001208000000004, 0.010001082999999994, 0.010001208999999997, 0.010001083000000008, 0.010001278000000002, 0.01000101399...</msg>
<status status="PASS" starttime="20201110 08:36:00.566" endtime="20201110 08:36:00.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.594" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:36:00.593" endtime="20201110 08:36:00.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.596" level="INFO">VALUE: 0.023155181</msg>
<status status="PASS" starttime="20201110 08:36:00.595" endtime="20201110 08:36:00.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.591" endtime="20201110 08:36:00.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.602" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:00.601" endtime="20201110 08:36:00.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.604" level="INFO">VALUE: [0.033254306, 0.043254375, 0.053255403, 0.063256611, 0.073257694, 0.083258903, 0.093259986, 0.103261264, 0.113262278, 0.123263486, 0.133264583, 0.143265778, 0.153266861, 0.163268083, 0.173269194, 0.183270375, 0.193271444, 0.203272653, 0.213273736, 0.223274944, 0.233276056, 0.24327725, 0.253278361, 0.263279556, 0.273280639, 0.283281833, 0.293282958, 0.303284139, 0.313285208, 0.323286417, 0.3332875, 0.343288736, 0.353289806, 0.363291014, 0.373292139, 0.383293306, 0.393294389, 0.403295597, 0.413296694, 0.423297903, 0.433298986, 0.443300194, 0.453301306, 0.4633025, 0.473303569, 0.483304806, 0.493305903, 0.503307069, 0.513308153, 0.523309389, 0.5333105, 0.543311722, 0.55331275, 0.563313986, 0.573315042, 0.583316264, 0.593317333, 0.603318542, 0.613319639, 0.623320847, 0.633321931, 0.643323153, 0.653324236, 0.663325444, 0.673326514, 0.683327736, 0.693328819, 0.703330028, 0.713331097, 0.723332319, 0.733333444, 0.743334625, 0.753335722, 0.763336903, 0.773338, 0.783339194, 0.793340319, 0.803341486, 0.813342583, 0.823343792, 0.833344903, 0.843346083, 0.85334725, 0.863348389, 0.873349472, 0.883350667, 0.893351764, 0.903352958, 0.913354056, 0.923355264, 0.933356347, 0.943357569, 0.953358722, 0.963359847, 0.973360944, 0.983362139, 0.993363222, 1.003364514, 1.013365528, 1.023366736] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:00.603" endtime="20201110 08:36:00.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.598" endtime="20201110 08:36:00.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.607" endtime="20201110 08:36:00.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:00.610" endtime="20201110 08:36:00.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.609" endtime="20201110 08:36:00.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.605" endtime="20201110 08:36:00.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.036" endtime="20201110 08:36:00.631"></status>
</kw>
<msg timestamp="20201110 08:36:00.632" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.640" endtime="20201110 08:36:02.748"></status>
</kw>
<msg timestamp="20201110 08:36:02.749" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41515479, 'start-iter': 1, 'wakeups': [41525575, 41535575, 41545575, 4...</msg>
<status status="PASS" starttime="20201110 08:36:00.638" endtime="20201110 08:36:02.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.755" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41515479, 'start-iter': 1, 'wakeups': [41525575, 41535575, 41545575, 4...</msg>
<status status="PASS" starttime="20201110 08:36:02.751" endtime="20201110 08:36:02.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.758" endtime="20201110 08:36:02.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.636" endtime="20201110 08:36:02.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.634" endtime="20201110 08:36:02.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:02.771" level="INFO">${RESULT} = {'wakeups': [41525575, 41535575, 41545575, 41555575, 41565575, 41575575, 41585575, 41595575, 41605575, 41615575, 41625575, 41635575, 41645575, 41655575, 41665575, 41675575, 41685575, 41695575, 4170557...</msg>
<status status="PASS" starttime="20201110 08:36:02.766" endtime="20201110 08:36:02.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.779" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:02.777" endtime="20201110 08:36:02.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.784" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:02.782" endtime="20201110 08:36:02.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.772" endtime="20201110 08:36:02.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.794" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:02.792" endtime="20201110 08:36:02.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.798" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:02.796" endtime="20201110 08:36:02.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.787" endtime="20201110 08:36:02.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.809" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:36:02.807" endtime="20201110 08:36:02.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.814" level="INFO">VALUE: 41515479</msg>
<status status="PASS" starttime="20201110 08:36:02.811" endtime="20201110 08:36:02.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.801" endtime="20201110 08:36:02.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.824" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:02.822" endtime="20201110 08:36:02.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.829" level="INFO">VALUE: [41525575, 41535575, 41545575, 41555575, 41565575, 41575575, 41585575, 41595575, 41605575, 41615575, 41625575, 41635575, 41645575, 41655575, 41665575, 41675575, 41685575, 41695575, 41705575, 41715575, 41725575, 41735575, 41745575, 41755575, 41765575, 41775575, 41785575, 41795575, 41805575, 41815575, 41825575, 41835575, 41845575, 41855575, 41865575, 41875575, 41885575, 41895575, 41905575, 41915575, 41925575, 41935575, 41945575, 41955575, 41965575, 41975575, 41985575, 41995575, 42005575, 42015575, 42025575, 42035575, 42045575, 42055575, 42065575, 42075575, 42085575, 42095575, 42105575, 42115575, 42125575, 42135575, 42145575, 42155575, 42165575, 42175575, 42185575, 42195575, 42205575, 42215575, 42225575, 42235575, 42245575, 42255575, 42265575, 42275575, 42285575, 42295575, 42305575, 42315575, 42325575, 42335575, 42345575, 42355575, 42365575, 42375575, 42385575, 42395575, 42405575, 42415575, 42425575, 42435575, 42445575, 42455575, 42465575, 42475575, 42485575, 42495575, 42505575, 42515575]</msg>
<status status="PASS" starttime="20201110 08:36:02.826" endtime="20201110 08:36:02.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.817" endtime="20201110 08:36:02.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.845" endtime="20201110 08:36:03.139"></status>
</kw>
<msg timestamp="20201110 08:36:03.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029799292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:02.842" endtime="20201110 08:36:03.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029799292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:03.143" endtime="20201110 08:36:03.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.150" endtime="20201110 08:36:03.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.836" endtime="20201110 08:36:03.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.832" endtime="20201110 08:36:03.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:03.177" level="INFO">${RESULT} = {'source_diff': [0, 0.010098417000000002, 0.010001054999999998, 0.010001056000000001, 0.010001207999999998, 0.010001083000000001, 0.010001208999999997, 0.010001083000000008, 0.010001207999999998, 0.01...</msg>
<status status="PASS" starttime="20201110 08:36:03.154" endtime="20201110 08:36:03.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.182" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:36:03.181" endtime="20201110 08:36:03.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.184" level="INFO">VALUE: 0.019700875</msg>
<status status="PASS" starttime="20201110 08:36:03.183" endtime="20201110 08:36:03.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.178" endtime="20201110 08:36:03.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.189" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:03.188" endtime="20201110 08:36:03.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.192" level="INFO">VALUE: [0.029799292, 0.039800347, 0.049801403, 0.059802611, 0.069803694, 0.079804903, 0.089805986, 0.099807194, 0.109808292, 0.119809486, 0.129810569, 0.139811778, 0.149812875, 0.159814083, 0.169815153, 0.179816375, 0.189817444, 0.199818653, 0.209819736, 0.219820944, 0.229822042, 0.239823236, 0.249824333, 0.259825528, 0.269826611, 0.279827903, 0.289828917, 0.299830111, 0.309831208, 0.319832417, 0.329833486, 0.339834694, 0.349835778, 0.359836986, 0.369838083, 0.379839278, 0.389840361, 0.399841569, 0.409842681, 0.419843861, 0.429844944, 0.439846194, 0.44984725, 0.459848444, 0.469849528, 0.479850736, 0.489851819, 0.499853028, 0.509854111, 0.519855319, 0.529856458, 0.539857653, 0.549858694, 0.559859917, 0.569860986, 0.579862194, 0.589863278, 0.599864486, 0.609865569, 0.619866778, 0.629867861, 0.639869069, 0.649870167, 0.659871375, 0.669872444, 0.679873667, 0.689874736, 0.699875958, 0.709877028, 0.719878236, 0.729879333, 0.739880556, 0.749881625, 0.759882833, 0.769883917, 0.779885125, 0.789886208, 0.799887431, 0.8098885, 0.819889722, 0.829890792, 0.839892014, 0.849893097, 0.859894306, 0.869895375, 0.879896583, 0.889897681, 0.899898875, 0.909899958, 0.919901181, 0.929902264, 0.939903458, 0.949904542, 0.959905764, 0.969906847, 0.979908069, 0.989909125, 0.999910333, 1.009911431, 1.019912625] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:03.191" endtime="20201110 08:36:03.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.186" endtime="20201110 08:36:03.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.195" endtime="20201110 08:36:03.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:03.198" endtime="20201110 08:36:03.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.197" endtime="20201110 08:36:03.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.193" endtime="20201110 08:36:03.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.632" endtime="20201110 08:36:03.219"></status>
</kw>
<msg timestamp="20201110 08:36:03.219" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.227" endtime="20201110 08:36:05.335"></status>
</kw>
<msg timestamp="20201110 08:36:05.336" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44103294, 'start-iter': 1, 'wakeups': [44113391, 44123390, 44133390, 4...</msg>
<status status="PASS" starttime="20201110 08:36:03.226" endtime="20201110 08:36:05.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.350" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44103294, 'start-iter': 1, 'wakeups': [44113391, 44123390, 44133390, 4...</msg>
<status status="PASS" starttime="20201110 08:36:05.346" endtime="20201110 08:36:05.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.352" endtime="20201110 08:36:05.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.223" endtime="20201110 08:36:05.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.221" endtime="20201110 08:36:05.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:05.363" level="INFO">${RESULT} = {'wakeups': [44113391, 44123390, 44133390, 44143390, 44153390, 44163390, 44173390, 44183390, 44193390, 44203390, 44213390, 44223390, 44233390, 44243390, 44253390, 44263390, 44273390, 44283390, 4429339...</msg>
<status status="PASS" starttime="20201110 08:36:05.359" endtime="20201110 08:36:05.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.374" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:05.370" endtime="20201110 08:36:05.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.378" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:05.376" endtime="20201110 08:36:05.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.365" endtime="20201110 08:36:05.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.389" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:05.387" endtime="20201110 08:36:05.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.393" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:05.391" endtime="20201110 08:36:05.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.382" endtime="20201110 08:36:05.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.403" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:36:05.401" endtime="20201110 08:36:05.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.408" level="INFO">VALUE: 44103294</msg>
<status status="PASS" starttime="20201110 08:36:05.406" endtime="20201110 08:36:05.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.396" endtime="20201110 08:36:05.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.418" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:05.416" endtime="20201110 08:36:05.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.423" level="INFO">VALUE: [44113391, 44123390, 44133390, 44143390, 44153390, 44163390, 44173390, 44183390, 44193390, 44203390, 44213390, 44223390, 44233390, 44243390, 44253390, 44263390, 44273390, 44283390, 44293390, 44303390, 44313390, 44323390, 44333390, 44343390, 44353390, 44363390, 44373390, 44383390, 44393390, 44403390, 44413390, 44423390, 44433390, 44443390, 44453390, 44463390, 44473390, 44483390, 44493390, 44503390, 44513390, 44523390, 44533390, 44543390, 44553390, 44563390, 44573390, 44583390, 44593390, 44603390, 44613390, 44623390, 44633390, 44643390, 44653390, 44663390, 44673390, 44683390, 44693390, 44703390, 44713390, 44723390, 44733390, 44743390, 44753390, 44763390, 44773390, 44783390, 44793390, 44803390, 44813390, 44823390, 44833390, 44843390, 44853390, 44863390, 44873390, 44883390, 44893390, 44903390, 44913390, 44923390, 44933390, 44943390, 44953390, 44963390, 44973390, 44983390, 44993390, 45003390, 45013390, 45023390, 45033390, 45043390, 45053390, 45063390, 45073390, 45083390, 45093390, 45103390]</msg>
<status status="PASS" starttime="20201110 08:36:05.420" endtime="20201110 08:36:05.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.411" endtime="20201110 08:36:05.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.431" endtime="20201110 08:36:05.722"></status>
</kw>
<msg timestamp="20201110 08:36:05.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019713264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029812236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:05.429" endtime="20201110 08:36:05.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019713264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029812236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:05.726" endtime="20201110 08:36:05.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.734" endtime="20201110 08:36:05.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.427" endtime="20201110 08:36:05.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.425" endtime="20201110 08:36:05.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:05.762" level="INFO">${RESULT} = {'source_diff': [0, 0.010098971999999998, 0.010000014000000002, 0.010001097, 0.010001194999999997, 0.010001083000000008, 0.01000122199999999, 0.01000107, 0.010001207999999998, 0.010001069000000001, 0....</msg>
<status status="PASS" starttime="20201110 08:36:05.738" endtime="20201110 08:36:05.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.767" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:36:05.766" endtime="20201110 08:36:05.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.769" level="INFO">VALUE: 0.019713264</msg>
<status status="PASS" starttime="20201110 08:36:05.768" endtime="20201110 08:36:05.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.763" endtime="20201110 08:36:05.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.774" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:05.773" endtime="20201110 08:36:05.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.777" level="INFO">VALUE: [0.029812236, 0.03981225, 0.049813347, 0.059814542, 0.069815625, 0.079816847, 0.089817917, 0.099819125, 0.109820194, 0.119821403, 0.1298225, 0.139823694, 0.149824778, 0.159826, 0.169827056, 0.179828264, 0.189829347, 0.199830569, 0.209831639, 0.219832861, 0.229833931, 0.239835167, 0.24983625, 0.259837431, 0.269838514, 0.279839736, 0.289840792, 0.299842014, 0.309843083, 0.319844292, 0.329845389, 0.339846583, 0.349847667, 0.359848889, 0.369849986, 0.379851181, 0.38985225, 0.399853486, 0.409854556, 0.41985575, 0.429856833, 0.439858042, 0.449859125, 0.459860333, 0.469861417, 0.479862625, 0.489863694, 0.499864903, 0.509865986, 0.519867194, 0.529868278, 0.539869486, 0.549870569, 0.559871792, 0.569872875, 0.579874111, 0.589875153, 0.599876361, 0.609877458, 0.619878653, 0.629879736, 0.639881028, 0.649882042, 0.659883278, 0.669884319, 0.679885514, 0.689886611, 0.699887833, 0.709888903, 0.719890097, 0.729891194, 0.739892389, 0.749893472, 0.759894694, 0.769895764, 0.779896986, 0.789898056, 0.799899278, 0.809900347, 0.819901556, 0.829902639, 0.839903847, 0.849904931, 0.859906153, 0.869907222, 0.8799085, 0.889909514, 0.89991075, 0.909911792, 0.919913014, 0.929914097, 0.939915306, 0.949916389, 0.959917583, 0.969918667, 0.979919875, 0.989920958, 0.999922167, 1.009923264, 1.019924458] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:05.776" endtime="20201110 08:36:05.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.770" endtime="20201110 08:36:05.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.780" endtime="20201110 08:36:05.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:05.783" endtime="20201110 08:36:05.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.782" endtime="20201110 08:36:05.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.778" endtime="20201110 08:36:05.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.220" endtime="20201110 08:36:05.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.034" endtime="20201110 08:36:05.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.033" endtime="20201110 08:36:05.804"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:05.807" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.815" endtime="20201110 08:36:07.923"></status>
</kw>
<msg timestamp="20201110 08:36:07.924" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46690718, 'start-iter': 1, 'wakeups': [46700836, 46710834, 46720834, 4...</msg>
<status status="PASS" starttime="20201110 08:36:05.813" endtime="20201110 08:36:07.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.930" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46690718, 'start-iter': 1, 'wakeups': [46700836, 46710834, 46720834, 4...</msg>
<status status="PASS" starttime="20201110 08:36:07.926" endtime="20201110 08:36:07.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.932" endtime="20201110 08:36:07.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.811" endtime="20201110 08:36:07.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.809" endtime="20201110 08:36:07.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:07.945" level="INFO">${RESULT} = {'wakeups': [46700836, 46710834, 46720834, 46730834, 46740834, 46750834, 46760834, 46770834, 46780834, 46790834, 46800834, 46810834, 46820834, 46830834, 46840834, 46850834, 46860834, 46870834, 4688083...</msg>
<status status="PASS" starttime="20201110 08:36:07.940" endtime="20201110 08:36:07.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.953" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:07.951" endtime="20201110 08:36:07.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.958" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:07.956" endtime="20201110 08:36:07.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.946" endtime="20201110 08:36:07.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.968" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:07.966" endtime="20201110 08:36:07.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.972" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:07.970" endtime="20201110 08:36:07.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.961" endtime="20201110 08:36:07.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.985" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:07.983" endtime="20201110 08:36:07.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.990" level="INFO">VALUE: 46690718</msg>
<status status="PASS" starttime="20201110 08:36:07.988" endtime="20201110 08:36:07.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.976" endtime="20201110 08:36:07.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.000" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:07.998" endtime="20201110 08:36:08.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.005" level="INFO">VALUE: [46700836, 46710834, 46720834, 46730834, 46740834, 46750834, 46760834, 46770834, 46780834, 46790834, 46800834, 46810834, 46820834, 46830834, 46840834, 46850834, 46860834, 46870834, 46880834, 46890834, 46900834, 46910834, 46920834, 46930834, 46940834, 46950834, 46960834, 46970834, 46980834, 46990834, 47000834, 47010834, 47020834, 47030834, 47040834, 47050834, 47060834, 47070834, 47080834, 47090834, 47100834, 47110834, 47120834, 47130834, 47140834, 47150834, 47160834, 47170834, 47180834, 47190834, 47200834, 47210834, 47220834, 47230834, 47240834, 47250834, 47260834, 47270834, 47280834, 47290834, 47300834, 47310834, 47320834, 47330834, 47340834, 47350834, 47360834, 47370834, 47380834, 47390834, 47400834, 47410834, 47420834, 47430834, 47440834, 47450834, 47460834, 47470834, 47480834, 47490834, 47500834, 47510834, 47520834, 47530834, 47540834, 47550834, 47560834, 47570834, 47580834, 47590834, 47600834, 47610834, 47620834, 47630834, 47640834, 47650834, 47660834, 47670834, 47680834, 47690834]</msg>
<status status="PASS" starttime="20201110 08:36:08.002" endtime="20201110 08:36:08.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.993" endtime="20201110 08:36:08.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.020" endtime="20201110 08:36:08.318"></status>
</kw>
<msg timestamp="20201110 08:36:08.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032200403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:08.017" endtime="20201110 08:36:08.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032200403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:08.322" endtime="20201110 08:36:08.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.330" endtime="20201110 08:36:08.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.011" endtime="20201110 08:36:08.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.008" endtime="20201110 08:36:08.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:08.356" level="INFO">${RESULT} = {'source_diff': [0, 0.010120056000000002, 0.009999346999999999, 0.010001083000000001, 0.010001194999999997, 0.010001083000000001, 0.010001207999999998, 0.010001084000000007, 0.01000122199999999, 0.010...</msg>
<status status="PASS" starttime="20201110 08:36:08.333" endtime="20201110 08:36:08.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.361" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:08.360" endtime="20201110 08:36:08.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.363" level="INFO">VALUE: 0.022080347</msg>
<status status="PASS" starttime="20201110 08:36:08.362" endtime="20201110 08:36:08.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.358" endtime="20201110 08:36:08.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.369" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:08.368" endtime="20201110 08:36:08.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.372" level="INFO">VALUE: [0.032200403, 0.04219975, 0.052200833, 0.062202028, 0.072203111, 0.082204319, 0.092205403, 0.102206625, 0.112207681, 0.122208903, 0.132209972, 0.142211181, 0.15221225, 0.162213486, 0.172214542, 0.182215764, 0.192216833, 0.202218097, 0.212219111, 0.222220319, 0.232221431, 0.242222611, 0.252223694, 0.262224917, 0.272226, 0.282227194, 0.292228264, 0.302229514, 0.312230583, 0.322231764, 0.332232847, 0.342234069, 0.352235194, 0.362236361, 0.372237417, 0.382238625, 0.392239708, 0.402240931, 0.412242, 0.422243208, 0.432244292, 0.4422455, 0.452246583, 0.462247806, 0.472248931, 0.482250069, 0.492251153, 0.502252361, 0.512253444, 0.522254653, 0.53225575, 0.542256944, 0.552258014, 0.562259236, 0.572260319, 0.582261514, 0.592262611, 0.602263806, 0.612264931, 0.622266111, 0.632267167, 0.642268375, 0.652269458, 0.662270667, 0.67227175, 0.682272958, 0.692274111, 0.70227525, 0.712276361, 0.722277542, 0.732278625, 0.742279833, 0.752280903, 0.762282111, 0.772283194, 0.782284417, 0.7922855, 0.802286708, 0.812287764, 0.822288986, 0.832290056, 0.842291278, 0.852292347, 0.862293556, 0.872294639, 0.882295889, 0.892296944, 0.902298125, 0.912299292, 0.922300431, 0.9323015, 0.942302708, 0.952303806, 0.962305, 0.972306097, 0.982307306, 0.992308361, 1.002309583, 1.012310667, 1.022311903] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:08.371" endtime="20201110 08:36:08.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.365" endtime="20201110 08:36:08.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.375" endtime="20201110 08:36:08.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:08.378" endtime="20201110 08:36:08.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.377" endtime="20201110 08:36:08.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.373" endtime="20201110 08:36:08.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.808" endtime="20201110 08:36:08.399"></status>
</kw>
<msg timestamp="20201110 08:36:08.399" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.408" endtime="20201110 08:36:10.515"></status>
</kw>
<msg timestamp="20201110 08:36:10.517" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49283776, 'start-iter': 1, 'wakeups': [49293894, 49303892, 49313892, 4...</msg>
<status status="PASS" starttime="20201110 08:36:08.406" endtime="20201110 08:36:10.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.523" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49283776, 'start-iter': 1, 'wakeups': [49293894, 49303892, 49313892, 4...</msg>
<status status="PASS" starttime="20201110 08:36:10.519" endtime="20201110 08:36:10.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.525" endtime="20201110 08:36:10.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.403" endtime="20201110 08:36:10.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.401" endtime="20201110 08:36:10.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:10.536" level="INFO">${RESULT} = {'wakeups': [49293894, 49303892, 49313892, 49323892, 49333892, 49343892, 49353892, 49363892, 49373892, 49383892, 49393892, 49403892, 49413892, 49423892, 49433892, 49443892, 49453892, 49463892, 4947389...</msg>
<status status="PASS" starttime="20201110 08:36:10.532" endtime="20201110 08:36:10.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.545" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:10.543" endtime="20201110 08:36:10.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.549" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:10.547" endtime="20201110 08:36:10.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.538" endtime="20201110 08:36:10.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.567" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:10.565" endtime="20201110 08:36:10.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.571" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:10.569" endtime="20201110 08:36:10.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.558" endtime="20201110 08:36:10.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.581" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:10.579" endtime="20201110 08:36:10.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.586" level="INFO">VALUE: 49283776</msg>
<status status="PASS" starttime="20201110 08:36:10.584" endtime="20201110 08:36:10.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.574" endtime="20201110 08:36:10.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.598" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:10.594" endtime="20201110 08:36:10.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.603" level="INFO">VALUE: [49293894, 49303892, 49313892, 49323892, 49333892, 49343892, 49353892, 49363892, 49373892, 49383892, 49393892, 49403892, 49413892, 49423892, 49433892, 49443892, 49453892, 49463892, 49473892, 49483892, 49493892, 49503892, 49513892, 49523892, 49533892, 49543892, 49553892, 49563892, 49573892, 49583892, 49593892, 49603892, 49613892, 49623892, 49633892, 49643892, 49653892, 49663892, 49673892, 49683892, 49693892, 49703892, 49713892, 49723892, 49733892, 49743892, 49753892, 49763892, 49773892, 49783892, 49793892, 49803892, 49813892, 49823892, 49833892, 49843892, 49853892, 49863892, 49873892, 49883892, 49893892, 49903892, 49913892, 49923892, 49933892, 49943892, 49953892, 49963892, 49973892, 49983892, 49993892, 50003892, 50013892, 50023892, 50033892, 50043892, 50053892, 50063892, 50073892, 50083892, 50093892, 50103892, 50113892, 50123892, 50133892, 50143892, 50153892, 50163892, 50173892, 50183892, 50193892, 50203892, 50213892, 50223892, 50233892, 50243892, 50253892, 50263892, 50273892, 50283892]</msg>
<status status="PASS" starttime="20201110 08:36:10.601" endtime="20201110 08:36:10.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.589" endtime="20201110 08:36:10.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.619" endtime="20201110 08:36:10.914"></status>
</kw>
<msg timestamp="20201110 08:36:10.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020284847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030404889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:10.616" endtime="20201110 08:36:10.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020284847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030404889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:10.918" endtime="20201110 08:36:10.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.926" endtime="20201110 08:36:10.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.610" endtime="20201110 08:36:10.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.606" endtime="20201110 08:36:10.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:10.953" level="INFO">${RESULT} = {'source_diff': [0, 0.010120042, 0.009999361000000002, 0.010001068999999994, 0.010001209000000004, 0.010001069000000001, 0.010001263999999996, 0.010001042000000002, 0.010001179999999998, 0.010001125, ...</msg>
<status status="PASS" starttime="20201110 08:36:10.929" endtime="20201110 08:36:10.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.957" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:10.956" endtime="20201110 08:36:10.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.959" level="INFO">VALUE: 0.020284847</msg>
<status status="PASS" starttime="20201110 08:36:10.958" endtime="20201110 08:36:10.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.954" endtime="20201110 08:36:10.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.965" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:10.964" endtime="20201110 08:36:10.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.967" level="INFO">VALUE: [0.030404889, 0.04040425, 0.050405319, 0.060406528, 0.070407597, 0.080408861, 0.090409903, 0.100411083, 0.110412208, 0.120413375, 0.130414458, 0.140415653, 0.15041675, 0.160417944, 0.170419028, 0.180420222, 0.190421319, 0.200422514, 0.210423583, 0.220424792, 0.230425875, 0.240427097, 0.250428181, 0.260429375, 0.270430472, 0.280431653, 0.29043275, 0.300433958, 0.310435028, 0.320436236, 0.330437319, 0.340438583, 0.350439597, 0.360440806, 0.370441875, 0.380443083, 0.390444167, 0.400445375, 0.410446458, 0.420447653, 0.430448736, 0.440449944, 0.450451028, 0.460452236, 0.470453306, 0.480454514, 0.490455611, 0.500456806, 0.510457931, 0.520459097, 0.530460181, 0.540461375, 0.550462458, 0.560463667, 0.570464736, 0.580465944, 0.590467028, 0.600468264, 0.610469333, 0.620470528, 0.630471611, 0.640472806, 0.650473889, 0.660475097, 0.670476181, 0.680477403, 0.690478472, 0.700479681, 0.71048075, 0.720481958, 0.730483042, 0.740484264, 0.750485389, 0.760486528, 0.770487639, 0.780488819, 0.790489903, 0.800491111, 0.810492181, 0.820493389, 0.830494472, 0.840495694, 0.85049675, 0.860497972, 0.870499042, 0.88050025, 0.890501319, 0.900502528, 0.910503625, 0.920504833, 0.930505903, 0.940507111, 0.950508181, 0.960509389, 0.970510514, 0.980511681, 0.990512806, 1.000513986, 1.010515042, 1.020516278] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:10.966" endtime="20201110 08:36:10.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.961" endtime="20201110 08:36:10.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.970" endtime="20201110 08:36:10.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:10.975" endtime="20201110 08:36:10.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.972" endtime="20201110 08:36:10.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.969" endtime="20201110 08:36:10.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.400" endtime="20201110 08:36:10.995"></status>
</kw>
<msg timestamp="20201110 08:36:10.996" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.004" endtime="20201110 08:36:13.111"></status>
</kw>
<msg timestamp="20201110 08:36:13.112" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51879711, 'start-iter': 1, 'wakeups': [51889829, 51899827, 51909827, 5...</msg>
<status status="PASS" starttime="20201110 08:36:11.002" endtime="20201110 08:36:13.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.118" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51879711, 'start-iter': 1, 'wakeups': [51889829, 51899827, 51909827, 5...</msg>
<status status="PASS" starttime="20201110 08:36:13.115" endtime="20201110 08:36:13.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.121" endtime="20201110 08:36:13.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.000" endtime="20201110 08:36:13.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.998" endtime="20201110 08:36:13.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:13.132" level="INFO">${RESULT} = {'wakeups': [51889829, 51899827, 51909827, 51919827, 51929827, 51939827, 51949827, 51959827, 51969827, 51979827, 51989827, 51999827, 52009827, 52019827, 52029827, 52039827, 52049827, 52059827, 5206982...</msg>
<status status="PASS" starttime="20201110 08:36:13.128" endtime="20201110 08:36:13.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.141" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:13.139" endtime="20201110 08:36:13.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.145" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:13.143" endtime="20201110 08:36:13.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.134" endtime="20201110 08:36:13.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.155" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:13.153" endtime="20201110 08:36:13.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.160" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:13.158" endtime="20201110 08:36:13.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.148" endtime="20201110 08:36:13.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.171" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:13.168" endtime="20201110 08:36:13.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.175" level="INFO">VALUE: 51879711</msg>
<status status="PASS" starttime="20201110 08:36:13.173" endtime="20201110 08:36:13.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.163" endtime="20201110 08:36:13.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.186" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:13.183" endtime="20201110 08:36:13.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.190" level="INFO">VALUE: [51889829, 51899827, 51909827, 51919827, 51929827, 51939827, 51949827, 51959827, 51969827, 51979827, 51989827, 51999827, 52009827, 52019827, 52029827, 52039827, 52049827, 52059827, 52069827, 52079827, 52089827, 52099827, 52109827, 52119827, 52129827, 52139827, 52149827, 52159827, 52169827, 52179827, 52189827, 52199827, 52209827, 52219827, 52229827, 52239827, 52249827, 52259827, 52269827, 52279827, 52289827, 52299827, 52309827, 52319827, 52329827, 52339827, 52349827, 52359827, 52369827, 52379827, 52389827, 52399827, 52409827, 52419827, 52429827, 52439827, 52449827, 52459827, 52469827, 52479827, 52489827, 52499827, 52509827, 52519827, 52529827, 52539827, 52549827, 52559827, 52569827, 52579827, 52589827, 52599827, 52609827, 52619827, 52629827, 52639827, 52649827, 52659827, 52669827, 52679827, 52689827, 52699827, 52709827, 52719827, 52729827, 52739827, 52749827, 52759827, 52769827, 52779827, 52789827, 52799827, 52809827, 52819827, 52829827, 52839827, 52849827, 52859827, 52869827, 52879827]</msg>
<status status="PASS" starttime="20201110 08:36:13.188" endtime="20201110 08:36:13.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.178" endtime="20201110 08:36:13.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.206" endtime="20201110 08:36:13.504"></status>
</kw>
<msg timestamp="20201110 08:36:13.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029777375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:13.203" endtime="20201110 08:36:13.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029777375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:13.508" endtime="20201110 08:36:13.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.515" endtime="20201110 08:36:13.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.197" endtime="20201110 08:36:13.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.194" endtime="20201110 08:36:13.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:13.542" level="INFO">${RESULT} = {'source_diff': [0, 0.010119680999999998, 0.009999403, 0.010001111, 0.010001152999999999, 0.010001097000000007, 0.010001179999999998, 0.010001083999999993, 0.010001207999999998, 0.01000107, 0.01000122...</msg>
<status status="PASS" starttime="20201110 08:36:13.519" endtime="20201110 08:36:13.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.546" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:13.545" endtime="20201110 08:36:13.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.548" level="INFO">VALUE: 0.019657694</msg>
<status status="PASS" starttime="20201110 08:36:13.547" endtime="20201110 08:36:13.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.542" endtime="20201110 08:36:13.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.554" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:13.553" endtime="20201110 08:36:13.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.556" level="INFO">VALUE: [0.029777375, 0.039776778, 0.049777889, 0.059779042, 0.069780139, 0.079781319, 0.089782403, 0.099783611, 0.109784681, 0.119785903, 0.129786972, 0.139788181, 0.149789319, 0.159790444, 0.169791528, 0.179792736, 0.189793806, 0.199795028, 0.209796097, 0.219797292, 0.229798375, 0.239799583, 0.249800653, 0.259801861, 0.269803, 0.279804153, 0.289805222, 0.299806472, 0.309807542, 0.319808708, 0.329809792, 0.339811, 0.349812069, 0.359813292, 0.369814361, 0.379815583, 0.389816639, 0.399817847, 0.409818931, 0.419820139, 0.429821222, 0.439822417, 0.449823514, 0.459824722, 0.469825778, 0.479827, 0.489828083, 0.499829347, 0.509830347, 0.519831569, 0.529832625, 0.539833847, 0.549834917, 0.559836125, 0.569837208, 0.579838417, 0.589839486, 0.599840764, 0.609841778, 0.619842972, 0.629844097, 0.63984525, 0.649846333, 0.659847542, 0.669848625, 0.679849819, 0.689850917, 0.699852153, 0.709853181, 0.719854403, 0.729855472, 0.739856681, 0.749857792, 0.759858958, 0.769860042, 0.779861278, 0.789862319, 0.799863528, 0.809864611, 0.819865819, 0.829866889, 0.839868111, 0.849869181, 0.859870375, 0.869871458, 0.879872694, 0.889873764, 0.899875028, 0.909876042, 0.919877236, 0.929878319, 0.939879514, 0.949880597, 0.959881806, 0.969882903, 0.979884083, 0.989885167, 0.999886389, 1.009887444, 1.019888667] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:13.555" endtime="20201110 08:36:13.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.550" endtime="20201110 08:36:13.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.559" endtime="20201110 08:36:13.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:13.563" endtime="20201110 08:36:13.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.561" endtime="20201110 08:36:13.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.558" endtime="20201110 08:36:13.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.996" endtime="20201110 08:36:13.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.806" endtime="20201110 08:36:13.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.805" endtime="20201110 08:36:13.585"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:13.588" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.597" endtime="20201110 08:36:15.705"></status>
</kw>
<msg timestamp="20201110 08:36:15.707" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54472518, 'start-iter': 1, 'wakeups': [54482664, 54492659, 54502658, 5...</msg>
<status status="PASS" starttime="20201110 08:36:13.595" endtime="20201110 08:36:15.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.713" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54472518, 'start-iter': 1, 'wakeups': [54482664, 54492659, 54502658, 5...</msg>
<status status="PASS" starttime="20201110 08:36:15.709" endtime="20201110 08:36:15.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.715" endtime="20201110 08:36:15.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.592" endtime="20201110 08:36:15.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.590" endtime="20201110 08:36:15.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:15.727" level="INFO">${RESULT} = {'wakeups': [54482664, 54492659, 54502658, 54512658, 54522658, 54532658, 54542658, 54552658, 54562658, 54572658, 54582658, 54592658, 54602658, 54612658, 54622658, 54632658, 54642658, 54652658, 5466265...</msg>
<status status="PASS" starttime="20201110 08:36:15.723" endtime="20201110 08:36:15.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.736" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:15.734" endtime="20201110 08:36:15.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.740" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:15.738" endtime="20201110 08:36:15.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.729" endtime="20201110 08:36:15.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.751" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:15.749" endtime="20201110 08:36:15.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.756" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:15.754" endtime="20201110 08:36:15.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.744" endtime="20201110 08:36:15.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.767" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:15.764" endtime="20201110 08:36:15.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.772" level="INFO">VALUE: 54472518</msg>
<status status="PASS" starttime="20201110 08:36:15.769" endtime="20201110 08:36:15.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.759" endtime="20201110 08:36:15.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.779" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:15.777" endtime="20201110 08:36:15.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.786" level="INFO">VALUE: [54482664, 54492659, 54502658, 54512658, 54522658, 54532658, 54542658, 54552658, 54562658, 54572658, 54582658, 54592658, 54602658, 54612658, 54622658, 54632658, 54642658, 54652658, 54662658, 54672658, 54682658, 54692658, 54702658, 54712658, 54722658, 54732658, 54742658, 54752658, 54762658, 54772658, 54782658, 54792658, 54802658, 54812658, 54822658, 54832658, 54842658, 54852658, 54862658, 54872658, 54882658, 54892658, 54902658, 54912658, 54922658, 54932658, 54942658, 54952658, 54962658, 54972658, 54982658, 54992658, 55002658, 55012658, 55022658, 55032658, 55042658, 55052658, 55062658, 55072658, 55082658, 55092658, 55102658, 55112658, 55122658, 55132658, 55142658, 55152658, 55162658, 55172658, 55182658, 55192658, 55202658, 55212658, 55222658, 55232658, 55242658, 55252658, 55262658, 55272658, 55282658, 55292658, 55302658, 55312658, 55322658, 55332658, 55342658, 55352658, 55362658, 55372658, 55382658, 55392658, 55402658, 55412658, 55422658, 55432658, 55442658, 55452658, 55462658, 55472658]</msg>
<status status="PASS" starttime="20201110 08:36:15.780" endtime="20201110 08:36:15.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.775" endtime="20201110 08:36:15.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.793" endtime="20201110 08:36:16.085"></status>
</kw>
<msg timestamp="20201110 08:36:16.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033740069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:15.792" endtime="20201110 08:36:16.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033740069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.089" endtime="20201110 08:36:16.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.097" endtime="20201110 08:36:16.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.789" endtime="20201110 08:36:16.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.787" endtime="20201110 08:36:16.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:16.125" level="INFO">${RESULT} = {'source_diff': [0, 0.010147526999999996, 0.009996639000000002, 0.010000084, 0.010001193999999998, 0.010001083000000008, 0.01000119499999999, 0.010001083000000008, 0.01000119499999999, 0.0100010830000...</msg>
<status status="PASS" starttime="20201110 08:36:16.101" endtime="20201110 08:36:16.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.130" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:16.129" endtime="20201110 08:36:16.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.132" level="INFO">VALUE: 0.023592542</msg>
<status status="PASS" starttime="20201110 08:36:16.131" endtime="20201110 08:36:16.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.126" endtime="20201110 08:36:16.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.138" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:16.137" endtime="20201110 08:36:16.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.140" level="INFO">VALUE: [0.033740069, 0.043736708, 0.053736792, 0.063737986, 0.073739069, 0.083740264, 0.093741347, 0.103742542, 0.113743625, 0.123744847, 0.133745944, 0.143747125, 0.15374825, 0.163749389, 0.173750514, 0.183751667, 0.193752764, 0.203753958, 0.213755028, 0.22375625, 0.233757306, 0.243758514, 0.253759597, 0.263760792, 0.273761875, 0.283763083, 0.293764153, 0.303765361, 0.313766444, 0.323767681, 0.333768722, 0.343769944, 0.353771014, 0.363772222, 0.373773347, 0.3837745, 0.393775569, 0.403776778, 0.413777847, 0.423779056, 0.433780208, 0.443781361, 0.453782458, 0.463783625, 0.473784708, 0.483785917, 0.493786986, 0.503788208, 0.513789264, 0.523790472, 0.533791611, 0.54379275, 0.553793847, 0.563795042, 0.573796111, 0.583797319, 0.593798403, 0.603799625, 0.613800681, 0.623801944, 0.633802958, 0.643804181, 0.65380525, 0.663806486, 0.673807528, 0.683808736, 0.693809819, 0.703811028, 0.713812111, 0.723813347, 0.733814389, 0.743815625, 0.753816667, 0.763817889, 0.773818944, 0.783820167, 0.793821222, 0.803822444, 0.813823514, 0.823824722, 0.833825806, 0.843827014, 0.853828069, 0.863829278, 0.873830361, 0.883831569, 0.893832639, 0.903833847, 0.913834931, 0.923836125, 0.933837236, 0.943838431, 0.9538395, 0.963840694, 0.973841806, 0.983843, 0.993844069, 1.003845292, 1.013846333, 1.023847556] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:16.139" endtime="20201110 08:36:16.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.134" endtime="20201110 08:36:16.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.143" endtime="20201110 08:36:16.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:16.147" endtime="20201110 08:36:16.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.145" endtime="20201110 08:36:16.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.142" endtime="20201110 08:36:16.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.588" endtime="20201110 08:36:16.168"></status>
</kw>
<msg timestamp="20201110 08:36:16.168" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.178" endtime="20201110 08:36:18.286"></status>
</kw>
<msg timestamp="20201110 08:36:18.287" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57053200, 'start-iter': 1, 'wakeups': [57063346, 57073341, 57083340, 5...</msg>
<status status="PASS" starttime="20201110 08:36:16.176" endtime="20201110 08:36:18.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.293" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57053200, 'start-iter': 1, 'wakeups': [57063346, 57073341, 57083340, 5...</msg>
<status status="PASS" starttime="20201110 08:36:18.289" endtime="20201110 08:36:18.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.296" endtime="20201110 08:36:18.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.173" endtime="20201110 08:36:18.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.170" endtime="20201110 08:36:18.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:18.309" level="INFO">${RESULT} = {'wakeups': [57063346, 57073341, 57083340, 57093340, 57103340, 57113340, 57123340, 57133340, 57143340, 57153340, 57163340, 57173340, 57183340, 57193340, 57203340, 57213340, 57223340, 57233340, 5724334...</msg>
<status status="PASS" starttime="20201110 08:36:18.305" endtime="20201110 08:36:18.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.318" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:18.316" endtime="20201110 08:36:18.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.323" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:18.321" endtime="20201110 08:36:18.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.311" endtime="20201110 08:36:18.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.334" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:18.331" endtime="20201110 08:36:18.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.337" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:18.336" endtime="20201110 08:36:18.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.326" endtime="20201110 08:36:18.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.342" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:18.341" endtime="20201110 08:36:18.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.344" level="INFO">VALUE: 57053200</msg>
<status status="PASS" starttime="20201110 08:36:18.343" endtime="20201110 08:36:18.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.338" endtime="20201110 08:36:18.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.349" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:18.348" endtime="20201110 08:36:18.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.351" level="INFO">VALUE: [57063346, 57073341, 57083340, 57093340, 57103340, 57113340, 57123340, 57133340, 57143340, 57153340, 57163340, 57173340, 57183340, 57193340, 57203340, 57213340, 57223340, 57233340, 57243340, 57253340, 57263340, 57273340, 57283340, 57293340, 57303340, 57313340, 57323340, 57333340, 57343340, 57353340, 57363340, 57373340, 57383340, 57393340, 57403340, 57413340, 57423340, 57433340, 57443340, 57453340, 57463340, 57473340, 57483340, 57493340, 57503340, 57513340, 57523340, 57533340, 57543340, 57553340, 57563340, 57573340, 57583340, 57593340, 57603340, 57613340, 57623340, 57633340, 57643340, 57653340, 57663340, 57673340, 57683340, 57693340, 57703340, 57713340, 57723340, 57733340, 57743340, 57753340, 57763340, 57773340, 57783340, 57793340, 57803340, 57813340, 57823340, 57833340, 57843340, 57853340, 57863340, 57873340, 57883340, 57893340, 57903340, 57913340, 57923340, 57933340, 57943340, 57953340, 57963340, 57973340, 57983340, 57993340, 58003340, 58013340, 58023340, 58033340, 58043340, 58053340]</msg>
<status status="PASS" starttime="20201110 08:36:18.350" endtime="20201110 08:36:18.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.345" endtime="20201110 08:36:18.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.359" endtime="20201110 08:36:18.658"></status>
</kw>
<msg timestamp="20201110 08:36:18.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021199611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031347139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:18.358" endtime="20201110 08:36:18.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021199611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031347139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:18.667" endtime="20201110 08:36:18.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.681" endtime="20201110 08:36:18.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.355" endtime="20201110 08:36:18.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.353" endtime="20201110 08:36:18.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:18.712" level="INFO">${RESULT} = {'source_diff': [0, 0.010147528000000003, 0.009996708, 0.010000084, 0.010001193999999998, 0.010001069000000001, 0.010001208999999997, 0.010001069000000001, 0.010001208999999997, 0.010001083000000008, ...</msg>
<status status="PASS" starttime="20201110 08:36:18.685" endtime="20201110 08:36:18.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.717" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:18.716" endtime="20201110 08:36:18.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.719" level="INFO">VALUE: 0.021199611</msg>
<status status="PASS" starttime="20201110 08:36:18.718" endtime="20201110 08:36:18.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.713" endtime="20201110 08:36:18.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.725" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:18.723" endtime="20201110 08:36:18.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.727" level="INFO">VALUE: [0.031347139, 0.041343847, 0.051343931, 0.061345125, 0.071346194, 0.081347403, 0.091348472, 0.101349681, 0.111350764, 0.121351986, 0.131353042, 0.141354236, 0.151355306, 0.161356597, 0.171357597, 0.181358833, 0.191359875, 0.201361069, 0.211362153, 0.221363347, 0.231364431, 0.241365681, 0.251366708, 0.261367931, 0.271369, 0.281370208, 0.291371264, 0.301372472, 0.311373569, 0.32137475, 0.331375833, 0.341377042, 0.351378111, 0.361379319, 0.371380389, 0.381381597, 0.391382667, 0.401383875, 0.411384958, 0.421386153, 0.43138725, 0.441388444, 0.451389514, 0.461390722, 0.471391806, 0.481393, 0.491394083, 0.501395278, 0.511396375, 0.521397556, 0.531398653, 0.541399847, 0.551400917, 0.561402125, 0.571403194, 0.581404417, 0.591405486, 0.601406681, 0.611407833, 0.621408958, 0.631410042, 0.641411278, 0.651412333, 0.661413528, 0.671414639, 0.681415806, 0.691416903, 0.701418083, 0.711419167, 0.721420361, 0.731421444, 0.741422667, 0.751423722, 0.761424931, 0.771426, 0.781427208, 0.791428306, 0.8014295, 0.811430597, 0.821431792, 0.831432889, 0.841434111, 0.851435208, 0.8614365, 0.8714375, 0.881438722, 0.891439806, 0.901441028, 0.911442111, 0.921443347, 0.931444431, 0.941445639, 0.951446736, 0.961447958, 0.971449042, 0.981450306, 0.991451361, 1.001452611, 1.011453667, 1.021454861] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:18.726" endtime="20201110 08:36:18.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.720" endtime="20201110 08:36:18.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.730" endtime="20201110 08:36:18.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:18.734" endtime="20201110 08:36:18.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.732" endtime="20201110 08:36:18.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.728" endtime="20201110 08:36:18.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.169" endtime="20201110 08:36:18.755"></status>
</kw>
<msg timestamp="20201110 08:36:18.755" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.763" endtime="20201110 08:36:20.871"></status>
</kw>
<msg timestamp="20201110 08:36:20.873" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59638631, 'start-iter': 1, 'wakeups': [59648777, 59658772, 59668771, 5...</msg>
<status status="PASS" starttime="20201110 08:36:18.761" endtime="20201110 08:36:20.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.886" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59638631, 'start-iter': 1, 'wakeups': [59648777, 59658772, 59668771, 5...</msg>
<status status="PASS" starttime="20201110 08:36:20.881" endtime="20201110 08:36:20.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.888" endtime="20201110 08:36:20.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.759" endtime="20201110 08:36:20.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.757" endtime="20201110 08:36:20.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:20.900" level="INFO">${RESULT} = {'wakeups': [59648777, 59658772, 59668771, 59678771, 59688771, 59698771, 59708771, 59718771, 59728771, 59738771, 59748771, 59758771, 59768771, 59778771, 59788771, 59798771, 59808771, 59818771, 5982877...</msg>
<status status="PASS" starttime="20201110 08:36:20.896" endtime="20201110 08:36:20.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.911" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:20.907" endtime="20201110 08:36:20.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.916" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:20.914" endtime="20201110 08:36:20.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.902" endtime="20201110 08:36:20.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.927" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:20.924" endtime="20201110 08:36:20.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.931" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:20.929" endtime="20201110 08:36:20.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.919" endtime="20201110 08:36:20.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.942" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:20.940" endtime="20201110 08:36:20.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.946" level="INFO">VALUE: 59638631</msg>
<status status="PASS" starttime="20201110 08:36:20.944" endtime="20201110 08:36:20.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.934" endtime="20201110 08:36:20.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.957" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:20.955" endtime="20201110 08:36:20.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.962" level="INFO">VALUE: [59648777, 59658772, 59668771, 59678771, 59688771, 59698771, 59708771, 59718771, 59728771, 59738771, 59748771, 59758771, 59768771, 59778771, 59788771, 59798771, 59808771, 59818771, 59828771, 59838771, 59848771, 59858771, 59868771, 59878771, 59888771, 59898771, 59908771, 59918771, 59928771, 59938771, 59948771, 59958771, 59968771, 59978771, 59988771, 59998771, 60008771, 60018771, 60028771, 60038771, 60048771, 60058771, 60068771, 60078771, 60088771, 60098771, 60108771, 60118771, 60128771, 60138771, 60148771, 60158771, 60168771, 60178771, 60188771, 60198771, 60208771, 60218771, 60228771, 60238771, 60248771, 60258771, 60268771, 60278771, 60288771, 60298771, 60308771, 60318771, 60328771, 60338771, 60348771, 60358771, 60368771, 60378771, 60388771, 60398771, 60408771, 60418771, 60428771, 60438771, 60448771, 60458771, 60468771, 60478771, 60488771, 60498771, 60508771, 60518771, 60528771, 60538771, 60548771, 60558771, 60568771, 60578771, 60588771, 60598771, 60608771, 60618771, 60628771, 60638771]</msg>
<status status="PASS" starttime="20201110 08:36:20.960" endtime="20201110 08:36:20.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.950" endtime="20201110 08:36:20.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.977" endtime="20201110 08:36:21.269"></status>
</kw>
<msg timestamp="20201110 08:36:21.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030012764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:20.975" endtime="20201110 08:36:21.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030012764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:21.273" endtime="20201110 08:36:21.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.281" endtime="20201110 08:36:21.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.969" endtime="20201110 08:36:21.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.966" endtime="20201110 08:36:21.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:21.309" level="INFO">${RESULT} = {'source_diff': [0, 0.010147195000000001, 0.009996721999999996, 0.010000083, 0.010001223000000004, 0.010001083000000001, 0.010001263999999996, 0.010001042000000002, 0.010001222000000004, 0.010001125, ...</msg>
<status status="PASS" starttime="20201110 08:36:21.285" endtime="20201110 08:36:21.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.314" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:21.313" endtime="20201110 08:36:21.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.316" level="INFO">VALUE: 0.019865569</msg>
<status status="PASS" starttime="20201110 08:36:21.315" endtime="20201110 08:36:21.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.310" endtime="20201110 08:36:21.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.322" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:21.321" endtime="20201110 08:36:21.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.324" level="INFO">VALUE: [0.030012764, 0.040009486, 0.050009569, 0.060010792, 0.070011875, 0.080013139, 0.090014181, 0.100015403, 0.110016528, 0.120017708, 0.130018792, 0.140019986, 0.150021069, 0.160022292, 0.170023375, 0.180024597, 0.190025681, 0.200026903, 0.210027986, 0.220029194, 0.230030278, 0.240031514, 0.250032583, 0.260033861, 0.270034889, 0.280036139, 0.290037194, 0.300038403, 0.310039486, 0.320040708, 0.330041792, 0.340043028, 0.350044111, 0.360045333, 0.370046417, 0.380047625, 0.390048708, 0.400049917, 0.410051, 0.420052222, 0.430053319, 0.440054528, 0.450055611, 0.460056819, 0.470057931, 0.480059125, 0.490060222, 0.500061444, 0.510062528, 0.520063736, 0.530064819, 0.540066056, 0.550067181, 0.560068347, 0.570069444, 0.580070667, 0.59007175, 0.600073014, 0.610074069, 0.62007525, 0.630076375, 0.640077569, 0.650078653, 0.660079861, 0.670080958, 0.680082153, 0.690083278, 0.700084458, 0.710085542, 0.720086778, 0.730087847, 0.740089083, 0.750090236, 0.760091375, 0.770092486, 0.780093681, 0.790094778, 0.800095986, 0.810097056, 0.820098292, 0.830099361, 0.840100583, 0.850101681, 0.860102889, 0.870103972, 0.880105181, 0.890106306, 0.900107486, 0.910108569, 0.920109792, 0.930110931, 0.940112153, 0.950113194, 0.960114403, 0.9701155, 0.980116708, 0.990117792, 1.000119014, 1.010120083, 1.020121306] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:21.323" endtime="20201110 08:36:21.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.318" endtime="20201110 08:36:21.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.327" endtime="20201110 08:36:21.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:21.331" endtime="20201110 08:36:21.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.329" endtime="20201110 08:36:21.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.326" endtime="20201110 08:36:21.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.755" endtime="20201110 08:36:21.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.586" endtime="20201110 08:36:21.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.585" endtime="20201110 08:36:21.352"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:21.355" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.363" endtime="20201110 08:36:23.471"></status>
</kw>
<msg timestamp="20201110 08:36:23.473" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62238562, 'start-iter': 1, 'wakeups': [62248733, 62258732, 62268732, 6...</msg>
<status status="PASS" starttime="20201110 08:36:21.361" endtime="20201110 08:36:23.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.479" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62238562, 'start-iter': 1, 'wakeups': [62248733, 62258732, 62268732, 6...</msg>
<status status="PASS" starttime="20201110 08:36:23.475" endtime="20201110 08:36:23.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.481" endtime="20201110 08:36:23.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.359" endtime="20201110 08:36:23.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.357" endtime="20201110 08:36:23.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:23.494" level="INFO">${RESULT} = {'wakeups': [62248733, 62258732, 62268732, 62278732, 62288732, 62298732, 62308732, 62318732, 62328732, 62338732, 62348732, 62358732, 62368732, 62378732, 62388732, 62398732, 62408732, 62418732, 6242873...</msg>
<status status="PASS" starttime="20201110 08:36:23.489" endtime="20201110 08:36:23.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.503" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:23.501" endtime="20201110 08:36:23.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.507" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:23.505" endtime="20201110 08:36:23.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.496" endtime="20201110 08:36:23.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.518" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:23.516" endtime="20201110 08:36:23.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.523" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:23.521" endtime="20201110 08:36:23.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.511" endtime="20201110 08:36:23.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.537" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:23.535" endtime="20201110 08:36:23.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.542" level="INFO">VALUE: 62238562</msg>
<status status="PASS" starttime="20201110 08:36:23.540" endtime="20201110 08:36:23.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.527" endtime="20201110 08:36:23.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.549" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:23.548" endtime="20201110 08:36:23.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.551" level="INFO">VALUE: [62248733, 62258732, 62268732, 62278732, 62288732, 62298732, 62308732, 62318732, 62328732, 62338732, 62348732, 62358732, 62368732, 62378732, 62388732, 62398732, 62408732, 62418732, 62428732, 62438732, 62448732, 62458732, 62468732, 62478732, 62488732, 62498732, 62508732, 62518732, 62528732, 62538732, 62548732, 62558732, 62568732, 62578732, 62588732, 62598732, 62608732, 62618732, 62628732, 62638732, 62648732, 62658732, 62668732, 62678732, 62688732, 62698732, 62708732, 62718732, 62728732, 62738732, 62748732, 62758732, 62768732, 62778732, 62788732, 62798732, 62808732, 62818732, 62828732, 62838732, 62848732, 62858732, 62868732, 62878732, 62888732, 62898732, 62908732, 62918732, 62928732, 62938732, 62948732, 62958732, 62968732, 62978732, 62988732, 62998732, 63008732, 63018732, 63028732, 63038732, 63048732, 63058732, 63068732, 63078732, 63088732, 63098732, 63108732, 63118732, 63128732, 63138732, 63148732, 63158732, 63168732, 63178732, 63188732, 63198732, 63208732, 63218732, 63228732, 63238732]</msg>
<status status="PASS" starttime="20201110 08:36:23.550" endtime="20201110 08:36:23.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.545" endtime="20201110 08:36:23.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.559" endtime="20201110 08:36:23.849"></status>
</kw>
<msg timestamp="20201110 08:36:23.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022839403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033012583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:23.558" endtime="20201110 08:36:23.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022839403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033012583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:23.853" endtime="20201110 08:36:23.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.861" endtime="20201110 08:36:23.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.555" endtime="20201110 08:36:23.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.553" endtime="20201110 08:36:23.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:23.888" level="INFO">${RESULT} = {'source_diff': [0, 0.010173179999999997, 0.00999957, 0.010001055000000002, 0.010001209000000004, 0.010001082999999994, 0.010001207999999998, 0.010001084000000007, 0.010001207999999998, 0.010001097, 0...</msg>
<status status="PASS" starttime="20201110 08:36:23.865" endtime="20201110 08:36:23.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.893" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:23.892" endtime="20201110 08:36:23.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.895" level="INFO">VALUE: 0.022839403</msg>
<status status="PASS" starttime="20201110 08:36:23.894" endtime="20201110 08:36:23.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.890" endtime="20201110 08:36:23.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.902" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:23.901" endtime="20201110 08:36:23.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.904" level="INFO">VALUE: [0.033012583, 0.043012153, 0.053013208, 0.063014417, 0.0730155, 0.083016708, 0.093017792, 0.103019, 0.113020097, 0.123021306, 0.133022389, 0.143023611, 0.153024708, 0.163025903, 0.173026986, 0.183028194, 0.193029306, 0.203030583, 0.213031597, 0.223032819, 0.233033889, 0.243035125, 0.253036208, 0.263037403, 0.2730385, 0.283039694, 0.293040792, 0.303042014, 0.313043097, 0.323044306, 0.333045403, 0.343046667, 0.353047694, 0.363048903, 0.373049986, 0.383051222, 0.393052292, 0.4030535, 0.413054597, 0.423055806, 0.433056903, 0.443058111, 0.453059194, 0.463060403, 0.4730615, 0.483062722, 0.493063792, 0.503065028, 0.513066111, 0.523067306, 0.533068417, 0.543069611, 0.553070708, 0.563071917, 0.573073, 0.583074222, 0.593075347, 0.603076528, 0.613077597, 0.623078819, 0.633079903, 0.643081111, 0.653082194, 0.663083444, 0.673084556, 0.683085778, 0.693086806, 0.703088042, 0.713089097, 0.723090319, 0.733091403, 0.743092611, 0.753093708, 0.763094917, 0.773096, 0.783097222, 0.793098319, 0.803099528, 0.813100639, 0.823101819, 0.833102903, 0.843104208, 0.853105208, 0.863106472, 0.873107528, 0.883108736, 0.893109806, 0.903111028, 0.913112111, 0.923113333, 0.933114486, 0.943115625, 0.953116708, 0.963117931, 0.973119014, 0.983120222, 0.993121319, 1.003122569, 1.013123611, 1.023124847] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:23.903" endtime="20201110 08:36:23.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.898" endtime="20201110 08:36:23.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.907" endtime="20201110 08:36:23.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:23.911" endtime="20201110 08:36:23.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.909" endtime="20201110 08:36:23.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.906" endtime="20201110 08:36:23.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.355" endtime="20201110 08:36:23.932"></status>
</kw>
<msg timestamp="20201110 08:36:23.932" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.940" endtime="20201110 08:36:26.048"></status>
</kw>
<msg timestamp="20201110 08:36:26.050" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64815621, 'start-iter': 1, 'wakeups': [64825793, 64835791, 64845791, 6...</msg>
<status status="PASS" starttime="20201110 08:36:23.939" endtime="20201110 08:36:26.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.056" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64815621, 'start-iter': 1, 'wakeups': [64825793, 64835791, 64845791, 6...</msg>
<status status="PASS" starttime="20201110 08:36:26.052" endtime="20201110 08:36:26.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.058" endtime="20201110 08:36:26.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.936" endtime="20201110 08:36:26.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.934" endtime="20201110 08:36:26.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:26.070" level="INFO">${RESULT} = {'wakeups': [64825793, 64835791, 64845791, 64855791, 64865791, 64875791, 64885791, 64895791, 64905791, 64915791, 64925791, 64935791, 64945791, 64955791, 64965791, 64975791, 64985791, 64995791, 6500579...</msg>
<status status="PASS" starttime="20201110 08:36:26.066" endtime="20201110 08:36:26.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.079" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:26.077" endtime="20201110 08:36:26.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.084" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:26.082" endtime="20201110 08:36:26.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.072" endtime="20201110 08:36:26.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.104" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:26.101" endtime="20201110 08:36:26.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.108" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:26.106" endtime="20201110 08:36:26.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.096" endtime="20201110 08:36:26.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.119" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:26.117" endtime="20201110 08:36:26.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.124" level="INFO">VALUE: 64815621</msg>
<status status="PASS" starttime="20201110 08:36:26.122" endtime="20201110 08:36:26.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.111" endtime="20201110 08:36:26.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.136" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:26.132" endtime="20201110 08:36:26.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.142" level="INFO">VALUE: [64825793, 64835791, 64845791, 64855791, 64865791, 64875791, 64885791, 64895791, 64905791, 64915791, 64925791, 64935791, 64945791, 64955791, 64965791, 64975791, 64985791, 64995791, 65005791, 65015791, 65025791, 65035791, 65045791, 65055791, 65065791, 65075791, 65085791, 65095791, 65105791, 65115791, 65125791, 65135791, 65145791, 65155791, 65165791, 65175791, 65185791, 65195791, 65205791, 65215791, 65225791, 65235791, 65245791, 65255791, 65265791, 65275791, 65285791, 65295791, 65305791, 65315791, 65325791, 65335791, 65345791, 65355791, 65365791, 65375791, 65385791, 65395791, 65405791, 65415791, 65425791, 65435791, 65445791, 65455791, 65465791, 65475791, 65485791, 65495791, 65505791, 65515791, 65525791, 65535791, 65545791, 65555791, 65565791, 65575791, 65585791, 65595791, 65605791, 65615791, 65625791, 65635791, 65645791, 65655791, 65665791, 65675791, 65685791, 65695791, 65705791, 65715791, 65725791, 65735791, 65745791, 65755791, 65765791, 65775791, 65785791, 65795791, 65805791, 65815791]</msg>
<status status="PASS" starttime="20201110 08:36:26.139" endtime="20201110 08:36:26.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.127" endtime="20201110 08:36:26.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.158" endtime="20201110 08:36:26.456"></status>
</kw>
<msg timestamp="20201110 08:36:26.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019755847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029929778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:26.155" endtime="20201110 08:36:26.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019755847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029929778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:26.460" endtime="20201110 08:36:26.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.467" endtime="20201110 08:36:26.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.149" endtime="20201110 08:36:26.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.145" endtime="20201110 08:36:26.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:26.495" level="INFO">${RESULT} = {'source_diff': [0, 0.010173931, 0.009998457999999998, 0.01000107, 0.010001207999999998, 0.010001083000000001, 0.010001222000000004, 0.01000107, 0.010001207999999998, 0.010001083999999993, 0.010001222...</msg>
<status status="PASS" starttime="20201110 08:36:26.471" endtime="20201110 08:36:26.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.499" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:26.498" endtime="20201110 08:36:26.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.501" level="INFO">VALUE: 0.019755847</msg>
<status status="PASS" starttime="20201110 08:36:26.500" endtime="20201110 08:36:26.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.496" endtime="20201110 08:36:26.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.507" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:26.506" endtime="20201110 08:36:26.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.510" level="INFO">VALUE: [0.029929778, 0.039928236, 0.049929306, 0.059930514, 0.069931597, 0.079932819, 0.089933889, 0.099935097, 0.109936181, 0.119937403, 0.1299385, 0.139939694, 0.149940778, 0.159942, 0.169943083, 0.179944306, 0.189945375, 0.199946597, 0.209947667, 0.219948875, 0.229949972, 0.239951181, 0.249952292, 0.259953472, 0.269954556, 0.279955778, 0.289956861, 0.299958111, 0.309959153, 0.319960375, 0.329961514, 0.339962667, 0.349963764, 0.359964986, 0.369966083, 0.379967264, 0.389968361, 0.399969569, 0.409970653, 0.419971861, 0.429973, 0.439974167, 0.449975292, 0.459976458, 0.469977542, 0.479978764, 0.489979861, 0.499981056, 0.509982153, 0.519983347, 0.529984444, 0.539985667, 0.549986736, 0.559987986, 0.569989042, 0.57999025, 0.589991375, 0.599992597, 0.609993653, 0.619994861, 0.629995931, 0.639997153, 0.64999825, 0.659999444, 0.670000528, 0.68000175, 0.690002833, 0.700004056, 0.710005125, 0.720006333, 0.730007431, 0.740008653, 0.750009722, 0.760010931, 0.770012014, 0.780013236, 0.790014333, 0.800015542, 0.810016611, 0.820017833, 0.830018931, 0.840020139, 0.850021222, 0.860022514, 0.870023528, 0.880024736, 0.890025806, 0.900027028, 0.910028111, 0.920029319, 0.930030403, 0.940031639, 0.950032708, 0.960033917, 0.970035, 0.980036236, 0.990037306, 1.000038569, 1.010039597, 1.020040833] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:26.508" endtime="20201110 08:36:26.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.503" endtime="20201110 08:36:26.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.513" endtime="20201110 08:36:26.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:26.518" endtime="20201110 08:36:26.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.515" endtime="20201110 08:36:26.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.511" endtime="20201110 08:36:26.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.933" endtime="20201110 08:36:26.539"></status>
</kw>
<msg timestamp="20201110 08:36:26.539" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.547" endtime="20201110 08:36:28.655"></status>
</kw>
<msg timestamp="20201110 08:36:28.656" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67422927, 'start-iter': 1, 'wakeups': [67433099, 67443097, 67453097, 6...</msg>
<status status="PASS" starttime="20201110 08:36:26.546" endtime="20201110 08:36:28.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.663" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67422927, 'start-iter': 1, 'wakeups': [67433099, 67443097, 67453097, 6...</msg>
<status status="PASS" starttime="20201110 08:36:28.659" endtime="20201110 08:36:28.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.666" endtime="20201110 08:36:28.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.543" endtime="20201110 08:36:28.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.541" endtime="20201110 08:36:28.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:28.677" level="INFO">${RESULT} = {'wakeups': [67433099, 67443097, 67453097, 67463097, 67473097, 67483097, 67493097, 67503097, 67513097, 67523097, 67533097, 67543097, 67553097, 67563097, 67573097, 67583097, 67593097, 67603097, 6761309...</msg>
<status status="PASS" starttime="20201110 08:36:28.673" endtime="20201110 08:36:28.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.686" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:28.684" endtime="20201110 08:36:28.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.691" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:28.689" endtime="20201110 08:36:28.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.679" endtime="20201110 08:36:28.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.702" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:28.700" endtime="20201110 08:36:28.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.706" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:28.704" endtime="20201110 08:36:28.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.694" endtime="20201110 08:36:28.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.718" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:28.715" endtime="20201110 08:36:28.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.722" level="INFO">VALUE: 67422927</msg>
<status status="PASS" starttime="20201110 08:36:28.720" endtime="20201110 08:36:28.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.710" endtime="20201110 08:36:28.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.733" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:28.731" endtime="20201110 08:36:28.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.738" level="INFO">VALUE: [67433099, 67443097, 67453097, 67463097, 67473097, 67483097, 67493097, 67503097, 67513097, 67523097, 67533097, 67543097, 67553097, 67563097, 67573097, 67583097, 67593097, 67603097, 67613097, 67623097, 67633097, 67643097, 67653097, 67663097, 67673097, 67683097, 67693097, 67703097, 67713097, 67723097, 67733097, 67743097, 67753097, 67763097, 67773097, 67783097, 67793097, 67803097, 67813097, 67823097, 67833097, 67843097, 67853097, 67863097, 67873097, 67883097, 67893097, 67903097, 67913097, 67923097, 67933097, 67943097, 67953097, 67963097, 67973097, 67983097, 67993097, 68003097, 68013097, 68023097, 68033097, 68043097, 68053097, 68063097, 68073097, 68083097, 68093097, 68103097, 68113097, 68123097, 68133097, 68143097, 68153097, 68163097, 68173097, 68183097, 68193097, 68203097, 68213097, 68223097, 68233097, 68243097, 68253097, 68263097, 68273097, 68283097, 68293097, 68303097, 68313097, 68323097, 68333097, 68343097, 68353097, 68363097, 68373097, 68383097, 68393097, 68403097, 68413097, 68423097]</msg>
<status status="PASS" starttime="20201110 08:36:28.736" endtime="20201110 08:36:28.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.726" endtime="20201110 08:36:28.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.755" endtime="20201110 08:36:29.049"></status>
</kw>
<msg timestamp="20201110 08:36:29.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019972667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030146597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:28.751" endtime="20201110 08:36:29.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019972667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030146597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:29.053" endtime="20201110 08:36:29.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.061" endtime="20201110 08:36:29.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.746" endtime="20201110 08:36:29.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.742" endtime="20201110 08:36:29.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:29.088" level="INFO">${RESULT} = {'source_diff': [0, 0.010173930000000001, 0.009998444999999998, 0.010001111, 0.010001208000000004, 0.010001056000000001, 0.010001207999999998, 0.010001082999999994, 0.010001208999999997, 0.01000108300...</msg>
<status status="PASS" starttime="20201110 08:36:29.065" endtime="20201110 08:36:29.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.093" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:29.092" endtime="20201110 08:36:29.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.095" level="INFO">VALUE: 0.019972667</msg>
<status status="PASS" starttime="20201110 08:36:29.094" endtime="20201110 08:36:29.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.089" endtime="20201110 08:36:29.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.101" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:29.100" endtime="20201110 08:36:29.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.103" level="INFO">VALUE: [0.030146597, 0.040145042, 0.050146153, 0.060147361, 0.070148417, 0.080149625, 0.090150708, 0.100151917, 0.110153, 0.120154222, 0.130155319, 0.140156514, 0.150157597, 0.160158819, 0.170159889, 0.180161097, 0.190162181, 0.200163486, 0.2101645, 0.220165694, 0.230166778, 0.240167986, 0.250169083, 0.260170292, 0.270171389, 0.280172583, 0.290173667, 0.300174889, 0.310175972, 0.320177181, 0.330178264, 0.340179472, 0.350180556, 0.360181833, 0.370182861, 0.380184069, 0.390185153, 0.400186361, 0.410187458, 0.420188667, 0.43018975, 0.440190958, 0.450192056, 0.460193264, 0.470194347, 0.480195639, 0.490196639, 0.500197861, 0.510198958, 0.520200153, 0.530201236, 0.540202444, 0.550203528, 0.56020475, 0.570205833, 0.580207056, 0.590208125, 0.600209333, 0.610210431, 0.620211639, 0.630212722, 0.640213944, 0.650215028, 0.660216236, 0.670217403, 0.680218542, 0.690219611, 0.700220833, 0.710221903, 0.720223139, 0.730224222, 0.740225444, 0.7502265, 0.760227736, 0.770228861, 0.780230014, 0.790231097, 0.800232306, 0.810233403, 0.820234625, 0.830235708, 0.840236931, 0.850237986, 0.860239264, 0.870240292, 0.8802415, 0.890242583, 0.900243792, 0.910244889, 0.920246139, 0.930247181, 0.940248403, 0.950249486, 0.96025075, 0.970251833, 0.980252986, 0.990254083, 1.000255278, 1.010256444, 1.020257583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:29.102" endtime="20201110 08:36:29.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.097" endtime="20201110 08:36:29.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.107" endtime="20201110 08:36:29.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:29.110" endtime="20201110 08:36:29.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.109" endtime="20201110 08:36:29.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.105" endtime="20201110 08:36:29.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.540" endtime="20201110 08:36:29.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.353" endtime="20201110 08:36:29.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.352" endtime="20201110 08:36:29.131"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:29.134" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.143" endtime="20201110 08:36:31.252"></status>
</kw>
<msg timestamp="20201110 08:36:31.254" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70018719, 'start-iter': 1, 'wakeups': [70028920, 70038918, 70048918,...</msg>
<status status="PASS" starttime="20201110 08:36:29.142" endtime="20201110 08:36:31.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.260" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70018719, 'start-iter': 1, 'wakeups': [70028920, 70038918, 70048918,...</msg>
<status status="PASS" starttime="20201110 08:36:31.256" endtime="20201110 08:36:31.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.262" endtime="20201110 08:36:31.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.138" endtime="20201110 08:36:31.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.136" endtime="20201110 08:36:31.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:31.274" level="INFO">${RESULT} = {'wakeups': [70028920, 70038918, 70048918, 70058918, 70068918, 70078918, 70088918, 70098918, 70108918, 70118918, 70128918, 70138918, 70148918, 70158918, 70168918, 70178918, 70188918, 70198918, 7020891...</msg>
<status status="PASS" starttime="20201110 08:36:31.270" endtime="20201110 08:36:31.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.283" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:31.281" endtime="20201110 08:36:31.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.288" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:31.286" endtime="20201110 08:36:31.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.276" endtime="20201110 08:36:31.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.298" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:31.296" endtime="20201110 08:36:31.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.303" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:31.301" endtime="20201110 08:36:31.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.291" endtime="20201110 08:36:31.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.314" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:31.311" endtime="20201110 08:36:31.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.318" level="INFO">VALUE: 70018719</msg>
<status status="PASS" starttime="20201110 08:36:31.316" endtime="20201110 08:36:31.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.306" endtime="20201110 08:36:31.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.329" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:31.327" endtime="20201110 08:36:31.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.335" level="INFO">VALUE: [70028920, 70038918, 70048918, 70058918, 70068918, 70078918, 70088918, 70098918, 70108918, 70118918, 70128918, 70138918, 70148918, 70158918, 70168918, 70178918, 70188918, 70198918, 70208918, 70218918, 70228918, 70238918, 70248918, 70258918, 70268918, 70278918, 70288918, 70298918, 70308918, 70318918, 70328918, 70338918, 70348918, 70358918, 70368918, 70378918, 70388918, 70398918, 70408918, 70418918, 70428918, 70438918, 70448918, 70458918, 70468918, 70478918, 70488918, 70498918, 70508918, 70518918, 70528918, 70538918, 70548918, 70558918, 70568918, 70578918, 70588918, 70598918, 70608918, 70618918, 70628918, 70638918, 70648918, 70658918, 70668918, 70678918, 70688918, 70698918, 70708918, 70718918, 70728918, 70738918, 70748918, 70758918, 70768918, 70778918, 70788918, 70798918, 70808918, 70818918, 70828918, 70838918, 70848918, 70858918, 70868918, 70878918, 70888918, 70898918, 70908918, 70918918, 70928918, 70938918, 70948918, 70958918, 70968918, 70978918, 70988918, 70998918, 71008918, 71018918]</msg>
<status status="PASS" starttime="20201110 08:36:31.330" endtime="20201110 08:36:31.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.321" endtime="20201110 08:36:31.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.343" endtime="20201110 08:36:31.633"></status>
</kw>
<msg timestamp="20201110 08:36:31.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023781431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033984556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:31.341" endtime="20201110 08:36:31.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023781431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033984556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:31.637" endtime="20201110 08:36:31.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.645" endtime="20201110 08:36:31.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.339" endtime="20201110 08:36:31.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.337" endtime="20201110 08:36:31.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:31.673" level="INFO">${RESULT} = {'source_diff': [0, 0.010203125, 0.009999152000000004, 0.010001069999999994, 0.010001235999999997, 0.010001055000000009, 0.010001223000000004, 0.010001068999999987, 0.01000123600000001, 0.01000107, 0....</msg>
<status status="PASS" starttime="20201110 08:36:31.649" endtime="20201110 08:36:31.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.678" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:31.677" endtime="20201110 08:36:31.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.680" level="INFO">VALUE: 0.023781431</msg>
<status status="PASS" starttime="20201110 08:36:31.679" endtime="20201110 08:36:31.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.674" endtime="20201110 08:36:31.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.685" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:31.684" endtime="20201110 08:36:31.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.688" level="INFO">VALUE: [0.033984556, 0.043983708, 0.053984778, 0.063986014, 0.073987069, 0.083988292, 0.093989361, 0.103990597, 0.113991667, 0.123992917, 0.133993958, 0.143995153, 0.153996236, 0.163997444, 0.173998542, 0.183999736, 0.194000819, 0.204002028, 0.214003125, 0.224004347, 0.234005403, 0.244006639, 0.254007708, 0.264008931, 0.27401, 0.284011264, 0.294012292, 0.3040135, 0.314014597, 0.324015792, 0.334016917, 0.344018083, 0.354019208, 0.364020389, 0.374021486, 0.384022694, 0.394023764, 0.404024972, 0.414026056, 0.424027264, 0.434028347, 0.444029556, 0.454030667, 0.464031875, 0.474032958, 0.484034153, 0.494035236, 0.504036444, 0.514037528, 0.524038736, 0.534039819, 0.544041042, 0.554042111, 0.564043375, 0.574044486, 0.584045625, 0.594046722, 0.604047931, 0.614049, 0.624050208, 0.634051319, 0.644052514, 0.654053583, 0.664054806, 0.674055889, 0.684057153, 0.694058181, 0.704059389, 0.714060472, 0.724061722, 0.734062764, 0.744064042, 0.754065069, 0.764066278, 0.774067417, 0.784068583, 0.794069653, 0.804070861, 0.814072028, 0.824073153, 0.834074236, 0.844075472, 0.854076542, 0.864077764, 0.874078847, 0.884080042, 0.894081125, 0.904082347, 0.914083417, 0.924084625, 0.934085708, 0.944086944, 0.954088014, 0.964089222, 0.974090306, 0.984091514, 0.994092597, 1.004093861, 1.014094903, 1.024096111] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:31.687" endtime="20201110 08:36:31.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.681" endtime="20201110 08:36:31.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.691" endtime="20201110 08:36:31.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:31.694" endtime="20201110 08:36:31.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.693" endtime="20201110 08:36:31.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.689" endtime="20201110 08:36:31.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.135" endtime="20201110 08:36:31.716"></status>
</kw>
<msg timestamp="20201110 08:36:31.716" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.725" endtime="20201110 08:36:33.836"></status>
</kw>
<msg timestamp="20201110 08:36:33.837" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72602651, 'start-iter': 1, 'wakeups': [72612852, 72622850, 72632850,...</msg>
<status status="PASS" starttime="20201110 08:36:31.724" endtime="20201110 08:36:33.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.844" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72602651, 'start-iter': 1, 'wakeups': [72612852, 72622850, 72632850,...</msg>
<status status="PASS" starttime="20201110 08:36:33.840" endtime="20201110 08:36:33.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.846" endtime="20201110 08:36:33.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.721" endtime="20201110 08:36:33.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.718" endtime="20201110 08:36:33.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:33.858" level="INFO">${RESULT} = {'wakeups': [72612852, 72622850, 72632850, 72642850, 72652850, 72662850, 72672850, 72682850, 72692850, 72702850, 72712850, 72722850, 72732850, 72742850, 72752850, 72762850, 72772850, 72782850, 7279285...</msg>
<status status="PASS" starttime="20201110 08:36:33.854" endtime="20201110 08:36:33.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.867" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:33.865" endtime="20201110 08:36:33.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.871" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:33.869" endtime="20201110 08:36:33.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.860" endtime="20201110 08:36:33.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.882" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:33.880" endtime="20201110 08:36:33.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.887" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:33.885" endtime="20201110 08:36:33.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.875" endtime="20201110 08:36:33.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.898" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:33.895" endtime="20201110 08:36:33.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.902" level="INFO">VALUE: 72602651</msg>
<status status="PASS" starttime="20201110 08:36:33.900" endtime="20201110 08:36:33.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.890" endtime="20201110 08:36:33.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.913" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:33.911" endtime="20201110 08:36:33.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.916" level="INFO">VALUE: [72612852, 72622850, 72632850, 72642850, 72652850, 72662850, 72672850, 72682850, 72692850, 72702850, 72712850, 72722850, 72732850, 72742850, 72752850, 72762850, 72772850, 72782850, 72792850, 72802850, 72812850, 72822850, 72832850, 72842850, 72852850, 72862850, 72872850, 72882850, 72892850, 72902850, 72912850, 72922850, 72932850, 72942850, 72952850, 72962850, 72972850, 72982850, 72992850, 73002850, 73012850, 73022850, 73032850, 73042850, 73052850, 73062850, 73072850, 73082850, 73092850, 73102850, 73112850, 73122850, 73132850, 73142850, 73152850, 73162850, 73172850, 73182850, 73192850, 73202850, 73212850, 73222850, 73232850, 73242850, 73252850, 73262850, 73272850, 73282850, 73292850, 73302850, 73312850, 73322850, 73332850, 73342850, 73352850, 73362850, 73372850, 73382850, 73392850, 73402850, 73412850, 73422850, 73432850, 73442850, 73452850, 73462850, 73472850, 73482850, 73492850, 73502850, 73512850, 73522850, 73532850, 73542850, 73552850, 73562850, 73572850, 73582850, 73592850, 73602850]</msg>
<status status="PASS" starttime="20201110 08:36:33.915" endtime="20201110 08:36:33.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.905" endtime="20201110 08:36:33.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.924" endtime="20201110 08:36:34.217"></status>
</kw>
<msg timestamp="20201110 08:36:34.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023389125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033592264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:33.923" endtime="20201110 08:36:34.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023389125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033592264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:34.221" endtime="20201110 08:36:34.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.228" endtime="20201110 08:36:34.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.920" endtime="20201110 08:36:34.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.918" endtime="20201110 08:36:34.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:34.256" level="INFO">${RESULT} = {'source_diff': [0, 0.010203138999999996, 0.009999194000000003, 0.010001028000000002, 0.010001221999999997, 0.01000107, 0.010001222000000004, 0.010001097, 0.010001166999999991, 0.010001152999999999, 0...</msg>
<status status="PASS" starttime="20201110 08:36:34.232" endtime="20201110 08:36:34.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.261" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:34.260" endtime="20201110 08:36:34.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.263" level="INFO">VALUE: 0.023389125</msg>
<status status="PASS" starttime="20201110 08:36:34.262" endtime="20201110 08:36:34.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.257" endtime="20201110 08:36:34.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.269" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:34.268" endtime="20201110 08:36:34.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.271" level="INFO">VALUE: [0.033592264, 0.043591458, 0.053592486, 0.063593708, 0.073594778, 0.083596, 0.093597097, 0.103598264, 0.113599417, 0.123600556, 0.133601639, 0.143602847, 0.153603931, 0.163605153, 0.173606236, 0.183607431, 0.193608528, 0.203609736, 0.213610806, 0.223612014, 0.233613111, 0.243614319, 0.253615389, 0.263616625, 0.273617722, 0.283618903, 0.293620014, 0.303621194, 0.313622278, 0.323623486, 0.333624611, 0.343625778, 0.353626889, 0.363628097, 0.373629153, 0.383630375, 0.393631444, 0.403632653, 0.413633736, 0.423634958, 0.433636028, 0.44363725, 0.453638333, 0.463639542, 0.473640639, 0.483641889, 0.493643, 0.503644181, 0.513645222, 0.523646417, 0.533647569, 0.543648708, 0.553649792, 0.563651014, 0.573652083, 0.583653292, 0.593654431, 0.603655583, 0.613656667, 0.623657889, 0.633659014, 0.643660181, 0.653661264, 0.663662486, 0.673663569, 0.683664764, 0.693665931, 0.703667069, 0.713668139, 0.723669361, 0.733670431, 0.743671639, 0.753672722, 0.763673944, 0.773675042, 0.783676236, 0.793677319, 0.803678528, 0.813679611, 0.823680833, 0.833681903, 0.843683125, 0.853684194, 0.863685417, 0.8736865, 0.883687708, 0.893688778, 0.903689986, 0.913691083, 0.923692278, 0.933693403, 0.943694583, 0.953695681, 0.963696889, 0.973697958, 0.983699167, 0.99370025, 1.003701458, 1.013702542, 1.023703778] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:34.270" endtime="20201110 08:36:34.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.264" endtime="20201110 08:36:34.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.274" endtime="20201110 08:36:34.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:34.278" endtime="20201110 08:36:34.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.276" endtime="20201110 08:36:34.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.272" endtime="20201110 08:36:34.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.717" endtime="20201110 08:36:34.298"></status>
</kw>
<msg timestamp="20201110 08:36:34.299" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.307" endtime="20201110 08:36:36.415"></status>
</kw>
<msg timestamp="20201110 08:36:36.416" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75182458, 'start-iter': 1, 'wakeups': [75192658, 75202657, 75212657,...</msg>
<status status="PASS" starttime="20201110 08:36:34.305" endtime="20201110 08:36:36.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.427" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75182458, 'start-iter': 1, 'wakeups': [75192658, 75202657, 75212657,...</msg>
<status status="PASS" starttime="20201110 08:36:36.423" endtime="20201110 08:36:36.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.430" endtime="20201110 08:36:36.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.303" endtime="20201110 08:36:36.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.301" endtime="20201110 08:36:36.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:36.442" level="INFO">${RESULT} = {'wakeups': [75192658, 75202657, 75212657, 75222657, 75232657, 75242657, 75252657, 75262657, 75272657, 75282657, 75292657, 75302657, 75312657, 75322657, 75332657, 75342657, 75352657, 75362657, 7537265...</msg>
<status status="PASS" starttime="20201110 08:36:36.437" endtime="20201110 08:36:36.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.453" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:36.448" endtime="20201110 08:36:36.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.458" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:36.455" endtime="20201110 08:36:36.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.443" endtime="20201110 08:36:36.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.468" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:36.466" endtime="20201110 08:36:36.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.473" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:36.471" endtime="20201110 08:36:36.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.461" endtime="20201110 08:36:36.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.484" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:36.481" endtime="20201110 08:36:36.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.488" level="INFO">VALUE: 75182458</msg>
<status status="PASS" starttime="20201110 08:36:36.486" endtime="20201110 08:36:36.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.476" endtime="20201110 08:36:36.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.499" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:36.497" endtime="20201110 08:36:36.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.504" level="INFO">VALUE: [75192658, 75202657, 75212657, 75222657, 75232657, 75242657, 75252657, 75262657, 75272657, 75282657, 75292657, 75302657, 75312657, 75322657, 75332657, 75342657, 75352657, 75362657, 75372657, 75382657, 75392657, 75402657, 75412657, 75422657, 75432657, 75442657, 75452657, 75462657, 75472657, 75482657, 75492657, 75502657, 75512657, 75522657, 75532657, 75542657, 75552657, 75562657, 75572657, 75582657, 75592657, 75602657, 75612657, 75622657, 75632657, 75642657, 75652657, 75662657, 75672657, 75682657, 75692657, 75702657, 75712657, 75722657, 75732657, 75742657, 75752657, 75762657, 75772657, 75782657, 75792657, 75802657, 75812657, 75822657, 75832657, 75842657, 75852657, 75862657, 75872657, 75882657, 75892657, 75902657, 75912657, 75922657, 75932657, 75942657, 75952657, 75962657, 75972657, 75982657, 75992657, 76002657, 76012657, 76022657, 76032657, 76042657, 76052657, 76062657, 76072657, 76082657, 76092657, 76102657, 76112657, 76122657, 76132657, 76142657, 76152657, 76162657, 76172657, 76182657]</msg>
<status status="PASS" starttime="20201110 08:36:36.501" endtime="20201110 08:36:36.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.492" endtime="20201110 08:36:36.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.521" endtime="20201110 08:36:36.821"></status>
</kw>
<msg timestamp="20201110 08:36:36.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020122264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03032475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:36.517" endtime="20201110 08:36:36.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020122264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03032475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:36.825" endtime="20201110 08:36:36.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.833" endtime="20201110 08:36:36.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.511" endtime="20201110 08:36:36.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.507" endtime="20201110 08:36:36.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:36.861" level="INFO">${RESULT} = {'source_diff': [0, 0.010202486, 0.010000181, 0.010001026999999996, 0.010001195000000004, 0.010001083000000001, 0.010001195000000004, 0.010001096999999987, 0.010001194000000005, 0.010001084000000007, ...</msg>
<status status="PASS" starttime="20201110 08:36:36.836" endtime="20201110 08:36:36.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.866" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:36.865" endtime="20201110 08:36:36.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.868" level="INFO">VALUE: 0.020122264</msg>
<status status="PASS" starttime="20201110 08:36:36.867" endtime="20201110 08:36:36.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.862" endtime="20201110 08:36:36.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.874" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:36.873" endtime="20201110 08:36:36.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.876" level="INFO">VALUE: [0.03032475, 0.040324931, 0.050325958, 0.060327153, 0.070328236, 0.080329431, 0.090330528, 0.100331722, 0.110332806, 0.120334, 0.130335097, 0.140336306, 0.150337375, 0.160338583, 0.170339667, 0.180340944, 0.190341958, 0.200343167, 0.210344264, 0.220345458, 0.230346542, 0.24034775, 0.250348847, 0.260350097, 0.270351111, 0.280352403, 0.290353417, 0.300354611, 0.310355708, 0.320356931, 0.330357986, 0.340359194, 0.350360319, 0.360361486, 0.370362569, 0.380363847, 0.390364875, 0.400366083, 0.410367167, 0.420368361, 0.430369444, 0.440370667, 0.450371736, 0.460372944, 0.470374042, 0.480375236, 0.490376319, 0.500377528, 0.510378611, 0.520379833, 0.530380903, 0.540382181, 0.550383194, 0.560384403, 0.570385486, 0.580386708, 0.590387778, 0.600388986, 0.610390069, 0.620391278, 0.630392444, 0.640393569, 0.650394653, 0.660395861, 0.670396944, 0.680398153, 0.690399222, 0.700400458, 0.710401514, 0.720402722, 0.730403806, 0.740405014, 0.750406097, 0.760407306, 0.770408403, 0.780409597, 0.790410681, 0.800411903, 0.810412986, 0.820414181, 0.830415278, 0.840416486, 0.850417569, 0.860418778, 0.870419847, 0.880421056, 0.890422153, 0.900423361, 0.910424431, 0.920425639, 0.930426722, 0.940427931, 0.950429014, 0.960430222, 0.970431347, 0.980432514, 0.990433611, 1.000434806, 1.010435903, 1.020437097] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:36.875" endtime="20201110 08:36:36.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.870" endtime="20201110 08:36:36.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.879" endtime="20201110 08:36:36.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:36.883" endtime="20201110 08:36:36.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.881" endtime="20201110 08:36:36.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.878" endtime="20201110 08:36:36.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.299" endtime="20201110 08:36:36.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.132" endtime="20201110 08:36:36.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.132" endtime="20201110 08:36:36.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.506" endtime="20201110 08:36:36.904"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:35:19.436" endtime="20201110 08:36:36.905" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:35:17.992" endtime="20201110 08:36:36.908"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:33:32.305" endtime="20201110 08:36:36.923"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
