<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201110 08:36:16.944" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.523" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:17.531" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:18.705" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:17.521" endtime="20201110 08:36:18.706"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.708" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:36:18.707" endtime="20201110 08:36:18.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.520" endtime="20201110 08:36:18.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:18.712" endtime="20201110 08:36:18.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.710" endtime="20201110 08:36:18.965"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.978" endtime="20201110 08:36:18.994"></status>
</kw>
<msg timestamp="20201110 08:36:18.994" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201110 08:36:18.977" endtime="20201110 08:36:18.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.997" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201110 08:36:18.995" endtime="20201110 08:36:18.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.000" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:18.998" endtime="20201110 08:36:19.001"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:18.974" endtime="20201110 08:36:19.001"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:18.971" endtime="20201110 08:36:19.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.970" endtime="20201110 08:36:19.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:19.006" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:19.005" endtime="20201110 08:36:19.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.003" endtime="20201110 08:36:19.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.969" endtime="20201110 08:36:19.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.969" endtime="20201110 08:36:19.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.008" endtime="20201110 08:36:19.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.967" endtime="20201110 08:36:19.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.011" endtime="20201110 08:36:19.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.965" endtime="20201110 08:36:19.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.518" endtime="20201110 08:36:19.013"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:19.020" endtime="20201110 08:36:19.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.018" endtime="20201110 08:36:19.040"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.055" endtime="20201110 08:36:19.074"></status>
</kw>
<msg timestamp="20201110 08:36:19.074" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:19.053" endtime="20201110 08:36:19.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.077" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:19.075" endtime="20201110 08:36:19.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.080" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:19.078" endtime="20201110 08:36:19.080"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:19.051" endtime="20201110 08:36:19.081"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:19.048" endtime="20201110 08:36:19.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.046" endtime="20201110 08:36:19.082"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:19.086" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:19.085" endtime="20201110 08:36:19.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.083" endtime="20201110 08:36:19.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.046" endtime="20201110 08:36:19.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.044" endtime="20201110 08:36:19.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.087" endtime="20201110 08:36:19.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.042" endtime="20201110 08:36:19.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.041" endtime="20201110 08:36:19.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.017" endtime="20201110 08:36:19.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.097" endtime="20201110 08:36:19.115"></status>
</kw>
<msg timestamp="20201110 08:36:19.115" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:19.096" endtime="20201110 08:36:19.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.118" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:19.116" endtime="20201110 08:36:19.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.119" endtime="20201110 08:36:19.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.093" endtime="20201110 08:36:19.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.091" endtime="20201110 08:36:19.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.125" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:36:19.124" endtime="20201110 08:36:19.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.128" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201110 08:36:19.127" endtime="20201110 08:36:19.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.122" endtime="20201110 08:36:19.128"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:19.014" endtime="20201110 08:36:19.129" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:36:17.065" endtime="20201110 08:36:19.131"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.183" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:19.192" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:20.363" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:19.182" endtime="20201110 08:36:20.364"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.366" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:36:20.365" endtime="20201110 08:36:20.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.181" endtime="20201110 08:36:20.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:20.370" endtime="20201110 08:36:20.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.368" endtime="20201110 08:36:20.654"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.667" endtime="20201110 08:36:20.687"></status>
</kw>
<msg timestamp="20201110 08:36:20.687" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:20.665" endtime="20201110 08:36:20.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.692" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:20.689" endtime="20201110 08:36:20.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.703" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:20.696" endtime="20201110 08:36:20.703"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:20.663" endtime="20201110 08:36:20.704"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:20.661" endtime="20201110 08:36:20.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.659" endtime="20201110 08:36:20.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:20.715" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:20.713" endtime="20201110 08:36:20.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.708" endtime="20201110 08:36:20.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.659" endtime="20201110 08:36:20.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.658" endtime="20201110 08:36:20.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.720" endtime="20201110 08:36:20.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.657" endtime="20201110 08:36:20.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.723" endtime="20201110 08:36:20.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.655" endtime="20201110 08:36:20.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.179" endtime="20201110 08:36:20.726"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:20.732" endtime="20201110 08:36:20.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.730" endtime="20201110 08:36:20.752"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.766" endtime="20201110 08:36:20.782"></status>
</kw>
<msg timestamp="20201110 08:36:20.783" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:20.764" endtime="20201110 08:36:20.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.785" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:20.784" endtime="20201110 08:36:20.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.789" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:20.786" endtime="20201110 08:36:20.789"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:20.761" endtime="20201110 08:36:20.790"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:20.759" endtime="20201110 08:36:20.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.757" endtime="20201110 08:36:20.790"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:20.795" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:20.793" endtime="20201110 08:36:20.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.791" endtime="20201110 08:36:20.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.756" endtime="20201110 08:36:20.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.756" endtime="20201110 08:36:20.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.797" endtime="20201110 08:36:20.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.754" endtime="20201110 08:36:20.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.752" endtime="20201110 08:36:20.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.729" endtime="20201110 08:36:20.800"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:36:20.802" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.810" endtime="20201110 08:36:20.826"></status>
</kw>
<msg timestamp="20201110 08:36:20.826" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:20.808" endtime="20201110 08:36:20.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.829" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:20.827" endtime="20201110 08:36:20.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.830" endtime="20201110 08:36:20.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.805" endtime="20201110 08:36:20.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.804" endtime="20201110 08:36:20.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.839" endtime="20201110 08:36:21.135"></status>
</kw>
<msg timestamp="20201110 08:36:21.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070552861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070553347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:20.838" endtime="20201110 08:36:21.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070552861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070553347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:21.139" endtime="20201110 08:36:21.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.148" endtime="20201110 08:36:21.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.835" endtime="20201110 08:36:21.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.833" endtime="20201110 08:36:21.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.155" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:21.153" endtime="20201110 08:36:21.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.160" level="INFO">VALUE: [{'time': 0.070552861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070553347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.070562306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.959000000002826e-06, 'source_diff': 8.959000000002826e-06}, {'time': 0.070562847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999927972e-07, 'source_diff': 5.409999999927972e-07}, {'time': 0.070569389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.070569875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.070576542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.070577083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999927972e-07, 'source_diff': 5.409999999927972e-07}, {'time': 0.070582958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.070583431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.070588639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999992663e-06, 'source_diff': 5.207999999992663e-06}, {'time': 0.070589111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.070599014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.903000000005546e-06, 'source_diff': 9.903000000005546e-06}, {'time': 0.0705995, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.070608167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000003866e-06, 'source_diff': 8.667000000003866e-06}, {'time': 0.070608653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.070612625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9720000000048605e-06, 'source_diff': 3.9720000000048605e-06}, {'time': 0.070613111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.070623431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319999999994223e-05, 'source_diff': 1.0319999999994223e-05}, {'time': 0.070623972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999927972e-07, 'source_diff': 5.409999999927972e-07}, {'time': 0.07063175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.070632292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.070640583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291000000007487e-06, 'source_diff': 8.291000000007487e-06}, {'time': 0.070641125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.070650875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.070651417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.070656639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.070657111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.070663472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.361000000010275e-06, 'source_diff': 6.361000000010275e-06}, {'time': 0.070663958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.070673958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.0706745, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.070683833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.070684375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.070688611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2360000000046805e-06, 'source_diff': 4.2360000000046805e-06}, {'time': 0.070689153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.070694542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.388999999994537e-06, 'source_diff': 5.388999999994537e-06}, {'time': 0.070695028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.070704931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.903000000005546e-06, 'source_diff': 9.903000000005546e-06}, {'time': 0.070705472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.41000000006675e-07, 'source_diff': 5.41000000006675e-07}, {'time': 0.070712347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999989528e-06, 'source_diff': 6.874999999989528e-06}, {'time': 0.070712819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.070720736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.917000000010055e-06, 'source_diff': 7.917000000010055e-06}, {'time': 0.070721278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.070725208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.07072575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.070734042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291999999993083e-06, 'source_diff': 8.291999999993083e-06}, {'time': 0.070734583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.41000000006675e-07, 'source_diff': 5.41000000006675e-07}, {'time': 0.070742361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.070742903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.070747458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555000000003306e-06, 'source_diff': 4.555000000003306e-06}, {'time': 0.070747944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.070751931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.987000000010843e-06, 'source_diff': 3.987000000010843e-06}, {'time': 0.070752417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.070759097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680000000008901e-06, 'source_diff': 6.680000000008901e-06}, {'time': 0.070759639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.070766583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.943999999994843e-06, 'source_diff': 6.943999999994843e-06}, {'time': 0.070767125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.070777514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.070778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.070786639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000004726e-06, 'source_diff': 8.639000000004726e-06}, {'time': 0.070787181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.070791819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.638000000001252e-06, 'source_diff': 4.638000000001252e-06}, {'time': 0.070792361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.070802, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.639000000005726e-06, 'source_diff': 9.639000000005726e-06}, {'time': 0.070802486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.070806556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.070000000008789e-06, 'source_diff': 4.070000000008789e-06}, {'time': 0.070807097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999927972e-07, 'source_diff': 5.409999999927972e-07}, {'time': 0.070816722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.070817264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.070826069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.070826611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.070836556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944999999997317e-06, 'source_diff': 9.944999999997317e-06}, {'time': 0.070837042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.070842875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.070843417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.070852958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.54099999998792e-06, 'source_diff': 9.54099999998792e-06}, {'time': 0.0708535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.070858472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000005861e-06, 'source_diff': 4.972000000005861e-06}, {'time': 0.070859014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.070867889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000005406e-06, 'source_diff': 8.875000000005406e-06}, {'time': 0.070868361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.070874806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.444999999993817e-06, 'source_diff': 6.444999999993817e-06}, {'time': 0.070875292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.070881028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999992303e-06, 'source_diff': 5.735999999992303e-06}, {'time': 0.070881569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.41000000006675e-07, 'source_diff': 5.41000000006675e-07}, {'time': 0.070889653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083999999991542e-06, 'source_diff': 8.083999999991542e-06}, {'time': 0.070890194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.41000000006675e-07, 'source_diff': 5.41000000006675e-07}, {'time': 0.070900264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.070900806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.07091025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.070910736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.070918556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999991722e-06, 'source_diff': 7.819999999991722e-06}, {'time': 0.070919097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.41000000006675e-07, 'source_diff': 5.41000000006675e-07}, {'time': 0.070925431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333999999996731e-06, 'source_diff': 6.333999999996731e-06}, {'time': 0.070925917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.070932597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.679999999995023e-06, 'source_diff': 6.679999999995023e-06}, {'time': 0.070933139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.070940181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.070940722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999927972e-07, 'source_diff': 5.409999999927972e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:21.156" endtime="20201110 08:36:21.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.151" endtime="20201110 08:36:21.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:21.189" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:21.163" endtime="20201110 08:36:21.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.193" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:21.191" endtime="20201110 08:36:21.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.197" level="INFO">VALUE: {'eventdiff': [0, 4.86000000007869e-07, 8.959000000002826e-06, 5.409999999927972e-07, 6.541999999998271e-06, 4.86000000007869e-07, 6.667000000001866e-06, 5.409999999927972e-07, 5.875000000002406e-06, 4.7300000000083386e-07, 5.207999999992663e-06, 4.720000000013602e-07, 9.903000000005546e-06, 4.859999999939912e-07, 8.667000000003866e-06, 4.859999999939912e-07, 3.9720000000048605e-06, 4.86000000007869e-07, 1.0319999999994223e-05, 5.409999999927972e-07, 7.777999999999952e-06, 5.420000000061487e-07, 8.291000000007487e-06, 5.419999999922709e-07, 9.750000000002812e-06, 5.419999999922709e-07, 5.221999999999172e-06, 4.720000000013602e-07, 6.361000000010275e-06, 4.859999999939912e-07, 9.999999999996123e-06, 5.420000000061487e-07, 9.333000000000258e-06, 5.419999999922709e-07, 4.2360000000046805e-06, 5.420000000061487e-07, 5.388999999994537e-06, 4.859999999939912e-07, 9.903000000005546e-06, 5.41000000006675e-07, 6.874999999989528e-06, 4.720000000013602e-07, 7.917000000010055e-06, 5.419999999922709e-07, 3.929999999999212e-06, 5.420000000061487e-07, 8.291999999993083e-06, 5.41000000006675e-07, 7.777999999999952e-06, 5.419999999922709e-07, 4.555000000003306e-06, 4.859999999939912e-07, 3.987000000010843e-06, 4.859999999939912e-07, 6.680000000008901e-06, 5.419999999922709e-07, 6.943999999994843e-06, 5.420000000061487e-07, 1.0388999999999537e-05, 4.859999999939912e-07, 8.639000000004726e-06, 5.420000000061487e-07, 4.638000000001252e-06, 5.419999999922709e-07, 9.639000000005726e-06, 4.859999999939912e-07, 4.070000000008789e-06, 5.409999999927972e-07, 9.624999999999218e-06, 5.420000000061487e-07, 8.805000000000618e-06, 5.419999999922709e-07, 9.944999999997317e-06, 4.86000000007869e-07, 5.8329999999967574e-06, 5.420000000061487e-07, 9.54099999998792e-06, 5.420000000061487e-07, 4.972000000005861e-06, 5.419999999922709e-07, 8.875000000005406e-06, 4.720000000013602e-07, 6.444999999993817e-06, 4.86000000007869e-07, 5.735999999992303e-06, 5.41000000006675e-07, 8.083999999991542e-06, 5.41000000006675e-07, 1.0070000000000912e-05, 5.419999999922709e-07, 9.443999999997343e-06, 4.86000000007869e-07, 7.819999999991722e-06, 5.41000000006675e-07, 6.333999999996731e-06, 4.86000000007869e-07, 6.679999999995023e-06, 5.420000000061487e-07, 7.0419999999987715e-06, 5.409999999927972e-07], 'time': [0.070552861, 0.070553347, 0.070562306, 0.070562847, 0.070569389, 0.070569875, 0.070576542, 0.070577083, 0.070582958, 0.070583431, 0.070588639, 0.070589111, 0.070599014, 0.0705995, 0.070608167, 0.070608653, 0.070612625, 0.070613111, 0.070623431, 0.070623972, 0.07063175, 0.070632292, 0.070640583, 0.070641125, 0.070650875, 0.070651417, 0.070656639, 0.070657111, 0.070663472, 0.070663958, 0.070673958, 0.0706745, 0.070683833, 0.070684375, 0.070688611, 0.070689153, 0.070694542, 0.070695028, 0.070704931, 0.070705472, 0.070712347, 0.070712819, 0.070720736, 0.070721278, 0.070725208, 0.07072575, 0.070734042, 0.070734583, 0.070742361, 0.070742903, 0.070747458, 0.070747944, 0.070751931, 0.070752417, 0.070759097, 0.070759639, 0.070766583, 0.070767125, 0.070777514, 0.070778, 0.070786639, 0.070787181, 0.070791819, 0.070792361, 0.070802, 0.070802486, 0.070806556, 0.070807097, 0.070816722, 0.070817264, 0.070826069, 0.070826611, 0.070836556, 0.070837042, 0.070842875, 0.070843417, 0.070852958, 0.0708535, 0.070858472, 0.070859014, 0.070867889, 0.070868361, 0.070874806, 0.070875292, 0.070881028, 0.070881569, 0.070889653, 0.070890194, 0.070900264, 0.070900806, 0.07091025, 0.070910736, 0.070918556, 0.070919097, 0.070925431, 0.070925917, 0.070932597, 0.070933139, 0.070940181, 0.070940722], 'sourcesource_diff': [0, 4.86000000007869e-07, 8.959000000002826e-06, 5.409999999927972e-07, 6.541999999998271e-06, 4.86000000007869e-07, 6.667000000001866e-06, 5.409999999927972e-07, 5.875000000002406e-06, 4.7300000000083386e-07, 5.207999999992663e-06, 4.720000000013602e-07, 9.903000000005546e-06, 4.859999999939912e-07, 8.667000000003866e-06, 4.859999999939912e-07, 3.9720000000048605e-06, 4.86000000007869e-07, 1.0319999999994223e-05, 5.409999999927972e-07, 7.777999999999952e-06, 5.420000000061487e-07, 8.291000000007487e-06, 5.419999999922709e-07, 9.750000000002812e-06, 5.419999999922709e-07, 5.221999999999172e-06, 4.720000000013602e-07, 6.361000000010275e-06, 4.859999999939912e-07, 9.999999999996123e-06, 5.420000000061487e-07, 9.333000000000258e-06, 5.419999999922709e-07, 4.2360000000046805e-06, 5.420000000061487e-07, 5.388999999994537e-06, 4.859999999939912e-07, 9.903000000005546e-06, 5.41000000006675e-07, 6.874999999989528e-06, 4.720000000013602e-07, 7.917000000010055e-06, 5.419999999922709e-07, 3.929999999999212e-06, 5.420000000061487e-07, 8.291999999993083e-06, 5.41000000006675e-07, 7.777999999999952e-06, 5.419999999922709e-07, 4.555000000003306e-06, 4.859999999939912e-07, 3.987000000010843e-06, 4.859999999939912e-07, 6.680000000008901e-06, 5.419999999922709e-07, 6.943999999994843e-06, 5.420000000061487e-07, 1.0388999999999537e-05, 4.859999999939912e-07, 8.639000000004726e-06, 5.420000000061487e-07, 4.638000000001252e-06, 5.419999999922709e-07, 9.639000000005726e-06, 4.859999999939912e-07, 4.070000000008789e-06, 5.409999999927972e-07, 9.624999999999218e-06, 5.420000000061487e-07, 8.805000000000618e-06, 5.419999999922709e-07, 9.944999999997317e-06, 4.86000000007869e-07, 5.8329999999967574e-06, 5.420000000061487e-07, 9.54099999998792e-06, 5.420000000061487e-07, 4.972000000005861e-06, 5.419999999922709e-07, 8.875000000005406e-06, 4.720000000013602e-07, 6.444999999993817e-06, 4.86000000007869e-07, 5.735999999992303e-06, 5.41000000006675e-07, 8.083999999991542e-06, 5.41000000006675e-07, 1.0070000000000912e-05, 5.419999999922709e-07, 9.443999999997343e-06, 4.86000000007869e-07, 7.819999999991722e-06, 5.41000000006675e-07, 6.333999999996731e-06, 4.86000000007869e-07, 6.679999999995023e-06, 5.420000000061487e-07, 7.0419999999987715e-06, 5.409999999927972e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:21.194" endtime="20201110 08:36:21.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.190" endtime="20201110 08:36:21.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:21.203" level="INFO">${RESULT} = [{'time': 0.070553347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.070562847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:21.199" endtime="20201110 08:36:21.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:21.217" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:21.204" endtime="20201110 08:36:21.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.221" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:21.220" endtime="20201110 08:36:21.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.224" level="INFO">VALUE: [4.86000000007869e-07, 5.409999999927972e-07, 4.86000000007869e-07, 5.409999999927972e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.86000000007869e-07, 5.409999999927972e-07, 5.420000000061487e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.859999999939912e-07, 5.420000000061487e-07, 5.419999999922709e-07, 5.420000000061487e-07, 4.859999999939912e-07, 5.41000000006675e-07, 4.720000000013602e-07, 5.419999999922709e-07, 5.420000000061487e-07, 5.41000000006675e-07, 5.419999999922709e-07, 4.859999999939912e-07, 4.859999999939912e-07, 5.419999999922709e-07, 5.420000000061487e-07, 4.859999999939912e-07, 5.420000000061487e-07, 5.419999999922709e-07, 4.859999999939912e-07, 5.409999999927972e-07, 5.420000000061487e-07, 5.419999999922709e-07, 4.86000000007869e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.86000000007869e-07, 5.41000000006675e-07, 5.41000000006675e-07, 5.419999999922709e-07, 4.86000000007869e-07, 5.41000000006675e-07, 4.86000000007869e-07, 5.420000000061487e-07, 5.409999999927972e-07]</msg>
<status status="PASS" starttime="20201110 08:36:21.222" endtime="20201110 08:36:21.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.218" endtime="20201110 08:36:21.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.227" endtime="20201110 08:36:21.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:21.231" endtime="20201110 08:36:21.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.229" endtime="20201110 08:36:21.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.225" endtime="20201110 08:36:21.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.802" endtime="20201110 08:36:21.254"></status>
</kw>
<msg timestamp="20201110 08:36:21.255" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.269" endtime="20201110 08:36:21.284"></status>
</kw>
<msg timestamp="20201110 08:36:21.284" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:21.267" endtime="20201110 08:36:21.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.287" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:21.285" endtime="20201110 08:36:21.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.288" endtime="20201110 08:36:21.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.262" endtime="20201110 08:36:21.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.258" endtime="20201110 08:36:21.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.299" endtime="20201110 08:36:21.598"></status>
</kw>
<msg timestamp="20201110 08:36:21.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028797806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028798347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:21.297" endtime="20201110 08:36:21.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028797806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028798347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:21.602" endtime="20201110 08:36:21.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.610" endtime="20201110 08:36:21.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.293" endtime="20201110 08:36:21.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.291" endtime="20201110 08:36:21.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.617" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:21.616" endtime="20201110 08:36:21.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.622" level="INFO">VALUE: [{'time': 0.028797806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028798347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.028806972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.028807514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.028817083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.028817625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.028821667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.028822208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.028831264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.02883175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028836972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.028837514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.028841472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.028841958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028848625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6669999999983964e-06, 'source_diff': 6.6669999999983964e-06}, {'time': 0.028849167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.028853514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.028854056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.028860069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.012999999999158e-06, 'source_diff': 6.012999999999158e-06}, {'time': 0.028860611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.028870778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.028871319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.028876278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.028876819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.028884403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.583999999997981e-06, 'source_diff': 7.583999999997981e-06}, {'time': 0.028884889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028893639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999998342e-06, 'source_diff': 8.749999999998342e-06}, {'time': 0.028894181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.028903875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.693999999997593e-06, 'source_diff': 9.693999999997593e-06}, {'time': 0.028904347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028913403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.028913889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028919014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.028919556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.028928153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597000000002547e-06, 'source_diff': 8.597000000002547e-06}, {'time': 0.028928694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.028934806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.11199999999909e-06, 'source_diff': 6.11199999999909e-06}, {'time': 0.028935347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.028940639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.028941125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02894875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.028949236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028958208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.028958694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028963083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.028963625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.028973069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444000000000813e-06, 'source_diff': 9.444000000000813e-06}, {'time': 0.028973556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.028977639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.028978181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.028988569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388000000000064e-05, 'source_diff': 1.0388000000000064e-05}, {'time': 0.028989056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.028997806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.028998347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.029002375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.029002917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.029007375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.029007861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.029018181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.029018722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.029022972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.029023458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.029029306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.84800000000274e-06, 'source_diff': 5.84800000000274e-06}, {'time': 0.029029847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.029039181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.029039722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.029047194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4719999999979525e-06, 'source_diff': 7.4719999999979525e-06}, {'time': 0.029047681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.029051556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.029052042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.029061153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.029061625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029066306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.029066847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.029075333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.029075806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.029086069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0262999999999939e-05, 'source_diff': 1.0262999999999939e-05}, {'time': 0.029086556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.029096583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.029097125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.029105222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.029105764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.029112208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.02911275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.029117111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.029117597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.029125958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.0291265, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.0291345, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.029134986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.029143764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.029144306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.029148764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458000000002321e-06, 'source_diff': 4.458000000002321e-06}, {'time': 0.029149306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.029159264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958000000000883e-06, 'source_diff': 9.958000000000883e-06}, {'time': 0.029159806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.029164389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.029164861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02917475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.029175292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:21.618" endtime="20201110 08:36:21.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.613" endtime="20201110 08:36:21.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:21.648" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:21.624" endtime="20201110 08:36:21.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.652" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:21.651" endtime="20201110 08:36:21.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.656" level="INFO">VALUE: {'eventdiff': [0, 5.409999999997361e-07, 8.625000000001687e-06, 5.419999999992098e-07, 9.569000000000938e-06, 5.419999999992098e-07, 4.041999999999241e-06, 5.409999999997361e-07, 9.056000000000342e-06, 4.860000000009301e-07, 5.221999999999172e-06, 5.420000000026792e-07, 3.957999999998352e-06, 4.860000000009301e-07, 6.6669999999983964e-06, 5.419999999992098e-07, 4.347000000001766e-06, 5.419999999992098e-07, 6.012999999999158e-06, 5.420000000026792e-07, 1.0166999999998427e-05, 5.409999999997361e-07, 4.9589999999988255e-06, 5.410000000032056e-07, 7.583999999997981e-06, 4.860000000009301e-07, 8.749999999998342e-06, 5.420000000026792e-07, 9.693999999997593e-06, 4.720000000013602e-07, 9.056000000000342e-06, 4.860000000009301e-07, 5.1249999999981866e-06, 5.419999999992098e-07, 8.597000000002547e-06, 5.409999999997361e-07, 6.11199999999909e-06, 5.409999999997361e-07, 5.292000000000491e-06, 4.860000000009301e-07, 7.624999999997217e-06, 4.860000000009301e-07, 8.971999999999453e-06, 4.860000000009301e-07, 4.389000000000476e-06, 5.419999999992098e-07, 9.444000000000813e-06, 4.870000000004038e-07, 4.082999999998477e-06, 5.419999999992098e-07, 1.0388000000000064e-05, 4.870000000004038e-07, 8.750000000001812e-06, 5.409999999997361e-07, 4.027999999999671e-06, 5.419999999992098e-07, 4.457999999998852e-06, 4.860000000009301e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 4.250000000000781e-06, 4.859999999974607e-07, 5.84800000000274e-06, 5.409999999997361e-07, 9.333999999999731e-06, 5.409999999997361e-07, 7.4719999999979525e-06, 4.870000000004038e-07, 3.875000000000406e-06, 4.860000000009301e-07, 9.110999999999148e-06, 4.720000000013602e-07, 4.680999999999436e-06, 5.409999999997361e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 1.0262999999999939e-05, 4.870000000004038e-07, 1.0026999999999259e-05, 5.420000000026792e-07, 8.096999999998578e-06, 5.419999999992098e-07, 6.444000000001282e-06, 5.419999999992098e-07, 4.361000000001336e-06, 4.859999999974607e-07, 8.361000000001867e-06, 5.419999999992098e-07, 8.000000000001062e-06, 4.860000000009301e-07, 8.777999999997482e-06, 5.419999999992098e-07, 4.458000000002321e-06, 5.419999999992098e-07, 9.958000000000883e-06, 5.419999999992098e-07, 4.582999999998977e-06, 4.720000000013602e-07, 9.888999999999037e-06, 5.419999999992098e-07], 'time': [0.028797806, 0.028798347, 0.028806972, 0.028807514, 0.028817083, 0.028817625, 0.028821667, 0.028822208, 0.028831264, 0.02883175, 0.028836972, 0.028837514, 0.028841472, 0.028841958, 0.028848625, 0.028849167, 0.028853514, 0.028854056, 0.028860069, 0.028860611, 0.028870778, 0.028871319, 0.028876278, 0.028876819, 0.028884403, 0.028884889, 0.028893639, 0.028894181, 0.028903875, 0.028904347, 0.028913403, 0.028913889, 0.028919014, 0.028919556, 0.028928153, 0.028928694, 0.028934806, 0.028935347, 0.028940639, 0.028941125, 0.02894875, 0.028949236, 0.028958208, 0.028958694, 0.028963083, 0.028963625, 0.028973069, 0.028973556, 0.028977639, 0.028978181, 0.028988569, 0.028989056, 0.028997806, 0.028998347, 0.029002375, 0.029002917, 0.029007375, 0.029007861, 0.029018181, 0.029018722, 0.029022972, 0.029023458, 0.029029306, 0.029029847, 0.029039181, 0.029039722, 0.029047194, 0.029047681, 0.029051556, 0.029052042, 0.029061153, 0.029061625, 0.029066306, 0.029066847, 0.029075333, 0.029075806, 0.029086069, 0.029086556, 0.029096583, 0.029097125, 0.029105222, 0.029105764, 0.029112208, 0.02911275, 0.029117111, 0.029117597, 0.029125958, 0.0291265, 0.0291345, 0.029134986, 0.029143764, 0.029144306, 0.029148764, 0.029149306, 0.029159264, 0.029159806, 0.029164389, 0.029164861, 0.02917475, 0.029175292], 'sourcesource_diff': [0, 5.409999999997361e-07, 8.625000000001687e-06, 5.419999999992098e-07, 9.569000000000938e-06, 5.419999999992098e-07, 4.041999999999241e-06, 5.409999999997361e-07, 9.056000000000342e-06, 4.860000000009301e-07, 5.221999999999172e-06, 5.420000000026792e-07, 3.957999999998352e-06, 4.860000000009301e-07, 6.6669999999983964e-06, 5.419999999992098e-07, 4.347000000001766e-06, 5.419999999992098e-07, 6.012999999999158e-06, 5.420000000026792e-07, 1.0166999999998427e-05, 5.409999999997361e-07, 4.9589999999988255e-06, 5.410000000032056e-07, 7.583999999997981e-06, 4.860000000009301e-07, 8.749999999998342e-06, 5.420000000026792e-07, 9.693999999997593e-06, 4.720000000013602e-07, 9.056000000000342e-06, 4.860000000009301e-07, 5.1249999999981866e-06, 5.419999999992098e-07, 8.597000000002547e-06, 5.409999999997361e-07, 6.11199999999909e-06, 5.409999999997361e-07, 5.292000000000491e-06, 4.860000000009301e-07, 7.624999999997217e-06, 4.860000000009301e-07, 8.971999999999453e-06, 4.860000000009301e-07, 4.389000000000476e-06, 5.419999999992098e-07, 9.444000000000813e-06, 4.870000000004038e-07, 4.082999999998477e-06, 5.419999999992098e-07, 1.0388000000000064e-05, 4.870000000004038e-07, 8.750000000001812e-06, 5.409999999997361e-07, 4.027999999999671e-06, 5.419999999992098e-07, 4.457999999998852e-06, 4.860000000009301e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 4.250000000000781e-06, 4.859999999974607e-07, 5.84800000000274e-06, 5.409999999997361e-07, 9.333999999999731e-06, 5.409999999997361e-07, 7.4719999999979525e-06, 4.870000000004038e-07, 3.875000000000406e-06, 4.860000000009301e-07, 9.110999999999148e-06, 4.720000000013602e-07, 4.680999999999436e-06, 5.409999999997361e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 1.0262999999999939e-05, 4.870000000004038e-07, 1.0026999999999259e-05, 5.420000000026792e-07, 8.096999999998578e-06, 5.419999999992098e-07, 6.444000000001282e-06, 5.419999999992098e-07, 4.361000000001336e-06, 4.859999999974607e-07, 8.361000000001867e-06, 5.419999999992098e-07, 8.000000000001062e-06, 4.860000000009301e-07, 8.777999999997482e-06, 5.419999999992098e-07, 4.458000000002321e-06, 5.419999999992098e-07, 9.958000000000883e-06, 5.419999999992098e-07, 4.582999999998977e-06, 4.720000000013602e-07, 9.888999999999037e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:21.653" endtime="20201110 08:36:21.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.649" endtime="20201110 08:36:21.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:21.662" level="INFO">${RESULT} = [{'time': 0.028798347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.028807514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:21.658" endtime="20201110 08:36:21.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:21.677" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:21.663" endtime="20201110 08:36:21.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.683" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:21.681" endtime="20201110 08:36:21.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.686" level="INFO">VALUE: [5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.410000000032056e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201110 08:36:21.684" endtime="20201110 08:36:21.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.678" endtime="20201110 08:36:21.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.691" endtime="20201110 08:36:21.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:21.697" endtime="20201110 08:36:21.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.694" endtime="20201110 08:36:21.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.689" endtime="20201110 08:36:21.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.256" endtime="20201110 08:36:21.719"></status>
</kw>
<msg timestamp="20201110 08:36:21.720" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.730" endtime="20201110 08:36:21.746"></status>
</kw>
<msg timestamp="20201110 08:36:21.746" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:21.728" endtime="20201110 08:36:21.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.749" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:21.747" endtime="20201110 08:36:21.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.751" endtime="20201110 08:36:21.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.725" endtime="20201110 08:36:21.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.722" endtime="20201110 08:36:21.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.764" endtime="20201110 08:36:22.056"></status>
</kw>
<msg timestamp="20201110 08:36:22.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024054667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:21.761" endtime="20201110 08:36:22.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024054667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:22.060" endtime="20201110 08:36:22.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.068" endtime="20201110 08:36:22.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.758" endtime="20201110 08:36:22.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.755" endtime="20201110 08:36:22.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.074" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:22.074" endtime="20201110 08:36:22.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.079" level="INFO">VALUE: [{'time': 0.024054667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.0240635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.024064042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.024070681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999999257e-06, 'source_diff': 6.638999999999257e-06}, {'time': 0.024071167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024078264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.024078806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.024086597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791000000000048e-06, 'source_diff': 7.791000000000048e-06}, {'time': 0.024087083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.024096139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.024096681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.024102389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.024102875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024111861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.024112347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024116222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.024116708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024127028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319999999997692e-05, 'source_diff': 1.0319999999997692e-05}, {'time': 0.024127569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.024132639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0699999999993806e-06, 'source_diff': 5.0699999999993806e-06}, {'time': 0.024133181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.024139833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.651999999999353e-06, 'source_diff': 6.651999999999353e-06}, {'time': 0.024140306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024149903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.024150389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024157278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.024157819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.024163111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.024163597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.024172556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.959000000002826e-06, 'source_diff': 8.959000000002826e-06}, {'time': 0.024173097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.024178278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.024178819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.024187111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.024187653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.024192208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.554999999999837e-06, 'source_diff': 4.554999999999837e-06}, {'time': 0.02419275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.024201153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.024201694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.024210333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.024210806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024218986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.024219458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024226625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.024227111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.024235764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.024236306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.024245653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.024246139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024256153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.024256639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024264042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.024264583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.024274444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.024274931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.024281194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.262999999999408e-06, 'source_diff': 6.262999999999408e-06}, {'time': 0.024281736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.024289514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.02429, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.024296167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.024296708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.024306458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.024307, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.024314569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569000000002407e-06, 'source_diff': 7.569000000002407e-06}, {'time': 0.024315056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.02431925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.024319736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024323722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.024324208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024329944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.024330486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.024338153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.024338694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.024348972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999998982e-05, 'source_diff': 1.0277999999998982e-05}, {'time': 0.024349514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.024358347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.024358833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024365625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.024366097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024373819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.024374361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.024382264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.024382736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024389639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.024390125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.024399806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.024400347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.024407403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.056000000001811e-06, 'source_diff': 7.056000000001811e-06}, {'time': 0.024407944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.024413111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.024413653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.024419375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.024419847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024424236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.388999999997006e-06, 'source_diff': 4.388999999997006e-06}, {'time': 0.024424778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.024435014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.024435486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024442125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999999257e-06, 'source_diff': 6.638999999999257e-06}, {'time': 0.024442667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:22.076" endtime="20201110 08:36:22.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.071" endtime="20201110 08:36:22.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:22.107" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:22.082" endtime="20201110 08:36:22.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.111" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:22.110" endtime="20201110 08:36:22.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.115" level="INFO">VALUE: {'eventdiff': [0, 5.410000000032056e-07, 8.292000000000022e-06, 5.419999999992098e-07, 6.638999999999257e-06, 4.860000000009301e-07, 7.0969999999975775e-06, 5.420000000026792e-07, 7.791000000000048e-06, 4.859999999974607e-07, 9.056000000000342e-06, 5.419999999992098e-07, 5.708000000000102e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.860000000009301e-07, 3.875000000000406e-06, 4.860000000009301e-07, 1.0319999999997692e-05, 5.410000000032056e-07, 5.0699999999993806e-06, 5.419999999992098e-07, 6.651999999999353e-06, 4.7300000000083386e-07, 9.597000000000078e-06, 4.860000000009301e-07, 6.888999999999507e-06, 5.409999999997361e-07, 5.292000000000491e-06, 4.859999999974607e-07, 8.959000000002826e-06, 5.409999999997361e-07, 5.180999999999936e-06, 5.409999999997361e-07, 8.292000000000022e-06, 5.419999999992098e-07, 4.554999999999837e-06, 5.419999999992098e-07, 8.403000000000577e-06, 5.409999999997361e-07, 8.639000000001257e-06, 4.7300000000083386e-07, 8.179999999999993e-06, 4.7199999999789077e-07, 7.167000000002366e-06, 4.859999999974607e-07, 8.653000000000827e-06, 5.419999999992098e-07, 9.346999999999828e-06, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 7.402999999999577e-06, 5.409999999997361e-07, 9.860999999999898e-06, 4.870000000004038e-07, 6.262999999999408e-06, 5.420000000026792e-07, 7.777999999999952e-06, 4.859999999974607e-07, 6.167000000001366e-06, 5.409999999997361e-07, 9.749999999999343e-06, 5.419999999992098e-07, 7.569000000002407e-06, 4.870000000004038e-07, 4.193999999999032e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.860000000009301e-07, 5.735999999999242e-06, 5.419999999992098e-07, 7.667000000002866e-06, 5.409999999997361e-07, 1.0277999999998982e-05, 5.419999999992098e-07, 8.832999999999758e-06, 4.860000000009301e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 7.722000000001672e-06, 5.419999999992098e-07, 7.903000000000077e-06, 4.7199999999789077e-07, 6.903000000002546e-06, 4.859999999974607e-07, 9.681000000000967e-06, 5.409999999997361e-07, 7.056000000001811e-06, 5.409999999997361e-07, 5.167000000000366e-06, 5.419999999992098e-07, 5.721999999999672e-06, 4.720000000013602e-07, 4.388999999997006e-06, 5.420000000026792e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 6.638999999999257e-06, 5.420000000026792e-07], 'time': [0.024054667, 0.024055208, 0.0240635, 0.024064042, 0.024070681, 0.024071167, 0.024078264, 0.024078806, 0.024086597, 0.024087083, 0.024096139, 0.024096681, 0.024102389, 0.024102875, 0.024111861, 0.024112347, 0.024116222, 0.024116708, 0.024127028, 0.024127569, 0.024132639, 0.024133181, 0.024139833, 0.024140306, 0.024149903, 0.024150389, 0.024157278, 0.024157819, 0.024163111, 0.024163597, 0.024172556, 0.024173097, 0.024178278, 0.024178819, 0.024187111, 0.024187653, 0.024192208, 0.02419275, 0.024201153, 0.024201694, 0.024210333, 0.024210806, 0.024218986, 0.024219458, 0.024226625, 0.024227111, 0.024235764, 0.024236306, 0.024245653, 0.024246139, 0.024256153, 0.024256639, 0.024264042, 0.024264583, 0.024274444, 0.024274931, 0.024281194, 0.024281736, 0.024289514, 0.02429, 0.024296167, 0.024296708, 0.024306458, 0.024307, 0.024314569, 0.024315056, 0.02431925, 0.024319736, 0.024323722, 0.024324208, 0.024329944, 0.024330486, 0.024338153, 0.024338694, 0.024348972, 0.024349514, 0.024358347, 0.024358833, 0.024365625, 0.024366097, 0.024373819, 0.024374361, 0.024382264, 0.024382736, 0.024389639, 0.024390125, 0.024399806, 0.024400347, 0.024407403, 0.024407944, 0.024413111, 0.024413653, 0.024419375, 0.024419847, 0.024424236, 0.024424778, 0.024435014, 0.024435486, 0.024442125, 0.024442667], 'sourcesource_diff': [0, 5.410000000032056e-07, 8.292000000000022e-06, 5.419999999992098e-07, 6.638999999999257e-06, 4.860000000009301e-07, 7.0969999999975775e-06, 5.420000000026792e-07, 7.791000000000048e-06, 4.859999999974607e-07, 9.056000000000342e-06, 5.419999999992098e-07, 5.708000000000102e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.860000000009301e-07, 3.875000000000406e-06, 4.860000000009301e-07, 1.0319999999997692e-05, 5.410000000032056e-07, 5.0699999999993806e-06, 5.419999999992098e-07, 6.651999999999353e-06, 4.7300000000083386e-07, 9.597000000000078e-06, 4.860000000009301e-07, 6.888999999999507e-06, 5.409999999997361e-07, 5.292000000000491e-06, 4.859999999974607e-07, 8.959000000002826e-06, 5.409999999997361e-07, 5.180999999999936e-06, 5.409999999997361e-07, 8.292000000000022e-06, 5.419999999992098e-07, 4.554999999999837e-06, 5.419999999992098e-07, 8.403000000000577e-06, 5.409999999997361e-07, 8.639000000001257e-06, 4.7300000000083386e-07, 8.179999999999993e-06, 4.7199999999789077e-07, 7.167000000002366e-06, 4.859999999974607e-07, 8.653000000000827e-06, 5.419999999992098e-07, 9.346999999999828e-06, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 7.402999999999577e-06, 5.409999999997361e-07, 9.860999999999898e-06, 4.870000000004038e-07, 6.262999999999408e-06, 5.420000000026792e-07, 7.777999999999952e-06, 4.859999999974607e-07, 6.167000000001366e-06, 5.409999999997361e-07, 9.749999999999343e-06, 5.419999999992098e-07, 7.569000000002407e-06, 4.870000000004038e-07, 4.193999999999032e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.860000000009301e-07, 5.735999999999242e-06, 5.419999999992098e-07, 7.667000000002866e-06, 5.409999999997361e-07, 1.0277999999998982e-05, 5.419999999992098e-07, 8.832999999999758e-06, 4.860000000009301e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 7.722000000001672e-06, 5.419999999992098e-07, 7.903000000000077e-06, 4.7199999999789077e-07, 6.903000000002546e-06, 4.859999999974607e-07, 9.681000000000967e-06, 5.409999999997361e-07, 7.056000000001811e-06, 5.409999999997361e-07, 5.167000000000366e-06, 5.419999999992098e-07, 5.721999999999672e-06, 4.720000000013602e-07, 4.388999999997006e-06, 5.420000000026792e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 6.638999999999257e-06, 5.420000000026792e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:22.112" endtime="20201110 08:36:22.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.108" endtime="20201110 08:36:22.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:22.120" level="INFO">${RESULT} = [{'time': 0.024055208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.024064042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:22.117" endtime="20201110 08:36:22.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:22.134" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:22.121" endtime="20201110 08:36:22.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.138" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:22.137" endtime="20201110 08:36:22.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.140" level="INFO">VALUE: [5.410000000032056e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.410000000032056e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.870000000004038e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 5.420000000026792e-07]</msg>
<status status="PASS" starttime="20201110 08:36:22.139" endtime="20201110 08:36:22.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.135" endtime="20201110 08:36:22.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.144" endtime="20201110 08:36:22.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:22.147" endtime="20201110 08:36:22.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.145" endtime="20201110 08:36:22.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.142" endtime="20201110 08:36:22.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.720" endtime="20201110 08:36:22.168"></status>
</kw>
<msg timestamp="20201110 08:36:22.168" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.175" endtime="20201110 08:36:22.194"></status>
</kw>
<msg timestamp="20201110 08:36:22.194" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:22.174" endtime="20201110 08:36:22.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.196" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:22.195" endtime="20201110 08:36:22.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.198" endtime="20201110 08:36:22.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.171" endtime="20201110 08:36:22.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.170" endtime="20201110 08:36:22.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.206" endtime="20201110 08:36:22.490"></status>
</kw>
<msg timestamp="20201110 08:36:22.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:22.205" endtime="20201110 08:36:22.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:22.494" endtime="20201110 08:36:22.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.503" endtime="20201110 08:36:22.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.202" endtime="20201110 08:36:22.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.201" endtime="20201110 08:36:22.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.509" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:22.508" endtime="20201110 08:36:22.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.514" level="INFO">VALUE: [{'time': 0.021863542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021871236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.021871778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021877069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.290999999997548e-06, 'source_diff': 5.290999999997548e-06}, {'time': 0.021877611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021887792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.021888333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021894069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.021894542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021903736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.021904278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021914153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.021914694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021921778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.084000000000951e-06, 'source_diff': 7.084000000000951e-06}, {'time': 0.021922264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021932583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0318999999998218e-05, 'source_diff': 1.0318999999998218e-05}, {'time': 0.021933069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021938389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.021938931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021946208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.021946694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021951306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.61200000000106e-06, 'source_diff': 4.61200000000106e-06}, {'time': 0.021951778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021962208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.021962694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021970514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.021971056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021975736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.021976208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021984569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.021985056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021989875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.021990361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021999208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.02199975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022010028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.022010569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022018583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.022019056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022024056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.022024597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022034458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.022035, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022043208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.022043681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0220535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.022054042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022062931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.022063403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022070292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.022070778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022075292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.022075778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022079875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.022080347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022086931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.022087472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022093556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.022094028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022099847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.022100389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022110458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0068999999997968e-05, 'source_diff': 1.0068999999997968e-05}, {'time': 0.022111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022119097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.097000000002047e-06, 'source_diff': 8.097000000002047e-06}, {'time': 0.022119583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022123556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972999999997395e-06, 'source_diff': 3.972999999997395e-06}, {'time': 0.022124097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022129069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.022129611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022134694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.022135181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022144597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.415999999998204e-06, 'source_diff': 9.415999999998204e-06}, {'time': 0.022145069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022154861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.022155347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022162458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.022162944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022167681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.737000000001185e-06, 'source_diff': 4.737000000001185e-06}, {'time': 0.022168153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022176597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.022177083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022184792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708999999998106e-06, 'source_diff': 7.708999999998106e-06}, {'time': 0.022185333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.022194458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.022195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022199875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.022200361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022207139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.778000000002421e-06, 'source_diff': 6.778000000002421e-06}, {'time': 0.022207681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022216917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999999273e-06, 'source_diff': 9.235999999999273e-06}, {'time': 0.022217458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022222222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.022222708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022231778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.022232319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022239889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.022240431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022244569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.137999999997283e-06, 'source_diff': 4.137999999997283e-06}, {'time': 0.022245111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:22.511" endtime="20201110 08:36:22.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.506" endtime="20201110 08:36:22.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:22.541" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:22.517" endtime="20201110 08:36:22.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.545" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:22.544" endtime="20201110 08:36:22.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.549" level="INFO">VALUE: {'eventdiff': [0, 4.860000000009301e-07, 7.2079999999981326e-06, 5.420000000026792e-07, 5.290999999997548e-06, 5.420000000026792e-07, 1.0180999999997997e-05, 5.409999999997361e-07, 5.735999999999242e-06, 4.7300000000083386e-07, 9.194000000000563e-06, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 7.084000000000951e-06, 4.860000000009301e-07, 1.0318999999998218e-05, 4.860000000009301e-07, 5.319999999999631e-06, 5.419999999992098e-07, 7.276999999999978e-06, 4.860000000009301e-07, 4.61200000000106e-06, 4.720000000013602e-07, 1.0429999999998774e-05, 4.860000000009301e-07, 7.819999999998661e-06, 5.419999999992098e-07, 4.679999999999962e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.870000000004038e-07, 4.818999999999657e-06, 4.860000000009301e-07, 8.846999999999328e-06, 5.419999999992098e-07, 1.0278000000002452e-05, 5.409999999997361e-07, 8.014000000000632e-06, 4.729999999973644e-07, 5.000000000001531e-06, 5.409999999997361e-07, 9.860999999999898e-06, 5.419999999992098e-07, 8.208000000002602e-06, 4.729999999973644e-07, 9.819000000001188e-06, 5.419999999992098e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 6.888999999999507e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.860000000009301e-07, 4.096999999998047e-06, 4.720000000013602e-07, 6.584000000000451e-06, 5.409999999997361e-07, 6.0839999999999506e-06, 4.720000000013602e-07, 5.8189999999971875e-06, 5.420000000026792e-07, 1.0068999999997968e-05, 5.419999999992098e-07, 8.097000000002047e-06, 4.860000000009301e-07, 3.972999999997395e-06, 5.409999999997361e-07, 4.972000000002391e-06, 5.419999999992098e-07, 5.082999999999477e-06, 4.870000000004038e-07, 9.415999999998204e-06, 4.720000000013602e-07, 9.792000000001522e-06, 4.859999999974607e-07, 7.111000000000617e-06, 4.860000000009301e-07, 4.737000000001185e-06, 4.7199999999789077e-07, 8.443999999999813e-06, 4.860000000009301e-07, 7.708999999998106e-06, 5.410000000032056e-07, 9.124999999998717e-06, 5.419999999992098e-07, 4.875000000001406e-06, 4.859999999974607e-07, 6.778000000002421e-06, 5.419999999992098e-07, 9.235999999999273e-06, 5.409999999997361e-07, 4.764000000000851e-06, 4.860000000009301e-07, 9.069999999999911e-06, 5.409999999997361e-07, 7.569999999998411e-06, 5.420000000026792e-07, 4.137999999997283e-06, 5.420000000026792e-07], 'time': [0.021863542, 0.021864028, 0.021871236, 0.021871778, 0.021877069, 0.021877611, 0.021887792, 0.021888333, 0.021894069, 0.021894542, 0.021903736, 0.021904278, 0.021914153, 0.021914694, 0.021921778, 0.021922264, 0.021932583, 0.021933069, 0.021938389, 0.021938931, 0.021946208, 0.021946694, 0.021951306, 0.021951778, 0.021962208, 0.021962694, 0.021970514, 0.021971056, 0.021975736, 0.021976208, 0.021984569, 0.021985056, 0.021989875, 0.021990361, 0.021999208, 0.02199975, 0.022010028, 0.022010569, 0.022018583, 0.022019056, 0.022024056, 0.022024597, 0.022034458, 0.022035, 0.022043208, 0.022043681, 0.0220535, 0.022054042, 0.022062931, 0.022063403, 0.022070292, 0.022070778, 0.022075292, 0.022075778, 0.022079875, 0.022080347, 0.022086931, 0.022087472, 0.022093556, 0.022094028, 0.022099847, 0.022100389, 0.022110458, 0.022111, 0.022119097, 0.022119583, 0.022123556, 0.022124097, 0.022129069, 0.022129611, 0.022134694, 0.022135181, 0.022144597, 0.022145069, 0.022154861, 0.022155347, 0.022162458, 0.022162944, 0.022167681, 0.022168153, 0.022176597, 0.022177083, 0.022184792, 0.022185333, 0.022194458, 0.022195, 0.022199875, 0.022200361, 0.022207139, 0.022207681, 0.022216917, 0.022217458, 0.022222222, 0.022222708, 0.022231778, 0.022232319, 0.022239889, 0.022240431, 0.022244569, 0.022245111], 'sourcesource_diff': [0, 4.860000000009301e-07, 7.2079999999981326e-06, 5.420000000026792e-07, 5.290999999997548e-06, 5.420000000026792e-07, 1.0180999999997997e-05, 5.409999999997361e-07, 5.735999999999242e-06, 4.7300000000083386e-07, 9.194000000000563e-06, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 7.084000000000951e-06, 4.860000000009301e-07, 1.0318999999998218e-05, 4.860000000009301e-07, 5.319999999999631e-06, 5.419999999992098e-07, 7.276999999999978e-06, 4.860000000009301e-07, 4.61200000000106e-06, 4.720000000013602e-07, 1.0429999999998774e-05, 4.860000000009301e-07, 7.819999999998661e-06, 5.419999999992098e-07, 4.679999999999962e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.870000000004038e-07, 4.818999999999657e-06, 4.860000000009301e-07, 8.846999999999328e-06, 5.419999999992098e-07, 1.0278000000002452e-05, 5.409999999997361e-07, 8.014000000000632e-06, 4.729999999973644e-07, 5.000000000001531e-06, 5.409999999997361e-07, 9.860999999999898e-06, 5.419999999992098e-07, 8.208000000002602e-06, 4.729999999973644e-07, 9.819000000001188e-06, 5.419999999992098e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 6.888999999999507e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.860000000009301e-07, 4.096999999998047e-06, 4.720000000013602e-07, 6.584000000000451e-06, 5.409999999997361e-07, 6.0839999999999506e-06, 4.720000000013602e-07, 5.8189999999971875e-06, 5.420000000026792e-07, 1.0068999999997968e-05, 5.419999999992098e-07, 8.097000000002047e-06, 4.860000000009301e-07, 3.972999999997395e-06, 5.409999999997361e-07, 4.972000000002391e-06, 5.419999999992098e-07, 5.082999999999477e-06, 4.870000000004038e-07, 9.415999999998204e-06, 4.720000000013602e-07, 9.792000000001522e-06, 4.859999999974607e-07, 7.111000000000617e-06, 4.860000000009301e-07, 4.737000000001185e-06, 4.7199999999789077e-07, 8.443999999999813e-06, 4.860000000009301e-07, 7.708999999998106e-06, 5.410000000032056e-07, 9.124999999998717e-06, 5.419999999992098e-07, 4.875000000001406e-06, 4.859999999974607e-07, 6.778000000002421e-06, 5.419999999992098e-07, 9.235999999999273e-06, 5.409999999997361e-07, 4.764000000000851e-06, 4.860000000009301e-07, 9.069999999999911e-06, 5.409999999997361e-07, 7.569999999998411e-06, 5.420000000026792e-07, 4.137999999997283e-06, 5.420000000026792e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:22.546" endtime="20201110 08:36:22.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.542" endtime="20201110 08:36:22.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:22.554" level="INFO">${RESULT} = [{'time': 0.021864028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021871778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:22.551" endtime="20201110 08:36:22.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:22.568" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:22.555" endtime="20201110 08:36:22.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.572" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:22.571" endtime="20201110 08:36:22.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.575" level="INFO">VALUE: [4.860000000009301e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.729999999973644e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.729999999973644e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.410000000032056e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.420000000026792e-07]</msg>
<status status="PASS" starttime="20201110 08:36:22.573" endtime="20201110 08:36:22.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.569" endtime="20201110 08:36:22.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.578" endtime="20201110 08:36:22.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:22.581" endtime="20201110 08:36:22.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.579" endtime="20201110 08:36:22.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.576" endtime="20201110 08:36:22.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.168" endtime="20201110 08:36:22.602"></status>
</kw>
<msg timestamp="20201110 08:36:22.602" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.610" endtime="20201110 08:36:22.624"></status>
</kw>
<msg timestamp="20201110 08:36:22.625" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:22.609" endtime="20201110 08:36:22.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.627" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:22.626" endtime="20201110 08:36:22.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.628" endtime="20201110 08:36:22.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.606" endtime="20201110 08:36:22.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.604" endtime="20201110 08:36:22.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.637" endtime="20201110 08:36:22.925"></status>
</kw>
<msg timestamp="20201110 08:36:22.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019790583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019791125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:22.636" endtime="20201110 08:36:22.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019790583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019791125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:22.929" endtime="20201110 08:36:22.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.937" endtime="20201110 08:36:22.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.633" endtime="20201110 08:36:22.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.631" endtime="20201110 08:36:22.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.944" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:22.943" endtime="20201110 08:36:22.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.949" level="INFO">VALUE: [{'time': 0.019790583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019791125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019796611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.019797153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019803792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999999257e-06, 'source_diff': 6.638999999999257e-06}, {'time': 0.019804333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019812514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.019813056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019819792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.019820333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019830208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.019830694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019838722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.019839264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019844222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.958000000002821e-06, 'source_diff': 4.958000000002821e-06}, {'time': 0.019844764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019848694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.019849236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019858264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.019858806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019863264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.01986375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019872708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.01987325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019881556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.306000000003061e-06, 'source_diff': 8.306000000003061e-06}, {'time': 0.019882042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019890917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.019891403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019897667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.019898153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019904319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.019904861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019910653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.019911194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019918986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.019919472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019926875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.019927417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.01993675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.019937292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019942264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.019942806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019951208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402000000001103e-06, 'source_diff': 8.402000000001103e-06}, {'time': 0.019951694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019957042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.019957528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019963722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.019964194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019969819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.019970306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019974736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.019975208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019984264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.019984806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019991847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.019992389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019999236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.019999778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020008792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.020009333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020014625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.020015167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020024597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.430000000001243e-06, 'source_diff': 9.430000000001243e-06}, {'time': 0.020025139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020032403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.020032944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020038431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486999999998465e-06, 'source_diff': 5.486999999998465e-06}, {'time': 0.020038972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020046861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000000507e-06, 'source_diff': 7.889000000000507e-06}, {'time': 0.020047347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020056833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.020057375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020067667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.020068153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020073986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.020074528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020082417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000000507e-06, 'source_diff': 7.889000000000507e-06}, {'time': 0.020082958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020087306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.34799999999777e-06, 'source_diff': 4.34799999999777e-06}, {'time': 0.020087847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020092736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.020093208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020098319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.020098861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.0201055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999999257e-06, 'source_diff': 6.638999999999257e-06}, {'time': 0.020106042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020115486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.020115972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020122042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.020122528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020132111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.020132653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.02014075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.020141292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020145639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.020146125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020153431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.020153972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020161639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.020162181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:22.945" endtime="20201110 08:36:22.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.940" endtime="20201110 08:36:22.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:22.976" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:22.951" endtime="20201110 08:36:22.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.980" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:22.979" endtime="20201110 08:36:22.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.985" level="INFO">VALUE: {'eventdiff': [0, 5.419999999992098e-07, 5.485999999998992e-06, 5.420000000026792e-07, 6.638999999999257e-06, 5.409999999997361e-07, 8.180999999999466e-06, 5.419999999992098e-07, 6.736000000000242e-06, 5.409999999997361e-07, 9.874999999999468e-06, 4.860000000009301e-07, 8.028000000000202e-06, 5.419999999992098e-07, 4.958000000002821e-06, 5.419999999992098e-07, 3.929999999999212e-06, 5.419999999992098e-07, 9.028000000001202e-06, 5.419999999992098e-07, 4.457999999998852e-06, 4.860000000009301e-07, 8.957999999999883e-06, 5.419999999992098e-07, 8.306000000003061e-06, 4.859999999974607e-07, 8.875000000001937e-06, 4.859999999974607e-07, 6.264000000002351e-06, 4.859999999974607e-07, 6.166000000001892e-06, 5.419999999992098e-07, 5.792000000000991e-06, 5.409999999997361e-07, 7.791999999999522e-06, 4.860000000009301e-07, 7.402999999999577e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 4.972000000002391e-06, 5.419999999992098e-07, 8.402000000001103e-06, 4.859999999974607e-07, 5.34800000000224e-06, 4.859999999974607e-07, 6.194000000001032e-06, 4.720000000013602e-07, 5.624999999998687e-06, 4.870000000004038e-07, 4.429999999999712e-06, 4.720000000013602e-07, 9.056000000000342e-06, 5.419999999992098e-07, 7.040999999999298e-06, 5.419999999992098e-07, 6.847000000000797e-06, 5.419999999992098e-07, 9.014000000001632e-06, 5.409999999997361e-07, 5.292000000000491e-06, 5.419999999992098e-07, 9.430000000001243e-06, 5.419999999992098e-07, 7.263999999999882e-06, 5.409999999997361e-07, 5.486999999998465e-06, 5.409999999997361e-07, 7.889000000000507e-06, 4.860000000009301e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.0292000000002022e-05, 4.859999999974607e-07, 5.833000000000227e-06, 5.420000000026792e-07, 7.889000000000507e-06, 5.409999999997361e-07, 4.34799999999777e-06, 5.409999999997361e-07, 4.889000000000976e-06, 4.720000000013602e-07, 5.110999999998617e-06, 5.419999999992098e-07, 6.638999999999257e-06, 5.420000000026792e-07, 9.443999999997343e-06, 4.860000000009301e-07, 6.070000000000381e-06, 4.860000000009301e-07, 9.583000000000508e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.420000000026792e-07, 4.346999999998297e-06, 4.860000000009301e-07, 7.305999999998591e-06, 5.409999999997361e-07, 7.666999999999397e-06, 5.420000000026792e-07], 'time': [0.019790583, 0.019791125, 0.019796611, 0.019797153, 0.019803792, 0.019804333, 0.019812514, 0.019813056, 0.019819792, 0.019820333, 0.019830208, 0.019830694, 0.019838722, 0.019839264, 0.019844222, 0.019844764, 0.019848694, 0.019849236, 0.019858264, 0.019858806, 0.019863264, 0.01986375, 0.019872708, 0.01987325, 0.019881556, 0.019882042, 0.019890917, 0.019891403, 0.019897667, 0.019898153, 0.019904319, 0.019904861, 0.019910653, 0.019911194, 0.019918986, 0.019919472, 0.019926875, 0.019927417, 0.01993675, 0.019937292, 0.019942264, 0.019942806, 0.019951208, 0.019951694, 0.019957042, 0.019957528, 0.019963722, 0.019964194, 0.019969819, 0.019970306, 0.019974736, 0.019975208, 0.019984264, 0.019984806, 0.019991847, 0.019992389, 0.019999236, 0.019999778, 0.020008792, 0.020009333, 0.020014625, 0.020015167, 0.020024597, 0.020025139, 0.020032403, 0.020032944, 0.020038431, 0.020038972, 0.020046861, 0.020047347, 0.020056833, 0.020057375, 0.020067667, 0.020068153, 0.020073986, 0.020074528, 0.020082417, 0.020082958, 0.020087306, 0.020087847, 0.020092736, 0.020093208, 0.020098319, 0.020098861, 0.0201055, 0.020106042, 0.020115486, 0.020115972, 0.020122042, 0.020122528, 0.020132111, 0.020132653, 0.02014075, 0.020141292, 0.020145639, 0.020146125, 0.020153431, 0.020153972, 0.020161639, 0.020162181], 'sourcesource_diff': [0, 5.419999999992098e-07, 5.485999999998992e-06, 5.420000000026792e-07, 6.638999999999257e-06, 5.409999999997361e-07, 8.180999999999466e-06, 5.419999999992098e-07, 6.736000000000242e-06, 5.409999999997361e-07, 9.874999999999468e-06, 4.860000000009301e-07, 8.028000000000202e-06, 5.419999999992098e-07, 4.958000000002821e-06, 5.419999999992098e-07, 3.929999999999212e-06, 5.419999999992098e-07, 9.028000000001202e-06, 5.419999999992098e-07, 4.457999999998852e-06, 4.860000000009301e-07, 8.957999999999883e-06, 5.419999999992098e-07, 8.306000000003061e-06, 4.859999999974607e-07, 8.875000000001937e-06, 4.859999999974607e-07, 6.264000000002351e-06, 4.859999999974607e-07, 6.166000000001892e-06, 5.419999999992098e-07, 5.792000000000991e-06, 5.409999999997361e-07, 7.791999999999522e-06, 4.860000000009301e-07, 7.402999999999577e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 4.972000000002391e-06, 5.419999999992098e-07, 8.402000000001103e-06, 4.859999999974607e-07, 5.34800000000224e-06, 4.859999999974607e-07, 6.194000000001032e-06, 4.720000000013602e-07, 5.624999999998687e-06, 4.870000000004038e-07, 4.429999999999712e-06, 4.720000000013602e-07, 9.056000000000342e-06, 5.419999999992098e-07, 7.040999999999298e-06, 5.419999999992098e-07, 6.847000000000797e-06, 5.419999999992098e-07, 9.014000000001632e-06, 5.409999999997361e-07, 5.292000000000491e-06, 5.419999999992098e-07, 9.430000000001243e-06, 5.419999999992098e-07, 7.263999999999882e-06, 5.409999999997361e-07, 5.486999999998465e-06, 5.409999999997361e-07, 7.889000000000507e-06, 4.860000000009301e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.0292000000002022e-05, 4.859999999974607e-07, 5.833000000000227e-06, 5.420000000026792e-07, 7.889000000000507e-06, 5.409999999997361e-07, 4.34799999999777e-06, 5.409999999997361e-07, 4.889000000000976e-06, 4.720000000013602e-07, 5.110999999998617e-06, 5.419999999992098e-07, 6.638999999999257e-06, 5.420000000026792e-07, 9.443999999997343e-06, 4.860000000009301e-07, 6.070000000000381e-06, 4.860000000009301e-07, 9.583000000000508e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.420000000026792e-07, 4.346999999998297e-06, 4.860000000009301e-07, 7.305999999998591e-06, 5.409999999997361e-07, 7.666999999999397e-06, 5.420000000026792e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:22.981" endtime="20201110 08:36:22.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.977" endtime="20201110 08:36:22.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:22.991" level="INFO">${RESULT} = [{'time': 0.019791125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019797153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:22.987" endtime="20201110 08:36:22.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:23.004" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:22.992" endtime="20201110 08:36:23.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.009" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:23.008" endtime="20201110 08:36:23.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.011" level="INFO">VALUE: [5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07]</msg>
<status status="PASS" starttime="20201110 08:36:23.010" endtime="20201110 08:36:23.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.005" endtime="20201110 08:36:23.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.014" endtime="20201110 08:36:23.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:23.017" endtime="20201110 08:36:23.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.016" endtime="20201110 08:36:23.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.013" endtime="20201110 08:36:23.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.603" endtime="20201110 08:36:23.038"></status>
</kw>
<msg timestamp="20201110 08:36:23.039" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.046" endtime="20201110 08:36:23.062"></status>
</kw>
<msg timestamp="20201110 08:36:23.063" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:23.045" endtime="20201110 08:36:23.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.065" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:23.064" endtime="20201110 08:36:23.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.066" endtime="20201110 08:36:23.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.042" endtime="20201110 08:36:23.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.040" endtime="20201110 08:36:23.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.075" endtime="20201110 08:36:23.363"></status>
</kw>
<msg timestamp="20201110 08:36:23.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:23.073" endtime="20201110 08:36:23.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:23.367" endtime="20201110 08:36:23.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.375" endtime="20201110 08:36:23.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.071" endtime="20201110 08:36:23.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.069" endtime="20201110 08:36:23.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.382" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:23.381" endtime="20201110 08:36:23.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.387" level="INFO">VALUE: [{'time': 0.020220556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02022575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.020226236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020231972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.020232514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020240181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.020240722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020245347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.020245819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020253722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.020254264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020259139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.020259681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020263819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.137999999997283e-06, 'source_diff': 4.137999999997283e-06}, {'time': 0.020264361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020269139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.020269681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020276792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.020277264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020285375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.111000000001617e-06, 'source_diff': 8.111000000001617e-06}, {'time': 0.020285917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020290167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.020290708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020297583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.020298069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020306514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.445000000002756e-06, 'source_diff': 8.445000000002756e-06}, {'time': 0.020307056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020315458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402000000001103e-06, 'source_diff': 8.402000000001103e-06}, {'time': 0.020316, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020323681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.020324167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020330736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.568999999997938e-06, 'source_diff': 6.568999999997938e-06}, {'time': 0.020331278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020340194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.020340736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020350375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.020350917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020356625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.020357111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020362875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.020363347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020372833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.020373375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020383222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.020383764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020393625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.020394167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020404458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0290999999999079e-05, 'source_diff': 1.0290999999999079e-05}, {'time': 0.020404931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020411597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.665999999998923e-06, 'source_diff': 6.665999999998923e-06}, {'time': 0.020412139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020416806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.020417347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020424278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.020424819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020433639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.020434181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020438208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027000000000197e-06, 'source_diff': 4.027000000000197e-06}, {'time': 0.02043875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020447472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.020447958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020454736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.778000000002421e-06, 'source_diff': 6.778000000002421e-06}, {'time': 0.020455278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020464, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.020464486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020474597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.020475139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020480625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.020481167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020486444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.020486986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020493403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.020493944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020503806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.861999999999371e-06, 'source_diff': 9.861999999999371e-06}, {'time': 0.020504347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020511806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.020512347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020518125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.020518597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020528236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.020528722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020532819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.020533292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02053925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9579999999968825e-06, 'source_diff': 5.9579999999968825e-06}, {'time': 0.020539736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020546833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.020547375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020551514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.020552056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020556625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.020557167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020564542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.020565083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020572875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.020573361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020577861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.020578403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020583806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.020584347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:23.383" endtime="20201110 08:36:23.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.379" endtime="20201110 08:36:23.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:23.413" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:23.389" endtime="20201110 08:36:23.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.417" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:23.416" endtime="20201110 08:36:23.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.421" level="INFO">VALUE: {'eventdiff': [0, 4.860000000009301e-07, 4.707999999999102e-06, 4.860000000009301e-07, 5.735999999999242e-06, 5.419999999992098e-07, 7.666999999999397e-06, 5.409999999997361e-07, 4.625000000001156e-06, 4.720000000013602e-07, 7.902999999996607e-06, 5.420000000026792e-07, 4.8749999999979365e-06, 5.420000000026792e-07, 4.137999999997283e-06, 5.420000000026792e-07, 4.777999999996951e-06, 5.420000000026792e-07, 7.110999999997147e-06, 4.720000000013602e-07, 8.111000000001617e-06, 5.419999999992098e-07, 4.250000000000781e-06, 5.409999999997361e-07, 6.874999999999937e-06, 4.859999999974607e-07, 8.445000000002756e-06, 5.419999999992098e-07, 8.402000000001103e-06, 5.419999999992098e-07, 7.680999999998966e-06, 4.860000000009301e-07, 6.568999999997938e-06, 5.420000000026792e-07, 8.915999999997704e-06, 5.420000000026792e-07, 9.638999999998787e-06, 5.419999999992098e-07, 5.708000000000102e-06, 4.860000000009301e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 9.485999999999523e-06, 5.419999999992098e-07, 9.847000000000328e-06, 5.419999999992098e-07, 9.860999999999898e-06, 5.420000000026792e-07, 1.0290999999999079e-05, 4.7300000000083386e-07, 6.665999999998923e-06, 5.419999999992098e-07, 4.666999999999866e-06, 5.409999999997361e-07, 6.931000000001686e-06, 5.409999999997361e-07, 8.819999999999661e-06, 5.419999999992098e-07, 4.027000000000197e-06, 5.419999999992098e-07, 8.722000000002672e-06, 4.859999999974607e-07, 6.778000000002421e-06, 5.419999999992098e-07, 8.721999999999203e-06, 4.860000000009301e-07, 1.0111000000000148e-05, 5.419999999992098e-07, 5.485999999998992e-06, 5.420000000026792e-07, 5.276999999997978e-06, 5.419999999992098e-07, 6.417000000001616e-06, 5.409999999997361e-07, 9.861999999999371e-06, 5.409999999997361e-07, 7.459000000001326e-06, 5.409999999997361e-07, 5.778000000001421e-06, 4.7199999999789077e-07, 9.638999999998787e-06, 4.860000000009301e-07, 4.097000000001516e-06, 4.7300000000083386e-07, 5.9579999999968825e-06, 4.860000000009301e-07, 7.097000000001047e-06, 5.419999999992098e-07, 4.139000000000226e-06, 5.419999999992098e-07, 4.568999999999407e-06, 5.420000000026792e-07, 7.375000000000437e-06, 5.409999999997361e-07, 7.791999999999522e-06, 4.859999999974607e-07, 4.500000000001031e-06, 5.419999999992098e-07, 5.403000000001046e-06, 5.409999999997361e-07], 'time': [0.020220556, 0.020221042, 0.02022575, 0.020226236, 0.020231972, 0.020232514, 0.020240181, 0.020240722, 0.020245347, 0.020245819, 0.020253722, 0.020254264, 0.020259139, 0.020259681, 0.020263819, 0.020264361, 0.020269139, 0.020269681, 0.020276792, 0.020277264, 0.020285375, 0.020285917, 0.020290167, 0.020290708, 0.020297583, 0.020298069, 0.020306514, 0.020307056, 0.020315458, 0.020316, 0.020323681, 0.020324167, 0.020330736, 0.020331278, 0.020340194, 0.020340736, 0.020350375, 0.020350917, 0.020356625, 0.020357111, 0.020362875, 0.020363347, 0.020372833, 0.020373375, 0.020383222, 0.020383764, 0.020393625, 0.020394167, 0.020404458, 0.020404931, 0.020411597, 0.020412139, 0.020416806, 0.020417347, 0.020424278, 0.020424819, 0.020433639, 0.020434181, 0.020438208, 0.02043875, 0.020447472, 0.020447958, 0.020454736, 0.020455278, 0.020464, 0.020464486, 0.020474597, 0.020475139, 0.020480625, 0.020481167, 0.020486444, 0.020486986, 0.020493403, 0.020493944, 0.020503806, 0.020504347, 0.020511806, 0.020512347, 0.020518125, 0.020518597, 0.020528236, 0.020528722, 0.020532819, 0.020533292, 0.02053925, 0.020539736, 0.020546833, 0.020547375, 0.020551514, 0.020552056, 0.020556625, 0.020557167, 0.020564542, 0.020565083, 0.020572875, 0.020573361, 0.020577861, 0.020578403, 0.020583806, 0.020584347], 'sourcesource_diff': [0, 4.860000000009301e-07, 4.707999999999102e-06, 4.860000000009301e-07, 5.735999999999242e-06, 5.419999999992098e-07, 7.666999999999397e-06, 5.409999999997361e-07, 4.625000000001156e-06, 4.720000000013602e-07, 7.902999999996607e-06, 5.420000000026792e-07, 4.8749999999979365e-06, 5.420000000026792e-07, 4.137999999997283e-06, 5.420000000026792e-07, 4.777999999996951e-06, 5.420000000026792e-07, 7.110999999997147e-06, 4.720000000013602e-07, 8.111000000001617e-06, 5.419999999992098e-07, 4.250000000000781e-06, 5.409999999997361e-07, 6.874999999999937e-06, 4.859999999974607e-07, 8.445000000002756e-06, 5.419999999992098e-07, 8.402000000001103e-06, 5.419999999992098e-07, 7.680999999998966e-06, 4.860000000009301e-07, 6.568999999997938e-06, 5.420000000026792e-07, 8.915999999997704e-06, 5.420000000026792e-07, 9.638999999998787e-06, 5.419999999992098e-07, 5.708000000000102e-06, 4.860000000009301e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 9.485999999999523e-06, 5.419999999992098e-07, 9.847000000000328e-06, 5.419999999992098e-07, 9.860999999999898e-06, 5.420000000026792e-07, 1.0290999999999079e-05, 4.7300000000083386e-07, 6.665999999998923e-06, 5.419999999992098e-07, 4.666999999999866e-06, 5.409999999997361e-07, 6.931000000001686e-06, 5.409999999997361e-07, 8.819999999999661e-06, 5.419999999992098e-07, 4.027000000000197e-06, 5.419999999992098e-07, 8.722000000002672e-06, 4.859999999974607e-07, 6.778000000002421e-06, 5.419999999992098e-07, 8.721999999999203e-06, 4.860000000009301e-07, 1.0111000000000148e-05, 5.419999999992098e-07, 5.485999999998992e-06, 5.420000000026792e-07, 5.276999999997978e-06, 5.419999999992098e-07, 6.417000000001616e-06, 5.409999999997361e-07, 9.861999999999371e-06, 5.409999999997361e-07, 7.459000000001326e-06, 5.409999999997361e-07, 5.778000000001421e-06, 4.7199999999789077e-07, 9.638999999998787e-06, 4.860000000009301e-07, 4.097000000001516e-06, 4.7300000000083386e-07, 5.9579999999968825e-06, 4.860000000009301e-07, 7.097000000001047e-06, 5.419999999992098e-07, 4.139000000000226e-06, 5.419999999992098e-07, 4.568999999999407e-06, 5.420000000026792e-07, 7.375000000000437e-06, 5.409999999997361e-07, 7.791999999999522e-06, 4.859999999974607e-07, 4.500000000001031e-06, 5.419999999992098e-07, 5.403000000001046e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:23.418" endtime="20201110 08:36:23.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.414" endtime="20201110 08:36:23.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:23.426" level="INFO">${RESULT} = [{'time': 0.020221042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020226236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:23.423" endtime="20201110 08:36:23.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:23.441" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:23.427" endtime="20201110 08:36:23.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.445" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:23.444" endtime="20201110 08:36:23.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.447" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.420000000026792e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201110 08:36:23.446" endtime="20201110 08:36:23.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.441" endtime="20201110 08:36:23.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.450" endtime="20201110 08:36:23.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:23.454" endtime="20201110 08:36:23.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.452" endtime="20201110 08:36:23.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.449" endtime="20201110 08:36:23.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.039" endtime="20201110 08:36:23.474"></status>
</kw>
<msg timestamp="20201110 08:36:23.474" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.483" endtime="20201110 08:36:23.499"></status>
</kw>
<msg timestamp="20201110 08:36:23.499" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:23.481" endtime="20201110 08:36:23.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.502" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:23.500" endtime="20201110 08:36:23.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.503" endtime="20201110 08:36:23.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.478" endtime="20201110 08:36:23.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.476" endtime="20201110 08:36:23.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.511" endtime="20201110 08:36:23.800"></status>
</kw>
<msg timestamp="20201110 08:36:23.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021389486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:23.510" endtime="20201110 08:36:23.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021389486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:23.804" endtime="20201110 08:36:23.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.813" endtime="20201110 08:36:23.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.507" endtime="20201110 08:36:23.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.506" endtime="20201110 08:36:23.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.819" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:23.818" endtime="20201110 08:36:23.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.824" level="INFO">VALUE: [{'time': 0.021389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021389486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021399903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0417000000002147e-05, 'source_diff': 1.0417000000002147e-05}, {'time': 0.021400444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021407097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6529999999988265e-06, 'source_diff': 6.6529999999988265e-06}, {'time': 0.021407583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021413431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.021413972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.0214225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.021423042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021427083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.021427569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02143625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.021436792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021444264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.021444806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021453222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.416000000000673e-06, 'source_diff': 8.416000000000673e-06}, {'time': 0.021453764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021461347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.021461889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021467708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.02146825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021472292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.021472778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021478, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.021478542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021484764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.021485306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021492347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.021492889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021500458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.021501, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021505486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.021505958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021514764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.021515236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021524097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.021524569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021530014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.021530486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021540792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305999999998122e-05, 'source_diff': 1.0305999999998122e-05}, {'time': 0.021541333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021551097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.021551583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021559403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.82000000000213e-06, 'source_diff': 7.82000000000213e-06}, {'time': 0.021559944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021569278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.021569819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021577389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.021577931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021586014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.021586556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021596417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.021596958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021603903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.021604444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021611903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458999999997856e-06, 'source_diff': 7.458999999997856e-06}, {'time': 0.021612444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.021617208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.02161775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021624694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.943999999998313e-06, 'source_diff': 6.943999999998313e-06}, {'time': 0.021625236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021632556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.021633028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021641861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.021642347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021646417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.07000000000185e-06, 'source_diff': 4.07000000000185e-06}, {'time': 0.021646958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021650792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8339999999977e-06, 'source_diff': 3.8339999999977e-06}, {'time': 0.021651333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021658792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.021659333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021665569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.021666056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021672569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.512999999999658e-06, 'source_diff': 6.512999999999658e-06}, {'time': 0.021673042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021679583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.540999999998798e-06, 'source_diff': 6.540999999998798e-06}, {'time': 0.021680125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021688639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.513999999997662e-06, 'source_diff': 8.513999999997662e-06}, {'time': 0.021689125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021696222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.021696764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021705167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.021705708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.02171275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.021713292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021720458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.021721, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021728583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.021729125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021733167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.021733708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021740889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.021741375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0217515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.021752042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021759431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.021759917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021768903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.021769444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:23.820" endtime="20201110 08:36:23.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.816" endtime="20201110 08:36:23.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:23.851" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:23.827" endtime="20201110 08:36:23.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.855" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:23.854" endtime="20201110 08:36:23.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.859" level="INFO">VALUE: {'eventdiff': [0, 4.860000000009301e-07, 1.0417000000002147e-05, 5.409999999997361e-07, 6.6529999999988265e-06, 4.860000000009301e-07, 5.8479999999992704e-06, 5.409999999997361e-07, 8.528000000000702e-06, 5.419999999992098e-07, 4.040999999999767e-06, 4.860000000009301e-07, 8.680999999999967e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.416000000000673e-06, 5.419999999992098e-07, 7.582999999998508e-06, 5.420000000026792e-07, 5.8189999999971875e-06, 5.420000000026792e-07, 4.041999999999241e-06, 4.860000000009301e-07, 5.221999999999172e-06, 5.419999999992098e-07, 6.222000000000172e-06, 5.419999999992098e-07, 7.040999999999298e-06, 5.420000000026792e-07, 7.568999999998938e-06, 5.419999999992098e-07, 4.486000000001461e-06, 4.7199999999789077e-07, 8.806000000000092e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 5.444999999999756e-06, 4.720000000013602e-07, 1.0305999999998122e-05, 5.409999999997361e-07, 9.764000000002382e-06, 4.859999999974607e-07, 7.82000000000213e-06, 5.409999999997361e-07, 9.333999999999731e-06, 5.409999999997361e-07, 7.569999999998411e-06, 5.420000000026792e-07, 8.082999999999008e-06, 5.419999999992098e-07, 9.860999999999898e-06, 5.409999999997361e-07, 6.945000000001256e-06, 5.409999999997361e-07, 7.458999999997856e-06, 5.410000000032056e-07, 4.7639999999973814e-06, 5.420000000026792e-07, 6.943999999998313e-06, 5.419999999992098e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 8.832999999999758e-06, 4.860000000009301e-07, 4.07000000000185e-06, 5.409999999997361e-07, 3.8339999999977e-06, 5.409999999997361e-07, 7.459000000001326e-06, 5.409999999997361e-07, 6.235999999999742e-06, 4.870000000004038e-07, 6.512999999999658e-06, 4.7300000000083386e-07, 6.540999999998798e-06, 5.420000000026792e-07, 8.513999999997662e-06, 4.860000000009301e-07, 7.097000000001047e-06, 5.419999999992098e-07, 8.403000000000577e-06, 5.409999999997361e-07, 7.0419999999987715e-06, 5.419999999992098e-07, 7.166000000002892e-06, 5.419999999992098e-07, 7.582999999998508e-06, 5.419999999992098e-07, 4.04200000000271e-06, 5.409999999997361e-07, 7.180999999998466e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 5.419999999992098e-07, 7.389000000000007e-06, 4.860000000009301e-07, 8.985999999999023e-06, 5.409999999997361e-07], 'time': [0.021389, 0.021389486, 0.021399903, 0.021400444, 0.021407097, 0.021407583, 0.021413431, 0.021413972, 0.0214225, 0.021423042, 0.021427083, 0.021427569, 0.02143625, 0.021436792, 0.021444264, 0.021444806, 0.021453222, 0.021453764, 0.021461347, 0.021461889, 0.021467708, 0.02146825, 0.021472292, 0.021472778, 0.021478, 0.021478542, 0.021484764, 0.021485306, 0.021492347, 0.021492889, 0.021500458, 0.021501, 0.021505486, 0.021505958, 0.021514764, 0.021515236, 0.021524097, 0.021524569, 0.021530014, 0.021530486, 0.021540792, 0.021541333, 0.021551097, 0.021551583, 0.021559403, 0.021559944, 0.021569278, 0.021569819, 0.021577389, 0.021577931, 0.021586014, 0.021586556, 0.021596417, 0.021596958, 0.021603903, 0.021604444, 0.021611903, 0.021612444, 0.021617208, 0.02161775, 0.021624694, 0.021625236, 0.021632556, 0.021633028, 0.021641861, 0.021642347, 0.021646417, 0.021646958, 0.021650792, 0.021651333, 0.021658792, 0.021659333, 0.021665569, 0.021666056, 0.021672569, 0.021673042, 0.021679583, 0.021680125, 0.021688639, 0.021689125, 0.021696222, 0.021696764, 0.021705167, 0.021705708, 0.02171275, 0.021713292, 0.021720458, 0.021721, 0.021728583, 0.021729125, 0.021733167, 0.021733708, 0.021740889, 0.021741375, 0.0217515, 0.021752042, 0.021759431, 0.021759917, 0.021768903, 0.021769444], 'sourcesource_diff': [0, 4.860000000009301e-07, 1.0417000000002147e-05, 5.409999999997361e-07, 6.6529999999988265e-06, 4.860000000009301e-07, 5.8479999999992704e-06, 5.409999999997361e-07, 8.528000000000702e-06, 5.419999999992098e-07, 4.040999999999767e-06, 4.860000000009301e-07, 8.680999999999967e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.416000000000673e-06, 5.419999999992098e-07, 7.582999999998508e-06, 5.420000000026792e-07, 5.8189999999971875e-06, 5.420000000026792e-07, 4.041999999999241e-06, 4.860000000009301e-07, 5.221999999999172e-06, 5.419999999992098e-07, 6.222000000000172e-06, 5.419999999992098e-07, 7.040999999999298e-06, 5.420000000026792e-07, 7.568999999998938e-06, 5.419999999992098e-07, 4.486000000001461e-06, 4.7199999999789077e-07, 8.806000000000092e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 5.444999999999756e-06, 4.720000000013602e-07, 1.0305999999998122e-05, 5.409999999997361e-07, 9.764000000002382e-06, 4.859999999974607e-07, 7.82000000000213e-06, 5.409999999997361e-07, 9.333999999999731e-06, 5.409999999997361e-07, 7.569999999998411e-06, 5.420000000026792e-07, 8.082999999999008e-06, 5.419999999992098e-07, 9.860999999999898e-06, 5.409999999997361e-07, 6.945000000001256e-06, 5.409999999997361e-07, 7.458999999997856e-06, 5.410000000032056e-07, 4.7639999999973814e-06, 5.420000000026792e-07, 6.943999999998313e-06, 5.419999999992098e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 8.832999999999758e-06, 4.860000000009301e-07, 4.07000000000185e-06, 5.409999999997361e-07, 3.8339999999977e-06, 5.409999999997361e-07, 7.459000000001326e-06, 5.409999999997361e-07, 6.235999999999742e-06, 4.870000000004038e-07, 6.512999999999658e-06, 4.7300000000083386e-07, 6.540999999998798e-06, 5.420000000026792e-07, 8.513999999997662e-06, 4.860000000009301e-07, 7.097000000001047e-06, 5.419999999992098e-07, 8.403000000000577e-06, 5.409999999997361e-07, 7.0419999999987715e-06, 5.419999999992098e-07, 7.166000000002892e-06, 5.419999999992098e-07, 7.582999999998508e-06, 5.419999999992098e-07, 4.04200000000271e-06, 5.409999999997361e-07, 7.180999999998466e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 5.419999999992098e-07, 7.389000000000007e-06, 4.860000000009301e-07, 8.985999999999023e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:23.856" endtime="20201110 08:36:23.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.852" endtime="20201110 08:36:23.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:23.864" level="INFO">${RESULT} = [{'time': 0.021389486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021400444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:23.861" endtime="20201110 08:36:23.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:23.878" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:23.865" endtime="20201110 08:36:23.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.883" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:23.882" endtime="20201110 08:36:23.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.885" level="INFO">VALUE: [4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.410000000032056e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201110 08:36:23.884" endtime="20201110 08:36:23.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.879" endtime="20201110 08:36:23.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.888" endtime="20201110 08:36:23.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:23.891" endtime="20201110 08:36:23.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.890" endtime="20201110 08:36:23.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.886" endtime="20201110 08:36:23.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.475" endtime="20201110 08:36:23.912"></status>
</kw>
<msg timestamp="20201110 08:36:23.912" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.920" endtime="20201110 08:36:23.936"></status>
</kw>
<msg timestamp="20201110 08:36:23.937" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:23.918" endtime="20201110 08:36:23.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.939" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:23.938" endtime="20201110 08:36:23.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.940" endtime="20201110 08:36:23.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.916" endtime="20201110 08:36:23.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.914" endtime="20201110 08:36:23.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.952" endtime="20201110 08:36:24.239"></status>
</kw>
<msg timestamp="20201110 08:36:24.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020661181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:23.950" endtime="20201110 08:36:24.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020661181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:24.243" endtime="20201110 08:36:24.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.251" endtime="20201110 08:36:24.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.946" endtime="20201110 08:36:24.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.944" endtime="20201110 08:36:24.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.258" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:24.257" endtime="20201110 08:36:24.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.263" level="INFO">VALUE: [{'time': 0.020661181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020668014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.020668556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.0206755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.943999999998313e-06, 'source_diff': 6.943999999998313e-06}, {'time': 0.020676042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020686417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.020686958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020693181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.223000000003115e-06, 'source_diff': 6.223000000003115e-06}, {'time': 0.020693667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020700042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.020700528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020704708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.02070525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020713139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.020713681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020723847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.020724389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020732792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.020733278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020740292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.020740764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020749417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.020749958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020755889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.020756361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020766722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.020767194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020772306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.11200000000156e-06, 'source_diff': 5.11200000000156e-06}, {'time': 0.020772792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020777278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.020777819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020782486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.020783028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020787986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.958000000002821e-06, 'source_diff': 4.958000000002821e-06}, {'time': 0.020788528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020793917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3889999999980065e-06, 'source_diff': 5.3889999999980065e-06}, {'time': 0.020794458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020800264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.020800806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020807458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.651999999999353e-06, 'source_diff': 6.651999999999353e-06}, {'time': 0.020807931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020817833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.901999999999134e-06, 'source_diff': 9.901999999999134e-06}, {'time': 0.020818375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020822514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.020823056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020829583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.020830125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020839764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.020840306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020848708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402000000001103e-06, 'source_diff': 8.402000000001103e-06}, {'time': 0.02084925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020858083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.020858569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020864556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.986999999998965e-06, 'source_diff': 5.986999999998965e-06}, {'time': 0.020865028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020869194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.020869736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020879792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.020880333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020890194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.020890736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020898403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.020898944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020904542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.59800000000249e-06, 'source_diff': 5.59800000000249e-06}, {'time': 0.020905083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020909958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.020910444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02091525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.020915792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.0209235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.020923972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020933653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.020934194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020938861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.020939347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020948306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958999999999356e-06, 'source_diff': 8.958999999999356e-06}, {'time': 0.020948847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020958681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.020959222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020968444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.221999999999703e-06, 'source_diff': 9.221999999999703e-06}, {'time': 0.020968931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020976653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.020977125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020985667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.020986153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020991486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.020991972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020999153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.020999694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021009736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.021010278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021016694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.415999999998673e-06, 'source_diff': 6.415999999998673e-06}, {'time': 0.021017236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021025333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.021025875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021030125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.021030611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021040611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.021041153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:24.259" endtime="20201110 08:36:24.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.254" endtime="20201110 08:36:24.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:24.290" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:24.265" endtime="20201110 08:36:24.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.294" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:24.293" endtime="20201110 08:36:24.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.298" level="INFO">VALUE: {'eventdiff': [0, 4.7199999999789077e-07, 6.360999999999867e-06, 5.420000000026792e-07, 6.943999999998313e-06, 5.419999999992098e-07, 1.0374999999999968e-05, 5.409999999997361e-07, 6.223000000003115e-06, 4.859999999974607e-07, 6.374999999999437e-06, 4.860000000009301e-07, 4.179999999999462e-06, 5.420000000026792e-07, 7.888999999997037e-06, 5.420000000026792e-07, 1.0165999999998954e-05, 5.419999999992098e-07, 8.403000000000577e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 8.653000000000827e-06, 5.409999999997361e-07, 5.931000000000686e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 5.11200000000156e-06, 4.860000000009301e-07, 4.485999999997992e-06, 5.409999999997361e-07, 4.666999999999866e-06, 5.419999999992098e-07, 4.958000000002821e-06, 5.419999999992098e-07, 5.3889999999980065e-06, 5.409999999997361e-07, 5.806000000000561e-06, 5.420000000026792e-07, 6.651999999999353e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 5.419999999992098e-07, 4.139000000000226e-06, 5.419999999992098e-07, 6.526999999999228e-06, 5.420000000026792e-07, 9.638999999998787e-06, 5.419999999992098e-07, 8.402000000001103e-06, 5.419999999992098e-07, 8.832999999999758e-06, 4.860000000009301e-07, 5.986999999998965e-06, 4.720000000013602e-07, 4.165999999999892e-06, 5.419999999992098e-07, 1.0056000000001342e-05, 5.409999999997361e-07, 9.860999999999898e-06, 5.419999999992098e-07, 7.666999999999397e-06, 5.409999999997361e-07, 5.59800000000249e-06, 5.409999999997361e-07, 4.8749999999979365e-06, 4.860000000009301e-07, 4.805999999999561e-06, 5.419999999992098e-07, 7.708000000002102e-06, 4.7199999999789077e-07, 9.681000000000967e-06, 5.409999999997361e-07, 4.666999999999866e-06, 4.860000000009301e-07, 8.958999999999356e-06, 5.409999999997361e-07, 9.834000000000231e-06, 5.409999999997361e-07, 9.221999999999703e-06, 4.870000000004038e-07, 7.722000000001672e-06, 4.7199999999789077e-07, 8.542000000000272e-06, 4.860000000009301e-07, 5.332999999999727e-06, 4.860000000009301e-07, 7.180999999998466e-06, 5.409999999997361e-07, 1.0042000000001772e-05, 5.419999999992098e-07, 6.415999999998673e-06, 5.420000000026792e-07, 8.096999999998578e-06, 5.419999999992098e-07, 4.250000000000781e-06, 4.860000000009301e-07, 9.999999999999593e-06, 5.419999999992098e-07], 'time': [0.020661181, 0.020661653, 0.020668014, 0.020668556, 0.0206755, 0.020676042, 0.020686417, 0.020686958, 0.020693181, 0.020693667, 0.020700042, 0.020700528, 0.020704708, 0.02070525, 0.020713139, 0.020713681, 0.020723847, 0.020724389, 0.020732792, 0.020733278, 0.020740292, 0.020740764, 0.020749417, 0.020749958, 0.020755889, 0.020756361, 0.020766722, 0.020767194, 0.020772306, 0.020772792, 0.020777278, 0.020777819, 0.020782486, 0.020783028, 0.020787986, 0.020788528, 0.020793917, 0.020794458, 0.020800264, 0.020800806, 0.020807458, 0.020807931, 0.020817833, 0.020818375, 0.020822514, 0.020823056, 0.020829583, 0.020830125, 0.020839764, 0.020840306, 0.020848708, 0.02084925, 0.020858083, 0.020858569, 0.020864556, 0.020865028, 0.020869194, 0.020869736, 0.020879792, 0.020880333, 0.020890194, 0.020890736, 0.020898403, 0.020898944, 0.020904542, 0.020905083, 0.020909958, 0.020910444, 0.02091525, 0.020915792, 0.0209235, 0.020923972, 0.020933653, 0.020934194, 0.020938861, 0.020939347, 0.020948306, 0.020948847, 0.020958681, 0.020959222, 0.020968444, 0.020968931, 0.020976653, 0.020977125, 0.020985667, 0.020986153, 0.020991486, 0.020991972, 0.020999153, 0.020999694, 0.021009736, 0.021010278, 0.021016694, 0.021017236, 0.021025333, 0.021025875, 0.021030125, 0.021030611, 0.021040611, 0.021041153], 'sourcesource_diff': [0, 4.7199999999789077e-07, 6.360999999999867e-06, 5.420000000026792e-07, 6.943999999998313e-06, 5.419999999992098e-07, 1.0374999999999968e-05, 5.409999999997361e-07, 6.223000000003115e-06, 4.859999999974607e-07, 6.374999999999437e-06, 4.860000000009301e-07, 4.179999999999462e-06, 5.420000000026792e-07, 7.888999999997037e-06, 5.420000000026792e-07, 1.0165999999998954e-05, 5.419999999992098e-07, 8.403000000000577e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 8.653000000000827e-06, 5.409999999997361e-07, 5.931000000000686e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 5.11200000000156e-06, 4.860000000009301e-07, 4.485999999997992e-06, 5.409999999997361e-07, 4.666999999999866e-06, 5.419999999992098e-07, 4.958000000002821e-06, 5.419999999992098e-07, 5.3889999999980065e-06, 5.409999999997361e-07, 5.806000000000561e-06, 5.420000000026792e-07, 6.651999999999353e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 5.419999999992098e-07, 4.139000000000226e-06, 5.419999999992098e-07, 6.526999999999228e-06, 5.420000000026792e-07, 9.638999999998787e-06, 5.419999999992098e-07, 8.402000000001103e-06, 5.419999999992098e-07, 8.832999999999758e-06, 4.860000000009301e-07, 5.986999999998965e-06, 4.720000000013602e-07, 4.165999999999892e-06, 5.419999999992098e-07, 1.0056000000001342e-05, 5.409999999997361e-07, 9.860999999999898e-06, 5.419999999992098e-07, 7.666999999999397e-06, 5.409999999997361e-07, 5.59800000000249e-06, 5.409999999997361e-07, 4.8749999999979365e-06, 4.860000000009301e-07, 4.805999999999561e-06, 5.419999999992098e-07, 7.708000000002102e-06, 4.7199999999789077e-07, 9.681000000000967e-06, 5.409999999997361e-07, 4.666999999999866e-06, 4.860000000009301e-07, 8.958999999999356e-06, 5.409999999997361e-07, 9.834000000000231e-06, 5.409999999997361e-07, 9.221999999999703e-06, 4.870000000004038e-07, 7.722000000001672e-06, 4.7199999999789077e-07, 8.542000000000272e-06, 4.860000000009301e-07, 5.332999999999727e-06, 4.860000000009301e-07, 7.180999999998466e-06, 5.409999999997361e-07, 1.0042000000001772e-05, 5.419999999992098e-07, 6.415999999998673e-06, 5.420000000026792e-07, 8.096999999998578e-06, 5.419999999992098e-07, 4.250000000000781e-06, 4.860000000009301e-07, 9.999999999999593e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:24.295" endtime="20201110 08:36:24.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.291" endtime="20201110 08:36:24.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:24.304" level="INFO">${RESULT} = [{'time': 0.020661653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020668556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:24.300" endtime="20201110 08:36:24.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:24.317" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:24.305" endtime="20201110 08:36:24.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.322" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:24.321" endtime="20201110 08:36:24.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.324" level="INFO">VALUE: [4.7199999999789077e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201110 08:36:24.323" endtime="20201110 08:36:24.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.318" endtime="20201110 08:36:24.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.327" endtime="20201110 08:36:24.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:24.330" endtime="20201110 08:36:24.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.329" endtime="20201110 08:36:24.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.325" endtime="20201110 08:36:24.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.913" endtime="20201110 08:36:24.351"></status>
</kw>
<msg timestamp="20201110 08:36:24.351" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.359" endtime="20201110 08:36:24.373"></status>
</kw>
<msg timestamp="20201110 08:36:24.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:24.357" endtime="20201110 08:36:24.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.376" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:24.374" endtime="20201110 08:36:24.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.377" endtime="20201110 08:36:24.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.355" endtime="20201110 08:36:24.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.353" endtime="20201110 08:36:24.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.387" endtime="20201110 08:36:24.677"></status>
</kw>
<msg timestamp="20201110 08:36:24.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018670556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018671097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:24.386" endtime="20201110 08:36:24.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018670556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018671097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:24.681" endtime="20201110 08:36:24.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.690" endtime="20201110 08:36:24.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.383" endtime="20201110 08:36:24.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.381" endtime="20201110 08:36:24.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.696" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:24.695" endtime="20201110 08:36:24.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.701" level="INFO">VALUE: [{'time': 0.018670556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018671097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018674917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8199999999981304e-06, 'source_diff': 3.8199999999981304e-06}, {'time': 0.018675458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018685847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.018686333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018691875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018692417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018701042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.018701583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018709069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.485999999997522e-06, 'source_diff': 7.485999999997522e-06}, {'time': 0.018709611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.01871625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999999257e-06, 'source_diff': 6.638999999999257e-06}, {'time': 0.018716792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018726264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999999953e-06, 'source_diff': 9.471999999999953e-06}, {'time': 0.01872675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018736778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.018737264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018746764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.018747306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018751958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.0187525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018757569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069000000003376e-06, 'source_diff': 5.069000000003376e-06}, {'time': 0.018758111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018765278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1669999999988965e-06, 'source_diff': 7.1669999999988965e-06}, {'time': 0.018765764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018770667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018771208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018779931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722999999998676e-06, 'source_diff': 8.722999999998676e-06}, {'time': 0.018780417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018786278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.01878675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018795625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018796111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018804972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018805514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018809444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.930000000002681e-06, 'source_diff': 3.930000000002681e-06}, {'time': 0.018809931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018818069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138000000001283e-06, 'source_diff': 8.138000000001283e-06}, {'time': 0.018818611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018827, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.018827542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018832319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777000000000947e-06, 'source_diff': 4.777000000000947e-06}, {'time': 0.018832806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.0188375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018838042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018842819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777000000000947e-06, 'source_diff': 4.777000000000947e-06}, {'time': 0.018843306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018849556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018850097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018856528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.018857069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018862583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.018863056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018866917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018867458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018876583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.018877125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018881569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.018882111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018891986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.018892472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01890175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277999999997982e-06, 'source_diff': 9.277999999997982e-06}, {'time': 0.018902236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018912653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0417000000002147e-05, 'source_diff': 1.0417000000002147e-05}, {'time': 0.018913194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018922528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.018923069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018933139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.018933681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018938347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.018938833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018943333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.018943819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018951542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722999999997676e-06, 'source_diff': 7.722999999997676e-06}, {'time': 0.018952028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018956528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.018957069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018961403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.018961944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018967125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018967667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018974708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.01897525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018984792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.018985333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018991667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.334000000000201e-06, 'source_diff': 6.334000000000201e-06}, {'time': 0.018992208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018996875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018997417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019004375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.019004917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019010736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.019011222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019019417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019019889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019027194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.019027681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019033528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.019034069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:24.697" endtime="20201110 08:36:24.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.693" endtime="20201110 08:36:24.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:24.729" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:24.704" endtime="20201110 08:36:24.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.734" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:24.732" endtime="20201110 08:36:24.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.739" level="INFO">VALUE: {'eventdiff': [0, 5.409999999997361e-07, 3.8199999999981304e-06, 5.409999999997361e-07, 1.0388999999999537e-05, 4.860000000009301e-07, 5.542000000000741e-06, 5.419999999992098e-07, 8.625000000001687e-06, 5.409999999997361e-07, 7.485999999997522e-06, 5.420000000026792e-07, 6.638999999999257e-06, 5.419999999992098e-07, 9.471999999999953e-06, 4.860000000009301e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 9.499999999999093e-06, 5.419999999992098e-07, 4.652000000000822e-06, 5.419999999992098e-07, 5.069000000003376e-06, 5.419999999992098e-07, 7.1669999999988965e-06, 4.860000000009301e-07, 4.903000000000546e-06, 5.409999999997361e-07, 8.722999999998676e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.860000000009301e-07, 8.860999999998898e-06, 5.419999999992098e-07, 3.930000000002681e-06, 4.869999999969343e-07, 8.138000000001283e-06, 5.419999999992098e-07, 8.389000000001007e-06, 5.419999999992098e-07, 4.777000000000947e-06, 4.870000000004038e-07, 4.693999999999532e-06, 5.419999999992098e-07, 4.777000000000947e-06, 4.870000000004038e-07, 6.249999999999312e-06, 5.409999999997361e-07, 6.431000000001186e-06, 5.409999999997361e-07, 5.5139999999981315e-06, 4.7300000000083386e-07, 3.861000000000836e-06, 5.409999999997361e-07, 9.124999999998717e-06, 5.420000000026792e-07, 4.443999999999282e-06, 5.419999999992098e-07, 9.874999999999468e-06, 4.860000000009301e-07, 9.277999999997982e-06, 4.860000000009301e-07, 1.0417000000002147e-05, 5.409999999997361e-07, 9.333999999999731e-06, 5.409999999997361e-07, 1.0070000000000912e-05, 5.419999999992098e-07, 4.666000000000392e-06, 4.859999999974607e-07, 4.500000000001031e-06, 4.860000000009301e-07, 7.722999999997676e-06, 4.860000000009301e-07, 4.500000000001031e-06, 5.409999999997361e-07, 4.33400000000167e-06, 5.409999999997361e-07, 5.180999999999936e-06, 5.419999999992098e-07, 7.040999999999298e-06, 5.419999999992098e-07, 9.542000000001272e-06, 5.409999999997361e-07, 6.334000000000201e-06, 5.409999999997361e-07, 4.666999999999866e-06, 5.419999999992098e-07, 6.958000000001352e-06, 5.419999999992098e-07, 5.819000000000657e-06, 4.860000000009301e-07, 8.194999999999036e-06, 4.720000000013602e-07, 7.304999999999118e-06, 4.870000000004038e-07, 5.846999999999797e-06, 5.409999999997361e-07], 'time': [0.018670556, 0.018671097, 0.018674917, 0.018675458, 0.018685847, 0.018686333, 0.018691875, 0.018692417, 0.018701042, 0.018701583, 0.018709069, 0.018709611, 0.01871625, 0.018716792, 0.018726264, 0.01872675, 0.018736778, 0.018737264, 0.018746764, 0.018747306, 0.018751958, 0.0187525, 0.018757569, 0.018758111, 0.018765278, 0.018765764, 0.018770667, 0.018771208, 0.018779931, 0.018780417, 0.018786278, 0.01878675, 0.018795625, 0.018796111, 0.018804972, 0.018805514, 0.018809444, 0.018809931, 0.018818069, 0.018818611, 0.018827, 0.018827542, 0.018832319, 0.018832806, 0.0188375, 0.018838042, 0.018842819, 0.018843306, 0.018849556, 0.018850097, 0.018856528, 0.018857069, 0.018862583, 0.018863056, 0.018866917, 0.018867458, 0.018876583, 0.018877125, 0.018881569, 0.018882111, 0.018891986, 0.018892472, 0.01890175, 0.018902236, 0.018912653, 0.018913194, 0.018922528, 0.018923069, 0.018933139, 0.018933681, 0.018938347, 0.018938833, 0.018943333, 0.018943819, 0.018951542, 0.018952028, 0.018956528, 0.018957069, 0.018961403, 0.018961944, 0.018967125, 0.018967667, 0.018974708, 0.01897525, 0.018984792, 0.018985333, 0.018991667, 0.018992208, 0.018996875, 0.018997417, 0.019004375, 0.019004917, 0.019010736, 0.019011222, 0.019019417, 0.019019889, 0.019027194, 0.019027681, 0.019033528, 0.019034069], 'sourcesource_diff': [0, 5.409999999997361e-07, 3.8199999999981304e-06, 5.409999999997361e-07, 1.0388999999999537e-05, 4.860000000009301e-07, 5.542000000000741e-06, 5.419999999992098e-07, 8.625000000001687e-06, 5.409999999997361e-07, 7.485999999997522e-06, 5.420000000026792e-07, 6.638999999999257e-06, 5.419999999992098e-07, 9.471999999999953e-06, 4.860000000009301e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 9.499999999999093e-06, 5.419999999992098e-07, 4.652000000000822e-06, 5.419999999992098e-07, 5.069000000003376e-06, 5.419999999992098e-07, 7.1669999999988965e-06, 4.860000000009301e-07, 4.903000000000546e-06, 5.409999999997361e-07, 8.722999999998676e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.860000000009301e-07, 8.860999999998898e-06, 5.419999999992098e-07, 3.930000000002681e-06, 4.869999999969343e-07, 8.138000000001283e-06, 5.419999999992098e-07, 8.389000000001007e-06, 5.419999999992098e-07, 4.777000000000947e-06, 4.870000000004038e-07, 4.693999999999532e-06, 5.419999999992098e-07, 4.777000000000947e-06, 4.870000000004038e-07, 6.249999999999312e-06, 5.409999999997361e-07, 6.431000000001186e-06, 5.409999999997361e-07, 5.5139999999981315e-06, 4.7300000000083386e-07, 3.861000000000836e-06, 5.409999999997361e-07, 9.124999999998717e-06, 5.420000000026792e-07, 4.443999999999282e-06, 5.419999999992098e-07, 9.874999999999468e-06, 4.860000000009301e-07, 9.277999999997982e-06, 4.860000000009301e-07, 1.0417000000002147e-05, 5.409999999997361e-07, 9.333999999999731e-06, 5.409999999997361e-07, 1.0070000000000912e-05, 5.419999999992098e-07, 4.666000000000392e-06, 4.859999999974607e-07, 4.500000000001031e-06, 4.860000000009301e-07, 7.722999999997676e-06, 4.860000000009301e-07, 4.500000000001031e-06, 5.409999999997361e-07, 4.33400000000167e-06, 5.409999999997361e-07, 5.180999999999936e-06, 5.419999999992098e-07, 7.040999999999298e-06, 5.419999999992098e-07, 9.542000000001272e-06, 5.409999999997361e-07, 6.334000000000201e-06, 5.409999999997361e-07, 4.666999999999866e-06, 5.419999999992098e-07, 6.958000000001352e-06, 5.419999999992098e-07, 5.819000000000657e-06, 4.860000000009301e-07, 8.194999999999036e-06, 4.720000000013602e-07, 7.304999999999118e-06, 4.870000000004038e-07, 5.846999999999797e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:24.735" endtime="20201110 08:36:24.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.730" endtime="20201110 08:36:24.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:24.746" level="INFO">${RESULT} = [{'time': 0.018671097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018675458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:24.742" endtime="20201110 08:36:24.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:24.761" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:24.747" endtime="20201110 08:36:24.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.765" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:24.764" endtime="20201110 08:36:24.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.768" level="INFO">VALUE: [5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.869999999969343e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201110 08:36:24.766" endtime="20201110 08:36:24.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.762" endtime="20201110 08:36:24.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.771" endtime="20201110 08:36:24.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:24.774" endtime="20201110 08:36:24.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.773" endtime="20201110 08:36:24.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.769" endtime="20201110 08:36:24.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.352" endtime="20201110 08:36:24.795"></status>
</kw>
<msg timestamp="20201110 08:36:24.795" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.803" endtime="20201110 08:36:24.821"></status>
</kw>
<msg timestamp="20201110 08:36:24.821" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:24.802" endtime="20201110 08:36:24.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.824" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:24.822" endtime="20201110 08:36:24.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.825" endtime="20201110 08:36:24.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.799" endtime="20201110 08:36:24.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.797" endtime="20201110 08:36:24.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.833" endtime="20201110 08:36:25.122"></status>
</kw>
<msg timestamp="20201110 08:36:25.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:24.832" endtime="20201110 08:36:25.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:25.126" endtime="20201110 08:36:25.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.134" endtime="20201110 08:36:25.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.829" endtime="20201110 08:36:25.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.828" endtime="20201110 08:36:25.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.141" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:25.140" endtime="20201110 08:36:25.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.146" level="INFO">VALUE: [{'time': 0.022172319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022177625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.022178111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022184681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.570000000000881e-06, 'source_diff': 6.570000000000881e-06}, {'time': 0.022185222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022191333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.022191875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022198639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.022199111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022203708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.022204194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022212639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.444999999999286e-06, 'source_diff': 8.444999999999286e-06}, {'time': 0.022213181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022218972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791000000001517e-06, 'source_diff': 5.791000000001517e-06}, {'time': 0.022219514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022226792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.022227264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022234778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.022235319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022245708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.02224625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022250708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458000000002321e-06, 'source_diff': 4.458000000002321e-06}, {'time': 0.02225125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022258833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.022259375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022263944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.022264431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022271764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.02227225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022276111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.022276653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022282514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.022282986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022288319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.022288792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022295278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.022295819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022302861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.022303403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022312111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.022312597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022322292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.022322833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022327069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.022327611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022336833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.221999999999703e-06, 'source_diff': 9.221999999999703e-06}, {'time': 0.022337375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022345264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000000507e-06, 'source_diff': 7.889000000000507e-06}, {'time': 0.02234575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022354806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.022355347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022360111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.022360653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022366028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.022366569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022371639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0699999999993806e-06, 'source_diff': 5.0699999999993806e-06}, {'time': 0.022372181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022376333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152000000000322e-06, 'source_diff': 4.152000000000322e-06}, {'time': 0.022376819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022383389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.570000000000881e-06, 'source_diff': 6.570000000000881e-06}, {'time': 0.022383931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022393931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.022394403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022400014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.022400556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.02240575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.022406222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022414681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.022415167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022424125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.022424667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022430361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.022430903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022437014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.0224375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022443347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.022443889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022454069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.022454556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022463819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.262999999998939e-06, 'source_diff': 9.262999999998939e-06}, {'time': 0.022464361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022472556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.022473042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022476917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.022477458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022481292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.83400000000117e-06, 'source_diff': 3.83400000000117e-06}, {'time': 0.022481833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022490139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.022490681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022500236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.022500778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022510139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.022510625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022518722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.097000000002047e-06, 'source_diff': 8.097000000002047e-06}, {'time': 0.022519194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022524389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.022524931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022532417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.485999999997522e-06, 'source_diff': 7.485999999997522e-06}, {'time': 0.022532958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:25.142" endtime="20201110 08:36:25.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.138" endtime="20201110 08:36:25.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:25.173" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:25.148" endtime="20201110 08:36:25.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.177" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:25.176" endtime="20201110 08:36:25.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.181" level="INFO">VALUE: {'eventdiff': [0, 5.419999999992098e-07, 4.764000000000851e-06, 4.860000000009301e-07, 6.570000000000881e-06, 5.409999999997361e-07, 6.110999999999617e-06, 5.419999999992098e-07, 6.763999999999382e-06, 4.720000000013602e-07, 4.596999999998547e-06, 4.860000000009301e-07, 8.444999999999286e-06, 5.419999999992098e-07, 5.791000000001517e-06, 5.419999999992098e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 7.514000000000132e-06, 5.409999999997361e-07, 1.0388999999999537e-05, 5.419999999992098e-07, 4.458000000002321e-06, 5.419999999992098e-07, 7.582999999998508e-06, 5.420000000026792e-07, 4.568999999999407e-06, 4.870000000004038e-07, 7.332999999998258e-06, 4.860000000009301e-07, 3.861000000000836e-06, 5.419999999992098e-07, 5.860999999999367e-06, 4.720000000013602e-07, 5.332999999999727e-06, 4.7300000000083386e-07, 6.485999999999992e-06, 5.409999999997361e-07, 7.0419999999987715e-06, 5.419999999992098e-07, 8.707999999999633e-06, 4.860000000009301e-07, 9.695000000000537e-06, 5.409999999997361e-07, 4.236000000001211e-06, 5.419999999992098e-07, 9.221999999999703e-06, 5.419999999992098e-07, 7.889000000000507e-06, 4.860000000009301e-07, 9.056000000000342e-06, 5.409999999997361e-07, 4.7639999999973814e-06, 5.420000000026792e-07, 5.374999999998437e-06, 5.409999999997361e-07, 5.0699999999993806e-06, 5.420000000026792e-07, 4.152000000000322e-06, 4.859999999974607e-07, 6.570000000000881e-06, 5.419999999992098e-07, 9.999999999999593e-06, 4.720000000013602e-07, 5.610999999999117e-06, 5.419999999992098e-07, 5.194000000000032e-06, 4.720000000013602e-07, 8.458999999998856e-06, 4.860000000009301e-07, 8.957999999999883e-06, 5.419999999992098e-07, 5.694000000000532e-06, 5.419999999992098e-07, 6.111000000003086e-06, 4.859999999974607e-07, 5.846999999999797e-06, 5.420000000026792e-07, 1.0179999999998524e-05, 4.870000000004038e-07, 9.262999999998939e-06, 5.419999999992098e-07, 8.195000000002506e-06, 4.859999999974607e-07, 3.875000000000406e-06, 5.409999999997361e-07, 3.83400000000117e-06, 5.409999999997361e-07, 8.305999999999591e-06, 5.419999999992098e-07, 9.555000000001368e-06, 5.419999999992098e-07, 9.360999999999398e-06, 4.860000000009301e-07, 8.097000000002047e-06, 4.7199999999789077e-07, 5.1949999999995056e-06, 5.420000000026792e-07, 7.485999999997522e-06, 5.409999999997361e-07], 'time': [0.022172319, 0.022172861, 0.022177625, 0.022178111, 0.022184681, 0.022185222, 0.022191333, 0.022191875, 0.022198639, 0.022199111, 0.022203708, 0.022204194, 0.022212639, 0.022213181, 0.022218972, 0.022219514, 0.022226792, 0.022227264, 0.022234778, 0.022235319, 0.022245708, 0.02224625, 0.022250708, 0.02225125, 0.022258833, 0.022259375, 0.022263944, 0.022264431, 0.022271764, 0.02227225, 0.022276111, 0.022276653, 0.022282514, 0.022282986, 0.022288319, 0.022288792, 0.022295278, 0.022295819, 0.022302861, 0.022303403, 0.022312111, 0.022312597, 0.022322292, 0.022322833, 0.022327069, 0.022327611, 0.022336833, 0.022337375, 0.022345264, 0.02234575, 0.022354806, 0.022355347, 0.022360111, 0.022360653, 0.022366028, 0.022366569, 0.022371639, 0.022372181, 0.022376333, 0.022376819, 0.022383389, 0.022383931, 0.022393931, 0.022394403, 0.022400014, 0.022400556, 0.02240575, 0.022406222, 0.022414681, 0.022415167, 0.022424125, 0.022424667, 0.022430361, 0.022430903, 0.022437014, 0.0224375, 0.022443347, 0.022443889, 0.022454069, 0.022454556, 0.022463819, 0.022464361, 0.022472556, 0.022473042, 0.022476917, 0.022477458, 0.022481292, 0.022481833, 0.022490139, 0.022490681, 0.022500236, 0.022500778, 0.022510139, 0.022510625, 0.022518722, 0.022519194, 0.022524389, 0.022524931, 0.022532417, 0.022532958], 'sourcesource_diff': [0, 5.419999999992098e-07, 4.764000000000851e-06, 4.860000000009301e-07, 6.570000000000881e-06, 5.409999999997361e-07, 6.110999999999617e-06, 5.419999999992098e-07, 6.763999999999382e-06, 4.720000000013602e-07, 4.596999999998547e-06, 4.860000000009301e-07, 8.444999999999286e-06, 5.419999999992098e-07, 5.791000000001517e-06, 5.419999999992098e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 7.514000000000132e-06, 5.409999999997361e-07, 1.0388999999999537e-05, 5.419999999992098e-07, 4.458000000002321e-06, 5.419999999992098e-07, 7.582999999998508e-06, 5.420000000026792e-07, 4.568999999999407e-06, 4.870000000004038e-07, 7.332999999998258e-06, 4.860000000009301e-07, 3.861000000000836e-06, 5.419999999992098e-07, 5.860999999999367e-06, 4.720000000013602e-07, 5.332999999999727e-06, 4.7300000000083386e-07, 6.485999999999992e-06, 5.409999999997361e-07, 7.0419999999987715e-06, 5.419999999992098e-07, 8.707999999999633e-06, 4.860000000009301e-07, 9.695000000000537e-06, 5.409999999997361e-07, 4.236000000001211e-06, 5.419999999992098e-07, 9.221999999999703e-06, 5.419999999992098e-07, 7.889000000000507e-06, 4.860000000009301e-07, 9.056000000000342e-06, 5.409999999997361e-07, 4.7639999999973814e-06, 5.420000000026792e-07, 5.374999999998437e-06, 5.409999999997361e-07, 5.0699999999993806e-06, 5.420000000026792e-07, 4.152000000000322e-06, 4.859999999974607e-07, 6.570000000000881e-06, 5.419999999992098e-07, 9.999999999999593e-06, 4.720000000013602e-07, 5.610999999999117e-06, 5.419999999992098e-07, 5.194000000000032e-06, 4.720000000013602e-07, 8.458999999998856e-06, 4.860000000009301e-07, 8.957999999999883e-06, 5.419999999992098e-07, 5.694000000000532e-06, 5.419999999992098e-07, 6.111000000003086e-06, 4.859999999974607e-07, 5.846999999999797e-06, 5.420000000026792e-07, 1.0179999999998524e-05, 4.870000000004038e-07, 9.262999999998939e-06, 5.419999999992098e-07, 8.195000000002506e-06, 4.859999999974607e-07, 3.875000000000406e-06, 5.409999999997361e-07, 3.83400000000117e-06, 5.409999999997361e-07, 8.305999999999591e-06, 5.419999999992098e-07, 9.555000000001368e-06, 5.419999999992098e-07, 9.360999999999398e-06, 4.860000000009301e-07, 8.097000000002047e-06, 4.7199999999789077e-07, 5.1949999999995056e-06, 5.420000000026792e-07, 7.485999999997522e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:25.178" endtime="20201110 08:36:25.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.174" endtime="20201110 08:36:25.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:25.187" level="INFO">${RESULT} = [{'time': 0.022172861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022178111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:25.184" endtime="20201110 08:36:25.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:25.201" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:25.188" endtime="20201110 08:36:25.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.205" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:25.204" endtime="20201110 08:36:25.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.208" level="INFO">VALUE: [5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.870000000004038e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201110 08:36:25.207" endtime="20201110 08:36:25.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.202" endtime="20201110 08:36:25.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.211" endtime="20201110 08:36:25.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:25.214" endtime="20201110 08:36:25.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.213" endtime="20201110 08:36:25.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.209" endtime="20201110 08:36:25.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.796" endtime="20201110 08:36:25.235"></status>
</kw>
<msg timestamp="20201110 08:36:25.235" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.243" endtime="20201110 08:36:25.257"></status>
</kw>
<msg timestamp="20201110 08:36:25.258" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:25.242" endtime="20201110 08:36:25.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.260" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:25.259" endtime="20201110 08:36:25.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.261" endtime="20201110 08:36:25.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.239" endtime="20201110 08:36:25.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.237" endtime="20201110 08:36:25.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.271" endtime="20201110 08:36:25.555"></status>
</kw>
<msg timestamp="20201110 08:36:25.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018929931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018930472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:25.269" endtime="20201110 08:36:25.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018929931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018930472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:25.559" endtime="20201110 08:36:25.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.568" endtime="20201110 08:36:25.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.267" endtime="20201110 08:36:25.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.265" endtime="20201110 08:36:25.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.574" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:25.573" endtime="20201110 08:36:25.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.579" level="INFO">VALUE: [{'time': 0.018929931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018930472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018939917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000000286e-06, 'source_diff': 9.445000000000286e-06}, {'time': 0.018940458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018948444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.018948986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018954083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018954556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018959472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018959958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018966222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.018966764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018972778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018973264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018982861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.018983403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018993042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.639000000002257e-06, 'source_diff': 9.639000000002257e-06}, {'time': 0.018993583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.01899825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018998736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019004722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.986000000002961e-06, 'source_diff': 5.986000000002961e-06}, {'time': 0.019005194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019012694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.019013236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019020014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.019020486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019026417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.019026958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019031097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.019031639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019036292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.019036833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019042722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.019043194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019051917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.723000000002146e-06, 'source_diff': 8.723000000002146e-06}, {'time': 0.019052458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019061625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.019062111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019071292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.019071833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019076917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0839999999989505e-06, 'source_diff': 5.0839999999989505e-06}, {'time': 0.019077458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019083278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.019083819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019088792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.973000000001865e-06, 'source_diff': 4.973000000001865e-06}, {'time': 0.019089333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.01909525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.019095792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019103681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000000507e-06, 'source_diff': 7.889000000000507e-06}, {'time': 0.019104222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019110542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.019111083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019120639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555999999997372e-06, 'source_diff': 9.555999999997372e-06}, {'time': 0.019121125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019125722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.019126264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019136639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.019137181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019146722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541000000001798e-06, 'source_diff': 9.541000000001798e-06}, {'time': 0.019147264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019153486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.019154028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019160347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.019160889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019169917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.019170403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019174389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.019174875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019180819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.019181361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019187694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000000727e-06, 'source_diff': 6.333000000000727e-06}, {'time': 0.019188181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.019192056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.019192597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019201639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.019202111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019210611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999998092e-06, 'source_diff': 8.499999999998092e-06}, {'time': 0.019211083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019215764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.01921625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019225111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019225653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019234903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.019235389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019243417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.019243958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019248097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.019248639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019256625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.019257167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019265375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.019265847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019275958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.0192765, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019283236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.019283778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.01929, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.019290542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019297375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.019297917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:25.575" endtime="20201110 08:36:25.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.571" endtime="20201110 08:36:25.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:25.606" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:25.582" endtime="20201110 08:36:25.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.610" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:25.609" endtime="20201110 08:36:25.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.614" level="INFO">VALUE: {'eventdiff': [0, 5.409999999997361e-07, 9.445000000000286e-06, 5.409999999997361e-07, 7.985999999998022e-06, 5.420000000026792e-07, 5.096999999999047e-06, 4.7300000000083386e-07, 4.916000000000642e-06, 4.859999999974607e-07, 6.264000000002351e-06, 5.419999999992098e-07, 6.0139999999986316e-06, 4.860000000009301e-07, 9.597000000000078e-06, 5.419999999992098e-07, 9.639000000002257e-06, 5.409999999997361e-07, 4.666999999999866e-06, 4.859999999974607e-07, 5.986000000002961e-06, 4.7199999999789077e-07, 7.500000000000562e-06, 5.419999999992098e-07, 6.7779999999989515e-06, 4.720000000013602e-07, 5.931000000000686e-06, 5.409999999997361e-07, 4.139000000000226e-06, 5.419999999992098e-07, 4.653000000000296e-06, 5.409999999997361e-07, 5.889000000001976e-06, 4.7199999999789077e-07, 8.723000000002146e-06, 5.409999999997361e-07, 9.166999999997427e-06, 4.860000000009301e-07, 9.181000000000467e-06, 5.409999999997361e-07, 5.0839999999989505e-06, 5.409999999997361e-07, 5.820000000000131e-06, 5.409999999997361e-07, 4.973000000001865e-06, 5.409999999997361e-07, 5.917000000001116e-06, 5.419999999992098e-07, 7.889000000000507e-06, 5.409999999997361e-07, 6.320000000000631e-06, 5.409999999997361e-07, 9.555999999997372e-06, 4.860000000009301e-07, 4.597000000002016e-06, 5.419999999992098e-07, 1.0374999999999968e-05, 5.419999999992098e-07, 9.541000000001798e-06, 5.419999999992098e-07, 6.222000000000172e-06, 5.419999999992098e-07, 6.319000000001157e-06, 5.419999999992098e-07, 9.028000000001202e-06, 4.859999999974607e-07, 3.986000000000961e-06, 4.860000000009301e-07, 5.944000000000782e-06, 5.419999999992098e-07, 6.333000000000727e-06, 4.869999999969343e-07, 3.875000000000406e-06, 5.409999999997361e-07, 9.042000000000772e-06, 4.720000000013602e-07, 8.499999999998092e-06, 4.720000000013602e-07, 4.680999999999436e-06, 4.860000000009301e-07, 8.860999999998898e-06, 5.419999999992098e-07, 9.250000000002312e-06, 4.859999999974607e-07, 8.028000000000202e-06, 5.409999999997361e-07, 4.139000000000226e-06, 5.420000000026792e-07, 7.985999999998022e-06, 5.419999999992098e-07, 8.208000000002602e-06, 4.7199999999789077e-07, 1.0111000000000148e-05, 5.419999999992098e-07, 6.736000000000242e-06, 5.420000000026792e-07, 6.222000000000172e-06, 5.419999999992098e-07, 6.8329999999977575e-06, 5.420000000026792e-07], 'time': [0.018929931, 0.018930472, 0.018939917, 0.018940458, 0.018948444, 0.018948986, 0.018954083, 0.018954556, 0.018959472, 0.018959958, 0.018966222, 0.018966764, 0.018972778, 0.018973264, 0.018982861, 0.018983403, 0.018993042, 0.018993583, 0.01899825, 0.018998736, 0.019004722, 0.019005194, 0.019012694, 0.019013236, 0.019020014, 0.019020486, 0.019026417, 0.019026958, 0.019031097, 0.019031639, 0.019036292, 0.019036833, 0.019042722, 0.019043194, 0.019051917, 0.019052458, 0.019061625, 0.019062111, 0.019071292, 0.019071833, 0.019076917, 0.019077458, 0.019083278, 0.019083819, 0.019088792, 0.019089333, 0.01909525, 0.019095792, 0.019103681, 0.019104222, 0.019110542, 0.019111083, 0.019120639, 0.019121125, 0.019125722, 0.019126264, 0.019136639, 0.019137181, 0.019146722, 0.019147264, 0.019153486, 0.019154028, 0.019160347, 0.019160889, 0.019169917, 0.019170403, 0.019174389, 0.019174875, 0.019180819, 0.019181361, 0.019187694, 0.019188181, 0.019192056, 0.019192597, 0.019201639, 0.019202111, 0.019210611, 0.019211083, 0.019215764, 0.01921625, 0.019225111, 0.019225653, 0.019234903, 0.019235389, 0.019243417, 0.019243958, 0.019248097, 0.019248639, 0.019256625, 0.019257167, 0.019265375, 0.019265847, 0.019275958, 0.0192765, 0.019283236, 0.019283778, 0.01929, 0.019290542, 0.019297375, 0.019297917], 'sourcesource_diff': [0, 5.409999999997361e-07, 9.445000000000286e-06, 5.409999999997361e-07, 7.985999999998022e-06, 5.420000000026792e-07, 5.096999999999047e-06, 4.7300000000083386e-07, 4.916000000000642e-06, 4.859999999974607e-07, 6.264000000002351e-06, 5.419999999992098e-07, 6.0139999999986316e-06, 4.860000000009301e-07, 9.597000000000078e-06, 5.419999999992098e-07, 9.639000000002257e-06, 5.409999999997361e-07, 4.666999999999866e-06, 4.859999999974607e-07, 5.986000000002961e-06, 4.7199999999789077e-07, 7.500000000000562e-06, 5.419999999992098e-07, 6.7779999999989515e-06, 4.720000000013602e-07, 5.931000000000686e-06, 5.409999999997361e-07, 4.139000000000226e-06, 5.419999999992098e-07, 4.653000000000296e-06, 5.409999999997361e-07, 5.889000000001976e-06, 4.7199999999789077e-07, 8.723000000002146e-06, 5.409999999997361e-07, 9.166999999997427e-06, 4.860000000009301e-07, 9.181000000000467e-06, 5.409999999997361e-07, 5.0839999999989505e-06, 5.409999999997361e-07, 5.820000000000131e-06, 5.409999999997361e-07, 4.973000000001865e-06, 5.409999999997361e-07, 5.917000000001116e-06, 5.419999999992098e-07, 7.889000000000507e-06, 5.409999999997361e-07, 6.320000000000631e-06, 5.409999999997361e-07, 9.555999999997372e-06, 4.860000000009301e-07, 4.597000000002016e-06, 5.419999999992098e-07, 1.0374999999999968e-05, 5.419999999992098e-07, 9.541000000001798e-06, 5.419999999992098e-07, 6.222000000000172e-06, 5.419999999992098e-07, 6.319000000001157e-06, 5.419999999992098e-07, 9.028000000001202e-06, 4.859999999974607e-07, 3.986000000000961e-06, 4.860000000009301e-07, 5.944000000000782e-06, 5.419999999992098e-07, 6.333000000000727e-06, 4.869999999969343e-07, 3.875000000000406e-06, 5.409999999997361e-07, 9.042000000000772e-06, 4.720000000013602e-07, 8.499999999998092e-06, 4.720000000013602e-07, 4.680999999999436e-06, 4.860000000009301e-07, 8.860999999998898e-06, 5.419999999992098e-07, 9.250000000002312e-06, 4.859999999974607e-07, 8.028000000000202e-06, 5.409999999997361e-07, 4.139000000000226e-06, 5.420000000026792e-07, 7.985999999998022e-06, 5.419999999992098e-07, 8.208000000002602e-06, 4.7199999999789077e-07, 1.0111000000000148e-05, 5.419999999992098e-07, 6.736000000000242e-06, 5.420000000026792e-07, 6.222000000000172e-06, 5.419999999992098e-07, 6.8329999999977575e-06, 5.420000000026792e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:25.611" endtime="20201110 08:36:25.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.607" endtime="20201110 08:36:25.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:25.620" level="INFO">${RESULT} = [{'time': 0.018930472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018940458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:25.616" endtime="20201110 08:36:25.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:25.634" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:25.621" endtime="20201110 08:36:25.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.638" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:25.637" endtime="20201110 08:36:25.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.641" level="INFO">VALUE: [5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.869999999969343e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.420000000026792e-07]</msg>
<status status="PASS" starttime="20201110 08:36:25.640" endtime="20201110 08:36:25.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.635" endtime="20201110 08:36:25.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.644" endtime="20201110 08:36:25.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:25.647" endtime="20201110 08:36:25.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.646" endtime="20201110 08:36:25.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.642" endtime="20201110 08:36:25.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.236" endtime="20201110 08:36:25.670"></status>
</kw>
<msg timestamp="20201110 08:36:25.670" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.680" endtime="20201110 08:36:25.694"></status>
</kw>
<msg timestamp="20201110 08:36:25.694" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:25.679" endtime="20201110 08:36:25.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.697" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:25.695" endtime="20201110 08:36:25.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.698" endtime="20201110 08:36:25.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.675" endtime="20201110 08:36:25.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.673" endtime="20201110 08:36:25.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.707" endtime="20201110 08:36:25.995"></status>
</kw>
<msg timestamp="20201110 08:36:25.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023152014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:25.705" endtime="20201110 08:36:25.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023152014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:25.999" endtime="20201110 08:36:26.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.014" endtime="20201110 08:36:26.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.703" endtime="20201110 08:36:26.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.701" endtime="20201110 08:36:26.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.023" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:26.022" endtime="20201110 08:36:26.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.028" level="INFO">VALUE: [{'time': 0.023152014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02316075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.023161236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023169583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.023170069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023178847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.023179333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023187903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.023188375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023194236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.023194708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023205125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.023205667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023212625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.023213111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023218847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.023219389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023228208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.02322875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023235792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.042000000002241e-06, 'source_diff': 7.042000000002241e-06}, {'time': 0.023236333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023243806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472999999997426e-06, 'source_diff': 7.472999999997426e-06}, {'time': 0.023244347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023249944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.023250431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.023260653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.023261139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023271153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.023271639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023280917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.023281458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023287278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.02328775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023294528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.023295069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.023299528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.023300069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023304611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.023305153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023311597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.023312083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023322097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.023322583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023327486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.023328028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023336111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.023336653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023342458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.023343, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023348583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.023349125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023356806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.023357347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023365444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.023365931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023371319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.388000000002002e-06, 'source_diff': 5.388000000002002e-06}, {'time': 0.023371792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023378639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.023379181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023386125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.023386667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023392986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.023393528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023399111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.023399653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023404319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.023404861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023410569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.023411056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023419486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.430000000000243e-06, 'source_diff': 8.430000000000243e-06}, {'time': 0.023420028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023428347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.023428833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02343625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.023436722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023442889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.023443375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023453194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.023453667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023460653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.023461194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023467528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.334000000000201e-06, 'source_diff': 6.334000000000201e-06}, {'time': 0.023468014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023475111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.023475653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.02348125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.023481792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.023492056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0263999999999412e-05, 'source_diff': 1.0263999999999412e-05}, {'time': 0.023492597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023502764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.023503306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.023509333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.023509819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023518153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333999999998731e-06, 'source_diff': 8.333999999998731e-06}, {'time': 0.023518694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023522625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.023523167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.023527931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.023528472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:26.024" endtime="20201110 08:36:26.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.020" endtime="20201110 08:36:26.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:26.056" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:26.031" endtime="20201110 08:36:26.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.060" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:26.059" endtime="20201110 08:36:26.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.064" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.860000000009301e-07, 8.250000000001312e-06, 4.860000000009301e-07, 8.346999999998828e-06, 4.860000000009301e-07, 8.777999999997482e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 5.419999999992098e-07, 6.958000000001352e-06, 4.860000000009301e-07, 5.735999999999242e-06, 5.419999999992098e-07, 8.819000000000188e-06, 5.419999999992098e-07, 7.042000000002241e-06, 5.409999999997361e-07, 7.472999999997426e-06, 5.409999999997361e-07, 5.597000000003016e-06, 4.869999999969343e-07, 1.0222000000000703e-05, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 9.278000000001452e-06, 5.409999999997361e-07, 5.820000000000131e-06, 4.7199999999789077e-07, 6.7779999999989515e-06, 5.410000000032056e-07, 4.458999999998325e-06, 5.409999999997361e-07, 4.541999999999741e-06, 5.419999999992098e-07, 6.444000000001282e-06, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 4.903000000000546e-06, 5.419999999992098e-07, 8.082999999999008e-06, 5.419999999992098e-07, 5.805000000001087e-06, 5.419999999992098e-07, 5.582999999999977e-06, 5.419999999992098e-07, 7.681000000002436e-06, 5.409999999997361e-07, 8.096999999998578e-06, 4.870000000004038e-07, 5.388000000002002e-06, 4.729999999973644e-07, 6.847000000000797e-06, 5.419999999992098e-07, 6.944000000001782e-06, 5.419999999992098e-07, 6.319000000001157e-06, 5.419999999992098e-07, 5.582999999999977e-06, 5.419999999992098e-07, 4.666000000000392e-06, 5.419999999992098e-07, 5.708000000000102e-06, 4.870000000004038e-07, 8.430000000000243e-06, 5.419999999992098e-07, 8.318999999999688e-06, 4.860000000009301e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 6.167000000001366e-06, 4.859999999974607e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 6.986000000000492e-06, 5.409999999997361e-07, 6.334000000000201e-06, 4.859999999974607e-07, 7.097000000001047e-06, 5.419999999992098e-07, 5.596999999999547e-06, 5.420000000026792e-07, 1.0263999999999412e-05, 5.409999999997361e-07, 1.0166999999998427e-05, 5.420000000026792e-07, 6.026999999998728e-06, 4.860000000009301e-07, 8.333999999998731e-06, 5.409999999997361e-07, 3.9309999999986855e-06, 5.420000000026792e-07, 4.7639999999973814e-06, 5.410000000032056e-07], 'time': [0.023152014, 0.0231525, 0.02316075, 0.023161236, 0.023169583, 0.023170069, 0.023178847, 0.023179333, 0.023187903, 0.023188375, 0.023194236, 0.023194708, 0.023205125, 0.023205667, 0.023212625, 0.023213111, 0.023218847, 0.023219389, 0.023228208, 0.02322875, 0.023235792, 0.023236333, 0.023243806, 0.023244347, 0.023249944, 0.023250431, 0.023260653, 0.023261139, 0.023271153, 0.023271639, 0.023280917, 0.023281458, 0.023287278, 0.02328775, 0.023294528, 0.023295069, 0.023299528, 0.023300069, 0.023304611, 0.023305153, 0.023311597, 0.023312083, 0.023322097, 0.023322583, 0.023327486, 0.023328028, 0.023336111, 0.023336653, 0.023342458, 0.023343, 0.023348583, 0.023349125, 0.023356806, 0.023357347, 0.023365444, 0.023365931, 0.023371319, 0.023371792, 0.023378639, 0.023379181, 0.023386125, 0.023386667, 0.023392986, 0.023393528, 0.023399111, 0.023399653, 0.023404319, 0.023404861, 0.023410569, 0.023411056, 0.023419486, 0.023420028, 0.023428347, 0.023428833, 0.02343625, 0.023436722, 0.023442889, 0.023443375, 0.023453194, 0.023453667, 0.023460653, 0.023461194, 0.023467528, 0.023468014, 0.023475111, 0.023475653, 0.02348125, 0.023481792, 0.023492056, 0.023492597, 0.023502764, 0.023503306, 0.023509333, 0.023509819, 0.023518153, 0.023518694, 0.023522625, 0.023523167, 0.023527931, 0.023528472], 'sourcesource_diff': [0, 4.860000000009301e-07, 8.250000000001312e-06, 4.860000000009301e-07, 8.346999999998828e-06, 4.860000000009301e-07, 8.777999999997482e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 5.419999999992098e-07, 6.958000000001352e-06, 4.860000000009301e-07, 5.735999999999242e-06, 5.419999999992098e-07, 8.819000000000188e-06, 5.419999999992098e-07, 7.042000000002241e-06, 5.409999999997361e-07, 7.472999999997426e-06, 5.409999999997361e-07, 5.597000000003016e-06, 4.869999999969343e-07, 1.0222000000000703e-05, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 9.278000000001452e-06, 5.409999999997361e-07, 5.820000000000131e-06, 4.7199999999789077e-07, 6.7779999999989515e-06, 5.410000000032056e-07, 4.458999999998325e-06, 5.409999999997361e-07, 4.541999999999741e-06, 5.419999999992098e-07, 6.444000000001282e-06, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 4.903000000000546e-06, 5.419999999992098e-07, 8.082999999999008e-06, 5.419999999992098e-07, 5.805000000001087e-06, 5.419999999992098e-07, 5.582999999999977e-06, 5.419999999992098e-07, 7.681000000002436e-06, 5.409999999997361e-07, 8.096999999998578e-06, 4.870000000004038e-07, 5.388000000002002e-06, 4.729999999973644e-07, 6.847000000000797e-06, 5.419999999992098e-07, 6.944000000001782e-06, 5.419999999992098e-07, 6.319000000001157e-06, 5.419999999992098e-07, 5.582999999999977e-06, 5.419999999992098e-07, 4.666000000000392e-06, 5.419999999992098e-07, 5.708000000000102e-06, 4.870000000004038e-07, 8.430000000000243e-06, 5.419999999992098e-07, 8.318999999999688e-06, 4.860000000009301e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 6.167000000001366e-06, 4.859999999974607e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 6.986000000000492e-06, 5.409999999997361e-07, 6.334000000000201e-06, 4.859999999974607e-07, 7.097000000001047e-06, 5.419999999992098e-07, 5.596999999999547e-06, 5.420000000026792e-07, 1.0263999999999412e-05, 5.409999999997361e-07, 1.0166999999998427e-05, 5.420000000026792e-07, 6.026999999998728e-06, 4.860000000009301e-07, 8.333999999998731e-06, 5.409999999997361e-07, 3.9309999999986855e-06, 5.420000000026792e-07, 4.7639999999973814e-06, 5.410000000032056e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:26.061" endtime="20201110 08:36:26.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.057" endtime="20201110 08:36:26.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:26.069" level="INFO">${RESULT} = [{'time': 0.0231525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023161236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:26.066" endtime="20201110 08:36:26.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:26.083" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:26.070" endtime="20201110 08:36:26.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.087" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:26.086" endtime="20201110 08:36:26.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.090" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.869999999969343e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.410000000032056e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.870000000004038e-07, 4.729999999973644e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.410000000032056e-07]</msg>
<status status="PASS" starttime="20201110 08:36:26.088" endtime="20201110 08:36:26.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.084" endtime="20201110 08:36:26.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.093" endtime="20201110 08:36:26.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:26.096" endtime="20201110 08:36:26.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.095" endtime="20201110 08:36:26.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.091" endtime="20201110 08:36:26.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.671" endtime="20201110 08:36:26.117"></status>
</kw>
<msg timestamp="20201110 08:36:26.117" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.125" endtime="20201110 08:36:26.143"></status>
</kw>
<msg timestamp="20201110 08:36:26.144" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:26.123" endtime="20201110 08:36:26.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.146" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:26.145" endtime="20201110 08:36:26.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.147" endtime="20201110 08:36:26.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.121" endtime="20201110 08:36:26.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.119" endtime="20201110 08:36:26.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.157" endtime="20201110 08:36:26.460"></status>
</kw>
<msg timestamp="20201110 08:36:26.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021423028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021423514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:26.155" endtime="20201110 08:36:26.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021423028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021423514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:26.464" endtime="20201110 08:36:26.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.473" endtime="20201110 08:36:26.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.153" endtime="20201110 08:36:26.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.151" endtime="20201110 08:36:26.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.479" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:26.478" endtime="20201110 08:36:26.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.484" level="INFO">VALUE: [{'time': 0.021423028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021423514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021428125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.021428611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021435917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.021436403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021441222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.021441764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021449028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.021449569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.021459556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986999999999496e-06, 'source_diff': 9.986999999999496e-06}, {'time': 0.021460097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021466222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.021466764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021471222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458000000002321e-06, 'source_diff': 4.458000000002321e-06}, {'time': 0.021471764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021476542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.021477028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021483514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.021484, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021491639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.021492125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021502458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.021503, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021510361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.021510903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021515347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.021515889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021524083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.021524625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021533431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.021533972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021540958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.021541431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021551319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.887999999999564e-06, 'source_diff': 9.887999999999564e-06}, {'time': 0.021551806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.02156025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.021560792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021568583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791000000000048e-06, 'source_diff': 7.791000000000048e-06}, {'time': 0.021569069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021574806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.736999999998715e-06, 'source_diff': 5.736999999998715e-06}, {'time': 0.021575347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.021582389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.021582931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021588958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.021589431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021597042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.611000000001117e-06, 'source_diff': 7.611000000001117e-06}, {'time': 0.021597583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021604444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.021604931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021609, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.068999999998907e-06, 'source_diff': 4.068999999998907e-06}, {'time': 0.021609542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021617111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569000000002407e-06, 'source_diff': 7.569000000002407e-06}, {'time': 0.021617653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021622514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.021623056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021628014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.021628556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021635292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.021635833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021640847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.021641319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021649333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.021649819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021656597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.021657139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021662625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486000000002461e-06, 'source_diff': 5.486000000002461e-06}, {'time': 0.021663167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021673125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958000000000883e-06, 'source_diff': 9.958000000000883e-06}, {'time': 0.021673667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021682694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.026999999998259e-06, 'source_diff': 9.026999999998259e-06}, {'time': 0.021683236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021690083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.021690625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021700403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777999999998482e-06, 'source_diff': 9.777999999998482e-06}, {'time': 0.021700944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021708417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.473000000000896e-06, 'source_diff': 7.473000000000896e-06}, {'time': 0.021708958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021717681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722999999998676e-06, 'source_diff': 8.722999999998676e-06}, {'time': 0.021718222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021728153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.021728625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021734875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.021735417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021745181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999998912e-06, 'source_diff': 9.763999999998912e-06}, {'time': 0.021745722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021750472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.021751014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021759417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.021759958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021768875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000000647e-06, 'source_diff': 8.917000000000647e-06}, {'time': 0.021769417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021774083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.021774569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021783111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.021783653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021793403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.021793944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021800264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.021800806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:26.480" endtime="20201110 08:36:26.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.476" endtime="20201110 08:36:26.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:26.511" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:26.486" endtime="20201110 08:36:26.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.515" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:26.514" endtime="20201110 08:36:26.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.519" level="INFO">VALUE: {'eventdiff': [0, 4.860000000009301e-07, 4.610999999998117e-06, 4.860000000009301e-07, 7.305999999998591e-06, 4.860000000009301e-07, 4.818999999999657e-06, 5.419999999992098e-07, 7.263999999999882e-06, 5.410000000032056e-07, 9.986999999999496e-06, 5.409999999997361e-07, 6.124999999999187e-06, 5.419999999992098e-07, 4.458000000002321e-06, 5.419999999992098e-07, 4.778000000000421e-06, 4.859999999974607e-07, 6.485999999999992e-06, 4.860000000009301e-07, 7.639000000000257e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 5.420000000026792e-07, 7.360999999997397e-06, 5.420000000026792e-07, 4.443999999999282e-06, 5.419999999992098e-07, 8.193999999999563e-06, 5.419999999992098e-07, 8.806000000000092e-06, 5.409999999997361e-07, 6.986000000000492e-06, 4.7300000000083386e-07, 9.887999999999564e-06, 4.870000000004038e-07, 8.443999999999813e-06, 5.419999999992098e-07, 7.791000000000048e-06, 4.860000000009301e-07, 5.736999999998715e-06, 5.410000000032056e-07, 7.0419999999987715e-06, 5.419999999992098e-07, 6.026999999998728e-06, 4.7300000000083386e-07, 7.611000000001117e-06, 5.409999999997361e-07, 6.861000000000367e-06, 4.870000000004038e-07, 4.068999999998907e-06, 5.419999999992098e-07, 7.569000000002407e-06, 5.419999999992098e-07, 4.860999999998367e-06, 5.420000000026792e-07, 4.957999999999352e-06, 5.419999999992098e-07, 6.736000000000242e-06, 5.409999999997361e-07, 5.014000000001101e-06, 4.7199999999789077e-07, 8.014000000000632e-06, 4.860000000009301e-07, 6.7779999999989515e-06, 5.419999999992098e-07, 5.486000000002461e-06, 5.419999999992098e-07, 9.958000000000883e-06, 5.419999999992098e-07, 9.026999999998259e-06, 5.420000000026792e-07, 6.8469999999973274e-06, 5.420000000026792e-07, 9.777999999998482e-06, 5.409999999997361e-07, 7.473000000000896e-06, 5.409999999997361e-07, 8.722999999998676e-06, 5.409999999997361e-07, 9.931000000001217e-06, 4.720000000013602e-07, 6.249999999999312e-06, 5.419999999992098e-07, 9.763999999998912e-06, 5.409999999997361e-07, 4.750000000001281e-06, 5.419999999992098e-07, 8.403000000000577e-06, 5.409999999997361e-07, 8.917000000000647e-06, 5.419999999992098e-07, 4.666000000000392e-06, 4.860000000009301e-07, 8.542000000000272e-06, 5.419999999992098e-07, 9.749999999999343e-06, 5.409999999997361e-07, 6.320000000000631e-06, 5.419999999992098e-07], 'time': [0.021423028, 0.021423514, 0.021428125, 0.021428611, 0.021435917, 0.021436403, 0.021441222, 0.021441764, 0.021449028, 0.021449569, 0.021459556, 0.021460097, 0.021466222, 0.021466764, 0.021471222, 0.021471764, 0.021476542, 0.021477028, 0.021483514, 0.021484, 0.021491639, 0.021492125, 0.021502458, 0.021503, 0.021510361, 0.021510903, 0.021515347, 0.021515889, 0.021524083, 0.021524625, 0.021533431, 0.021533972, 0.021540958, 0.021541431, 0.021551319, 0.021551806, 0.02156025, 0.021560792, 0.021568583, 0.021569069, 0.021574806, 0.021575347, 0.021582389, 0.021582931, 0.021588958, 0.021589431, 0.021597042, 0.021597583, 0.021604444, 0.021604931, 0.021609, 0.021609542, 0.021617111, 0.021617653, 0.021622514, 0.021623056, 0.021628014, 0.021628556, 0.021635292, 0.021635833, 0.021640847, 0.021641319, 0.021649333, 0.021649819, 0.021656597, 0.021657139, 0.021662625, 0.021663167, 0.021673125, 0.021673667, 0.021682694, 0.021683236, 0.021690083, 0.021690625, 0.021700403, 0.021700944, 0.021708417, 0.021708958, 0.021717681, 0.021718222, 0.021728153, 0.021728625, 0.021734875, 0.021735417, 0.021745181, 0.021745722, 0.021750472, 0.021751014, 0.021759417, 0.021759958, 0.021768875, 0.021769417, 0.021774083, 0.021774569, 0.021783111, 0.021783653, 0.021793403, 0.021793944, 0.021800264, 0.021800806], 'sourcesource_diff': [0, 4.860000000009301e-07, 4.610999999998117e-06, 4.860000000009301e-07, 7.305999999998591e-06, 4.860000000009301e-07, 4.818999999999657e-06, 5.419999999992098e-07, 7.263999999999882e-06, 5.410000000032056e-07, 9.986999999999496e-06, 5.409999999997361e-07, 6.124999999999187e-06, 5.419999999992098e-07, 4.458000000002321e-06, 5.419999999992098e-07, 4.778000000000421e-06, 4.859999999974607e-07, 6.485999999999992e-06, 4.860000000009301e-07, 7.639000000000257e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 5.420000000026792e-07, 7.360999999997397e-06, 5.420000000026792e-07, 4.443999999999282e-06, 5.419999999992098e-07, 8.193999999999563e-06, 5.419999999992098e-07, 8.806000000000092e-06, 5.409999999997361e-07, 6.986000000000492e-06, 4.7300000000083386e-07, 9.887999999999564e-06, 4.870000000004038e-07, 8.443999999999813e-06, 5.419999999992098e-07, 7.791000000000048e-06, 4.860000000009301e-07, 5.736999999998715e-06, 5.410000000032056e-07, 7.0419999999987715e-06, 5.419999999992098e-07, 6.026999999998728e-06, 4.7300000000083386e-07, 7.611000000001117e-06, 5.409999999997361e-07, 6.861000000000367e-06, 4.870000000004038e-07, 4.068999999998907e-06, 5.419999999992098e-07, 7.569000000002407e-06, 5.419999999992098e-07, 4.860999999998367e-06, 5.420000000026792e-07, 4.957999999999352e-06, 5.419999999992098e-07, 6.736000000000242e-06, 5.409999999997361e-07, 5.014000000001101e-06, 4.7199999999789077e-07, 8.014000000000632e-06, 4.860000000009301e-07, 6.7779999999989515e-06, 5.419999999992098e-07, 5.486000000002461e-06, 5.419999999992098e-07, 9.958000000000883e-06, 5.419999999992098e-07, 9.026999999998259e-06, 5.420000000026792e-07, 6.8469999999973274e-06, 5.420000000026792e-07, 9.777999999998482e-06, 5.409999999997361e-07, 7.473000000000896e-06, 5.409999999997361e-07, 8.722999999998676e-06, 5.409999999997361e-07, 9.931000000001217e-06, 4.720000000013602e-07, 6.249999999999312e-06, 5.419999999992098e-07, 9.763999999998912e-06, 5.409999999997361e-07, 4.750000000001281e-06, 5.419999999992098e-07, 8.403000000000577e-06, 5.409999999997361e-07, 8.917000000000647e-06, 5.419999999992098e-07, 4.666000000000392e-06, 4.860000000009301e-07, 8.542000000000272e-06, 5.419999999992098e-07, 9.749999999999343e-06, 5.409999999997361e-07, 6.320000000000631e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:26.516" endtime="20201110 08:36:26.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.512" endtime="20201110 08:36:26.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:26.524" level="INFO">${RESULT} = [{'time': 0.021423514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021428611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:26.521" endtime="20201110 08:36:26.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:26.539" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:26.525" endtime="20201110 08:36:26.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.543" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:26.542" endtime="20201110 08:36:26.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.545" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.410000000032056e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.410000000032056e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201110 08:36:26.544" endtime="20201110 08:36:26.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.539" endtime="20201110 08:36:26.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.548" endtime="20201110 08:36:26.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:26.552" endtime="20201110 08:36:26.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.550" endtime="20201110 08:36:26.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.547" endtime="20201110 08:36:26.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.118" endtime="20201110 08:36:26.572"></status>
</kw>
<msg timestamp="20201110 08:36:26.573" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.580" endtime="20201110 08:36:26.594"></status>
</kw>
<msg timestamp="20201110 08:36:26.595" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:26.579" endtime="20201110 08:36:26.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.597" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:26.596" endtime="20201110 08:36:26.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.598" endtime="20201110 08:36:26.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.576" endtime="20201110 08:36:26.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.574" endtime="20201110 08:36:26.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.607" endtime="20201110 08:36:26.888"></status>
</kw>
<msg timestamp="20201110 08:36:26.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018200111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018200597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:26.605" endtime="20201110 08:36:26.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018200111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018200597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:26.892" endtime="20201110 08:36:26.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.900" endtime="20201110 08:36:26.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.603" endtime="20201110 08:36:26.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.601" endtime="20201110 08:36:26.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.907" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:26.906" endtime="20201110 08:36:26.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.912" level="INFO">VALUE: [{'time': 0.018200111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018200597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018209458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.018209944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018216417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.018216958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018224625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.018225167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018230653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018231194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018241361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0167000000001897e-05, 'source_diff': 1.0167000000001897e-05}, {'time': 0.018241903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018250111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.018250583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018259236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.018259778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018264681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018265153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018270778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.018271264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018280236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.018280778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018286403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.018286875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018290958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.0182915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018301472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.018302014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018307347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.333000000003196e-06, 'source_diff': 5.333000000003196e-06}, {'time': 0.018307819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018318264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000001287e-05, 'source_diff': 1.0445000000001287e-05}, {'time': 0.01831875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018329208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0457999999997913e-05, 'source_diff': 1.0457999999997913e-05}, {'time': 0.018329681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018338139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.018338681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018345431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.018345917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018356222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0304999999998649e-05, 'source_diff': 1.0304999999998649e-05}, {'time': 0.018356764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018366306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541999999997802e-06, 'source_diff': 9.541999999997802e-06}, {'time': 0.018366847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018373125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.018373597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018378486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018378958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018384597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.018385139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018388958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.0183895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018395819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.018396361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018400361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018400833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018408819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.018409361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018417028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.018417569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.018425764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.01842625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018436042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791999999998052e-06, 'source_diff': 9.791999999998052e-06}, {'time': 0.018436583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018443736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.018444278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018450097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.018450583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018458403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.82000000000213e-06, 'source_diff': 7.82000000000213e-06}, {'time': 0.018458944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018468611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.018469097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018475278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018475764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018484431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.018484972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018492764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.018493306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018502347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.040999999997829e-06, 'source_diff': 9.040999999997829e-06}, {'time': 0.018502889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018509431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.018509972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018517972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.018518514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.01852775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999999273e-06, 'source_diff': 9.235999999999273e-06}, {'time': 0.018528236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018538556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.018539097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018545514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416999999998146e-06, 'source_diff': 6.416999999998146e-06}, {'time': 0.018546056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018552375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.018552917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018563181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0264000000002882e-05, 'source_diff': 1.0264000000002882e-05}, {'time': 0.018563722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018572847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.018573389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018578889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.018579375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018586264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.018586806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018596375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.568999999997468e-06, 'source_diff': 9.568999999997468e-06}, {'time': 0.018596917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:26.908" endtime="20201110 08:36:26.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.904" endtime="20201110 08:36:26.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:26.940" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:26.915" endtime="20201110 08:36:26.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.943" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:26.942" endtime="20201110 08:36:26.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.948" level="INFO">VALUE: {'eventdiff': [0, 4.859999999974607e-07, 8.861000000002367e-06, 4.859999999974607e-07, 6.4729999999998955e-06, 5.409999999997361e-07, 7.667000000002866e-06, 5.419999999992098e-07, 5.485999999998992e-06, 5.409999999997361e-07, 1.0167000000001897e-05, 5.419999999992098e-07, 8.207999999999133e-06, 4.720000000013602e-07, 8.653000000000827e-06, 5.419999999992098e-07, 4.903000000000546e-06, 4.7199999999789077e-07, 5.625000000002156e-06, 4.859999999974607e-07, 8.971999999999453e-06, 5.420000000026792e-07, 5.624999999998687e-06, 4.720000000013602e-07, 4.082999999998477e-06, 5.419999999992098e-07, 9.972000000000453e-06, 5.419999999992098e-07, 5.333000000003196e-06, 4.7199999999789077e-07, 1.0445000000001287e-05, 4.860000000009301e-07, 1.0457999999997913e-05, 4.7300000000083386e-07, 8.457999999999383e-06, 5.419999999992098e-07, 6.749999999999812e-06, 4.860000000009301e-07, 1.0304999999998649e-05, 5.420000000026792e-07, 9.541999999997802e-06, 5.409999999997361e-07, 6.278000000001921e-06, 4.7199999999789077e-07, 4.889000000000976e-06, 4.720000000013602e-07, 5.6389999999982565e-06, 5.420000000026792e-07, 3.818999999998657e-06, 5.419999999992098e-07, 6.319000000001157e-06, 5.419999999992098e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.666999999999397e-06, 5.410000000032056e-07, 8.194999999999036e-06, 4.860000000009301e-07, 9.791999999998052e-06, 5.409999999997361e-07, 7.1529999999993266e-06, 5.420000000026792e-07, 5.8189999999971875e-06, 4.860000000009301e-07, 7.82000000000213e-06, 5.409999999997361e-07, 9.666999999997927e-06, 4.860000000009301e-07, 6.181000000000936e-06, 4.859999999974607e-07, 8.667000000000397e-06, 5.409999999997361e-07, 7.791999999999522e-06, 5.420000000026792e-07, 9.040999999997829e-06, 5.420000000026792e-07, 6.541999999998271e-06, 5.409999999997361e-07, 8.000000000001062e-06, 5.419999999992098e-07, 9.235999999999273e-06, 4.860000000009301e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 6.416999999998146e-06, 5.420000000026792e-07, 6.318999999997688e-06, 5.419999999992098e-07, 1.0264000000002882e-05, 5.409999999997361e-07, 9.124999999998717e-06, 5.419999999992098e-07, 5.500000000002031e-06, 4.859999999974607e-07, 6.889000000002976e-06, 5.419999999992098e-07, 9.568999999997468e-06, 5.420000000026792e-07], 'time': [0.018200111, 0.018200597, 0.018209458, 0.018209944, 0.018216417, 0.018216958, 0.018224625, 0.018225167, 0.018230653, 0.018231194, 0.018241361, 0.018241903, 0.018250111, 0.018250583, 0.018259236, 0.018259778, 0.018264681, 0.018265153, 0.018270778, 0.018271264, 0.018280236, 0.018280778, 0.018286403, 0.018286875, 0.018290958, 0.0182915, 0.018301472, 0.018302014, 0.018307347, 0.018307819, 0.018318264, 0.01831875, 0.018329208, 0.018329681, 0.018338139, 0.018338681, 0.018345431, 0.018345917, 0.018356222, 0.018356764, 0.018366306, 0.018366847, 0.018373125, 0.018373597, 0.018378486, 0.018378958, 0.018384597, 0.018385139, 0.018388958, 0.0183895, 0.018395819, 0.018396361, 0.018400361, 0.018400833, 0.018408819, 0.018409361, 0.018417028, 0.018417569, 0.018425764, 0.01842625, 0.018436042, 0.018436583, 0.018443736, 0.018444278, 0.018450097, 0.018450583, 0.018458403, 0.018458944, 0.018468611, 0.018469097, 0.018475278, 0.018475764, 0.018484431, 0.018484972, 0.018492764, 0.018493306, 0.018502347, 0.018502889, 0.018509431, 0.018509972, 0.018517972, 0.018518514, 0.01852775, 0.018528236, 0.018538556, 0.018539097, 0.018545514, 0.018546056, 0.018552375, 0.018552917, 0.018563181, 0.018563722, 0.018572847, 0.018573389, 0.018578889, 0.018579375, 0.018586264, 0.018586806, 0.018596375, 0.018596917], 'sourcesource_diff': [0, 4.859999999974607e-07, 8.861000000002367e-06, 4.859999999974607e-07, 6.4729999999998955e-06, 5.409999999997361e-07, 7.667000000002866e-06, 5.419999999992098e-07, 5.485999999998992e-06, 5.409999999997361e-07, 1.0167000000001897e-05, 5.419999999992098e-07, 8.207999999999133e-06, 4.720000000013602e-07, 8.653000000000827e-06, 5.419999999992098e-07, 4.903000000000546e-06, 4.7199999999789077e-07, 5.625000000002156e-06, 4.859999999974607e-07, 8.971999999999453e-06, 5.420000000026792e-07, 5.624999999998687e-06, 4.720000000013602e-07, 4.082999999998477e-06, 5.419999999992098e-07, 9.972000000000453e-06, 5.419999999992098e-07, 5.333000000003196e-06, 4.7199999999789077e-07, 1.0445000000001287e-05, 4.860000000009301e-07, 1.0457999999997913e-05, 4.7300000000083386e-07, 8.457999999999383e-06, 5.419999999992098e-07, 6.749999999999812e-06, 4.860000000009301e-07, 1.0304999999998649e-05, 5.420000000026792e-07, 9.541999999997802e-06, 5.409999999997361e-07, 6.278000000001921e-06, 4.7199999999789077e-07, 4.889000000000976e-06, 4.720000000013602e-07, 5.6389999999982565e-06, 5.420000000026792e-07, 3.818999999998657e-06, 5.419999999992098e-07, 6.319000000001157e-06, 5.419999999992098e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.666999999999397e-06, 5.410000000032056e-07, 8.194999999999036e-06, 4.860000000009301e-07, 9.791999999998052e-06, 5.409999999997361e-07, 7.1529999999993266e-06, 5.420000000026792e-07, 5.8189999999971875e-06, 4.860000000009301e-07, 7.82000000000213e-06, 5.409999999997361e-07, 9.666999999997927e-06, 4.860000000009301e-07, 6.181000000000936e-06, 4.859999999974607e-07, 8.667000000000397e-06, 5.409999999997361e-07, 7.791999999999522e-06, 5.420000000026792e-07, 9.040999999997829e-06, 5.420000000026792e-07, 6.541999999998271e-06, 5.409999999997361e-07, 8.000000000001062e-06, 5.419999999992098e-07, 9.235999999999273e-06, 4.860000000009301e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 6.416999999998146e-06, 5.420000000026792e-07, 6.318999999997688e-06, 5.419999999992098e-07, 1.0264000000002882e-05, 5.409999999997361e-07, 9.124999999998717e-06, 5.419999999992098e-07, 5.500000000002031e-06, 4.859999999974607e-07, 6.889000000002976e-06, 5.419999999992098e-07, 9.568999999997468e-06, 5.420000000026792e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:26.945" endtime="20201110 08:36:26.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.941" endtime="20201110 08:36:26.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:26.953" level="INFO">${RESULT} = [{'time': 0.018200597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018209944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:26.950" endtime="20201110 08:36:26.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:26.967" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:26.954" endtime="20201110 08:36:26.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.971" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:26.970" endtime="20201110 08:36:26.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.974" level="INFO">VALUE: [4.859999999974607e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.410000000032056e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.420000000026792e-07]</msg>
<status status="PASS" starttime="20201110 08:36:26.973" endtime="20201110 08:36:26.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.968" endtime="20201110 08:36:26.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.977" endtime="20201110 08:36:26.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:26.980" endtime="20201110 08:36:27.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.979" endtime="20201110 08:36:27.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.975" endtime="20201110 08:36:27.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.573" endtime="20201110 08:36:27.001"></status>
</kw>
<msg timestamp="20201110 08:36:27.001" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.012" endtime="20201110 08:36:27.039"></status>
</kw>
<msg timestamp="20201110 08:36:27.040" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.008" endtime="20201110 08:36:27.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.045" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.042" endtime="20201110 08:36:27.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.048" endtime="20201110 08:36:27.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.005" endtime="20201110 08:36:27.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.003" endtime="20201110 08:36:27.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.069" endtime="20201110 08:36:27.357"></status>
</kw>
<msg timestamp="20201110 08:36:27.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0264135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026414042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:27.066" endtime="20201110 08:36:27.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0264135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026414042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:27.361" endtime="20201110 08:36:27.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.370" endtime="20201110 08:36:27.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.060" endtime="20201110 08:36:27.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.056" endtime="20201110 08:36:27.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.376" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:27.375" endtime="20201110 08:36:27.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.381" level="INFO">VALUE: [{'time': 0.0264135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026414042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026419653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.026420194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.026428083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000000507e-06, 'source_diff': 7.889000000000507e-06}, {'time': 0.026428625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026435083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.026435569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.026440167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59800000000149e-06, 'source_diff': 4.59800000000149e-06}, {'time': 0.026440708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.026445569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.026446111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.026452222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.026452764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026460014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.026460556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026470833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0276999999999509e-05, 'source_diff': 1.0276999999999509e-05}, {'time': 0.026471319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026476444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.026476986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.026487153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.026487639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026495472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.026495958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026503681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.026504167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.026511583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.415999999999673e-06, 'source_diff': 7.415999999999673e-06}, {'time': 0.026512069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026519889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.82000000000213e-06, 'source_diff': 7.82000000000213e-06}, {'time': 0.026520431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026527056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.026527597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.026534861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.026535403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026544972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.026545444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.026553986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.026554528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026562333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.026562806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.026572708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.901999999999134e-06, 'source_diff': 9.901999999999134e-06}, {'time': 0.026573194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026579764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.569999999997411e-06, 'source_diff': 6.569999999997411e-06}, {'time': 0.026580306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.026584764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.02658525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026595667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.026596208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.026600667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.459000000001795e-06, 'source_diff': 4.459000000001795e-06}, {'time': 0.026601153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.02661075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.026611236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026618347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.026618833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.026623333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.026623875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.026628431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.026628972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.026638222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.249999999998842e-06, 'source_diff': 9.249999999998842e-06}, {'time': 0.026638764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026644778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.026645319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.026653639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}, {'time': 0.026654181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026663847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666000000001923e-06, 'source_diff': 9.666000000001923e-06}, {'time': 0.026664389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026674472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.026675014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026684694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.026685167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.026689139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.026689681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.02669575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.026696222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026704111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000000507e-06, 'source_diff': 7.889000000000507e-06}, {'time': 0.026704653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026710875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.026711417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.026718972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.026719514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026728653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000001757e-06, 'source_diff': 9.139000000001757e-06}, {'time': 0.026729139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.026738944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.026739431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.026749542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.026750083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.026755472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3889999999980065e-06, 'source_diff': 5.3889999999980065e-06}, {'time': 0.026756014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.026761292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.026761833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.026769653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.82000000000213e-06, 'source_diff': 7.82000000000213e-06}, {'time': 0.026770125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.026778125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.026778667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026782694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027000000000197e-06, 'source_diff': 4.027000000000197e-06}, {'time': 0.026783236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026790389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.026790931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026799764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.02680025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:27.377" endtime="20201110 08:36:27.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.373" endtime="20201110 08:36:27.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:27.408" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:27.384" endtime="20201110 08:36:27.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.412" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:27.411" endtime="20201110 08:36:27.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.416" level="INFO">VALUE: {'eventdiff': [0, 5.419999999992098e-07, 5.611000000002586e-06, 5.409999999997361e-07, 7.889000000000507e-06, 5.419999999992098e-07, 6.458000000000852e-06, 4.859999999974607e-07, 4.59800000000149e-06, 5.409999999997361e-07, 4.860999999998367e-06, 5.420000000026792e-07, 6.110999999999617e-06, 5.419999999992098e-07, 7.250000000000312e-06, 5.419999999992098e-07, 1.0276999999999509e-05, 4.860000000009301e-07, 5.1249999999981866e-06, 5.420000000026792e-07, 1.0166999999998427e-05, 4.860000000009301e-07, 7.832999999998758e-06, 4.860000000009301e-07, 7.723000000001146e-06, 4.859999999974607e-07, 7.415999999999673e-06, 4.860000000009301e-07, 7.82000000000213e-06, 5.419999999992098e-07, 6.624999999999687e-06, 5.409999999997361e-07, 7.263999999999882e-06, 5.419999999992098e-07, 9.569000000000938e-06, 4.720000000013602e-07, 8.542000000000272e-06, 5.419999999992098e-07, 7.804999999999618e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 4.860000000009301e-07, 6.569999999997411e-06, 5.420000000026792e-07, 4.457999999998852e-06, 4.860000000009301e-07, 1.0416999999998677e-05, 5.409999999997361e-07, 4.459000000001795e-06, 4.859999999974607e-07, 9.597000000000078e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.860000000009301e-07, 4.4999999999975615e-06, 5.420000000026792e-07, 4.555999999999311e-06, 5.409999999997361e-07, 9.249999999998842e-06, 5.419999999992098e-07, 6.014000000002101e-06, 5.409999999997361e-07, 8.319999999999161e-06, 5.419999999992098e-07, 9.666000000001923e-06, 5.419999999992098e-07, 1.0083000000001008e-05, 5.419999999992098e-07, 9.679999999998024e-06, 4.7300000000083386e-07, 3.972000000001391e-06, 5.419999999992098e-07, 6.069000000000907e-06, 4.7199999999789077e-07, 7.889000000000507e-06, 5.419999999992098e-07, 6.222000000000172e-06, 5.420000000026792e-07, 7.554999999999368e-06, 5.419999999992098e-07, 9.139000000001757e-06, 4.859999999974607e-07, 9.805000000001618e-06, 4.870000000004038e-07, 1.0111000000000148e-05, 5.409999999997361e-07, 5.3889999999980065e-06, 5.420000000026792e-07, 5.277999999997451e-06, 5.409999999997361e-07, 7.82000000000213e-06, 4.7199999999789077e-07, 8.000000000001062e-06, 5.419999999992098e-07, 4.027000000000197e-06, 5.419999999992098e-07, 7.153000000002796e-06, 5.419999999992098e-07, 8.832999999999758e-06, 4.860000000009301e-07], 'time': [0.0264135, 0.026414042, 0.026419653, 0.026420194, 0.026428083, 0.026428625, 0.026435083, 0.026435569, 0.026440167, 0.026440708, 0.026445569, 0.026446111, 0.026452222, 0.026452764, 0.026460014, 0.026460556, 0.026470833, 0.026471319, 0.026476444, 0.026476986, 0.026487153, 0.026487639, 0.026495472, 0.026495958, 0.026503681, 0.026504167, 0.026511583, 0.026512069, 0.026519889, 0.026520431, 0.026527056, 0.026527597, 0.026534861, 0.026535403, 0.026544972, 0.026545444, 0.026553986, 0.026554528, 0.026562333, 0.026562806, 0.026572708, 0.026573194, 0.026579764, 0.026580306, 0.026584764, 0.02658525, 0.026595667, 0.026596208, 0.026600667, 0.026601153, 0.02661075, 0.026611236, 0.026618347, 0.026618833, 0.026623333, 0.026623875, 0.026628431, 0.026628972, 0.026638222, 0.026638764, 0.026644778, 0.026645319, 0.026653639, 0.026654181, 0.026663847, 0.026664389, 0.026674472, 0.026675014, 0.026684694, 0.026685167, 0.026689139, 0.026689681, 0.02669575, 0.026696222, 0.026704111, 0.026704653, 0.026710875, 0.026711417, 0.026718972, 0.026719514, 0.026728653, 0.026729139, 0.026738944, 0.026739431, 0.026749542, 0.026750083, 0.026755472, 0.026756014, 0.026761292, 0.026761833, 0.026769653, 0.026770125, 0.026778125, 0.026778667, 0.026782694, 0.026783236, 0.026790389, 0.026790931, 0.026799764, 0.02680025], 'sourcesource_diff': [0, 5.419999999992098e-07, 5.611000000002586e-06, 5.409999999997361e-07, 7.889000000000507e-06, 5.419999999992098e-07, 6.458000000000852e-06, 4.859999999974607e-07, 4.59800000000149e-06, 5.409999999997361e-07, 4.860999999998367e-06, 5.420000000026792e-07, 6.110999999999617e-06, 5.419999999992098e-07, 7.250000000000312e-06, 5.419999999992098e-07, 1.0276999999999509e-05, 4.860000000009301e-07, 5.1249999999981866e-06, 5.420000000026792e-07, 1.0166999999998427e-05, 4.860000000009301e-07, 7.832999999998758e-06, 4.860000000009301e-07, 7.723000000001146e-06, 4.859999999974607e-07, 7.415999999999673e-06, 4.860000000009301e-07, 7.82000000000213e-06, 5.419999999992098e-07, 6.624999999999687e-06, 5.409999999997361e-07, 7.263999999999882e-06, 5.419999999992098e-07, 9.569000000000938e-06, 4.720000000013602e-07, 8.542000000000272e-06, 5.419999999992098e-07, 7.804999999999618e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 4.860000000009301e-07, 6.569999999997411e-06, 5.420000000026792e-07, 4.457999999998852e-06, 4.860000000009301e-07, 1.0416999999998677e-05, 5.409999999997361e-07, 4.459000000001795e-06, 4.859999999974607e-07, 9.597000000000078e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.860000000009301e-07, 4.4999999999975615e-06, 5.420000000026792e-07, 4.555999999999311e-06, 5.409999999997361e-07, 9.249999999998842e-06, 5.419999999992098e-07, 6.014000000002101e-06, 5.409999999997361e-07, 8.319999999999161e-06, 5.419999999992098e-07, 9.666000000001923e-06, 5.419999999992098e-07, 1.0083000000001008e-05, 5.419999999992098e-07, 9.679999999998024e-06, 4.7300000000083386e-07, 3.972000000001391e-06, 5.419999999992098e-07, 6.069000000000907e-06, 4.7199999999789077e-07, 7.889000000000507e-06, 5.419999999992098e-07, 6.222000000000172e-06, 5.420000000026792e-07, 7.554999999999368e-06, 5.419999999992098e-07, 9.139000000001757e-06, 4.859999999974607e-07, 9.805000000001618e-06, 4.870000000004038e-07, 1.0111000000000148e-05, 5.409999999997361e-07, 5.3889999999980065e-06, 5.420000000026792e-07, 5.277999999997451e-06, 5.409999999997361e-07, 7.82000000000213e-06, 4.7199999999789077e-07, 8.000000000001062e-06, 5.419999999992098e-07, 4.027000000000197e-06, 5.419999999992098e-07, 7.153000000002796e-06, 5.419999999992098e-07, 8.832999999999758e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:27.413" endtime="20201110 08:36:27.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.409" endtime="20201110 08:36:27.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:27.421" level="INFO">${RESULT} = [{'time': 0.026414042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.026420194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:27.418" endtime="20201110 08:36:27.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:27.435" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:27.422" endtime="20201110 08:36:27.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.440" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:27.439" endtime="20201110 08:36:27.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.442" level="INFO">VALUE: [5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201110 08:36:27.441" endtime="20201110 08:36:27.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.436" endtime="20201110 08:36:27.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.445" endtime="20201110 08:36:27.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:27.448" endtime="20201110 08:36:27.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.447" endtime="20201110 08:36:27.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.443" endtime="20201110 08:36:27.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.002" endtime="20201110 08:36:27.469"></status>
</kw>
<msg timestamp="20201110 08:36:27.469" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.477" endtime="20201110 08:36:27.493"></status>
</kw>
<msg timestamp="20201110 08:36:27.494" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.475" endtime="20201110 08:36:27.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.496" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.495" endtime="20201110 08:36:27.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.497" endtime="20201110 08:36:27.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.473" endtime="20201110 08:36:27.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.471" endtime="20201110 08:36:27.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.506" endtime="20201110 08:36:27.794"></status>
</kw>
<msg timestamp="20201110 08:36:27.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020582375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020582847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:27.505" endtime="20201110 08:36:27.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020582375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020582847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:27.798" endtime="20201110 08:36:27.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.807" endtime="20201110 08:36:27.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.502" endtime="20201110 08:36:27.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.500" endtime="20201110 08:36:27.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.813" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:27.812" endtime="20201110 08:36:27.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.818" level="INFO">VALUE: [{'time': 0.020582375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020582847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020587111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.020587653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020594917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.020595458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020604708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.249999999998842e-06, 'source_diff': 9.249999999998842e-06}, {'time': 0.020605181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020614153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.020614639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020621333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.020621819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020630042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.223000000001646e-06, 'source_diff': 8.223000000001646e-06}, {'time': 0.020630583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020637861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.020638347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020646375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.020646861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020656986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.020657472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020663, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.020663542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020670903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.020671444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020676111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.020676597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020682125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.020682667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020689625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.020690111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020694917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.020695403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020699375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.020699917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020705403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.020705944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020711875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.020712347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020718514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.020719056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020725375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.020725917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020732653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.020733194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020738778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.020739319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020749583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0263999999999412e-05, 'source_diff': 1.0263999999999412e-05}, {'time': 0.020750125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020753972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.020754458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020761986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.020762472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020772389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.020772931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020780972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.020781444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020790417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972999999998926e-06, 'source_diff': 8.972999999998926e-06}, {'time': 0.020790958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020797597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.020798139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020803958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.0208045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020808958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.0208095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020819375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.020819861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020825597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.736000000002711e-06, 'source_diff': 5.736000000002711e-06}, {'time': 0.020826139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020834125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.020834667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.020842181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.020842653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020849708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055000000002337e-06, 'source_diff': 7.055000000002337e-06}, {'time': 0.02085025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020856778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.020857319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020865819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.020866361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020874667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.020875208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020881431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.020881917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020888111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.020888583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02089525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.020895736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020900875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.020901361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020911361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.020911847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020920111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.020920583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020930167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.020930708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020937236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.020937778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.020943792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.020944333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.020952736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.020953222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:27.814" endtime="20201110 08:36:27.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.810" endtime="20201110 08:36:27.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:27.846" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:27.821" endtime="20201110 08:36:27.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.850" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:27.849" endtime="20201110 08:36:27.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.855" level="INFO">VALUE: {'eventdiff': [0, 4.720000000013602e-07, 4.264000000000351e-06, 5.419999999992098e-07, 7.263999999999882e-06, 5.409999999997361e-07, 9.249999999998842e-06, 4.7300000000083386e-07, 8.971999999999453e-06, 4.860000000009301e-07, 6.693999999998063e-06, 4.860000000009301e-07, 8.223000000001646e-06, 5.409999999997361e-07, 7.2779999999994516e-06, 4.860000000009301e-07, 8.028000000000202e-06, 4.859999999974607e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 5.528000000001171e-06, 5.419999999992098e-07, 7.361000000000867e-06, 5.409999999997361e-07, 4.666999999999866e-06, 4.860000000009301e-07, 5.527999999997701e-06, 5.419999999992098e-07, 6.958000000001352e-06, 4.860000000009301e-07, 4.805999999999561e-06, 4.860000000009301e-07, 3.971999999997922e-06, 5.420000000026792e-07, 5.485999999998992e-06, 5.409999999997361e-07, 5.931000000000686e-06, 4.7199999999789077e-07, 6.167000000001366e-06, 5.419999999992098e-07, 6.319000000001157e-06, 5.419999999992098e-07, 6.736000000000242e-06, 5.409999999997361e-07, 5.5839999999994505e-06, 5.409999999997361e-07, 1.0263999999999412e-05, 5.420000000026792e-07, 3.846999999997797e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.860000000009301e-07, 9.916999999998177e-06, 5.420000000026792e-07, 8.041000000000298e-06, 4.7199999999789077e-07, 8.972999999998926e-06, 5.409999999997361e-07, 6.639000000002726e-06, 5.419999999992098e-07, 5.819000000000657e-06, 5.419999999992098e-07, 4.457999999998852e-06, 5.420000000026792e-07, 9.874999999999468e-06, 4.859999999974607e-07, 5.736000000002711e-06, 5.419999999992098e-07, 7.985999999998022e-06, 5.420000000026792e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 7.055000000002337e-06, 5.419999999992098e-07, 6.5279999999987015e-06, 5.409999999997361e-07, 8.500000000001562e-06, 5.419999999992098e-07, 8.305999999999591e-06, 5.409999999997361e-07, 6.2229999999996455e-06, 4.860000000009301e-07, 6.194000000001032e-06, 4.7199999999789077e-07, 6.667000000001866e-06, 4.860000000009301e-07, 5.1389999999977565e-06, 4.860000000009301e-07, 9.999999999999593e-06, 4.860000000009301e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 9.583999999999981e-06, 5.409999999997361e-07, 6.528000000002171e-06, 5.419999999992098e-07, 6.0139999999986316e-06, 5.409999999997361e-07, 8.403000000000577e-06, 4.860000000009301e-07], 'time': [0.020582375, 0.020582847, 0.020587111, 0.020587653, 0.020594917, 0.020595458, 0.020604708, 0.020605181, 0.020614153, 0.020614639, 0.020621333, 0.020621819, 0.020630042, 0.020630583, 0.020637861, 0.020638347, 0.020646375, 0.020646861, 0.020656986, 0.020657472, 0.020663, 0.020663542, 0.020670903, 0.020671444, 0.020676111, 0.020676597, 0.020682125, 0.020682667, 0.020689625, 0.020690111, 0.020694917, 0.020695403, 0.020699375, 0.020699917, 0.020705403, 0.020705944, 0.020711875, 0.020712347, 0.020718514, 0.020719056, 0.020725375, 0.020725917, 0.020732653, 0.020733194, 0.020738778, 0.020739319, 0.020749583, 0.020750125, 0.020753972, 0.020754458, 0.020761986, 0.020762472, 0.020772389, 0.020772931, 0.020780972, 0.020781444, 0.020790417, 0.020790958, 0.020797597, 0.020798139, 0.020803958, 0.0208045, 0.020808958, 0.0208095, 0.020819375, 0.020819861, 0.020825597, 0.020826139, 0.020834125, 0.020834667, 0.020842181, 0.020842653, 0.020849708, 0.02085025, 0.020856778, 0.020857319, 0.020865819, 0.020866361, 0.020874667, 0.020875208, 0.020881431, 0.020881917, 0.020888111, 0.020888583, 0.02089525, 0.020895736, 0.020900875, 0.020901361, 0.020911361, 0.020911847, 0.020920111, 0.020920583, 0.020930167, 0.020930708, 0.020937236, 0.020937778, 0.020943792, 0.020944333, 0.020952736, 0.020953222], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.720000000013602e-07, 4.264000000000351e-06, 5.419999999992098e-07, 7.263999999999882e-06, 5.409999999997361e-07, 9.249999999998842e-06, 4.7300000000083386e-07, 8.971999999999453e-06, 4.860000000009301e-07, 6.693999999998063e-06, 4.860000000009301e-07, 8.223000000001646e-06, 5.409999999997361e-07, 7.2779999999994516e-06, 4.860000000009301e-07, 8.028000000000202e-06, 4.859999999974607e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 5.528000000001171e-06, 5.419999999992098e-07, 7.361000000000867e-06, 5.409999999997361e-07, 4.666999999999866e-06, 4.860000000009301e-07, 5.527999999997701e-06, 5.419999999992098e-07, 6.958000000001352e-06, 4.860000000009301e-07, 4.805999999999561e-06, 4.860000000009301e-07, 3.971999999997922e-06, 5.420000000026792e-07, 5.485999999998992e-06, 5.409999999997361e-07, 5.931000000000686e-06, 4.7199999999789077e-07, 6.167000000001366e-06, 5.419999999992098e-07, 6.319000000001157e-06, 5.419999999992098e-07, 6.736000000000242e-06, 5.409999999997361e-07, 5.5839999999994505e-06, 5.409999999997361e-07, 1.0263999999999412e-05, 5.420000000026792e-07, 3.846999999997797e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.860000000009301e-07, 9.916999999998177e-06, 5.420000000026792e-07, 8.041000000000298e-06, 4.7199999999789077e-07, 8.972999999998926e-06, 5.409999999997361e-07, 6.639000000002726e-06, 5.419999999992098e-07, 5.819000000000657e-06, 5.419999999992098e-07, 4.457999999998852e-06, 5.420000000026792e-07, 9.874999999999468e-06, 4.859999999974607e-07, 5.736000000002711e-06, 5.419999999992098e-07, 7.985999999998022e-06, 5.420000000026792e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 7.055000000002337e-06, 5.419999999992098e-07, 6.5279999999987015e-06, 5.409999999997361e-07, 8.500000000001562e-06, 5.419999999992098e-07, 8.305999999999591e-06, 5.409999999997361e-07, 6.2229999999996455e-06, 4.860000000009301e-07, 6.194000000001032e-06, 4.7199999999789077e-07, 6.667000000001866e-06, 4.860000000009301e-07, 5.1389999999977565e-06, 4.860000000009301e-07, 9.999999999999593e-06, 4.860000000009301e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 9.583999999999981e-06, 5.409999999997361e-07, 6.528000000002171e-06, 5.419999999992098e-07, 6.0139999999986316e-06, 5.409999999997361e-07, 8.403000000000577e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:27.852" endtime="20201110 08:36:27.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.847" endtime="20201110 08:36:27.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:27.861" level="INFO">${RESULT} = [{'time': 0.020582847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020587653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:27.858" endtime="20201110 08:36:27.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:27.875" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:27.862" endtime="20201110 08:36:27.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.879" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:27.878" endtime="20201110 08:36:27.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.882" level="INFO">VALUE: [4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201110 08:36:27.880" endtime="20201110 08:36:27.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.876" endtime="20201110 08:36:27.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.885" endtime="20201110 08:36:27.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:27.888" endtime="20201110 08:36:27.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.886" endtime="20201110 08:36:27.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.883" endtime="20201110 08:36:27.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.470" endtime="20201110 08:36:27.909"></status>
</kw>
<msg timestamp="20201110 08:36:27.909" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.917" endtime="20201110 08:36:27.931"></status>
</kw>
<msg timestamp="20201110 08:36:27.932" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.915" endtime="20201110 08:36:27.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.934" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.933" endtime="20201110 08:36:27.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.935" endtime="20201110 08:36:27.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.913" endtime="20201110 08:36:27.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.911" endtime="20201110 08:36:27.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.944" endtime="20201110 08:36:28.231"></status>
</kw>
<msg timestamp="20201110 08:36:28.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018010347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018010889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:27.942" endtime="20201110 08:36:28.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018010347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018010889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:28.235" endtime="20201110 08:36:28.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.244" endtime="20201110 08:36:28.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.940" endtime="20201110 08:36:28.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.938" endtime="20201110 08:36:28.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.251" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:28.250" endtime="20201110 08:36:28.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.256" level="INFO">VALUE: [{'time': 0.018010347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018010889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018017639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.018018125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018028361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.018028847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018035958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.0180365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018043347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.018043889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018052792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.903000000001077e-06, 'source_diff': 8.903000000001077e-06}, {'time': 0.018053264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01805825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018058792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018067125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.018067611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018073778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.018074319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018078778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.459000000001795e-06, 'source_diff': 4.459000000001795e-06}, {'time': 0.018079319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018085847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.018086389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018095736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018096222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018104264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.01810475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018111319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.569000000001407e-06, 'source_diff': 6.569000000001407e-06}, {'time': 0.018111861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018118181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.018118722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018125153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.018125639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018135542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.903000000002077e-06, 'source_diff': 9.903000000002077e-06}, {'time': 0.018136083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018142861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.018143333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018153528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.018154069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018161556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4870000000004655e-06, 'source_diff': 7.4870000000004655e-06}, {'time': 0.018162028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018170264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.018170806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018180347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.540999999998329e-06, 'source_diff': 9.540999999998329e-06}, {'time': 0.018180889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018185653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.018186194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018192194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.018192736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018202486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.018203028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018208653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.018209125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018213222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018213694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018221847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018222333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018230458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.125000000001187e-06, 'source_diff': 8.125000000001187e-06}, {'time': 0.018231, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018238056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.018238542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018246361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.018246903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018252806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.018253347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018261972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.018262458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018268306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.84800000000274e-06, 'source_diff': 5.84800000000274e-06}, {'time': 0.018268792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018272986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.194000000002501e-06, 'source_diff': 4.194000000002501e-06}, {'time': 0.018273472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018281722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.018282208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018290875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.018291361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018299611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.018300097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018307708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.01830825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018314681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430999999997716e-06, 'source_diff': 6.430999999997716e-06}, {'time': 0.018315167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018320194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.018320681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018324861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.180000000002931e-06, 'source_diff': 4.180000000002931e-06}, {'time': 0.018325403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018334333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000000743e-06, 'source_diff': 8.930000000000743e-06}, {'time': 0.018334819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018342542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.018343028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018348556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.018349097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.018355056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.018355528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018360306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.018360847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018370917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.018371458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018379986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.018380458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018385361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018385903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:28.252" endtime="20201110 08:36:28.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.247" endtime="20201110 08:36:28.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:28.283" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:28.259" endtime="20201110 08:36:28.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.287" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:28.286" endtime="20201110 08:36:28.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.292" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 5.419999999992098e-07, 6.749999999999812e-06, 4.860000000009301e-07, 1.0236000000000273e-05, 4.860000000009301e-07, 7.111000000000617e-06, 5.419999999992098e-07, 6.847000000000797e-06, 5.419999999992098e-07, 8.903000000001077e-06, 4.7199999999789077e-07, 4.986000000001961e-06, 5.419999999992098e-07, 8.332999999999258e-06, 4.860000000009301e-07, 6.166999999997896e-06, 5.409999999997361e-07, 4.459000000001795e-06, 5.409999999997361e-07, 6.5279999999987015e-06, 5.420000000026792e-07, 9.346999999999828e-06, 4.859999999974607e-07, 8.041999999999772e-06, 4.860000000009301e-07, 6.569000000001407e-06, 5.419999999992098e-07, 6.320000000000631e-06, 5.409999999997361e-07, 6.431000000001186e-06, 4.859999999974607e-07, 9.903000000002077e-06, 5.409999999997361e-07, 6.7779999999989515e-06, 4.720000000013602e-07, 1.0194999999997567e-05, 5.409999999997361e-07, 7.4870000000004655e-06, 4.720000000013602e-07, 8.235999999998272e-06, 5.420000000026792e-07, 9.540999999998329e-06, 5.419999999992098e-07, 4.764000000000851e-06, 5.409999999997361e-07, 5.999999999999062e-06, 5.420000000026792e-07, 9.749999999999343e-06, 5.419999999992098e-07, 5.625000000002156e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 8.125000000001187e-06, 5.419999999992098e-07, 7.055999999998341e-06, 4.860000000009301e-07, 7.818999999999188e-06, 5.419999999992098e-07, 5.903000000001546e-06, 5.409999999997361e-07, 8.625000000001687e-06, 4.859999999974607e-07, 5.84800000000274e-06, 4.859999999974607e-07, 4.194000000002501e-06, 4.859999999974607e-07, 8.250000000001312e-06, 4.860000000009301e-07, 8.667000000000397e-06, 4.859999999974607e-07, 8.250000000001312e-06, 4.860000000009301e-07, 7.6109999999976474e-06, 5.420000000026792e-07, 6.430999999997716e-06, 4.860000000009301e-07, 5.027000000001197e-06, 4.869999999969343e-07, 4.180000000002931e-06, 5.419999999992098e-07, 8.930000000000743e-06, 4.859999999974607e-07, 7.723000000001146e-06, 4.860000000009301e-07, 5.527999999997701e-06, 5.410000000032056e-07, 5.9589999999998255e-06, 4.7199999999789077e-07, 4.778000000000421e-06, 5.409999999997361e-07, 1.0070000000000912e-05, 5.409999999997361e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 4.903000000000546e-06, 5.419999999992098e-07], 'time': [0.018010347, 0.018010889, 0.018017639, 0.018018125, 0.018028361, 0.018028847, 0.018035958, 0.0180365, 0.018043347, 0.018043889, 0.018052792, 0.018053264, 0.01805825, 0.018058792, 0.018067125, 0.018067611, 0.018073778, 0.018074319, 0.018078778, 0.018079319, 0.018085847, 0.018086389, 0.018095736, 0.018096222, 0.018104264, 0.01810475, 0.018111319, 0.018111861, 0.018118181, 0.018118722, 0.018125153, 0.018125639, 0.018135542, 0.018136083, 0.018142861, 0.018143333, 0.018153528, 0.018154069, 0.018161556, 0.018162028, 0.018170264, 0.018170806, 0.018180347, 0.018180889, 0.018185653, 0.018186194, 0.018192194, 0.018192736, 0.018202486, 0.018203028, 0.018208653, 0.018209125, 0.018213222, 0.018213694, 0.018221847, 0.018222333, 0.018230458, 0.018231, 0.018238056, 0.018238542, 0.018246361, 0.018246903, 0.018252806, 0.018253347, 0.018261972, 0.018262458, 0.018268306, 0.018268792, 0.018272986, 0.018273472, 0.018281722, 0.018282208, 0.018290875, 0.018291361, 0.018299611, 0.018300097, 0.018307708, 0.01830825, 0.018314681, 0.018315167, 0.018320194, 0.018320681, 0.018324861, 0.018325403, 0.018334333, 0.018334819, 0.018342542, 0.018343028, 0.018348556, 0.018349097, 0.018355056, 0.018355528, 0.018360306, 0.018360847, 0.018370917, 0.018371458, 0.018379986, 0.018380458, 0.018385361, 0.018385903], 'sourcesource_diff': [0, 5.419999999992098e-07, 6.749999999999812e-06, 4.860000000009301e-07, 1.0236000000000273e-05, 4.860000000009301e-07, 7.111000000000617e-06, 5.419999999992098e-07, 6.847000000000797e-06, 5.419999999992098e-07, 8.903000000001077e-06, 4.7199999999789077e-07, 4.986000000001961e-06, 5.419999999992098e-07, 8.332999999999258e-06, 4.860000000009301e-07, 6.166999999997896e-06, 5.409999999997361e-07, 4.459000000001795e-06, 5.409999999997361e-07, 6.5279999999987015e-06, 5.420000000026792e-07, 9.346999999999828e-06, 4.859999999974607e-07, 8.041999999999772e-06, 4.860000000009301e-07, 6.569000000001407e-06, 5.419999999992098e-07, 6.320000000000631e-06, 5.409999999997361e-07, 6.431000000001186e-06, 4.859999999974607e-07, 9.903000000002077e-06, 5.409999999997361e-07, 6.7779999999989515e-06, 4.720000000013602e-07, 1.0194999999997567e-05, 5.409999999997361e-07, 7.4870000000004655e-06, 4.720000000013602e-07, 8.235999999998272e-06, 5.420000000026792e-07, 9.540999999998329e-06, 5.419999999992098e-07, 4.764000000000851e-06, 5.409999999997361e-07, 5.999999999999062e-06, 5.420000000026792e-07, 9.749999999999343e-06, 5.419999999992098e-07, 5.625000000002156e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 8.125000000001187e-06, 5.419999999992098e-07, 7.055999999998341e-06, 4.860000000009301e-07, 7.818999999999188e-06, 5.419999999992098e-07, 5.903000000001546e-06, 5.409999999997361e-07, 8.625000000001687e-06, 4.859999999974607e-07, 5.84800000000274e-06, 4.859999999974607e-07, 4.194000000002501e-06, 4.859999999974607e-07, 8.250000000001312e-06, 4.860000000009301e-07, 8.667000000000397e-06, 4.859999999974607e-07, 8.250000000001312e-06, 4.860000000009301e-07, 7.6109999999976474e-06, 5.420000000026792e-07, 6.430999999997716e-06, 4.860000000009301e-07, 5.027000000001197e-06, 4.869999999969343e-07, 4.180000000002931e-06, 5.419999999992098e-07, 8.930000000000743e-06, 4.859999999974607e-07, 7.723000000001146e-06, 4.860000000009301e-07, 5.527999999997701e-06, 5.410000000032056e-07, 5.9589999999998255e-06, 4.7199999999789077e-07, 4.778000000000421e-06, 5.409999999997361e-07, 1.0070000000000912e-05, 5.409999999997361e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 4.903000000000546e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:28.289" endtime="20201110 08:36:28.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.284" endtime="20201110 08:36:28.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:28.298" level="INFO">${RESULT} = [{'time': 0.018010889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018018125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:28.294" endtime="20201110 08:36:28.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:28.312" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:28.299" endtime="20201110 08:36:28.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.317" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:28.316" endtime="20201110 08:36:28.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.320" level="INFO">VALUE: [5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.869999999969343e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.410000000032056e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201110 08:36:28.318" endtime="20201110 08:36:28.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.313" endtime="20201110 08:36:28.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.323" endtime="20201110 08:36:28.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:28.326" endtime="20201110 08:36:28.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.325" endtime="20201110 08:36:28.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.321" endtime="20201110 08:36:28.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.910" endtime="20201110 08:36:28.347"></status>
</kw>
<msg timestamp="20201110 08:36:28.347" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.355" endtime="20201110 08:36:28.373"></status>
</kw>
<msg timestamp="20201110 08:36:28.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:28.354" endtime="20201110 08:36:28.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.376" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:28.374" endtime="20201110 08:36:28.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.377" endtime="20201110 08:36:28.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.351" endtime="20201110 08:36:28.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.349" endtime="20201110 08:36:28.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.386" endtime="20201110 08:36:28.691"></status>
</kw>
<msg timestamp="20201110 08:36:28.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021830111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:28.385" endtime="20201110 08:36:28.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021830111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:28.695" endtime="20201110 08:36:28.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.704" endtime="20201110 08:36:28.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.382" endtime="20201110 08:36:28.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.380" endtime="20201110 08:36:28.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.711" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:28.710" endtime="20201110 08:36:28.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.716" level="INFO">VALUE: [{'time': 0.021830111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021836889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.236000000003211e-06, 'source_diff': 6.236000000003211e-06}, {'time': 0.021837361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021844778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.021845264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021854639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.021855181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.021861917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.021862458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021872319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.021872806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021879889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.021880431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021887611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180000000002462e-06, 'source_diff': 7.180000000002462e-06}, {'time': 0.021888083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021893097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.021893639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021900375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.021900861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021908889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.021909431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021914708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277000000001447e-06, 'source_diff': 5.277000000001447e-06}, {'time': 0.02191525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021922306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.021922847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.021930097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.021930639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021936014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.021936556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021944333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.021944875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021949111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.021949653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021956597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.021957139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021966375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999999273e-06, 'source_diff': 9.235999999999273e-06}, {'time': 0.021966861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021975889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.021976361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021984764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.021985306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021992361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.021992903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022002333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.022002875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022009819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.943999999998313e-06, 'source_diff': 6.943999999998313e-06}, {'time': 0.022010361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022015847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486000000002461e-06, 'source_diff': 5.486000000002461e-06}, {'time': 0.022016389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022022514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.022023, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022028333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.022028819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022037361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.541999999996802e-06, 'source_diff': 8.541999999996802e-06}, {'time': 0.022037903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022044236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.022044722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022049736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.022050222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022054194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.022054736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022063347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000002117e-06, 'source_diff': 8.611000000002117e-06}, {'time': 0.022063889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022071056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1669999999988965e-06, 'source_diff': 7.1669999999988965e-06}, {'time': 0.022071542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022080833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.022081375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.02209, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.022090542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022097667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.022098139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022102292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.022102833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022109375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.542000000001741e-06, 'source_diff': 6.542000000001741e-06}, {'time': 0.022109917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022120306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.022120847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022126403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.022126875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022131042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.022131528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022135389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.022135931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022142458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.022143, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022151514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.022152, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0221595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.499999999997092e-06, 'source_diff': 7.499999999997092e-06}, {'time': 0.022160042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022163972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.022164514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.022168694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.022169167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022178431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999998412e-06, 'source_diff': 9.263999999998412e-06}, {'time': 0.022178917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022183736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.022184222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022193181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958999999999356e-06, 'source_diff': 8.958999999999356e-06}, {'time': 0.022193722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:28.712" endtime="20201110 08:36:28.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.707" endtime="20201110 08:36:28.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:28.745" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:28.719" endtime="20201110 08:36:28.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.749" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:28.748" endtime="20201110 08:36:28.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.753" level="INFO">VALUE: {'eventdiff': [0, 5.419999999992098e-07, 6.236000000003211e-06, 4.7199999999789077e-07, 7.4169999999991465e-06, 4.860000000009301e-07, 9.374999999998967e-06, 5.420000000026792e-07, 6.736000000000242e-06, 5.409999999997361e-07, 9.860999999999898e-06, 4.870000000004038e-07, 7.0829999999980076e-06, 5.419999999992098e-07, 7.180000000002462e-06, 4.7199999999789077e-07, 5.014000000001101e-06, 5.419999999992098e-07, 6.736000000000242e-06, 4.860000000009301e-07, 8.028000000000202e-06, 5.419999999992098e-07, 5.277000000001447e-06, 5.419999999992098e-07, 7.055999999998341e-06, 5.409999999997361e-07, 7.250000000000312e-06, 5.419999999992098e-07, 5.375000000001906e-06, 5.419999999992098e-07, 7.777000000000478e-06, 5.419999999992098e-07, 4.236000000001211e-06, 5.419999999992098e-07, 6.944000000001782e-06, 5.419999999992098e-07, 9.235999999999273e-06, 4.860000000009301e-07, 9.027999999997732e-06, 4.720000000013602e-07, 8.403000000000577e-06, 5.419999999992098e-07, 7.054999999998868e-06, 5.420000000026792e-07, 9.429999999997773e-06, 5.420000000026792e-07, 6.943999999998313e-06, 5.419999999992098e-07, 5.486000000002461e-06, 5.419999999992098e-07, 6.124999999999187e-06, 4.860000000009301e-07, 5.332999999999727e-06, 4.860000000009301e-07, 8.541999999996802e-06, 5.420000000026792e-07, 6.3329999999972575e-06, 4.860000000009301e-07, 5.014000000001101e-06, 4.860000000009301e-07, 3.971999999997922e-06, 5.419999999992098e-07, 8.611000000002117e-06, 5.419999999992098e-07, 7.1669999999988965e-06, 4.860000000009301e-07, 9.291000000001548e-06, 5.419999999992098e-07, 8.624999999998217e-06, 5.420000000026792e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 4.152999999999796e-06, 5.409999999997361e-07, 6.542000000001741e-06, 5.419999999992098e-07, 1.0388999999999537e-05, 5.409999999997361e-07, 5.556000000000311e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.860000000009301e-07, 3.8609999999973665e-06, 5.420000000026792e-07, 6.526999999999228e-06, 5.419999999992098e-07, 8.514000000001132e-06, 4.860000000009301e-07, 7.499999999997092e-06, 5.420000000026792e-07, 3.929999999999212e-06, 5.419999999992098e-07, 4.179999999999462e-06, 4.7300000000083386e-07, 9.263999999998412e-06, 4.860000000009301e-07, 4.818999999999657e-06, 4.860000000009301e-07, 8.958999999999356e-06, 5.409999999997361e-07], 'time': [0.021830111, 0.021830653, 0.021836889, 0.021837361, 0.021844778, 0.021845264, 0.021854639, 0.021855181, 0.021861917, 0.021862458, 0.021872319, 0.021872806, 0.021879889, 0.021880431, 0.021887611, 0.021888083, 0.021893097, 0.021893639, 0.021900375, 0.021900861, 0.021908889, 0.021909431, 0.021914708, 0.02191525, 0.021922306, 0.021922847, 0.021930097, 0.021930639, 0.021936014, 0.021936556, 0.021944333, 0.021944875, 0.021949111, 0.021949653, 0.021956597, 0.021957139, 0.021966375, 0.021966861, 0.021975889, 0.021976361, 0.021984764, 0.021985306, 0.021992361, 0.021992903, 0.022002333, 0.022002875, 0.022009819, 0.022010361, 0.022015847, 0.022016389, 0.022022514, 0.022023, 0.022028333, 0.022028819, 0.022037361, 0.022037903, 0.022044236, 0.022044722, 0.022049736, 0.022050222, 0.022054194, 0.022054736, 0.022063347, 0.022063889, 0.022071056, 0.022071542, 0.022080833, 0.022081375, 0.02209, 0.022090542, 0.022097667, 0.022098139, 0.022102292, 0.022102833, 0.022109375, 0.022109917, 0.022120306, 0.022120847, 0.022126403, 0.022126875, 0.022131042, 0.022131528, 0.022135389, 0.022135931, 0.022142458, 0.022143, 0.022151514, 0.022152, 0.0221595, 0.022160042, 0.022163972, 0.022164514, 0.022168694, 0.022169167, 0.022178431, 0.022178917, 0.022183736, 0.022184222, 0.022193181, 0.022193722], 'sourcesource_diff': [0, 5.419999999992098e-07, 6.236000000003211e-06, 4.7199999999789077e-07, 7.4169999999991465e-06, 4.860000000009301e-07, 9.374999999998967e-06, 5.420000000026792e-07, 6.736000000000242e-06, 5.409999999997361e-07, 9.860999999999898e-06, 4.870000000004038e-07, 7.0829999999980076e-06, 5.419999999992098e-07, 7.180000000002462e-06, 4.7199999999789077e-07, 5.014000000001101e-06, 5.419999999992098e-07, 6.736000000000242e-06, 4.860000000009301e-07, 8.028000000000202e-06, 5.419999999992098e-07, 5.277000000001447e-06, 5.419999999992098e-07, 7.055999999998341e-06, 5.409999999997361e-07, 7.250000000000312e-06, 5.419999999992098e-07, 5.375000000001906e-06, 5.419999999992098e-07, 7.777000000000478e-06, 5.419999999992098e-07, 4.236000000001211e-06, 5.419999999992098e-07, 6.944000000001782e-06, 5.419999999992098e-07, 9.235999999999273e-06, 4.860000000009301e-07, 9.027999999997732e-06, 4.720000000013602e-07, 8.403000000000577e-06, 5.419999999992098e-07, 7.054999999998868e-06, 5.420000000026792e-07, 9.429999999997773e-06, 5.420000000026792e-07, 6.943999999998313e-06, 5.419999999992098e-07, 5.486000000002461e-06, 5.419999999992098e-07, 6.124999999999187e-06, 4.860000000009301e-07, 5.332999999999727e-06, 4.860000000009301e-07, 8.541999999996802e-06, 5.420000000026792e-07, 6.3329999999972575e-06, 4.860000000009301e-07, 5.014000000001101e-06, 4.860000000009301e-07, 3.971999999997922e-06, 5.419999999992098e-07, 8.611000000002117e-06, 5.419999999992098e-07, 7.1669999999988965e-06, 4.860000000009301e-07, 9.291000000001548e-06, 5.419999999992098e-07, 8.624999999998217e-06, 5.420000000026792e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 4.152999999999796e-06, 5.409999999997361e-07, 6.542000000001741e-06, 5.419999999992098e-07, 1.0388999999999537e-05, 5.409999999997361e-07, 5.556000000000311e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.860000000009301e-07, 3.8609999999973665e-06, 5.420000000026792e-07, 6.526999999999228e-06, 5.419999999992098e-07, 8.514000000001132e-06, 4.860000000009301e-07, 7.499999999997092e-06, 5.420000000026792e-07, 3.929999999999212e-06, 5.419999999992098e-07, 4.179999999999462e-06, 4.7300000000083386e-07, 9.263999999998412e-06, 4.860000000009301e-07, 4.818999999999657e-06, 4.860000000009301e-07, 8.958999999999356e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:28.750" endtime="20201110 08:36:28.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.746" endtime="20201110 08:36:28.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:28.759" level="INFO">${RESULT} = [{'time': 0.021830653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021837361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:28.755" endtime="20201110 08:36:28.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:28.773" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:28.760" endtime="20201110 08:36:28.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.778" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:28.777" endtime="20201110 08:36:28.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.780" level="INFO">VALUE: [5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201110 08:36:28.779" endtime="20201110 08:36:28.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.774" endtime="20201110 08:36:28.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.783" endtime="20201110 08:36:28.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:28.787" endtime="20201110 08:36:28.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.785" endtime="20201110 08:36:28.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.782" endtime="20201110 08:36:28.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.348" endtime="20201110 08:36:28.808"></status>
</kw>
<msg timestamp="20201110 08:36:28.808" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.816" endtime="20201110 08:36:28.829"></status>
</kw>
<msg timestamp="20201110 08:36:28.830" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:28.815" endtime="20201110 08:36:28.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.832" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:28.831" endtime="20201110 08:36:28.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.833" endtime="20201110 08:36:28.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.812" endtime="20201110 08:36:28.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.810" endtime="20201110 08:36:28.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.844" endtime="20201110 08:36:29.129"></status>
</kw>
<msg timestamp="20201110 08:36:29.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018325014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018325556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:28.842" endtime="20201110 08:36:29.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018325014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018325556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:29.133" endtime="20201110 08:36:29.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.142" endtime="20201110 08:36:29.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.839" endtime="20201110 08:36:29.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.837" endtime="20201110 08:36:29.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.149" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:29.147" endtime="20201110 08:36:29.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.154" level="INFO">VALUE: [{'time': 0.018325014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018325556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018335736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.018336222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018344667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.444999999999286e-06, 'source_diff': 8.444999999999286e-06}, {'time': 0.018345208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018355597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0389000000003007e-05, 'source_diff': 1.0389000000003007e-05}, {'time': 0.018356069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018363472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.018364014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018370986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9719999999974525e-06, 'source_diff': 6.9719999999974525e-06}, {'time': 0.018371458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018381778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.018382319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018389806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4870000000004655e-06, 'source_diff': 7.4870000000004655e-06}, {'time': 0.018390292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018395722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.018396264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018400306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.018400847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018407806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958999999997356e-06, 'source_diff': 6.958999999997356e-06}, {'time': 0.018408347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018415514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.018416056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018421042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018421528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018429681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018430222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018439486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.018439958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018444458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.018445, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018453083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.018453625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018460042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416999999998146e-06, 'source_diff': 6.416999999998146e-06}, {'time': 0.018460583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018470236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.018470722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018481056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.018481542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018491958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0415999999999204e-05, 'source_diff': 1.0415999999999204e-05}, {'time': 0.018492444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018502778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.01850325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018512528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.018513069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018519792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7230000000001455e-06, 'source_diff': 6.7230000000001455e-06}, {'time': 0.018520333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018527097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.018527569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018537042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.472999999999426e-06, 'source_diff': 9.472999999999426e-06}, {'time': 0.018537583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.0185465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000000647e-06, 'source_diff': 8.917000000000647e-06}, {'time': 0.018547042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018555444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402000000001103e-06, 'source_diff': 8.402000000001103e-06}, {'time': 0.018555986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018565444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458000000000383e-06, 'source_diff': 9.458000000000383e-06}, {'time': 0.018565931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018573236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.018573778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018579903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.018580444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.018586278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.018586764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018595125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.018595611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018602708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.01860325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018610542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.018611028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018614917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018615403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018619486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.018620028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018624278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.018624764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018629778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.018630319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018640167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847999999999801e-06, 'source_diff': 9.847999999999801e-06}, {'time': 0.018640708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018646819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.018647361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018651306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.018651792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018661264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999999953e-06, 'source_diff': 9.471999999999953e-06}, {'time': 0.018661806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018669375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.018669917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018673861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.018674347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018678236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018678708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0186885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.018689042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018698375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018698917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018705972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055000000002337e-06, 'source_diff': 7.055000000002337e-06}, {'time': 0.018706458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018712833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.018713319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:29.150" endtime="20201110 08:36:29.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.145" endtime="20201110 08:36:29.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:29.182" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:29.156" endtime="20201110 08:36:29.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.186" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:29.185" endtime="20201110 08:36:29.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.190" level="INFO">VALUE: {'eventdiff': [0, 5.419999999992098e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 8.444999999999286e-06, 5.409999999997361e-07, 1.0389000000003007e-05, 4.7199999999789077e-07, 7.402999999999577e-06, 5.420000000026792e-07, 6.9719999999974525e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 7.4870000000004655e-06, 4.859999999974607e-07, 5.430000000000712e-06, 5.419999999992098e-07, 4.04200000000271e-06, 5.409999999997361e-07, 6.958999999997356e-06, 5.409999999997361e-07, 7.167000000002366e-06, 5.419999999992098e-07, 4.985999999998492e-06, 4.860000000009301e-07, 8.153000000000327e-06, 5.409999999997361e-07, 9.264000000001882e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 5.419999999992098e-07, 8.082999999999008e-06, 5.420000000026792e-07, 6.416999999998146e-06, 5.409999999997361e-07, 9.653000000001827e-06, 4.859999999974607e-07, 1.0334000000000731e-05, 4.860000000009301e-07, 1.0415999999999204e-05, 4.860000000009301e-07, 1.0334000000000731e-05, 4.7199999999789077e-07, 9.278000000001452e-06, 5.409999999997361e-07, 6.7230000000001455e-06, 5.409999999997361e-07, 6.763999999999382e-06, 4.720000000013602e-07, 9.472999999999426e-06, 5.409999999997361e-07, 8.917000000000647e-06, 5.419999999992098e-07, 8.402000000001103e-06, 5.419999999992098e-07, 9.458000000000383e-06, 4.870000000004038e-07, 7.304999999999118e-06, 5.419999999992098e-07, 6.124999999999187e-06, 5.410000000032056e-07, 5.8339999999997005e-06, 4.859999999974607e-07, 8.361000000001867e-06, 4.860000000009301e-07, 7.0969999999975775e-06, 5.420000000026792e-07, 7.2919999999990215e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.859999999974607e-07, 4.083000000001946e-06, 5.419999999992098e-07, 4.250000000000781e-06, 4.859999999974607e-07, 5.014000000001101e-06, 5.409999999997361e-07, 9.847999999999801e-06, 5.409999999997361e-07, 6.110999999999617e-06, 5.420000000026792e-07, 3.9449999999982555e-06, 4.860000000009301e-07, 9.471999999999953e-06, 5.419999999992098e-07, 7.568999999998938e-06, 5.420000000026792e-07, 3.943999999998782e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 9.792000000001522e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 7.055000000002337e-06, 4.859999999974607e-07, 6.375000000002906e-06, 4.859999999974607e-07], 'time': [0.018325014, 0.018325556, 0.018335736, 0.018336222, 0.018344667, 0.018345208, 0.018355597, 0.018356069, 0.018363472, 0.018364014, 0.018370986, 0.018371458, 0.018381778, 0.018382319, 0.018389806, 0.018390292, 0.018395722, 0.018396264, 0.018400306, 0.018400847, 0.018407806, 0.018408347, 0.018415514, 0.018416056, 0.018421042, 0.018421528, 0.018429681, 0.018430222, 0.018439486, 0.018439958, 0.018444458, 0.018445, 0.018453083, 0.018453625, 0.018460042, 0.018460583, 0.018470236, 0.018470722, 0.018481056, 0.018481542, 0.018491958, 0.018492444, 0.018502778, 0.01850325, 0.018512528, 0.018513069, 0.018519792, 0.018520333, 0.018527097, 0.018527569, 0.018537042, 0.018537583, 0.0185465, 0.018547042, 0.018555444, 0.018555986, 0.018565444, 0.018565931, 0.018573236, 0.018573778, 0.018579903, 0.018580444, 0.018586278, 0.018586764, 0.018595125, 0.018595611, 0.018602708, 0.01860325, 0.018610542, 0.018611028, 0.018614917, 0.018615403, 0.018619486, 0.018620028, 0.018624278, 0.018624764, 0.018629778, 0.018630319, 0.018640167, 0.018640708, 0.018646819, 0.018647361, 0.018651306, 0.018651792, 0.018661264, 0.018661806, 0.018669375, 0.018669917, 0.018673861, 0.018674347, 0.018678236, 0.018678708, 0.0186885, 0.018689042, 0.018698375, 0.018698917, 0.018705972, 0.018706458, 0.018712833, 0.018713319], 'sourcesource_diff': [0, 5.419999999992098e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 8.444999999999286e-06, 5.409999999997361e-07, 1.0389000000003007e-05, 4.7199999999789077e-07, 7.402999999999577e-06, 5.420000000026792e-07, 6.9719999999974525e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 7.4870000000004655e-06, 4.859999999974607e-07, 5.430000000000712e-06, 5.419999999992098e-07, 4.04200000000271e-06, 5.409999999997361e-07, 6.958999999997356e-06, 5.409999999997361e-07, 7.167000000002366e-06, 5.419999999992098e-07, 4.985999999998492e-06, 4.860000000009301e-07, 8.153000000000327e-06, 5.409999999997361e-07, 9.264000000001882e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 5.419999999992098e-07, 8.082999999999008e-06, 5.420000000026792e-07, 6.416999999998146e-06, 5.409999999997361e-07, 9.653000000001827e-06, 4.859999999974607e-07, 1.0334000000000731e-05, 4.860000000009301e-07, 1.0415999999999204e-05, 4.860000000009301e-07, 1.0334000000000731e-05, 4.7199999999789077e-07, 9.278000000001452e-06, 5.409999999997361e-07, 6.7230000000001455e-06, 5.409999999997361e-07, 6.763999999999382e-06, 4.720000000013602e-07, 9.472999999999426e-06, 5.409999999997361e-07, 8.917000000000647e-06, 5.419999999992098e-07, 8.402000000001103e-06, 5.419999999992098e-07, 9.458000000000383e-06, 4.870000000004038e-07, 7.304999999999118e-06, 5.419999999992098e-07, 6.124999999999187e-06, 5.410000000032056e-07, 5.8339999999997005e-06, 4.859999999974607e-07, 8.361000000001867e-06, 4.860000000009301e-07, 7.0969999999975775e-06, 5.420000000026792e-07, 7.2919999999990215e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.859999999974607e-07, 4.083000000001946e-06, 5.419999999992098e-07, 4.250000000000781e-06, 4.859999999974607e-07, 5.014000000001101e-06, 5.409999999997361e-07, 9.847999999999801e-06, 5.409999999997361e-07, 6.110999999999617e-06, 5.420000000026792e-07, 3.9449999999982555e-06, 4.860000000009301e-07, 9.471999999999953e-06, 5.419999999992098e-07, 7.568999999998938e-06, 5.420000000026792e-07, 3.943999999998782e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 9.792000000001522e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 7.055000000002337e-06, 4.859999999974607e-07, 6.375000000002906e-06, 4.859999999974607e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:29.187" endtime="20201110 08:36:29.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.182" endtime="20201110 08:36:29.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:29.196" level="INFO">${RESULT} = [{'time': 0.018325556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018336222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:29.192" endtime="20201110 08:36:29.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:29.211" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:29.197" endtime="20201110 08:36:29.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.215" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:29.214" endtime="20201110 08:36:29.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.218" level="INFO">VALUE: [5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.410000000032056e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201110 08:36:29.216" endtime="20201110 08:36:29.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.212" endtime="20201110 08:36:29.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.221" endtime="20201110 08:36:29.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:29.225" endtime="20201110 08:36:29.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.223" endtime="20201110 08:36:29.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.219" endtime="20201110 08:36:29.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.809" endtime="20201110 08:36:29.245"></status>
</kw>
<msg timestamp="20201110 08:36:29.246" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.254" endtime="20201110 08:36:29.272"></status>
</kw>
<msg timestamp="20201110 08:36:29.272" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:29.252" endtime="20201110 08:36:29.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.275" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:29.273" endtime="20201110 08:36:29.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.276" endtime="20201110 08:36:29.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.249" endtime="20201110 08:36:29.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.247" endtime="20201110 08:36:29.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.285" endtime="20201110 08:36:29.572"></status>
</kw>
<msg timestamp="20201110 08:36:29.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022973097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:29.284" endtime="20201110 08:36:29.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022973097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:29.577" endtime="20201110 08:36:29.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.586" endtime="20201110 08:36:29.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.281" endtime="20201110 08:36:29.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.279" endtime="20201110 08:36:29.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.592" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:29.591" endtime="20201110 08:36:29.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.597" level="INFO">VALUE: [{'time': 0.022972625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022973097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022981111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.013999999997162e-06, 'source_diff': 8.013999999997162e-06}, {'time': 0.022981653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.022991292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.022991833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023000236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.023000778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023007833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.023008319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023013875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.023014347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02302425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.023024792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023034972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000001993e-05, 'source_diff': 1.0180000000001993e-05}, {'time': 0.023035458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023040667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.023041208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.02304525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.023045792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023050764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.02305125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023061153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.903000000002077e-06, 'source_diff': 9.903000000002077e-06}, {'time': 0.023061694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023067389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.023067931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023077056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.023077597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023084222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.023084764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023090153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3889999999980065e-06, 'source_diff': 5.3889999999980065e-06}, {'time': 0.023090694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023095667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.973000000001865e-06, 'source_diff': 4.973000000001865e-06}, {'time': 0.023096208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023100125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.023100667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023107097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430000000001712e-06, 'source_diff': 6.430000000001712e-06}, {'time': 0.023107639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023114597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.023115083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023121028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.944999999996786e-06, 'source_diff': 5.944999999996786e-06}, {'time': 0.023121569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.023131847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999998982e-05, 'source_diff': 1.0277999999998982e-05}, {'time': 0.023132333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023136236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.023136708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023144722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.023145264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023149194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.930000000002681e-06, 'source_diff': 3.930000000002681e-06}, {'time': 0.023149736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023159458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.023159931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023164264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.023164806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023173431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.023173917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023179236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.023179778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.023183958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.023184431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023194319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888000000003033e-06, 'source_diff': 9.888000000003033e-06}, {'time': 0.023194806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.023199194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.388000000001002e-06, 'source_diff': 4.388000000001002e-06}, {'time': 0.023199736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023206681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.023207222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023215333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.111000000001617e-06, 'source_diff': 8.111000000001617e-06}, {'time': 0.023215875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023220222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.023220764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.023225139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}, {'time': 0.023225625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023234931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.023235403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023239694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.023240236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023248028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.023248569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023258347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777999999998482e-06, 'source_diff': 9.777999999998482e-06}, {'time': 0.023258889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.023264486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.023265028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023272403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.023272875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023279764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.023280306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023286306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.023286847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.023292958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.0232935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.023300333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.023300875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023307194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.023307736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023316681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944999999999786e-06, 'source_diff': 8.944999999999786e-06}, {'time': 0.023317153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023323514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.023324056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.023329653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.023330194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201110 08:36:29.593" endtime="20201110 08:36:29.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.589" endtime="20201110 08:36:29.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:29.626" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:29.600" endtime="20201110 08:36:29.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.630" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:29.629" endtime="20201110 08:36:29.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.634" level="INFO">VALUE: {'eventdiff': [0, 4.720000000013602e-07, 8.013999999997162e-06, 5.420000000026792e-07, 9.638999999998787e-06, 5.409999999997361e-07, 8.403000000000577e-06, 5.419999999992098e-07, 7.054999999998868e-06, 4.860000000009301e-07, 5.556000000000311e-06, 4.720000000013602e-07, 9.902999999998607e-06, 5.419999999992098e-07, 1.0180000000001993e-05, 4.860000000009301e-07, 5.2089999999990755e-06, 5.409999999997361e-07, 4.041999999999241e-06, 5.419999999992098e-07, 4.972000000002391e-06, 4.859999999974607e-07, 9.903000000002077e-06, 5.409999999997361e-07, 5.695000000000006e-06, 5.419999999992098e-07, 9.124999999998717e-06, 5.409999999997361e-07, 6.625000000003156e-06, 5.419999999992098e-07, 5.3889999999980065e-06, 5.409999999997361e-07, 4.973000000001865e-06, 5.409999999997361e-07, 3.916999999999116e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 6.958000000001352e-06, 4.860000000009301e-07, 5.944999999996786e-06, 5.410000000032056e-07, 1.0277999999998982e-05, 4.860000000009301e-07, 3.902999999999546e-06, 4.7199999999789077e-07, 8.014000000000632e-06, 5.419999999992098e-07, 3.930000000002681e-06, 5.419999999992098e-07, 9.722000000000203e-06, 4.7300000000083386e-07, 4.332999999998727e-06, 5.419999999992098e-07, 8.625000000001687e-06, 4.859999999974607e-07, 5.319000000000157e-06, 5.420000000026792e-07, 4.179999999999462e-06, 4.729999999973644e-07, 9.888000000003033e-06, 4.869999999969343e-07, 4.388000000001002e-06, 5.419999999992098e-07, 6.945000000001256e-06, 5.409999999997361e-07, 8.111000000001617e-06, 5.419999999992098e-07, 4.346999999998297e-06, 5.420000000026792e-07, 4.3749999999974365e-06, 4.860000000009301e-07, 9.306000000000592e-06, 4.720000000013602e-07, 4.291000000000017e-06, 5.419999999992098e-07, 7.791999999999522e-06, 5.409999999997361e-07, 9.777999999998482e-06, 5.420000000026792e-07, 5.596999999999547e-06, 5.419999999992098e-07, 7.375000000000437e-06, 4.7199999999789077e-07, 6.889000000002976e-06, 5.419999999992098e-07, 5.999999999999062e-06, 5.409999999997361e-07, 6.110999999999617e-06, 5.420000000026792e-07, 6.8329999999977575e-06, 5.419999999992098e-07, 6.319000000001157e-06, 5.419999999992098e-07, 8.944999999999786e-06, 4.720000000013602e-07, 6.360999999999867e-06, 5.419999999992098e-07, 5.596999999999547e-06, 5.409999999997361e-07], 'time': [0.022972625, 0.022973097, 0.022981111, 0.022981653, 0.022991292, 0.022991833, 0.023000236, 0.023000778, 0.023007833, 0.023008319, 0.023013875, 0.023014347, 0.02302425, 0.023024792, 0.023034972, 0.023035458, 0.023040667, 0.023041208, 0.02304525, 0.023045792, 0.023050764, 0.02305125, 0.023061153, 0.023061694, 0.023067389, 0.023067931, 0.023077056, 0.023077597, 0.023084222, 0.023084764, 0.023090153, 0.023090694, 0.023095667, 0.023096208, 0.023100125, 0.023100667, 0.023107097, 0.023107639, 0.023114597, 0.023115083, 0.023121028, 0.023121569, 0.023131847, 0.023132333, 0.023136236, 0.023136708, 0.023144722, 0.023145264, 0.023149194, 0.023149736, 0.023159458, 0.023159931, 0.023164264, 0.023164806, 0.023173431, 0.023173917, 0.023179236, 0.023179778, 0.023183958, 0.023184431, 0.023194319, 0.023194806, 0.023199194, 0.023199736, 0.023206681, 0.023207222, 0.023215333, 0.023215875, 0.023220222, 0.023220764, 0.023225139, 0.023225625, 0.023234931, 0.023235403, 0.023239694, 0.023240236, 0.023248028, 0.023248569, 0.023258347, 0.023258889, 0.023264486, 0.023265028, 0.023272403, 0.023272875, 0.023279764, 0.023280306, 0.023286306, 0.023286847, 0.023292958, 0.0232935, 0.023300333, 0.023300875, 0.023307194, 0.023307736, 0.023316681, 0.023317153, 0.023323514, 0.023324056, 0.023329653, 0.023330194], 'sourcesource_diff': [0, 4.720000000013602e-07, 8.013999999997162e-06, 5.420000000026792e-07, 9.638999999998787e-06, 5.409999999997361e-07, 8.403000000000577e-06, 5.419999999992098e-07, 7.054999999998868e-06, 4.860000000009301e-07, 5.556000000000311e-06, 4.720000000013602e-07, 9.902999999998607e-06, 5.419999999992098e-07, 1.0180000000001993e-05, 4.860000000009301e-07, 5.2089999999990755e-06, 5.409999999997361e-07, 4.041999999999241e-06, 5.419999999992098e-07, 4.972000000002391e-06, 4.859999999974607e-07, 9.903000000002077e-06, 5.409999999997361e-07, 5.695000000000006e-06, 5.419999999992098e-07, 9.124999999998717e-06, 5.409999999997361e-07, 6.625000000003156e-06, 5.419999999992098e-07, 5.3889999999980065e-06, 5.409999999997361e-07, 4.973000000001865e-06, 5.409999999997361e-07, 3.916999999999116e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 6.958000000001352e-06, 4.860000000009301e-07, 5.944999999996786e-06, 5.410000000032056e-07, 1.0277999999998982e-05, 4.860000000009301e-07, 3.902999999999546e-06, 4.7199999999789077e-07, 8.014000000000632e-06, 5.419999999992098e-07, 3.930000000002681e-06, 5.419999999992098e-07, 9.722000000000203e-06, 4.7300000000083386e-07, 4.332999999998727e-06, 5.419999999992098e-07, 8.625000000001687e-06, 4.859999999974607e-07, 5.319000000000157e-06, 5.420000000026792e-07, 4.179999999999462e-06, 4.729999999973644e-07, 9.888000000003033e-06, 4.869999999969343e-07, 4.388000000001002e-06, 5.419999999992098e-07, 6.945000000001256e-06, 5.409999999997361e-07, 8.111000000001617e-06, 5.419999999992098e-07, 4.346999999998297e-06, 5.420000000026792e-07, 4.3749999999974365e-06, 4.860000000009301e-07, 9.306000000000592e-06, 4.720000000013602e-07, 4.291000000000017e-06, 5.419999999992098e-07, 7.791999999999522e-06, 5.409999999997361e-07, 9.777999999998482e-06, 5.420000000026792e-07, 5.596999999999547e-06, 5.419999999992098e-07, 7.375000000000437e-06, 4.7199999999789077e-07, 6.889000000002976e-06, 5.419999999992098e-07, 5.999999999999062e-06, 5.409999999997361e-07, 6.110999999999617e-06, 5.420000000026792e-07, 6.8329999999977575e-06, 5.419999999992098e-07, 6.319000000001157e-06, 5.419999999992098e-07, 8.944999999999786e-06, 4.720000000013602e-07, 6.360999999999867e-06, 5.419999999992098e-07, 5.596999999999547e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201110 08:36:29.631" endtime="20201110 08:36:29.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.627" endtime="20201110 08:36:29.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:29.640" level="INFO">${RESULT} = [{'time': 0.022973097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022981653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:29.636" endtime="20201110 08:36:29.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:29.661" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:29.641" endtime="20201110 08:36:29.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.668" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:29.667" endtime="20201110 08:36:29.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.673" level="INFO">VALUE: [4.720000000013602e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.410000000032056e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.729999999973644e-07, 4.869999999969343e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201110 08:36:29.671" endtime="20201110 08:36:29.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.663" endtime="20201110 08:36:29.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.678" endtime="20201110 08:36:29.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:29.682" endtime="20201110 08:36:29.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.680" endtime="20201110 08:36:29.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.677" endtime="20201110 08:36:29.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.246" endtime="20201110 08:36:29.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.801" endtime="20201110 08:36:29.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:29.708" endtime="20201110 08:36:29.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.706" endtime="20201110 08:36:29.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.705" endtime="20201110 08:36:29.728"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:20.726" endtime="20201110 08:36:29.728" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:29.735" endtime="20201110 08:36:29.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.734" endtime="20201110 08:36:29.755"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.770" endtime="20201110 08:36:29.790"></status>
</kw>
<msg timestamp="20201110 08:36:29.791" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:29.768" endtime="20201110 08:36:29.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.794" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:29.792" endtime="20201110 08:36:29.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.797" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:29.795" endtime="20201110 08:36:29.797"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:29.765" endtime="20201110 08:36:29.798"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:29.763" endtime="20201110 08:36:29.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.762" endtime="20201110 08:36:29.799"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:29.803" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:29.802" endtime="20201110 08:36:29.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.800" endtime="20201110 08:36:29.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.760" endtime="20201110 08:36:29.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.759" endtime="20201110 08:36:29.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.805" endtime="20201110 08:36:29.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.758" endtime="20201110 08:36:29.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.756" endtime="20201110 08:36:29.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.732" endtime="20201110 08:36:29.807"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:36:29.809" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.817" endtime="20201110 08:36:29.834"></status>
</kw>
<msg timestamp="20201110 08:36:29.835" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:29.816" endtime="20201110 08:36:29.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.837" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:29.836" endtime="20201110 08:36:29.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.838" endtime="20201110 08:36:29.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.813" endtime="20201110 08:36:29.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.811" endtime="20201110 08:36:29.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.849" endtime="20201110 08:36:30.133"></status>
</kw>
<msg timestamp="20201110 08:36:30.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075544389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075549806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:29.846" endtime="20201110 08:36:30.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075544389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075549806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:30.137" endtime="20201110 08:36:30.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.146" endtime="20201110 08:36:30.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.843" endtime="20201110 08:36:30.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.842" endtime="20201110 08:36:30.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:30.153" level="INFO">${RESULT} = [{'time': 0.075549806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416999999993677e-06, 'source_diff': 5.416999999993677e-06}, {'time': 0.075559583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:30.149" endtime="20201110 08:36:30.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:30.168" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:30.154" endtime="20201110 08:36:30.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.173" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:30.171" endtime="20201110 08:36:30.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.175" level="INFO">VALUE: [5.416999999993677e-06, 5.443999999993343e-06, 5.430000000000712e-06, 5.375000000001906e-06, 5.444000000007221e-06, 5.444000000007221e-06, 5.431000000000186e-06, 5.360999999995397e-06, 5.444999999992817e-06, 5.430000000000712e-06, 5.444999999992817e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.4450000000066945e-06, 5.416000000008081e-06, 5.417000000007555e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.375000000001906e-06, 5.444999999992817e-06, 5.415999999994203e-06, 5.417000000007555e-06, 5.431000000000186e-06, 5.443999999993343e-06, 5.444000000007221e-06, 5.4589999999993255e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.444999999992817e-06, 5.403000000001046e-06, 5.416999999993677e-06, 5.416999999993677e-06, 5.457999999999852e-06, 5.416999999993677e-06, 5.5000000000055005e-06, 5.430000000000712e-06, 5.444999999992817e-06, 5.4450000000066945e-06, 5.416999999993677e-06, 5.402999999987168e-06, 5.416999999993677e-06, 5.444000000007221e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.374999999988028e-06, 5.4589999999993255e-06, 5.430999999986308e-06, 5.430000000000712e-06]</msg>
<status status="PASS" starttime="20201110 08:36:30.174" endtime="20201110 08:36:30.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.169" endtime="20201110 08:36:30.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.178" endtime="20201110 08:36:30.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:30.182" endtime="20201110 08:36:30.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.180" endtime="20201110 08:36:30.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.177" endtime="20201110 08:36:30.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.810" endtime="20201110 08:36:30.203"></status>
</kw>
<msg timestamp="20201110 08:36:30.203" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.211" endtime="20201110 08:36:30.227"></status>
</kw>
<msg timestamp="20201110 08:36:30.228" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:30.210" endtime="20201110 08:36:30.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.230" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:30.229" endtime="20201110 08:36:30.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.231" endtime="20201110 08:36:30.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.207" endtime="20201110 08:36:30.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.205" endtime="20201110 08:36:30.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.240" endtime="20201110 08:36:30.528"></status>
</kw>
<msg timestamp="20201110 08:36:30.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020518583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020524028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:30.239" endtime="20201110 08:36:30.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020518583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020524028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:30.532" endtime="20201110 08:36:30.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.541" endtime="20201110 08:36:30.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.236" endtime="20201110 08:36:30.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.234" endtime="20201110 08:36:30.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:30.548" level="INFO">${RESULT} = [{'time': 0.020524028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.020538444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:30.544" endtime="20201110 08:36:30.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:30.562" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:30.549" endtime="20201110 08:36:30.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.567" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:30.565" endtime="20201110 08:36:30.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.569" level="INFO">VALUE: [5.444999999999756e-06, 5.512999999998658e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.500000000002031e-06, 5.500000000002031e-06, 5.444000000000282e-06, 5.528000000001171e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.401999999998103e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.458000000003321e-06, 5.459000000002795e-06, 5.389000000001476e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.444999999999756e-06, 5.375000000001906e-06, 5.471999999999422e-06, 5.402999999997576e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.457999999999852e-06]</msg>
<status status="PASS" starttime="20201110 08:36:30.568" endtime="20201110 08:36:30.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.563" endtime="20201110 08:36:30.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.572" endtime="20201110 08:36:30.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:30.576" endtime="20201110 08:36:30.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.574" endtime="20201110 08:36:30.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.571" endtime="20201110 08:36:30.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.204" endtime="20201110 08:36:30.597"></status>
</kw>
<msg timestamp="20201110 08:36:30.597" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.605" endtime="20201110 08:36:30.628"></status>
</kw>
<msg timestamp="20201110 08:36:30.628" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:30.603" endtime="20201110 08:36:30.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.631" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:30.630" endtime="20201110 08:36:30.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.632" endtime="20201110 08:36:30.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.601" endtime="20201110 08:36:30.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.599" endtime="20201110 08:36:30.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.641" endtime="20201110 08:36:30.927"></status>
</kw>
<msg timestamp="20201110 08:36:30.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023439458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023444903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:30.640" endtime="20201110 08:36:30.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023439458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023444903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:30.931" endtime="20201110 08:36:30.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.939" endtime="20201110 08:36:30.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.637" endtime="20201110 08:36:30.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.635" endtime="20201110 08:36:30.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:30.946" level="INFO">${RESULT} = [{'time': 0.023444903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.023460583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:30.943" endtime="20201110 08:36:30.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:30.960" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:30.947" endtime="20201110 08:36:30.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.964" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:30.963" endtime="20201110 08:36:30.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.966" level="INFO">VALUE: [5.444999999999756e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.5139999999981315e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.416999999997146e-06, 5.444000000000282e-06, 5.416000000001142e-06, 5.471999999999422e-06, 5.374999999998437e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.458000000003321e-06, 5.430000000000712e-06, 5.361000000002336e-06, 5.499999999998562e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.4439999999968125e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.401999999998103e-06, 5.403000000001046e-06, 5.499999999998562e-06, 5.416000000001142e-06, 5.457999999999852e-06, 5.389000000001476e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.389000000001476e-06, 5.431000000000186e-06, 5.417000000000616e-06]</msg>
<status status="PASS" starttime="20201110 08:36:30.965" endtime="20201110 08:36:30.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.960" endtime="20201110 08:36:30.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.969" endtime="20201110 08:36:30.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:30.973" endtime="20201110 08:36:30.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.971" endtime="20201110 08:36:30.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.968" endtime="20201110 08:36:30.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.598" endtime="20201110 08:36:30.993"></status>
</kw>
<msg timestamp="20201110 08:36:30.994" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.001" endtime="20201110 08:36:31.015"></status>
</kw>
<msg timestamp="20201110 08:36:31.016" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:31.000" endtime="20201110 08:36:31.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.018" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:31.017" endtime="20201110 08:36:31.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.019" endtime="20201110 08:36:31.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.997" endtime="20201110 08:36:31.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.996" endtime="20201110 08:36:31.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.028" endtime="20201110 08:36:31.316"></status>
</kw>
<msg timestamp="20201110 08:36:31.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018684264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018689667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:31.027" endtime="20201110 08:36:31.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018684264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018689667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:31.320" endtime="20201110 08:36:31.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.333" endtime="20201110 08:36:31.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.024" endtime="20201110 08:36:31.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.022" endtime="20201110 08:36:31.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:31.340" level="INFO">${RESULT} = [{'time': 0.018689667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.018699111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:31.336" endtime="20201110 08:36:31.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:31.354" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:31.341" endtime="20201110 08:36:31.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.358" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:31.357" endtime="20201110 08:36:31.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.361" level="INFO">VALUE: [5.403000000001046e-06, 5.403000000001046e-06, 5.444999999999756e-06, 5.416999999997146e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.499999999998562e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.4589999999993255e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.402999999997576e-06, 5.431000000000186e-06, 5.429999999997243e-06, 5.389000000001476e-06, 5.445000000003225e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.429999999997243e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.416999999997146e-06, 5.402000000001572e-06, 5.430000000000712e-06, 5.4439999999968125e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.485999999998992e-06, 5.3889999999980065e-06, 5.4439999999968125e-06, 5.457999999999852e-06, 5.416000000001142e-06, 5.472999999998895e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201110 08:36:31.359" endtime="20201110 08:36:31.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.355" endtime="20201110 08:36:31.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.364" endtime="20201110 08:36:31.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:31.368" endtime="20201110 08:36:31.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.366" endtime="20201110 08:36:31.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.362" endtime="20201110 08:36:31.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.994" endtime="20201110 08:36:31.389"></status>
</kw>
<msg timestamp="20201110 08:36:31.389" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.397" endtime="20201110 08:36:31.412"></status>
</kw>
<msg timestamp="20201110 08:36:31.412" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:31.395" endtime="20201110 08:36:31.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.415" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:31.413" endtime="20201110 08:36:31.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.416" endtime="20201110 08:36:31.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.392" endtime="20201110 08:36:31.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.391" endtime="20201110 08:36:31.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.425" endtime="20201110 08:36:31.736"></status>
</kw>
<msg timestamp="20201110 08:36:31.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020549181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:31.423" endtime="20201110 08:36:31.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020549181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:31.741" endtime="20201110 08:36:31.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.749" endtime="20201110 08:36:31.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.421" endtime="20201110 08:36:31.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.419" endtime="20201110 08:36:31.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:31.756" level="INFO">${RESULT} = [{'time': 0.020554611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.020566236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:31.752" endtime="20201110 08:36:31.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:31.770" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:31.757" endtime="20201110 08:36:31.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.775" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:31.774" endtime="20201110 08:36:31.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.777" level="INFO">VALUE: [5.430000000000712e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.472000000002891e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.458000000003321e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.457999999999852e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.429999999997243e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.361000000002336e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.528000000001171e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.388000000002002e-06, 5.444000000000282e-06, 5.486000000002461e-06, 5.444000000000282e-06, 5.459000000002795e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.445000000003225e-06]</msg>
<status status="PASS" starttime="20201110 08:36:31.776" endtime="20201110 08:36:31.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.771" endtime="20201110 08:36:31.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.780" endtime="20201110 08:36:31.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:31.784" endtime="20201110 08:36:31.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.782" endtime="20201110 08:36:31.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.779" endtime="20201110 08:36:31.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.389" endtime="20201110 08:36:31.804"></status>
</kw>
<msg timestamp="20201110 08:36:31.805" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.812" endtime="20201110 08:36:31.829"></status>
</kw>
<msg timestamp="20201110 08:36:31.830" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:31.811" endtime="20201110 08:36:31.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.832" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:31.831" endtime="20201110 08:36:31.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.833" endtime="20201110 08:36:31.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.808" endtime="20201110 08:36:31.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.806" endtime="20201110 08:36:31.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.845" endtime="20201110 08:36:32.133"></status>
</kw>
<msg timestamp="20201110 08:36:32.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021663181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:31.842" endtime="20201110 08:36:32.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021663181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:32.137" endtime="20201110 08:36:32.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.146" endtime="20201110 08:36:32.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.838" endtime="20201110 08:36:32.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.836" endtime="20201110 08:36:32.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:32.153" level="INFO">${RESULT} = [{'time': 0.021663181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.021677806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:32.150" endtime="20201110 08:36:32.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:32.167" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:32.154" endtime="20201110 08:36:32.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.172" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:32.171" endtime="20201110 08:36:32.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.174" level="INFO">VALUE: [5.444999999999756e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.4439999999968125e-06, 5.485999999998992e-06, 5.416000000001142e-06, 5.444000000000282e-06, 5.430999999996716e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.416000000001142e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.472000000002891e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.415999999997673e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.486000000002461e-06, 5.431000000000186e-06, 5.4439999999968125e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.486999999998465e-06, 5.402999999997576e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.429999999997243e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.485999999998992e-06, 5.459000000002795e-06]</msg>
<status status="PASS" starttime="20201110 08:36:32.173" endtime="20201110 08:36:32.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.168" endtime="20201110 08:36:32.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.178" endtime="20201110 08:36:32.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:32.184" endtime="20201110 08:36:32.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.182" endtime="20201110 08:36:32.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.176" endtime="20201110 08:36:32.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.805" endtime="20201110 08:36:32.207"></status>
</kw>
<msg timestamp="20201110 08:36:32.208" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.216" endtime="20201110 08:36:32.231"></status>
</kw>
<msg timestamp="20201110 08:36:32.232" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:32.214" endtime="20201110 08:36:32.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.234" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:32.233" endtime="20201110 08:36:32.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.235" endtime="20201110 08:36:32.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.212" endtime="20201110 08:36:32.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.210" endtime="20201110 08:36:32.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.245" endtime="20201110 08:36:32.554"></status>
</kw>
<msg timestamp="20201110 08:36:32.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:32.243" endtime="20201110 08:36:32.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:32.558" endtime="20201110 08:36:32.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.566" endtime="20201110 08:36:32.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.241" endtime="20201110 08:36:32.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.239" endtime="20201110 08:36:32.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:32.576" level="INFO">${RESULT} = [{'time': 0.022128319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.022137875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:32.571" endtime="20201110 08:36:32.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:32.595" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:32.578" endtime="20201110 08:36:32.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.602" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:32.600" endtime="20201110 08:36:32.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.606" level="INFO">VALUE: [5.360999999998867e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.389000000001476e-06, 5.415999999997673e-06, 5.431000000000186e-06, 5.429999999997243e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.472000000002891e-06, 5.444999999999756e-06, 5.429999999997243e-06, 5.457999999999852e-06, 5.389000000001476e-06, 5.431000000000186e-06, 5.416999999997146e-06, 5.528000000001171e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.445000000003225e-06, 5.403000000001046e-06, 5.459000000002795e-06, 5.417000000000616e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.429999999997243e-06, 5.485999999998992e-06, 5.4439999999968125e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.459000000002795e-06]</msg>
<status status="PASS" starttime="20201110 08:36:32.604" endtime="20201110 08:36:32.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.596" endtime="20201110 08:36:32.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.609" endtime="20201110 08:36:32.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:32.613" endtime="20201110 08:36:32.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.611" endtime="20201110 08:36:32.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.607" endtime="20201110 08:36:32.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.208" endtime="20201110 08:36:32.633"></status>
</kw>
<msg timestamp="20201110 08:36:32.634" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.642" endtime="20201110 08:36:32.659"></status>
</kw>
<msg timestamp="20201110 08:36:32.659" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:32.640" endtime="20201110 08:36:32.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.662" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:32.660" endtime="20201110 08:36:32.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.663" endtime="20201110 08:36:32.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.637" endtime="20201110 08:36:32.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.635" endtime="20201110 08:36:32.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.673" endtime="20201110 08:36:32.958"></status>
</kw>
<msg timestamp="20201110 08:36:32.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021666861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021672236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:32.671" endtime="20201110 08:36:32.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021666861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021672236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:32.962" endtime="20201110 08:36:32.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.970" endtime="20201110 08:36:32.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.668" endtime="20201110 08:36:32.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.666" endtime="20201110 08:36:32.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:32.977" level="INFO">${RESULT} = [{'time': 0.021672236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.021682083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:32.974" endtime="20201110 08:36:32.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:32.991" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:32.978" endtime="20201110 08:36:32.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.996" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:32.995" endtime="20201110 08:36:32.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.998" level="INFO">VALUE: [5.375000000001906e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.4439999999968125e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.458000000003321e-06, 5.402000000001572e-06, 5.430999999996716e-06, 5.389000000001476e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.389000000001476e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.415999999997673e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.374999999998437e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.429999999997243e-06, 5.444999999999756e-06, 5.416000000001142e-06, 5.457999999999852e-06, 5.429999999997243e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.431000000000186e-06]</msg>
<status status="PASS" starttime="20201110 08:36:32.997" endtime="20201110 08:36:32.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.992" endtime="20201110 08:36:32.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.002" endtime="20201110 08:36:33.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:33.005" endtime="20201110 08:36:33.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.003" endtime="20201110 08:36:33.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.000" endtime="20201110 08:36:33.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.634" endtime="20201110 08:36:33.026"></status>
</kw>
<msg timestamp="20201110 08:36:33.026" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.034" endtime="20201110 08:36:33.051"></status>
</kw>
<msg timestamp="20201110 08:36:33.051" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:33.033" endtime="20201110 08:36:33.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.056" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:33.053" endtime="20201110 08:36:33.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.057" endtime="20201110 08:36:33.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.030" endtime="20201110 08:36:33.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.028" endtime="20201110 08:36:33.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.071" endtime="20201110 08:36:33.360"></status>
</kw>
<msg timestamp="20201110 08:36:33.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021059472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:33.070" endtime="20201110 08:36:33.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021059472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:33.364" endtime="20201110 08:36:33.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.373" endtime="20201110 08:36:33.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.066" endtime="20201110 08:36:33.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.063" endtime="20201110 08:36:33.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:33.380" level="INFO">${RESULT} = [{'time': 0.021059472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.021070694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:33.376" endtime="20201110 08:36:33.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:33.395" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:33.381" endtime="20201110 08:36:33.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.400" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:33.398" endtime="20201110 08:36:33.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.402" level="INFO">VALUE: [5.444000000000282e-06, 5.430000000000712e-06, 5.4589999999993255e-06, 5.4589999999993255e-06, 5.514000000001601e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.457999999999852e-06, 5.429999999997243e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.416000000001142e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.402999999997576e-06, 5.403000000001046e-06, 5.499999999998562e-06, 5.4439999999968125e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.430000000000712e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.528000000001171e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.360999999998867e-06, 5.401999999998103e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.375000000001906e-06, 5.444999999999756e-06]</msg>
<status status="PASS" starttime="20201110 08:36:33.401" endtime="20201110 08:36:33.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.396" endtime="20201110 08:36:33.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.405" endtime="20201110 08:36:33.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:33.409" endtime="20201110 08:36:33.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.407" endtime="20201110 08:36:33.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.404" endtime="20201110 08:36:33.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.027" endtime="20201110 08:36:33.430"></status>
</kw>
<msg timestamp="20201110 08:36:33.430" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.439" endtime="20201110 08:36:33.457"></status>
</kw>
<msg timestamp="20201110 08:36:33.457" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:33.437" endtime="20201110 08:36:33.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.460" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:33.458" endtime="20201110 08:36:33.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.461" endtime="20201110 08:36:33.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.434" endtime="20201110 08:36:33.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.432" endtime="20201110 08:36:33.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.470" endtime="20201110 08:36:33.759"></status>
</kw>
<msg timestamp="20201110 08:36:33.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024148972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024154417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:33.468" endtime="20201110 08:36:33.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024148972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024154417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:33.763" endtime="20201110 08:36:33.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.772" endtime="20201110 08:36:33.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.466" endtime="20201110 08:36:33.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.464" endtime="20201110 08:36:33.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:33.779" level="INFO">${RESULT} = [{'time': 0.024154417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.024164611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:33.775" endtime="20201110 08:36:33.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:33.793" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:33.780" endtime="20201110 08:36:33.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.798" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:33.797" endtime="20201110 08:36:33.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.800" level="INFO">VALUE: [5.444999999999756e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.472000000002891e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.360999999998867e-06, 5.444000000000282e-06, 5.416999999997146e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.471999999999422e-06, 5.429999999997243e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.445000000003225e-06, 5.457999999999852e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.485999999998992e-06, 5.430000000000712e-06, 5.458000000003321e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.403000000001046e-06]</msg>
<status status="PASS" starttime="20201110 08:36:33.799" endtime="20201110 08:36:33.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.794" endtime="20201110 08:36:33.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.803" endtime="20201110 08:36:33.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:33.807" endtime="20201110 08:36:33.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.805" endtime="20201110 08:36:33.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.802" endtime="20201110 08:36:33.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.431" endtime="20201110 08:36:33.828"></status>
</kw>
<msg timestamp="20201110 08:36:33.829" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.837" endtime="20201110 08:36:33.856"></status>
</kw>
<msg timestamp="20201110 08:36:33.856" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:33.835" endtime="20201110 08:36:33.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.859" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:33.857" endtime="20201110 08:36:33.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.861" endtime="20201110 08:36:33.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.832" endtime="20201110 08:36:33.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.831" endtime="20201110 08:36:33.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.872" endtime="20201110 08:36:34.157"></status>
</kw>
<msg timestamp="20201110 08:36:34.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022479514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:33.870" endtime="20201110 08:36:34.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022479514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:34.162" endtime="20201110 08:36:34.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.171" endtime="20201110 08:36:34.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.868" endtime="20201110 08:36:34.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.866" endtime="20201110 08:36:34.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:34.178" level="INFO">${RESULT} = [{'time': 0.022479514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.022491153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:34.175" endtime="20201110 08:36:34.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:34.192" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:34.179" endtime="20201110 08:36:34.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.197" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:34.196" endtime="20201110 08:36:34.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.199" level="INFO">VALUE: [5.431000000000186e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.416999999997146e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.375000000001906e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.485999999998992e-06, 5.375000000001906e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.444999999999756e-06, 5.430000000000712e-06, 5.499999999998562e-06, 5.457999999999852e-06, 5.430000000000712e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.445000000003225e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.389000000001476e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.5139999999981315e-06]</msg>
<status status="PASS" starttime="20201110 08:36:34.198" endtime="20201110 08:36:34.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.193" endtime="20201110 08:36:34.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.203" endtime="20201110 08:36:34.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:34.207" endtime="20201110 08:36:34.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.205" endtime="20201110 08:36:34.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.201" endtime="20201110 08:36:34.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.829" endtime="20201110 08:36:34.227"></status>
</kw>
<msg timestamp="20201110 08:36:34.228" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.236" endtime="20201110 08:36:34.252"></status>
</kw>
<msg timestamp="20201110 08:36:34.253" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:34.234" endtime="20201110 08:36:34.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.257" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:34.254" endtime="20201110 08:36:34.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.258" endtime="20201110 08:36:34.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.232" endtime="20201110 08:36:34.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.230" endtime="20201110 08:36:34.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.273" endtime="20201110 08:36:34.563"></status>
</kw>
<msg timestamp="20201110 08:36:34.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020273986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020279417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:34.271" endtime="20201110 08:36:34.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020273986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020279417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:34.567" endtime="20201110 08:36:34.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.576" endtime="20201110 08:36:34.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.267" endtime="20201110 08:36:34.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.265" endtime="20201110 08:36:34.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:34.583" level="INFO">${RESULT} = [{'time': 0.020279417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.020293542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:34.580" endtime="20201110 08:36:34.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:34.597" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:34.584" endtime="20201110 08:36:34.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.602" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:34.601" endtime="20201110 08:36:34.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.604" level="INFO">VALUE: [5.431000000000186e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.3339999999992005e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.375000000001906e-06, 5.403000000001046e-06, 5.415999999997673e-06, 5.5139999999981315e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.4589999999993255e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.429999999997243e-06, 5.415999999997673e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.485999999998992e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.430000000000712e-06, 5.429999999997243e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.416999999997146e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.430000000000712e-06, 5.431000000000186e-06]</msg>
<status status="PASS" starttime="20201110 08:36:34.603" endtime="20201110 08:36:34.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.598" endtime="20201110 08:36:34.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.608" endtime="20201110 08:36:34.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:34.611" endtime="20201110 08:36:34.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.610" endtime="20201110 08:36:34.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.606" endtime="20201110 08:36:34.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.228" endtime="20201110 08:36:34.632"></status>
</kw>
<msg timestamp="20201110 08:36:34.633" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.641" endtime="20201110 08:36:34.657"></status>
</kw>
<msg timestamp="20201110 08:36:34.658" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:34.639" endtime="20201110 08:36:34.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.660" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:34.659" endtime="20201110 08:36:34.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.661" endtime="20201110 08:36:34.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.636" endtime="20201110 08:36:34.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.635" endtime="20201110 08:36:34.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.671" endtime="20201110 08:36:34.959"></status>
</kw>
<msg timestamp="20201110 08:36:34.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:34.669" endtime="20201110 08:36:34.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:34.963" endtime="20201110 08:36:34.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.972" endtime="20201110 08:36:34.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.666" endtime="20201110 08:36:34.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.665" endtime="20201110 08:36:34.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:34.979" level="INFO">${RESULT} = [{'time': 0.022278597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.022288972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:34.975" endtime="20201110 08:36:34.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:34.994" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:34.980" endtime="20201110 08:36:34.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.999" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:34.998" endtime="20201110 08:36:34.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.001" level="INFO">VALUE: [5.457999999999852e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.416999999997146e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.416999999997146e-06, 5.444999999999756e-06, 5.485999999998992e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.499999999998562e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.445000000003225e-06, 5.389000000001476e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.375000000001906e-06, 5.431000000000186e-06, 5.415999999997673e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.444999999999756e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201110 08:36:35.000" endtime="20201110 08:36:35.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.995" endtime="20201110 08:36:35.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.005" endtime="20201110 08:36:35.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:35.009" endtime="20201110 08:36:35.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.007" endtime="20201110 08:36:35.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.003" endtime="20201110 08:36:35.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.633" endtime="20201110 08:36:35.033"></status>
</kw>
<msg timestamp="20201110 08:36:35.033" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.050" endtime="20201110 08:36:35.070"></status>
</kw>
<msg timestamp="20201110 08:36:35.070" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:35.048" endtime="20201110 08:36:35.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.072" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:35.071" endtime="20201110 08:36:35.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.073" endtime="20201110 08:36:35.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.041" endtime="20201110 08:36:35.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.039" endtime="20201110 08:36:35.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.082" endtime="20201110 08:36:35.383"></status>
</kw>
<msg timestamp="20201110 08:36:35.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032161875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032167306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:35.081" endtime="20201110 08:36:35.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032161875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032167306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:35.387" endtime="20201110 08:36:35.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.395" endtime="20201110 08:36:35.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.078" endtime="20201110 08:36:35.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.077" endtime="20201110 08:36:35.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:35.402" level="INFO">${RESULT} = [{'time': 0.032167306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.032176736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:35.398" endtime="20201110 08:36:35.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:35.415" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:35.403" endtime="20201110 08:36:35.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.419" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:35.418" endtime="20201110 08:36:35.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.422" level="INFO">VALUE: [5.431000000000186e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.402000000001572e-06, 5.403000000001046e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.360999999995397e-06, 5.416000000001142e-06, 5.471999999999422e-06, 5.499999999998562e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.429999999993773e-06, 5.499999999998562e-06, 5.444000000000282e-06, 5.402000000001572e-06, 5.417000000000616e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.444999999999756e-06, 5.429999999993773e-06, 5.403000000001046e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.485999999998992e-06, 5.417000000000616e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.416000000001142e-06, 5.415999999994203e-06, 5.485999999998992e-06, 5.431000000000186e-06, 5.415999999994203e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.486999999998465e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.443999999993343e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.375000000001906e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.444999999999756e-06]</msg>
<status status="PASS" starttime="20201110 08:36:35.420" endtime="20201110 08:36:35.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.416" endtime="20201110 08:36:35.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.425" endtime="20201110 08:36:35.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:35.429" endtime="20201110 08:36:35.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.427" endtime="20201110 08:36:35.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.424" endtime="20201110 08:36:35.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.034" endtime="20201110 08:36:35.450"></status>
</kw>
<msg timestamp="20201110 08:36:35.450" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.457" endtime="20201110 08:36:35.472"></status>
</kw>
<msg timestamp="20201110 08:36:35.472" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:35.456" endtime="20201110 08:36:35.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.475" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:35.473" endtime="20201110 08:36:35.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.476" endtime="20201110 08:36:35.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.453" endtime="20201110 08:36:35.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.452" endtime="20201110 08:36:35.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.484" endtime="20201110 08:36:35.769"></status>
</kw>
<msg timestamp="20201110 08:36:35.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018936056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018941444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:35.483" endtime="20201110 08:36:35.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018936056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018941444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:35.773" endtime="20201110 08:36:35.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.782" endtime="20201110 08:36:35.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.480" endtime="20201110 08:36:35.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.479" endtime="20201110 08:36:35.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:35.788" level="INFO">${RESULT} = [{'time': 0.018941444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.388000000002002e-06, 'source_diff': 5.388000000002002e-06}, {'time': 0.018955667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:35.785" endtime="20201110 08:36:35.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:35.802" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:35.789" endtime="20201110 08:36:35.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.806" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:35.805" endtime="20201110 08:36:35.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.808" level="INFO">VALUE: [5.388000000002002e-06, 5.431000000000186e-06, 5.374999999998437e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.444999999999756e-06, 5.445000000003225e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.346999999999297e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.360999999998867e-06, 5.444999999999756e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.472000000002891e-06, 5.360999999998867e-06, 5.431000000000186e-06, 5.415999999997673e-06, 5.429999999997243e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.431000000000186e-06, 5.429999999997243e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.430000000000712e-06, 5.4589999999993255e-06, 5.403000000001046e-06, 5.471999999999422e-06, 5.459000000002795e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201110 08:36:35.807" endtime="20201110 08:36:35.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.803" endtime="20201110 08:36:35.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.812" endtime="20201110 08:36:35.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:35.815" endtime="20201110 08:36:35.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.814" endtime="20201110 08:36:35.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.810" endtime="20201110 08:36:35.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.450" endtime="20201110 08:36:35.836"></status>
</kw>
<msg timestamp="20201110 08:36:35.836" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.844" endtime="20201110 08:36:35.858"></status>
</kw>
<msg timestamp="20201110 08:36:35.859" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:35.842" endtime="20201110 08:36:35.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.861" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:35.860" endtime="20201110 08:36:35.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.862" endtime="20201110 08:36:35.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.840" endtime="20201110 08:36:35.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.838" endtime="20201110 08:36:35.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.872" endtime="20201110 08:36:36.162"></status>
</kw>
<msg timestamp="20201110 08:36:36.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019325292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019330722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:35.870" endtime="20201110 08:36:36.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019325292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019330722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:36.166" endtime="20201110 08:36:36.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.175" endtime="20201110 08:36:36.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.867" endtime="20201110 08:36:36.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.865" endtime="20201110 08:36:36.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:36.181" level="INFO">${RESULT} = [{'time': 0.019330722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.019342778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:36.178" endtime="20201110 08:36:36.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:36.195" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:36.182" endtime="20201110 08:36:36.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.200" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:36.198" endtime="20201110 08:36:36.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.202" level="INFO">VALUE: [5.430000000000712e-06, 5.403000000001046e-06, 5.360999999998867e-06, 5.444999999999756e-06, 5.527999999997701e-06, 5.430000000000712e-06, 5.415999999997673e-06, 5.417000000000616e-06, 5.3889999999980065e-06, 5.444000000000282e-06, 5.374999999998437e-06, 5.389000000001476e-06, 5.444999999999756e-06, 5.458000000003321e-06, 5.444000000000282e-06, 5.402000000001572e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.3889999999980065e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.445000000003225e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.457999999999852e-06, 5.346999999999297e-06, 5.431000000000186e-06, 5.3889999999980065e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.389000000001476e-06, 5.416999999997146e-06, 5.471999999999422e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201110 08:36:36.201" endtime="20201110 08:36:36.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.196" endtime="20201110 08:36:36.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.206" endtime="20201110 08:36:36.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:36.210" endtime="20201110 08:36:36.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.208" endtime="20201110 08:36:36.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.204" endtime="20201110 08:36:36.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.837" endtime="20201110 08:36:36.231"></status>
</kw>
<msg timestamp="20201110 08:36:36.231" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.238" endtime="20201110 08:36:36.256"></status>
</kw>
<msg timestamp="20201110 08:36:36.257" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:36.237" endtime="20201110 08:36:36.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.259" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:36.258" endtime="20201110 08:36:36.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.260" endtime="20201110 08:36:36.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.234" endtime="20201110 08:36:36.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.233" endtime="20201110 08:36:36.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.270" endtime="20201110 08:36:36.555"></status>
</kw>
<msg timestamp="20201110 08:36:36.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021615875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021621347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:36.267" endtime="20201110 08:36:36.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021615875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021621347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:36.559" endtime="20201110 08:36:36.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.567" endtime="20201110 08:36:36.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.265" endtime="20201110 08:36:36.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.263" endtime="20201110 08:36:36.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:36.573" level="INFO">${RESULT} = [{'time': 0.021621347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.021631736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:36.570" endtime="20201110 08:36:36.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:36.588" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:36.574" endtime="20201110 08:36:36.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.593" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:36.592" endtime="20201110 08:36:36.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.595" level="INFO">VALUE: [5.471999999999422e-06, 5.457999999999852e-06, 5.528000000001171e-06, 5.431000000000186e-06, 5.430999999996716e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.499999999998562e-06, 5.416000000001142e-06, 5.416999999997146e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.429999999997243e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.402000000001572e-06, 5.444999999999756e-06, 5.36200000000181e-06, 5.429999999997243e-06, 5.430999999996716e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.416999999997146e-06, 5.403000000001046e-06, 5.4589999999993255e-06, 5.430999999996716e-06, 5.332999999999727e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.445000000003225e-06, 5.402999999997576e-06, 5.444999999999756e-06, 5.430000000000712e-06, 5.429999999997243e-06, 5.486000000002461e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.402999999997576e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.445000000003225e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201110 08:36:36.594" endtime="20201110 08:36:36.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.589" endtime="20201110 08:36:36.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.602" endtime="20201110 08:36:36.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:36.606" endtime="20201110 08:36:36.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.604" endtime="20201110 08:36:36.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.601" endtime="20201110 08:36:36.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.231" endtime="20201110 08:36:36.626"></status>
</kw>
<msg timestamp="20201110 08:36:36.627" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.634" endtime="20201110 08:36:36.653"></status>
</kw>
<msg timestamp="20201110 08:36:36.653" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:36.633" endtime="20201110 08:36:36.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.656" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:36.654" endtime="20201110 08:36:36.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.657" endtime="20201110 08:36:36.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.630" endtime="20201110 08:36:36.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.629" endtime="20201110 08:36:36.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.665" endtime="20201110 08:36:36.950"></status>
</kw>
<msg timestamp="20201110 08:36:36.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:36.664" endtime="20201110 08:36:36.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:36.955" endtime="20201110 08:36:36.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.963" endtime="20201110 08:36:36.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.661" endtime="20201110 08:36:36.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.660" endtime="20201110 08:36:36.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:36.970" level="INFO">${RESULT} = [{'time': 0.022592333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.415999999997673e-06, 'source_diff': 5.415999999997673e-06}, {'time': 0.022604264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:36.966" endtime="20201110 08:36:36.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:36.983" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:36.971" endtime="20201110 08:36:36.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.988" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:36.987" endtime="20201110 08:36:36.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.990" level="INFO">VALUE: [5.415999999997673e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.3889999999980065e-06, 5.431000000000186e-06, 5.389000000001476e-06, 5.4589999999993255e-06, 5.445000000003225e-06, 5.402000000001572e-06, 5.471999999999422e-06, 5.360999999998867e-06, 5.444000000000282e-06, 5.402999999997576e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.389000000001476e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.375000000001906e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.499999999998562e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.416000000001142e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.458000000003321e-06, 5.444999999999756e-06, 5.528000000001171e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.431000000000186e-06]</msg>
<status status="PASS" starttime="20201110 08:36:36.989" endtime="20201110 08:36:36.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.984" endtime="20201110 08:36:36.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.994" endtime="20201110 08:36:36.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:36.997" endtime="20201110 08:36:37.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.995" endtime="20201110 08:36:37.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.992" endtime="20201110 08:36:37.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.627" endtime="20201110 08:36:37.018"></status>
</kw>
<msg timestamp="20201110 08:36:37.018" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.026" endtime="20201110 08:36:37.044"></status>
</kw>
<msg timestamp="20201110 08:36:37.044" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.024" endtime="20201110 08:36:37.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.045" endtime="20201110 08:36:37.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.048" endtime="20201110 08:36:37.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.022" endtime="20201110 08:36:37.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.020" endtime="20201110 08:36:37.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.057" endtime="20201110 08:36:37.348"></status>
</kw>
<msg timestamp="20201110 08:36:37.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023172333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02317775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:37.055" endtime="20201110 08:36:37.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023172333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02317775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:37.352" endtime="20201110 08:36:37.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.361" endtime="20201110 08:36:37.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.053" endtime="20201110 08:36:37.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.051" endtime="20201110 08:36:37.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:37.367" level="INFO">${RESULT} = [{'time': 0.02317775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.023190181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:36:37.364" endtime="20201110 08:36:37.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:37.382" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:37.368" endtime="20201110 08:36:37.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.386" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:37.385" endtime="20201110 08:36:37.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.389" level="INFO">VALUE: [5.417000000000616e-06, 5.514000000001601e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.416000000001142e-06, 5.527000000001697e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.3889999999980065e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.486999999998465e-06, 5.485999999998992e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.403000000001046e-06, 5.500000000002031e-06, 5.387999999998533e-06, 5.416999999997146e-06, 5.472999999998895e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.430999999996716e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.416999999997146e-06, 5.499999999998562e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.500000000002031e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201110 08:36:37.387" endtime="20201110 08:36:37.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.383" endtime="20201110 08:36:37.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.392" endtime="20201110 08:36:37.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:37.396" endtime="20201110 08:36:37.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.394" endtime="20201110 08:36:37.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.391" endtime="20201110 08:36:37.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.019" endtime="20201110 08:36:37.420"></status>
</kw>
<msg timestamp="20201110 08:36:37.421" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.438" endtime="20201110 08:36:37.462"></status>
</kw>
<msg timestamp="20201110 08:36:37.463" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.434" endtime="20201110 08:36:37.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.469" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.466" endtime="20201110 08:36:37.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.471" endtime="20201110 08:36:37.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.429" endtime="20201110 08:36:37.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.425" endtime="20201110 08:36:37.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.490" endtime="20201110 08:36:37.792"></status>
</kw>
<msg timestamp="20201110 08:36:37.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036251389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036256861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:37.487" endtime="20201110 08:36:37.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036251389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036256861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:37.796" endtime="20201110 08:36:37.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.804" endtime="20201110 08:36:37.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.482" endtime="20201110 08:36:37.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.478" endtime="20201110 08:36:37.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:37.811" level="INFO">${RESULT} = [{'time': 0.036256861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036270042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:37.807" endtime="20201110 08:36:37.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:37.825" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:37.812" endtime="20201110 08:36:37.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.829" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:37.828" endtime="20201110 08:36:37.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.831" level="INFO">VALUE: [5.471999999999422e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.459000000006264e-06, 5.402000000001572e-06, 5.402999999994107e-06, 5.346999999995827e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.429999999993773e-06, 5.375000000001906e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.333000000003196e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.429999999993773e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.430999999993247e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.485999999998992e-06, 5.416000000001142e-06, 5.416000000001142e-06, 5.375000000001906e-06, 5.430000000000712e-06]</msg>
<status status="PASS" starttime="20201110 08:36:37.830" endtime="20201110 08:36:37.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.825" endtime="20201110 08:36:37.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.835" endtime="20201110 08:36:37.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:37.838" endtime="20201110 08:36:37.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.837" endtime="20201110 08:36:37.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.833" endtime="20201110 08:36:37.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.422" endtime="20201110 08:36:37.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.808" endtime="20201110 08:36:37.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:37.863" endtime="20201110 08:36:37.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.862" endtime="20201110 08:36:37.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.860" endtime="20201110 08:36:37.883"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:29.730" endtime="20201110 08:36:37.884" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:37.891" endtime="20201110 08:36:37.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.889" endtime="20201110 08:36:37.911"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.923" endtime="20201110 08:36:37.948"></status>
</kw>
<msg timestamp="20201110 08:36:37.948" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.922" endtime="20201110 08:36:37.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.951" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.949" endtime="20201110 08:36:37.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.954" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:37.952" endtime="20201110 08:36:37.954"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:37.919" endtime="20201110 08:36:37.955"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:37.917" endtime="20201110 08:36:37.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.916" endtime="20201110 08:36:37.955"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:37.959" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:37.958" endtime="20201110 08:36:37.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.956" endtime="20201110 08:36:37.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.915" endtime="20201110 08:36:37.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.914" endtime="20201110 08:36:37.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.961" endtime="20201110 08:36:37.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.913" endtime="20201110 08:36:37.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.911" endtime="20201110 08:36:37.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.888" endtime="20201110 08:36:37.963"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.972" endtime="20201110 08:36:37.995"></status>
</kw>
<msg timestamp="20201110 08:36:37.996" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.970" endtime="20201110 08:36:37.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.998" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.997" endtime="20201110 08:36:37.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.999" endtime="20201110 08:36:38.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.968" endtime="20201110 08:36:38.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.966" endtime="20201110 08:36:38.002"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.004" endtime="20201110 08:36:38.006"></status>
</kw>
<msg timestamp="20201110 08:36:38.006" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:36:38.003" endtime="20201110 08:36:38.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.010" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:36:38.009" endtime="20201110 08:36:38.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.012" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:36:38.011" endtime="20201110 08:36:38.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.007" endtime="20201110 08:36:38.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.017" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:36:38.016" endtime="20201110 08:36:38.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.019" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:36:38.018" endtime="20201110 08:36:38.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.013" endtime="20201110 08:36:38.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.026" endtime="20201110 08:36:38.318"></status>
</kw>
<msg timestamp="20201110 08:36:38.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075116, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075134556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:38.024" endtime="20201110 08:36:38.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075116, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075134556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:38.327" endtime="20201110 08:36:38.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.345" endtime="20201110 08:36:38.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.022" endtime="20201110 08:36:38.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.020" endtime="20201110 08:36:38.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:38.359" level="INFO">${RESULT} = [{'time': 0.075134556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8556000000002904e-05, 'source_diff': 1.8556000000002904e-05}, {'time': 0.075166708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:38.352" endtime="20201110 08:36:38.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:38.395" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:38.361" endtime="20201110 08:36:38.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.412" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:36:38.407" endtime="20201110 08:36:38.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.415" level="INFO">VALUE: [1.8556000000002904e-05, 2.2526999999994413e-05, 2.2500000000008624e-05, 2.2542000000000395e-05, 2.2597999999998675e-05, 2.2542000000000395e-05, 2.2514000000001255e-05, 2.2499999999994746e-05, 2.2486000000002115e-05, 2.254100000000092e-05, 2.251300000000178e-05, 2.2583999999992166e-05, 2.2554999999993552e-05, 2.2554999999993552e-05, 2.2527999999993886e-05, 2.2583999999992166e-05, 2.2499999999994746e-05, 2.2514000000001255e-05, 2.255500000000743e-05, 2.2569999999999535e-05, 2.2514000000001255e-05, 2.2528000000007764e-05, 2.2499999999994746e-05, 2.2514000000001255e-05, 2.2486000000002115e-05, 2.2500000000008624e-05, 2.2514000000001255e-05, 2.2542000000000395e-05, 2.2528000000007764e-05, 2.2526999999994413e-05, 2.2582999999992692e-05, 2.2582999999992692e-05, 2.2556000000006904e-05, 2.254100000000092e-05, 2.2486000000002115e-05, 2.2528000000007764e-05, 2.2556000000006904e-05, 2.263900000000485e-05, 2.2526999999994413e-05, 2.2514000000001255e-05, 2.2528000000007764e-05, 2.2514000000001255e-05, 2.2542000000000395e-05, 2.2569999999999535e-05, 2.2569999999999535e-05, 2.2514000000001255e-05, 2.2542000000000395e-05, 2.2527999999993886e-05, 2.2542000000000395e-05, 2.258300000000657e-05]</msg>
<status status="PASS" starttime="20201110 08:36:38.413" endtime="20201110 08:36:38.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.397" endtime="20201110 08:36:38.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.422" endtime="20201110 08:36:38.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:38.426" endtime="20201110 08:36:38.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.425" endtime="20201110 08:36:38.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.420" endtime="20201110 08:36:38.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.964" endtime="20201110 08:36:38.448"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:37.885" endtime="20201110 08:36:38.448" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:38.455" endtime="20201110 08:36:38.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.453" endtime="20201110 08:36:38.475"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.488" endtime="20201110 08:36:38.507"></status>
</kw>
<msg timestamp="20201110 08:36:38.508" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:38.486" endtime="20201110 08:36:38.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:38.509" endtime="20201110 08:36:38.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.513" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:38.511" endtime="20201110 08:36:38.513"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:38.484" endtime="20201110 08:36:38.514"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:38.481" endtime="20201110 08:36:38.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.480" endtime="20201110 08:36:38.515"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:38.519" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:38.518" endtime="20201110 08:36:38.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.516" endtime="20201110 08:36:38.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.479" endtime="20201110 08:36:38.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.479" endtime="20201110 08:36:38.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.520" endtime="20201110 08:36:38.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.477" endtime="20201110 08:36:38.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.475" endtime="20201110 08:36:38.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.452" endtime="20201110 08:36:38.523"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.532" endtime="20201110 08:36:38.603"></status>
</kw>
<msg timestamp="20201110 08:36:38.603" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:38.530" endtime="20201110 08:36:38.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.606" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:38.604" endtime="20201110 08:36:38.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.607" endtime="20201110 08:36:38.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.527" endtime="20201110 08:36:38.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.525" endtime="20201110 08:36:38.609"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.611" endtime="20201110 08:36:38.613"></status>
</kw>
<msg timestamp="20201110 08:36:38.613" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:36:38.610" endtime="20201110 08:36:38.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.617" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:36:38.616" endtime="20201110 08:36:38.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.619" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:36:38.619" endtime="20201110 08:36:38.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.614" endtime="20201110 08:36:38.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.624" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:36:38.623" endtime="20201110 08:36:38.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.626" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:36:38.625" endtime="20201110 08:36:38.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.621" endtime="20201110 08:36:38.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.633" endtime="20201110 08:36:38.925"></status>
</kw>
<msg timestamp="20201110 08:36:38.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069295417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069315819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:38.632" endtime="20201110 08:36:38.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069295417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069315819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:38.929" endtime="20201110 08:36:38.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.937" endtime="20201110 08:36:38.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.629" endtime="20201110 08:36:38.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.627" endtime="20201110 08:36:38.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:38.944" level="INFO">${RESULT} = [{'time': 0.069315819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0402000000002696e-05, 'source_diff': 2.0402000000002696e-05}, {'time': 0.070307153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:38.940" endtime="20201110 08:36:38.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:38.957" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:38.945" endtime="20201110 08:36:38.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.962" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:36:38.961" endtime="20201110 08:36:38.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.965" level="INFO">VALUE: [2.0402000000002696e-05, 2.972199999999592e-05, 2.972199999999592e-05, 2.970900000000276e-05, 2.9764000000001567e-05, 2.9708000000003287e-05, 2.970900000000276e-05, 2.9736000000002427e-05, 2.9666999999997112e-05, 2.9708000000003287e-05, 2.972199999999592e-05, 2.9708000000003287e-05, 2.9708000000003287e-05, 2.969399999999678e-05, 2.969399999999678e-05, 2.9638999999997973e-05, 2.968100000000362e-05, 2.969399999999678e-05, 2.9708999999988883e-05, 2.9708000000003287e-05, 2.9666999999997112e-05, 2.9708000000003287e-05, 2.969500000001013e-05, 2.9708000000003287e-05, 2.970799999998941e-05, 2.9776999999994724e-05, 2.9750000000008936e-05, 2.9708000000003287e-05, 2.9680999999989743e-05, 2.9750000000008936e-05, 2.972199999999592e-05, 2.9722000000009796e-05, 2.970799999998941e-05, 2.9694999999996252e-05, 2.969500000001013e-05, 2.9708000000003287e-05, 2.970900000000276e-05, 2.9722000000009796e-05, 2.97370000000019e-05, 2.9708000000003287e-05, 2.970900000000276e-05, 2.9736000000002427e-05, 2.972199999999592e-05, 2.970900000000276e-05, 2.9749999999995058e-05, 2.9749999999995058e-05, 2.9736000000002427e-05, 2.972199999999592e-05, 2.9736000000002427e-05, 2.969399999999678e-05]</msg>
<status status="PASS" starttime="20201110 08:36:38.963" endtime="20201110 08:36:38.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.959" endtime="20201110 08:36:38.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.968" endtime="20201110 08:36:38.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:38.971" endtime="20201110 08:36:38.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.970" endtime="20201110 08:36:38.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.966" endtime="20201110 08:36:38.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.523" endtime="20201110 08:36:38.994"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:38.450" endtime="20201110 08:36:38.995" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:39.006" endtime="20201110 08:36:39.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.004" endtime="20201110 08:36:39.028"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.042" endtime="20201110 08:36:39.059"></status>
</kw>
<msg timestamp="20201110 08:36:39.060" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.040" endtime="20201110 08:36:39.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.062" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.061" endtime="20201110 08:36:39.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.065" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:39.063" endtime="20201110 08:36:39.066"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:39.037" endtime="20201110 08:36:39.066"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:39.034" endtime="20201110 08:36:39.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.033" endtime="20201110 08:36:39.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:39.072" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:39.071" endtime="20201110 08:36:39.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.068" endtime="20201110 08:36:39.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.032" endtime="20201110 08:36:39.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.032" endtime="20201110 08:36:39.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.074" endtime="20201110 08:36:39.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.030" endtime="20201110 08:36:39.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.029" endtime="20201110 08:36:39.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.002" endtime="20201110 08:36:39.079"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.091" endtime="20201110 08:36:39.265"></status>
</kw>
<msg timestamp="20201110 08:36:39.265" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.089" endtime="20201110 08:36:39.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.268" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.266" endtime="20201110 08:36:39.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.269" endtime="20201110 08:36:39.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.085" endtime="20201110 08:36:39.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.082" endtime="20201110 08:36:39.272"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.274" endtime="20201110 08:36:39.275"></status>
</kw>
<msg timestamp="20201110 08:36:39.276" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:36:39.272" endtime="20201110 08:36:39.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.280" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:36:39.279" endtime="20201110 08:36:39.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.283" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:36:39.282" endtime="20201110 08:36:39.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.276" endtime="20201110 08:36:39.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.290" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:36:39.288" endtime="20201110 08:36:39.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.293" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:36:39.291" endtime="20201110 08:36:39.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.286" endtime="20201110 08:36:39.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.303" endtime="20201110 08:36:39.595"></status>
</kw>
<msg timestamp="20201110 08:36:39.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080130083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080163, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:39.300" endtime="20201110 08:36:39.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080130083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080163, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:39.599" endtime="20201110 08:36:39.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.607" endtime="20201110 08:36:39.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.297" endtime="20201110 08:36:39.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.295" endtime="20201110 08:36:39.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:39.614" level="INFO">${RESULT} = [{'time': 0.080163, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2916999999993424e-05, 'source_diff': 3.2916999999993424e-05}, {'time': 0.083161583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:36:39.611" endtime="20201110 08:36:39.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:39.635" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:39.615" endtime="20201110 08:36:39.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.642" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:36:39.639" endtime="20201110 08:36:39.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.645" level="INFO">VALUE: [3.2916999999993424e-05, 5.004100000000067e-05, 5.006999999999928e-05, 5.000000000000837e-05, 5.004099999998679e-05, 5.006899999999981e-05, 5.005500000000718e-05, 5.008300000000632e-05, 5.009699999999895e-05, 5.005599999999277e-05, 5.006899999999981e-05, 5.005500000000718e-05, 5.005500000000718e-05, 5.0014000000001e-05, 5.005600000000665e-05, 5.005599999999277e-05, 5.008400000000579e-05, 5.012499999998421e-05, 5.005599999999277e-05, 5.002800000000751e-05, 5.008300000000632e-05, 5.0069000000013686e-05, 5.0069999999985404e-05, 5.008300000000632e-05, 5.0069999999985404e-05, 5.013800000000512e-05, 5.004200000000014e-05, 5.008400000000579e-05, 5.004200000000014e-05, 5.008300000000632e-05, 5.009699999999895e-05, 5.004200000000014e-05, 5.005600000002053e-05, 5.006899999998593e-05, 5.004100000000067e-05, 5.004200000000014e-05, 5.006899999998593e-05, 5.0167000000017614e-05, 5.004200000000014e-05, 5.004100000000067e-05, 5.007000000001316e-05, 5.006899999998593e-05, 5.002800000000751e-05, 5.005599999999277e-05, 5.005600000002053e-05, 5.00549999999933e-05, 5.008300000000632e-05, 5.004200000000014e-05, 5.0069000000013686e-05, 5.0125000000011966e-05]</msg>
<status status="PASS" starttime="20201110 08:36:39.644" endtime="20201110 08:36:39.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.635" endtime="20201110 08:36:39.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.649" endtime="20201110 08:36:39.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:39.656" endtime="20201110 08:36:39.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.654" endtime="20201110 08:36:39.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.647" endtime="20201110 08:36:39.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.080" endtime="20201110 08:36:39.677"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:38.998" endtime="20201110 08:36:39.677" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:39.684" endtime="20201110 08:36:39.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.683" endtime="20201110 08:36:39.704"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.719" endtime="20201110 08:36:39.738"></status>
</kw>
<msg timestamp="20201110 08:36:39.738" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.717" endtime="20201110 08:36:39.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.741" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.739" endtime="20201110 08:36:39.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.744" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:39.742" endtime="20201110 08:36:39.745"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:39.714" endtime="20201110 08:36:39.745"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:39.711" endtime="20201110 08:36:39.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.710" endtime="20201110 08:36:39.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:39.750" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:39.749" endtime="20201110 08:36:39.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.747" endtime="20201110 08:36:39.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.709" endtime="20201110 08:36:39.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.708" endtime="20201110 08:36:39.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.752" endtime="20201110 08:36:39.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.707" endtime="20201110 08:36:39.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.705" endtime="20201110 08:36:39.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.681" endtime="20201110 08:36:39.755"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.764" endtime="20201110 08:36:39.787"></status>
</kw>
<msg timestamp="20201110 08:36:39.788" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.762" endtime="20201110 08:36:39.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.790" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.789" endtime="20201110 08:36:39.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.791" endtime="20201110 08:36:39.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.759" endtime="20201110 08:36:39.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.757" endtime="20201110 08:36:39.794"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.796" endtime="20201110 08:36:39.798"></status>
</kw>
<msg timestamp="20201110 08:36:39.799" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:36:39.795" endtime="20201110 08:36:39.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.803" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:36:39.802" endtime="20201110 08:36:39.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.805" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:36:39.804" endtime="20201110 08:36:39.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.799" endtime="20201110 08:36:39.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.810" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:36:39.809" endtime="20201110 08:36:39.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.812" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:36:39.811" endtime="20201110 08:36:39.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.806" endtime="20201110 08:36:39.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.823" endtime="20201110 08:36:40.132"></status>
</kw>
<msg timestamp="20201110 08:36:40.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070314944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070333167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:39.821" endtime="20201110 08:36:40.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070314944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070333167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:40.136" endtime="20201110 08:36:40.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.145" endtime="20201110 08:36:40.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.815" endtime="20201110 08:36:40.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.813" endtime="20201110 08:36:40.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:40.152" level="INFO">${RESULT} = [{'time': 0.070333167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.822299999999777e-05, 'source_diff': 1.822299999999777e-05}, {'time': 0.070375278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:40.148" endtime="20201110 08:36:40.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:40.165" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:40.153" endtime="20201110 08:36:40.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.170" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:36:40.169" endtime="20201110 08:36:40.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.173" level="INFO">VALUE: [1.822299999999777e-05, 1.8181000000005998e-05, 1.8207999999991786e-05, 1.8194000000013033e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.8209000000005138e-05, 1.8193999999999155e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.8166000000000015e-05, 1.8152000000007384e-05, 1.8193999999999155e-05, 1.8180000000006524e-05, 1.813900000000035e-05, 1.8166000000000015e-05, 1.8193999999999155e-05, 1.8069999999995034e-05, 1.8070000000008912e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.8137999999986998e-05, 1.8152000000007384e-05, 1.818099999999212e-05, 1.8166000000000015e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.8221999999998295e-05, 1.8208000000005664e-05, 1.8151999999993507e-05, 1.815299999999298e-05, 1.8193999999999155e-05, 1.8209000000005138e-05, 1.8125000000007718e-05, 1.813900000000035e-05, 1.818099999999212e-05, 1.8180000000006524e-05, 1.8166000000000015e-05, 1.816699999999949e-05, 1.816699999999949e-05, 1.8153000000006858e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.8181000000005998e-05, 1.815299999999298e-05, 1.815299999999298e-05, 1.813900000000035e-05, 1.819499999999863e-05, 1.8209000000005138e-05]</msg>
<status status="PASS" starttime="20201110 08:36:40.171" endtime="20201110 08:36:40.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.166" endtime="20201110 08:36:40.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.176" endtime="20201110 08:36:40.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:40.179" endtime="20201110 08:36:40.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.178" endtime="20201110 08:36:40.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.174" endtime="20201110 08:36:40.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.755" endtime="20201110 08:36:40.200"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:39.679" endtime="20201110 08:36:40.201" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:40.207" endtime="20201110 08:36:40.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.206" endtime="20201110 08:36:40.227"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.241" endtime="20201110 08:36:40.260"></status>
</kw>
<msg timestamp="20201110 08:36:40.261" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:40.240" endtime="20201110 08:36:40.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.263" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:40.262" endtime="20201110 08:36:40.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.267" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:40.264" endtime="20201110 08:36:40.267"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:40.236" endtime="20201110 08:36:40.267"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:40.234" endtime="20201110 08:36:40.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.233" endtime="20201110 08:36:40.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:40.272" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:40.272" endtime="20201110 08:36:40.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.270" endtime="20201110 08:36:40.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.232" endtime="20201110 08:36:40.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.231" endtime="20201110 08:36:40.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.274" endtime="20201110 08:36:40.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.230" endtime="20201110 08:36:40.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.228" endtime="20201110 08:36:40.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.204" endtime="20201110 08:36:40.277"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.285" endtime="20201110 08:36:40.357"></status>
</kw>
<msg timestamp="20201110 08:36:40.358" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:40.283" endtime="20201110 08:36:40.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.360" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:40.359" endtime="20201110 08:36:40.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.361" endtime="20201110 08:36:40.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.281" endtime="20201110 08:36:40.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.279" endtime="20201110 08:36:40.364"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.366" endtime="20201110 08:36:40.367"></status>
</kw>
<msg timestamp="20201110 08:36:40.368" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:36:40.365" endtime="20201110 08:36:40.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.373" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:36:40.372" endtime="20201110 08:36:40.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.375" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:36:40.374" endtime="20201110 08:36:40.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.369" endtime="20201110 08:36:40.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.380" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:36:40.379" endtime="20201110 08:36:40.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.382" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:36:40.381" endtime="20201110 08:36:40.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.376" endtime="20201110 08:36:40.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.390" endtime="20201110 08:36:40.695"></status>
</kw>
<msg timestamp="20201110 08:36:40.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070569833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070599556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:40.387" endtime="20201110 08:36:40.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070569833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070599556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:40.705" endtime="20201110 08:36:40.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.725" endtime="20201110 08:36:40.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.385" endtime="20201110 08:36:40.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.383" endtime="20201110 08:36:40.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:40.740" level="INFO">${RESULT} = [{'time': 0.070599556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9722999999995392e-05, 'source_diff': 2.9722999999995392e-05}, {'time': 0.071606472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:40.733" endtime="20201110 08:36:40.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:40.754" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:40.741" endtime="20201110 08:36:40.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.758" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:36:40.757" endtime="20201110 08:36:40.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.761" level="INFO">VALUE: [2.9722999999995392e-05, 2.9638999999997973e-05, 2.969399999999678e-05, 2.970799999998941e-05, 2.9638999999997973e-05, 2.9638999999997973e-05, 2.9708000000003287e-05, 2.967999999999027e-05, 2.972199999999592e-05, 2.9694999999996252e-05, 2.9708000000003287e-05, 2.969399999999678e-05, 2.9736000000002427e-05, 2.9708000000003287e-05, 2.967999999999027e-05, 2.9722000000009796e-05, 2.9666999999997112e-05, 2.966599999999764e-05, 2.970799999998941e-05, 2.970900000000276e-05, 2.966599999999764e-05, 2.972199999999592e-05, 2.968100000000362e-05, 2.9708000000003287e-05, 2.968100000000362e-05, 2.969399999999678e-05, 2.9749999999995058e-05, 2.9694999999996252e-05, 2.970900000000276e-05, 2.9666999999997112e-05, 2.9764000000001567e-05, 2.9694999999996252e-05, 2.9708000000003287e-05, 2.9736000000002427e-05, 2.969399999999678e-05, 2.966700000001099e-05, 2.9708000000003287e-05, 2.9680000000004148e-05, 2.9749999999995058e-05, 2.9694999999996252e-05, 2.9694999999996252e-05, 2.9680000000004148e-05, 2.9708000000003287e-05, 2.9680000000004148e-05, 2.9666999999997112e-05, 2.9736000000002427e-05, 2.9680000000004148e-05, 2.9722999999995392e-05, 2.9680000000004148e-05, 2.969399999999678e-05]</msg>
<status status="PASS" starttime="20201110 08:36:40.759" endtime="20201110 08:36:40.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.755" endtime="20201110 08:36:40.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.764" endtime="20201110 08:36:40.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:40.767" endtime="20201110 08:36:40.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.766" endtime="20201110 08:36:40.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.762" endtime="20201110 08:36:40.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.277" endtime="20201110 08:36:40.788"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:40.202" endtime="20201110 08:36:40.788" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:40.795" endtime="20201110 08:36:40.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.794" endtime="20201110 08:36:40.815"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.829" endtime="20201110 08:36:40.848"></status>
</kw>
<msg timestamp="20201110 08:36:40.849" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:40.826" endtime="20201110 08:36:40.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:40.850" endtime="20201110 08:36:40.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.854" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:40.852" endtime="20201110 08:36:40.855"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:40.824" endtime="20201110 08:36:40.855"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:40.821" endtime="20201110 08:36:40.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.820" endtime="20201110 08:36:40.856"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:40.860" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:40.859" endtime="20201110 08:36:40.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.857" endtime="20201110 08:36:40.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.819" endtime="20201110 08:36:40.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.819" endtime="20201110 08:36:40.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.862" endtime="20201110 08:36:40.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.817" endtime="20201110 08:36:40.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.816" endtime="20201110 08:36:40.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.792" endtime="20201110 08:36:40.864"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.872" endtime="20201110 08:36:41.045"></status>
</kw>
<msg timestamp="20201110 08:36:41.046" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:40.871" endtime="20201110 08:36:41.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.048" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:41.047" endtime="20201110 08:36:41.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.050" endtime="20201110 08:36:41.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.868" endtime="20201110 08:36:41.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.866" endtime="20201110 08:36:41.053"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.057" endtime="20201110 08:36:41.060"></status>
</kw>
<msg timestamp="20201110 08:36:41.060" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:36:41.054" endtime="20201110 08:36:41.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.066" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:36:41.064" endtime="20201110 08:36:41.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.069" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:36:41.067" endtime="20201110 08:36:41.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.061" endtime="20201110 08:36:41.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.073" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:36:41.072" endtime="20201110 08:36:41.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.075" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:36:41.074" endtime="20201110 08:36:41.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.070" endtime="20201110 08:36:41.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.082" endtime="20201110 08:36:41.379"></status>
</kw>
<msg timestamp="20201110 08:36:41.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071772431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071810458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:41.081" endtime="20201110 08:36:41.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071772431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071810458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:41.384" endtime="20201110 08:36:41.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.392" endtime="20201110 08:36:41.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.078" endtime="20201110 08:36:41.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.077" endtime="20201110 08:36:41.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:41.399" level="INFO">${RESULT} = [{'time': 0.071810458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8026999999996036e-05, 'source_diff': 3.8026999999996036e-05}, {'time': 0.074829778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:41.395" endtime="20201110 08:36:41.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:41.413" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:41.400" endtime="20201110 08:36:41.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.418" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:36:41.417" endtime="20201110 08:36:41.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.421" level="INFO">VALUE: [3.8026999999996036e-05, 3.7944999999997564e-05, 3.798700000000321e-05, 3.801400000000288e-05, 3.798599999998986e-05, 3.799999999999637e-05, 3.804199999998814e-05, 3.802799999999551e-05, 3.8027000000009914e-05, 3.8013999999989e-05, 3.7958999999990195e-05, 3.804099999998867e-05, 3.801400000000288e-05, 3.798599999998986e-05, 3.801400000000288e-05, 3.798600000000374e-05, 3.799999999999637e-05, 3.802799999999551e-05, 3.797300000002446e-05, 3.802799999999551e-05, 3.800000000001025e-05, 3.8026999999996036e-05, 3.793000000001934e-05, 3.79580000000046e-05, 3.800000000001025e-05, 3.801399999997512e-05, 3.798599999998986e-05, 3.801400000000288e-05, 3.798600000001762e-05, 3.7957999999976844e-05, 3.804100000001642e-05, 3.8055000000009054e-05, 3.802799999999551e-05, 3.7986999999989335e-05, 3.800000000001025e-05, 3.8042000000015896e-05, 3.805599999998077e-05, 3.801400000000288e-05, 3.801400000000288e-05, 3.801400000000288e-05, 3.7972999999996704e-05, 3.802799999999551e-05, 3.800000000001025e-05, 3.804199999998814e-05, 3.798600000001762e-05, 3.801399999997512e-05, 3.798599999998986e-05, 3.799999999998249e-05, 3.801400000000288e-05, 3.801399999997512e-05]</msg>
<status status="PASS" starttime="20201110 08:36:41.419" endtime="20201110 08:36:41.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.414" endtime="20201110 08:36:41.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.424" endtime="20201110 08:36:41.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:41.428" endtime="20201110 08:36:41.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.426" endtime="20201110 08:36:41.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.422" endtime="20201110 08:36:41.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.865" endtime="20201110 08:36:41.452"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:40.790" endtime="20201110 08:36:41.453" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:36:19.136" endtime="20201110 08:36:41.471"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.580" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:41.588" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:42.709" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:41.579" endtime="20201110 08:36:42.710"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.713" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:36:42.711" endtime="20201110 08:36:42.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.577" endtime="20201110 08:36:42.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:42.719" endtime="20201110 08:36:42.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.716" endtime="20201110 08:36:42.912"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.924" endtime="20201110 08:36:42.944"></status>
</kw>
<msg timestamp="20201110 08:36:42.944" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['e to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:42.923" endtime="20201110 08:36:42.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.947" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['e to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:42.945" endtime="20201110 08:36:42.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.950" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:42.948" endtime="20201110 08:36:42.951"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:42.920" endtime="20201110 08:36:42.951"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:42.918" endtime="20201110 08:36:42.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.916" endtime="20201110 08:36:42.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:42.957" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:42.955" endtime="20201110 08:36:42.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.953" endtime="20201110 08:36:42.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.916" endtime="20201110 08:36:42.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.915" endtime="20201110 08:36:42.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.959" endtime="20201110 08:36:42.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.914" endtime="20201110 08:36:42.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.962" endtime="20201110 08:36:42.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.912" endtime="20201110 08:36:42.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.576" endtime="20201110 08:36:42.964"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:42.973" endtime="20201110 08:36:42.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.969" endtime="20201110 08:36:42.996"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.026" endtime="20201110 08:36:43.049"></status>
</kw>
<msg timestamp="20201110 08:36:43.050" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:43.022" endtime="20201110 08:36:43.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:43.052" endtime="20201110 08:36:43.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.062" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:43.058" endtime="20201110 08:36:43.063"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:43.016" endtime="20201110 08:36:43.064"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:43.011" endtime="20201110 08:36:43.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.008" endtime="20201110 08:36:43.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:43.072" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:43.072" endtime="20201110 08:36:43.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.068" endtime="20201110 08:36:43.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.006" endtime="20201110 08:36:43.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.005" endtime="20201110 08:36:43.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.074" endtime="20201110 08:36:43.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.002" endtime="20201110 08:36:43.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.998" endtime="20201110 08:36:43.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.967" endtime="20201110 08:36:43.077"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.088" endtime="20201110 08:36:43.123"></status>
</kw>
<msg timestamp="20201110 08:36:43.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:43.086" endtime="20201110 08:36:43.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:43.125" endtime="20201110 08:36:43.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.127" endtime="20201110 08:36:43.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.082" endtime="20201110 08:36:43.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.080" endtime="20201110 08:36:43.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.137" endtime="20201110 08:36:43.441"></status>
</kw>
<msg timestamp="20201110 08:36:43.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.106466569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.106807722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:43.135" endtime="20201110 08:36:43.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.106466569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.106807722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:43.446" endtime="20201110 08:36:43.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.456" endtime="20201110 08:36:43.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.132" endtime="20201110 08:36:43.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.131" endtime="20201110 08:36:43.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:43.464" level="INFO">${RESULT} = [{'time': 0.106807722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003411529999999968, 'source_diff': 0.0003411529999999968}, {'time': 0.107172917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:43.461" endtime="20201110 08:36:43.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:43.480" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:43.466" endtime="20201110 08:36:43.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.486" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:36:43.484" endtime="20201110 08:36:43.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.489" level="INFO">VALUE: [0.0003411529999999968, 0.00033951400000001297, 0.00034198700000000193, 0.000341679999999997, 0.00034272199999998976, 0.00034330600000000155, 0.00033862500000000906, 0.0003396659999999885, 0.0003445279999999967, 0.0003382229999999986, 0.00034047199999999445, 0.0003401249999999967, 0.0003387499999999988, 0.0003431799999999985, 0.0003420280000000081, 0.00033836099999999536, 0.0003390699999999969, 0.0003442500000000043, 0.00034308299999999403, 0.0003386249999999952, 0.0003415840000000059, 0.00034059699999999804, 0.0003444999999999976, 0.00034016700000000233, 0.0003407230000000011, 0.0003438749999999935, 0.00034458299999999553, 0.00034172200000000263, 0.00034154200000000023, 0.0003379999999999911, 0.00033987500000000337, 0.0003436529999999993, 0.00033868100000000734, 0.00034436100000000136, 0.00033880500000001146, 0.00033959699999999704, 0.0003384300000000007, 0.0003425690000000009, 0.000338917000000008, 0.0003433889999999995, 0.0003397499999999998, 0.000341888999999998, 0.00034273600000001014, 0.000340403000000003, 0.000338387999999995, 0.00033882000000000356, 0.000340708000000009, 0.0003420279999999942, 0.0003418189999999932, 0.0003413889999999975]</msg>
<status status="PASS" starttime="20201110 08:36:43.487" endtime="20201110 08:36:43.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.481" endtime="20201110 08:36:43.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.494" endtime="20201110 08:36:43.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:43.499" endtime="20201110 08:36:43.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.497" endtime="20201110 08:36:43.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.491" endtime="20201110 08:36:43.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.079" endtime="20201110 08:36:43.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.078" endtime="20201110 08:36:43.521"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.530" endtime="20201110 08:36:43.565"></status>
</kw>
<msg timestamp="20201110 08:36:43.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:43.528" endtime="20201110 08:36:43.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:43.566" endtime="20201110 08:36:43.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.569" endtime="20201110 08:36:43.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.525" endtime="20201110 08:36:43.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.523" endtime="20201110 08:36:43.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.578" endtime="20201110 08:36:43.865"></status>
</kw>
<msg timestamp="20201110 08:36:43.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022979306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:43.577" endtime="20201110 08:36:43.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022979306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:43.869" endtime="20201110 08:36:43.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.877" endtime="20201110 08:36:43.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.574" endtime="20201110 08:36:43.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.572" endtime="20201110 08:36:43.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:43.884" level="INFO">${RESULT} = [{'time': 0.022979306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003359310000000011, 'source_diff': 0.0003359310000000011}, {'time': 0.023344611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:43.881" endtime="20201110 08:36:43.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:43.898" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:43.885" endtime="20201110 08:36:43.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.903" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:36:43.902" endtime="20201110 08:36:43.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.906" level="INFO">VALUE: [0.0003359310000000011, 0.0003399300000000022, 0.0003389030000000015, 0.0003444860000000015, 0.00033958300000000094, 0.00034340299999999907, 0.00034468099999999946, 0.00034199999999999856, 0.0003441249999999972, 0.00034254100000000176, 0.00033843100000000015, 0.0003436250000000002, 0.0003410560000000028, 0.0003397499999999998, 0.0003389580000000003, 0.00033948599999999995, 0.00034341699999999864, 0.00034012500000000015, 0.0003424719999999999, 0.00034340300000000254, 0.000341000000000001, 0.0003397360000000002, 0.0003442500000000008, 0.00033912499999999915, 0.00034458300000000247, 0.0003382499999999983, 0.00033984700000000423, 0.0003445560000000028, 0.00034408299999999503, 0.0003383610000000023, 0.0003443879999999941, 0.0003427089999999966, 0.000339291999999998, 0.00034126400000000084, 0.00034484699999999535, 0.0003395139999999991, 0.00034387500000000043, 0.0003401810000000019, 0.00033822199999999913, 0.00033872199999999963, 0.00034048600000000095, 0.00034204100000000126, 0.000344374999999994, 0.00034038900000000344, 0.00034063899999999675, 0.000339888999999996, 0.0003441250000000007, 0.00033865300000000126, 0.0003440549999999959, 0.0003387919999999975]</msg>
<status status="PASS" starttime="20201110 08:36:43.904" endtime="20201110 08:36:43.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.899" endtime="20201110 08:36:43.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.909" endtime="20201110 08:36:43.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:43.913" endtime="20201110 08:36:43.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.911" endtime="20201110 08:36:43.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.908" endtime="20201110 08:36:43.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.522" endtime="20201110 08:36:43.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.521" endtime="20201110 08:36:43.934"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.943" endtime="20201110 08:36:43.978"></status>
</kw>
<msg timestamp="20201110 08:36:43.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:43.941" endtime="20201110 08:36:43.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:43.979" endtime="20201110 08:36:43.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.982" endtime="20201110 08:36:43.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.939" endtime="20201110 08:36:43.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.936" endtime="20201110 08:36:43.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.992" endtime="20201110 08:36:44.281"></status>
</kw>
<msg timestamp="20201110 08:36:44.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021208056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021554306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:43.991" endtime="20201110 08:36:44.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021208056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021554306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:44.285" endtime="20201110 08:36:44.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.293" endtime="20201110 08:36:44.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.988" endtime="20201110 08:36:44.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.986" endtime="20201110 08:36:44.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:44.300" level="INFO">${RESULT} = [{'time': 0.021554306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034624999999999934, 'source_diff': 0.00034624999999999934}, {'time': 0.021919764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:44.297" endtime="20201110 08:36:44.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:44.314" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:44.301" endtime="20201110 08:36:44.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.320" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:36:44.318" endtime="20201110 08:36:44.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.322" level="INFO">VALUE: [0.00034624999999999934, 0.00034034700000000126, 0.00034191600000000114, 0.0003414439999999998, 0.0003408049999999996, 0.00033940299999999854, 0.0003428469999999968, 0.00033951400000000256, 0.0003448339999999987, 0.00033816600000000085, 0.0003433339999999972, 0.0003419300000000007, 0.000339097, 0.0003417780000000009, 0.00034336100000000036, 0.000339598, 0.0003433470000000008, 0.00034016699999999886, 0.0003441250000000007, 0.00034026399999999984, 0.0003399170000000021, 0.00034034700000000126, 0.0003414300000000002, 0.00033993100000000165, 0.000339291000000002, 0.0003384860000000024, 0.00034136199999999783, 0.0003386529999999978, 0.00034219399999999706, 0.00034081899999999915, 0.0003424439999999973, 0.00033888900000000194, 0.00034113899999999725, 0.0003442780000000034, 0.00034456999999999544, 0.00034301399999999566, 0.0003409449999999953, 0.00033820799999999956, 0.0003397779999999989, 0.0003417639999999944, 0.0003409449999999953, 0.0003406380000000042, 0.0003417360000000022, 0.00033894400000000074, 0.00034151399999999416, 0.0003434439999999983, 0.00034291599999999867, 0.0003442079999999986, 0.0003384300000000007, 0.00034195899999999585]</msg>
<status status="PASS" starttime="20201110 08:36:44.321" endtime="20201110 08:36:44.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.315" endtime="20201110 08:36:44.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.326" endtime="20201110 08:36:44.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:44.330" endtime="20201110 08:36:44.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.329" endtime="20201110 08:36:44.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.325" endtime="20201110 08:36:44.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.935" endtime="20201110 08:36:44.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.934" endtime="20201110 08:36:44.351"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.361" endtime="20201110 08:36:44.394"></status>
</kw>
<msg timestamp="20201110 08:36:44.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.359" endtime="20201110 08:36:44.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.396" endtime="20201110 08:36:44.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.398" endtime="20201110 08:36:44.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.356" endtime="20201110 08:36:44.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.354" endtime="20201110 08:36:44.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.409" endtime="20201110 08:36:44.695"></status>
</kw>
<msg timestamp="20201110 08:36:44.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020880111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021234778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:44.407" endtime="20201110 08:36:44.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020880111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021234778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:44.700" endtime="20201110 08:36:44.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.710" endtime="20201110 08:36:44.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.405" endtime="20201110 08:36:44.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.403" endtime="20201110 08:36:44.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:44.717" level="INFO">${RESULT} = [{'time': 0.021234778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003546669999999995, 'source_diff': 0.0003546669999999995}, {'time': 0.021600028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:44.713" endtime="20201110 08:36:44.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:44.735" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:44.719" endtime="20201110 08:36:44.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.741" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:36:44.739" endtime="20201110 08:36:44.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.743" level="INFO">VALUE: [0.0003546669999999995, 0.0003413750000000014, 0.0003431530000000023, 0.000338306, 0.00034273599999999974, 0.00033920800000000056, 0.0003385139999999981, 0.0003412500000000013, 0.00033815300000000076, 0.0003430700000000009, 0.0003412230000000016, 0.0003438200000000016, 0.00033812499999999815, 0.0003407779999999999, 0.00034373599999999727, 0.0003401389999999997, 0.0003436529999999993, 0.0003395970000000005, 0.00033806999999999934, 0.0003403469999999978, 0.0003434440000000018, 0.00033856999999999984, 0.00034016699999999886, 0.0003386389999999982, 0.0003396389999999992, 0.0003415000000000015, 0.0003440279999999997, 0.00034436100000000136, 0.0003419170000000041, 0.0003424580000000038, 0.0003426669999999979, 0.00033843100000000015, 0.0003402079999999946, 0.00034441600000000017, 0.00034354200000000223, 0.00034336199999999983, 0.0003391659999999949, 0.000338790999999998, 0.0003413329999999992, 0.0003438050000000026, 0.00034008299999999797, 0.00034069399999999556, 0.000339291999999998, 0.0003436669999999989, 0.00034166600000000436, 0.0003390840000000034, 0.0003438199999999947, 0.0003393049999999981, 0.00034076400000000034, 0.0003442639999999969]</msg>
<status status="PASS" starttime="20201110 08:36:44.742" endtime="20201110 08:36:44.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.736" endtime="20201110 08:36:44.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.748" endtime="20201110 08:36:44.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:44.754" endtime="20201110 08:36:44.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.751" endtime="20201110 08:36:44.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.746" endtime="20201110 08:36:44.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.352" endtime="20201110 08:36:44.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.352" endtime="20201110 08:36:44.775"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.784" endtime="20201110 08:36:44.821"></status>
</kw>
<msg timestamp="20201110 08:36:44.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.783" endtime="20201110 08:36:44.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.823" endtime="20201110 08:36:44.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.825" endtime="20201110 08:36:44.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.780" endtime="20201110 08:36:44.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.778" endtime="20201110 08:36:44.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.836" endtime="20201110 08:36:45.121"></status>
</kw>
<msg timestamp="20201110 08:36:45.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024040389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024394778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:44.834" endtime="20201110 08:36:45.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024040389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024394778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:45.125" endtime="20201110 08:36:45.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.133" endtime="20201110 08:36:45.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.831" endtime="20201110 08:36:45.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.829" endtime="20201110 08:36:45.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:45.140" level="INFO">${RESULT} = [{'time': 0.024394778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003543890000000001, 'source_diff': 0.0003543890000000001}, {'time': 0.024760056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:45.137" endtime="20201110 08:36:45.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:45.154" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:45.141" endtime="20201110 08:36:45.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.159" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:36:45.158" endtime="20201110 08:36:45.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.162" level="INFO">VALUE: [0.0003543890000000001, 0.0003429729999999999, 0.00034184799999999876, 0.0003402230000000006, 0.00034168099999999993, 0.00033856900000000037, 0.0003404450000000017, 0.0003433330000000012, 0.0003445140000000006, 0.0003394720000000004, 0.000343986000000001, 0.00033954199999999823, 0.0003402780000000029, 0.00033955499999999833, 0.0003421940000000005, 0.00034236099999999936, 0.0003426109999999996, 0.0003406110000000011, 0.00034112500000000115, 0.00033918099999999743, 0.0003434729999999969, 0.00033997300000000036, 0.0003431799999999985, 0.0003422500000000023, 0.00034284799999999976, 0.00034409700000000154, 0.0003394720000000004, 0.0003412500000000013, 0.0003416250000000051, 0.00033948599999999995, 0.0003431249999999997, 0.00033901400000000553, 0.0003412500000000013, 0.00034297199999999695, 0.000340485999999994, 0.00033898599999999945, 0.0003380269999999977, 0.0003426249999999992, 0.0003406249999999972, 0.0003441380000000008, 0.0003436250000000002, 0.0003433470000000008, 0.00034180600000000005, 0.0003390139999999986, 0.0003424160000000051, 0.0003389719999999999, 0.00034041599999999617, 0.00034408400000000144, 0.0003410559999999993, 0.0003407919999999995]</msg>
<status status="PASS" starttime="20201110 08:36:45.161" endtime="20201110 08:36:45.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.155" endtime="20201110 08:36:45.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.166" endtime="20201110 08:36:45.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:45.169" endtime="20201110 08:36:45.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.168" endtime="20201110 08:36:45.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.164" endtime="20201110 08:36:45.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.776" endtime="20201110 08:36:45.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.776" endtime="20201110 08:36:45.190"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.199" endtime="20201110 08:36:45.233"></status>
</kw>
<msg timestamp="20201110 08:36:45.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:45.198" endtime="20201110 08:36:45.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:45.234" endtime="20201110 08:36:45.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.237" endtime="20201110 08:36:45.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.195" endtime="20201110 08:36:45.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.193" endtime="20201110 08:36:45.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.247" endtime="20201110 08:36:45.534"></status>
</kw>
<msg timestamp="20201110 08:36:45.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020783875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021132917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:45.246" endtime="20201110 08:36:45.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020783875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021132917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:45.538" endtime="20201110 08:36:45.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.546" endtime="20201110 08:36:45.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.243" endtime="20201110 08:36:45.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.241" endtime="20201110 08:36:45.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:45.553" level="INFO">${RESULT} = [{'time': 0.021132917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003490420000000008, 'source_diff': 0.0003490420000000008}, {'time': 0.021498153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:45.550" endtime="20201110 08:36:45.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:45.568" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:45.554" endtime="20201110 08:36:45.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.572" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:36:45.571" endtime="20201110 08:36:45.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.575" level="INFO">VALUE: [0.0003490420000000008, 0.00034381999999999815, 0.00034268100000000093, 0.0003407500000000008, 0.0003439730000000009, 0.00034058300000000194, 0.0003437639999999999, 0.000344195000000002, 0.0003436950000000015, 0.0003413750000000014, 0.00034047300000000086, 0.00034423600000000124, 0.00034155500000000033, 0.000340097000000001, 0.00034008299999999797, 0.00034081899999999915, 0.00034198600000000245, 0.0003394999999999995, 0.00033886099999999933, 0.00034273599999999974, 0.00034279099999999854, 0.0003389719999999999, 0.0003384579999999998, 0.0003385839999999994, 0.00033806999999999934, 0.0003417499999999983, 0.00034377799999999945, 0.00034145799999999935, 0.00033956900000000137, 0.00034431900000000265, 0.0003396810000000014, 0.0003416250000000051, 0.0003397369999999997, 0.00033843100000000015, 0.0003429450000000042, 0.0003431669999999984, 0.00034208399999999944, 0.0003385420000000042, 0.000341000000000001, 0.0003427920000000015, 0.0003387499999999988, 0.00034440300000000007, 0.0003425560000000008, 0.00034137499999999793, 0.0003443189999999957, 0.00034390299999999957, 0.0003410830000000059, 0.0003406940000000025, 0.00034405599999999537, 0.00034305500000000183]</msg>
<status status="PASS" starttime="20201110 08:36:45.574" endtime="20201110 08:36:45.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.569" endtime="20201110 08:36:45.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.579" endtime="20201110 08:36:45.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:45.582" endtime="20201110 08:36:45.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.581" endtime="20201110 08:36:45.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.577" endtime="20201110 08:36:45.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.191" endtime="20201110 08:36:45.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.191" endtime="20201110 08:36:45.603"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.612" endtime="20201110 08:36:45.651"></status>
</kw>
<msg timestamp="20201110 08:36:45.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:45.611" endtime="20201110 08:36:45.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:45.652" endtime="20201110 08:36:45.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.655" endtime="20201110 08:36:45.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.608" endtime="20201110 08:36:45.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.606" endtime="20201110 08:36:45.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.666" endtime="20201110 08:36:45.952"></status>
</kw>
<msg timestamp="20201110 08:36:45.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024810375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025148083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:45.664" endtime="20201110 08:36:45.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024810375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025148083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:45.958" endtime="20201110 08:36:45.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.969" endtime="20201110 08:36:45.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.661" endtime="20201110 08:36:45.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.660" endtime="20201110 08:36:45.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:45.976" level="INFO">${RESULT} = [{'time': 0.025148083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033770800000000253, 'source_diff': 0.00033770800000000253}, {'time': 0.025513528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:45.973" endtime="20201110 08:36:45.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:45.990" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:45.977" endtime="20201110 08:36:45.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.994" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:36:45.993" endtime="20201110 08:36:45.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.996" level="INFO">VALUE: [0.00033770800000000253, 0.0003382360000000022, 0.00034198700000000193, 0.0003428059999999976, 0.0003400130000000001, 0.00034465299999999685, 0.0003399720000000009, 0.00034109699999999854, 0.000340194000000002, 0.0003409729999999979, 0.00034290299999999857, 0.00034441699999999964, 0.0003435139999999996, 0.0003424170000000011, 0.0003414720000000024, 0.0003409589999999983, 0.0003441110000000011, 0.00033970800000000453, 0.00033976399999999934, 0.00034308300000000097, 0.00033827800000000435, 0.00033872199999999963, 0.00034081899999999915, 0.00033919500000000047, 0.0003411390000000042, 0.00034052799999999966, 0.00033866700000000083, 0.00034159699999999904, 0.0003411250000000046, 0.0003438189999999952, 0.00034158399999999894, 0.000341292, 0.0003397360000000002, 0.00034447199999999845, 0.00034463900000000075, 0.00034105499999999983, 0.00034244400000000424, 0.0003421390000000052, 0.00034208399999999944, 0.0003400559999999983, 0.00034158299999999947, 0.0003401250000000036, 0.00034140299999999707, 0.00034148700000000143, 0.0003409590000000018, 0.00034448600000000495, 0.00034136099999999836, 0.0003384589999999993, 0.000341292, 0.00033955499999999833]</msg>
<status status="PASS" starttime="20201110 08:36:45.995" endtime="20201110 08:36:45.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.991" endtime="20201110 08:36:45.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.000" endtime="20201110 08:36:46.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:46.004" endtime="20201110 08:36:46.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.002" endtime="20201110 08:36:46.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.998" endtime="20201110 08:36:46.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.604" endtime="20201110 08:36:46.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.604" endtime="20201110 08:36:46.025"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.033" endtime="20201110 08:36:46.072"></status>
</kw>
<msg timestamp="20201110 08:36:46.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.032" endtime="20201110 08:36:46.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.074" endtime="20201110 08:36:46.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.076" endtime="20201110 08:36:46.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.029" endtime="20201110 08:36:46.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.027" endtime="20201110 08:36:46.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.086" endtime="20201110 08:36:46.371"></status>
</kw>
<msg timestamp="20201110 08:36:46.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0205495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020907667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:46.084" endtime="20201110 08:36:46.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0205495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020907667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:46.376" endtime="20201110 08:36:46.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.384" endtime="20201110 08:36:46.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.082" endtime="20201110 08:36:46.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.080" endtime="20201110 08:36:46.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:46.390" level="INFO">${RESULT} = [{'time': 0.020907667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000358167000000003, 'source_diff': 0.000358167000000003}, {'time': 0.021272917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:46.387" endtime="20201110 08:36:46.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:46.405" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:46.391" endtime="20201110 08:36:46.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.409" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:36:46.408" endtime="20201110 08:36:46.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.412" level="INFO">VALUE: [0.000358167000000003, 0.0003421529999999978, 0.000341387999999998, 0.00033808299999999944, 0.0003421530000000013, 0.0003421660000000014, 0.0003443200000000021, 0.0003405420000000027, 0.000338306, 0.0003398190000000016, 0.0003414309999999997, 0.0003397499999999998, 0.0003425139999999986, 0.0003381390000000012, 0.0003433889999999995, 0.0003439440000000023, 0.00034363899999999975, 0.0003434310000000017, 0.0003430829999999975, 0.0003426520000000023, 0.0003418329999999997, 0.00033856999999999984, 0.00034427799999999995, 0.0003419310000000002, 0.00033879200000000095, 0.00034002799999999916, 0.0003397499999999998, 0.0003424859999999995, 0.0003443469999999983, 0.00033834799999999873, 0.0003385840000000029, 0.00034076400000000034, 0.00034291599999999867, 0.0003436659999999994, 0.0003436110000000006, 0.00034077700000000044, 0.0003388329999999967, 0.00034381900000000215, 0.0003395559999999978, 0.0003386390000000017, 0.0003391250000000026, 0.00034072200000000163, 0.00034005500000000577, 0.0003432500000000033, 0.0003413050000000001, 0.0003384160000000011, 0.0003420690000000004, 0.00034041599999999617, 0.0003442780000000034, 0.0003383610000000023]</msg>
<status status="PASS" starttime="20201110 08:36:46.410" endtime="20201110 08:36:46.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.406" endtime="20201110 08:36:46.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.415" endtime="20201110 08:36:46.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:46.419" endtime="20201110 08:36:46.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.417" endtime="20201110 08:36:46.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.414" endtime="20201110 08:36:46.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.025" endtime="20201110 08:36:46.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.025" endtime="20201110 08:36:46.440"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.448" endtime="20201110 08:36:46.484"></status>
</kw>
<msg timestamp="20201110 08:36:46.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.447" endtime="20201110 08:36:46.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.485" endtime="20201110 08:36:46.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.488" endtime="20201110 08:36:46.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.444" endtime="20201110 08:36:46.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.442" endtime="20201110 08:36:46.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.498" endtime="20201110 08:36:46.784"></status>
</kw>
<msg timestamp="20201110 08:36:46.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.496" endtime="20201110 08:36:46.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.788" endtime="20201110 08:36:46.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.796" endtime="20201110 08:36:46.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.494" endtime="20201110 08:36:46.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.492" endtime="20201110 08:36:46.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:46.803" level="INFO">${RESULT} = [{'time': 0.022752472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003388749999999989, 'source_diff': 0.0003388749999999989}, {'time': 0.023117819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:46.800" endtime="20201110 08:36:46.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:46.816" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:46.804" endtime="20201110 08:36:46.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.821" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:36:46.820" endtime="20201110 08:36:46.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.823" level="INFO">VALUE: [0.0003388749999999989, 0.0003447630000000014, 0.00033816700000000033, 0.00034299999999999956, 0.0003399590000000008, 0.0003411520000000008, 0.000341985999999999, 0.00033916699999999786, 0.00033856900000000037, 0.00033912499999999915, 0.000343889, 0.00034338900000000297, 0.00034136099999999836, 0.0003436529999999993, 0.00033986100000000033, 0.0003428200000000006, 0.0003397780000000024, 0.00033970800000000106, 0.00034463900000000075, 0.00034058299999999847, 0.0003402360000000007, 0.0003438200000000016, 0.00034408400000000144, 0.00034373600000000074, 0.0003423889999999985, 0.00034223599999999577, 0.00034308300000000097, 0.00034458299999999553, 0.00033955600000000474, 0.0003440140000000036, 0.00033863899999999475, 0.00033930599999999755, 0.00033820799999999956, 0.0003392359999999997, 0.00033856900000000384, 0.0003438749999999935, 0.00034413900000000025, 0.0003409579999999954, 0.0003441529999999998, 0.000344098000000001, 0.0003433889999999995, 0.0003416119999999981, 0.0003390420000000047, 0.0003421529999999978, 0.0003438330000000017, 0.0003416109999999986, 0.0003428050000000016, 0.00034048600000000095, 0.00034137500000000487, 0.0003428200000000006]</msg>
<status status="PASS" starttime="20201110 08:36:46.822" endtime="20201110 08:36:46.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.817" endtime="20201110 08:36:46.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.827" endtime="20201110 08:36:46.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:46.830" endtime="20201110 08:36:46.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.829" endtime="20201110 08:36:46.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.825" endtime="20201110 08:36:46.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.441" endtime="20201110 08:36:46.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.440" endtime="20201110 08:36:46.851"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.860" endtime="20201110 08:36:46.896"></status>
</kw>
<msg timestamp="20201110 08:36:46.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.858" endtime="20201110 08:36:46.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.897" endtime="20201110 08:36:46.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.900" endtime="20201110 08:36:46.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.856" endtime="20201110 08:36:46.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.854" endtime="20201110 08:36:46.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.909" endtime="20201110 08:36:47.194"></status>
</kw>
<msg timestamp="20201110 08:36:47.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023122694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.908" endtime="20201110 08:36:47.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023122694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.198" endtime="20201110 08:36:47.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.206" endtime="20201110 08:36:47.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.905" endtime="20201110 08:36:47.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.904" endtime="20201110 08:36:47.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:47.213" level="INFO">${RESULT} = [{'time': 0.023122694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003520269999999978, 'source_diff': 0.0003520269999999978}, {'time': 0.023487917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:47.209" endtime="20201110 08:36:47.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:47.226" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:47.214" endtime="20201110 08:36:47.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.231" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:36:47.230" endtime="20201110 08:36:47.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.233" level="INFO">VALUE: [0.0003520269999999978, 0.00034370900000000107, 0.00034197300000000236, 0.0003421530000000013, 0.0003417079999999996, 0.0003439720000000014, 0.0003400130000000001, 0.0003426530000000018, 0.00034122200000000213, 0.000341000000000001, 0.0003380420000000002, 0.0003440140000000001, 0.00034081899999999915, 0.00034383299999999825, 0.00034123599999999824, 0.00034465200000000085, 0.00034259700000000004, 0.0003431660000000024, 0.0003419729999999989, 0.000341292, 0.00033984700000000076, 0.00033890299999999804, 0.00034405599999999883, 0.00033920800000000056, 0.00034052799999999966, 0.0003395420000000052, 0.00034365199999999985, 0.00034298600000000345, 0.00034342999999999874, 0.00034419399999999906, 0.00034204200000000073, 0.00033843100000000015, 0.00034286099999999986, 0.00034336100000000036, 0.0003400699999999979, 0.0003394580000000008, 0.0003427079999999971, 0.00034227700000000194, 0.00034280499999999464, 0.0003383060000000035, 0.0003392359999999997, 0.00034019500000000147, 0.00034459700000000204, 0.0003446530000000003, 0.00034011100000000405, 0.00033888900000000194, 0.0003390830000000039, 0.0003405840000000049, 0.00034331900000000165, 0.0003410970000000055]</msg>
<status status="PASS" starttime="20201110 08:36:47.232" endtime="20201110 08:36:47.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.227" endtime="20201110 08:36:47.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.237" endtime="20201110 08:36:47.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:47.240" endtime="20201110 08:36:47.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.239" endtime="20201110 08:36:47.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.235" endtime="20201110 08:36:47.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.852" endtime="20201110 08:36:47.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.852" endtime="20201110 08:36:47.261"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.270" endtime="20201110 08:36:47.304"></status>
</kw>
<msg timestamp="20201110 08:36:47.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:47.268" endtime="20201110 08:36:47.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:47.305" endtime="20201110 08:36:47.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.308" endtime="20201110 08:36:47.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.265" endtime="20201110 08:36:47.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.263" endtime="20201110 08:36:47.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.318" endtime="20201110 08:36:47.604"></status>
</kw>
<msg timestamp="20201110 08:36:47.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020050014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.316" endtime="20201110 08:36:47.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020050014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.608" endtime="20201110 08:36:47.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.616" endtime="20201110 08:36:47.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.314" endtime="20201110 08:36:47.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.312" endtime="20201110 08:36:47.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:47.623" level="INFO">${RESULT} = [{'time': 0.020402069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035205499999999695, 'source_diff': 0.00035205499999999695}, {'time': 0.0207675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:47.619" endtime="20201110 08:36:47.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:47.636" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:47.624" endtime="20201110 08:36:47.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.641" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:36:47.640" endtime="20201110 08:36:47.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.644" level="INFO">VALUE: [0.00035205499999999695, 0.00033916700000000133, 0.00034052799999999966, 0.00034347199999999745, 0.00034366700000000236, 0.00034240299999999807, 0.0003424859999999995, 0.00033906900000000087, 0.0003389580000000003, 0.0003439310000000022, 0.0003425279999999982, 0.00034112500000000115, 0.00034181900000000015, 0.0003426249999999992, 0.0003443340000000017, 0.00034395800000000185, 0.0003426390000000022, 0.0003399170000000021, 0.0003394590000000003, 0.00033936099999999983, 0.00034342999999999874, 0.00034273599999999974, 0.0003434860000000005, 0.0003427080000000006, 0.00034069500000000197, 0.00034222199999999967, 0.00033902799999999816, 0.00034408400000000144, 0.00033826300000000184, 0.00033916699999999786, 0.0003422919999999975, 0.0003423200000000001, 0.0003394999999999995, 0.00034463900000000075, 0.0003427370000000027, 0.0003421529999999978, 0.000344777999999997, 0.0003394720000000004, 0.000340291999999999, 0.00034387500000000043, 0.0003397499999999998, 0.0003393469999999968, 0.00034069399999999556, 0.0003444999999999976, 0.0003406250000000041, 0.00034026399999999984, 0.00033833300000000316, 0.0003417780000000009, 0.0003424439999999973, 0.0003417920000000005]</msg>
<status status="PASS" starttime="20201110 08:36:47.642" endtime="20201110 08:36:47.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.637" endtime="20201110 08:36:47.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.649" endtime="20201110 08:36:47.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:47.654" endtime="20201110 08:36:47.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.652" endtime="20201110 08:36:47.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.646" endtime="20201110 08:36:47.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.262" endtime="20201110 08:36:47.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.261" endtime="20201110 08:36:47.678"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.687" endtime="20201110 08:36:47.725"></status>
</kw>
<msg timestamp="20201110 08:36:47.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:47.686" endtime="20201110 08:36:47.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:47.727" endtime="20201110 08:36:47.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.729" endtime="20201110 08:36:47.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.683" endtime="20201110 08:36:47.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.681" endtime="20201110 08:36:47.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.739" endtime="20201110 08:36:48.026"></status>
</kw>
<msg timestamp="20201110 08:36:48.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026357819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0266915, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:47.737" endtime="20201110 08:36:48.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026357819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0266915, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:48.030" endtime="20201110 08:36:48.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.038" endtime="20201110 08:36:48.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.735" endtime="20201110 08:36:48.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.733" endtime="20201110 08:36:48.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:48.044" level="INFO">${RESULT} = [{'time': 0.0266915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033368099999999887, 'source_diff': 0.00033368099999999887}, {'time': 0.027056708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:48.041" endtime="20201110 08:36:48.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:48.059" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:48.045" endtime="20201110 08:36:48.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.063" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:36:48.062" endtime="20201110 08:36:48.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.066" level="INFO">VALUE: [0.00033368099999999887, 0.0003401519999999998, 0.0003401249999999967, 0.00033972200000000063, 0.00033994499999999775, 0.00034266700000000136, 0.00033806899999999987, 0.00034152800000000066, 0.00034272299999999964, 0.0003396110000000001, 0.0003414450000000027, 0.0003410140000000006, 0.00034286099999999986, 0.00033811100000000205, 0.0003384579999999998, 0.00033916700000000133, 0.00034258300000000047, 0.00034170800000000306, 0.0003439999999999971, 0.0003438470000000013, 0.00034213899999999825, 0.0003384719999999994, 0.00034359700000000104, 0.0003403049999999991, 0.0003426379999999993, 0.0003429439999999978, 0.0003407360000000012, 0.00034030599999999855, 0.0003431659999999989, 0.00034170800000000306, 0.0003414720000000024, 0.000342000000000002, 0.00034280600000000105, 0.0003437769999999965, 0.00034268099999999746, 0.0003399720000000009, 0.00034016600000000285, 0.00034119500000000247, 0.00034227700000000194, 0.00033866700000000083, 0.0003414300000000037, 0.0003420560000000003, 0.00034140299999999707, 0.00034290299999999857, 0.0003382359999999987, 0.00033819499999999947, 0.00034247199999999645, 0.00034013899999999625, 0.0003444439999999993, 0.0003436810000000054]</msg>
<status status="PASS" starttime="20201110 08:36:48.065" endtime="20201110 08:36:48.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.060" endtime="20201110 08:36:48.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.069" endtime="20201110 08:36:48.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:48.073" endtime="20201110 08:36:48.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.071" endtime="20201110 08:36:48.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.068" endtime="20201110 08:36:48.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.679" endtime="20201110 08:36:48.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.679" endtime="20201110 08:36:48.094"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.102" endtime="20201110 08:36:48.137"></status>
</kw>
<msg timestamp="20201110 08:36:48.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.101" endtime="20201110 08:36:48.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.138" endtime="20201110 08:36:48.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.141" endtime="20201110 08:36:48.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.098" endtime="20201110 08:36:48.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.096" endtime="20201110 08:36:48.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.151" endtime="20201110 08:36:48.437"></status>
</kw>
<msg timestamp="20201110 08:36:48.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021432583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021775569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.149" endtime="20201110 08:36:48.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021432583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021775569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.441" endtime="20201110 08:36:48.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.449" endtime="20201110 08:36:48.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.147" endtime="20201110 08:36:48.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.145" endtime="20201110 08:36:48.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:48.455" level="INFO">${RESULT} = [{'time': 0.021775569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000342986, 'source_diff': 0.000342986}, {'time': 0.022140917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000344000000000...</msg>
<status status="PASS" starttime="20201110 08:36:48.452" endtime="20201110 08:36:48.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:48.469" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:48.456" endtime="20201110 08:36:48.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.473" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:36:48.472" endtime="20201110 08:36:48.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.476" level="INFO">VALUE: [0.000342986, 0.00034400000000000056, 0.00034117999999999996, 0.0003437639999999999, 0.00034136100000000183, 0.000338597999999999, 0.00034245800000000035, 0.0003439309999999987, 0.00034363899999999975, 0.00034218000000000096, 0.00034087499999999743, 0.00033815300000000076, 0.0003411390000000007, 0.00034405499999999936, 0.00034022200000000113, 0.0003396810000000014, 0.0003415000000000015, 0.0003386250000000021, 0.00034018099999999843, 0.00034076400000000034, 0.0003428059999999976, 0.0003414580000000028, 0.0003423889999999985, 0.000340985999999998, 0.0003415000000000015, 0.0003445280000000002, 0.0003409299999999997, 0.0003435419999999953, 0.00034359700000000104, 0.0003417500000000018, 0.00034352800000000266, 0.0003406250000000041, 0.0003417780000000009, 0.00034304100000000226, 0.00033866700000000083, 0.0003395699999999974, 0.00034155500000000033, 0.00033870800000000006, 0.00034105499999999983, 0.0003398049999999986, 0.00033872199999999963, 0.0003423889999999985, 0.00033888900000000194, 0.00034363899999999975, 0.00034020900000000104, 0.00033952799999999866, 0.00034391699999999914, 0.00034, 0.0003387919999999975, 0.000342292000000001]</msg>
<status status="PASS" starttime="20201110 08:36:48.474" endtime="20201110 08:36:48.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.470" endtime="20201110 08:36:48.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.479" endtime="20201110 08:36:48.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:48.483" endtime="20201110 08:36:48.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.481" endtime="20201110 08:36:48.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.478" endtime="20201110 08:36:48.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.094" endtime="20201110 08:36:48.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.094" endtime="20201110 08:36:48.504"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.512" endtime="20201110 08:36:48.551"></status>
</kw>
<msg timestamp="20201110 08:36:48.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.511" endtime="20201110 08:36:48.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.552" endtime="20201110 08:36:48.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.555" endtime="20201110 08:36:48.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.508" endtime="20201110 08:36:48.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.506" endtime="20201110 08:36:48.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.565" endtime="20201110 08:36:48.852"></status>
</kw>
<msg timestamp="20201110 08:36:48.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023396236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023748819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.563" endtime="20201110 08:36:48.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023396236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023748819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.856" endtime="20201110 08:36:48.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.864" endtime="20201110 08:36:48.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.561" endtime="20201110 08:36:48.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.559" endtime="20201110 08:36:48.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:48.870" level="INFO">${RESULT} = [{'time': 0.023748819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035258300000000006, 'source_diff': 0.00035258300000000006}, {'time': 0.024113972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:48.867" endtime="20201110 08:36:48.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:48.884" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:48.871" endtime="20201110 08:36:48.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.888" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:36:48.887" endtime="20201110 08:36:48.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.890" level="INFO">VALUE: [0.00035258300000000006, 0.00033952800000000213, 0.0003419719999999994, 0.0003408750000000009, 0.0003429440000000013, 0.0003382220000000026, 0.0003401519999999998, 0.0003397779999999989, 0.00034345800000000135, 0.00034270900000000007, 0.0003395139999999991, 0.0003428340000000002, 0.00034436100000000136, 0.0003384170000000006, 0.0003431530000000023, 0.0003380000000000015, 0.0003380550000000003, 0.00034004199999999873, 0.00034159699999999904, 0.00033806899999999987, 0.00033884699999999976, 0.0003421659999999979, 0.00034361099999999367, 0.00034279199999999455, 0.0003445690000000029, 0.00034202800000000116, 0.000344388000000001, 0.0003405000000000005, 0.00034074999999999384, 0.000340305000000006, 0.00033856900000000384, 0.0003412089999999951, 0.000342485999999996, 0.0003406119999999971, 0.00033879100000000495, 0.00034230600000000055, 0.0003397360000000002, 0.0003406250000000041, 0.00033937500000000287, 0.00034195899999999585, 0.00034040299999999607, 0.00033913899999999525, 0.000338194, 0.000341888999999998, 0.0003421810000000039, 0.00033815300000000076, 0.00033915300000000176, 0.0003429449999999973, 0.0003415689999999999, 0.00033892999999999424]</msg>
<status status="PASS" starttime="20201110 08:36:48.889" endtime="20201110 08:36:48.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.885" endtime="20201110 08:36:48.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.895" endtime="20201110 08:36:48.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:48.900" endtime="20201110 08:36:48.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.898" endtime="20201110 08:36:48.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.893" endtime="20201110 08:36:48.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.504" endtime="20201110 08:36:48.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.504" endtime="20201110 08:36:48.920"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.929" endtime="20201110 08:36:48.966"></status>
</kw>
<msg timestamp="20201110 08:36:48.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.927" endtime="20201110 08:36:48.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.968" endtime="20201110 08:36:48.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.970" endtime="20201110 08:36:48.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.925" endtime="20201110 08:36:48.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.923" endtime="20201110 08:36:48.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.980" endtime="20201110 08:36:49.266"></status>
</kw>
<msg timestamp="20201110 08:36:49.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023547542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023878653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.979" endtime="20201110 08:36:49.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023547542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023878653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.270" endtime="20201110 08:36:49.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.278" endtime="20201110 08:36:49.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.976" endtime="20201110 08:36:49.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.974" endtime="20201110 08:36:49.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:49.285" level="INFO">${RESULT} = [{'time': 0.023878653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003311109999999985, 'source_diff': 0.0003311109999999985}, {'time': 0.024244028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:49.281" endtime="20201110 08:36:49.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:49.298" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:49.285" endtime="20201110 08:36:49.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.302" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:36:49.302" endtime="20201110 08:36:49.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.305" level="INFO">VALUE: [0.0003311109999999985, 0.000342986, 0.0003408049999999996, 0.00034213899999999825, 0.00034409700000000154, 0.0003436669999999989, 0.0003424019999999986, 0.000341194000000003, 0.0003383329999999997, 0.00034331900000000165, 0.00033847299999999886, 0.00034076400000000034, 0.00034088900000000047, 0.000341194000000003, 0.00034072200000000163, 0.0003419170000000006, 0.00034131899999999965, 0.00033905499999999783, 0.000340097000000001, 0.0003408049999999996, 0.0003384999999999985, 0.000341888999999998, 0.0003440690000000024, 0.00033800000000000496, 0.00034408300000000197, 0.0003386940000000005, 0.0003414580000000028, 0.00034392999999999924, 0.00034380600000000205, 0.0003390689999999974, 0.00034236099999999936, 0.0003400699999999979, 0.00033884700000000323, 0.0003383060000000035, 0.00033869499999999997, 0.0003444999999999976, 0.00034241599999999817, 0.0003405140000000001, 0.0003421669999999974, 0.00034088900000000394, 0.0003392920000000049, 0.00033887499999999543, 0.000338291999999997, 0.0003430279999999952, 0.00034319500000000447, 0.0003405140000000001, 0.0003405140000000001, 0.0003444309999999992, 0.00034115300000000376, 0.00033959800000000345]</msg>
<status status="PASS" starttime="20201110 08:36:49.304" endtime="20201110 08:36:49.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.299" endtime="20201110 08:36:49.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.308" endtime="20201110 08:36:49.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:49.312" endtime="20201110 08:36:49.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.310" endtime="20201110 08:36:49.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.307" endtime="20201110 08:36:49.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.921" endtime="20201110 08:36:49.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.921" endtime="20201110 08:36:49.333"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.341" endtime="20201110 08:36:49.378"></status>
</kw>
<msg timestamp="20201110 08:36:49.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:49.340" endtime="20201110 08:36:49.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:49.379" endtime="20201110 08:36:49.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.382" endtime="20201110 08:36:49.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.337" endtime="20201110 08:36:49.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.335" endtime="20201110 08:36:49.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.393" endtime="20201110 08:36:49.678"></status>
</kw>
<msg timestamp="20201110 08:36:49.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023165264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023499847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.391" endtime="20201110 08:36:49.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023165264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023499847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.682" endtime="20201110 08:36:49.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.690" endtime="20201110 08:36:49.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.388" endtime="20201110 08:36:49.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.386" endtime="20201110 08:36:49.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:49.697" level="INFO">${RESULT} = [{'time': 0.023499847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003345829999999994, 'source_diff': 0.0003345829999999994}, {'time': 0.023864972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:49.693" endtime="20201110 08:36:49.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:49.712" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:49.698" endtime="20201110 08:36:49.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.716" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:36:49.715" endtime="20201110 08:36:49.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.719" level="INFO">VALUE: [0.0003345829999999994, 0.0003441530000000033, 0.0003412079999999991, 0.00033922200000000013, 0.0003394169999999981, 0.0003417499999999983, 0.00034022200000000113, 0.0003411530000000003, 0.0003405000000000005, 0.000338194, 0.0003428470000000003, 0.0003411390000000007, 0.00034373599999999727, 0.00034298699999999946, 0.0003415559999999998, 0.00034361099999999714, 0.00034445899999999835, 0.0003430279999999987, 0.0003424170000000011, 0.0003422360000000027, 0.0003421799999999975, 0.00034163899999999775, 0.00034272299999999964, 0.00033820799999999956, 0.00034459700000000204, 0.00034087499999999743, 0.00033850000000000546, 0.00034032000000000506, 0.00033954199999999823, 0.00034170900000000254, 0.00034258399999999994, 0.00034408299999999503, 0.0003384719999999994, 0.0003427780000000019, 0.000340403000000003, 0.0003407500000000008, 0.00034130599999999955, 0.0003418329999999997, 0.00033984700000000423, 0.00034016700000000233, 0.0003422910000000015, 0.0003422500000000023, 0.00034170900000000254, 0.0003433050000000021, 0.0003382359999999987, 0.0003402360000000007, 0.00033881899999999715, 0.00034187500000000537, 0.0003423469999999998, 0.0003400139999999996]</msg>
<status status="PASS" starttime="20201110 08:36:49.717" endtime="20201110 08:36:49.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.713" endtime="20201110 08:36:49.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.722" endtime="20201110 08:36:49.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:49.726" endtime="20201110 08:36:49.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.724" endtime="20201110 08:36:49.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.721" endtime="20201110 08:36:49.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.334" endtime="20201110 08:36:49.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.333" endtime="20201110 08:36:49.747"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.755" endtime="20201110 08:36:49.790"></status>
</kw>
<msg timestamp="20201110 08:36:49.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:49.754" endtime="20201110 08:36:49.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:49.791" endtime="20201110 08:36:49.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.794" endtime="20201110 08:36:49.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.751" endtime="20201110 08:36:49.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.749" endtime="20201110 08:36:49.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.803" endtime="20201110 08:36:50.090"></status>
</kw>
<msg timestamp="20201110 08:36:50.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021313069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.802" endtime="20201110 08:36:50.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021313069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.096" endtime="20201110 08:36:50.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.106" endtime="20201110 08:36:50.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.799" endtime="20201110 08:36:50.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.798" endtime="20201110 08:36:50.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:50.114" level="INFO">${RESULT} = [{'time': 0.021668278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003552089999999987, 'source_diff': 0.0003552089999999987}, {'time': 0.022033569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:50.111" endtime="20201110 08:36:50.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:50.128" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:50.115" endtime="20201110 08:36:50.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.132" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:36:50.131" endtime="20201110 08:36:50.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.135" level="INFO">VALUE: [0.0003552089999999987, 0.00034172199999999917, 0.0003382640000000013, 0.00034162500000000165, 0.0003417780000000009, 0.0003397360000000002, 0.0003434310000000017, 0.00034018099999999843, 0.0003424719999999999, 0.0003440829999999985, 0.00034208299999999997, 0.00033926399999999884, 0.0003405560000000023, 0.000341985999999999, 0.00034223599999999924, 0.00034212500000000215, 0.0003387779999999979, 0.0003417920000000005, 0.00033830500000000055, 0.0003410140000000006, 0.00034048600000000095, 0.0003388749999999989, 0.00034390299999999957, 0.0003424859999999995, 0.00033876399999999834, 0.0003429309999999977, 0.00034447199999999845, 0.0003404719999999979, 0.0003404170000000026, 0.00034154200000000023, 0.00034080599999999905, 0.0003426669999999979, 0.00033987500000000337, 0.00034280600000000105, 0.0003445140000000041, 0.0003403889999999965, 0.0003399590000000008, 0.00034037500000000387, 0.000341000000000001, 0.00034215300000000476, 0.00034365199999999985, 0.0003444439999999993, 0.00033970900000000054, 0.0003408190000000061, 0.00034315300000000576, 0.0003427230000000031, 0.0003437079999999981, 0.0003384300000000007, 0.00033998600000000045, 0.0003437780000000029]</msg>
<status status="PASS" starttime="20201110 08:36:50.133" endtime="20201110 08:36:50.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.129" endtime="20201110 08:36:50.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.138" endtime="20201110 08:36:50.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:50.142" endtime="20201110 08:36:50.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.140" endtime="20201110 08:36:50.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.137" endtime="20201110 08:36:50.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.747" endtime="20201110 08:36:50.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.747" endtime="20201110 08:36:50.163"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.171" endtime="20201110 08:36:50.208"></status>
</kw>
<msg timestamp="20201110 08:36:50.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.170" endtime="20201110 08:36:50.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.209" endtime="20201110 08:36:50.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.212" endtime="20201110 08:36:50.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.167" endtime="20201110 08:36:50.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.165" endtime="20201110 08:36:50.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.221" endtime="20201110 08:36:50.508"></status>
</kw>
<msg timestamp="20201110 08:36:50.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.220" endtime="20201110 08:36:50.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.512" endtime="20201110 08:36:50.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.520" endtime="20201110 08:36:50.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.217" endtime="20201110 08:36:50.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.216" endtime="20201110 08:36:50.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:50.526" level="INFO">${RESULT} = [{'time': 0.022610431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033104200000000014, 'source_diff': 0.00033104200000000014}, {'time': 0.022975847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:50.523" endtime="20201110 08:36:50.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:50.540" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:50.527" endtime="20201110 08:36:50.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.544" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:36:50.543" endtime="20201110 08:36:50.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.547" level="INFO">VALUE: [0.00033104200000000014, 0.0003424440000000008, 0.00034108299999999897, 0.0003391250000000026, 0.0003418469999999993, 0.0003386389999999982, 0.0003414309999999997, 0.0003414439999999998, 0.00034340200000000307, 0.0003418469999999993, 0.00034055499999999933, 0.0003431520000000028, 0.0003415000000000015, 0.00034130599999999955, 0.0003431379999999998, 0.0003407360000000012, 0.0003443049999999996, 0.0003417360000000022, 0.00033936099999999983, 0.0003396529999999988, 0.0003401659999999994, 0.00034151299999999815, 0.0003391529999999983, 0.00034154200000000023, 0.00034298600000000345, 0.000342485999999996, 0.0003433329999999943, 0.0003398610000000038, 0.0003423469999999998, 0.0003434579999999979, 0.0003445980000000015, 0.00033991599999999567, 0.000341387999999998, 0.0003393469999999968, 0.00034, 0.00034140299999999707, 0.0003444020000000006, 0.00034191599999999767, 0.0003379719999999989, 0.00034308300000000097, 0.0003444020000000006, 0.0003446530000000003, 0.00034187499999999843, 0.00034002799999999916, 0.00034101399999999366, 0.00034459700000000204, 0.00034434699999999485, 0.00033920800000000056, 0.00034387500000000043, 0.00033970800000000106]</msg>
<status status="PASS" starttime="20201110 08:36:50.546" endtime="20201110 08:36:50.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.541" endtime="20201110 08:36:50.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.550" endtime="20201110 08:36:50.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:50.554" endtime="20201110 08:36:50.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.552" endtime="20201110 08:36:50.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.549" endtime="20201110 08:36:50.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.164" endtime="20201110 08:36:50.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.163" endtime="20201110 08:36:50.575"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.583" endtime="20201110 08:36:50.619"></status>
</kw>
<msg timestamp="20201110 08:36:50.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.582" endtime="20201110 08:36:50.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.621" endtime="20201110 08:36:50.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.623" endtime="20201110 08:36:50.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.579" endtime="20201110 08:36:50.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.577" endtime="20201110 08:36:50.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.633" endtime="20201110 08:36:50.919"></status>
</kw>
<msg timestamp="20201110 08:36:50.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.631" endtime="20201110 08:36:50.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.923" endtime="20201110 08:36:50.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.931" endtime="20201110 08:36:50.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.629" endtime="20201110 08:36:50.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.627" endtime="20201110 08:36:50.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:50.937" level="INFO">${RESULT} = [{'time': 0.022668847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035045799999999794, 'source_diff': 0.00035045799999999794}, {'time': 0.023034069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:50.934" endtime="20201110 08:36:50.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:50.951" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:50.938" endtime="20201110 08:36:50.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.955" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:36:50.954" endtime="20201110 08:36:50.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.958" level="INFO">VALUE: [0.00035045799999999794, 0.000338291000000001, 0.0003400559999999983, 0.00033804099999999726, 0.0003409589999999983, 0.000341292, 0.00033801400000000106, 0.000341000000000001, 0.0003430139999999991, 0.00034441699999999964, 0.0003414589999999988, 0.0003414170000000001, 0.0003435139999999996, 0.00034040299999999954, 0.00033920800000000056, 0.0003438059999999986, 0.000340291999999999, 0.00034199999999999856, 0.0003389030000000015, 0.0003380979999999985, 0.00033805600000000324, 0.00033820799999999956, 0.000339097, 0.0003415840000000024, 0.00034172199999999917, 0.0003388610000000028, 0.00033938900000000244, 0.00034009699999999754, 0.00033887500000000237, 0.00034108299999999897, 0.00034236099999999936, 0.00034266600000000536, 0.00034005499999999883, 0.0003413050000000001, 0.00034119500000000247, 0.00034458299999999553, 0.0003443470000000018, 0.0003441380000000008, 0.0003434019999999996, 0.00033870800000000006, 0.00034220800000000356, 0.00034441699999999964, 0.0003389719999999999, 0.00034081899999999915, 0.00034442999999999974, 0.0003445980000000015, 0.0003385700000000033, 0.00033915300000000176, 0.0003413329999999992, 0.0003419450000000032]</msg>
<status status="PASS" starttime="20201110 08:36:50.956" endtime="20201110 08:36:50.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.952" endtime="20201110 08:36:50.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.961" endtime="20201110 08:36:50.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:50.965" endtime="20201110 08:36:50.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.963" endtime="20201110 08:36:50.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.960" endtime="20201110 08:36:50.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.575" endtime="20201110 08:36:50.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.575" endtime="20201110 08:36:50.985"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.994" endtime="20201110 08:36:51.031"></status>
</kw>
<msg timestamp="20201110 08:36:51.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.992" endtime="20201110 08:36:51.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.032" endtime="20201110 08:36:51.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.035" endtime="20201110 08:36:51.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.990" endtime="20201110 08:36:51.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.988" endtime="20201110 08:36:51.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.045" endtime="20201110 08:36:51.331"></status>
</kw>
<msg timestamp="20201110 08:36:51.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023461889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023792542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.043" endtime="20201110 08:36:51.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023461889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023792542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.335" endtime="20201110 08:36:51.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.343" endtime="20201110 08:36:51.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.041" endtime="20201110 08:36:51.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.039" endtime="20201110 08:36:51.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:51.349" level="INFO">${RESULT} = [{'time': 0.023792542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003306530000000002, 'source_diff': 0.0003306530000000002}, {'time': 0.024157931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:51.346" endtime="20201110 08:36:51.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:51.364" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:51.350" endtime="20201110 08:36:51.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.368" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:36:51.367" endtime="20201110 08:36:51.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.371" level="INFO">VALUE: [0.0003306530000000002, 0.00034062500000000065, 0.00033875000000000224, 0.0003401939999999985, 0.0003416390000000012, 0.0003430140000000026, 0.0003384719999999994, 0.0003383329999999997, 0.00034345800000000135, 0.0003445410000000003, 0.00034368099999999846, 0.00033872199999999963, 0.0003428470000000003, 0.0003393749999999994, 0.0003419590000000028, 0.0003432639999999994, 0.00034350000000000006, 0.0003447640000000009, 0.0003421530000000013, 0.00034163899999999775, 0.0003426950000000005, 0.0003382920000000039, 0.0003448059999999961, 0.00034059699999999804, 0.00034468, 0.0003390139999999986, 0.0003442089999999981, 0.00034002799999999916, 0.0003433340000000007, 0.0003443479999999943, 0.00033877699999999844, 0.00034409700000000154, 0.0003416940000000035, 0.0003405140000000001, 0.00034419499999999853, 0.00034413900000000025, 0.00033940299999999507, 0.00034424999999999734, 0.0003407219999999947, 0.00033890299999999457, 0.0003429999999999961, 0.00034131899999999965, 0.00034152800000000066, 0.0003425979999999995, 0.00034258300000000047, 0.000341679999999997, 0.0003422500000000023, 0.00033955600000000474, 0.0003423189999999937, 0.00034290299999999857]</msg>
<status status="PASS" starttime="20201110 08:36:51.369" endtime="20201110 08:36:51.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.365" endtime="20201110 08:36:51.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.374" endtime="20201110 08:36:51.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:51.377" endtime="20201110 08:36:51.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.376" endtime="20201110 08:36:51.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.372" endtime="20201110 08:36:51.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.986" endtime="20201110 08:36:51.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.986" endtime="20201110 08:36:51.398"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.407" endtime="20201110 08:36:51.443"></status>
</kw>
<msg timestamp="20201110 08:36:51.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.405" endtime="20201110 08:36:51.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.444" endtime="20201110 08:36:51.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.446" endtime="20201110 08:36:51.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.403" endtime="20201110 08:36:51.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.401" endtime="20201110 08:36:51.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.456" endtime="20201110 08:36:51.742"></status>
</kw>
<msg timestamp="20201110 08:36:51.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.455" endtime="20201110 08:36:51.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.746" endtime="20201110 08:36:51.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.754" endtime="20201110 08:36:51.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.452" endtime="20201110 08:36:51.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.451" endtime="20201110 08:36:51.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:51.761" level="INFO">${RESULT} = [{'time': 0.022737778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003359859999999999, 'source_diff': 0.0003359859999999999}, {'time': 0.023103125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:51.758" endtime="20201110 08:36:51.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:51.774" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:51.762" endtime="20201110 08:36:51.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.779" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:36:51.778" endtime="20201110 08:36:51.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.781" level="INFO">VALUE: [0.0003359859999999999, 0.0003443609999999979, 0.00034377799999999945, 0.0003420690000000004, 0.0003438469999999978, 0.0003411390000000007, 0.0003442919999999995, 0.00033880500000000105, 0.00034016700000000233, 0.0003383329999999997, 0.0003409299999999997, 0.0003423339999999997, 0.00033936099999999983, 0.00034277799999999845, 0.0003428189999999977, 0.0003446669999999999, 0.00034086099999999786, 0.0003411110000000016, 0.0003434309999999982, 0.00034008300000000144, 0.00034323600000000024, 0.0003412230000000016, 0.0003415140000000011, 0.0003412500000000013, 0.0003395689999999979, 0.0003445560000000028, 0.00033859699999999604, 0.00034169399999999656, 0.0003397360000000002, 0.00033870800000000006, 0.00034202800000000116, 0.00034254200000000123, 0.0003423469999999998, 0.00034408400000000144, 0.0003394999999999995, 0.0003445690000000029, 0.0003397370000000066, 0.00034187499999999843, 0.00034036099999999736, 0.0003441250000000007, 0.00034176400000000134, 0.000337999999999998, 0.0003393199999999971, 0.0003397360000000002, 0.00033948599999999995, 0.0003385129999999986, 0.00034038900000000344, 0.0003416109999999986, 0.0003424579999999969, 0.00034202800000000116]</msg>
<status status="PASS" starttime="20201110 08:36:51.780" endtime="20201110 08:36:51.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.775" endtime="20201110 08:36:51.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.785" endtime="20201110 08:36:51.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:51.788" endtime="20201110 08:36:51.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.787" endtime="20201110 08:36:51.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.783" endtime="20201110 08:36:51.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.399" endtime="20201110 08:36:51.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.399" endtime="20201110 08:36:51.809"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.818" endtime="20201110 08:36:51.859"></status>
</kw>
<msg timestamp="20201110 08:36:51.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.816" endtime="20201110 08:36:51.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.860" endtime="20201110 08:36:51.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.863" endtime="20201110 08:36:51.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.814" endtime="20201110 08:36:51.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.812" endtime="20201110 08:36:51.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.873" endtime="20201110 08:36:52.159"></status>
</kw>
<msg timestamp="20201110 08:36:52.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023579333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023935514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.871" endtime="20201110 08:36:52.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023579333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023935514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.163" endtime="20201110 08:36:52.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.171" endtime="20201110 08:36:52.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.869" endtime="20201110 08:36:52.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.867" endtime="20201110 08:36:52.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:52.178" level="INFO">${RESULT} = [{'time': 0.023935514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035618100000000055, 'source_diff': 0.00035618100000000055}, {'time': 0.02430075, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:36:52.174" endtime="20201110 08:36:52.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:52.191" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:52.179" endtime="20201110 08:36:52.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.196" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:36:52.195" endtime="20201110 08:36:52.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.198" level="INFO">VALUE: [0.00035618100000000055, 0.00033966699999999836, 0.0003439720000000014, 0.0003445410000000003, 0.0003397360000000002, 0.0003402779999999994, 0.00033977699999999944, 0.00033979200000000195, 0.00034445800000000235, 0.0003445839999999985, 0.0003382499999999983, 0.00034170900000000254, 0.0003406110000000011, 0.0003407230000000011, 0.00034240300000000154, 0.0003401110000000006, 0.0003406520000000003, 0.00034242999999999774, 0.0003413050000000001, 0.00033986100000000033, 0.0003430560000000013, 0.0003420560000000003, 0.000343889, 0.00034352800000000266, 0.0003387919999999975, 0.00033984700000000423, 0.00034158299999999947, 0.0003420690000000004, 0.0003446530000000003, 0.00034047300000000086, 0.0003417920000000005, 0.00034441699999999964, 0.00034036200000000377, 0.00034213899999999825, 0.00034131899999999965, 0.00033981899999999815, 0.00034223599999999577, 0.000342292000000001, 0.0003438200000000016, 0.0003416810000000034, 0.0003424170000000046, 0.0003401800000000024, 0.00034009699999999754, 0.00034115199999999735, 0.0003418329999999997, 0.00033952799999999866, 0.0003445140000000041, 0.0003403480000000042, 0.00034394400000000575, 0.0003428470000000003]</msg>
<status status="PASS" starttime="20201110 08:36:52.197" endtime="20201110 08:36:52.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.192" endtime="20201110 08:36:52.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.202" endtime="20201110 08:36:52.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:52.205" endtime="20201110 08:36:52.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.204" endtime="20201110 08:36:52.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.200" endtime="20201110 08:36:52.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.810" endtime="20201110 08:36:52.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.810" endtime="20201110 08:36:52.226"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.235" endtime="20201110 08:36:52.272"></status>
</kw>
<msg timestamp="20201110 08:36:52.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.233" endtime="20201110 08:36:52.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.274" endtime="20201110 08:36:52.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.276" endtime="20201110 08:36:52.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.230" endtime="20201110 08:36:52.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.228" endtime="20201110 08:36:52.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.286" endtime="20201110 08:36:52.571"></status>
</kw>
<msg timestamp="20201110 08:36:52.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023849028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024192597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.285" endtime="20201110 08:36:52.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023849028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024192597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.575" endtime="20201110 08:36:52.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.583" endtime="20201110 08:36:52.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.282" endtime="20201110 08:36:52.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.280" endtime="20201110 08:36:52.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:52.589" level="INFO">${RESULT} = [{'time': 0.024192597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034356899999999843, 'source_diff': 0.00034356899999999843}, {'time': 0.024557792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:52.586" endtime="20201110 08:36:52.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:52.603" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:52.590" endtime="20201110 08:36:52.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.607" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:36:52.606" endtime="20201110 08:36:52.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.610" level="INFO">VALUE: [0.00034356899999999843, 0.0003382499999999983, 0.0003384170000000006, 0.0003417780000000009, 0.00034423600000000124, 0.0003436529999999993, 0.0003399719999999974, 0.0003389589999999998, 0.00033990200000000304, 0.0003444300000000032, 0.0003413199999999991, 0.0003435139999999996, 0.0003423889999999985, 0.0003404450000000017, 0.0003416390000000012, 0.0003438200000000016, 0.0003394580000000008, 0.00034258399999999994, 0.0003415140000000011, 0.00034176400000000134, 0.0003447500000000013, 0.0003437500000000038, 0.0003419580000000033, 0.0003444309999999992, 0.0003383480000000022, 0.00034358300000000147, 0.00034433399999999476, 0.0003394160000000021, 0.0003442639999999969, 0.00033906900000000434, 0.00033976399999999934, 0.0003404170000000026, 0.00034094400000000274, 0.00034170800000000306, 0.0003381390000000012, 0.00034204100000000126, 0.0003426109999999996, 0.0003445560000000028, 0.00033865300000000126, 0.00033850000000000546, 0.0003411529999999968, 0.00034392999999999924, 0.0003382779999999974, 0.0003414580000000028, 0.00033938900000000244, 0.0003432219999999972, 0.0003429449999999973, 0.00033954099999999876, 0.00034387500000000043, 0.00034331900000000165]</msg>
<status status="PASS" starttime="20201110 08:36:52.609" endtime="20201110 08:36:52.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.604" endtime="20201110 08:36:52.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.613" endtime="20201110 08:36:52.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:52.617" endtime="20201110 08:36:52.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.615" endtime="20201110 08:36:52.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.612" endtime="20201110 08:36:52.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.227" endtime="20201110 08:36:52.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.226" endtime="20201110 08:36:52.638"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.646" endtime="20201110 08:36:52.684"></status>
</kw>
<msg timestamp="20201110 08:36:52.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.645" endtime="20201110 08:36:52.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.685" endtime="20201110 08:36:52.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.688" endtime="20201110 08:36:52.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.642" endtime="20201110 08:36:52.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.640" endtime="20201110 08:36:52.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.698" endtime="20201110 08:36:52.991"></status>
</kw>
<msg timestamp="20201110 08:36:52.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024174028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024508944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.696" endtime="20201110 08:36:52.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024174028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024508944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.000" endtime="20201110 08:36:53.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.018" endtime="20201110 08:36:53.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.694" endtime="20201110 08:36:53.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.692" endtime="20201110 08:36:53.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:53.032" level="INFO">${RESULT} = [{'time': 0.024508944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003349160000000011, 'source_diff': 0.0003349160000000011}, {'time': 0.024874181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:53.025" endtime="20201110 08:36:53.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:53.059" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:53.034" endtime="20201110 08:36:53.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.063" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:36:53.062" endtime="20201110 08:36:53.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.066" level="INFO">VALUE: [0.0003349160000000011, 0.00034455599999999934, 0.00034455599999999934, 0.0003404720000000014, 0.0003417639999999979, 0.0003402500000000003, 0.0003438059999999986, 0.0003391389999999987, 0.00034158299999999947, 0.0003391659999999984, 0.0003396389999999992, 0.0003414719999999989, 0.0003406529999999998, 0.00034390300000000304, 0.0003383749999999984, 0.0003415000000000015, 0.0003419300000000007, 0.00034184700000000276, 0.0003396110000000001, 0.00034309700000000054, 0.0003395689999999979, 0.00033854099999999776, 0.0003402360000000007, 0.00034347199999999745, 0.0003395559999999978, 0.000338888999999995, 0.0003436250000000002, 0.00034198700000000193, 0.00034072200000000163, 0.00034356899999999496, 0.00034161100000000555, 0.00034263899999999875, 0.00034301399999999566, 0.0003418610000000058, 0.00033893100000000065, 0.00033813899999999425, 0.0003381250000000016, 0.00034015300000000276, 0.00034287499999999943, 0.00034402699999999675, 0.000340597000000005, 0.0003383190000000036, 0.0003408610000000048, 0.0003405140000000001, 0.00034159699999999904, 0.0003394999999999995, 0.000343583999999994, 0.0003413610000000053, 0.00034263899999999875, 0.0003389170000000011]</msg>
<status status="PASS" starttime="20201110 08:36:53.064" endtime="20201110 08:36:53.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.060" endtime="20201110 08:36:53.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.069" endtime="20201110 08:36:53.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:53.073" endtime="20201110 08:36:53.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.071" endtime="20201110 08:36:53.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.068" endtime="20201110 08:36:53.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.639" endtime="20201110 08:36:53.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.638" endtime="20201110 08:36:53.093"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.102" endtime="20201110 08:36:53.136"></status>
</kw>
<msg timestamp="20201110 08:36:53.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.101" endtime="20201110 08:36:53.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.137" endtime="20201110 08:36:53.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.140" endtime="20201110 08:36:53.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.098" endtime="20201110 08:36:53.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.096" endtime="20201110 08:36:53.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.150" endtime="20201110 08:36:53.436"></status>
</kw>
<msg timestamp="20201110 08:36:53.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020824194, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:53.148" endtime="20201110 08:36:53.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020824194, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:53.440" endtime="20201110 08:36:53.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.448" endtime="20201110 08:36:53.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.146" endtime="20201110 08:36:53.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.144" endtime="20201110 08:36:53.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:53.455" level="INFO">${RESULT} = [{'time': 0.020824194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003596940000000007, 'source_diff': 0.0003596940000000007}, {'time': 0.021189319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:53.452" endtime="20201110 08:36:53.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:53.469" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:53.456" endtime="20201110 08:36:53.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.474" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:36:53.473" endtime="20201110 08:36:53.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.476" level="INFO">VALUE: [0.0003596940000000007, 0.0003421940000000005, 0.0003383329999999997, 0.00033948699999999943, 0.00033794399999999974, 0.0003383610000000023, 0.00034226400000000184, 0.0003445140000000006, 0.00033898599999999945, 0.0003389719999999999, 0.0003402500000000003, 0.00033776399999999734, 0.00034012500000000015, 0.0003414590000000023, 0.00034313899999999925, 0.0003410689999999994, 0.000340888999999997, 0.00034305499999999836, 0.00034168099999999993, 0.0003391810000000009, 0.0003400139999999996, 0.0003419719999999994, 0.0003394450000000007, 0.0003418049999999971, 0.0003401529999999993, 0.00034, 0.0003400559999999983, 0.0003427499999999993, 0.000339097, 0.00033869499999999997, 0.0003397360000000002, 0.0003440560000000023, 0.0003442500000000043, 0.00033804199999999673, 0.00034042999999999574, 0.00033966700000000183, 0.0003389580000000003, 0.00034363899999999975, 0.0003399579999999944, 0.0003417780000000009, 0.00034072200000000163, 0.00034169499999999603, 0.00034437500000000093, 0.00034415200000000035, 0.00034358300000000147, 0.0003409580000000023, 0.0003419439999999968, 0.0003421249999999987, 0.000338999999999999, 0.00034219500000000347]</msg>
<status status="PASS" starttime="20201110 08:36:53.475" endtime="20201110 08:36:53.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.470" endtime="20201110 08:36:53.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.479" endtime="20201110 08:36:53.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:53.483" endtime="20201110 08:36:53.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.481" endtime="20201110 08:36:53.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.478" endtime="20201110 08:36:53.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.094" endtime="20201110 08:36:53.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.094" endtime="20201110 08:36:53.504"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.512" endtime="20201110 08:36:53.549"></status>
</kw>
<msg timestamp="20201110 08:36:53.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.511" endtime="20201110 08:36:53.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.551" endtime="20201110 08:36:53.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.556" endtime="20201110 08:36:53.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.508" endtime="20201110 08:36:53.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.506" endtime="20201110 08:36:53.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.572" endtime="20201110 08:36:53.880"></status>
</kw>
<msg timestamp="20201110 08:36:53.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022217028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022574722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.569" endtime="20201110 08:36:53.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022217028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022574722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.884" endtime="20201110 08:36:53.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.892" endtime="20201110 08:36:53.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.565" endtime="20201110 08:36:53.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.562" endtime="20201110 08:36:53.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:53.899" level="INFO">${RESULT} = [{'time': 0.022574722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003576939999999987, 'source_diff': 0.0003576939999999987}, {'time': 0.022939847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:53.896" endtime="20201110 08:36:53.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:53.913" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:53.900" endtime="20201110 08:36:53.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.917" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:36:53.916" endtime="20201110 08:36:53.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.919" level="INFO">VALUE: [0.0003576939999999987, 0.00033920800000000056, 0.0003388330000000002, 0.0003412360000000017, 0.00034327799999999895, 0.00034104199999999973, 0.0003401389999999997, 0.00033820799999999956, 0.00034099999999999756, 0.000339306000000001, 0.00034084700000000176, 0.00033994400000000174, 0.0003388060000000005, 0.0003417360000000022, 0.00034436100000000136, 0.0003437500000000003, 0.0003416109999999986, 0.000338597999999999, 0.00034088900000000047, 0.000337999999999998, 0.0003389719999999999, 0.000342791999999998, 0.0003438469999999978, 0.0003424719999999999, 0.00033862499999999865, 0.00034209699999999954, 0.0003410699999999989, 0.00034436100000000136, 0.00034098600000000145, 0.00034331900000000165, 0.0003422079999999966, 0.0003407500000000008, 0.00033890200000000203, 0.0003427500000000028, 0.00033838900000000144, 0.00034026399999999984, 0.0003429579999999974, 0.0003426520000000058, 0.0003380269999999977, 0.00033905499999999783, 0.0003409309999999957, 0.0003379719999999989, 0.00034323599999999677, 0.0003420140000000016, 0.00034330600000000155, 0.00033951400000000603, 0.0003390269999999987, 0.0003425690000000009, 0.0003427079999999971, 0.00033972200000000063]</msg>
<status status="PASS" starttime="20201110 08:36:53.918" endtime="20201110 08:36:53.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.913" endtime="20201110 08:36:53.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.923" endtime="20201110 08:36:53.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:53.927" endtime="20201110 08:36:53.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.925" endtime="20201110 08:36:53.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.921" endtime="20201110 08:36:53.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.505" endtime="20201110 08:36:53.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.504" endtime="20201110 08:36:53.947"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.956" endtime="20201110 08:36:53.990"></status>
</kw>
<msg timestamp="20201110 08:36:53.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.955" endtime="20201110 08:36:53.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.991" endtime="20201110 08:36:53.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.994" endtime="20201110 08:36:53.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.952" endtime="20201110 08:36:53.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.950" endtime="20201110 08:36:53.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.004" endtime="20201110 08:36:54.289"></status>
</kw>
<msg timestamp="20201110 08:36:54.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020574389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020906958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.002" endtime="20201110 08:36:54.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020574389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020906958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.293" endtime="20201110 08:36:54.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.301" endtime="20201110 08:36:54.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.000" endtime="20201110 08:36:54.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.998" endtime="20201110 08:36:54.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:54.307" level="INFO">${RESULT} = [{'time': 0.020906958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003325690000000013, 'source_diff': 0.0003325690000000013}, {'time': 0.021272083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:54.304" endtime="20201110 08:36:54.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:54.321" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:54.308" endtime="20201110 08:36:54.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.325" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:36:54.324" endtime="20201110 08:36:54.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.328" level="INFO">VALUE: [0.0003325690000000013, 0.0003443330000000022, 0.0003379160000000006, 0.00034036100000000083, 0.0003439170000000026, 0.00034227799999999795, 0.00033901400000000206, 0.0003430690000000014, 0.00034386100000000086, 0.0003384860000000024, 0.0003381389999999977, 0.0003407360000000012, 0.00034070900000000154, 0.0003440140000000001, 0.0003445140000000006, 0.0003392909999999985, 0.0003412079999999991, 0.00034144499999999925, 0.00034080599999999905, 0.0003437500000000003, 0.000343889, 0.00034140300000000054, 0.000338999999999999, 0.00034309700000000054, 0.00033834799999999873, 0.0003433330000000012, 0.0003387499999999988, 0.000339097, 0.00033948599999999995, 0.0003411390000000007, 0.00033944400000000124, 0.00034104199999999973, 0.0003384999999999985, 0.0003412230000000016, 0.00033916700000000133, 0.00034093100000000265, 0.0003419720000000029, 0.0003404300000000027, 0.00034198600000000245, 0.00034022200000000113, 0.00033931899999999765, 0.0003407769999999935, 0.0003393329999999972, 0.0003424720000000034, 0.0003435279999999957, 0.0003439999999999971, 0.0003423469999999998, 0.0003392359999999997, 0.0003435270000000032, 0.000338194]</msg>
<status status="PASS" starttime="20201110 08:36:54.326" endtime="20201110 08:36:54.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.322" endtime="20201110 08:36:54.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.331" endtime="20201110 08:36:54.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:54.335" endtime="20201110 08:36:54.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.333" endtime="20201110 08:36:54.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.330" endtime="20201110 08:36:54.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.948" endtime="20201110 08:36:54.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.948" endtime="20201110 08:36:54.356"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.365" endtime="20201110 08:36:54.403"></status>
</kw>
<msg timestamp="20201110 08:36:54.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.363" endtime="20201110 08:36:54.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.404" endtime="20201110 08:36:54.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.407" endtime="20201110 08:36:54.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.361" endtime="20201110 08:36:54.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.358" endtime="20201110 08:36:54.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.417" endtime="20201110 08:36:54.721"></status>
</kw>
<msg timestamp="20201110 08:36:54.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024283819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024624042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.415" endtime="20201110 08:36:54.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024283819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024624042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.725" endtime="20201110 08:36:54.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.733" endtime="20201110 08:36:54.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.413" endtime="20201110 08:36:54.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.411" endtime="20201110 08:36:54.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:54.739" level="INFO">${RESULT} = [{'time': 0.024624042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034022299999999714, 'source_diff': 0.00034022299999999714}, {'time': 0.024989389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:54.736" endtime="20201110 08:36:54.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:54.754" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:54.740" endtime="20201110 08:36:54.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.758" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:36:54.757" endtime="20201110 08:36:54.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.761" level="INFO">VALUE: [0.00034022299999999714, 0.0003442080000000021, 0.00034136100000000183, 0.00034002799999999916, 0.0003381800000000004, 0.000340888000000001, 0.00034116699999999986, 0.00034340299999999907, 0.00034170899999999907, 0.00034341699999999864, 0.000343000000000003, 0.00034281900000000115, 0.00034394500000000175, 0.0003394720000000004, 0.00034450000000000106, 0.0003386800000000009, 0.00034173599999999874, 0.0003415270000000012, 0.00034104100000000026, 0.00034044400000000224, 0.0003440700000000019, 0.00033902799999999816, 0.0003433200000000011, 0.00034331900000000165, 0.00034330600000000155, 0.0003422500000000023, 0.0003403610000000043, 0.0003392499999999993, 0.00034280499999999464, 0.0003390139999999986, 0.00034072200000000163, 0.00033838900000000144, 0.00033954199999999823, 0.0003412780000000004, 0.00033876399999999834, 0.0003439729999999974, 0.00034406899999999546, 0.0003409450000000022, 0.00034155500000000033, 0.0003397779999999989, 0.0003408049999999996, 0.00033826399999999784, 0.00034297300000000336, 0.0003423200000000001, 0.0003398610000000038, 0.0003387779999999979, 0.00034066600000000336, 0.000338999999999999, 0.00034005499999999883, 0.00034186099999999886]</msg>
<status status="PASS" starttime="20201110 08:36:54.759" endtime="20201110 08:36:54.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.755" endtime="20201110 08:36:54.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.764" endtime="20201110 08:36:54.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:54.768" endtime="20201110 08:36:54.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.766" endtime="20201110 08:36:54.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.763" endtime="20201110 08:36:54.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.357" endtime="20201110 08:36:54.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.356" endtime="20201110 08:36:54.789"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.797" endtime="20201110 08:36:54.834"></status>
</kw>
<msg timestamp="20201110 08:36:54.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.796" endtime="20201110 08:36:54.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.836" endtime="20201110 08:36:54.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.838" endtime="20201110 08:36:54.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.793" endtime="20201110 08:36:54.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.791" endtime="20201110 08:36:54.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.848" endtime="20201110 08:36:55.134"></status>
</kw>
<msg timestamp="20201110 08:36:55.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023306653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023664333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.847" endtime="20201110 08:36:55.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023306653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023664333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.138" endtime="20201110 08:36:55.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.146" endtime="20201110 08:36:55.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.844" endtime="20201110 08:36:55.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.842" endtime="20201110 08:36:55.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:55.153" level="INFO">${RESULT} = [{'time': 0.023664333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003576799999999991, 'source_diff': 0.0003576799999999991}, {'time': 0.024029389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:55.149" endtime="20201110 08:36:55.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:55.166" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:55.154" endtime="20201110 08:36:55.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.171" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:36:55.170" endtime="20201110 08:36:55.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.173" level="INFO">VALUE: [0.0003576799999999991, 0.0003425560000000008, 0.0003420699999999999, 0.00034208299999999997, 0.0003421940000000005, 0.0003436250000000002, 0.00034120800000000256, 0.0003413199999999991, 0.00034122199999999867, 0.00034158299999999947, 0.00034044499999999825, 0.0003401389999999997, 0.0003443890000000005, 0.0003434720000000009, 0.00034081899999999915, 0.00033997300000000036, 0.00034140200000000107, 0.0003415139999999976, 0.00034441600000000017, 0.0003418469999999993, 0.0003384160000000011, 0.0003416119999999981, 0.00034313899999999925, 0.0003414439999999963, 0.0003416249999999982, 0.0003439309999999987, 0.0003407360000000012, 0.00034336100000000036, 0.00034237499999999893, 0.0003439579999999984, 0.00034279199999999455, 0.00034009699999999754, 0.00034026399999999984, 0.0003401669999999954, 0.00033882000000000356, 0.00033870800000000006, 0.00033926399999999884, 0.00033819499999999947, 0.0003415140000000011, 0.0003409720000000019, 0.0003420140000000016, 0.0003428470000000003, 0.0003441250000000007, 0.0003427079999999971, 0.00033893100000000065, 0.0003400139999999996, 0.0003446389999999938, 0.0003441529999999998, 0.0003396800000000019, 0.00034318099999999796]</msg>
<status status="PASS" starttime="20201110 08:36:55.172" endtime="20201110 08:36:55.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.167" endtime="20201110 08:36:55.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.177" endtime="20201110 08:36:55.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:55.180" endtime="20201110 08:36:55.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.179" endtime="20201110 08:36:55.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.175" endtime="20201110 08:36:55.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.790" endtime="20201110 08:36:55.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.789" endtime="20201110 08:36:55.201"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.209" endtime="20201110 08:36:55.246"></status>
</kw>
<msg timestamp="20201110 08:36:55.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:55.208" endtime="20201110 08:36:55.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:55.247" endtime="20201110 08:36:55.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.250" endtime="20201110 08:36:55.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.205" endtime="20201110 08:36:55.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.203" endtime="20201110 08:36:55.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.260" endtime="20201110 08:36:55.546"></status>
</kw>
<msg timestamp="20201110 08:36:55.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023021861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023367389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.258" endtime="20201110 08:36:55.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023021861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023367389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.550" endtime="20201110 08:36:55.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.558" endtime="20201110 08:36:55.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.256" endtime="20201110 08:36:55.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.254" endtime="20201110 08:36:55.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:55.565" level="INFO">${RESULT} = [{'time': 0.023367389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003455279999999977, 'source_diff': 0.0003455279999999977}, {'time': 0.023732778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:55.561" endtime="20201110 08:36:55.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:55.578" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:55.566" endtime="20201110 08:36:55.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.583" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:36:55.582" endtime="20201110 08:36:55.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.585" level="INFO">VALUE: [0.0003455279999999977, 0.00034390299999999957, 0.00034062500000000065, 0.0003416660000000009, 0.00034359699999999757, 0.00033911199999999905, 0.0003398190000000016, 0.00034341699999999864, 0.00034419499999999853, 0.00034088900000000047, 0.0003389309999999972, 0.0003406390000000002, 0.00033988900000000294, 0.0003400139999999996, 0.0003392359999999997, 0.0003427629999999994, 0.0003387910000000015, 0.00034315199999999935, 0.0003437500000000003, 0.0003416249999999982, 0.00034341699999999864, 0.0003438049999999991, 0.00034226400000000184, 0.0003448470000000023, 0.0003400830000000049, 0.0003426109999999996, 0.0003435980000000005, 0.00034133300000000616, 0.000338999999999999, 0.0003400830000000049, 0.00034009699999999754, 0.0003419030000000045, 0.00034451399999999716, 0.00033955600000000474, 0.00034043100000000215, 0.00033877800000000485, 0.0003414729999999949, 0.0003446530000000003, 0.0003412780000000004, 0.00034452699999999725, 0.00034315199999999935, 0.00034237499999999893, 0.0003382499999999983, 0.0003415000000000015, 0.000342292000000001, 0.00034169399999999656, 0.00034302800000000216, 0.0003442639999999969, 0.0003413199999999991, 0.0003405559999999988]</msg>
<status status="PASS" starttime="20201110 08:36:55.584" endtime="20201110 08:36:55.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.579" endtime="20201110 08:36:55.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.589" endtime="20201110 08:36:55.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:55.592" endtime="20201110 08:36:55.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.591" endtime="20201110 08:36:55.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.587" endtime="20201110 08:36:55.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.202" endtime="20201110 08:36:55.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.201" endtime="20201110 08:36:55.613"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.621" endtime="20201110 08:36:55.658"></status>
</kw>
<msg timestamp="20201110 08:36:55.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:55.620" endtime="20201110 08:36:55.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:55.659" endtime="20201110 08:36:55.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.662" endtime="20201110 08:36:55.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.617" endtime="20201110 08:36:55.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.615" endtime="20201110 08:36:55.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.672" endtime="20201110 08:36:55.957"></status>
</kw>
<msg timestamp="20201110 08:36:55.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023088806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023428611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.670" endtime="20201110 08:36:55.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023088806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023428611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.961" endtime="20201110 08:36:55.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.969" endtime="20201110 08:36:55.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.667" endtime="20201110 08:36:55.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.666" endtime="20201110 08:36:55.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:55.976" level="INFO">${RESULT} = [{'time': 0.023428611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003398049999999986, 'source_diff': 0.0003398049999999986}, {'time': 0.023793889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:55.972" endtime="20201110 08:36:55.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:55.989" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:55.977" endtime="20201110 08:36:55.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.994" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:36:55.993" endtime="20201110 08:36:55.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.996" level="INFO">VALUE: [0.0003398049999999986, 0.0003423469999999998, 0.00033870800000000006, 0.0003391519999999988, 0.00034116699999999986, 0.0003446110000000016, 0.00034180600000000005, 0.0003402779999999994, 0.0003400269999999997, 0.00033936099999999983, 0.00034391699999999914, 0.000339790999999999, 0.00033991599999999914, 0.0003384170000000006, 0.00034136099999999836, 0.00033856999999999984, 0.00034392999999999924, 0.00034305500000000183, 0.00034272200000000017, 0.0003413199999999991, 0.00034384800000000076, 0.0003382640000000013, 0.00033926399999999884, 0.0003423330000000002, 0.00034326300000000337, 0.0003436110000000006, 0.00034154200000000023, 0.0003397079999999941, 0.0003417360000000022, 0.00034068099999999546, 0.00033841699999999364, 0.00034334800000000026, 0.00033820799999999956, 0.0003392499999999993, 0.00034395899999999785, 0.00034037500000000387, 0.00033837500000000187, 0.00034392999999999924, 0.0003402779999999994, 0.00033802799999999716, 0.0003412779999999935, 0.00034409700000000154, 0.00034409700000000154, 0.000341888999999998, 0.0003443330000000022, 0.0003423059999999936, 0.0003389030000000015, 0.0003428330000000007, 0.0003385139999999981, 0.00033970900000000054]</msg>
<status status="PASS" starttime="20201110 08:36:55.995" endtime="20201110 08:36:55.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.990" endtime="20201110 08:36:55.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.000" endtime="20201110 08:36:56.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:56.004" endtime="20201110 08:36:56.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.002" endtime="20201110 08:36:56.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.998" endtime="20201110 08:36:56.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.614" endtime="20201110 08:36:56.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.613" endtime="20201110 08:36:56.024"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.033" endtime="20201110 08:36:56.069"></status>
</kw>
<msg timestamp="20201110 08:36:56.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.032" endtime="20201110 08:36:56.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.071" endtime="20201110 08:36:56.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.073" endtime="20201110 08:36:56.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.029" endtime="20201110 08:36:56.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.027" endtime="20201110 08:36:56.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.089" endtime="20201110 08:36:56.384"></status>
</kw>
<msg timestamp="20201110 08:36:56.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023539944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023882556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.086" endtime="20201110 08:36:56.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023539944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023882556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.388" endtime="20201110 08:36:56.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.396" endtime="20201110 08:36:56.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.081" endtime="20201110 08:36:56.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.078" endtime="20201110 08:36:56.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:56.403" level="INFO">${RESULT} = [{'time': 0.023882556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003426119999999991, 'source_diff': 0.0003426119999999991}, {'time': 0.024247806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:56.400" endtime="20201110 08:36:56.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:56.418" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:56.404" endtime="20201110 08:36:56.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.422" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:36:56.421" endtime="20201110 08:36:56.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.425" level="INFO">VALUE: [0.0003426119999999991, 0.00033990299999999904, 0.00034030599999999855, 0.00034208399999999944, 0.00033948599999999995, 0.0003438049999999991, 0.00033898599999999945, 0.00034187499999999843, 0.00033962499999999965, 0.0003433470000000008, 0.0003391529999999983, 0.0003434170000000021, 0.00033952700000000266, 0.00034227699999999847, 0.00034066699999999936, 0.0003414309999999997, 0.0003411530000000003, 0.0003414300000000002, 0.0003401110000000006, 0.0003390689999999974, 0.0003415970000000025, 0.0003418339999999992, 0.0003416109999999986, 0.0003397360000000002, 0.00034347199999999745, 0.0003429579999999974, 0.0003407500000000008, 0.000342000000000002, 0.0003432360000000037, 0.00034423599999999777, 0.00034034700000000473, 0.00033984700000000423, 0.0003405699999999984, 0.0003426379999999993, 0.00034258300000000047, 0.0003384449999999997, 0.0003382359999999987, 0.00034301399999999566, 0.000342292000000001, 0.000343679999999999, 0.00034381900000000215, 0.00034058299999999847, 0.0003426659999999984, 0.00034461199999999415, 0.00034205500000000083, 0.0003441659999999999, 0.00034176400000000134, 0.00033888900000000194, 0.0003414160000000041, 0.00034269500000000397]</msg>
<status status="PASS" starttime="20201110 08:36:56.423" endtime="20201110 08:36:56.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.419" endtime="20201110 08:36:56.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.428" endtime="20201110 08:36:56.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:56.432" endtime="20201110 08:36:56.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.430" endtime="20201110 08:36:56.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.427" endtime="20201110 08:36:56.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.025" endtime="20201110 08:36:56.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.025" endtime="20201110 08:36:56.453"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.461" endtime="20201110 08:36:56.499"></status>
</kw>
<msg timestamp="20201110 08:36:56.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.460" endtime="20201110 08:36:56.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.501" endtime="20201110 08:36:56.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.504" endtime="20201110 08:36:56.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.457" endtime="20201110 08:36:56.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.455" endtime="20201110 08:36:56.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.514" endtime="20201110 08:36:56.799"></status>
</kw>
<msg timestamp="20201110 08:36:56.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.512" endtime="20201110 08:36:56.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.803" endtime="20201110 08:36:56.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.811" endtime="20201110 08:36:56.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.510" endtime="20201110 08:36:56.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.508" endtime="20201110 08:36:56.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:56.818" level="INFO">${RESULT} = [{'time': 0.022670611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000342292000000001, 'source_diff': 0.000342292000000001}, {'time': 0.023035792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:56.814" endtime="20201110 08:36:56.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:56.831" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:56.819" endtime="20201110 08:36:56.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.836" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:36:56.835" endtime="20201110 08:36:56.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.838" level="INFO">VALUE: [0.000342292000000001, 0.00034354199999999877, 0.0003417920000000005, 0.000341097000000002, 0.0003439579999999984, 0.0003443189999999992, 0.00034067999999999946, 0.000341000000000001, 0.0003385129999999986, 0.0003436529999999993, 0.000340598000000001, 0.00034038899999999997, 0.00033884799999999923, 0.00033812499999999815, 0.00034117999999999996, 0.00034422300000000114, 0.0003406529999999998, 0.000343986000000001, 0.00034234799999999926, 0.00034440300000000007, 0.00034012500000000015, 0.000339403000000002, 0.0003436120000000001, 0.00033922200000000013, 0.000340403000000003, 0.0003384999999999985, 0.0003415979999999985, 0.0003426810000000044, 0.0003383049999999971, 0.00033833300000000316, 0.0003440419999999958, 0.0003399590000000008, 0.00034315300000000576, 0.0003401390000000032, 0.00034366700000000583, 0.0003421109999999991, 0.0003389719999999999, 0.0003385559999999968, 0.00034287499999999943, 0.00034002799999999916, 0.00034090299999999657, 0.00033798599999999845, 0.00034387500000000043, 0.00034055499999999933, 0.0003443340000000017, 0.00034241599999999817, 0.0003383610000000023, 0.00033938900000000244, 0.0003429309999999977, 0.0003385700000000033]</msg>
<status status="PASS" starttime="20201110 08:36:56.837" endtime="20201110 08:36:56.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.832" endtime="20201110 08:36:56.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.842" endtime="20201110 08:36:56.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:56.845" endtime="20201110 08:36:56.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.844" endtime="20201110 08:36:56.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.840" endtime="20201110 08:36:56.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.454" endtime="20201110 08:36:56.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.453" endtime="20201110 08:36:56.866"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.874" endtime="20201110 08:36:56.910"></status>
</kw>
<msg timestamp="20201110 08:36:56.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.873" endtime="20201110 08:36:56.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.913" endtime="20201110 08:36:56.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.919" endtime="20201110 08:36:56.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.870" endtime="20201110 08:36:56.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.868" endtime="20201110 08:36:56.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.939" endtime="20201110 08:36:57.232"></status>
</kw>
<msg timestamp="20201110 08:36:57.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021069792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021400889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.936" endtime="20201110 08:36:57.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021069792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021400889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:57.236" endtime="20201110 08:36:57.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.244" endtime="20201110 08:36:57.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.930" endtime="20201110 08:36:57.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.927" endtime="20201110 08:36:57.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:57.251" level="INFO">${RESULT} = [{'time': 0.021400889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033109699999999895, 'source_diff': 0.00033109699999999895}, {'time': 0.021766167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:57.248" endtime="20201110 08:36:57.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:57.264" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:57.252" endtime="20201110 08:36:57.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.269" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:36:57.268" endtime="20201110 08:36:57.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.271" level="INFO">VALUE: [0.00033109699999999895, 0.00034455599999999934, 0.00034299999999999956, 0.0003390550000000013, 0.00033866600000000135, 0.00034130599999999955, 0.00034172199999999917, 0.0003442640000000004, 0.0003421249999999987, 0.0003434439999999983, 0.0003436110000000006, 0.00034, 0.0003395139999999991, 0.00033945799999999735, 0.0003442500000000008, 0.0003404580000000018, 0.0003381250000000016, 0.0003410689999999994, 0.0003440140000000001, 0.00033820799999999956, 0.00034445899999999835, 0.0003415970000000025, 0.0003432499999999998, 0.00033984700000000076, 0.0003436120000000001, 0.00034309700000000054, 0.0003402779999999994, 0.000343889, 0.00033870800000000006, 0.00034015300000000276, 0.0003383480000000022, 0.00033802700000000463, 0.00034237500000000587, 0.00034136099999999836, 0.000340888999999997, 0.00034069499999999503, 0.0003423200000000001, 0.0003405140000000001, 0.00034191699999999714, 0.0003410689999999994, 0.0003397919999999985, 0.0003435700000000014, 0.0003415689999999999, 0.0003392779999999984, 0.0003442500000000043, 0.00034369499999999803, 0.00034098600000000145, 0.0003414579999999959, 0.0003391659999999949, 0.0003425419999999943]</msg>
<status status="PASS" starttime="20201110 08:36:57.270" endtime="20201110 08:36:57.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.265" endtime="20201110 08:36:57.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.279" endtime="20201110 08:36:57.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:57.282" endtime="20201110 08:36:57.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.281" endtime="20201110 08:36:57.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.277" endtime="20201110 08:36:57.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.867" endtime="20201110 08:36:57.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.866" endtime="20201110 08:36:57.303"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.311" endtime="20201110 08:36:57.346"></status>
</kw>
<msg timestamp="20201110 08:36:57.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.310" endtime="20201110 08:36:57.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.347" endtime="20201110 08:36:57.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.350" endtime="20201110 08:36:57.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.307" endtime="20201110 08:36:57.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.305" endtime="20201110 08:36:57.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.359" endtime="20201110 08:36:57.644"></status>
</kw>
<msg timestamp="20201110 08:36:57.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02113725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021475139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:57.358" endtime="20201110 08:36:57.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02113725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021475139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:57.648" endtime="20201110 08:36:57.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.656" endtime="20201110 08:36:57.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.355" endtime="20201110 08:36:57.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.354" endtime="20201110 08:36:57.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:57.662" level="INFO">${RESULT} = [{'time': 0.021475139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033788900000000094, 'source_diff': 0.00033788900000000094}, {'time': 0.021840333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:57.659" endtime="20201110 08:36:57.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:57.676" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:57.663" endtime="20201110 08:36:57.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.680" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:36:57.679" endtime="20201110 08:36:57.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.683" level="INFO">VALUE: [0.00033788900000000094, 0.00033972200000000063, 0.00034290299999999857, 0.00034116699999999986, 0.00033905499999999783, 0.0003427499999999993, 0.00033976399999999934, 0.0003415689999999999, 0.00033820899999999904, 0.00033907000000000034, 0.0003397640000000028, 0.00034308300000000097, 0.00033954199999999823, 0.0003394720000000004, 0.00033936099999999983, 0.0003422639999999984, 0.00034208299999999997, 0.00034323600000000024, 0.0003424310000000007, 0.00034138900000000097, 0.0003444439999999993, 0.00033790299999999704, 0.00034415200000000035, 0.0003384719999999994, 0.00034358300000000147, 0.00033833399999999916, 0.0003396110000000001, 0.000341985999999999, 0.00033836200000000177, 0.00034088900000000394, 0.0003440979999999941, 0.0003387359999999992, 0.00033783400000000213, 0.0003439449999999983, 0.0003393469999999968, 0.00034369499999999803, 0.0003444869999999975, 0.0003405830000000054, 0.0003444579999999989, 0.0003419449999999963, 0.0003409450000000022, 0.00033955500000000527, 0.00034423599999999777, 0.00034376400000000334, 0.0003421249999999987, 0.0003438340000000012, 0.00034387500000000043, 0.0003382779999999974, 0.0003391390000000022, 0.0003425560000000008]</msg>
<status status="PASS" starttime="20201110 08:36:57.681" endtime="20201110 08:36:57.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.677" endtime="20201110 08:36:57.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.686" endtime="20201110 08:36:57.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:57.690" endtime="20201110 08:36:57.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.688" endtime="20201110 08:36:57.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.685" endtime="20201110 08:36:57.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.304" endtime="20201110 08:36:57.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.303" endtime="20201110 08:36:57.710"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.719" endtime="20201110 08:36:57.758"></status>
</kw>
<msg timestamp="20201110 08:36:57.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.717" endtime="20201110 08:36:57.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.760" endtime="20201110 08:36:57.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.762" endtime="20201110 08:36:57.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.715" endtime="20201110 08:36:57.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.713" endtime="20201110 08:36:57.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.772" endtime="20201110 08:36:58.059"></status>
</kw>
<msg timestamp="20201110 08:36:58.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020862014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:57.771" endtime="20201110 08:36:58.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020862014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.063" endtime="20201110 08:36:58.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.071" endtime="20201110 08:36:58.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.768" endtime="20201110 08:36:58.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.766" endtime="20201110 08:36:58.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:58.077" level="INFO">${RESULT} = [{'time': 0.020862014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034236100000000283, 'source_diff': 0.00034236100000000283}, {'time': 0.021227097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:58.074" endtime="20201110 08:36:58.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:58.092" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:58.078" endtime="20201110 08:36:58.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.096" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:36:58.095" endtime="20201110 08:36:58.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.098" level="INFO">VALUE: [0.00034236100000000283, 0.0003417780000000009, 0.0003405000000000005, 0.00034390299999999957, 0.0003443189999999992, 0.0003415559999999998, 0.00033856900000000037, 0.0003390839999999999, 0.00034127700000000094, 0.0003445140000000006, 0.00034304199999999826, 0.0003431249999999997, 0.0003396389999999992, 0.00034299999999999956, 0.0003438470000000013, 0.0003423889999999985, 0.00033984700000000076, 0.0003401110000000006, 0.00034245800000000035, 0.000340791, 0.0003409169999999996, 0.0003409309999999992, 0.00034126400000000084, 0.00033969500000000097, 0.00034084800000000123, 0.0003399450000000012, 0.0003388619999999988, 0.00033856900000000037, 0.0003395840000000004, 0.0003433330000000012, 0.0003421390000000052, 0.0003409720000000019, 0.00034341699999999864, 0.00033898599999999945, 0.00034337499999999993, 0.0003403329999999982, 0.0003439859999999975, 0.00033968099999999446, 0.00033976399999999934, 0.00034169499999999603, 0.0003424720000000034, 0.0003402360000000007, 0.0003406250000000041, 0.0003415279999999937, 0.00034330499999999514, 0.00034181900000000015, 0.0003386940000000005, 0.0003417360000000022, 0.00034319399999999806, 0.0003441250000000007]</msg>
<status status="PASS" starttime="20201110 08:36:58.097" endtime="20201110 08:36:58.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.093" endtime="20201110 08:36:58.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.102" endtime="20201110 08:36:58.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:58.105" endtime="20201110 08:36:58.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.104" endtime="20201110 08:36:58.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.100" endtime="20201110 08:36:58.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.711" endtime="20201110 08:36:58.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.711" endtime="20201110 08:36:58.126"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.135" endtime="20201110 08:36:58.170"></status>
</kw>
<msg timestamp="20201110 08:36:58.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.133" endtime="20201110 08:36:58.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.172" endtime="20201110 08:36:58.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.174" endtime="20201110 08:36:58.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.131" endtime="20201110 08:36:58.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.129" endtime="20201110 08:36:58.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.184" endtime="20201110 08:36:58.486"></status>
</kw>
<msg timestamp="20201110 08:36:58.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022149569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.183" endtime="20201110 08:36:58.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022149569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.495" endtime="20201110 08:36:58.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.505" endtime="20201110 08:36:58.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.180" endtime="20201110 08:36:58.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.178" endtime="20201110 08:36:58.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:58.512" level="INFO">${RESULT} = [{'time': 0.022149569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034213800000000225, 'source_diff': 0.00034213800000000225}, {'time': 0.022514958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:58.509" endtime="20201110 08:36:58.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:58.526" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:58.513" endtime="20201110 08:36:58.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.531" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:36:58.530" endtime="20201110 08:36:58.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.533" level="INFO">VALUE: [0.00034213800000000225, 0.00034377699999999997, 0.00034350000000000006, 0.0003440829999999985, 0.0003397499999999998, 0.00033948599999999995, 0.0003405000000000005, 0.0003411390000000007, 0.0003419440000000003, 0.0003386389999999982, 0.00033969500000000097, 0.00033958300000000094, 0.0003424310000000007, 0.00034020800000000156, 0.0003431530000000023, 0.00033959699999999704, 0.0003421109999999991, 0.00034318099999999796, 0.0003415979999999985, 0.00034400000000000056, 0.0003392499999999993, 0.00033951400000000256, 0.00034031899999999865, 0.00034255500000000133, 0.0003389170000000011, 0.00034454199999999977, 0.0003432360000000037, 0.0003413889999999975, 0.0003435560000000018, 0.0003443050000000031, 0.0003405000000000005, 0.00034287499999999943, 0.00033993100000000165, 0.0003390700000000038, 0.0003438340000000012, 0.0003392359999999997, 0.0003435560000000018, 0.0003430690000000014, 0.0003401669999999954, 0.00034202800000000116, 0.0003383610000000023, 0.00033829100000000445, 0.000343292000000002, 0.00034397199999999795, 0.0003401810000000019, 0.0003389300000000012, 0.00034004199999999873, 0.00033983400000000413, 0.0003436529999999993, 0.00033806900000000334]</msg>
<status status="PASS" starttime="20201110 08:36:58.532" endtime="20201110 08:36:58.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.527" endtime="20201110 08:36:58.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.537" endtime="20201110 08:36:58.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:58.541" endtime="20201110 08:36:58.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.539" endtime="20201110 08:36:58.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.535" endtime="20201110 08:36:58.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.127" endtime="20201110 08:36:58.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.126" endtime="20201110 08:36:58.561"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.570" endtime="20201110 08:36:58.607"></status>
</kw>
<msg timestamp="20201110 08:36:58.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.568" endtime="20201110 08:36:58.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.608" endtime="20201110 08:36:58.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.611" endtime="20201110 08:36:58.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.566" endtime="20201110 08:36:58.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.564" endtime="20201110 08:36:58.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.621" endtime="20201110 08:36:58.906"></status>
</kw>
<msg timestamp="20201110 08:36:58.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023659611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024016597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.619" endtime="20201110 08:36:58.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023659611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024016597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.910" endtime="20201110 08:36:58.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.918" endtime="20201110 08:36:58.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.617" endtime="20201110 08:36:58.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.615" endtime="20201110 08:36:58.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:58.924" level="INFO">${RESULT} = [{'time': 0.024016597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003569860000000001, 'source_diff': 0.0003569860000000001}, {'time': 0.024381972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:58.921" endtime="20201110 08:36:58.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:58.938" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:58.925" endtime="20201110 08:36:58.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.943" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:36:58.942" endtime="20201110 08:36:58.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.945" level="INFO">VALUE: [0.0003569860000000001, 0.0003421659999999979, 0.0003405140000000001, 0.0003392359999999997, 0.0003427500000000028, 0.0003386109999999991, 0.0003405560000000023, 0.000339194000000001, 0.0003437639999999999, 0.00033823700000000165, 0.0003437089999999976, 0.00033972200000000063, 0.00034219399999999706, 0.000338597999999999, 0.00034413900000000025, 0.0003412360000000017, 0.0003380550000000003, 0.00033870899999999954, 0.00033875000000000224, 0.0003429720000000004, 0.00034440300000000007, 0.00034436100000000136, 0.0003426529999999983, 0.0003394450000000007, 0.00034031899999999865, 0.00034158299999999947, 0.000338403000000001, 0.0003393610000000033, 0.00034319399999999806, 0.00033955499999999833, 0.00034365199999999985, 0.00034237499999999893, 0.0003385139999999981, 0.0003397919999999985, 0.0003430130000000031, 0.0003442779999999965, 0.0003397360000000002, 0.00034269500000000397, 0.00033838900000000144, 0.0003433340000000007, 0.00034297300000000336, 0.00034247300000000286, 0.0003411249999999977, 0.00033866700000000083, 0.00034104199999999973, 0.00034255500000000133, 0.000342888999999999, 0.0003431249999999997, 0.000343000000000003, 0.0003380970000000025]</msg>
<status status="PASS" starttime="20201110 08:36:58.944" endtime="20201110 08:36:58.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.939" endtime="20201110 08:36:58.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.948" endtime="20201110 08:36:58.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:58.952" endtime="20201110 08:36:58.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.950" endtime="20201110 08:36:58.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.947" endtime="20201110 08:36:58.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.562" endtime="20201110 08:36:58.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.562" endtime="20201110 08:36:58.973"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.981" endtime="20201110 08:36:59.019"></status>
</kw>
<msg timestamp="20201110 08:36:59.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.980" endtime="20201110 08:36:59.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.021" endtime="20201110 08:36:59.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.023" endtime="20201110 08:36:59.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.977" endtime="20201110 08:36:59.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.975" endtime="20201110 08:36:59.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.033" endtime="20201110 08:36:59.318"></status>
</kw>
<msg timestamp="20201110 08:36:59.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024409694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024762347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.031" endtime="20201110 08:36:59.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024409694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024762347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.322" endtime="20201110 08:36:59.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.330" endtime="20201110 08:36:59.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.029" endtime="20201110 08:36:59.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.027" endtime="20201110 08:36:59.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:59.337" level="INFO">${RESULT} = [{'time': 0.024762347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003526530000000014, 'source_diff': 0.0003526530000000014}, {'time': 0.025127639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:59.333" endtime="20201110 08:36:59.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:59.350" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:59.338" endtime="20201110 08:36:59.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.355" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:36:59.354" endtime="20201110 08:36:59.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.357" level="INFO">VALUE: [0.0003526530000000014, 0.0003416949999999995, 0.00034363899999999975, 0.00034173599999999874, 0.0003404169999999991, 0.000342292000000001, 0.0003382770000000014, 0.0003386940000000005, 0.0003409169999999996, 0.00034248600000000295, 0.00034311200000000305, 0.00034172199999999917, 0.0003415130000000016, 0.0003402780000000029, 0.00034345899999999735, 0.0003426950000000005, 0.0003412360000000017, 0.0003424310000000007, 0.00033988899999999947, 0.0003409309999999957, 0.0003402370000000002, 0.00034055499999999933, 0.00034354100000000276, 0.0003404590000000013, 0.0003383610000000023, 0.0003395410000000057, 0.000338403000000001, 0.00033804099999999726, 0.00033948599999999995, 0.0003390139999999986, 0.00034036099999999736, 0.00034419499999999853, 0.00034290299999999857, 0.00034290299999999857, 0.0003443890000000005, 0.0003395139999999991, 0.0003429450000000042, 0.0003402360000000007, 0.00034463900000000075, 0.00033866700000000083, 0.00034076300000000087, 0.0003410140000000006, 0.0003386390000000017, 0.0003390689999999974, 0.00034341699999999864, 0.000339194000000001, 0.00033977699999999944, 0.0003444999999999976, 0.00034440300000000007, 0.0003430690000000014]</msg>
<status status="PASS" starttime="20201110 08:36:59.356" endtime="20201110 08:36:59.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.351" endtime="20201110 08:36:59.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.361" endtime="20201110 08:36:59.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:59.364" endtime="20201110 08:36:59.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.362" endtime="20201110 08:36:59.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.359" endtime="20201110 08:36:59.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.974" endtime="20201110 08:36:59.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.973" endtime="20201110 08:36:59.385"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.393" endtime="20201110 08:36:59.431"></status>
</kw>
<msg timestamp="20201110 08:36:59.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.392" endtime="20201110 08:36:59.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.433" endtime="20201110 08:36:59.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.435" endtime="20201110 08:36:59.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.389" endtime="20201110 08:36:59.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.387" endtime="20201110 08:36:59.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.445" endtime="20201110 08:36:59.731"></status>
</kw>
<msg timestamp="20201110 08:36:59.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024295472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024633597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.444" endtime="20201110 08:36:59.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024295472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024633597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.735" endtime="20201110 08:36:59.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.743" endtime="20201110 08:36:59.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.441" endtime="20201110 08:36:59.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.439" endtime="20201110 08:36:59.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:59.750" level="INFO">${RESULT} = [{'time': 0.024633597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003381250000000016, 'source_diff': 0.0003381250000000016}, {'time': 0.024998972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:59.746" endtime="20201110 08:36:59.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:59.764" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:36:59.751" endtime="20201110 08:36:59.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.769" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:36:59.768" endtime="20201110 08:36:59.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.771" level="INFO">VALUE: [0.0003381250000000016, 0.00034094400000000274, 0.00034290299999999857, 0.0003432639999999994, 0.00033958300000000094, 0.00034158299999999947, 0.00033884799999999923, 0.00034363899999999975, 0.0003436380000000003, 0.0003424859999999995, 0.00034292999999999824, 0.00034418099999999896, 0.000338194, 0.00033888900000000194, 0.0003431530000000023, 0.0003422080000000001, 0.00033948599999999995, 0.00033870800000000006, 0.000342888999999999, 0.00034205599999999683, 0.0003417219999999957, 0.00034154100000000076, 0.0003405559999999988, 0.00034170900000000254, 0.0003412219999999952, 0.00034190299999999757, 0.00034026399999999984, 0.00034058299999999847, 0.000338806000000004, 0.00034301399999999566, 0.00034406899999999546, 0.000341000000000001, 0.0003432780000000024, 0.00034138900000000444, 0.00034022200000000113, 0.00033834700000000273, 0.0003399160000000026, 0.0003441799999999995, 0.0003422360000000027, 0.00034447199999999845, 0.00033919500000000047, 0.0003432780000000024, 0.00034358300000000147, 0.000339888999999996, 0.00033822199999999913, 0.0003391250000000026, 0.0003441110000000011, 0.000344374999999994, 0.0003395559999999978, 0.00034118099999999596]</msg>
<status status="PASS" starttime="20201110 08:36:59.770" endtime="20201110 08:36:59.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.765" endtime="20201110 08:36:59.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.775" endtime="20201110 08:36:59.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:59.778" endtime="20201110 08:36:59.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.776" endtime="20201110 08:36:59.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.773" endtime="20201110 08:36:59.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.386" endtime="20201110 08:36:59.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.385" endtime="20201110 08:36:59.799"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.810" endtime="20201110 08:36:59.848"></status>
</kw>
<msg timestamp="20201110 08:36:59.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.806" endtime="20201110 08:36:59.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.850" endtime="20201110 08:36:59.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.852" endtime="20201110 08:36:59.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.803" endtime="20201110 08:36:59.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.801" endtime="20201110 08:36:59.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.863" endtime="20201110 08:37:00.170"></status>
</kw>
<msg timestamp="20201110 08:37:00.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027104319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027445806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.861" endtime="20201110 08:37:00.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027104319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027445806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.175" endtime="20201110 08:37:00.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.183" endtime="20201110 08:37:00.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.858" endtime="20201110 08:37:00.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.856" endtime="20201110 08:37:00.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.190" level="INFO">${RESULT} = [{'time': 0.027445806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034148699999999796, 'source_diff': 0.00034148699999999796}, {'time': 0.027811194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:00.187" endtime="20201110 08:37:00.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:00.205" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:00.191" endtime="20201110 08:37:00.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.210" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:37:00.209" endtime="20201110 08:37:00.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.213" level="INFO">VALUE: [0.00034148699999999796, 0.0003391800000000014, 0.0003415140000000011, 0.00034422200000000167, 0.0003399309999999982, 0.00033866700000000083, 0.00034277799999999845, 0.0003440279999999997, 0.0003385550000000008, 0.00033836099999999883, 0.00034277699999999897, 0.00033855600000000374, 0.0003448470000000023, 0.0003416249999999982, 0.00034205500000000083, 0.0003408469999999983, 0.0003434449999999978, 0.00033861100000000255, 0.0003396529999999953, 0.00033937499999999593, 0.0003442079999999986, 0.00034030599999999855, 0.00034276400000000234, 0.0003381390000000012, 0.0003423330000000002, 0.00034319399999999806, 0.000343889, 0.0003421529999999978, 0.00033820799999999956, 0.00033916700000000133, 0.000342888999999999, 0.0003441669999999994, 0.0003438050000000026, 0.00034398600000000445, 0.0003383060000000035, 0.00034459700000000204, 0.0003389030000000015, 0.0003436669999999989, 0.0003400699999999979, 0.0003410130000000011, 0.0003401249999999967, 0.00034337499999999993, 0.00033922200000000013, 0.0003442219999999982, 0.0003408199999999986, 0.00034224999999999534, 0.00034227700000000194, 0.000342292000000001, 0.00033827699999999794, 0.00033893100000000065]</msg>
<status status="PASS" starttime="20201110 08:37:00.211" endtime="20201110 08:37:00.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.206" endtime="20201110 08:37:00.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.217" endtime="20201110 08:37:00.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:00.220" endtime="20201110 08:37:00.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.219" endtime="20201110 08:37:00.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.215" endtime="20201110 08:37:00.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.800" endtime="20201110 08:37:00.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.799" endtime="20201110 08:37:00.241"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.250" endtime="20201110 08:37:00.286"></status>
</kw>
<msg timestamp="20201110 08:37:00.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.249" endtime="20201110 08:37:00.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.288" endtime="20201110 08:37:00.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.290" endtime="20201110 08:37:00.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.246" endtime="20201110 08:37:00.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.244" endtime="20201110 08:37:00.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.301" endtime="20201110 08:37:00.588"></status>
</kw>
<msg timestamp="20201110 08:37:00.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.299" endtime="20201110 08:37:00.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.592" endtime="20201110 08:37:00.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.601" endtime="20201110 08:37:00.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.297" endtime="20201110 08:37:00.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.295" endtime="20201110 08:37:00.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.607" level="INFO">${RESULT} = [{'time': 0.022108069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000348486000000002, 'source_diff': 0.000348486000000002}, {'time': 0.022473264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:00.604" endtime="20201110 08:37:00.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:00.622" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:00.608" endtime="20201110 08:37:00.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.626" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:37:00.625" endtime="20201110 08:37:00.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.629" level="INFO">VALUE: [0.000348486000000002, 0.00033902799999999816, 0.0003426950000000005, 0.0003442919999999995, 0.0003413750000000014, 0.0003391109999999996, 0.000343791999999999, 0.0003394999999999995, 0.00033808299999999944, 0.00034118099999999943, 0.00034037499999999693, 0.00034198600000000245, 0.00034052799999999966, 0.000339693999999998, 0.0003424170000000011, 0.00033836099999999883, 0.00034037499999999693, 0.0003406800000000029, 0.00034440300000000007, 0.00033962499999999965, 0.00034294500000000075, 0.0003409590000000018, 0.0003381250000000016, 0.00033912499999999915, 0.00033936099999999983, 0.000342986, 0.00033883300000000366, 0.00034319499999999753, 0.000340888999999997, 0.0003446110000000016, 0.00033865300000000126, 0.00034326400000000284, 0.00033993100000000165, 0.000341791000000001, 0.0003437079999999981, 0.00033923600000000664, 0.00033948599999999995, 0.0003419999999999951, 0.00034330600000000155, 0.0003444439999999993, 0.00034363899999999975, 0.0003421109999999991, 0.0003406109999999976, 0.00034158299999999947, 0.00034315300000000576, 0.00034069499999999503, 0.0003426669999999979, 0.00034304100000000226, 0.0003384719999999994, 0.000344485999999998]</msg>
<status status="PASS" starttime="20201110 08:37:00.627" endtime="20201110 08:37:00.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.623" endtime="20201110 08:37:00.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.632" endtime="20201110 08:37:00.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:00.636" endtime="20201110 08:37:00.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.635" endtime="20201110 08:37:00.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.631" endtime="20201110 08:37:00.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.242" endtime="20201110 08:37:00.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.242" endtime="20201110 08:37:00.657"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.666" endtime="20201110 08:37:00.703"></status>
</kw>
<msg timestamp="20201110 08:37:00.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.665" endtime="20201110 08:37:00.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.704" endtime="20201110 08:37:00.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.707" endtime="20201110 08:37:00.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.662" endtime="20201110 08:37:00.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.660" endtime="20201110 08:37:00.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.717" endtime="20201110 08:37:01.005"></status>
</kw>
<msg timestamp="20201110 08:37:01.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022975819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023313444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.716" endtime="20201110 08:37:01.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022975819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023313444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.009" endtime="20201110 08:37:01.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.018" endtime="20201110 08:37:01.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.713" endtime="20201110 08:37:01.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.711" endtime="20201110 08:37:01.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.024" level="INFO">${RESULT} = [{'time': 0.023313444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033762499999999765, 'source_diff': 0.00033762499999999765}, {'time': 0.023678833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:01.021" endtime="20201110 08:37:01.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:01.039" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:01.025" endtime="20201110 08:37:01.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.043" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:37:01.042" endtime="20201110 08:37:01.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.046" level="INFO">VALUE: [0.00033762499999999765, 0.0003441250000000007, 0.00034304199999999826, 0.0003433200000000011, 0.00034076400000000034, 0.00034191699999999714, 0.0003409309999999992, 0.000338403000000001, 0.0003441529999999998, 0.0003390420000000012, 0.00034327799999999895, 0.0003425000000000025, 0.000342694000000001, 0.0003436950000000015, 0.00034423600000000124, 0.0003440279999999997, 0.0003413889999999975, 0.0003417499999999983, 0.00034054199999999923, 0.00034244500000000025, 0.000342195, 0.00034401399999999666, 0.000341306000000003, 0.00034192999999999724, 0.00033830599999999655, 0.00034076400000000034, 0.00034373599999999727, 0.0003384579999999998, 0.00034391699999999914, 0.000338403000000001, 0.00034337499999999993, 0.00034170800000000306, 0.00034252699999999525, 0.0003417360000000022, 0.000342292000000001, 0.0003440419999999958, 0.0003411800000000034, 0.0003436669999999989, 0.00033926299999999937, 0.00033976399999999934, 0.00034329099999999557, 0.00034454200000000323, 0.0003435690000000019, 0.0003441110000000011, 0.0003415270000000012, 0.00033976399999999934, 0.0003442779999999965, 0.000344777999999997, 0.00034265199999999885, 0.00034330600000000155]</msg>
<status status="PASS" starttime="20201110 08:37:01.044" endtime="20201110 08:37:01.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.040" endtime="20201110 08:37:01.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.050" endtime="20201110 08:37:01.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:01.053" endtime="20201110 08:37:01.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.052" endtime="20201110 08:37:01.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.048" endtime="20201110 08:37:01.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.658" endtime="20201110 08:37:01.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.658" endtime="20201110 08:37:01.074"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.083" endtime="20201110 08:37:01.119"></status>
</kw>
<msg timestamp="20201110 08:37:01.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.082" endtime="20201110 08:37:01.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.121" endtime="20201110 08:37:01.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.123" endtime="20201110 08:37:01.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.079" endtime="20201110 08:37:01.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.077" endtime="20201110 08:37:01.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.134" endtime="20201110 08:37:01.420"></status>
</kw>
<msg timestamp="20201110 08:37:01.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023109417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023444444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.132" endtime="20201110 08:37:01.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023109417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023444444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.424" endtime="20201110 08:37:01.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.433" endtime="20201110 08:37:01.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.129" endtime="20201110 08:37:01.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.128" endtime="20201110 08:37:01.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.440" level="INFO">${RESULT} = [{'time': 0.023444444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033502699999999816, 'source_diff': 0.00033502699999999816}, {'time': 0.023809986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:01.436" endtime="20201110 08:37:01.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:01.455" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:01.441" endtime="20201110 08:37:01.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.460" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:37:01.459" endtime="20201110 08:37:01.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.462" level="INFO">VALUE: [0.00033502699999999816, 0.00034322200000000067, 0.0003416110000000021, 0.0003440140000000001, 0.0003409309999999992, 0.000341694, 0.0003397360000000002, 0.0003413750000000014, 0.00034208399999999944, 0.00034038899999999997, 0.00034126400000000084, 0.0003386250000000021, 0.00034468100000000293, 0.00033886099999999933, 0.00034350000000000006, 0.0003397499999999998, 0.00034201299999999865, 0.0003388330000000002, 0.0003414309999999997, 0.0003420560000000003, 0.00033852800000000113, 0.00034220899999999957, 0.00033852799999999766, 0.00033811100000000205, 0.00033869499999999997, 0.0003403049999999991, 0.0003408879999999975, 0.0003434579999999979, 0.0003402230000000006, 0.00034031899999999865, 0.0003431799999999985, 0.00034019500000000147, 0.000342000000000002, 0.00034131899999999965, 0.00034436100000000136, 0.000342194000000004, 0.00033869499999999997, 0.0003433470000000008, 0.0003447079999999991, 0.00033944400000000124, 0.00034348600000000395, 0.0003432360000000037, 0.00034284799999999976, 0.00034291699999999814, 0.0003405140000000001, 0.00034209699999999954, 0.00034165300000000426, 0.00034108299999999897, 0.0003440409999999963, 0.0003387359999999992]</msg>
<status status="PASS" starttime="20201110 08:37:01.461" endtime="20201110 08:37:01.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.456" endtime="20201110 08:37:01.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.466" endtime="20201110 08:37:01.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:01.469" endtime="20201110 08:37:01.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.468" endtime="20201110 08:37:01.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.464" endtime="20201110 08:37:01.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.075" endtime="20201110 08:37:01.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.074" endtime="20201110 08:37:01.490"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.500" endtime="20201110 08:37:01.536"></status>
</kw>
<msg timestamp="20201110 08:37:01.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.498" endtime="20201110 08:37:01.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.538" endtime="20201110 08:37:01.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.540" endtime="20201110 08:37:01.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.495" endtime="20201110 08:37:01.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.493" endtime="20201110 08:37:01.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.551" endtime="20201110 08:37:01.841"></status>
</kw>
<msg timestamp="20201110 08:37:01.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023703819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024060528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.549" endtime="20201110 08:37:01.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023703819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024060528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.845" endtime="20201110 08:37:01.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.853" endtime="20201110 08:37:01.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.546" endtime="20201110 08:37:01.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.545" endtime="20201110 08:37:01.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.860" level="INFO">${RESULT} = [{'time': 0.024060528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003567090000000002, 'source_diff': 0.0003567090000000002}, {'time': 0.024425597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:01.857" endtime="20201110 08:37:01.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:01.874" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:01.861" endtime="20201110 08:37:01.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.879" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:37:01.878" endtime="20201110 08:37:01.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.881" level="INFO">VALUE: [0.0003567090000000002, 0.0003434860000000005, 0.000338096999999999, 0.0003438469999999978, 0.00034191600000000114, 0.00033922200000000013, 0.0003433050000000021, 0.0003404580000000018, 0.0003419170000000006, 0.0003381250000000016, 0.00034356899999999843, 0.00033802799999999716, 0.0003399719999999974, 0.00033958300000000094, 0.000337999999999998, 0.00033858299999999994, 0.00033912499999999915, 0.0003397779999999989, 0.00034420900000000157, 0.00033830500000000055, 0.0003398329999999977, 0.0003442079999999986, 0.000340403000000003, 0.00034158299999999947, 0.0003389030000000015, 0.00034166700000000383, 0.00034358300000000147, 0.0003401669999999954, 0.0003406249999999972, 0.00033969500000000097, 0.0003429720000000039, 0.0003394720000000004, 0.0003408049999999996, 0.000344000000000004, 0.00033997300000000036, 0.0003421390000000052, 0.00034297199999999695, 0.0003428200000000006, 0.00034308400000000044, 0.0003403060000000055, 0.0003445409999999968, 0.00033877699999999844, 0.00034448600000000495, 0.00034058399999999794, 0.0003395689999999979, 0.00034281900000000115, 0.0003429999999999961, 0.00033865300000000126, 0.00033837500000000187, 0.000338403000000001]</msg>
<status status="PASS" starttime="20201110 08:37:01.880" endtime="20201110 08:37:01.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.875" endtime="20201110 08:37:01.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.885" endtime="20201110 08:37:01.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:01.889" endtime="20201110 08:37:01.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.887" endtime="20201110 08:37:01.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.883" endtime="20201110 08:37:01.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.491" endtime="20201110 08:37:01.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.491" endtime="20201110 08:37:01.910"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.919" endtime="20201110 08:37:01.953"></status>
</kw>
<msg timestamp="20201110 08:37:01.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.917" endtime="20201110 08:37:01.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.954" endtime="20201110 08:37:01.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.957" endtime="20201110 08:37:01.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.914" endtime="20201110 08:37:01.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.912" endtime="20201110 08:37:01.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.967" endtime="20201110 08:37:02.254"></status>
</kw>
<msg timestamp="20201110 08:37:02.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021402014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.966" endtime="20201110 08:37:02.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021402014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.258" endtime="20201110 08:37:02.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.267" endtime="20201110 08:37:02.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.963" endtime="20201110 08:37:02.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.961" endtime="20201110 08:37:02.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:02.273" level="INFO">${RESULT} = [{'time': 0.021740444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003384300000000007, 'source_diff': 0.0003384300000000007}, {'time': 0.022105653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:02.270" endtime="20201110 08:37:02.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:02.288" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:02.274" endtime="20201110 08:37:02.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.292" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:37:02.291" endtime="20201110 08:37:02.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.295" level="INFO">VALUE: [0.0003384300000000007, 0.0003426109999999996, 0.0003414729999999984, 0.00034176400000000134, 0.000341598000000002, 0.00034384800000000076, 0.00033904199999999773, 0.00034194499999999975, 0.00034323600000000024, 0.00034034700000000126, 0.00034120900000000204, 0.00034331999999999765, 0.000343889, 0.0003389030000000015, 0.0003383610000000023, 0.000341097999999998, 0.00033884699999999976, 0.0003392499999999993, 0.00034373600000000074, 0.0003408339999999982, 0.0003405000000000005, 0.00034322200000000067, 0.00033902800000000163, 0.0003417639999999979, 0.00034390299999999957, 0.0003403330000000017, 0.00034145799999999935, 0.0003384160000000011, 0.0003429439999999978, 0.0003445140000000041, 0.0003431810000000049, 0.0003386390000000017, 0.00034391599999999967, 0.0003387920000000044, 0.00033883300000000366, 0.00034205500000000083, 0.0003425140000000021, 0.0003418329999999997, 0.00034180600000000005, 0.0003408469999999983, 0.00034013899999999625, 0.00033869499999999997, 0.0003421659999999979, 0.00034247199999999645, 0.00034238900000000544, 0.000338305000000004, 0.00034122200000000213, 0.0003399580000000013, 0.00034443100000000615, 0.0003422360000000027]</msg>
<status status="PASS" starttime="20201110 08:37:02.294" endtime="20201110 08:37:02.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.289" endtime="20201110 08:37:02.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.305" endtime="20201110 08:37:02.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.309" endtime="20201110 08:37:02.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.307" endtime="20201110 08:37:02.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.304" endtime="20201110 08:37:02.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.911" endtime="20201110 08:37:02.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.910" endtime="20201110 08:37:02.330"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.339" endtime="20201110 08:37:02.375"></status>
</kw>
<msg timestamp="20201110 08:37:02.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.337" endtime="20201110 08:37:02.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.377" endtime="20201110 08:37:02.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.380" endtime="20201110 08:37:02.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.335" endtime="20201110 08:37:02.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.333" endtime="20201110 08:37:02.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.390" endtime="20201110 08:37:02.678"></status>
</kw>
<msg timestamp="20201110 08:37:02.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023138931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023488639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.389" endtime="20201110 08:37:02.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023138931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023488639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.682" endtime="20201110 08:37:02.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.690" endtime="20201110 08:37:02.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.386" endtime="20201110 08:37:02.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.384" endtime="20201110 08:37:02.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:02.697" level="INFO">${RESULT} = [{'time': 0.023488639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003497079999999972, 'source_diff': 0.0003497079999999972}, {'time': 0.023853778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:02.694" endtime="20201110 08:37:02.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:02.711" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:02.698" endtime="20201110 08:37:02.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.716" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:37:02.715" endtime="20201110 08:37:02.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.719" level="INFO">VALUE: [0.0003497079999999972, 0.00034130599999999955, 0.0003446250000000012, 0.00034287499999999943, 0.00034295899999999685, 0.00033926399999999884, 0.0003440140000000001, 0.00033826399999999784, 0.0003435279999999992, 0.0003403199999999981, 0.00033904099999999826, 0.00034333299999999775, 0.0003441250000000007, 0.0003413469999999988, 0.000341000000000001, 0.0003394300000000017, 0.0003407499999999973, 0.00034102800000000016, 0.00034268099999999746, 0.00034080599999999905, 0.00034469499999999903, 0.0003434439999999983, 0.0003397220000000041, 0.00034122200000000213, 0.0003396940000000015, 0.00034104100000000026, 0.000343000000000003, 0.0003383329999999962, 0.00033909699999999654, 0.00034286199999999933, 0.0003427089999999966, 0.00033998600000000045, 0.0003383199999999961, 0.0003423469999999998, 0.0003386520000000018, 0.00033966600000000235, 0.000341679999999997, 0.000344000000000004, 0.00034447199999999845, 0.00034005600000000524, 0.0003436659999999994, 0.0003431799999999985, 0.0003412219999999952, 0.0003389030000000015, 0.00034337499999999993, 0.0003411249999999977, 0.00034319499999999753, 0.00034256899999999396, 0.00033990299999999557, 0.00034305500000000183]</msg>
<status status="PASS" starttime="20201110 08:37:02.717" endtime="20201110 08:37:02.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.712" endtime="20201110 08:37:02.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.722" endtime="20201110 08:37:02.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.726" endtime="20201110 08:37:02.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.724" endtime="20201110 08:37:02.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.721" endtime="20201110 08:37:02.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.331" endtime="20201110 08:37:02.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.330" endtime="20201110 08:37:02.747"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.756" endtime="20201110 08:37:02.792"></status>
</kw>
<msg timestamp="20201110 08:37:02.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.754" endtime="20201110 08:37:02.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.794" endtime="20201110 08:37:02.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.796" endtime="20201110 08:37:02.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.752" endtime="20201110 08:37:02.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.749" endtime="20201110 08:37:02.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.807" endtime="20201110 08:37:03.094"></status>
</kw>
<msg timestamp="20201110 08:37:03.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023380653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023713042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.805" endtime="20201110 08:37:03.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023380653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023713042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.098" endtime="20201110 08:37:03.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.106" endtime="20201110 08:37:03.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.802" endtime="20201110 08:37:03.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.801" endtime="20201110 08:37:03.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.113" level="INFO">${RESULT} = [{'time': 0.023713042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003323889999999989, 'source_diff': 0.0003323889999999989}, {'time': 0.024078347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:03.110" endtime="20201110 08:37:03.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:03.128" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:03.114" endtime="20201110 08:37:03.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.133" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:37:03.132" endtime="20201110 08:37:03.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.135" level="INFO">VALUE: [0.0003323889999999989, 0.00033941599999999864, 0.0003394169999999981, 0.00034122199999999867, 0.0003428200000000006, 0.00033934700000000026, 0.0003400139999999996, 0.0003436950000000015, 0.0003417639999999979, 0.0003431119999999996, 0.00034002799999999916, 0.00033919500000000047, 0.00033962499999999965, 0.00034395800000000185, 0.00034099999999999756, 0.0003432919999999985, 0.000343292000000002, 0.0003418050000000006, 0.0003400840000000009, 0.0003425000000000025, 0.000342986, 0.00034366700000000236, 0.0003407919999999995, 0.0003410699999999989, 0.00034409700000000154, 0.0003405559999999988, 0.0003402779999999994, 0.0003405140000000001, 0.0003435560000000018, 0.0003443330000000022, 0.00033808299999999597, 0.0003399170000000021, 0.00033922200000000013, 0.0003414580000000028, 0.000344583999999995, 0.00034136099999999836, 0.00033988900000000294, 0.0003393610000000033, 0.0003445279999999967, 0.00034104199999999973, 0.0003422360000000027, 0.0003389160000000016, 0.0003396109999999966, 0.00034219500000000347, 0.00033897299999999936, 0.0003420140000000016, 0.00034458300000000247, 0.00034055600000000574, 0.00033986099999999686, 0.0003426940000000045]</msg>
<status status="PASS" starttime="20201110 08:37:03.134" endtime="20201110 08:37:03.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.129" endtime="20201110 08:37:03.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.139" endtime="20201110 08:37:03.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.143" endtime="20201110 08:37:03.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.141" endtime="20201110 08:37:03.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.137" endtime="20201110 08:37:03.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.748" endtime="20201110 08:37:03.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.747" endtime="20201110 08:37:03.164"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.173" endtime="20201110 08:37:03.209"></status>
</kw>
<msg timestamp="20201110 08:37:03.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.171" endtime="20201110 08:37:03.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.210" endtime="20201110 08:37:03.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.213" endtime="20201110 08:37:03.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.169" endtime="20201110 08:37:03.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.166" endtime="20201110 08:37:03.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.223" endtime="20201110 08:37:03.510"></status>
</kw>
<msg timestamp="20201110 08:37:03.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023229764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023574097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.222" endtime="20201110 08:37:03.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023229764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023574097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.514" endtime="20201110 08:37:03.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.522" endtime="20201110 08:37:03.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.219" endtime="20201110 08:37:03.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.217" endtime="20201110 08:37:03.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.529" level="INFO">${RESULT} = [{'time': 0.023574097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034433299999999875, 'source_diff': 0.00034433299999999875}, {'time': 0.023939319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:03.526" endtime="20201110 08:37:03.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:03.543" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:03.530" endtime="20201110 08:37:03.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.548" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:37:03.547" endtime="20201110 08:37:03.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.551" level="INFO">VALUE: [0.00034433299999999875, 0.00034041599999999964, 0.0003443470000000018, 0.0003414439999999998, 0.00034020900000000104, 0.0003413050000000001, 0.0003407500000000008, 0.0003415699999999994, 0.00034313899999999925, 0.0003407779999999999, 0.00034395899999999785, 0.00034298699999999946, 0.00033829200000000045, 0.0003413750000000014, 0.0003423050000000011, 0.00033966700000000183, 0.00034062500000000065, 0.00034015300000000276, 0.000341194999999999, 0.0003391529999999983, 0.0003381109999999986, 0.00033984799999999676, 0.000343791000000003, 0.00034363899999999975, 0.00033861100000000255, 0.0003381109999999951, 0.00034194400000000374, 0.0003390700000000038, 0.00033937499999999593, 0.00034069500000000197, 0.0003417500000000018, 0.0003414300000000037, 0.00034287499999999943, 0.00033937500000000287, 0.00034386100000000086, 0.00034129099999999357, 0.00033805500000000377, 0.00034194400000000374, 0.0003413050000000001, 0.00034197199999999595, 0.0003415559999999998, 0.0003396109999999966, 0.00034418099999999896, 0.00034358299999999453, 0.00034254200000000123, 0.0003385689999999969, 0.0003388199999999966, 0.0003404439999999953, 0.00034358400000000094, 0.00034369399999999856]</msg>
<status status="PASS" starttime="20201110 08:37:03.549" endtime="20201110 08:37:03.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.544" endtime="20201110 08:37:03.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.554" endtime="20201110 08:37:03.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.558" endtime="20201110 08:37:03.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.556" endtime="20201110 08:37:03.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.553" endtime="20201110 08:37:03.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.165" endtime="20201110 08:37:03.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.164" endtime="20201110 08:37:03.579"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.588" endtime="20201110 08:37:03.631"></status>
</kw>
<msg timestamp="20201110 08:37:03.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.586" endtime="20201110 08:37:03.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.632" endtime="20201110 08:37:03.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.635" endtime="20201110 08:37:03.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.584" endtime="20201110 08:37:03.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.581" endtime="20201110 08:37:03.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.645" endtime="20201110 08:37:03.932"></status>
</kw>
<msg timestamp="20201110 08:37:03.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025329514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025684847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.644" endtime="20201110 08:37:03.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025329514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025684847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.936" endtime="20201110 08:37:03.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.945" endtime="20201110 08:37:03.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.641" endtime="20201110 08:37:03.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.639" endtime="20201110 08:37:03.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.951" level="INFO">${RESULT} = [{'time': 0.025684847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035533299999999934, 'source_diff': 0.00035533299999999934}, {'time': 0.026050056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:03.948" endtime="20201110 08:37:03.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:03.965" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:03.952" endtime="20201110 08:37:03.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.970" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:37:03.969" endtime="20201110 08:37:03.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.973" level="INFO">VALUE: [0.00035533299999999934, 0.0003387369999999987, 0.00034090300000000004, 0.00034386100000000086, 0.0003415699999999994, 0.0003417639999999979, 0.00034236099999999936, 0.0003436659999999994, 0.00033966699999999836, 0.0003439720000000014, 0.00034319399999999806, 0.0003384449999999997, 0.0003403199999999981, 0.000338887999999999, 0.0003410560000000028, 0.0003398200000000011, 0.00034034700000000126, 0.0003406810000000024, 0.00033920800000000056, 0.00034093100000000265, 0.0003409160000000036, 0.00034281900000000115, 0.00034058399999999794, 0.0003414449999999958, 0.0003415699999999994, 0.00034141699999999664, 0.0003397640000000063, 0.0003417500000000018, 0.0003407500000000008, 0.00034063899999999675, 0.0003426669999999979, 0.0003416669999999969, 0.00033833300000000316, 0.0003422780000000014, 0.00034088900000000394, 0.00034436200000000083, 0.0003391800000000014, 0.00034152800000000066, 0.00034052799999999966, 0.00034104199999999973, 0.00033952799999999866, 0.0003424590000000033, 0.0003409030000000035, 0.00034419399999999906, 0.0003411249999999977, 0.000338597000000003, 0.0003384300000000007, 0.00034, 0.00034215199999999835, 0.000342485999999996]</msg>
<status status="PASS" starttime="20201110 08:37:03.971" endtime="20201110 08:37:03.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.966" endtime="20201110 08:37:03.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.976" endtime="20201110 08:37:03.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.980" endtime="20201110 08:37:04.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.979" endtime="20201110 08:37:04.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.975" endtime="20201110 08:37:04.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.580" endtime="20201110 08:37:04.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.579" endtime="20201110 08:37:04.001"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.010" endtime="20201110 08:37:04.049"></status>
</kw>
<msg timestamp="20201110 08:37:04.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.009" endtime="20201110 08:37:04.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.050" endtime="20201110 08:37:04.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.053" endtime="20201110 08:37:04.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.006" endtime="20201110 08:37:04.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.004" endtime="20201110 08:37:04.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.063" endtime="20201110 08:37:04.349"></status>
</kw>
<msg timestamp="20201110 08:37:04.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025046597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025378208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.061" endtime="20201110 08:37:04.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025046597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025378208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.353" endtime="20201110 08:37:04.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.362" endtime="20201110 08:37:04.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.059" endtime="20201110 08:37:04.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.057" endtime="20201110 08:37:04.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:04.368" level="INFO">${RESULT} = [{'time': 0.025378208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000331610999999999, 'source_diff': 0.000331610999999999}, {'time': 0.025743347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:04.365" endtime="20201110 08:37:04.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:04.383" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:04.369" endtime="20201110 08:37:04.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.387" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:37:04.386" endtime="20201110 08:37:04.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.390" level="INFO">VALUE: [0.000331610999999999, 0.00033848599999999895, 0.0003408330000000022, 0.0003405130000000006, 0.00033883399999999966, 0.0003423339999999997, 0.00033852799999999766, 0.0003425139999999986, 0.00033934700000000026, 0.00034099999999999756, 0.00034104100000000026, 0.0003437639999999999, 0.00034231900000000065, 0.00034373600000000074, 0.0003383329999999997, 0.0003441380000000008, 0.00033972199999999717, 0.00033831899999999665, 0.000343388, 0.0003410559999999993, 0.0003391250000000026, 0.00034280600000000105, 0.00034209699999999954, 0.0003418469999999993, 0.0003427639999999954, 0.0003430279999999952, 0.00034, 0.00034016700000000233, 0.00034190299999999757, 0.00033886099999999586, 0.00034258399999999994, 0.0003399580000000013, 0.0003384579999999998, 0.0003380559999999963, 0.0003431110000000001, 0.00034437500000000093, 0.0003382909999999975, 0.00034176400000000134, 0.0003400269999999997, 0.00034331900000000165, 0.000344485999999998, 0.0003425560000000008, 0.00034009699999999754, 0.0003393610000000033, 0.0003383480000000022, 0.00034131899999999965, 0.0003413469999999988, 0.00034124999999999434, 0.00034268099999999746, 0.0003416659999999974]</msg>
<status status="PASS" starttime="20201110 08:37:04.388" endtime="20201110 08:37:04.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.383" endtime="20201110 08:37:04.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.394" endtime="20201110 08:37:04.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:04.397" endtime="20201110 08:37:04.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.396" endtime="20201110 08:37:04.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.392" endtime="20201110 08:37:04.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.002" endtime="20201110 08:37:04.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.002" endtime="20201110 08:37:04.418"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.427" endtime="20201110 08:37:04.465"></status>
</kw>
<msg timestamp="20201110 08:37:04.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.426" endtime="20201110 08:37:04.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.467" endtime="20201110 08:37:04.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.469" endtime="20201110 08:37:04.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.423" endtime="20201110 08:37:04.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.421" endtime="20201110 08:37:04.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.480" endtime="20201110 08:37:04.766"></status>
</kw>
<msg timestamp="20201110 08:37:04.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025287556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.478" endtime="20201110 08:37:04.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025287556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.770" endtime="20201110 08:37:04.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.778" endtime="20201110 08:37:04.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.475" endtime="20201110 08:37:04.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.474" endtime="20201110 08:37:04.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:04.785" level="INFO">${RESULT} = [{'time': 0.025287556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003551949999999991, 'source_diff': 0.0003551949999999991}, {'time': 0.025652681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:04.782" endtime="20201110 08:37:04.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:04.800" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:04.786" endtime="20201110 08:37:04.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.805" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:37:04.804" endtime="20201110 08:37:04.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.807" level="INFO">VALUE: [0.0003551949999999991, 0.00033819499999999947, 0.00034158299999999947, 0.0003387499999999988, 0.0003439439999999988, 0.00033991599999999914, 0.0003417500000000018, 0.000342679999999998, 0.00033872199999999963, 0.00033808299999999944, 0.0003412639999999974, 0.00034022200000000113, 0.0003431530000000023, 0.000338096999999999, 0.00034236099999999936, 0.0003425560000000008, 0.0003408750000000009, 0.00034318100000000143, 0.0003439449999999983, 0.00033990299999999557, 0.000338194, 0.00033955499999999833, 0.0003410140000000006, 0.0003405140000000001, 0.0003412360000000017, 0.00033800000000000496, 0.00034209699999999954, 0.00034040299999999607, 0.0003394170000000016, 0.00034434699999999485, 0.0003413050000000001, 0.00033852799999999766, 0.000344292000000003, 0.0003396390000000027, 0.0003421250000000056, 0.00034437500000000093, 0.00034313899999999925, 0.0003400269999999997, 0.0003426800000000049, 0.00034451399999999716, 0.0003438200000000016, 0.00034105499999999983, 0.00034224999999999534, 0.00033958399999999694, 0.00034, 0.00033815300000000076, 0.0003442779999999965, 0.0003430700000000009, 0.0003409720000000019, 0.0003436659999999994]</msg>
<status status="PASS" starttime="20201110 08:37:04.806" endtime="20201110 08:37:04.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.801" endtime="20201110 08:37:04.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.811" endtime="20201110 08:37:04.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:04.815" endtime="20201110 08:37:04.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.813" endtime="20201110 08:37:04.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.810" endtime="20201110 08:37:04.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.419" endtime="20201110 08:37:04.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.419" endtime="20201110 08:37:04.836"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.846" endtime="20201110 08:37:04.882"></status>
</kw>
<msg timestamp="20201110 08:37:04.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.844" endtime="20201110 08:37:04.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.884" endtime="20201110 08:37:04.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.887" endtime="20201110 08:37:04.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.841" endtime="20201110 08:37:04.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.839" endtime="20201110 08:37:04.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.897" endtime="20201110 08:37:05.184"></status>
</kw>
<msg timestamp="20201110 08:37:05.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024414792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024752264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.896" endtime="20201110 08:37:05.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024414792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024752264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.188" endtime="20201110 08:37:05.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.196" endtime="20201110 08:37:05.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.893" endtime="20201110 08:37:05.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.891" endtime="20201110 08:37:05.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:05.203" level="INFO">${RESULT} = [{'time': 0.024752264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003374719999999984, 'source_diff': 0.0003374719999999984}, {'time': 0.025117486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:05.200" endtime="20201110 08:37:05.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:05.217" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:05.204" endtime="20201110 08:37:05.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.222" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:37:05.221" endtime="20201110 08:37:05.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.224" level="INFO">VALUE: [0.0003374719999999984, 0.0003437780000000029, 0.00034017999999999896, 0.0003405270000000002, 0.00033902799999999816, 0.00033998600000000045, 0.0003425979999999995, 0.00034038899999999997, 0.0003444720000000019, 0.0003426249999999992, 0.0003405000000000005, 0.000342986, 0.00034036100000000083, 0.00033894400000000074, 0.00034386100000000086, 0.0003444860000000015, 0.00034404200000000273, 0.0003435279999999992, 0.0003426530000000018, 0.0003407779999999999, 0.00034322299999999667, 0.0003429579999999974, 0.0003394720000000004, 0.00034290299999999857, 0.0003418610000000058, 0.00034272200000000363, 0.0003390139999999986, 0.00034055499999999933, 0.00034223599999999577, 0.0003438470000000013, 0.0003411529999999968, 0.0003409450000000022, 0.0003435000000000035, 0.0003438200000000016, 0.0003413889999999975, 0.00034224999999999534, 0.0003416810000000034, 0.00034334800000000026, 0.0003399309999999947, 0.00034170900000000254, 0.0003438470000000013, 0.00034037499999999693, 0.00034188800000000547, 0.00034455599999999587, 0.0003405699999999984, 0.00034097300000000136, 0.0003441529999999998, 0.0003422219999999962, 0.0003426529999999983, 0.0003399170000000021]</msg>
<status status="PASS" starttime="20201110 08:37:05.223" endtime="20201110 08:37:05.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.218" endtime="20201110 08:37:05.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.228" endtime="20201110 08:37:05.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:05.232" endtime="20201110 08:37:05.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.230" endtime="20201110 08:37:05.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.226" endtime="20201110 08:37:05.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.837" endtime="20201110 08:37:05.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.836" endtime="20201110 08:37:05.253"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.262" endtime="20201110 08:37:05.300"></status>
</kw>
<msg timestamp="20201110 08:37:05.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.260" endtime="20201110 08:37:05.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.301" endtime="20201110 08:37:05.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.304" endtime="20201110 08:37:05.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.258" endtime="20201110 08:37:05.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.255" endtime="20201110 08:37:05.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.314" endtime="20201110 08:37:05.600"></status>
</kw>
<msg timestamp="20201110 08:37:05.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024458472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024795681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.313" endtime="20201110 08:37:05.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024458472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024795681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.604" endtime="20201110 08:37:05.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.613" endtime="20201110 08:37:05.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.310" endtime="20201110 08:37:05.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.308" endtime="20201110 08:37:05.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:05.619" level="INFO">${RESULT} = [{'time': 0.024795681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003372090000000015, 'source_diff': 0.0003372090000000015}, {'time': 0.025160889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:05.616" endtime="20201110 08:37:05.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:05.634" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:05.621" endtime="20201110 08:37:05.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.639" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:37:05.638" endtime="20201110 08:37:05.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.642" level="INFO">VALUE: [0.0003372090000000015, 0.0003404719999999979, 0.0003380559999999998, 0.0003385969999999995, 0.0003444020000000006, 0.00034111200000000105, 0.00033852799999999766, 0.00034199999999999856, 0.0003434720000000009, 0.00034038899999999997, 0.00033907000000000034, 0.00033886099999999933, 0.0003434439999999983, 0.00034102800000000016, 0.00034354199999999877, 0.00034268100000000093, 0.0003403049999999991, 0.0003411249999999977, 0.00034248600000000295, 0.0003446110000000016, 0.00034404100000000326, 0.0003408469999999983, 0.0003412360000000017, 0.00033883300000000366, 0.0003432910000000025, 0.00034094400000000274, 0.000339291999999998, 0.00033961100000000355, 0.0003432500000000033, 0.00034016600000000285, 0.0003405689999999989, 0.00034088900000000394, 0.000339790999999999, 0.00034020900000000104, 0.00033936200000000277, 0.0003431110000000001, 0.00034015199999999635, 0.00034194400000000374, 0.00033838900000000144, 0.0003382499999999983, 0.00034363899999999975, 0.00034066700000000283, 0.00033997300000000036, 0.00034219499999999653, 0.00033904199999999773, 0.00034020800000000156, 0.0003406529999999963, 0.0003440129999999972, 0.00034070800000000206, 0.00033977699999999944]</msg>
<status status="PASS" starttime="20201110 08:37:05.640" endtime="20201110 08:37:05.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.635" endtime="20201110 08:37:05.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.646" endtime="20201110 08:37:05.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:05.650" endtime="20201110 08:37:05.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.648" endtime="20201110 08:37:05.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.644" endtime="20201110 08:37:05.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.254" endtime="20201110 08:37:05.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.253" endtime="20201110 08:37:05.671"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.680" endtime="20201110 08:37:05.716"></status>
</kw>
<msg timestamp="20201110 08:37:05.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.678" endtime="20201110 08:37:05.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.718" endtime="20201110 08:37:05.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.720" endtime="20201110 08:37:05.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.675" endtime="20201110 08:37:05.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.673" endtime="20201110 08:37:05.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.731" endtime="20201110 08:37:06.017"></status>
</kw>
<msg timestamp="20201110 08:37:06.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023381625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023713306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.729" endtime="20201110 08:37:06.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023381625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023713306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.021" endtime="20201110 08:37:06.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.030" endtime="20201110 08:37:06.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.727" endtime="20201110 08:37:06.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.725" endtime="20201110 08:37:06.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:06.037" level="INFO">${RESULT} = [{'time': 0.023713306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033168100000000034, 'source_diff': 0.00033168100000000034}, {'time': 0.024078486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:06.033" endtime="20201110 08:37:06.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:06.051" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:06.038" endtime="20201110 08:37:06.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.056" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:37:06.054" endtime="20201110 08:37:06.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.058" level="INFO">VALUE: [0.00033168100000000034, 0.0003399169999999986, 0.00034209699999999954, 0.0003429310000000012, 0.00034355499999999886, 0.0003384870000000019, 0.0003421390000000017, 0.00034108299999999897, 0.0003392499999999993, 0.00034126400000000084, 0.0003396389999999992, 0.0003438469999999978, 0.00034172199999999917, 0.00034450000000000106, 0.00034359699999999757, 0.00034093100000000265, 0.0003386800000000009, 0.00034186099999999886, 0.00034058300000000194, 0.0003421529999999978, 0.0003434449999999978, 0.0003393199999999971, 0.000342888999999999, 0.00034272299999999617, 0.000343679999999999, 0.0003415130000000016, 0.0003387919999999975, 0.00034259700000000004, 0.0003435690000000019, 0.00033805600000000324, 0.0003403469999999978, 0.0003435560000000018, 0.00034154200000000023, 0.00034458300000000247, 0.00034358400000000094, 0.0003389580000000003, 0.00033870800000000006, 0.0003386390000000017, 0.00034048600000000095, 0.0003382499999999983, 0.0003388329999999967, 0.00034159699999999904, 0.00034430499999999614, 0.00034372200000000463, 0.00033848599999999895, 0.00034082000000000556, 0.0003388469999999963, 0.0003389580000000003, 0.00033943100000000115, 0.0003412360000000017]</msg>
<status status="PASS" starttime="20201110 08:37:06.057" endtime="20201110 08:37:06.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.052" endtime="20201110 08:37:06.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.062" endtime="20201110 08:37:06.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:06.065" endtime="20201110 08:37:06.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.064" endtime="20201110 08:37:06.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.060" endtime="20201110 08:37:06.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.672" endtime="20201110 08:37:06.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.671" endtime="20201110 08:37:06.086"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.096" endtime="20201110 08:37:06.134"></status>
</kw>
<msg timestamp="20201110 08:37:06.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.094" endtime="20201110 08:37:06.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.136" endtime="20201110 08:37:06.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.139" endtime="20201110 08:37:06.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.091" endtime="20201110 08:37:06.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.089" endtime="20201110 08:37:06.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.149" endtime="20201110 08:37:06.436"></status>
</kw>
<msg timestamp="20201110 08:37:06.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025135972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.147" endtime="20201110 08:37:06.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025135972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.440" endtime="20201110 08:37:06.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.448" endtime="20201110 08:37:06.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.145" endtime="20201110 08:37:06.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.143" endtime="20201110 08:37:06.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:06.455" level="INFO">${RESULT} = [{'time': 0.025135972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003418050000000006, 'source_diff': 0.0003418050000000006}, {'time': 0.025501236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:06.452" endtime="20201110 08:37:06.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:06.470" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:06.456" endtime="20201110 08:37:06.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.475" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:37:06.474" endtime="20201110 08:37:06.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.477" level="INFO">VALUE: [0.0003418050000000006, 0.0003409299999999997, 0.0003400420000000022, 0.0003398749999999999, 0.0003444579999999989, 0.0003421530000000013, 0.0003412079999999991, 0.0003432639999999994, 0.0003413329999999992, 0.000341194999999999, 0.0003390979999999995, 0.0003433200000000011, 0.0003395970000000005, 0.00033890299999999804, 0.00034469499999999903, 0.00033983400000000066, 0.000338403000000001, 0.0003405689999999989, 0.00034008299999999797, 0.0003426379999999993, 0.00034408300000000197, 0.0003425140000000021, 0.0003383480000000022, 0.00033886099999999586, 0.0003437219999999977, 0.0003428189999999942, 0.00034137499999999793, 0.0003388329999999967, 0.00034451399999999716, 0.00034023599999999377, 0.0003384579999999998, 0.0003427219999999967, 0.0003398339999999972, 0.0003425129999999957, 0.00034292999999999824, 0.00033836099999999536, 0.00034319399999999806, 0.000341000000000001, 0.0003409720000000019, 0.00033952700000000613, 0.00033987499999999643, 0.0003393469999999968, 0.00034474999999999784, 0.00034437500000000093, 0.00034287499999999943, 0.00034441699999999964, 0.0003396250000000031, 0.00034158299999999947, 0.0003418469999999993, 0.0003402920000000059]</msg>
<status status="PASS" starttime="20201110 08:37:06.476" endtime="20201110 08:37:06.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.471" endtime="20201110 08:37:06.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.481" endtime="20201110 08:37:06.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:06.485" endtime="20201110 08:37:06.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.483" endtime="20201110 08:37:06.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.479" endtime="20201110 08:37:06.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.087" endtime="20201110 08:37:06.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.087" endtime="20201110 08:37:06.506"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.515" endtime="20201110 08:37:06.551"></status>
</kw>
<msg timestamp="20201110 08:37:06.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.513" endtime="20201110 08:37:06.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.552" endtime="20201110 08:37:06.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.555" endtime="20201110 08:37:06.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.510" endtime="20201110 08:37:06.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.508" endtime="20201110 08:37:06.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.565" endtime="20201110 08:37:06.851"></status>
</kw>
<msg timestamp="20201110 08:37:06.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02259775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:06.564" endtime="20201110 08:37:06.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02259775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:06.855" endtime="20201110 08:37:06.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.864" endtime="20201110 08:37:06.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.561" endtime="20201110 08:37:06.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.559" endtime="20201110 08:37:06.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:06.871" level="INFO">${RESULT} = [{'time': 0.022931611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033386100000000127, 'source_diff': 0.00033386100000000127}, {'time': 0.023296806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:06.867" endtime="20201110 08:37:06.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:06.885" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:06.872" endtime="20201110 08:37:06.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.889" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:37:06.888" endtime="20201110 08:37:06.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.892" level="INFO">VALUE: [0.00033386100000000127, 0.0003381809999999999, 0.0003426529999999983, 0.000342986, 0.0003394309999999977, 0.00033990299999999904, 0.00034319399999999806, 0.0003380970000000025, 0.00033806899999999987, 0.00034408300000000197, 0.0003432089999999971, 0.0003386250000000021, 0.0003416520000000013, 0.000342888999999999, 0.00034086099999999786, 0.0003417629999999984, 0.000340693999999999, 0.00034057000000000184, 0.0003395139999999991, 0.00033901400000000206, 0.00033806999999999934, 0.0003435139999999996, 0.0003386940000000005, 0.00033883300000000366, 0.00033937500000000287, 0.00033992999999999524, 0.0003402779999999994, 0.0003424999999999956, 0.000342791000000002, 0.0003395139999999991, 0.0003381950000000064, 0.0003439439999999988, 0.0003416249999999982, 0.00034158299999999947, 0.0003406250000000041, 0.00034119499999999553, 0.00034211100000000605, 0.00034458400000000194, 0.00034440300000000007, 0.000340194000000002, 0.00033844400000000024, 0.00033904199999999773, 0.0003428330000000007, 0.0003394999999999995, 0.00033943100000000115, 0.00034187499999999843, 0.0003442500000000043, 0.0003426800000000049, 0.00033837500000000187, 0.000343485999999997]</msg>
<status status="PASS" starttime="20201110 08:37:06.890" endtime="20201110 08:37:06.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.885" endtime="20201110 08:37:06.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.896" endtime="20201110 08:37:06.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:06.899" endtime="20201110 08:37:06.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.898" endtime="20201110 08:37:06.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.894" endtime="20201110 08:37:06.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.507" endtime="20201110 08:37:06.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.506" endtime="20201110 08:37:06.920"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.932" endtime="20201110 08:37:06.967"></status>
</kw>
<msg timestamp="20201110 08:37:06.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.930" endtime="20201110 08:37:06.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.969" endtime="20201110 08:37:06.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.972" endtime="20201110 08:37:06.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.927" endtime="20201110 08:37:06.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.924" endtime="20201110 08:37:06.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.982" endtime="20201110 08:37:07.268"></status>
</kw>
<msg timestamp="20201110 08:37:07.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024776847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025110972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.980" endtime="20201110 08:37:07.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024776847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025110972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.272" endtime="20201110 08:37:07.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.280" endtime="20201110 08:37:07.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.978" endtime="20201110 08:37:07.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.976" endtime="20201110 08:37:07.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:07.287" level="INFO">${RESULT} = [{'time': 0.025110972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003341249999999976, 'source_diff': 0.0003341249999999976}, {'time': 0.025476264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:07.284" endtime="20201110 08:37:07.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:07.301" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:07.288" endtime="20201110 08:37:07.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.306" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:37:07.305" endtime="20201110 08:37:07.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.308" level="INFO">VALUE: [0.0003341249999999976, 0.00033973599999999674, 0.00034411099999999764, 0.00034108299999999897, 0.00034172199999999917, 0.0003408049999999996, 0.000340306000000002, 0.0003446110000000016, 0.00034418099999999896, 0.0003388200000000001, 0.00034236099999999936, 0.0003437080000000016, 0.0003397779999999989, 0.0003381390000000012, 0.0003412780000000004, 0.0003430699999999974, 0.0003396110000000001, 0.00034280600000000105, 0.0003429859999999965, 0.0003442079999999986, 0.0003400700000000048, 0.0003415000000000015, 0.00033876399999999834, 0.00034191699999999714, 0.0003392909999999985, 0.00034473599999999827, 0.0003405000000000005, 0.00034105499999999983, 0.00034093100000000265, 0.0003433470000000008, 0.0003441250000000007, 0.00034352800000000266, 0.00034016700000000233, 0.0003412360000000017, 0.0003413339999999987, 0.00033888800000000247, 0.0003428199999999937, 0.0003394999999999995, 0.0003415700000000063, 0.0003406659999999964, 0.0003399720000000009, 0.0003414439999999963, 0.0003435140000000031, 0.0003408329999999987, 0.000341387999999998, 0.0003433470000000008, 0.0003389719999999999, 0.00034474999999999784, 0.000338291999999997, 0.0003412360000000017]</msg>
<status status="PASS" starttime="20201110 08:37:07.307" endtime="20201110 08:37:07.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.302" endtime="20201110 08:37:07.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.317" endtime="20201110 08:37:07.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:07.321" endtime="20201110 08:37:07.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.319" endtime="20201110 08:37:07.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.315" endtime="20201110 08:37:07.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.921" endtime="20201110 08:37:07.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.921" endtime="20201110 08:37:07.342"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.351" endtime="20201110 08:37:07.389"></status>
</kw>
<msg timestamp="20201110 08:37:07.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.349" endtime="20201110 08:37:07.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.391" endtime="20201110 08:37:07.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.393" endtime="20201110 08:37:07.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.346" endtime="20201110 08:37:07.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.344" endtime="20201110 08:37:07.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.404" endtime="20201110 08:37:07.690"></status>
</kw>
<msg timestamp="20201110 08:37:07.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025563847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025907819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.402" endtime="20201110 08:37:07.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025563847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025907819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.694" endtime="20201110 08:37:07.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.703" endtime="20201110 08:37:07.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.400" endtime="20201110 08:37:07.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.398" endtime="20201110 08:37:07.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:07.710" level="INFO">${RESULT} = [{'time': 0.025907819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034397199999999795, 'source_diff': 0.00034397199999999795}, {'time': 0.026273014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:07.706" endtime="20201110 08:37:07.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:07.724" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:07.711" endtime="20201110 08:37:07.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.728" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:37:07.727" endtime="20201110 08:37:07.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.731" level="INFO">VALUE: [0.00034397199999999795, 0.0003425700000000004, 0.0003392779999999984, 0.0003406949999999985, 0.0003389580000000003, 0.0003411530000000003, 0.0003447639999999974, 0.0003442089999999981, 0.00034130599999999955, 0.0003440279999999997, 0.00033862499999999865, 0.000344582999999999, 0.00034181900000000015, 0.0003381390000000012, 0.0003414170000000001, 0.0003439310000000022, 0.00034115300000000376, 0.0003441799999999995, 0.0003395129999999996, 0.00033940299999999507, 0.0003442360000000047, 0.0003395830000000044, 0.0003407500000000008, 0.0003391810000000009, 0.00034373599999999727, 0.00034080599999999905, 0.0003435000000000035, 0.00034291699999999814, 0.0003442079999999986, 0.0003388480000000027, 0.0003393610000000033, 0.00034280600000000105, 0.0003401390000000032, 0.0003393329999999972, 0.000341387999999998, 0.0003394590000000003, 0.00033892999999999424, 0.00034298600000000345, 0.0003425409999999948, 0.0003443340000000017, 0.0003411109999999981, 0.00033920800000000056, 0.0003396249999999962, 0.0003402370000000002, 0.0003414590000000023, 0.00034358299999999453, 0.0003397499999999998, 0.00034115300000000376, 0.0003418339999999992, 0.00034422299999999767]</msg>
<status status="PASS" starttime="20201110 08:37:07.730" endtime="20201110 08:37:07.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.725" endtime="20201110 08:37:07.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.735" endtime="20201110 08:37:07.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:07.738" endtime="20201110 08:37:07.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.737" endtime="20201110 08:37:07.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.733" endtime="20201110 08:37:07.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.343" endtime="20201110 08:37:07.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.342" endtime="20201110 08:37:07.759"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.768" endtime="20201110 08:37:07.806"></status>
</kw>
<msg timestamp="20201110 08:37:07.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.767" endtime="20201110 08:37:07.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.808" endtime="20201110 08:37:07.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.810" endtime="20201110 08:37:07.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.764" endtime="20201110 08:37:07.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.762" endtime="20201110 08:37:07.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.822" endtime="20201110 08:37:08.109"></status>
</kw>
<msg timestamp="20201110 08:37:08.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024910931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025247389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.819" endtime="20201110 08:37:08.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024910931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025247389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.114" endtime="20201110 08:37:08.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.122" endtime="20201110 08:37:08.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.817" endtime="20201110 08:37:08.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.815" endtime="20201110 08:37:08.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:08.129" level="INFO">${RESULT} = [{'time': 0.025247389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003364579999999978, 'source_diff': 0.0003364579999999978}, {'time': 0.025612778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:08.125" endtime="20201110 08:37:08.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:08.144" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:08.130" endtime="20201110 08:37:08.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.149" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:37:08.147" endtime="20201110 08:37:08.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.151" level="INFO">VALUE: [0.0003364579999999978, 0.0003434449999999978, 0.00033856900000000037, 0.0003433200000000011, 0.00033922200000000013, 0.00034370900000000107, 0.0003390559999999973, 0.0003396110000000001, 0.00034469499999999903, 0.0003439859999999975, 0.0003395840000000004, 0.0003447640000000009, 0.00034341599999999917, 0.00034231900000000065, 0.000341097999999998, 0.00034340299999999907, 0.00033962499999999965, 0.00034263899999999875, 0.0003401659999999959, 0.00034377700000000344, 0.000344098000000001, 0.0003405000000000005, 0.0003422360000000027, 0.00034227700000000194, 0.0003444729999999979, 0.0003421810000000039, 0.0003401669999999954, 0.0003423330000000002, 0.0003394300000000017, 0.0003396800000000019, 0.000340291999999999, 0.00034258300000000047, 0.00034358400000000094, 0.00033997199999999395, 0.00034458300000000247, 0.00034387500000000043, 0.00033927699999999894, 0.000341403000000004, 0.0003400559999999983, 0.0003438330000000017, 0.00034170800000000306, 0.00034155500000000033, 0.00033844400000000024, 0.00033847299999999886, 0.00034127700000000094, 0.0003437920000000025, 0.0003387229999999991, 0.00033870800000000006, 0.0003407779999999999, 0.0003442219999999982]</msg>
<status status="PASS" starttime="20201110 08:37:08.150" endtime="20201110 08:37:08.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.145" endtime="20201110 08:37:08.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.155" endtime="20201110 08:37:08.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:08.159" endtime="20201110 08:37:08.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.157" endtime="20201110 08:37:08.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.153" endtime="20201110 08:37:08.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.760" endtime="20201110 08:37:08.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.760" endtime="20201110 08:37:08.180"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.189" endtime="20201110 08:37:08.224"></status>
</kw>
<msg timestamp="20201110 08:37:08.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.187" endtime="20201110 08:37:08.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.225" endtime="20201110 08:37:08.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.228" endtime="20201110 08:37:08.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.184" endtime="20201110 08:37:08.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.182" endtime="20201110 08:37:08.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.238" endtime="20201110 08:37:08.525"></status>
</kw>
<msg timestamp="20201110 08:37:08.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.237" endtime="20201110 08:37:08.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.530" endtime="20201110 08:37:08.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.538" endtime="20201110 08:37:08.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.234" endtime="20201110 08:37:08.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.232" endtime="20201110 08:37:08.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:08.545" level="INFO">${RESULT} = [{'time': 0.021901361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033515300000000123, 'source_diff': 0.00033515300000000123}, {'time': 0.022266736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:08.541" endtime="20201110 08:37:08.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:08.559" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:08.546" endtime="20201110 08:37:08.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.564" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:37:08.563" endtime="20201110 08:37:08.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.566" level="INFO">VALUE: [0.00033515300000000123, 0.0003440829999999985, 0.0003419170000000006, 0.00034126400000000084, 0.00033865300000000126, 0.00034420900000000157, 0.00034195799999999985, 0.00034208299999999997, 0.0003381250000000016, 0.0003432499999999998, 0.0003394590000000003, 0.0003391529999999983, 0.00034173599999999874, 0.0003389299999999977, 0.0003382780000000009, 0.00033995799999999785, 0.0003404580000000018, 0.0003382359999999987, 0.0003433889999999995, 0.00034258399999999994, 0.0003421109999999991, 0.00034186199999999833, 0.0003381250000000016, 0.0003425979999999995, 0.0003433049999999986, 0.00033986100000000033, 0.00034337499999999646, 0.0003422500000000023, 0.0003406529999999963, 0.00033976399999999934, 0.00034155500000000033, 0.00034245899999999635, 0.00033855499999999733, 0.0003406529999999963, 0.00034115300000000376, 0.0003446110000000016, 0.0003441110000000011, 0.00033893100000000065, 0.00033893100000000065, 0.00034440300000000007, 0.0003382640000000048, 0.00034198600000000245, 0.000344292000000003, 0.00034116700000000333, 0.00034376400000000334, 0.0003417219999999957, 0.00034451399999999716, 0.000342791000000002, 0.00034291699999999814, 0.00034348600000000395]</msg>
<status status="PASS" starttime="20201110 08:37:08.565" endtime="20201110 08:37:08.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.560" endtime="20201110 08:37:08.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.570" endtime="20201110 08:37:08.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:08.573" endtime="20201110 08:37:08.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.572" endtime="20201110 08:37:08.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.568" endtime="20201110 08:37:08.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.181" endtime="20201110 08:37:08.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.180" endtime="20201110 08:37:08.594"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.604" endtime="20201110 08:37:08.640"></status>
</kw>
<msg timestamp="20201110 08:37:08.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.602" endtime="20201110 08:37:08.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.642" endtime="20201110 08:37:08.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.644" endtime="20201110 08:37:08.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.599" endtime="20201110 08:37:08.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.597" endtime="20201110 08:37:08.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.655" endtime="20201110 08:37:08.955"></status>
</kw>
<msg timestamp="20201110 08:37:08.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024062069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.654" endtime="20201110 08:37:08.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024062069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.959" endtime="20201110 08:37:08.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.967" endtime="20201110 08:37:08.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.651" endtime="20201110 08:37:08.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.649" endtime="20201110 08:37:08.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:08.974" level="INFO">${RESULT} = [{'time': 0.024062069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003427499999999993, 'source_diff': 0.0003427499999999993}, {'time': 0.024427486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:08.971" endtime="20201110 08:37:08.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:08.988" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:08.975" endtime="20201110 08:37:08.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.993" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:37:08.992" endtime="20201110 08:37:08.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.995" level="INFO">VALUE: [0.0003427499999999993, 0.00034387500000000043, 0.0003399450000000012, 0.00033929200000000145, 0.000340306000000002, 0.0003398200000000011, 0.00033862499999999865, 0.00034212500000000215, 0.0003399299999999987, 0.0003432780000000024, 0.0003428059999999976, 0.0003448059999999996, 0.0003391389999999987, 0.00033880500000000105, 0.0003422780000000014, 0.0003419719999999994, 0.0003419440000000003, 0.000338693999999997, 0.00033844400000000024, 0.0003394870000000029, 0.00033918099999999743, 0.00034431900000000265, 0.0003419579999999964, 0.00033991599999999567, 0.00033819499999999947, 0.00033850000000000546, 0.0003423050000000011, 0.00034326400000000284, 0.0003392499999999993, 0.00034390299999999957, 0.0003391249999999957, 0.00034220900000000304, 0.00034372299999999717, 0.0003385420000000042, 0.00033970900000000054, 0.0003397500000000067, 0.0003413329999999992, 0.00034437500000000093, 0.0003419859999999955, 0.00034152800000000066, 0.0003431669999999984, 0.0003380700000000028, 0.0003399439999999948, 0.00034326300000000337, 0.0003399450000000012, 0.0003441250000000007, 0.0003414170000000036, 0.0003412500000000013, 0.00034463900000000075, 0.00034243100000000415]</msg>
<status status="PASS" starttime="20201110 08:37:08.994" endtime="20201110 08:37:08.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.989" endtime="20201110 08:37:08.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.999" endtime="20201110 08:37:09.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.003" endtime="20201110 08:37:09.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.001" endtime="20201110 08:37:09.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.997" endtime="20201110 08:37:09.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.595" endtime="20201110 08:37:09.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.595" endtime="20201110 08:37:09.024"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.033" endtime="20201110 08:37:09.067"></status>
</kw>
<msg timestamp="20201110 08:37:09.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.031" endtime="20201110 08:37:09.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.069" endtime="20201110 08:37:09.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.071" endtime="20201110 08:37:09.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.028" endtime="20201110 08:37:09.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.026" endtime="20201110 08:37:09.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.082" endtime="20201110 08:37:09.368"></status>
</kw>
<msg timestamp="20201110 08:37:09.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.080" endtime="20201110 08:37:09.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.372" endtime="20201110 08:37:09.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.380" endtime="20201110 08:37:09.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.077" endtime="20201110 08:37:09.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.075" endtime="20201110 08:37:09.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.387" level="INFO">${RESULT} = [{'time': 0.021854694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003347630000000018, 'source_diff': 0.0003347630000000018}, {'time': 0.022219806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:09.384" endtime="20201110 08:37:09.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:09.401" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:09.388" endtime="20201110 08:37:09.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.406" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:37:09.405" endtime="20201110 08:37:09.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.408" level="INFO">VALUE: [0.0003347630000000018, 0.000344098000000001, 0.0003430279999999987, 0.0003379449999999992, 0.00034405599999999883, 0.00034138900000000097, 0.000340291999999999, 0.00033976399999999934, 0.0003422080000000001, 0.00033990199999999957, 0.0003399719999999974, 0.00033829200000000045, 0.00034295899999999685, 0.0003443189999999992, 0.0003394860000000034, 0.0003415140000000011, 0.00034052800000000313, 0.00033891599999999814, 0.00033905499999999783, 0.00033913799999999925, 0.00034209699999999954, 0.000343889, 0.00034455599999999934, 0.00033870899999999954, 0.00034437500000000093, 0.00034004199999999873, 0.00033825000000000174, 0.00033920800000000056, 0.00034022200000000113, 0.00034219500000000347, 0.0003381390000000012, 0.0003409579999999954, 0.00033848599999999895, 0.0003439579999999984, 0.000339888999999996, 0.00034105499999999983, 0.0003405699999999984, 0.0003444439999999993, 0.0003409439999999958, 0.0003442360000000047, 0.00034341599999999917, 0.0003422500000000023, 0.0003399579999999944, 0.00034231900000000065, 0.0003442779999999965, 0.0003404439999999953, 0.00034409700000000154, 0.0003443470000000018, 0.00034097199999999495, 0.00033794399999999974]</msg>
<status status="PASS" starttime="20201110 08:37:09.407" endtime="20201110 08:37:09.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.402" endtime="20201110 08:37:09.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.412" endtime="20201110 08:37:09.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.416" endtime="20201110 08:37:09.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.414" endtime="20201110 08:37:09.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.410" endtime="20201110 08:37:09.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.025" endtime="20201110 08:37:09.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.024" endtime="20201110 08:37:09.437"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.446" endtime="20201110 08:37:09.484"></status>
</kw>
<msg timestamp="20201110 08:37:09.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.444" endtime="20201110 08:37:09.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.485" endtime="20201110 08:37:09.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.488" endtime="20201110 08:37:09.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.441" endtime="20201110 08:37:09.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.439" endtime="20201110 08:37:09.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.498" endtime="20201110 08:37:09.786"></status>
</kw>
<msg timestamp="20201110 08:37:09.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025541167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02589125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:09.497" endtime="20201110 08:37:09.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025541167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02589125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:09.790" endtime="20201110 08:37:09.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.798" endtime="20201110 08:37:09.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.494" endtime="20201110 08:37:09.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.492" endtime="20201110 08:37:09.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.805" level="INFO">${RESULT} = [{'time': 0.02589125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035008300000000103, 'source_diff': 0.00035008300000000103}, {'time': 0.026256444, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:09.802" endtime="20201110 08:37:09.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:09.820" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:09.806" endtime="20201110 08:37:09.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.825" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:37:09.824" endtime="20201110 08:37:09.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.828" level="INFO">VALUE: [0.00035008300000000103, 0.0003434019999999996, 0.00034012500000000015, 0.0003391389999999987, 0.0003417639999999979, 0.00034318000000000196, 0.0003444159999999967, 0.000343292000000002, 0.0003404439999999988, 0.0003412360000000017, 0.0003433889999999995, 0.00033806899999999987, 0.00034218100000000043, 0.0003391389999999987, 0.0003423469999999998, 0.00033944400000000124, 0.00034022200000000113, 0.0003405000000000005, 0.0003426249999999992, 0.000340597000000005, 0.00034076400000000034, 0.00033887500000000237, 0.000344485999999998, 0.0003446530000000003, 0.0003394999999999995, 0.00034342999999999874, 0.0003382359999999987, 0.0003381809999999999, 0.00034177700000000144, 0.00033976399999999934, 0.00033972200000000063, 0.0003446110000000016, 0.00034376400000000334, 0.000339403000000002, 0.00033987499999999643, 0.00034251399999999516, 0.00034126400000000084, 0.0003383610000000023, 0.00034209699999999954, 0.0003399170000000021, 0.00033881899999999715, 0.0003394170000000016, 0.000344000000000004, 0.0003415689999999999, 0.0003390699999999969, 0.0003419580000000033, 0.0003415979999999985, 0.0003402500000000003, 0.000343889, 0.0003411120000000045]</msg>
<status status="PASS" starttime="20201110 08:37:09.826" endtime="20201110 08:37:09.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.821" endtime="20201110 08:37:09.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.831" endtime="20201110 08:37:09.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.835" endtime="20201110 08:37:09.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.833" endtime="20201110 08:37:09.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.830" endtime="20201110 08:37:09.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.438" endtime="20201110 08:37:09.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.437" endtime="20201110 08:37:09.856"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.865" endtime="20201110 08:37:09.901"></status>
</kw>
<msg timestamp="20201110 08:37:09.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.863" endtime="20201110 08:37:09.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.903" endtime="20201110 08:37:09.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.906" endtime="20201110 08:37:09.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.861" endtime="20201110 08:37:09.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.858" endtime="20201110 08:37:09.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.916" endtime="20201110 08:37:10.202"></status>
</kw>
<msg timestamp="20201110 08:37:10.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023353097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023691431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.915" endtime="20201110 08:37:10.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023353097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023691431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.207" endtime="20201110 08:37:10.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.215" endtime="20201110 08:37:10.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.912" endtime="20201110 08:37:10.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.910" endtime="20201110 08:37:10.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:10.222" level="INFO">${RESULT} = [{'time': 0.023691431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033833399999999916, 'source_diff': 0.00033833399999999916}, {'time': 0.024056597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:10.219" endtime="20201110 08:37:10.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:10.236" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:10.223" endtime="20201110 08:37:10.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.241" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:37:10.240" endtime="20201110 08:37:10.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.243" level="INFO">VALUE: [0.00033833399999999916, 0.0003411109999999981, 0.0003439439999999988, 0.000341888999999998, 0.0003397499999999998, 0.0003424300000000012, 0.0003405689999999989, 0.0003385420000000007, 0.0003425139999999986, 0.0003438340000000012, 0.0003430279999999987, 0.00034363899999999975, 0.00034241599999999817, 0.00034202800000000116, 0.0003414439999999998, 0.0003384170000000006, 0.00034059699999999804, 0.00034004199999999873, 0.00033916700000000133, 0.00033904099999999826, 0.00033920900000000004, 0.00034354200000000223, 0.0003437780000000029, 0.00034441699999999964, 0.0003443189999999957, 0.0003404720000000014, 0.0003430140000000026, 0.00034419499999999853, 0.00034052799999999966, 0.0003418199999999996, 0.0003413329999999992, 0.00033998600000000045, 0.0003440419999999958, 0.00034022200000000113, 0.00034186200000000527, 0.0003428200000000006, 0.0003381109999999951, 0.000342791000000002, 0.0003414579999999959, 0.00034136099999999836, 0.0003428470000000003, 0.00034313899999999925, 0.00033954199999999823, 0.00034423599999999777, 0.00034365199999999985, 0.0003380410000000042, 0.0003409170000000031, 0.0003412500000000013, 0.00033994400000000174, 0.00033915300000000176]</msg>
<status status="PASS" starttime="20201110 08:37:10.242" endtime="20201110 08:37:10.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.237" endtime="20201110 08:37:10.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.247" endtime="20201110 08:37:10.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.251" endtime="20201110 08:37:10.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.249" endtime="20201110 08:37:10.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.245" endtime="20201110 08:37:10.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.857" endtime="20201110 08:37:10.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.856" endtime="20201110 08:37:10.272"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.281" endtime="20201110 08:37:10.318"></status>
</kw>
<msg timestamp="20201110 08:37:10.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.279" endtime="20201110 08:37:10.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.320" endtime="20201110 08:37:10.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.322" endtime="20201110 08:37:10.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.276" endtime="20201110 08:37:10.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.274" endtime="20201110 08:37:10.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.333" endtime="20201110 08:37:10.618"></status>
</kw>
<msg timestamp="20201110 08:37:10.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024600069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024941458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.331" endtime="20201110 08:37:10.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024600069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024941458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.623" endtime="20201110 08:37:10.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.631" endtime="20201110 08:37:10.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.329" endtime="20201110 08:37:10.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.327" endtime="20201110 08:37:10.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:10.638" level="INFO">${RESULT} = [{'time': 0.024941458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034138900000000097, 'source_diff': 0.00034138900000000097}, {'time': 0.025306514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:10.634" endtime="20201110 08:37:10.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:10.652" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:10.639" endtime="20201110 08:37:10.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.657" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:37:10.656" endtime="20201110 08:37:10.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.659" level="INFO">VALUE: [0.00034138900000000097, 0.0003431529999999988, 0.0003383049999999971, 0.00034208299999999997, 0.0003431529999999988, 0.0003399299999999987, 0.0003380830000000029, 0.0003423200000000001, 0.0003418329999999997, 0.00034176300000000187, 0.0003411660000000004, 0.00034309699999999707, 0.00034040299999999954, 0.0003410140000000006, 0.0003421520000000018, 0.00034386100000000086, 0.0003408049999999996, 0.00034008299999999797, 0.000341985999999999, 0.0003432500000000033, 0.0003435279999999957, 0.0003394999999999995, 0.00034054199999999923, 0.0003428470000000003, 0.0003393199999999971, 0.00034056900000000584, 0.00034458400000000194, 0.0003409590000000018, 0.0003386800000000009, 0.00034, 0.0003387359999999992, 0.0003385979999999955, 0.0003427219999999967, 0.0003405000000000005, 0.00033793099999999965, 0.0003408049999999996, 0.0003433330000000012, 0.00033948599999999995, 0.000341679999999997, 0.0003409300000000032, 0.0003424580000000038, 0.00033954199999999823, 0.0003433330000000012, 0.0003403329999999982, 0.00034222299999999567, 0.0003415559999999998, 0.00034418099999999896, 0.0003402920000000059, 0.0003384160000000011, 0.000339888999999996]</msg>
<status status="PASS" starttime="20201110 08:37:10.658" endtime="20201110 08:37:10.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.653" endtime="20201110 08:37:10.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.663" endtime="20201110 08:37:10.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.666" endtime="20201110 08:37:10.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.665" endtime="20201110 08:37:10.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.661" endtime="20201110 08:37:10.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.273" endtime="20201110 08:37:10.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.272" endtime="20201110 08:37:10.687"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.697" endtime="20201110 08:37:10.736"></status>
</kw>
<msg timestamp="20201110 08:37:10.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.695" endtime="20201110 08:37:10.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.737" endtime="20201110 08:37:10.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.740" endtime="20201110 08:37:10.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.692" endtime="20201110 08:37:10.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.690" endtime="20201110 08:37:10.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.750" endtime="20201110 08:37:11.037"></status>
</kw>
<msg timestamp="20201110 08:37:11.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025743, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026077764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:10.749" endtime="20201110 08:37:11.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025743, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026077764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:11.041" endtime="20201110 08:37:11.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.049" endtime="20201110 08:37:11.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.746" endtime="20201110 08:37:11.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.744" endtime="20201110 08:37:11.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:11.056" level="INFO">${RESULT} = [{'time': 0.026077764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003347640000000013, 'source_diff': 0.0003347640000000013}, {'time': 0.026443, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:11.053" endtime="20201110 08:37:11.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:11.070" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:11.057" endtime="20201110 08:37:11.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.075" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:37:11.074" endtime="20201110 08:37:11.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.078" level="INFO">VALUE: [0.0003347640000000013, 0.00033851400000000156, 0.00034173599999999874, 0.00034048600000000095, 0.0003399580000000013, 0.00034067999999999946, 0.00033962499999999965, 0.0003435139999999996, 0.00034062500000000065, 0.0003397079999999976, 0.0003446110000000016, 0.00034304199999999826, 0.00034284799999999976, 0.00034090300000000004, 0.0003391250000000026, 0.0003384719999999994, 0.00034469499999999903, 0.00034441699999999964, 0.0003417780000000009, 0.0003428330000000007, 0.0003385280000000046, 0.0003386940000000005, 0.00033966700000000183, 0.00034173599999999527, 0.00034401399999999666, 0.0003405830000000054, 0.0003438330000000017, 0.0003409859999999945, 0.00034469499999999903, 0.00033963899999999575, 0.0003401249999999967, 0.00033898599999999945, 0.00033915300000000176, 0.00034205500000000083, 0.0003435700000000014, 0.0003406109999999976, 0.0003385700000000033, 0.0003424439999999973, 0.0003394300000000017, 0.00034274999999999584, 0.0003419579999999964, 0.00034137500000000487, 0.0003412910000000005, 0.0003408049999999996, 0.00034176400000000134, 0.000342000000000002, 0.000340791, 0.00034154100000000076, 0.0003383049999999971, 0.000339790999999999]</msg>
<status status="PASS" starttime="20201110 08:37:11.076" endtime="20201110 08:37:11.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.071" endtime="20201110 08:37:11.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.081" endtime="20201110 08:37:11.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:11.085" endtime="20201110 08:37:11.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.083" endtime="20201110 08:37:11.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.080" endtime="20201110 08:37:11.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.688" endtime="20201110 08:37:11.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.688" endtime="20201110 08:37:11.106"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.115" endtime="20201110 08:37:11.153"></status>
</kw>
<msg timestamp="20201110 08:37:11.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.113" endtime="20201110 08:37:11.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.154" endtime="20201110 08:37:11.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.157" endtime="20201110 08:37:11.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.111" endtime="20201110 08:37:11.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.109" endtime="20201110 08:37:11.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.167" endtime="20201110 08:37:11.452"></status>
</kw>
<msg timestamp="20201110 08:37:11.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024205222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.166" endtime="20201110 08:37:11.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024205222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.457" endtime="20201110 08:37:11.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.465" endtime="20201110 08:37:11.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.163" endtime="20201110 08:37:11.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.161" endtime="20201110 08:37:11.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:11.472" level="INFO">${RESULT} = [{'time': 0.024546542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003413200000000026, 'source_diff': 0.0003413200000000026}, {'time': 0.024911889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:11.468" endtime="20201110 08:37:11.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:11.487" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:11.473" endtime="20201110 08:37:11.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.492" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:37:11.491" endtime="20201110 08:37:11.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.494" level="INFO">VALUE: [0.0003413200000000026, 0.0003390420000000012, 0.0003442919999999995, 0.00034320900000000057, 0.0003435279999999992, 0.0003410689999999994, 0.0003419310000000002, 0.000342694000000001, 0.0003444729999999979, 0.00034208299999999997, 0.00034404199999999927, 0.0003438059999999986, 0.00034188900000000147, 0.0003396389999999992, 0.0003392780000000019, 0.00033887500000000237, 0.00033876399999999834, 0.0003410689999999994, 0.0003404720000000014, 0.00034183299999999625, 0.0003435279999999957, 0.00033838900000000144, 0.0003430279999999952, 0.00034445899999999835, 0.00033984700000000423, 0.0003388049999999976, 0.00034330600000000155, 0.00034080599999999905, 0.0003423050000000011, 0.00033898599999999945, 0.0003416250000000051, 0.000343889, 0.0003419579999999964, 0.00033940299999999507, 0.000341403000000004, 0.0003441250000000007, 0.0003384170000000006, 0.0003419309999999967, 0.00034072200000000163, 0.0003400139999999996, 0.0003385689999999969, 0.00034454200000000323, 0.0003397360000000002, 0.00034020900000000104, 0.00034059800000000445, 0.0003420129999999952, 0.00034002799999999916, 0.00034436100000000136, 0.0003399720000000009, 0.00033901400000000553]</msg>
<status status="PASS" starttime="20201110 08:37:11.493" endtime="20201110 08:37:11.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.488" endtime="20201110 08:37:11.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.498" endtime="20201110 08:37:11.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:11.501" endtime="20201110 08:37:11.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.500" endtime="20201110 08:37:11.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.496" endtime="20201110 08:37:11.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.107" endtime="20201110 08:37:11.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.106" endtime="20201110 08:37:11.522"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.532" endtime="20201110 08:37:11.569"></status>
</kw>
<msg timestamp="20201110 08:37:11.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.530" endtime="20201110 08:37:11.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.571" endtime="20201110 08:37:11.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.573" endtime="20201110 08:37:11.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.527" endtime="20201110 08:37:11.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.525" endtime="20201110 08:37:11.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.584" endtime="20201110 08:37:11.870"></status>
</kw>
<msg timestamp="20201110 08:37:11.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02467825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025024347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:11.582" endtime="20201110 08:37:11.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02467825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025024347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:11.875" endtime="20201110 08:37:11.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.883" endtime="20201110 08:37:11.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.580" endtime="20201110 08:37:11.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.578" endtime="20201110 08:37:11.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:11.890" level="INFO">${RESULT} = [{'time': 0.025024347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034609700000000007, 'source_diff': 0.00034609700000000007}, {'time': 0.025389778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:11.886" endtime="20201110 08:37:11.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:11.904" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:11.891" endtime="20201110 08:37:11.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.909" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:37:11.907" endtime="20201110 08:37:11.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.911" level="INFO">VALUE: [0.00034609700000000007, 0.00034034700000000126, 0.0003416390000000012, 0.0003426390000000022, 0.00034088900000000047, 0.0003386109999999991, 0.0003424170000000011, 0.0003424300000000012, 0.0003383329999999997, 0.00034318099999999796, 0.0003431940000000015, 0.00033879200000000095, 0.00033893100000000065, 0.0003419440000000003, 0.00034409700000000154, 0.00034368100000000193, 0.00034276400000000234, 0.0003444449999999988, 0.0003403469999999978, 0.0003416940000000035, 0.00034055499999999933, 0.00034276400000000234, 0.000339888999999996, 0.0003446530000000003, 0.00034019399999999506, 0.000342000000000002, 0.0003439579999999984, 0.00034040200000000354, 0.00034087500000000437, 0.00034286099999999986, 0.0003391810000000009, 0.0003387369999999987, 0.0003387919999999975, 0.00034, 0.0003393889999999955, 0.00033823600000000564, 0.00034092999999999624, 0.00034072299999999417, 0.00033959699999999704, 0.0003442230000000046, 0.0003397779999999989, 0.0003384170000000006, 0.00033877699999999844, 0.00033934799999999626, 0.00034126300000000137, 0.00034390299999999957, 0.00034397199999999795, 0.00033837500000000187, 0.0003388469999999963, 0.0003423050000000011]</msg>
<status status="PASS" starttime="20201110 08:37:11.910" endtime="20201110 08:37:11.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.905" endtime="20201110 08:37:11.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.915" endtime="20201110 08:37:11.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:11.918" endtime="20201110 08:37:11.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.917" endtime="20201110 08:37:11.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.913" endtime="20201110 08:37:11.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.523" endtime="20201110 08:37:11.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.523" endtime="20201110 08:37:11.939"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.948" endtime="20201110 08:37:11.988"></status>
</kw>
<msg timestamp="20201110 08:37:11.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.947" endtime="20201110 08:37:11.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.989" endtime="20201110 08:37:11.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.992" endtime="20201110 08:37:11.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.944" endtime="20201110 08:37:11.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.942" endtime="20201110 08:37:11.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.002" endtime="20201110 08:37:12.288"></status>
</kw>
<msg timestamp="20201110 08:37:12.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024709264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025059639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.001" endtime="20201110 08:37:12.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024709264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025059639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.292" endtime="20201110 08:37:12.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.300" endtime="20201110 08:37:12.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.998" endtime="20201110 08:37:12.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.996" endtime="20201110 08:37:12.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.307" level="INFO">${RESULT} = [{'time': 0.025059639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000350375, 'source_diff': 0.000350375}, {'time': 0.025424889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000341444999999...</msg>
<status status="PASS" starttime="20201110 08:37:12.304" endtime="20201110 08:37:12.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:12.321" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:12.308" endtime="20201110 08:37:12.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.326" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:37:12.325" endtime="20201110 08:37:12.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.329" level="INFO">VALUE: [0.000350375, 0.00034144499999999925, 0.00034001400000000306, 0.00034308300000000097, 0.0003412230000000016, 0.0003444449999999988, 0.00034280600000000105, 0.0003413889999999975, 0.00034329099999999904, 0.00033986100000000033, 0.00034400000000000056, 0.00034322200000000067, 0.0003436380000000003, 0.0003380559999999998, 0.0003409170000000031, 0.00033880500000000105, 0.0003438340000000012, 0.00033920800000000056, 0.0003396390000000027, 0.00034459700000000204, 0.0003415000000000015, 0.0003435700000000014, 0.00034211100000000605, 0.0003393610000000033, 0.0003402500000000003, 0.00034266700000000483, 0.0003420140000000016, 0.00034420800000000557, 0.0003426659999999984, 0.0003392359999999997, 0.0003427089999999966, 0.0003414160000000041, 0.00034102800000000016, 0.0003400830000000049, 0.00033838900000000144, 0.00034413900000000025, 0.0003418050000000006, 0.0003392500000000062, 0.000343194000000005, 0.0003405280000000066, 0.00034202800000000116, 0.00034119500000000247, 0.000338403000000001, 0.00034069499999999503, 0.00034397199999999795, 0.00033922200000000013, 0.0003397499999999998, 0.00034088900000000394, 0.00034302800000000216, 0.00034331900000000165]</msg>
<status status="PASS" starttime="20201110 08:37:12.327" endtime="20201110 08:37:12.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.322" endtime="20201110 08:37:12.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.336" endtime="20201110 08:37:12.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.340" endtime="20201110 08:37:12.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.338" endtime="20201110 08:37:12.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.334" endtime="20201110 08:37:12.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.940" endtime="20201110 08:37:12.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.940" endtime="20201110 08:37:12.361"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.370" endtime="20201110 08:37:12.409"></status>
</kw>
<msg timestamp="20201110 08:37:12.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.368" endtime="20201110 08:37:12.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.410" endtime="20201110 08:37:12.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.413" endtime="20201110 08:37:12.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.365" endtime="20201110 08:37:12.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.363" endtime="20201110 08:37:12.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.423" endtime="20201110 08:37:12.709"></status>
</kw>
<msg timestamp="20201110 08:37:12.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025390792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025735778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.422" endtime="20201110 08:37:12.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025390792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025735778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.713" endtime="20201110 08:37:12.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.722" endtime="20201110 08:37:12.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.419" endtime="20201110 08:37:12.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.417" endtime="20201110 08:37:12.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.729" level="INFO">${RESULT} = [{'time': 0.025735778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000344986000000002, 'source_diff': 0.000344986000000002}, {'time': 0.026100847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:12.725" endtime="20201110 08:37:12.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:12.743" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:12.730" endtime="20201110 08:37:12.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.748" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:37:12.747" endtime="20201110 08:37:12.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.751" level="INFO">VALUE: [0.000344986000000002, 0.0003423050000000011, 0.0003388200000000001, 0.0003395689999999979, 0.0003440279999999997, 0.00034451300000000115, 0.00034372200000000117, 0.00033934700000000026, 0.0003432639999999994, 0.00033957000000000084, 0.00034395800000000185, 0.0003398330000000012, 0.0003398749999999999, 0.0003391109999999996, 0.00033986100000000033, 0.00034308300000000097, 0.00034255499999999786, 0.00034338900000000644, 0.0003389300000000012, 0.00034272200000000363, 0.0003380139999999976, 0.0003408469999999983, 0.0003403889999999965, 0.0003390699999999969, 0.0003442500000000043, 0.00034309700000000054, 0.0003437360000000042, 0.00034141599999999717, 0.0003429449999999973, 0.00034108399999999844, 0.000342777999999995, 0.0003417079999999961, 0.00033952799999999866, 0.0003434729999999969, 0.0003383199999999961, 0.0003430140000000026, 0.00033847299999999886, 0.00034281900000000115, 0.00034020800000000156, 0.00033908299999999697, 0.0003425000000000025, 0.0003416659999999974, 0.00034091699999999614, 0.00034269399999999756, 0.0003438749999999935, 0.0003412780000000004, 0.000343889, 0.00033855600000000374, 0.00033858299999999647, 0.00034287499999999943]</msg>
<status status="PASS" starttime="20201110 08:37:12.749" endtime="20201110 08:37:12.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.744" endtime="20201110 08:37:12.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.754" endtime="20201110 08:37:12.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.758" endtime="20201110 08:37:12.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.756" endtime="20201110 08:37:12.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.753" endtime="20201110 08:37:12.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.362" endtime="20201110 08:37:12.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.361" endtime="20201110 08:37:12.779"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.788" endtime="20201110 08:37:12.825"></status>
</kw>
<msg timestamp="20201110 08:37:12.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.787" endtime="20201110 08:37:12.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.827" endtime="20201110 08:37:12.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.830" endtime="20201110 08:37:12.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.784" endtime="20201110 08:37:12.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.782" endtime="20201110 08:37:12.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.840" endtime="20201110 08:37:13.127"></status>
</kw>
<msg timestamp="20201110 08:37:13.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024003389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024343583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.838" endtime="20201110 08:37:13.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024003389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024343583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.131" endtime="20201110 08:37:13.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.139" endtime="20201110 08:37:13.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.836" endtime="20201110 08:37:13.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.834" endtime="20201110 08:37:13.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.146" level="INFO">${RESULT} = [{'time': 0.024343583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003401939999999985, 'source_diff': 0.0003401939999999985}, {'time': 0.024708833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:13.143" endtime="20201110 08:37:13.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:13.161" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:13.147" endtime="20201110 08:37:13.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.166" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:37:13.165" endtime="20201110 08:37:13.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.169" level="INFO">VALUE: [0.0003401939999999985, 0.0003393330000000007, 0.0003409299999999997, 0.00033965300000000226, 0.00034088900000000047, 0.00034072199999999817, 0.00034067999999999946, 0.0003397499999999998, 0.00034302800000000216, 0.00034383299999999825, 0.00034244500000000025, 0.0003431799999999985, 0.0003409169999999996, 0.00033991599999999914, 0.00034304199999999826, 0.00034273599999999974, 0.0003438470000000013, 0.00034337499999999993, 0.00034031899999999865, 0.0003428200000000006, 0.00033865300000000126, 0.0003415129999999947, 0.00033879100000000495, 0.00034037499999999693, 0.00034143100000000315, 0.00034398700000000393, 0.0003431110000000001, 0.00034097199999999495, 0.0003407500000000008, 0.0003436110000000006, 0.0003407779999999999, 0.00034081899999999915, 0.0003428470000000003, 0.0003435419999999953, 0.0003386800000000009, 0.00034154100000000076, 0.00033837500000000187, 0.00033805500000000377, 0.0003424720000000034, 0.0003384719999999994, 0.0003420699999999999, 0.00033887500000000237, 0.0003422219999999962, 0.00034166700000000383, 0.0003442500000000043, 0.00034120900000000204, 0.0003429999999999961, 0.0003412360000000017, 0.0003386380000000022, 0.00034313899999999925]</msg>
<status status="PASS" starttime="20201110 08:37:13.167" endtime="20201110 08:37:13.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.162" endtime="20201110 08:37:13.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.172" endtime="20201110 08:37:13.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.176" endtime="20201110 08:37:13.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.174" endtime="20201110 08:37:13.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.171" endtime="20201110 08:37:13.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.780" endtime="20201110 08:37:13.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.780" endtime="20201110 08:37:13.197"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.206" endtime="20201110 08:37:13.242"></status>
</kw>
<msg timestamp="20201110 08:37:13.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.204" endtime="20201110 08:37:13.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.244" endtime="20201110 08:37:13.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.246" endtime="20201110 08:37:13.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.202" endtime="20201110 08:37:13.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.199" endtime="20201110 08:37:13.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.257" endtime="20201110 08:37:13.543"></status>
</kw>
<msg timestamp="20201110 08:37:13.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023419847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.255" endtime="20201110 08:37:13.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023419847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.547" endtime="20201110 08:37:13.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.555" endtime="20201110 08:37:13.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.252" endtime="20201110 08:37:13.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.251" endtime="20201110 08:37:13.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.562" level="INFO">${RESULT} = [{'time': 0.023762819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003429720000000004, 'source_diff': 0.0003429720000000004}, {'time': 0.024127875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:13.559" endtime="20201110 08:37:13.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:13.576" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:13.563" endtime="20201110 08:37:13.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.581" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:37:13.580" endtime="20201110 08:37:13.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.583" level="INFO">VALUE: [0.0003429720000000004, 0.0003424719999999999, 0.00034259700000000004, 0.00034337499999999993, 0.00034036100000000083, 0.00033852800000000113, 0.00034184700000000276, 0.00034108300000000244, 0.00033887500000000237, 0.00034154200000000023, 0.00034323600000000024, 0.0003400559999999983, 0.0003409439999999993, 0.0003414719999999989, 0.00034, 0.00034437500000000093, 0.00034222199999999967, 0.0003385560000000003, 0.0003424859999999995, 0.00034434800000000126, 0.00033965300000000226, 0.000341000000000001, 0.00034334800000000026, 0.0003445419999999963, 0.00034369399999999856, 0.0003399580000000013, 0.0003398480000000037, 0.0003401659999999959, 0.00034192999999999724, 0.00033979100000000595, 0.00034115199999999735, 0.00034136099999999836, 0.00034390299999999957, 0.00034186099999999886, 0.0003427089999999966, 0.0003442079999999986, 0.0003412079999999956, 0.0003386109999999956, 0.00034186099999999886, 0.00034026399999999984, 0.00034301399999999566, 0.0003381249999999947, 0.0003392359999999997, 0.0003445560000000028, 0.00034270800000000406, 0.00033888900000000194, 0.00034386100000000086, 0.000343777999999996, 0.00034441699999999964, 0.0003409030000000035]</msg>
<status status="PASS" starttime="20201110 08:37:13.582" endtime="20201110 08:37:13.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.577" endtime="20201110 08:37:13.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.587" endtime="20201110 08:37:13.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.591" endtime="20201110 08:37:13.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.589" endtime="20201110 08:37:13.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.585" endtime="20201110 08:37:13.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.198" endtime="20201110 08:37:13.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.197" endtime="20201110 08:37:13.612"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.621" endtime="20201110 08:37:13.659"></status>
</kw>
<msg timestamp="20201110 08:37:13.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.619" endtime="20201110 08:37:13.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.660" endtime="20201110 08:37:13.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.663" endtime="20201110 08:37:13.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.617" endtime="20201110 08:37:13.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.614" endtime="20201110 08:37:13.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.673" endtime="20201110 08:37:13.960"></status>
</kw>
<msg timestamp="20201110 08:37:13.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025378611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025737944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.672" endtime="20201110 08:37:13.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025378611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025737944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.964" endtime="20201110 08:37:13.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.973" endtime="20201110 08:37:13.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.669" endtime="20201110 08:37:13.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.667" endtime="20201110 08:37:13.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.980" level="INFO">${RESULT} = [{'time': 0.025737944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003593329999999999, 'source_diff': 0.0003593329999999999}, {'time': 0.026103069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:13.976" endtime="20201110 08:37:13.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:13.994" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:13.981" endtime="20201110 08:37:13.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.998" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:37:13.997" endtime="20201110 08:37:13.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.001" level="INFO">VALUE: [0.0003593329999999999, 0.00033802700000000116, 0.0003436110000000006, 0.00033970899999999707, 0.0003431110000000001, 0.00034427799999999995, 0.00033825000000000174, 0.00034072200000000163, 0.0003387779999999979, 0.00034461099999999814, 0.0003388200000000001, 0.0003405140000000001, 0.0003417639999999979, 0.00034395800000000185, 0.0003441380000000008, 0.00034094400000000274, 0.00033930599999999755, 0.0003395139999999991, 0.00034218099999999696, 0.00034331900000000165, 0.00034355500000000233, 0.0003392499999999993, 0.0003434439999999983, 0.0003395700000000043, 0.00034159699999999904, 0.00034093100000000265, 0.0003437780000000029, 0.00034401399999999666, 0.0003389580000000003, 0.00034163899999999775, 0.00034401399999999666, 0.0003404309999999952, 0.0003417079999999961, 0.0003442639999999969, 0.00034369499999999803, 0.0003428330000000007, 0.00034291699999999814, 0.00034093100000000265, 0.00034331900000000165, 0.00034342999999999874, 0.000341679999999997, 0.00034341599999999917, 0.00034027699999999994, 0.00034215199999999835, 0.0003429580000000043, 0.000342679999999998, 0.00034059699999999804, 0.0003412079999999956, 0.0003431659999999989, 0.0003384719999999994]</msg>
<status status="PASS" starttime="20201110 08:37:14.000" endtime="20201110 08:37:14.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.995" endtime="20201110 08:37:14.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.005" endtime="20201110 08:37:14.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.008" endtime="20201110 08:37:14.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.007" endtime="20201110 08:37:14.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.003" endtime="20201110 08:37:14.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.613" endtime="20201110 08:37:14.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.612" endtime="20201110 08:37:14.029"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.038" endtime="20201110 08:37:14.081"></status>
</kw>
<msg timestamp="20201110 08:37:14.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.037" endtime="20201110 08:37:14.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.083" endtime="20201110 08:37:14.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.085" endtime="20201110 08:37:14.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.034" endtime="20201110 08:37:14.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.032" endtime="20201110 08:37:14.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.095" endtime="20201110 08:37:14.381"></status>
</kw>
<msg timestamp="20201110 08:37:14.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025076014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.094" endtime="20201110 08:37:14.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025076014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.385" endtime="20201110 08:37:14.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.394" endtime="20201110 08:37:14.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.091" endtime="20201110 08:37:14.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.089" endtime="20201110 08:37:14.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:14.400" level="INFO">${RESULT} = [{'time': 0.025076014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033354199999999917, 'source_diff': 0.00033354199999999917}, {'time': 0.025441083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:14.397" endtime="20201110 08:37:14.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:14.415" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:14.401" endtime="20201110 08:37:14.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.419" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:37:14.418" endtime="20201110 08:37:14.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.422" level="INFO">VALUE: [0.00033354199999999917, 0.00034273599999999974, 0.00034119500000000247, 0.00034283299999999725, 0.00034177699999999797, 0.00034404199999999927, 0.00033884799999999923, 0.0003442080000000021, 0.00033931899999999765, 0.0003405560000000023, 0.00034158299999999947, 0.00034040299999999954, 0.00034350000000000006, 0.0003424019999999986, 0.00034018099999999843, 0.0003420690000000004, 0.00033802800000000063, 0.00034219499999999653, 0.0003409309999999957, 0.0003415689999999999, 0.00033822199999999913, 0.00034355599999999487, 0.0003425140000000021, 0.00034005499999999883, 0.0003425700000000004, 0.0003433470000000008, 0.00034269499999999703, 0.0003416529999999973, 0.0003387499999999988, 0.00034418099999999896, 0.00034358299999999453, 0.0003382779999999974, 0.0003429579999999974, 0.00034359700000000104, 0.0003429999999999961, 0.00034458299999999553, 0.0003422219999999962, 0.00034122200000000213, 0.00034441600000000017, 0.0003435419999999953, 0.00034026399999999984, 0.0003388049999999976, 0.00033944400000000124, 0.0003383889999999945, 0.0003404309999999952, 0.00034452800000000366, 0.0003380689999999964, 0.0003415979999999985, 0.00034040299999999607, 0.00033801400000000453]</msg>
<status status="PASS" starttime="20201110 08:37:14.421" endtime="20201110 08:37:14.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.416" endtime="20201110 08:37:14.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.426" endtime="20201110 08:37:14.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.429" endtime="20201110 08:37:14.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.428" endtime="20201110 08:37:14.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.424" endtime="20201110 08:37:14.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.030" endtime="20201110 08:37:14.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.030" endtime="20201110 08:37:14.450"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.459" endtime="20201110 08:37:14.493"></status>
</kw>
<msg timestamp="20201110 08:37:14.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.458" endtime="20201110 08:37:14.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.495" endtime="20201110 08:37:14.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.497" endtime="20201110 08:37:14.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.455" endtime="20201110 08:37:14.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.453" endtime="20201110 08:37:14.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.508" endtime="20201110 08:37:14.793"></status>
</kw>
<msg timestamp="20201110 08:37:14.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020959597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021293653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.506" endtime="20201110 08:37:14.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020959597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021293653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.797" endtime="20201110 08:37:14.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.805" endtime="20201110 08:37:14.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.504" endtime="20201110 08:37:14.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.502" endtime="20201110 08:37:14.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:14.812" level="INFO">${RESULT} = [{'time': 0.021293653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033405599999999924, 'source_diff': 0.00033405599999999924}, {'time': 0.021658917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:14.809" endtime="20201110 08:37:14.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:14.828" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:14.813" endtime="20201110 08:37:14.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.832" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:37:14.831" endtime="20201110 08:37:14.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.835" level="INFO">VALUE: [0.00033405599999999924, 0.0003429590000000003, 0.0003407360000000012, 0.0003389450000000002, 0.0003388060000000005, 0.00034191600000000114, 0.00034320900000000057, 0.00034208299999999997, 0.0003389580000000003, 0.0003384999999999985, 0.0003429720000000004, 0.0003432080000000011, 0.00034091600000000014, 0.00034213899999999825, 0.0003397779999999989, 0.00034199999999999856, 0.0003388749999999989, 0.000344485999999998, 0.00033994499999999775, 0.000341985999999999, 0.0003441529999999998, 0.0003430690000000014, 0.00033948599999999995, 0.00033822199999999913, 0.00034034700000000126, 0.0003393200000000006, 0.0003382499999999983, 0.0003385969999999995, 0.00033926299999999937, 0.00033848599999999895, 0.0003380410000000042, 0.00034081899999999915, 0.00034347199999999745, 0.0003438470000000013, 0.0003430140000000026, 0.0003406529999999963, 0.00033882000000000356, 0.00034409700000000154, 0.00034016700000000233, 0.0003405689999999989, 0.000341679999999997, 0.0003433059999999946, 0.0003411810000000029, 0.0003384449999999997, 0.00034148600000000195, 0.00034240299999999807, 0.0003402089999999941, 0.0003389450000000002, 0.00033833300000000316, 0.00034219499999999653]</msg>
<status status="PASS" starttime="20201110 08:37:14.833" endtime="20201110 08:37:14.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.829" endtime="20201110 08:37:14.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.839" endtime="20201110 08:37:14.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.842" endtime="20201110 08:37:14.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.840" endtime="20201110 08:37:14.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.837" endtime="20201110 08:37:14.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.451" endtime="20201110 08:37:14.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.451" endtime="20201110 08:37:14.863"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.872" endtime="20201110 08:37:14.910"></status>
</kw>
<msg timestamp="20201110 08:37:14.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.871" endtime="20201110 08:37:14.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.912" endtime="20201110 08:37:14.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.914" endtime="20201110 08:37:14.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.868" endtime="20201110 08:37:14.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.866" endtime="20201110 08:37:14.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.925" endtime="20201110 08:37:15.211"></status>
</kw>
<msg timestamp="20201110 08:37:15.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025047458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025392958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.923" endtime="20201110 08:37:15.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025047458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025392958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.215" endtime="20201110 08:37:15.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.224" endtime="20201110 08:37:15.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.920" endtime="20201110 08:37:15.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.919" endtime="20201110 08:37:15.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.230" level="INFO">${RESULT} = [{'time': 0.025392958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003454999999999986, 'source_diff': 0.0003454999999999986}, {'time': 0.025758222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:15.227" endtime="20201110 08:37:15.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:15.244" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:15.231" endtime="20201110 08:37:15.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.249" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:37:15.248" endtime="20201110 08:37:15.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.252" level="INFO">VALUE: [0.0003454999999999986, 0.00034155500000000033, 0.0003428470000000003, 0.0003429019999999991, 0.00034368099999999846, 0.000339985999999997, 0.00033934700000000026, 0.00034056900000000237, 0.00033866700000000083, 0.00033852799999999766, 0.0003392909999999985, 0.00034052799999999966, 0.00033952799999999866, 0.00034205500000000083, 0.00033829200000000045, 0.0003416530000000008, 0.00034373600000000074, 0.0003407779999999999, 0.00034408300000000197, 0.0003432910000000025, 0.0003382499999999983, 0.00034430499999999614, 0.00034065300000000326, 0.00034273599999999627, 0.000339888999999996, 0.0003443470000000018, 0.0003392229999999996, 0.0003392909999999985, 0.00034429199999999605, 0.00034441699999999964, 0.0003387229999999991, 0.00034084700000000523, 0.0003396250000000031, 0.00034091699999999614, 0.00034290299999999857, 0.00034237499999999893, 0.0003435549999999954, 0.0003415689999999999, 0.00034348600000000395, 0.00034106900000000634, 0.0003390700000000038, 0.000343000000000003, 0.0003428470000000003, 0.0003442500000000043, 0.0003399580000000013, 0.00034188900000000494, 0.00034065300000000326, 0.00033955600000000474, 0.0003431529999999988, 0.00034220800000000356]</msg>
<status status="PASS" starttime="20201110 08:37:15.250" endtime="20201110 08:37:15.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.245" endtime="20201110 08:37:15.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.255" endtime="20201110 08:37:15.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.259" endtime="20201110 08:37:15.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.257" endtime="20201110 08:37:15.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.254" endtime="20201110 08:37:15.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.864" endtime="20201110 08:37:15.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.864" endtime="20201110 08:37:15.280"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.289" endtime="20201110 08:37:15.327"></status>
</kw>
<msg timestamp="20201110 08:37:15.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.287" endtime="20201110 08:37:15.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.328" endtime="20201110 08:37:15.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.331" endtime="20201110 08:37:15.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.285" endtime="20201110 08:37:15.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.283" endtime="20201110 08:37:15.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.341" endtime="20201110 08:37:15.628"></status>
</kw>
<msg timestamp="20201110 08:37:15.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025060472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025394736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.340" endtime="20201110 08:37:15.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025060472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025394736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.632" endtime="20201110 08:37:15.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.640" endtime="20201110 08:37:15.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.337" endtime="20201110 08:37:15.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.335" endtime="20201110 08:37:15.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.647" level="INFO">${RESULT} = [{'time': 0.025394736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003342640000000008, 'source_diff': 0.0003342640000000008}, {'time': 0.025759736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:15.644" endtime="20201110 08:37:15.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:15.661" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:15.648" endtime="20201110 08:37:15.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.666" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:37:15.665" endtime="20201110 08:37:15.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.669" level="INFO">VALUE: [0.0003342640000000008, 0.00034004199999999873, 0.00034330600000000155, 0.0003384449999999997, 0.0003409719999999984, 0.0003389719999999999, 0.00033948599999999995, 0.0003381389999999977, 0.00034016699999999886, 0.0003394999999999995, 0.00034084700000000176, 0.0003386389999999982, 0.0003409439999999993, 0.00034109699999999854, 0.00034126300000000137, 0.0003446250000000012, 0.0003380550000000003, 0.0003426659999999984, 0.00034143100000000315, 0.00033834700000000273, 0.0003437500000000038, 0.0003398610000000038, 0.0003406250000000041, 0.00034419500000000547, 0.0003409590000000018, 0.00033834700000000273, 0.0003416940000000035, 0.00034155500000000033, 0.00033834700000000273, 0.00034440300000000007, 0.0003380689999999964, 0.00033919499999999353, 0.0003396250000000031, 0.00033987499999999643, 0.000339194000000001, 0.0003425419999999943, 0.0003419019999999981, 0.00034070900000000154, 0.0003395979999999965, 0.0003380689999999964, 0.00034447199999999845, 0.00034040299999999607, 0.00033844400000000024, 0.00034087499999999743, 0.0003397779999999989, 0.00034405500000000283, 0.00033926399999999884, 0.00034122200000000213, 0.00033804199999999673, 0.0003441529999999998]</msg>
<status status="PASS" starttime="20201110 08:37:15.667" endtime="20201110 08:37:15.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.662" endtime="20201110 08:37:15.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.672" endtime="20201110 08:37:15.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.676" endtime="20201110 08:37:15.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.674" endtime="20201110 08:37:15.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.671" endtime="20201110 08:37:15.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.281" endtime="20201110 08:37:15.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.280" endtime="20201110 08:37:15.697"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.706" endtime="20201110 08:37:15.744"></status>
</kw>
<msg timestamp="20201110 08:37:15.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.704" endtime="20201110 08:37:15.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.746" endtime="20201110 08:37:15.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.749" endtime="20201110 08:37:15.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.702" endtime="20201110 08:37:15.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.699" endtime="20201110 08:37:15.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.759" endtime="20201110 08:37:16.051"></status>
</kw>
<msg timestamp="20201110 08:37:16.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025275736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025621611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.757" endtime="20201110 08:37:16.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025275736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025621611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.055" endtime="20201110 08:37:16.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.064" endtime="20201110 08:37:16.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.755" endtime="20201110 08:37:16.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.753" endtime="20201110 08:37:16.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:16.071" level="INFO">${RESULT} = [{'time': 0.025621611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034587499999999896, 'source_diff': 0.00034587499999999896}, {'time': 0.025986736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:16.067" endtime="20201110 08:37:16.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:16.085" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:16.072" endtime="20201110 08:37:16.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.090" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:37:16.088" endtime="20201110 08:37:16.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.092" level="INFO">VALUE: [0.00034587499999999896, 0.00034266700000000136, 0.0003424440000000008, 0.00034084700000000176, 0.00033852799999999766, 0.000343791999999999, 0.0003437630000000004, 0.00034184799999999876, 0.00034036099999999736, 0.00034327799999999895, 0.00034138900000000097, 0.0003430139999999991, 0.000342694000000001, 0.0003431249999999997, 0.00034255499999999786, 0.0003414300000000002, 0.00033851400000000156, 0.00034038900000000344, 0.00034392999999999924, 0.0003428470000000003, 0.0003407500000000008, 0.0003421799999999975, 0.00034063899999999675, 0.00034340299999999907, 0.00034326300000000337, 0.00034191699999999714, 0.0003425690000000009, 0.00033972200000000063, 0.00034441699999999964, 0.0003411109999999981, 0.00034168099999999646, 0.00034286099999999986, 0.0003435549999999954, 0.000342292000000001, 0.0003440140000000036, 0.0003415559999999998, 0.0003441250000000007, 0.0003418469999999993, 0.00033997300000000036, 0.00033804200000000367, 0.0003441380000000008, 0.0003389160000000016, 0.00033965300000000226, 0.0003384999999999985, 0.0003419019999999981, 0.0003414019999999976, 0.00034454200000000323, 0.0003391799999999945, 0.0003433050000000021, 0.0003436110000000006]</msg>
<status status="PASS" starttime="20201110 08:37:16.091" endtime="20201110 08:37:16.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.086" endtime="20201110 08:37:16.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.096" endtime="20201110 08:37:16.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.099" endtime="20201110 08:37:16.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.098" endtime="20201110 08:37:16.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.094" endtime="20201110 08:37:16.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.698" endtime="20201110 08:37:16.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.697" endtime="20201110 08:37:16.120"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.129" endtime="20201110 08:37:16.166"></status>
</kw>
<msg timestamp="20201110 08:37:16.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.128" endtime="20201110 08:37:16.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.168" endtime="20201110 08:37:16.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.170" endtime="20201110 08:37:16.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.125" endtime="20201110 08:37:16.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.123" endtime="20201110 08:37:16.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.181" endtime="20201110 08:37:16.467"></status>
</kw>
<msg timestamp="20201110 08:37:16.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023707792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024046208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.179" endtime="20201110 08:37:16.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023707792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024046208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.471" endtime="20201110 08:37:16.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.479" endtime="20201110 08:37:16.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.176" endtime="20201110 08:37:16.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.175" endtime="20201110 08:37:16.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:16.486" level="INFO">${RESULT} = [{'time': 0.024046208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003384160000000011, 'source_diff': 0.0003384160000000011}, {'time': 0.024411583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:16.483" endtime="20201110 08:37:16.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:16.501" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:16.487" endtime="20201110 08:37:16.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.506" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:37:16.505" endtime="20201110 08:37:16.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.509" level="INFO">VALUE: [0.0003384160000000011, 0.000340194000000002, 0.00034354100000000276, 0.00034336100000000036, 0.00034391599999999967, 0.00033930500000000155, 0.00034299999999999956, 0.0003407779999999999, 0.0003445140000000006, 0.0003432080000000011, 0.0003416520000000013, 0.0003433330000000012, 0.000340097000000001, 0.0003400689999999984, 0.0003402500000000003, 0.0003426530000000018, 0.00034016700000000233, 0.00034394500000000175, 0.0003417360000000022, 0.00034008300000000144, 0.0003435279999999957, 0.0003424579999999969, 0.0003394999999999995, 0.00033970900000000054, 0.0003417219999999957, 0.00034037499999999693, 0.0003439300000000062, 0.00034408300000000197, 0.0003425690000000009, 0.0003417360000000022, 0.0003432779999999955, 0.0003443200000000021, 0.00034254200000000123, 0.0003394999999999995, 0.00034402800000000316, 0.0003396529999999953, 0.00034211100000000605, 0.0003390420000000047, 0.0003384719999999994, 0.0003424999999999956, 0.0003413339999999987, 0.00033829100000000445, 0.0003419160000000046, 0.0003403469999999978, 0.00034215300000000476, 0.0003407219999999947, 0.0003407230000000011, 0.0003389300000000012, 0.00033933300000000416, 0.00034072200000000163]</msg>
<status status="PASS" starttime="20201110 08:37:16.507" endtime="20201110 08:37:16.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.502" endtime="20201110 08:37:16.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.512" endtime="20201110 08:37:16.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.516" endtime="20201110 08:37:16.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.514" endtime="20201110 08:37:16.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.511" endtime="20201110 08:37:16.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.121" endtime="20201110 08:37:16.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.121" endtime="20201110 08:37:16.537"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.546" endtime="20201110 08:37:16.584"></status>
</kw>
<msg timestamp="20201110 08:37:16.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.544" endtime="20201110 08:37:16.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.585" endtime="20201110 08:37:16.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.588" endtime="20201110 08:37:16.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.542" endtime="20201110 08:37:16.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.540" endtime="20201110 08:37:16.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.598" endtime="20201110 08:37:16.884"></status>
</kw>
<msg timestamp="20201110 08:37:16.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024200319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024556472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.597" endtime="20201110 08:37:16.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024200319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024556472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.888" endtime="20201110 08:37:16.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.896" endtime="20201110 08:37:16.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.594" endtime="20201110 08:37:16.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.592" endtime="20201110 08:37:16.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:16.903" level="INFO">${RESULT} = [{'time': 0.024556472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035615299999999794, 'source_diff': 0.00035615299999999794}, {'time': 0.024921597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:16.900" endtime="20201110 08:37:16.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:16.918" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:16.904" endtime="20201110 08:37:16.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.922" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:37:16.921" endtime="20201110 08:37:16.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.925" level="INFO">VALUE: [0.00035615299999999794, 0.0003413469999999988, 0.0003434300000000022, 0.0003398749999999999, 0.00034433299999999875, 0.0003433889999999995, 0.0003425279999999982, 0.0003394590000000003, 0.0003402909999999995, 0.0003420140000000016, 0.00033887500000000237, 0.00034190299999999757, 0.0003427629999999994, 0.0003380550000000003, 0.0003394999999999995, 0.0003426110000000031, 0.00033852700000000166, 0.00033815300000000076, 0.0003405000000000005, 0.00034136099999999836, 0.0003388050000000045, 0.0003405000000000005, 0.00034158399999999894, 0.00033969500000000097, 0.00034418099999999896, 0.0003409580000000023, 0.0003393199999999971, 0.00033820799999999956, 0.0003390699999999969, 0.0003394590000000003, 0.00034154200000000023, 0.00034423699999999724, 0.0003413889999999975, 0.00034208299999999997, 0.0003413469999999988, 0.00033998600000000045, 0.0003441250000000007, 0.0003427920000000015, 0.00034063899999999675, 0.00034055499999999933, 0.0003386390000000017, 0.0003394579999999939, 0.00034347300000000386, 0.0003433470000000008, 0.00033872199999999963, 0.0003391109999999961, 0.0003422219999999962, 0.00034456899999999596, 0.00034276400000000234, 0.0003387920000000044]</msg>
<status status="PASS" starttime="20201110 08:37:16.923" endtime="20201110 08:37:16.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.919" endtime="20201110 08:37:16.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.929" endtime="20201110 08:37:16.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.932" endtime="20201110 08:37:16.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.931" endtime="20201110 08:37:16.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.927" endtime="20201110 08:37:16.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.538" endtime="20201110 08:37:16.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.537" endtime="20201110 08:37:16.953"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.962" endtime="20201110 08:37:17.001"></status>
</kw>
<msg timestamp="20201110 08:37:17.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.961" endtime="20201110 08:37:17.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.002" endtime="20201110 08:37:17.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.005" endtime="20201110 08:37:17.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.958" endtime="20201110 08:37:17.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.956" endtime="20201110 08:37:17.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.015" endtime="20201110 08:37:17.302"></status>
</kw>
<msg timestamp="20201110 08:37:17.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025001847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025332625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.014" endtime="20201110 08:37:17.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025001847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025332625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.306" endtime="20201110 08:37:17.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.315" endtime="20201110 08:37:17.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.011" endtime="20201110 08:37:17.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.009" endtime="20201110 08:37:17.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:17.322" level="INFO">${RESULT} = [{'time': 0.025332625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003307780000000003, 'source_diff': 0.0003307780000000003}, {'time': 0.025697722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:17.319" endtime="20201110 08:37:17.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:17.336" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:17.323" endtime="20201110 08:37:17.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.341" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:37:17.340" endtime="20201110 08:37:17.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.343" level="INFO">VALUE: [0.0003307780000000003, 0.0003395689999999979, 0.00034158299999999947, 0.00034424999999999734, 0.0003420140000000016, 0.0003435560000000018, 0.0003396390000000027, 0.00033812499999999815, 0.00034040299999999954, 0.00034086100000000133, 0.0003410140000000006, 0.0003398200000000011, 0.00033843100000000015, 0.0003381389999999977, 0.0003439310000000022, 0.00034405599999999883, 0.0003422499999999988, 0.00034130500000000355, 0.0003442089999999981, 0.00034354100000000276, 0.00034220800000000356, 0.000344292000000003, 0.00034, 0.0003413889999999975, 0.00034180600000000005, 0.0003386250000000021, 0.0003426390000000057, 0.0003402779999999994, 0.0003384579999999998, 0.00033884799999999576, 0.00034043100000000215, 0.00034458300000000247, 0.00033856900000000384, 0.000338291999999997, 0.0003403049999999991, 0.0003410140000000006, 0.0003417079999999961, 0.00033811100000000205, 0.0003381109999999951, 0.00033986099999999686, 0.0003391800000000014, 0.00034038900000000344, 0.0003410559999999993, 0.00033916600000000185, 0.0003384999999999985, 0.00034369499999999803, 0.0003443470000000018, 0.0003421379999999988, 0.00033880599999999705, 0.0003409439999999958]</msg>
<status status="PASS" starttime="20201110 08:37:17.342" endtime="20201110 08:37:17.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.337" endtime="20201110 08:37:17.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.351" endtime="20201110 08:37:17.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.355" endtime="20201110 08:37:17.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.353" endtime="20201110 08:37:17.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.349" endtime="20201110 08:37:17.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.954" endtime="20201110 08:37:17.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.953" endtime="20201110 08:37:17.376"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.385" endtime="20201110 08:37:17.422"></status>
</kw>
<msg timestamp="20201110 08:37:17.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.383" endtime="20201110 08:37:17.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.424" endtime="20201110 08:37:17.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.426" endtime="20201110 08:37:17.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.381" endtime="20201110 08:37:17.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.378" endtime="20201110 08:37:17.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.437" endtime="20201110 08:37:17.723"></status>
</kw>
<msg timestamp="20201110 08:37:17.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024468083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024808889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.435" endtime="20201110 08:37:17.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024468083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024808889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.727" endtime="20201110 08:37:17.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.736" endtime="20201110 08:37:17.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.433" endtime="20201110 08:37:17.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.431" endtime="20201110 08:37:17.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:17.742" level="INFO">${RESULT} = [{'time': 0.024808889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034080599999999905, 'source_diff': 0.00034080599999999905}, {'time': 0.025174056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:17.739" endtime="20201110 08:37:17.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:17.756" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:17.743" endtime="20201110 08:37:17.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.761" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:37:17.760" endtime="20201110 08:37:17.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.764" level="INFO">VALUE: [0.00034080599999999905, 0.0003410559999999993, 0.0003419300000000007, 0.0003408329999999987, 0.0003385420000000007, 0.0003380700000000028, 0.00033854199999999723, 0.0003426530000000018, 0.00034441600000000017, 0.0003434310000000017, 0.0003423469999999998, 0.000342195, 0.0003417629999999984, 0.00034442999999999974, 0.00034012500000000015, 0.0003401529999999993, 0.0003441659999999999, 0.0003437639999999999, 0.00034183299999999625, 0.0003386109999999956, 0.0003432219999999972, 0.0003411109999999981, 0.0003431110000000001, 0.00033790200000000103, 0.0003418199999999996, 0.0003406109999999976, 0.000343388, 0.0003410689999999994, 0.00034347199999999745, 0.0003412219999999952, 0.00033916700000000133, 0.00034263899999999875, 0.0003406810000000024, 0.000343194000000005, 0.00033922200000000013, 0.0003387359999999992, 0.00033927800000000535, 0.00034320800000000456, 0.0003443470000000018, 0.00034132000000000606, 0.0003442079999999986, 0.00034220800000000356, 0.0003397499999999998, 0.0003389450000000002, 0.00033837500000000187, 0.00033933400000000363, 0.00034280499999999464, 0.0003401669999999954, 0.0003381109999999951, 0.0003429579999999974]</msg>
<status status="PASS" starttime="20201110 08:37:17.762" endtime="20201110 08:37:17.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.757" endtime="20201110 08:37:17.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.767" endtime="20201110 08:37:17.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.771" endtime="20201110 08:37:17.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.770" endtime="20201110 08:37:17.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.766" endtime="20201110 08:37:17.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.377" endtime="20201110 08:37:17.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.376" endtime="20201110 08:37:17.792"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.801" endtime="20201110 08:37:17.841"></status>
</kw>
<msg timestamp="20201110 08:37:17.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.800" endtime="20201110 08:37:17.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.842" endtime="20201110 08:37:17.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.845" endtime="20201110 08:37:17.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.797" endtime="20201110 08:37:17.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.795" endtime="20201110 08:37:17.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.855" endtime="20201110 08:37:18.142"></status>
</kw>
<msg timestamp="20201110 08:37:18.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024996833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025352889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.854" endtime="20201110 08:37:18.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024996833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025352889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.146" endtime="20201110 08:37:18.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.154" endtime="20201110 08:37:18.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.851" endtime="20201110 08:37:18.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.849" endtime="20201110 08:37:18.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.161" level="INFO">${RESULT} = [{'time': 0.025352889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035605600000000043, 'source_diff': 0.00035605600000000043}, {'time': 0.025718236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:18.158" endtime="20201110 08:37:18.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:18.223" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:18.162" endtime="20201110 08:37:18.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.227" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:37:18.226" endtime="20201110 08:37:18.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.230" level="INFO">VALUE: [0.00035605600000000043, 0.0003388330000000002, 0.00033858299999999994, 0.00034154100000000076, 0.0003411249999999977, 0.0003393749999999994, 0.0003434439999999983, 0.00033844400000000024, 0.0003435980000000005, 0.0003395970000000005, 0.0003425690000000009, 0.00033969500000000097, 0.0003420560000000003, 0.0003410140000000006, 0.00034072199999999817, 0.00034363899999999975, 0.00034240300000000154, 0.00034038899999999997, 0.00034458300000000247, 0.0003400269999999997, 0.00033808299999999597, 0.0003441250000000007, 0.0003440419999999958, 0.0003424999999999956, 0.00033977699999999944, 0.0003406520000000038, 0.0003386390000000017, 0.00034424999999999734, 0.0003413889999999975, 0.00034319399999999806, 0.0003408199999999986, 0.0003431810000000049, 0.00034165300000000426, 0.0003387500000000057, 0.0003406659999999964, 0.00034291699999999814, 0.000343889, 0.00034284799999999976, 0.0003444590000000053, 0.0003422639999999949, 0.00034419499999999853, 0.000343000000000003, 0.00033990299999999557, 0.0003407919999999995, 0.0003444720000000054, 0.00033836099999999536, 0.000343388, 0.00033894400000000074, 0.00034441600000000017, 0.00034059699999999804]</msg>
<status status="PASS" starttime="20201110 08:37:18.229" endtime="20201110 08:37:18.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.224" endtime="20201110 08:37:18.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.234" endtime="20201110 08:37:18.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.238" endtime="20201110 08:37:18.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.236" endtime="20201110 08:37:18.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.232" endtime="20201110 08:37:18.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.793" endtime="20201110 08:37:18.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.793" endtime="20201110 08:37:18.259"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.268" endtime="20201110 08:37:18.307"></status>
</kw>
<msg timestamp="20201110 08:37:18.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.266" endtime="20201110 08:37:18.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.308" endtime="20201110 08:37:18.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.311" endtime="20201110 08:37:18.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.263" endtime="20201110 08:37:18.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.261" endtime="20201110 08:37:18.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.320" endtime="20201110 08:37:18.606"></status>
</kw>
<msg timestamp="20201110 08:37:18.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025647444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025989903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.319" endtime="20201110 08:37:18.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025647444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025989903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.610" endtime="20201110 08:37:18.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.619" endtime="20201110 08:37:18.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.316" endtime="20201110 08:37:18.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.314" endtime="20201110 08:37:18.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.626" level="INFO">${RESULT} = [{'time': 0.025989903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003424590000000033, 'source_diff': 0.0003424590000000033}, {'time': 0.026355028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:18.622" endtime="20201110 08:37:18.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:18.640" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:18.627" endtime="20201110 08:37:18.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.645" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:37:18.644" endtime="20201110 08:37:18.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.647" level="INFO">VALUE: [0.0003424590000000033, 0.0003389450000000002, 0.000340194999999998, 0.0003430269999999992, 0.0003418469999999993, 0.0003408750000000009, 0.0003409169999999996, 0.0003401659999999994, 0.0003386109999999991, 0.0003393330000000007, 0.0003441529999999998, 0.00034073599999999774, 0.0003419300000000007, 0.00033854100000000123, 0.00033998600000000045, 0.0003384589999999993, 0.0003424450000000037, 0.0003417360000000022, 0.0003436120000000001, 0.0003387779999999979, 0.00034019500000000147, 0.0003428470000000003, 0.00034420800000000557, 0.0003396250000000031, 0.000340806000000006, 0.00033886099999999586, 0.0003404450000000017, 0.0003384999999999985, 0.00034436100000000136, 0.00034320900000000404, 0.000338679999999994, 0.0003379719999999989, 0.00034220900000000304, 0.00034430499999999614, 0.0003441250000000007, 0.0003387640000000053, 0.000343292000000002, 0.000343889, 0.00034061100000000455, 0.0003405140000000001, 0.0003439579999999984, 0.00034434699999999485, 0.00033858299999999647, 0.0003437360000000042, 0.0003428330000000007, 0.0003387920000000044, 0.00034093100000000265, 0.0003436250000000002, 0.00034090299999999657, 0.00034436100000000136]</msg>
<status status="PASS" starttime="20201110 08:37:18.646" endtime="20201110 08:37:18.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.641" endtime="20201110 08:37:18.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.651" endtime="20201110 08:37:18.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.654" endtime="20201110 08:37:18.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.653" endtime="20201110 08:37:18.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.649" endtime="20201110 08:37:18.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.260" endtime="20201110 08:37:18.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.259" endtime="20201110 08:37:18.675"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.684" endtime="20201110 08:37:18.718"></status>
</kw>
<msg timestamp="20201110 08:37:18.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.683" endtime="20201110 08:37:18.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.720" endtime="20201110 08:37:18.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.723" endtime="20201110 08:37:18.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.680" endtime="20201110 08:37:18.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.678" endtime="20201110 08:37:18.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.732" endtime="20201110 08:37:19.019"></status>
</kw>
<msg timestamp="20201110 08:37:19.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021007653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021365514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.730" endtime="20201110 08:37:19.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021007653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021365514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.023" endtime="20201110 08:37:19.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.031" endtime="20201110 08:37:19.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.728" endtime="20201110 08:37:19.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.726" endtime="20201110 08:37:19.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.038" level="INFO">${RESULT} = [{'time': 0.021365514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003578609999999975, 'source_diff': 0.0003578609999999975}, {'time': 0.021730764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:19.035" endtime="20201110 08:37:19.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:19.053" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:19.039" endtime="20201110 08:37:19.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.058" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:37:19.056" endtime="20201110 08:37:19.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.060" level="INFO">VALUE: [0.0003578609999999975, 0.00034072199999999817, 0.0003424170000000011, 0.00034330600000000155, 0.00034038899999999997, 0.00034377699999999997, 0.00034199999999999856, 0.0003429310000000012, 0.00034459699999999857, 0.00033884699999999976, 0.00033870800000000006, 0.00033927699999999894, 0.00034056900000000237, 0.0003394720000000004, 0.00034377799999999945, 0.0003406110000000011, 0.0003392499999999993, 0.0003384719999999994, 0.000341985999999999, 0.0003410559999999993, 0.0003432919999999985, 0.00034067999999999946, 0.00034411099999999764, 0.000339097, 0.0003441669999999994, 0.000342888999999999, 0.00034372200000000117, 0.00034158399999999894, 0.0003438469999999978, 0.0003421249999999987, 0.0003429309999999977, 0.00034334699999999385, 0.00034120900000000204, 0.0003433889999999995, 0.0003437079999999981, 0.0003402500000000003, 0.00034054099999999976, 0.0003384170000000006, 0.0003400689999999984, 0.00033976399999999934, 0.0003403199999999981, 0.00034148700000000143, 0.00033905600000000424, 0.0003421800000000044, 0.0003390970000000035, 0.0003442910000000035, 0.0003390280000000051, 0.00034198600000000245, 0.00034341599999999917, 0.00034452800000000366]</msg>
<status status="PASS" starttime="20201110 08:37:19.059" endtime="20201110 08:37:19.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.054" endtime="20201110 08:37:19.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.064" endtime="20201110 08:37:19.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.067" endtime="20201110 08:37:19.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.066" endtime="20201110 08:37:19.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.062" endtime="20201110 08:37:19.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.676" endtime="20201110 08:37:19.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.676" endtime="20201110 08:37:19.088"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.097" endtime="20201110 08:37:19.135"></status>
</kw>
<msg timestamp="20201110 08:37:19.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.096" endtime="20201110 08:37:19.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.137" endtime="20201110 08:37:19.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.139" endtime="20201110 08:37:19.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.093" endtime="20201110 08:37:19.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.091" endtime="20201110 08:37:19.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.149" endtime="20201110 08:37:19.436"></status>
</kw>
<msg timestamp="20201110 08:37:19.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024997625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025349694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.147" endtime="20201110 08:37:19.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024997625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025349694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.441" endtime="20201110 08:37:19.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.449" endtime="20201110 08:37:19.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.144" endtime="20201110 08:37:19.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.142" endtime="20201110 08:37:19.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.456" level="INFO">${RESULT} = [{'time': 0.025349694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000352069, 'source_diff': 0.000352069}, {'time': 0.025715014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000343278000000...</msg>
<status status="PASS" starttime="20201110 08:37:19.452" endtime="20201110 08:37:19.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:19.470" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:19.457" endtime="20201110 08:37:19.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.474" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:37:19.473" endtime="20201110 08:37:19.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.477" level="INFO">VALUE: [0.000352069, 0.0003432780000000024, 0.00034259700000000004, 0.00033990299999999904, 0.0003386659999999979, 0.00033883399999999966, 0.000341985999999999, 0.0003421109999999991, 0.00034104199999999973, 0.00034345800000000135, 0.00034081899999999915, 0.0003404580000000018, 0.0003413329999999992, 0.0003441529999999998, 0.000343679999999999, 0.00034258300000000047, 0.00034127700000000094, 0.0003432639999999994, 0.0003430700000000009, 0.00033831899999999665, 0.0003424729999999959, 0.0003444999999999976, 0.0003443200000000021, 0.0003416669999999969, 0.0003386810000000004, 0.00033940200000000253, 0.00034191699999999714, 0.0003436250000000002, 0.0003426249999999992, 0.0003403469999999978, 0.0003399580000000013, 0.0003391810000000009, 0.0003433059999999946, 0.00033893100000000065, 0.00034005499999999883, 0.0003439590000000048, 0.0003412360000000017, 0.00034086099999999786, 0.00034437500000000093, 0.0003441659999999999, 0.0003410689999999994, 0.00034120900000000204, 0.0003418469999999993, 0.00034142999999999674, 0.0003399580000000013, 0.00034419499999999853, 0.00034084799999999776, 0.00033848599999999895, 0.0003396390000000027, 0.00033965300000000226]</msg>
<status status="PASS" starttime="20201110 08:37:19.476" endtime="20201110 08:37:19.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.471" endtime="20201110 08:37:19.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.481" endtime="20201110 08:37:19.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.484" endtime="20201110 08:37:19.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.483" endtime="20201110 08:37:19.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.479" endtime="20201110 08:37:19.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.089" endtime="20201110 08:37:19.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.089" endtime="20201110 08:37:19.505"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.514" endtime="20201110 08:37:19.553"></status>
</kw>
<msg timestamp="20201110 08:37:19.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.513" endtime="20201110 08:37:19.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.554" endtime="20201110 08:37:19.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.557" endtime="20201110 08:37:19.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.510" endtime="20201110 08:37:19.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.508" endtime="20201110 08:37:19.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.566" endtime="20201110 08:37:19.854"></status>
</kw>
<msg timestamp="20201110 08:37:19.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025211403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025562722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.565" endtime="20201110 08:37:19.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025211403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025562722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.859" endtime="20201110 08:37:19.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.867" endtime="20201110 08:37:19.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.562" endtime="20201110 08:37:19.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.560" endtime="20201110 08:37:19.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.874" level="INFO">${RESULT} = [{'time': 0.025562722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035131899999999924, 'source_diff': 0.00035131899999999924}, {'time': 0.025927972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:19.871" endtime="20201110 08:37:19.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:19.889" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:19.875" endtime="20201110 08:37:19.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.894" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:37:19.893" endtime="20201110 08:37:19.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.896" level="INFO">VALUE: [0.00035131899999999924, 0.0003441529999999998, 0.00034254199999999776, 0.000341194999999999, 0.00033990299999999904, 0.00033922200000000013, 0.00034117999999999996, 0.00033890299999999804, 0.00034408400000000144, 0.00034400000000000056, 0.0003439440000000023, 0.000338790999999998, 0.00033930599999999755, 0.000339097, 0.0003443609999999979, 0.00034370900000000107, 0.0003407500000000008, 0.0003384719999999994, 0.00034345899999999735, 0.00033948599999999995, 0.00034192999999999724, 0.0003421249999999987, 0.0003408339999999982, 0.0003418329999999997, 0.000343292000000002, 0.00033902799999999816, 0.0003426109999999996, 0.0003392359999999997, 0.00034202800000000116, 0.00033926399999999884, 0.0003409309999999957, 0.00034451399999999716, 0.0003444999999999976, 0.00034034700000000473, 0.0003401810000000019, 0.0003431659999999989, 0.00034069500000000197, 0.0003382359999999987, 0.00033966700000000183, 0.0003394580000000008, 0.0003401520000000033, 0.00033980599999999805, 0.0003442910000000035, 0.00033959800000000345, 0.00033981899999999815, 0.00034187499999999843, 0.0003424309999999972, 0.00033933300000000416, 0.000344485999999998, 0.00033948599999999995]</msg>
<status status="PASS" starttime="20201110 08:37:19.895" endtime="20201110 08:37:19.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.890" endtime="20201110 08:37:19.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.900" endtime="20201110 08:37:19.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.904" endtime="20201110 08:37:19.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.902" endtime="20201110 08:37:19.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.898" endtime="20201110 08:37:19.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.506" endtime="20201110 08:37:19.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.506" endtime="20201110 08:37:19.925"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.934" endtime="20201110 08:37:19.974"></status>
</kw>
<msg timestamp="20201110 08:37:19.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.932" endtime="20201110 08:37:19.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.976" endtime="20201110 08:37:19.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.978" endtime="20201110 08:37:19.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.930" endtime="20201110 08:37:19.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.927" endtime="20201110 08:37:19.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.988" endtime="20201110 08:37:20.275"></status>
</kw>
<msg timestamp="20201110 08:37:20.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022746222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.986" endtime="20201110 08:37:20.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022746222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.279" endtime="20201110 08:37:20.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.287" endtime="20201110 08:37:20.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.983" endtime="20201110 08:37:20.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.982" endtime="20201110 08:37:20.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:20.294" level="INFO">${RESULT} = [{'time': 0.023092556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003463340000000002, 'source_diff': 0.0003463340000000002}, {'time': 0.023457778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:20.291" endtime="20201110 08:37:20.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:20.308" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:20.295" endtime="20201110 08:37:20.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.313" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:37:20.312" endtime="20201110 08:37:20.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.315" level="INFO">VALUE: [0.0003463340000000002, 0.0003421669999999974, 0.00033988900000000294, 0.00034427799999999995, 0.00033870899999999954, 0.00034413900000000025, 0.00033998600000000045, 0.0003441250000000007, 0.0003425279999999982, 0.00034292999999999824, 0.0003415559999999998, 0.0003410140000000006, 0.00034418099999999896, 0.0003412500000000013, 0.00033867999999999746, 0.0003395550000000018, 0.0003407779999999999, 0.000341292, 0.000338500000000002, 0.0003444449999999988, 0.00034391699999999914, 0.00033954099999999876, 0.00033936099999999983, 0.00033911100000000305, 0.0003408049999999996, 0.0003390410000000052, 0.0003435560000000018, 0.000342000000000002, 0.00033959699999999704, 0.0003409580000000023, 0.0003402500000000003, 0.00034108399999999844, 0.00034043100000000215, 0.00034154200000000023, 0.00033876399999999834, 0.00034169499999999603, 0.0003381249999999947, 0.0003394580000000008, 0.000341292, 0.0003426810000000044, 0.00034070800000000206, 0.0003441669999999994, 0.00034419499999999853, 0.0003423330000000002, 0.00033970800000000106, 0.0003443470000000018, 0.00034330499999999514, 0.0003423330000000002, 0.00034402699999999675, 0.0003444999999999976]</msg>
<status status="PASS" starttime="20201110 08:37:20.314" endtime="20201110 08:37:20.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.309" endtime="20201110 08:37:20.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.319" endtime="20201110 08:37:20.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:20.323" endtime="20201110 08:37:20.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.321" endtime="20201110 08:37:20.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.317" endtime="20201110 08:37:20.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.926" endtime="20201110 08:37:20.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.925" endtime="20201110 08:37:20.344"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.353" endtime="20201110 08:37:20.386"></status>
</kw>
<msg timestamp="20201110 08:37:20.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.351" endtime="20201110 08:37:20.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.388" endtime="20201110 08:37:20.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.391" endtime="20201110 08:37:20.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.348" endtime="20201110 08:37:20.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.346" endtime="20201110 08:37:20.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.400" endtime="20201110 08:37:20.687"></status>
</kw>
<msg timestamp="20201110 08:37:20.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020691722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021050736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.398" endtime="20201110 08:37:20.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020691722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021050736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.691" endtime="20201110 08:37:20.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.699" endtime="20201110 08:37:20.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.396" endtime="20201110 08:37:20.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.394" endtime="20201110 08:37:20.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:20.706" level="INFO">${RESULT} = [{'time': 0.021050736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035901400000000125, 'source_diff': 0.00035901400000000125}, {'time': 0.021415917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:20.703" endtime="20201110 08:37:20.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:20.720" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:20.707" endtime="20201110 08:37:20.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.725" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:37:20.723" endtime="20201110 08:37:20.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.727" level="INFO">VALUE: [0.00035901400000000125, 0.00034137499999999793, 0.000343679999999999, 0.00034263800000000275, 0.0003383879999999985, 0.0003440690000000024, 0.0003422499999999988, 0.0003436659999999994, 0.0003408469999999983, 0.00034168000000000046, 0.0003397079999999976, 0.00033876399999999834, 0.0003405840000000014, 0.0003381250000000016, 0.0003437639999999999, 0.0003404589999999978, 0.0003389450000000002, 0.00034370900000000107, 0.00034062500000000065, 0.0003409299999999997, 0.00033963799999999975, 0.00034427700000000047, 0.0003440140000000001, 0.000342387999999999, 0.0003404169999999991, 0.00034012500000000015, 0.00034252800000000166, 0.0003383049999999971, 0.0003436669999999989, 0.0003413889999999975, 0.0003441250000000007, 0.00034011100000000405, 0.0003407779999999999, 0.00034340299999999907, 0.0003389160000000016, 0.0003390689999999974, 0.0003412230000000016, 0.0003430560000000013, 0.00034241699999999764, 0.00034423599999999777, 0.00033887500000000237, 0.00033866700000000083, 0.00034409700000000154, 0.000341888999999998, 0.00033815300000000076, 0.0003416249999999982, 0.0003422780000000014, 0.00034104100000000026, 0.0003446110000000016, 0.0003391390000000022]</msg>
<status status="PASS" starttime="20201110 08:37:20.726" endtime="20201110 08:37:20.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.721" endtime="20201110 08:37:20.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.731" endtime="20201110 08:37:20.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:20.734" endtime="20201110 08:37:20.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.733" endtime="20201110 08:37:20.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.729" endtime="20201110 08:37:20.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.345" endtime="20201110 08:37:20.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.344" endtime="20201110 08:37:20.755"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.765" endtime="20201110 08:37:20.798"></status>
</kw>
<msg timestamp="20201110 08:37:20.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.763" endtime="20201110 08:37:20.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.800" endtime="20201110 08:37:20.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.802" endtime="20201110 08:37:20.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.760" endtime="20201110 08:37:20.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.758" endtime="20201110 08:37:20.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.811" endtime="20201110 08:37:21.099"></status>
</kw>
<msg timestamp="20201110 08:37:21.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020833222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021190458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.810" endtime="20201110 08:37:21.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020833222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021190458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.103" endtime="20201110 08:37:21.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.112" endtime="20201110 08:37:21.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.807" endtime="20201110 08:37:21.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.805" endtime="20201110 08:37:21.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.119" level="INFO">${RESULT} = [{'time': 0.021190458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035723600000000036, 'source_diff': 0.00035723600000000036}, {'time': 0.021555542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:21.115" endtime="20201110 08:37:21.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:21.133" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:21.120" endtime="20201110 08:37:21.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.137" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:37:21.136" endtime="20201110 08:37:21.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.140" level="INFO">VALUE: [0.00035723600000000036, 0.00034180600000000005, 0.00034427799999999995, 0.00034295800000000085, 0.0003426950000000005, 0.00034109699999999854, 0.00034168099999999993, 0.0003386810000000004, 0.0003405970000000015, 0.00033922200000000013, 0.00034002700000000316, 0.00034254199999999776, 0.0003444449999999988, 0.0003384300000000007, 0.0003413050000000001, 0.000340291999999999, 0.00034223599999999924, 0.00034045799999999835, 0.000339291999999998, 0.00034229099999999804, 0.0003430560000000013, 0.0003438470000000013, 0.0003404300000000027, 0.00034379099999999954, 0.0003430139999999991, 0.0003403190000000021, 0.0003439440000000023, 0.00034409699999999807, 0.00034170900000000254, 0.0003387919999999975, 0.0003397499999999998, 0.00034402699999999675, 0.0003392499999999993, 0.000338888999999995, 0.0003415559999999998, 0.00034130599999999955, 0.00034452800000000366, 0.0003431249999999997, 0.0003386529999999943, 0.00033987500000000337, 0.0003383889999999945, 0.0003406800000000029, 0.0003400830000000049, 0.0003431110000000001, 0.00034331900000000165, 0.0003383049999999971, 0.00034441600000000017, 0.0003434729999999969, 0.000342777999999995, 0.00034363899999999975]</msg>
<status status="PASS" starttime="20201110 08:37:21.139" endtime="20201110 08:37:21.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.134" endtime="20201110 08:37:21.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.144" endtime="20201110 08:37:21.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.147" endtime="20201110 08:37:21.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.146" endtime="20201110 08:37:21.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.142" endtime="20201110 08:37:21.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.756" endtime="20201110 08:37:21.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.756" endtime="20201110 08:37:21.168"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.177" endtime="20201110 08:37:21.216"></status>
</kw>
<msg timestamp="20201110 08:37:21.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.176" endtime="20201110 08:37:21.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.218" endtime="20201110 08:37:21.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.220" endtime="20201110 08:37:21.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.173" endtime="20201110 08:37:21.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.171" endtime="20201110 08:37:21.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.230" endtime="20201110 08:37:21.516"></status>
</kw>
<msg timestamp="20201110 08:37:21.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025145708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025479792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.228" endtime="20201110 08:37:21.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025145708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025479792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.520" endtime="20201110 08:37:21.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.529" endtime="20201110 08:37:21.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.225" endtime="20201110 08:37:21.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.223" endtime="20201110 08:37:21.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.535" level="INFO">${RESULT} = [{'time': 0.025479792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033408400000000185, 'source_diff': 0.00033408400000000185}, {'time': 0.025844917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:21.532" endtime="20201110 08:37:21.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:21.551" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:21.537" endtime="20201110 08:37:21.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.555" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:37:21.554" endtime="20201110 08:37:21.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.558" level="INFO">VALUE: [0.00033408400000000185, 0.00034068099999999893, 0.00033967999999999846, 0.00034113800000000125, 0.000339097, 0.00033980500000000205, 0.00033947299999999986, 0.0003445280000000002, 0.0003417079999999996, 0.0003425279999999982, 0.00034306899999999793, 0.00033880500000000105, 0.00034226400000000184, 0.00033927699999999894, 0.000341292, 0.0003424719999999999, 0.00034129200000000345, 0.0003391249999999957, 0.0003426940000000045, 0.00034045899999999435, 0.00034104199999999973, 0.00034392999999999924, 0.0003431110000000001, 0.000343485999999997, 0.00034015300000000276, 0.00033804200000000367, 0.00034387500000000043, 0.0003408469999999983, 0.00034168099999999646, 0.0003388610000000028, 0.0003405559999999988, 0.000344098000000001, 0.0003398329999999977, 0.0003410140000000006, 0.0003412500000000013, 0.0003386380000000022, 0.0003430409999999953, 0.0003409580000000023, 0.0003380830000000029, 0.00034440300000000007, 0.0003383480000000022, 0.0003400269999999997, 0.0003437219999999977, 0.0003413889999999975, 0.00034016600000000285, 0.0003415000000000015, 0.0003398329999999977, 0.00034237499999999893, 0.0003438340000000012, 0.0003394999999999995]</msg>
<status status="PASS" starttime="20201110 08:37:21.556" endtime="20201110 08:37:21.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.552" endtime="20201110 08:37:21.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.562" endtime="20201110 08:37:21.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.565" endtime="20201110 08:37:21.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.564" endtime="20201110 08:37:21.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.560" endtime="20201110 08:37:21.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.169" endtime="20201110 08:37:21.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.169" endtime="20201110 08:37:21.586"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.595" endtime="20201110 08:37:21.632"></status>
</kw>
<msg timestamp="20201110 08:37:21.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.594" endtime="20201110 08:37:21.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.634" endtime="20201110 08:37:21.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.637" endtime="20201110 08:37:21.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.591" endtime="20201110 08:37:21.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.589" endtime="20201110 08:37:21.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.646" endtime="20201110 08:37:21.934"></status>
</kw>
<msg timestamp="20201110 08:37:21.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024100042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024454542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.644" endtime="20201110 08:37:21.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024100042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024454542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.938" endtime="20201110 08:37:21.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.946" endtime="20201110 08:37:21.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.642" endtime="20201110 08:37:21.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.640" endtime="20201110 08:37:21.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.955" level="INFO">${RESULT} = [{'time': 0.024454542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035450000000000065, 'source_diff': 0.00035450000000000065}, {'time': 0.024819778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:21.950" endtime="20201110 08:37:21.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:21.969" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:21.956" endtime="20201110 08:37:21.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.974" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:37:21.973" endtime="20201110 08:37:21.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.977" level="INFO">VALUE: [0.00035450000000000065, 0.000339097, 0.0003415689999999999, 0.00034222199999999967, 0.0003436529999999993, 0.0003438340000000012, 0.0003397779999999989, 0.000343889, 0.00034076400000000034, 0.00034062500000000065, 0.00034373600000000074, 0.00033916699999999786, 0.00034381999999999815, 0.0003388060000000005, 0.0003403469999999978, 0.0003430139999999991, 0.0003395840000000004, 0.00034216700000000086, 0.00034236099999999936, 0.0003401110000000006, 0.00033866700000000083, 0.00033986200000000327, 0.0003401810000000019, 0.000342485999999996, 0.0003443329999999953, 0.00033820799999999956, 0.00034376400000000334, 0.0003419449999999963, 0.00034208399999999944, 0.00034197300000000236, 0.000341000000000001, 0.0003387499999999988, 0.00034054199999999923, 0.00034322200000000413, 0.00034191599999999767, 0.00034174999999999484, 0.0003401799999999955, 0.00034342999999999874, 0.0003434869999999965, 0.0003387499999999988, 0.0003398190000000051, 0.0003395559999999978, 0.0003396380000000032, 0.0003422360000000027, 0.0003404999999999936, 0.00034101399999999366, 0.0003419439999999968, 0.0003443890000000005, 0.00034404200000000273, 0.0003409579999999954]</msg>
<status status="PASS" starttime="20201110 08:37:21.975" endtime="20201110 08:37:21.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.970" endtime="20201110 08:37:21.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.980" endtime="20201110 08:37:21.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.984" endtime="20201110 08:37:22.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.982" endtime="20201110 08:37:22.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.979" endtime="20201110 08:37:22.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.587" endtime="20201110 08:37:22.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.587" endtime="20201110 08:37:22.005"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.014" endtime="20201110 08:37:22.049"></status>
</kw>
<msg timestamp="20201110 08:37:22.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.013" endtime="20201110 08:37:22.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.051" endtime="20201110 08:37:22.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.053" endtime="20201110 08:37:22.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.010" endtime="20201110 08:37:22.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.008" endtime="20201110 08:37:22.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.063" endtime="20201110 08:37:22.354"></status>
</kw>
<msg timestamp="20201110 08:37:22.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02233775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:22.061" endtime="20201110 08:37:22.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02233775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:22.358" endtime="20201110 08:37:22.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.366" endtime="20201110 08:37:22.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.058" endtime="20201110 08:37:22.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.056" endtime="20201110 08:37:22.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.373" level="INFO">${RESULT} = [{'time': 0.022669958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003322080000000005, 'source_diff': 0.0003322080000000005}, {'time': 0.023035111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:22.369" endtime="20201110 08:37:22.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:22.387" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:22.374" endtime="20201110 08:37:22.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.392" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:37:22.391" endtime="20201110 08:37:22.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.394" level="INFO">VALUE: [0.0003322080000000005, 0.00034195799999999985, 0.0003381109999999986, 0.00034144499999999925, 0.00034036099999999736, 0.0003383329999999997, 0.0003444860000000015, 0.00034394500000000175, 0.00033908300000000044, 0.00033938900000000244, 0.00034258300000000047, 0.000338999999999999, 0.000340097000000001, 0.0003437500000000003, 0.00034344500000000125, 0.0003394580000000008, 0.00034186100000000233, 0.0003426109999999996, 0.0003434590000000008, 0.00034195799999999985, 0.00033788900000000094, 0.00034008300000000144, 0.0003406659999999999, 0.0003414170000000001, 0.0003401109999999971, 0.00033787500000000137, 0.0003428330000000007, 0.00034419499999999853, 0.00034209699999999954, 0.00034445899999999835, 0.0003425270000000022, 0.00034374999999999684, 0.00034080599999999905, 0.0003381800000000004, 0.0003431800000000054, 0.0003436250000000002, 0.0003441110000000011, 0.00033994400000000174, 0.0003410699999999989, 0.00033937500000000287, 0.000344000000000004, 0.0003427920000000015, 0.00034255500000000133, 0.0003423889999999985, 0.0003390699999999969, 0.00034295899999999685, 0.0003386109999999956, 0.0003395979999999965, 0.00033926299999999937, 0.00033901400000000553]</msg>
<status status="PASS" starttime="20201110 08:37:22.393" endtime="20201110 08:37:22.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.388" endtime="20201110 08:37:22.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.402" endtime="20201110 08:37:22.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.405" endtime="20201110 08:37:22.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.404" endtime="20201110 08:37:22.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.400" endtime="20201110 08:37:22.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.006" endtime="20201110 08:37:22.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.005" endtime="20201110 08:37:22.426"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.435" endtime="20201110 08:37:22.472"></status>
</kw>
<msg timestamp="20201110 08:37:22.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.434" endtime="20201110 08:37:22.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.473" endtime="20201110 08:37:22.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.476" endtime="20201110 08:37:22.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.431" endtime="20201110 08:37:22.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.429" endtime="20201110 08:37:22.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.485" endtime="20201110 08:37:22.773"></status>
</kw>
<msg timestamp="20201110 08:37:22.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023194653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023543583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.484" endtime="20201110 08:37:22.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023194653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023543583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.777" endtime="20201110 08:37:22.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.785" endtime="20201110 08:37:22.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.481" endtime="20201110 08:37:22.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.479" endtime="20201110 08:37:22.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.792" level="INFO">${RESULT} = [{'time': 0.023543583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034893000000000077, 'source_diff': 0.00034893000000000077}, {'time': 0.023908792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:22.789" endtime="20201110 08:37:22.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:22.806" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:22.793" endtime="20201110 08:37:22.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.811" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:37:22.810" endtime="20201110 08:37:22.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.813" level="INFO">VALUE: [0.00034893000000000077, 0.00033988900000000294, 0.000340291999999999, 0.00034468099999999946, 0.00034148600000000195, 0.0003435839999999975, 0.00034340299999999907, 0.0003404169999999991, 0.0003399299999999987, 0.0003438470000000013, 0.00034437500000000093, 0.00034259700000000004, 0.0003408049999999996, 0.00034373600000000074, 0.000343889, 0.00033943100000000115, 0.00034017999999999896, 0.00034337499999999993, 0.0003393469999999968, 0.0003413750000000014, 0.0003397360000000002, 0.0003389580000000003, 0.0003416109999999986, 0.0003402779999999994, 0.00034369399999999856, 0.00034098600000000145, 0.000341000000000001, 0.0003412360000000017, 0.0003420699999999999, 0.0003385689999999969, 0.0003417639999999944, 0.000344194000000006, 0.00034319499999999753, 0.0003436250000000002, 0.00033872199999999963, 0.00034442999999999974, 0.00033977699999999944, 0.0003387359999999992, 0.0003392369999999992, 0.00034424999999999734, 0.0003430140000000026, 0.00034026399999999984, 0.00034330499999999514, 0.0003445140000000041, 0.000341888999999998, 0.00034286199999999933, 0.0003397360000000002, 0.00034119500000000247, 0.0003446110000000016, 0.0003415000000000015]</msg>
<status status="PASS" starttime="20201110 08:37:22.812" endtime="20201110 08:37:22.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.807" endtime="20201110 08:37:22.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.817" endtime="20201110 08:37:22.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.821" endtime="20201110 08:37:22.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.819" endtime="20201110 08:37:22.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.815" endtime="20201110 08:37:22.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.427" endtime="20201110 08:37:22.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.426" endtime="20201110 08:37:22.842"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.851" endtime="20201110 08:37:22.889"></status>
</kw>
<msg timestamp="20201110 08:37:22.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.849" endtime="20201110 08:37:22.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.890" endtime="20201110 08:37:22.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.893" endtime="20201110 08:37:22.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.846" endtime="20201110 08:37:22.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.844" endtime="20201110 08:37:22.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.903" endtime="20201110 08:37:23.190"></status>
</kw>
<msg timestamp="20201110 08:37:23.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024681028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025015514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.901" endtime="20201110 08:37:23.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024681028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025015514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.194" endtime="20201110 08:37:23.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.203" endtime="20201110 08:37:23.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.898" endtime="20201110 08:37:23.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.896" endtime="20201110 08:37:23.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.209" level="INFO">${RESULT} = [{'time': 0.025015514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003344859999999984, 'source_diff': 0.0003344859999999984}, {'time': 0.025380528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:23.206" endtime="20201110 08:37:23.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:23.225" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:23.210" endtime="20201110 08:37:23.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.229" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:37:23.228" endtime="20201110 08:37:23.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.232" level="INFO">VALUE: [0.0003344859999999984, 0.00034437500000000093, 0.00033976399999999934, 0.000338597000000003, 0.00034038899999999997, 0.0003430560000000013, 0.00034148600000000195, 0.0003444720000000019, 0.00034323600000000024, 0.00034112500000000115, 0.00034188900000000147, 0.0003407370000000007, 0.0003382359999999987, 0.0003411660000000004, 0.0003384170000000006, 0.00034154200000000023, 0.0003384719999999994, 0.000339097, 0.0003415699999999994, 0.0003440690000000024, 0.00033926399999999884, 0.0003433330000000012, 0.0003403469999999978, 0.0003432079999999976, 0.00034113899999999725, 0.0003434439999999983, 0.00033926399999999884, 0.000340291999999999, 0.00034280600000000105, 0.00033919399999999406, 0.0003401109999999971, 0.0003432230000000036, 0.0003412910000000005, 0.0003383049999999971, 0.00033987499999999643, 0.00034147199999999545, 0.0003419999999999951, 0.00033894400000000074, 0.00034190299999999757, 0.00034342999999999874, 0.0003421659999999979, 0.00034392999999999924, 0.0003440140000000036, 0.00033972200000000063, 0.00034137499999999793, 0.00034140200000000454, 0.0003391249999999957, 0.0003418879999999985, 0.00033965300000000226, 0.00034116700000000333]</msg>
<status status="PASS" starttime="20201110 08:37:23.231" endtime="20201110 08:37:23.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.226" endtime="20201110 08:37:23.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.236" endtime="20201110 08:37:23.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.239" endtime="20201110 08:37:23.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.238" endtime="20201110 08:37:23.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.234" endtime="20201110 08:37:23.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.843" endtime="20201110 08:37:23.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.842" endtime="20201110 08:37:23.260"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.269" endtime="20201110 08:37:23.305"></status>
</kw>
<msg timestamp="20201110 08:37:23.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.268" endtime="20201110 08:37:23.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.307" endtime="20201110 08:37:23.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.309" endtime="20201110 08:37:23.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.265" endtime="20201110 08:37:23.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.263" endtime="20201110 08:37:23.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.319" endtime="20201110 08:37:23.607"></status>
</kw>
<msg timestamp="20201110 08:37:23.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022925833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023264486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.317" endtime="20201110 08:37:23.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022925833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023264486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.611" endtime="20201110 08:37:23.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.619" endtime="20201110 08:37:23.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.315" endtime="20201110 08:37:23.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.313" endtime="20201110 08:37:23.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.626" level="INFO">${RESULT} = [{'time': 0.023264486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033865300000000126, 'source_diff': 0.00033865300000000126}, {'time': 0.02362975, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:23.623" endtime="20201110 08:37:23.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:23.640" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:23.627" endtime="20201110 08:37:23.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.645" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:37:23.643" endtime="20201110 08:37:23.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.647" level="INFO">VALUE: [0.00033865300000000126, 0.0003396250000000031, 0.00034173599999999874, 0.0003426109999999996, 0.0003428189999999977, 0.000344485999999998, 0.00034086100000000133, 0.00034220899999999957, 0.0003443330000000022, 0.0003407500000000008, 0.00034237499999999893, 0.00034195799999999985, 0.00034152800000000066, 0.00034218100000000043, 0.0003436250000000002, 0.00034459700000000204, 0.0003397499999999998, 0.0003422500000000023, 0.0003447079999999991, 0.0003399309999999982, 0.0003417360000000022, 0.0003388200000000001, 0.0003438339999999977, 0.000342791000000002, 0.0003389579999999934, 0.00034320800000000456, 0.00034040299999999607, 0.00034258300000000047, 0.0003414579999999959, 0.0003395139999999991, 0.0003428340000000002, 0.00034408300000000197, 0.0003411250000000046, 0.0003411529999999968, 0.0003411250000000046, 0.0003412639999999939, 0.00033997300000000036, 0.0003431249999999997, 0.0003403199999999981, 0.00033826399999999784, 0.00034154200000000023, 0.00034020900000000104, 0.00034120900000000204, 0.0003415559999999998, 0.0003402779999999994, 0.00033952799999999866, 0.00034116700000000333, 0.00034065300000000326, 0.0003414580000000028, 0.00034363899999999975]</msg>
<status status="PASS" starttime="20201110 08:37:23.646" endtime="20201110 08:37:23.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.641" endtime="20201110 08:37:23.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.651" endtime="20201110 08:37:23.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.654" endtime="20201110 08:37:23.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.653" endtime="20201110 08:37:23.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.649" endtime="20201110 08:37:23.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.261" endtime="20201110 08:37:23.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.261" endtime="20201110 08:37:23.675"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.685" endtime="20201110 08:37:23.722"></status>
</kw>
<msg timestamp="20201110 08:37:23.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.683" endtime="20201110 08:37:23.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.723" endtime="20201110 08:37:23.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.726" endtime="20201110 08:37:23.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.680" endtime="20201110 08:37:23.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.678" endtime="20201110 08:37:23.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.736" endtime="20201110 08:37:24.023"></status>
</kw>
<msg timestamp="20201110 08:37:24.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024935625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025270361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.734" endtime="20201110 08:37:24.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024935625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025270361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.027" endtime="20201110 08:37:24.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.036" endtime="20201110 08:37:24.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.731" endtime="20201110 08:37:24.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.729" endtime="20201110 08:37:24.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.043" level="INFO">${RESULT} = [{'time': 0.025270361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033473600000000214, 'source_diff': 0.00033473600000000214}, {'time': 0.0256355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:24.039" endtime="20201110 08:37:24.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:24.056" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:24.044" endtime="20201110 08:37:24.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.061" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:37:24.060" endtime="20201110 08:37:24.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.064" level="INFO">VALUE: [0.00033473600000000214, 0.00033884699999999976, 0.00034034700000000126, 0.00034336199999999983, 0.0003441659999999999, 0.00033833400000000263, 0.0003394450000000007, 0.00034122199999999867, 0.0003418339999999992, 0.0003401389999999997, 0.00034081899999999915, 0.0003381250000000016, 0.00033894400000000074, 0.0003403200000000016, 0.0003379719999999989, 0.00033863799999999875, 0.0003401810000000019, 0.00034051400000000356, 0.0003401800000000024, 0.000341292, 0.00034020800000000156, 0.00034152699999999425, 0.00034063899999999675, 0.0003389030000000015, 0.0003414309999999962, 0.0003428059999999941, 0.00034302800000000216, 0.0003394580000000008, 0.0003416659999999974, 0.0003441250000000007, 0.00033990200000000304, 0.00034447199999999845, 0.00034356899999999496, 0.0003409580000000023, 0.0003425979999999995, 0.00034076400000000034, 0.00034, 0.00034109699999999854, 0.00034208399999999944, 0.00034379099999999607, 0.0003438199999999947, 0.00034330600000000155, 0.00034355500000000233, 0.00034204200000000073, 0.0003384579999999998, 0.00034076300000000087, 0.00034170800000000306, 0.000343679999999999, 0.00034441699999999964, 0.00034130599999999955]</msg>
<status status="PASS" starttime="20201110 08:37:24.062" endtime="20201110 08:37:24.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.057" endtime="20201110 08:37:24.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.067" endtime="20201110 08:37:24.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.071" endtime="20201110 08:37:24.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.069" endtime="20201110 08:37:24.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.066" endtime="20201110 08:37:24.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.676" endtime="20201110 08:37:24.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.676" endtime="20201110 08:37:24.092"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.101" endtime="20201110 08:37:24.140"></status>
</kw>
<msg timestamp="20201110 08:37:24.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.100" endtime="20201110 08:37:24.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.141" endtime="20201110 08:37:24.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.144" endtime="20201110 08:37:24.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.097" endtime="20201110 08:37:24.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.095" endtime="20201110 08:37:24.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.153" endtime="20201110 08:37:24.440"></status>
</kw>
<msg timestamp="20201110 08:37:24.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02524675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025581431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:24.152" endtime="20201110 08:37:24.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02524675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025581431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:24.445" endtime="20201110 08:37:24.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.453" endtime="20201110 08:37:24.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.149" endtime="20201110 08:37:24.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.147" endtime="20201110 08:37:24.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.460" level="INFO">${RESULT} = [{'time': 0.025581431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033468100000000334, 'source_diff': 0.00033468100000000334}, {'time': 0.025946597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:24.456" endtime="20201110 08:37:24.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:24.474" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:24.461" endtime="20201110 08:37:24.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.478" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:37:24.477" endtime="20201110 08:37:24.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.481" level="INFO">VALUE: [0.00033468100000000334, 0.00033945799999999735, 0.00034107000000000234, 0.00034363899999999975, 0.00033894400000000074, 0.0003418750000000019, 0.0003411939999999995, 0.0003394999999999995, 0.0003384860000000024, 0.00033834700000000273, 0.0003430279999999987, 0.0003394170000000016, 0.0003408750000000009, 0.00034400000000000056, 0.00034251299999999915, 0.00033925000000000274, 0.0003419170000000006, 0.00034445899999999835, 0.00033943100000000115, 0.000344485999999998, 0.00033958299999999747, 0.00034386100000000086, 0.0003421390000000052, 0.00034088900000000394, 0.0003398879999999965, 0.00034386100000000086, 0.00034327700000000294, 0.0003387359999999992, 0.0003417639999999944, 0.0003425419999999943, 0.0003411810000000029, 0.0003416940000000035, 0.00034405599999999537, 0.0003436250000000002, 0.0003390970000000035, 0.00033808299999999597, 0.00034304200000000173, 0.0003445279999999967, 0.0003437079999999981, 0.00033951400000000603, 0.000341292, 0.0003429449999999973, 0.0003408469999999983, 0.0003410140000000006, 0.00034263899999999875, 0.0003424579999999969, 0.0003384579999999998, 0.00033894400000000074, 0.00034173699999999474, 0.00034065300000000326]</msg>
<status status="PASS" starttime="20201110 08:37:24.480" endtime="20201110 08:37:24.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.475" endtime="20201110 08:37:24.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.485" endtime="20201110 08:37:24.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.488" endtime="20201110 08:37:24.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.487" endtime="20201110 08:37:24.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.483" endtime="20201110 08:37:24.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.093" endtime="20201110 08:37:24.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.092" endtime="20201110 08:37:24.509"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.518" endtime="20201110 08:37:24.557"></status>
</kw>
<msg timestamp="20201110 08:37:24.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.517" endtime="20201110 08:37:24.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.558" endtime="20201110 08:37:24.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.561" endtime="20201110 08:37:24.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.514" endtime="20201110 08:37:24.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.512" endtime="20201110 08:37:24.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.570" endtime="20201110 08:37:24.877"></status>
</kw>
<msg timestamp="20201110 08:37:24.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025028319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025363444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.568" endtime="20201110 08:37:24.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025028319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025363444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.881" endtime="20201110 08:37:24.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.890" endtime="20201110 08:37:24.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.566" endtime="20201110 08:37:24.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.564" endtime="20201110 08:37:24.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.897" level="INFO">${RESULT} = [{'time': 0.025363444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003351249999999986, 'source_diff': 0.0003351249999999986}, {'time': 0.025728569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:24.894" endtime="20201110 08:37:24.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:24.912" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:24.898" endtime="20201110 08:37:24.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.917" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:37:24.916" endtime="20201110 08:37:24.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.920" level="INFO">VALUE: [0.0003351249999999986, 0.0003381520000000013, 0.00034108299999999897, 0.00034304199999999826, 0.00034347199999999745, 0.00034406899999999893, 0.00033844400000000024, 0.0003437639999999999, 0.00034007000000000134, 0.0003405000000000005, 0.0003412500000000013, 0.0003445280000000002, 0.0003428189999999977, 0.0003435269999999997, 0.00034450000000000106, 0.00034130599999999955, 0.0003395689999999979, 0.00034450000000000106, 0.00033887499999999543, 0.00033998600000000045, 0.0003403199999999981, 0.00034059699999999804, 0.00034258300000000047, 0.00034308300000000097, 0.00034041599999999617, 0.0003407779999999999, 0.0003392359999999997, 0.0003409579999999954, 0.0003412219999999952, 0.0003435270000000032, 0.00033898599999999945, 0.00034423599999999777, 0.0003430279999999952, 0.00034452800000000366, 0.0003421799999999975, 0.00034337499999999993, 0.0003393060000000045, 0.00034236099999999936, 0.0003413889999999975, 0.000339679999999995, 0.00034398600000000445, 0.0003396249999999962, 0.0003423610000000063, 0.00034448600000000495, 0.00034176400000000134, 0.0003446250000000012, 0.0003445270000000042, 0.00034326400000000284, 0.0003396250000000031, 0.00033908399999999644]</msg>
<status status="PASS" starttime="20201110 08:37:24.918" endtime="20201110 08:37:24.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.913" endtime="20201110 08:37:24.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.923" endtime="20201110 08:37:24.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.927" endtime="20201110 08:37:24.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.925" endtime="20201110 08:37:24.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.922" endtime="20201110 08:37:24.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.510" endtime="20201110 08:37:24.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.510" endtime="20201110 08:37:24.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.077" endtime="20201110 08:37:24.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.952" endtime="20201110 08:37:24.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.950" endtime="20201110 08:37:24.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.949" endtime="20201110 08:37:24.972"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:42.965" endtime="20201110 08:37:24.972" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.979" endtime="20201110 08:37:24.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.977" endtime="20201110 08:37:24.999"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.013" endtime="20201110 08:37:25.031"></status>
</kw>
<msg timestamp="20201110 08:37:25.032" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.010" endtime="20201110 08:37:25.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.034" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.033" endtime="20201110 08:37:25.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.037" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:25.035" endtime="20201110 08:37:25.037"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:25.008" endtime="20201110 08:37:25.038"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:25.005" endtime="20201110 08:37:25.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.004" endtime="20201110 08:37:25.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:25.043" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:25.042" endtime="20201110 08:37:25.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.040" endtime="20201110 08:37:25.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.003" endtime="20201110 08:37:25.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.003" endtime="20201110 08:37:25.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.044" endtime="20201110 08:37:25.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.001" endtime="20201110 08:37:25.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.000" endtime="20201110 08:37:25.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.976" endtime="20201110 08:37:25.047"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.056" endtime="20201110 08:37:25.093"></status>
</kw>
<msg timestamp="20201110 08:37:25.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.054" endtime="20201110 08:37:25.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.095" endtime="20201110 08:37:25.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.097" endtime="20201110 08:37:25.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.052" endtime="20201110 08:37:25.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.050" endtime="20201110 08:37:25.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.106" endtime="20201110 08:37:25.393"></status>
</kw>
<msg timestamp="20201110 08:37:25.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071975056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072356264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.105" endtime="20201110 08:37:25.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071975056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072356264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.397" endtime="20201110 08:37:25.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.405" endtime="20201110 08:37:25.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.102" endtime="20201110 08:37:25.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.100" endtime="20201110 08:37:25.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.411" level="INFO">${RESULT} = [{'time': 0.072356264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003812080000000079, 'source_diff': 0.0003812080000000079}, {'time': 0.072721472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:25.408" endtime="20201110 08:37:25.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:25.425" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:25.412" endtime="20201110 08:37:25.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.430" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:37:25.429" endtime="20201110 08:37:25.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.432" level="INFO">VALUE: [0.0003812080000000079, 0.0003573889999999996, 0.0003558200000000067, 0.00035979199999999767, 0.0003549999999999942, 0.0003558750000000055, 0.0003584860000000051, 0.00035795799999999156, 0.00036070899999998685, 0.00035941700000000076, 0.0003593890000000016, 0.00035629199999999417, 0.0003564449999999969, 0.0003577500000000039, 0.0003595969999999893, 0.0003598890000000021, 0.00035909700000000266, 0.00035944400000000043, 0.0003604860000000071, 0.00035815299999999994, 0.0003607219999999939, 0.00035861199999999427, 0.0003548889999999971, 0.0003551659999999901, 0.0003606250000000033, 0.00035901399999999084, 0.00036129199999999917, 0.00035851399999999034, 0.0003603049999999913, 0.0003553050000000002, 0.00035761100000000767, 0.0003602359999999999, 0.0003560410000000014, 0.0003593049999999903, 0.00035781899999999534, 0.00035543100000000327, 0.0003559860000000026, 0.0003595140000000052, 0.0003549019999999903, 0.0003607500000000069, 0.00035563899999999093, 0.00035847299999999804, 0.0003570269999999959, 0.000360861000000004, 0.0003568050000000017, 0.0003572910000000096, 0.0003579159999999998, 0.00036115200000000347, 0.0003586800000000001, 0.0003567359999999964]</msg>
<status status="PASS" starttime="20201110 08:37:25.431" endtime="20201110 08:37:25.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.426" endtime="20201110 08:37:25.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.435" endtime="20201110 08:37:25.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.439" endtime="20201110 08:37:25.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.437" endtime="20201110 08:37:25.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.434" endtime="20201110 08:37:25.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.048" endtime="20201110 08:37:25.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.048" endtime="20201110 08:37:25.460"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.469" endtime="20201110 08:37:25.511"></status>
</kw>
<msg timestamp="20201110 08:37:25.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.468" endtime="20201110 08:37:25.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.513" endtime="20201110 08:37:25.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.515" endtime="20201110 08:37:25.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.465" endtime="20201110 08:37:25.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.463" endtime="20201110 08:37:25.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.524" endtime="20201110 08:37:25.811"></status>
</kw>
<msg timestamp="20201110 08:37:25.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024138528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024522403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.522" endtime="20201110 08:37:25.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024138528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024522403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.815" endtime="20201110 08:37:25.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.823" endtime="20201110 08:37:25.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.520" endtime="20201110 08:37:25.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.518" endtime="20201110 08:37:25.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.831" level="INFO">${RESULT} = [{'time': 0.024522403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038387500000000227, 'source_diff': 0.00038387500000000227}, {'time': 0.024887556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:25.828" endtime="20201110 08:37:25.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:25.845" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:25.832" endtime="20201110 08:37:25.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.850" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:37:25.849" endtime="20201110 08:37:25.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.852" level="INFO">VALUE: [0.00038387500000000227, 0.00035787500000000055, 0.00035545799999999947, 0.000360862, 0.00035579199999999714, 0.0003608610000000005, 0.0003590420000000004, 0.0003610139999999998, 0.000359667000000001, 0.00036090199999999975, 0.0003609029999999992, 0.0003610139999999998, 0.0003570419999999984, 0.0003590000000000017, 0.00036062499999999983, 0.00035855599999999946, 0.00035647200000000004, 0.0003555829999999996, 0.0003580000000000007, 0.0003585000000000012, 0.00036080599999999824, 0.00035986099999999605, 0.00035509799999999814, 0.0003571389999999994, 0.0003604450000000009, 0.0003592909999999977, 0.0003591800000000006, 0.0003592089999999992, 0.0003610000000000002, 0.00035726399999999603, 0.0003609309999999949, 0.0003577359999999974, 0.0003578329999999949, 0.0003596800000000011, 0.0003571669999999985, 0.0003613329999999984, 0.000357861000000001, 0.000356972000000004, 0.0003605419999999984, 0.00035511099999999823, 0.0003577219999999978, 0.0003577359999999974, 0.00035893099999999983, 0.0003610969999999977, 0.00035998599999999964, 0.0003552219999999953, 0.00035559699999999916, 0.0003563609999999995, 0.0003594999999999987, 0.00035487499999999755]</msg>
<status status="PASS" starttime="20201110 08:37:25.851" endtime="20201110 08:37:25.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.846" endtime="20201110 08:37:25.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.856" endtime="20201110 08:37:25.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.860" endtime="20201110 08:37:25.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.858" endtime="20201110 08:37:25.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.854" endtime="20201110 08:37:25.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.461" endtime="20201110 08:37:25.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.460" endtime="20201110 08:37:25.881"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.890" endtime="20201110 08:37:25.928"></status>
</kw>
<msg timestamp="20201110 08:37:25.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.888" endtime="20201110 08:37:25.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.930" endtime="20201110 08:37:25.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.933" endtime="20201110 08:37:25.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.886" endtime="20201110 08:37:25.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.883" endtime="20201110 08:37:25.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.943" endtime="20201110 08:37:26.231"></status>
</kw>
<msg timestamp="20201110 08:37:26.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025221806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025600264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.941" endtime="20201110 08:37:26.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025221806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025600264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.235" endtime="20201110 08:37:26.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.243" endtime="20201110 08:37:26.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.938" endtime="20201110 08:37:26.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.936" endtime="20201110 08:37:26.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:26.250" level="INFO">${RESULT} = [{'time': 0.025600264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037845800000000165, 'source_diff': 0.00037845800000000165}, {'time': 0.025965458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:26.247" endtime="20201110 08:37:26.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:26.268" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:26.251" endtime="20201110 08:37:26.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.275" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:37:26.273" endtime="20201110 08:37:26.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.282" level="INFO">VALUE: [0.00037845800000000165, 0.00035902700000000135, 0.0003571249999999998, 0.0003580829999999986, 0.00035459699999999816, 0.0003566250000000028, 0.00035481900000000274, 0.0003563750000000025, 0.00035894399999999993, 0.0003546799999999996, 0.00035719400000000165, 0.00035569400000000015, 0.00035474999999999743, 0.00036131899999999884, 0.00035472200000000176, 0.00035711100000000023, 0.0003579449999999984, 0.0003581380000000009, 0.0003559999999999952, 0.00035993100000000083, 0.00035477800000000004, 0.0003574029999999992, 0.0003555419999999934, 0.0003548620000000044, 0.00035488900000000406, 0.0003595129999999988, 0.0003567359999999964, 0.00035933300000000334, 0.0003610689999999986, 0.00035544399999999643, 0.0003572359999999969, 0.0003584020000000007, 0.0003578890000000001, 0.0003547370000000008, 0.0003584720000000055, 0.0003581390000000004, 0.0003577359999999974, 0.00036008400000000357, 0.0003578199999999948, 0.00035750000000000365, 0.0003563889999999986, 0.00035962499999999537, 0.00035687499999999955, 0.00035527700000000106, 0.0003566799999999981, 0.00035943100000000033, 0.00035679199999999467, 0.0003554029999999972, 0.0003574029999999992, 0.0003607920000000056]</msg>
<status status="PASS" starttime="20201110 08:37:26.277" endtime="20201110 08:37:26.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.269" endtime="20201110 08:37:26.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.293" endtime="20201110 08:37:26.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:26.302" endtime="20201110 08:37:26.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.298" endtime="20201110 08:37:26.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.288" endtime="20201110 08:37:26.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.882" endtime="20201110 08:37:26.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.881" endtime="20201110 08:37:26.327"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.347" endtime="20201110 08:37:26.385"></status>
</kw>
<msg timestamp="20201110 08:37:26.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.344" endtime="20201110 08:37:26.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.386" endtime="20201110 08:37:26.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.389" endtime="20201110 08:37:26.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.338" endtime="20201110 08:37:26.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.333" endtime="20201110 08:37:26.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.398" endtime="20201110 08:37:26.689"></status>
</kw>
<msg timestamp="20201110 08:37:26.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039502764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039868389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.397" endtime="20201110 08:37:26.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039502764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039868389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.693" endtime="20201110 08:37:26.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.701" endtime="20201110 08:37:26.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.394" endtime="20201110 08:37:26.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.392" endtime="20201110 08:37:26.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:26.708" level="INFO">${RESULT} = [{'time': 0.039868389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003656249999999944, 'source_diff': 0.0003656249999999944}, {'time': 0.040233569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:26.705" endtime="20201110 08:37:26.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:26.722" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:26.709" endtime="20201110 08:37:26.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.727" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:37:26.725" endtime="20201110 08:37:26.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.729" level="INFO">VALUE: [0.0003656249999999944, 0.0003600689999999976, 0.0003573610000000005, 0.0003600139999999988, 0.00036098600000000064, 0.00035891700000000026, 0.00035958399999999613, 0.0003582779999999966, 0.0003608890000000031, 0.0003610139999999998, 0.00035686199999999946, 0.0003601940000000012, 0.00035826299999999756, 0.00035761100000000073, 0.00035744399999999843, 0.00035627800000000154, 0.00035841699999999976, 0.00035976400000000547, 0.00035804200000000286, 0.00035759700000000116, 0.00035695800000000444, 0.00035659700000000016, 0.00036055600000000493, 0.0003599450000000004, 0.00035576400000000147, 0.00036076399999999953, 0.0003605969999999972, 0.00035504199999999986, 0.0003584999999999977, 0.00035962499999999537, 0.00036045799999999406, 0.00035693100000000477, 0.00036090299999999575, 0.0003592779999999976, 0.00036076399999999953, 0.0003608749999999966, 0.00035555599999999993, 0.0003607909999999992, 0.0003561950000000036, 0.00035948599999999914, 0.00035620900000000316, 0.00035579100000000113, 0.00036026399999999903, 0.00035512500000000474, 0.0003564869999999956, 0.0003606949999999942, 0.0003568470000000004, 0.0003581250000000008, 0.0003575549999999955, 0.000355972000000003]</msg>
<status status="PASS" starttime="20201110 08:37:26.728" endtime="20201110 08:37:26.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.723" endtime="20201110 08:37:26.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.733" endtime="20201110 08:37:26.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:26.736" endtime="20201110 08:37:26.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.735" endtime="20201110 08:37:26.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.731" endtime="20201110 08:37:26.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.330" endtime="20201110 08:37:26.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.328" endtime="20201110 08:37:26.758"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.767" endtime="20201110 08:37:26.803"></status>
</kw>
<msg timestamp="20201110 08:37:26.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.765" endtime="20201110 08:37:26.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.805" endtime="20201110 08:37:26.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.807" endtime="20201110 08:37:26.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.762" endtime="20201110 08:37:26.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.760" endtime="20201110 08:37:26.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.817" endtime="20201110 08:37:27.104"></status>
</kw>
<msg timestamp="20201110 08:37:27.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022898639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.815" endtime="20201110 08:37:27.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022898639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.108" endtime="20201110 08:37:27.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.117" endtime="20201110 08:37:27.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.812" endtime="20201110 08:37:27.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.811" endtime="20201110 08:37:27.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.123" level="INFO">${RESULT} = [{'time': 0.022898639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038193099999999855, 'source_diff': 0.00038193099999999855}, {'time': 0.023263806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:27.120" endtime="20201110 08:37:27.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:27.137" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:27.124" endtime="20201110 08:37:27.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.142" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:37:27.141" endtime="20201110 08:37:27.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.145" level="INFO">VALUE: [0.00038193099999999855, 0.00035993100000000083, 0.00036024999999999946, 0.00035623600000000283, 0.00035988899999999865, 0.0003611389999999999, 0.0003562500000000024, 0.0003566530000000019, 0.00035874999999999796, 0.00035679100000000213, 0.0003573889999999996, 0.0003598749999999991, 0.0003580000000000007, 0.0003598609999999995, 0.0003595000000000022, 0.00036112500000000033, 0.0003574860000000006, 0.0003611809999999986, 0.00036030499999999827, 0.0003564310000000008, 0.000356861, 0.00035634800000000286, 0.00035833300000000234, 0.0003548049999999997, 0.000359959, 0.00035672200000000376, 0.00035527800000000054, 0.000355375000000005, 0.00036074999999999996, 0.0003594299999999939, 0.00035811100000000123, 0.00035686199999999946, 0.0003551249999999978, 0.00035548599999999514, 0.000354860999999998, 0.0003559019999999982, 0.0003563609999999995, 0.0003554860000000021, 0.00035715299999999894, 0.0003587089999999987, 0.00035959700000000316, 0.0003573190000000018, 0.0003570140000000027, 0.00035956999999999656, 0.00035876399999999753, 0.00035993000000000136, 0.0003549019999999972, 0.0003595969999999962, 0.0003582500000000044, 0.0003602220000000003]</msg>
<status status="PASS" starttime="20201110 08:37:27.143" endtime="20201110 08:37:27.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.138" endtime="20201110 08:37:27.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.148" endtime="20201110 08:37:27.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.152" endtime="20201110 08:37:27.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.150" endtime="20201110 08:37:27.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.147" endtime="20201110 08:37:27.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.759" endtime="20201110 08:37:27.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.758" endtime="20201110 08:37:27.173"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.182" endtime="20201110 08:37:27.219"></status>
</kw>
<msg timestamp="20201110 08:37:27.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.181" endtime="20201110 08:37:27.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.221" endtime="20201110 08:37:27.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.223" endtime="20201110 08:37:27.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.178" endtime="20201110 08:37:27.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.176" endtime="20201110 08:37:27.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.233" endtime="20201110 08:37:27.521"></status>
</kw>
<msg timestamp="20201110 08:37:27.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024063, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024430375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:27.231" endtime="20201110 08:37:27.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024063, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024430375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:27.526" endtime="20201110 08:37:27.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.534" endtime="20201110 08:37:27.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.228" endtime="20201110 08:37:27.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.227" endtime="20201110 08:37:27.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.541" level="INFO">${RESULT} = [{'time': 0.024430375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036737499999999965, 'source_diff': 0.00036737499999999965}, {'time': 0.024795625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:27.538" endtime="20201110 08:37:27.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:27.555" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:27.542" endtime="20201110 08:37:27.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.560" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:37:27.559" endtime="20201110 08:37:27.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.562" level="INFO">VALUE: [0.00036737499999999965, 0.0003593890000000016, 0.00035568100000000005, 0.00035805599999999896, 0.0003612079999999983, 0.0003595139999999983, 0.0003576799999999991, 0.00035901400000000125, 0.00035976399999999853, 0.00036069500000000115, 0.00035866599999999707, 0.00035955600000000046, 0.00035969500000000015, 0.0003570140000000027, 0.0003575409999999994, 0.0003595139999999983, 0.0003555280000000008, 0.0003572220000000008, 0.00035719400000000165, 0.00035980500000000123, 0.00035704200000000186, 0.0003609580000000015, 0.0003558050000000007, 0.0003595830000000036, 0.00035533299999999934, 0.0003565280000000018, 0.00035576399999999453, 0.0003555829999999996, 0.0003571809999999981, 0.0003589860000000056, 0.0003572920000000021, 0.00035897199999999907, 0.0003612779999999996, 0.0003593889999999947, 0.00035837500000000105, 0.00035577800000000104, 0.0003614030000000032, 0.00035669499999999715, 0.0003576950000000051, 0.0003591800000000006, 0.00035743100000000527, 0.0003592909999999977, 0.0003585549999999965, 0.00035886099999999505, 0.00035551300000000174, 0.00035765299999999944, 0.00035670799999999725, 0.00035765299999999944, 0.00035679199999999467, 0.0003557500000000019]</msg>
<status status="PASS" starttime="20201110 08:37:27.561" endtime="20201110 08:37:27.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.556" endtime="20201110 08:37:27.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.571" endtime="20201110 08:37:27.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.574" endtime="20201110 08:37:27.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.573" endtime="20201110 08:37:27.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.569" endtime="20201110 08:37:27.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.174" endtime="20201110 08:37:27.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.173" endtime="20201110 08:37:27.595"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.604" endtime="20201110 08:37:27.641"></status>
</kw>
<msg timestamp="20201110 08:37:27.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.603" endtime="20201110 08:37:27.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.642" endtime="20201110 08:37:27.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.645" endtime="20201110 08:37:27.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.600" endtime="20201110 08:37:27.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.598" endtime="20201110 08:37:27.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.654" endtime="20201110 08:37:27.942"></status>
</kw>
<msg timestamp="20201110 08:37:27.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02390675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242895, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:27.653" endtime="20201110 08:37:27.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02390675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242895, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:27.946" endtime="20201110 08:37:27.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.954" endtime="20201110 08:37:27.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.650" endtime="20201110 08:37:27.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.648" endtime="20201110 08:37:27.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.964" level="INFO">${RESULT} = [{'time': 0.0242895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003827499999999977, 'source_diff': 0.0003827499999999977}, {'time': 0.024654819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:27.958" endtime="20201110 08:37:27.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:27.978" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:27.965" endtime="20201110 08:37:27.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.983" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:37:27.982" endtime="20201110 08:37:27.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.986" level="INFO">VALUE: [0.0003827499999999977, 0.00035723600000000036, 0.00036070800000000125, 0.00035659700000000016, 0.00036125000000000046, 0.00035951400000000175, 0.00035481900000000274, 0.00035791699999999926, 0.00036126400000000003, 0.00035618100000000055, 0.0003578470000000014, 0.0003549020000000007, 0.0003557079999999997, 0.0003568470000000004, 0.00035976399999999853, 0.0003557219999999993, 0.0003609029999999992, 0.00035622300000000273, 0.0003556249999999983, 0.00036047300000000004, 0.00035656999999999703, 0.00035694400000000487, 0.0003612779999999996, 0.0003560830000000001, 0.00035493100000000277, 0.0003564999999999957, 0.000358555999999996, 0.0003586390000000009, 0.0003550140000000007, 0.0003593610000000025, 0.0003595700000000035, 0.0003589999999999982, 0.00035670799999999725, 0.0003550689999999995, 0.00036113899999999644, 0.00035659700000000016, 0.0003595139999999983, 0.000358457999999999, 0.00035787500000000055, 0.00035550000000000165, 0.00035500000000000115, 0.0003594999999999987, 0.0003603889999999957, 0.00036120800000000175, 0.00035736199999999996, 0.0003569449999999974, 0.0003597769999999986, 0.0003588889999999942, 0.0003581809999999991, 0.0003601390000000024]</msg>
<status status="PASS" starttime="20201110 08:37:27.984" endtime="20201110 08:37:27.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.979" endtime="20201110 08:37:27.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.990" endtime="20201110 08:37:27.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.993" endtime="20201110 08:37:28.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.992" endtime="20201110 08:37:28.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.988" endtime="20201110 08:37:28.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.596" endtime="20201110 08:37:28.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.596" endtime="20201110 08:37:28.016"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.028" endtime="20201110 08:37:28.066"></status>
</kw>
<msg timestamp="20201110 08:37:28.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.026" endtime="20201110 08:37:28.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.071" endtime="20201110 08:37:28.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.077" endtime="20201110 08:37:28.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.023" endtime="20201110 08:37:28.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.020" endtime="20201110 08:37:28.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.087" endtime="20201110 08:37:28.377"></status>
</kw>
<msg timestamp="20201110 08:37:28.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026948611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027312792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.085" endtime="20201110 08:37:28.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026948611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027312792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.381" endtime="20201110 08:37:28.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.390" endtime="20201110 08:37:28.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.082" endtime="20201110 08:37:28.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.081" endtime="20201110 08:37:28.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:28.396" level="INFO">${RESULT} = [{'time': 0.027312792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036418099999999815, 'source_diff': 0.00036418099999999815}, {'time': 0.027678139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:28.393" endtime="20201110 08:37:28.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:28.410" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:28.397" endtime="20201110 08:37:28.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.415" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:37:28.414" endtime="20201110 08:37:28.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.418" level="INFO">VALUE: [0.00036418099999999815, 0.00035668100000000105, 0.0003569860000000001, 0.000356569000000001, 0.0003604299999999984, 0.0003586800000000001, 0.00035554200000000036, 0.0003582219999999983, 0.0003585130000000013, 0.00035994400000000093, 0.0003600269999999989, 0.0003597359999999994, 0.0003558889999999981, 0.0003553050000000002, 0.0003551390000000043, 0.00035947299999999904, 0.00035930599999999674, 0.00035490300000000363, 0.00035592999999999736, 0.00036093100000000183, 0.0003563060000000007, 0.0003553469999999989, 0.0003580559999999955, 0.0003597359999999994, 0.0003606109999999968, 0.0003578340000000013, 0.00036011100000000323, 0.0003580129999999973, 0.0003553609999999985, 0.00036074999999999996, 0.0003550829999999991, 0.0003607779999999991, 0.0003559999999999952, 0.0003574860000000041, 0.0003590419999999969, 0.00035811100000000123, 0.0003556390000000048, 0.00035911100000000223, 0.0003572219999999973, 0.00035926400000000497, 0.00035719499999999765, 0.00035595800000000344, 0.00035547199999999557, 0.000358457999999999, 0.00036033300000000434, 0.00035587499999999855, 0.000358457999999999, 0.0003579020000000002, 0.00035991700000000126, 0.0003572219999999973]</msg>
<status status="PASS" starttime="20201110 08:37:28.416" endtime="20201110 08:37:28.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.411" endtime="20201110 08:37:28.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.421" endtime="20201110 08:37:28.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:28.425" endtime="20201110 08:37:28.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.423" endtime="20201110 08:37:28.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.420" endtime="20201110 08:37:28.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.018" endtime="20201110 08:37:28.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.017" endtime="20201110 08:37:28.446"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.455" endtime="20201110 08:37:28.490"></status>
</kw>
<msg timestamp="20201110 08:37:28.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.453" endtime="20201110 08:37:28.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.492" endtime="20201110 08:37:28.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.494" endtime="20201110 08:37:28.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.451" endtime="20201110 08:37:28.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.449" endtime="20201110 08:37:28.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.504" endtime="20201110 08:37:28.792"></status>
</kw>
<msg timestamp="20201110 08:37:28.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.502" endtime="20201110 08:37:28.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.797" endtime="20201110 08:37:28.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.805" endtime="20201110 08:37:28.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.500" endtime="20201110 08:37:28.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.498" endtime="20201110 08:37:28.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:28.812" level="INFO">${RESULT} = [{'time': 0.022723542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003653339999999984, 'source_diff': 0.0003653339999999984}, {'time': 0.023088778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:28.809" endtime="20201110 08:37:28.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:28.826" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:28.813" endtime="20201110 08:37:28.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.830" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:37:28.829" endtime="20201110 08:37:28.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.833" level="INFO">VALUE: [0.0003653339999999984, 0.00036069500000000115, 0.0003572220000000008, 0.0003586809999999996, 0.0003592640000000015, 0.00035636100000000295, 0.0003579860000000011, 0.00035708400000000057, 0.00035701399999999925, 0.00035983399999999985, 0.0003607359999999969, 0.0003571809999999981, 0.0003597779999999981, 0.0003588189999999998, 0.00035518099999999955, 0.000361249999999997, 0.00036061100000000026, 0.0003590139999999978, 0.00035787500000000055, 0.00035527799999999707, 0.00036006900000000105, 0.00035715199999999947, 0.0003552080000000027, 0.00035651399999999875, 0.000359458999999996, 0.00036048600000000014, 0.000360943999999995, 0.0003597359999999994, 0.0003597779999999981, 0.00035859800000000164, 0.00035577800000000104, 0.00035704200000000186, 0.00035986099999999605, 0.0003546950000000021, 0.00036058299999999766, 0.00035740300000000613, 0.0003548889999999971, 0.0003596250000000023, 0.0003592370000000053, 0.00035748599999999714, 0.0003546530000000034, 0.0003603199999999973, 0.0003576250000000003, 0.00035952799999999785, 0.0003608890000000031, 0.00036087500000000355, 0.0003589449999999994, 0.00036125000000000046, 0.0003578890000000001, 0.00036074999999999996]</msg>
<status status="PASS" starttime="20201110 08:37:28.832" endtime="20201110 08:37:28.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.827" endtime="20201110 08:37:28.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.837" endtime="20201110 08:37:28.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:28.840" endtime="20201110 08:37:28.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.839" endtime="20201110 08:37:28.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.835" endtime="20201110 08:37:28.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.447" endtime="20201110 08:37:28.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.446" endtime="20201110 08:37:28.861"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.870" endtime="20201110 08:37:28.907"></status>
</kw>
<msg timestamp="20201110 08:37:28.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.869" endtime="20201110 08:37:28.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.909" endtime="20201110 08:37:28.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.911" endtime="20201110 08:37:28.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.866" endtime="20201110 08:37:28.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.864" endtime="20201110 08:37:28.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.921" endtime="20201110 08:37:29.209"></status>
</kw>
<msg timestamp="20201110 08:37:29.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023948889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024327028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.919" endtime="20201110 08:37:29.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023948889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024327028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.213" endtime="20201110 08:37:29.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.221" endtime="20201110 08:37:29.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.916" endtime="20201110 08:37:29.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.914" endtime="20201110 08:37:29.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.228" level="INFO">${RESULT} = [{'time': 0.024327028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037813899999999956, 'source_diff': 0.00037813899999999956}, {'time': 0.024692333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:29.225" endtime="20201110 08:37:29.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:29.242" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:29.229" endtime="20201110 08:37:29.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.247" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:37:29.246" endtime="20201110 08:37:29.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.249" level="INFO">VALUE: [0.00037813899999999956, 0.00035773600000000086, 0.00035609699999999966, 0.000359764000000002, 0.0003575279999999993, 0.00035647200000000004, 0.00035552699999999784, 0.00036097200000000107, 0.0003608200000000013, 0.0003589449999999994, 0.0003555140000000012, 0.00035591699999999726, 0.0003595139999999983, 0.00035941700000000076, 0.00035991700000000126, 0.000361458000000002, 0.0003555410000000009, 0.00035669400000000115, 0.00035573599999999886, 0.0003605000000000032, 0.0003592769999999981, 0.00035642999999999786, 0.00036036099999999655, 0.00035583299999999984, 0.0003587920000000036, 0.00035774999999999696, 0.0003584030000000002, 0.00035680499999999477, 0.0003595549999999975, 0.0003569999999999962, 0.0003613890000000036, 0.0003577359999999974, 0.00036097300000000054, 0.00035554200000000036, 0.00035586199999999846, 0.0003570690000000015, 0.0003610969999999977, 0.00035987500000000255, 0.00035920799999999975, 0.00035827800000000354, 0.00035743099999999833, 0.0003552500000000014, 0.00035787500000000055, 0.0003579590000000049, 0.0003589579999999995, 0.000356457999999997, 0.00036058299999999766, 0.000361346999999998, 0.0003555280000000008, 0.0003600419999999979]</msg>
<status status="PASS" starttime="20201110 08:37:29.248" endtime="20201110 08:37:29.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.243" endtime="20201110 08:37:29.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.253" endtime="20201110 08:37:29.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.257" endtime="20201110 08:37:29.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.255" endtime="20201110 08:37:29.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.251" endtime="20201110 08:37:29.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.862" endtime="20201110 08:37:29.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.862" endtime="20201110 08:37:29.278"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.287" endtime="20201110 08:37:29.324"></status>
</kw>
<msg timestamp="20201110 08:37:29.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.285" endtime="20201110 08:37:29.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.325" endtime="20201110 08:37:29.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.328" endtime="20201110 08:37:29.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.282" endtime="20201110 08:37:29.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.280" endtime="20201110 08:37:29.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.337" endtime="20201110 08:37:29.625"></status>
</kw>
<msg timestamp="20201110 08:37:29.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024661139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025025306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.336" endtime="20201110 08:37:29.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024661139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025025306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.629" endtime="20201110 08:37:29.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.638" endtime="20201110 08:37:29.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.333" endtime="20201110 08:37:29.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.331" endtime="20201110 08:37:29.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.645" level="INFO">${RESULT} = [{'time': 0.025025306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036416700000000204, 'source_diff': 0.00036416700000000204}, {'time': 0.025390556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:29.641" endtime="20201110 08:37:29.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:29.659" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:29.646" endtime="20201110 08:37:29.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.663" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:37:29.662" endtime="20201110 08:37:29.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.666" level="INFO">VALUE: [0.00036416700000000204, 0.0003605420000000019, 0.00035812499999999733, 0.00035574999999999843, 0.0003605129999999998, 0.00035877800000000057, 0.0003598890000000021, 0.00035559699999999916, 0.00035984699999999994, 0.000359458, 0.0003552500000000014, 0.00036057000000000103, 0.0003591529999999975, 0.0003583749999999976, 0.00035920799999999975, 0.00036086099999999705, 0.00035679199999999814, 0.00036076399999999953, 0.00035926399999999803, 0.0003606810000000016, 0.00035787500000000055, 0.00035722200000000426, 0.0003556119999999982, 0.0003567779999999951, 0.0003587769999999976, 0.0003590140000000047, 0.0003611390000000034, 0.00035722200000000426, 0.00035473600000000133, 0.0003563050000000012, 0.0003548059999999992, 0.00035726400000000297, 0.00035593099999999683, 0.0003602779999999986, 0.0003561669999999975, 0.00035826399999999703, 0.00035626400000000197, 0.00035626400000000197, 0.0003563889999999986, 0.00035544399999999643, 0.00035648599999999614, 0.0003611800000000026, 0.0003569300000000053, 0.00035765199999999997, 0.0003576250000000003, 0.0003608050000000057, 0.0003609580000000015, 0.00035537499999999805, 0.00035665299999999844, 0.0003605139999999993]</msg>
<status status="PASS" starttime="20201110 08:37:29.664" endtime="20201110 08:37:29.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.660" endtime="20201110 08:37:29.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.670" endtime="20201110 08:37:29.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.673" endtime="20201110 08:37:29.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.672" endtime="20201110 08:37:29.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.668" endtime="20201110 08:37:29.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.279" endtime="20201110 08:37:29.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.278" endtime="20201110 08:37:29.694"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.704" endtime="20201110 08:37:29.742"></status>
</kw>
<msg timestamp="20201110 08:37:29.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.702" endtime="20201110 08:37:29.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.743" endtime="20201110 08:37:29.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.746" endtime="20201110 08:37:29.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.699" endtime="20201110 08:37:29.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.697" endtime="20201110 08:37:29.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.755" endtime="20201110 08:37:30.043"></status>
</kw>
<msg timestamp="20201110 08:37:30.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025145458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025508819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.754" endtime="20201110 08:37:30.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025145458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025508819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.048" endtime="20201110 08:37:30.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.056" endtime="20201110 08:37:30.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.751" endtime="20201110 08:37:30.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.749" endtime="20201110 08:37:30.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:30.063" level="INFO">${RESULT} = [{'time': 0.025508819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036336099999999955, 'source_diff': 0.00036336099999999955}, {'time': 0.025874125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:30.060" endtime="20201110 08:37:30.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:30.077" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:30.064" endtime="20201110 08:37:30.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.082" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:37:30.081" endtime="20201110 08:37:30.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.084" level="INFO">VALUE: [0.00036336099999999955, 0.0003577080000000017, 0.00035595799999999997, 0.00036056999999999756, 0.0003581799999999996, 0.0003577080000000017, 0.00036061100000000026, 0.00035920799999999975, 0.00036112500000000033, 0.0003594449999999999, 0.000357569000000002, 0.0003608330000000014, 0.0003572639999999995, 0.0003585969999999987, 0.00035815200000000047, 0.00035875000000000143, 0.0003549029999999967, 0.0003553050000000002, 0.00035611099999999923, 0.0003607360000000004, 0.000358457999999999, 0.00035926399999999803, 0.0003576389999999999, 0.0003571939999999982, 0.0003550140000000007, 0.0003578890000000001, 0.0003582229999999978, 0.0003585830000000026, 0.0003613199999999983, 0.0003555280000000008, 0.00036070800000000125, 0.00035998599999999964, 0.0003600559999999975, 0.0003586109999999948, 0.0003589160000000008, 0.0003609030000000027, 0.00035916600000000104, 0.0003553609999999985, 0.00036052799999999885, 0.000358667, 0.00035577700000000156, 0.0003593480000000024, 0.0003579860000000046, 0.00035516599999999704, 0.00035841699999999976, 0.00035570799999999625, 0.0003561249999999988, 0.00035647199999999657, 0.0003555140000000012, 0.00036030499999999827]</msg>
<status status="PASS" starttime="20201110 08:37:30.083" endtime="20201110 08:37:30.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.078" endtime="20201110 08:37:30.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.088" endtime="20201110 08:37:30.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.091" endtime="20201110 08:37:30.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.090" endtime="20201110 08:37:30.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.086" endtime="20201110 08:37:30.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.695" endtime="20201110 08:37:30.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.695" endtime="20201110 08:37:30.113"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.122" endtime="20201110 08:37:30.163"></status>
</kw>
<msg timestamp="20201110 08:37:30.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.120" endtime="20201110 08:37:30.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.164" endtime="20201110 08:37:30.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.167" endtime="20201110 08:37:30.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.117" endtime="20201110 08:37:30.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.115" endtime="20201110 08:37:30.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.176" endtime="20201110 08:37:30.464"></status>
</kw>
<msg timestamp="20201110 08:37:30.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023778931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024161167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.175" endtime="20201110 08:37:30.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023778931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024161167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.470" endtime="20201110 08:37:30.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.481" endtime="20201110 08:37:30.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.172" endtime="20201110 08:37:30.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.170" endtime="20201110 08:37:30.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:30.491" level="INFO">${RESULT} = [{'time': 0.024161167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003822360000000011, 'source_diff': 0.0003822360000000011}, {'time': 0.024526389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:30.486" endtime="20201110 08:37:30.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:30.506" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:30.492" endtime="20201110 08:37:30.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.511" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:37:30.510" endtime="20201110 08:37:30.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.513" level="INFO">VALUE: [0.0003822360000000011, 0.00035477800000000004, 0.0003548059999999992, 0.0003548890000000006, 0.0003600830000000006, 0.0003596389999999984, 0.0003578190000000023, 0.00035563900000000134, 0.0003571800000000021, 0.0003558890000000016, 0.0003600420000000014, 0.0003593480000000024, 0.0003554159999999973, 0.00035815200000000047, 0.0003600139999999988, 0.0003569860000000001, 0.0003558190000000003, 0.0003548469999999984, 0.00035898599999999864, 0.000356554999999998, 0.0003584999999999977, 0.0003555280000000008, 0.0003609299999999954, 0.00035644500000000384, 0.000355972000000003, 0.0003599450000000004, 0.00035909800000000214, 0.00035791699999999926, 0.0003610139999999998, 0.0003554999999999947, 0.0003596529999999945, 0.0003586250000000013, 0.0003550139999999938, 0.0003554170000000037, 0.00035676400000000247, 0.0003601109999999963, 0.00035538900000000456, 0.00036093000000000236, 0.000358070000000002, 0.00035897299999999854, 0.00035782000000000175, 0.00035492999999999636, 0.0003571669999999985, 0.00035676400000000247, 0.00035741699999999876, 0.00035856999999999556, 0.00035976400000000547, 0.0003589999999999982, 0.00035947199999999957, 0.00035609699999999966]</msg>
<status status="PASS" starttime="20201110 08:37:30.512" endtime="20201110 08:37:30.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.507" endtime="20201110 08:37:30.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.517" endtime="20201110 08:37:30.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.521" endtime="20201110 08:37:30.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.519" endtime="20201110 08:37:30.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.515" endtime="20201110 08:37:30.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.113" endtime="20201110 08:37:30.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.113" endtime="20201110 08:37:30.542"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.551" endtime="20201110 08:37:30.585"></status>
</kw>
<msg timestamp="20201110 08:37:30.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.550" endtime="20201110 08:37:30.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.587" endtime="20201110 08:37:30.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.589" endtime="20201110 08:37:30.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.547" endtime="20201110 08:37:30.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.545" endtime="20201110 08:37:30.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.599" endtime="20201110 08:37:30.885"></status>
</kw>
<msg timestamp="20201110 08:37:30.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021495278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021855903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.597" endtime="20201110 08:37:30.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021495278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021855903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.889" endtime="20201110 08:37:30.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.898" endtime="20201110 08:37:30.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.594" endtime="20201110 08:37:30.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.592" endtime="20201110 08:37:30.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:30.905" level="INFO">${RESULT} = [{'time': 0.021855903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036062499999999983, 'source_diff': 0.00036062499999999983}, {'time': 0.022221222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:30.901" endtime="20201110 08:37:30.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:30.919" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:30.906" endtime="20201110 08:37:30.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.923" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:37:30.922" endtime="20201110 08:37:30.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.926" level="INFO">VALUE: [0.00036062499999999983, 0.0003579029999999997, 0.00035872300000000176, 0.00035715200000000294, 0.00035706999999999753, 0.000360458000000001, 0.0003561389999999984, 0.0003594030000000012, 0.000356861, 0.0003581380000000009, 0.00035574999999999843, 0.0003573470000000009, 0.00036130499999999927, 0.00035994400000000093, 0.00035723699999999983, 0.0003573189999999983, 0.000360667000000002, 0.00035591600000000126, 0.0003602359999999999, 0.00035775000000000043, 0.00035901400000000125, 0.0003606809999999981, 0.0003570140000000027, 0.00036062499999999983, 0.00035513900000000084, 0.00035879200000000014, 0.00035552800000000426, 0.0003580410000000034, 0.0003562779999999946, 0.0003553050000000002, 0.0003564019999999987, 0.0003573060000000017, 0.00036087500000000355, 0.00035733300000000134, 0.0003565280000000018, 0.00035963899999999493, 0.00035494399999999593, 0.00036073599999999345, 0.0003580689999999956, 0.00035629199999999417, 0.00036030599999999774, 0.00035487499999999755, 0.00035897199999999907, 0.0003612079999999948, 0.0003578749999999936, 0.0003606659999999956, 0.00035555500000000045, 0.00035874999999999796, 0.0003567500000000029, 0.00035891700000000026]</msg>
<status status="PASS" starttime="20201110 08:37:30.925" endtime="20201110 08:37:30.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.920" endtime="20201110 08:37:30.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.930" endtime="20201110 08:37:30.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.933" endtime="20201110 08:37:30.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.932" endtime="20201110 08:37:30.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.928" endtime="20201110 08:37:30.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.543" endtime="20201110 08:37:30.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.542" endtime="20201110 08:37:30.954"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.963" endtime="20201110 08:37:30.997"></status>
</kw>
<msg timestamp="20201110 08:37:30.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.962" endtime="20201110 08:37:30.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.999" endtime="20201110 08:37:31.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.002" endtime="20201110 08:37:31.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.959" endtime="20201110 08:37:31.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.957" endtime="20201110 08:37:31.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.012" endtime="20201110 08:37:31.299"></status>
</kw>
<msg timestamp="20201110 08:37:31.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020964417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021329028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.010" endtime="20201110 08:37:31.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020964417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021329028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.303" endtime="20201110 08:37:31.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.311" endtime="20201110 08:37:31.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.007" endtime="20201110 08:37:31.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.005" endtime="20201110 08:37:31.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.318" level="INFO">${RESULT} = [{'time': 0.021329028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003646110000000008, 'source_diff': 0.0003646110000000008}, {'time': 0.021694264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:31.315" endtime="20201110 08:37:31.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:31.332" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:31.319" endtime="20201110 08:37:31.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.337" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:37:31.336" endtime="20201110 08:37:31.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.339" level="INFO">VALUE: [0.0003646110000000008, 0.00036077800000000257, 0.00035777799999999957, 0.00036062499999999983, 0.00035697200000000054, 0.00035970800000000025, 0.00035934699999999944, 0.0003614719999999981, 0.00035709700000000066, 0.00035529100000000063, 0.00035723699999999983, 0.0003579860000000011, 0.0003552500000000014, 0.0003594589999999995, 0.00035830499999999973, 0.0003585419999999999, 0.00035987500000000255, 0.0003593749999999986, 0.0003565419999999979, 0.00035665199999999897, 0.00035659700000000016, 0.00035505499999999995, 0.0003572080000000012, 0.00035795900000000144, 0.00036102799999999935, 0.00035711100000000023, 0.00035980500000000123, 0.00035586100000000245, 0.0003592079999999963, 0.000357457999999998, 0.0003572920000000021, 0.00035819499999999865, 0.0003586940000000066, 0.0003583340000000018, 0.00035787500000000055, 0.0003611109999999973, 0.00035741699999999876, 0.0003572920000000021, 0.00035774999999999696, 0.00035715299999999894, 0.0003552500000000014, 0.00035698599999999664, 0.00035655600000000093, 0.0003576809999999986, 0.0003612219999999944, 0.00036020800000000075, 0.0003571669999999985, 0.0003589020000000012, 0.0003582359999999979, 0.0003560690000000005]</msg>
<status status="PASS" starttime="20201110 08:37:31.338" endtime="20201110 08:37:31.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.333" endtime="20201110 08:37:31.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.343" endtime="20201110 08:37:31.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.347" endtime="20201110 08:37:31.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.345" endtime="20201110 08:37:31.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.341" endtime="20201110 08:37:31.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.955" endtime="20201110 08:37:31.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.955" endtime="20201110 08:37:31.368"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.377" endtime="20201110 08:37:31.415"></status>
</kw>
<msg timestamp="20201110 08:37:31.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.375" endtime="20201110 08:37:31.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.417" endtime="20201110 08:37:31.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.419" endtime="20201110 08:37:31.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.373" endtime="20201110 08:37:31.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.371" endtime="20201110 08:37:31.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.428" endtime="20201110 08:37:31.717"></status>
</kw>
<msg timestamp="20201110 08:37:31.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024334764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024715764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.427" endtime="20201110 08:37:31.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024334764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024715764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.721" endtime="20201110 08:37:31.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.730" endtime="20201110 08:37:31.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.424" endtime="20201110 08:37:31.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.422" endtime="20201110 08:37:31.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.736" level="INFO">${RESULT} = [{'time': 0.024715764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038100000000000286, 'source_diff': 0.00038100000000000286}, {'time': 0.025081139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:31.733" endtime="20201110 08:37:31.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:31.751" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:31.737" endtime="20201110 08:37:31.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.755" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:37:31.754" endtime="20201110 08:37:31.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.758" level="INFO">VALUE: [0.00038100000000000286, 0.0003561669999999975, 0.00035979200000000114, 0.0003598609999999995, 0.00036143099999999886, 0.0003604020000000027, 0.00035926399999999803, 0.0003587219999999988, 0.00035547199999999904, 0.00035823600000000136, 0.0003573889999999996, 0.000359764000000002, 0.00035920799999999975, 0.0003586800000000001, 0.0003561939999999972, 0.00036094400000000193, 0.0003553479999999984, 0.0003581669999999995, 0.00035659799999999617, 0.0003593060000000037, 0.0003556799999999971, 0.00036079199999999867, 0.00035826399999999703, 0.00035981899999999734, 0.0003553889999999976, 0.0003562229999999958, 0.0003606940000000017, 0.00035591600000000473, 0.00035559699999999916, 0.0003575549999999955, 0.000360667000000002, 0.00035702799999999535, 0.00036079199999999867, 0.00035737500000000005, 0.0003587359999999984, 0.0003585830000000026, 0.0003602769999999991, 0.0003586390000000009, 0.0003549590000000019, 0.00035694500000000434, 0.0003580559999999955, 0.0003572359999999969, 0.0003602359999999999, 0.0003605549999999985, 0.0003567920000000016, 0.00036094400000000193, 0.0003575830000000016, 0.00035758399999999413, 0.00035726400000000297, 0.0003550140000000007]</msg>
<status status="PASS" starttime="20201110 08:37:31.756" endtime="20201110 08:37:31.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.751" endtime="20201110 08:37:31.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.761" endtime="20201110 08:37:31.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.765" endtime="20201110 08:37:31.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.763" endtime="20201110 08:37:31.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.760" endtime="20201110 08:37:31.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.369" endtime="20201110 08:37:31.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.368" endtime="20201110 08:37:31.786"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.795" endtime="20201110 08:37:31.831"></status>
</kw>
<msg timestamp="20201110 08:37:31.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.793" endtime="20201110 08:37:31.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.833" endtime="20201110 08:37:31.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.835" endtime="20201110 08:37:31.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.791" endtime="20201110 08:37:31.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.789" endtime="20201110 08:37:31.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.845" endtime="20201110 08:37:32.131"></status>
</kw>
<msg timestamp="20201110 08:37:32.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023285319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023650333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.843" endtime="20201110 08:37:32.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023285319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023650333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.135" endtime="20201110 08:37:32.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.143" endtime="20201110 08:37:32.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.840" endtime="20201110 08:37:32.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.839" endtime="20201110 08:37:32.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.150" level="INFO">${RESULT} = [{'time': 0.023650333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003650140000000003, 'source_diff': 0.0003650140000000003}, {'time': 0.024015528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:32.147" endtime="20201110 08:37:32.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:32.164" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:32.151" endtime="20201110 08:37:32.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.169" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:37:32.168" endtime="20201110 08:37:32.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.172" level="INFO">VALUE: [0.0003650140000000003, 0.00035829199999999964, 0.00035851400000000075, 0.0003607909999999992, 0.00035595799999999997, 0.00035925000000000193, 0.0003571800000000021, 0.0003583059999999992, 0.00035948599999999914, 0.00035805600000000243, 0.0003583890000000006, 0.00036112500000000033, 0.00035583299999999984, 0.0003589299999999969, 0.00035777799999999957, 0.000360667000000002, 0.00035865200000000097, 0.00035720799999999775, 0.00035962499999999883, 0.0003594999999999987, 0.0003556670000000005, 0.00035593000000000083, 0.0003600419999999979, 0.00035744399999999843, 0.00036076399999999953, 0.00036091700000000226, 0.00035776400000000347, 0.0003597779999999981, 0.00035997200000000007, 0.0003612220000000013, 0.0003596390000000019, 0.00035898599999999864, 0.00035797199999999807, 0.0003565140000000022, 0.0003584030000000002, 0.00036005600000000443, 0.00035886099999999505, 0.0003573470000000009, 0.00035823600000000483, 0.0003548610000000049, 0.0003577500000000039, 0.0003552500000000014, 0.00035902799999999735, 0.00035554200000000036, 0.0003573470000000009, 0.0003609580000000015, 0.00035700000000000315, 0.00035686199999999946, 0.00035913799999999496, 0.0003582779999999966]</msg>
<status status="PASS" starttime="20201110 08:37:32.170" endtime="20201110 08:37:32.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.165" endtime="20201110 08:37:32.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.175" endtime="20201110 08:37:32.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.179" endtime="20201110 08:37:32.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.177" endtime="20201110 08:37:32.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.174" endtime="20201110 08:37:32.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.787" endtime="20201110 08:37:32.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.786" endtime="20201110 08:37:32.200"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.209" endtime="20201110 08:37:32.243"></status>
</kw>
<msg timestamp="20201110 08:37:32.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.207" endtime="20201110 08:37:32.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.244" endtime="20201110 08:37:32.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.247" endtime="20201110 08:37:32.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.205" endtime="20201110 08:37:32.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.203" endtime="20201110 08:37:32.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.256" endtime="20201110 08:37:32.543"></status>
</kw>
<msg timestamp="20201110 08:37:32.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021290708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.255" endtime="20201110 08:37:32.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021290708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.547" endtime="20201110 08:37:32.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.555" endtime="20201110 08:37:32.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.252" endtime="20201110 08:37:32.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.250" endtime="20201110 08:37:32.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.562" level="INFO">${RESULT} = [{'time': 0.021668306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003775979999999998, 'source_diff': 0.0003775979999999998}, {'time': 0.022033681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:32.559" endtime="20201110 08:37:32.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:32.576" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:32.563" endtime="20201110 08:37:32.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.581" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:37:32.580" endtime="20201110 08:37:32.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.583" level="INFO">VALUE: [0.0003775979999999998, 0.0003585839999999986, 0.00035504199999999986, 0.000360764000000003, 0.0003560830000000001, 0.0003589169999999968, 0.0003559029999999977, 0.0003583190000000028, 0.0003551800000000001, 0.0003583059999999992, 0.0003553890000000011, 0.0003589160000000008, 0.00036148599999999767, 0.0003607090000000007, 0.0003552500000000014, 0.00036112500000000033, 0.00036098600000000064, 0.000360361, 0.0003574449999999979, 0.00036129199999999917, 0.00035893099999999983, 0.00036079200000000214, 0.0003549860000000016, 0.0003560140000000017, 0.0003550140000000007, 0.0003589299999999969, 0.0003588470000000024, 0.00035995800000000397, 0.0003591800000000006, 0.0003598339999999964, 0.0003601250000000028, 0.00035859700000000216, 0.00035854099999999695, 0.0003593610000000025, 0.0003607219999999939, 0.00035543099999999633, 0.000357666999999999, 0.0003564300000000048, 0.00035576399999999453, 0.0003603060000000047, 0.00035711100000000023, 0.0003560689999999936, 0.0003549029999999967, 0.0003585410000000039, 0.00035516700000000345, 0.0003586809999999996, 0.0003551809999999961, 0.0003569579999999975, 0.0003565280000000018, 0.0003576380000000004]</msg>
<status status="PASS" starttime="20201110 08:37:32.582" endtime="20201110 08:37:32.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.577" endtime="20201110 08:37:32.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.591" endtime="20201110 08:37:32.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.595" endtime="20201110 08:37:32.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.593" endtime="20201110 08:37:32.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.590" endtime="20201110 08:37:32.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.201" endtime="20201110 08:37:32.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.200" endtime="20201110 08:37:32.616"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.625" endtime="20201110 08:37:32.662"></status>
</kw>
<msg timestamp="20201110 08:37:32.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.624" endtime="20201110 08:37:32.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.664" endtime="20201110 08:37:32.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.666" endtime="20201110 08:37:32.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.621" endtime="20201110 08:37:32.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.619" endtime="20201110 08:37:32.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.676" endtime="20201110 08:37:32.964"></status>
</kw>
<msg timestamp="20201110 08:37:32.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022216042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.674" endtime="20201110 08:37:32.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022216042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.968" endtime="20201110 08:37:32.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.977" endtime="20201110 08:37:32.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.671" endtime="20201110 08:37:32.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.670" endtime="20201110 08:37:32.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.984" level="INFO">${RESULT} = [{'time': 0.022590556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037451400000000287, 'source_diff': 0.00037451400000000287}, {'time': 0.022955625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:32.980" endtime="20201110 08:37:32.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:32.998" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:32.985" endtime="20201110 08:37:32.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.003" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:37:33.001" endtime="20201110 08:37:33.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.005" level="INFO">VALUE: [0.00037451400000000287, 0.0003551530000000004, 0.00036088899999999965, 0.0003588059999999997, 0.00035643000000000133, 0.0003563469999999999, 0.000359667000000001, 0.00035497199999999854, 0.00036048600000000014, 0.0003557079999999997, 0.00035666599999999854, 0.0003564999999999992, 0.00035773600000000086, 0.00035533299999999934, 0.0003563880000000026, 0.00035727799999999907, 0.00035847200000000204, 0.00035641700000000123, 0.0003561799999999976, 0.0003569159999999988, 0.00035605500000000095, 0.0003599020000000022, 0.00035641700000000123, 0.000358861000000002, 0.00035565299999999744, 0.00035987500000000255, 0.0003593050000000042, 0.00035587499999999855, 0.0003578339999999944, 0.0003602090000000002, 0.0003559860000000026, 0.0003608890000000031, 0.00035816600000000004, 0.0003595969999999962, 0.0003602359999999999, 0.0003587219999999988, 0.00035566599999999754, 0.00035644400000000437, 0.00035737500000000005, 0.0003551809999999961, 0.00035920799999999975, 0.00035744400000000537, 0.0003584999999999977, 0.00035608399999999957, 0.0003572779999999956, 0.00036054099999999895, 0.0003604999999999997, 0.0003548479999999979, 0.00035572200000000276, 0.0003605139999999993]</msg>
<status status="PASS" starttime="20201110 08:37:33.004" endtime="20201110 08:37:33.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.999" endtime="20201110 08:37:33.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.009" endtime="20201110 08:37:33.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.012" endtime="20201110 08:37:33.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.011" endtime="20201110 08:37:33.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.007" endtime="20201110 08:37:33.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.617" endtime="20201110 08:37:33.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.616" endtime="20201110 08:37:33.034"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.043" endtime="20201110 08:37:33.077"></status>
</kw>
<msg timestamp="20201110 08:37:33.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.042" endtime="20201110 08:37:33.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.079" endtime="20201110 08:37:33.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.081" endtime="20201110 08:37:33.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.039" endtime="20201110 08:37:33.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.037" endtime="20201110 08:37:33.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.091" endtime="20201110 08:37:33.379"></status>
</kw>
<msg timestamp="20201110 08:37:33.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.089" endtime="20201110 08:37:33.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.384" endtime="20201110 08:37:33.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.392" endtime="20201110 08:37:33.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.086" endtime="20201110 08:37:33.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.085" endtime="20201110 08:37:33.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:33.399" level="INFO">${RESULT} = [{'time': 0.022121903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003730139999999979, 'source_diff': 0.0003730139999999979}, {'time': 0.022487264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:33.395" endtime="20201110 08:37:33.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:33.413" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:33.400" endtime="20201110 08:37:33.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.417" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:37:33.416" endtime="20201110 08:37:33.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.420" level="INFO">VALUE: [0.0003730139999999979, 0.0003612079999999983, 0.0003605129999999998, 0.0003591390000000014, 0.00035930500000000073, 0.0003578470000000014, 0.00035600000000000215, 0.00036117999999999914, 0.00035833399999999835, 0.0003567920000000016, 0.0003567080000000007, 0.0003586389999999974, 0.0003594449999999999, 0.0003567500000000029, 0.00035845800000000247, 0.00035957000000000003, 0.0003567920000000016, 0.00035944400000000043, 0.00035779199999999914, 0.00035715299999999894, 0.00036030500000000173, 0.00035676400000000247, 0.0003560830000000001, 0.00035855599999999946, 0.0003602220000000003, 0.00035951400000000175, 0.0003555699999999995, 0.00036109700000000466, 0.00035754099999999595, 0.00035708299999999416, 0.0003565140000000022, 0.0003601659999999951, 0.00036048600000000014, 0.00036129199999999917, 0.0003554589999999955, 0.000357070000000001, 0.00035893099999999983, 0.00035937500000000205, 0.0003564720000000035, 0.0003596109999999958, 0.0003576250000000003, 0.00035623600000000283, 0.0003576939999999987, 0.0003566390000000058, 0.0003611940000000022, 0.0003558060000000002, 0.0003570140000000027, 0.00035633300000000034, 0.00035826400000000397, 0.00035902799999999735]</msg>
<status status="PASS" starttime="20201110 08:37:33.419" endtime="20201110 08:37:33.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.414" endtime="20201110 08:37:33.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.424" endtime="20201110 08:37:33.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.427" endtime="20201110 08:37:33.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.426" endtime="20201110 08:37:33.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.422" endtime="20201110 08:37:33.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.035" endtime="20201110 08:37:33.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.034" endtime="20201110 08:37:33.448"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.458" endtime="20201110 08:37:33.494"></status>
</kw>
<msg timestamp="20201110 08:37:33.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.456" endtime="20201110 08:37:33.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.495" endtime="20201110 08:37:33.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.498" endtime="20201110 08:37:33.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.453" endtime="20201110 08:37:33.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.451" endtime="20201110 08:37:33.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.507" endtime="20201110 08:37:33.794"></status>
</kw>
<msg timestamp="20201110 08:37:33.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023837694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024221667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.506" endtime="20201110 08:37:33.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023837694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024221667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.798" endtime="20201110 08:37:33.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.807" endtime="20201110 08:37:33.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.503" endtime="20201110 08:37:33.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.501" endtime="20201110 08:37:33.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:33.814" level="INFO">${RESULT} = [{'time': 0.024221667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038397299999999926, 'source_diff': 0.00038397299999999926}, {'time': 0.024586875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:33.810" endtime="20201110 08:37:33.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:33.827" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:33.815" endtime="20201110 08:37:33.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.832" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:37:33.831" endtime="20201110 08:37:33.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.835" level="INFO">VALUE: [0.00038397299999999926, 0.0003565280000000018, 0.00036024999999999946, 0.00035729199999999864, 0.0003582220000000018, 0.0003610000000000002, 0.00035893099999999983, 0.0003584030000000002, 0.00035550000000000165, 0.00035947199999999957, 0.00036094400000000193, 0.000357861000000001, 0.0003590420000000004, 0.0003562219999999998, 0.0003609169999999988, 0.000360652999999999, 0.0003556110000000022, 0.0003586390000000009, 0.00036088899999999965, 0.000356666999999998, 0.0003563609999999995, 0.00035882000000000275, 0.0003548469999999984, 0.00035792999999999936, 0.00036032000000000425, 0.0003605419999999984, 0.0003557080000000032, 0.00035520799999999575, 0.00036061100000000373, 0.0003564720000000035, 0.00035661099999999973, 0.00036076399999999953, 0.00036076399999999953, 0.00035915200000000147, 0.0003584030000000002, 0.00035583299999999984, 0.00035808400000000157, 0.00035709700000000066, 0.00035666599999999854, 0.00036062499999999637, 0.0003561809999999971, 0.00035869499999999915, 0.00035495800000000244, 0.00036125000000000046, 0.0003590139999999978, 0.00035991700000000126, 0.0003557080000000032, 0.0003597219999999998, 0.0003553889999999976, 0.0003567359999999964]</msg>
<status status="PASS" starttime="20201110 08:37:33.833" endtime="20201110 08:37:33.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.828" endtime="20201110 08:37:33.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.839" endtime="20201110 08:37:33.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.842" endtime="20201110 08:37:33.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.840" endtime="20201110 08:37:33.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.837" endtime="20201110 08:37:33.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.449" endtime="20201110 08:37:33.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.449" endtime="20201110 08:37:33.863"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.872" endtime="20201110 08:37:33.906"></status>
</kw>
<msg timestamp="20201110 08:37:33.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.871" endtime="20201110 08:37:33.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.907" endtime="20201110 08:37:33.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.910" endtime="20201110 08:37:33.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.868" endtime="20201110 08:37:33.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.866" endtime="20201110 08:37:33.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.919" endtime="20201110 08:37:34.206"></status>
</kw>
<msg timestamp="20201110 08:37:34.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021136403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021516069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.917" endtime="20201110 08:37:34.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021136403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021516069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.211" endtime="20201110 08:37:34.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.219" endtime="20201110 08:37:34.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.915" endtime="20201110 08:37:34.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.913" endtime="20201110 08:37:34.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.226" level="INFO">${RESULT} = [{'time': 0.021516069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037966599999999726, 'source_diff': 0.00037966599999999726}, {'time': 0.021881514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:34.223" endtime="20201110 08:37:34.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:34.240" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:34.227" endtime="20201110 08:37:34.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.245" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:37:34.244" endtime="20201110 08:37:34.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.247" level="INFO">VALUE: [0.00037966599999999726, 0.0003595830000000001, 0.0003585410000000004, 0.0003587219999999988, 0.0003589029999999972, 0.0003602079999999973, 0.0003554020000000012, 0.00035751399999999975, 0.00036041700000000176, 0.0003553479999999984, 0.0003596940000000007, 0.0003594999999999987, 0.00035929100000000116, 0.0003581250000000008, 0.00035865300000000044, 0.00035884699999999894, 0.000360458000000001, 0.00035891700000000026, 0.00035825000000000093, 0.00035869499999999915, 0.000355069999999999, 0.00035497199999999854, 0.00035490300000000016, 0.00035979200000000114, 0.00035762499999999683, 0.00035924999999999846, 0.0003590420000000004, 0.0003551249999999978, 0.00036148600000000114, 0.00035958299999999666, 0.00035815199999999353, 0.000355569, 0.00036086099999999705, 0.0003600139999999988, 0.0003559860000000026, 0.00035708400000000057, 0.0003610139999999998, 0.0003548059999999992, 0.00035769499999999815, 0.00035865300000000044, 0.00035704200000000186, 0.0003600689999999976, 0.0003584999999999977, 0.0003562500000000024, 0.0003601810000000011, 0.000359555999999997, 0.00036112499999999687, 0.0003566249999999993, 0.0003585830000000026, 0.00035611100000000617]</msg>
<status status="PASS" starttime="20201110 08:37:34.246" endtime="20201110 08:37:34.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.241" endtime="20201110 08:37:34.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.251" endtime="20201110 08:37:34.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.255" endtime="20201110 08:37:34.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.253" endtime="20201110 08:37:34.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.249" endtime="20201110 08:37:34.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.864" endtime="20201110 08:37:34.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.863" endtime="20201110 08:37:34.276"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.285" endtime="20201110 08:37:34.324"></status>
</kw>
<msg timestamp="20201110 08:37:34.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.283" endtime="20201110 08:37:34.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.325" endtime="20201110 08:37:34.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.328" endtime="20201110 08:37:34.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.280" endtime="20201110 08:37:34.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.278" endtime="20201110 08:37:34.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.337" endtime="20201110 08:37:34.625"></status>
</kw>
<msg timestamp="20201110 08:37:34.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025553556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025924403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.335" endtime="20201110 08:37:34.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025553556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025924403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.629" endtime="20201110 08:37:34.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.637" endtime="20201110 08:37:34.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.333" endtime="20201110 08:37:34.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.331" endtime="20201110 08:37:34.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.644" level="INFO">${RESULT} = [{'time': 0.025924403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037084699999999707, 'source_diff': 0.00037084699999999707}, {'time': 0.026289708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:34.641" endtime="20201110 08:37:34.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:34.658" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:34.645" endtime="20201110 08:37:34.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.663" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:37:34.662" endtime="20201110 08:37:34.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.665" level="INFO">VALUE: [0.00037084699999999707, 0.00036058299999999766, 0.0003552920000000001, 0.00035523599999999836, 0.0003604999999999997, 0.0003612230000000008, 0.00035952700000000185, 0.0003571809999999981, 0.0003558889999999981, 0.00035568100000000005, 0.0003601380000000029, 0.0003566250000000028, 0.00035713900000000284, 0.0003550829999999991, 0.0003601810000000011, 0.00035594499999999987, 0.00035787500000000055, 0.0003581109999999943, 0.0003579999999999972, 0.00036143000000000286, 0.0003549860000000016, 0.0003554029999999972, 0.0003604160000000023, 0.0003592359999999989, 0.00035493100000000277, 0.0003570280000000023, 0.00035587499999999855, 0.00035791699999999926, 0.0003578749999999936, 0.00035661099999999973, 0.0003566249999999993, 0.0003606800000000021, 0.000361152999999996, 0.0003573470000000009, 0.000360667000000002, 0.0003585139999999973, 0.00036125000000000046, 0.00035522300000000173, 0.00035604200000000086, 0.0003568889999999991, 0.00036125000000000046, 0.0003611390000000034, 0.0003570689999999946, 0.0003554449999999959, 0.0003561950000000036, 0.000359346999999996, 0.00035633300000000034, 0.00035583299999999984, 0.00036030499999999827, 0.0003575280000000028]</msg>
<status status="PASS" starttime="20201110 08:37:34.664" endtime="20201110 08:37:34.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.659" endtime="20201110 08:37:34.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.669" endtime="20201110 08:37:34.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.673" endtime="20201110 08:37:34.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.671" endtime="20201110 08:37:34.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.667" endtime="20201110 08:37:34.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.277" endtime="20201110 08:37:34.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.276" endtime="20201110 08:37:34.694"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.703" endtime="20201110 08:37:34.745"></status>
</kw>
<msg timestamp="20201110 08:37:34.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.701" endtime="20201110 08:37:34.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.746" endtime="20201110 08:37:34.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.749" endtime="20201110 08:37:34.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.699" endtime="20201110 08:37:34.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.696" endtime="20201110 08:37:34.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.759" endtime="20201110 08:37:35.047"></status>
</kw>
<msg timestamp="20201110 08:37:35.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024436819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024809639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.757" endtime="20201110 08:37:35.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024436819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024809639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.051" endtime="20201110 08:37:35.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.060" endtime="20201110 08:37:35.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.754" endtime="20201110 08:37:35.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.752" endtime="20201110 08:37:35.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.067" level="INFO">${RESULT} = [{'time': 0.024809639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037282000000000287, 'source_diff': 0.00037282000000000287}, {'time': 0.025174806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:35.064" endtime="20201110 08:37:35.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:35.081" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:35.068" endtime="20201110 08:37:35.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.086" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:37:35.085" endtime="20201110 08:37:35.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.089" level="INFO">VALUE: [0.00037282000000000287, 0.0003604590000000005, 0.0003564859999999996, 0.00035744500000000137, 0.0003585280000000003, 0.0003604999999999997, 0.00035948599999999914, 0.0003578060000000022, 0.00035674999999999943, 0.0003570419999999984, 0.00035674999999999943, 0.0003560129999999988, 0.0003573340000000008, 0.0003609029999999992, 0.00035993100000000083, 0.0003576380000000004, 0.00035898599999999864, 0.00035659799999999964, 0.00035641700000000123, 0.00035481999999999875, 0.0003606940000000017, 0.0003594449999999999, 0.0003550689999999995, 0.00035833300000000234, 0.0003612920000000061, 0.00035597199999999607, 0.0003601670000000015, 0.0003580140000000037, 0.00035870799999999925, 0.00035593100000000377, 0.0003578890000000001, 0.0003588190000000033, 0.000356569000000001, 0.00035487499999999755, 0.0003586800000000001, 0.00035761100000000073, 0.0003550689999999995, 0.00036130499999999927, 0.00035466700000000295, 0.000354972000000002, 0.0003610130000000003, 0.0003603470000000039, 0.00035894399999999993, 0.00036005500000000495, 0.0003608469999999975, 0.0003592630000000055, 0.0003551249999999978, 0.00035920799999999975, 0.00035659700000000016, 0.00035705500000000195]</msg>
<status status="PASS" starttime="20201110 08:37:35.087" endtime="20201110 08:37:35.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.082" endtime="20201110 08:37:35.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.092" endtime="20201110 08:37:35.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.096" endtime="20201110 08:37:35.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.094" endtime="20201110 08:37:35.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.091" endtime="20201110 08:37:35.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.695" endtime="20201110 08:37:35.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.694" endtime="20201110 08:37:35.117"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.126" endtime="20201110 08:37:35.162"></status>
</kw>
<msg timestamp="20201110 08:37:35.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.124" endtime="20201110 08:37:35.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.163" endtime="20201110 08:37:35.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.166" endtime="20201110 08:37:35.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.122" endtime="20201110 08:37:35.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.120" endtime="20201110 08:37:35.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.175" endtime="20201110 08:37:35.463"></status>
</kw>
<msg timestamp="20201110 08:37:35.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023367778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023735708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.174" endtime="20201110 08:37:35.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023367778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023735708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.468" endtime="20201110 08:37:35.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.476" endtime="20201110 08:37:35.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.171" endtime="20201110 08:37:35.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.169" endtime="20201110 08:37:35.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.483" level="INFO">${RESULT} = [{'time': 0.023735708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003679300000000024, 'source_diff': 0.0003679300000000024}, {'time': 0.024101, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:35.479" endtime="20201110 08:37:35.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:35.497" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:35.484" endtime="20201110 08:37:35.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.501" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:37:35.500" endtime="20201110 08:37:35.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.504" level="INFO">VALUE: [0.0003679300000000024, 0.0003548059999999992, 0.0003589999999999982, 0.0003599029999999982, 0.00035793099999999883, 0.0003613750000000006, 0.0003569159999999988, 0.0003562639999999985, 0.0003551530000000004, 0.00036106900000000205, 0.0003562920000000011, 0.00035655600000000093, 0.00035988899999999865, 0.00035970800000000025, 0.0003600280000000018, 0.0003609169999999988, 0.00035947200000000304, 0.0003596939999999972, 0.00036125000000000046, 0.0003598060000000007, 0.00035709700000000066, 0.00035581900000000374, 0.0003606250000000033, 0.0003598190000000043, 0.0003569170000000052, 0.00035926399999999803, 0.000355972000000003, 0.000354972000000002, 0.00035798599999999764, 0.00035912499999999486, 0.00035811100000000123, 0.00035733300000000134, 0.00036076399999999953, 0.0003556810000000035, 0.000356375000000006, 0.0003570410000000024, 0.0003607360000000004, 0.0003605139999999993, 0.0003564170000000047, 0.0003563190000000008, 0.0003557089999999957, 0.00036126400000000003, 0.0003563889999999986, 0.00036059700000000416, 0.00035765299999999944, 0.0003598329999999969, 0.0003594449999999999, 0.00035554200000000036, 0.0003590689999999966, 0.0003609580000000015]</msg>
<status status="PASS" starttime="20201110 08:37:35.502" endtime="20201110 08:37:35.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.498" endtime="20201110 08:37:35.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.508" endtime="20201110 08:37:35.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.511" endtime="20201110 08:37:35.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.510" endtime="20201110 08:37:35.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.506" endtime="20201110 08:37:35.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.118" endtime="20201110 08:37:35.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.117" endtime="20201110 08:37:35.532"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.541" endtime="20201110 08:37:35.579"></status>
</kw>
<msg timestamp="20201110 08:37:35.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.540" endtime="20201110 08:37:35.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.580" endtime="20201110 08:37:35.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.583" endtime="20201110 08:37:35.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.537" endtime="20201110 08:37:35.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.535" endtime="20201110 08:37:35.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.592" endtime="20201110 08:37:35.879"></status>
</kw>
<msg timestamp="20201110 08:37:35.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024795347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025155917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.590" endtime="20201110 08:37:35.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024795347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025155917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.883" endtime="20201110 08:37:35.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.892" endtime="20201110 08:37:35.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.588" endtime="20201110 08:37:35.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.586" endtime="20201110 08:37:35.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.898" level="INFO">${RESULT} = [{'time': 0.025155917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036057000000000103, 'source_diff': 0.00036057000000000103}, {'time': 0.025521097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:35.895" endtime="20201110 08:37:35.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:35.913" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:35.899" endtime="20201110 08:37:35.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.917" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:37:35.916" endtime="20201110 08:37:35.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.920" level="INFO">VALUE: [0.00036057000000000103, 0.0003551530000000004, 0.0003552920000000001, 0.0003553050000000002, 0.0003555699999999995, 0.0003612220000000013, 0.0003592229999999988, 0.00036097300000000054, 0.00036107000000000153, 0.0003613750000000006, 0.0003575000000000002, 0.0003595689999999971, 0.0003590550000000005, 0.00035980500000000123, 0.00036130599999999874, 0.0003604450000000009, 0.00035627800000000154, 0.0003606529999999955, 0.0003591109999999953, 0.00035955500000000445, 0.00035765299999999944, 0.000357861000000001, 0.00036036200000000296, 0.0003594160000000013, 0.0003566389999999989, 0.00035708400000000057, 0.0003574029999999992, 0.00035705600000000143, 0.00036004200000000486, 0.0003579860000000046, 0.0003597779999999981, 0.00035561100000000567, 0.00036019500000000065, 0.0003581250000000008, 0.0003560280000000013, 0.00035700000000000315, 0.0003549029999999967, 0.00035973699999999886, 0.00035698599999999664, 0.00035622300000000273, 0.0003550689999999995, 0.00035523600000000183, 0.00036048600000000014, 0.00035674999999999596, 0.000355972000000003, 0.0003604999999999997, 0.00036052799999999885, 0.0003601250000000028, 0.00035483299999999884, 0.0003573190000000018]</msg>
<status status="PASS" starttime="20201110 08:37:35.918" endtime="20201110 08:37:35.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.913" endtime="20201110 08:37:35.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.923" endtime="20201110 08:37:35.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.927" endtime="20201110 08:37:35.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.925" endtime="20201110 08:37:35.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.922" endtime="20201110 08:37:35.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.533" endtime="20201110 08:37:35.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.533" endtime="20201110 08:37:35.948"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.957" endtime="20201110 08:37:35.992"></status>
</kw>
<msg timestamp="20201110 08:37:35.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.956" endtime="20201110 08:37:35.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.994" endtime="20201110 08:37:35.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.996" endtime="20201110 08:37:35.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.953" endtime="20201110 08:37:35.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.951" endtime="20201110 08:37:35.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.006" endtime="20201110 08:37:36.293"></status>
</kw>
<msg timestamp="20201110 08:37:36.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021116278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021488611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.004" endtime="20201110 08:37:36.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021116278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021488611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.297" endtime="20201110 08:37:36.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.306" endtime="20201110 08:37:36.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.001" endtime="20201110 08:37:36.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.999" endtime="20201110 08:37:36.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.313" level="INFO">${RESULT} = [{'time': 0.021488611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037233300000000247, 'source_diff': 0.00037233300000000247}, {'time': 0.021853931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:36.309" endtime="20201110 08:37:36.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:36.326" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:36.314" endtime="20201110 08:37:36.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.331" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:37:36.330" endtime="20201110 08:37:36.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.334" level="INFO">VALUE: [0.00037233300000000247, 0.000356973, 0.0003589030000000007, 0.00035702699999999934, 0.0003552920000000001, 0.000359458, 0.0003556249999999983, 0.0003566950000000006, 0.00035732000000000125, 0.00035508399999999857, 0.00035583299999999984, 0.00035666599999999854, 0.00035555500000000045, 0.00035855599999999946, 0.0003584030000000002, 0.00035673599999999986, 0.00035500000000000115, 0.00035747199999999757, 0.00035500000000000115, 0.00035541700000000023, 0.0003572080000000012, 0.00035505599999999943, 0.00035884699999999894, 0.00035715299999999894, 0.00035497199999999854, 0.00035593000000000083, 0.00035687499999999955, 0.0003597779999999981, 0.0003554170000000037, 0.00035759700000000116, 0.0003597359999999994, 0.00036056999999999756, 0.0003562080000000037, 0.00035527800000000054, 0.00036094400000000193, 0.000354972000000002, 0.0003565140000000022, 0.00035700000000000315, 0.00036143100000000233, 0.0003563339999999998, 0.00035787500000000055, 0.0003556249999999983, 0.00035548599999999514, 0.0003572779999999956, 0.0003560690000000005, 0.0003550280000000003, 0.0003586809999999996, 0.0003584160000000003, 0.0003587080000000062, 0.00035716599999999904]</msg>
<status status="PASS" starttime="20201110 08:37:36.332" endtime="20201110 08:37:36.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.327" endtime="20201110 08:37:36.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.337" endtime="20201110 08:37:36.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:36.341" endtime="20201110 08:37:36.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.339" endtime="20201110 08:37:36.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.336" endtime="20201110 08:37:36.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.949" endtime="20201110 08:37:36.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.949" endtime="20201110 08:37:36.362"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.376" endtime="20201110 08:37:36.413"></status>
</kw>
<msg timestamp="20201110 08:37:36.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.373" endtime="20201110 08:37:36.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.415" endtime="20201110 08:37:36.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.417" endtime="20201110 08:37:36.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.369" endtime="20201110 08:37:36.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.366" endtime="20201110 08:37:36.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.427" endtime="20201110 08:37:36.714"></status>
</kw>
<msg timestamp="20201110 08:37:36.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029289986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029673889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.425" endtime="20201110 08:37:36.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029289986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029673889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.718" endtime="20201110 08:37:36.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.727" endtime="20201110 08:37:36.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.422" endtime="20201110 08:37:36.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.421" endtime="20201110 08:37:36.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.733" level="INFO">${RESULT} = [{'time': 0.029673889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038390299999999794, 'source_diff': 0.00038390299999999794}, {'time': 0.030039153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:36.730" endtime="20201110 08:37:36.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:36.747" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:36.734" endtime="20201110 08:37:36.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.752" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:37:36.751" endtime="20201110 08:37:36.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.754" level="INFO">VALUE: [0.00038390299999999794, 0.0003576389999999999, 0.0003575000000000002, 0.0003574310000000018, 0.00035856899999999955, 0.00035545899999999894, 0.00035565299999999744, 0.00035594399999999693, 0.00035504099999999345, 0.00036112499999999687, 0.0003578329999999949, 0.00035890299999999375, 0.00036002799999999835, 0.00035943100000000033, 0.0003595280000000048, 0.00035700000000000315, 0.00035654099999999495, 0.0003570830000000011, 0.000355972000000003, 0.00035718000000000555, 0.0003563469999999999, 0.00036020800000000075, 0.00035718000000000555, 0.0003594860000000061, 0.00035526400000000097, 0.00035877700000000456, 0.0003549579999999955, 0.00035874999999999796, 0.00035794399999999893, 0.0003608340000000043, 0.00035656999999999356, 0.0003574019999999997, 0.0003603889999999957, 0.0003591109999999953, 0.00035488799999999765, 0.00035783300000000184, 0.0003583890000000006, 0.00035520799999999575, 0.0003609309999999949, 0.00035774999999999696, 0.0003562089999999962, 0.0003567500000000029, 0.0003554860000000021, 0.00035620799999999675, 0.0003570139999999958, 0.00036058399999999713, 0.00035643099999999733, 0.00035587499999999855, 0.000357861000000001, 0.00036058299999999766]</msg>
<status status="PASS" starttime="20201110 08:37:36.753" endtime="20201110 08:37:36.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.748" endtime="20201110 08:37:36.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.758" endtime="20201110 08:37:36.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:36.762" endtime="20201110 08:37:36.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.760" endtime="20201110 08:37:36.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.756" endtime="20201110 08:37:36.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.363" endtime="20201110 08:37:36.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.362" endtime="20201110 08:37:36.783"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.792" endtime="20201110 08:37:36.830"></status>
</kw>
<msg timestamp="20201110 08:37:36.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.791" endtime="20201110 08:37:36.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.831" endtime="20201110 08:37:36.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.834" endtime="20201110 08:37:36.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.788" endtime="20201110 08:37:36.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.785" endtime="20201110 08:37:36.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.843" endtime="20201110 08:37:37.132"></status>
</kw>
<msg timestamp="20201110 08:37:37.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025209583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025580542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.842" endtime="20201110 08:37:37.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025209583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025580542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.136" endtime="20201110 08:37:37.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.145" endtime="20201110 08:37:37.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.839" endtime="20201110 08:37:37.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.837" endtime="20201110 08:37:37.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.151" level="INFO">${RESULT} = [{'time': 0.025580542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037095900000000057, 'source_diff': 0.00037095900000000057}, {'time': 0.025945861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:37.148" endtime="20201110 08:37:37.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:37.166" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:37.152" endtime="20201110 08:37:37.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.170" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:37:37.169" endtime="20201110 08:37:37.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.173" level="INFO">VALUE: [0.00037095900000000057, 0.000360361, 0.00036011100000000323, 0.00035929100000000116, 0.0003556530000000009, 0.0003567080000000007, 0.0003604999999999997, 0.0003591250000000018, 0.0003597909999999982, 0.00035724999999999993, 0.00035615299999999794, 0.0003551110000000017, 0.0003611810000000021, 0.0003559029999999977, 0.0003574860000000006, 0.00035563900000000134, 0.00035700000000000315, 0.0003589999999999982, 0.0003561669999999975, 0.00035937500000000205, 0.00036148600000000114, 0.00035695800000000444, 0.00035597299999999554, 0.0003591109999999953, 0.0003552630000000015, 0.00035741699999999876, 0.00035919499999999965, 0.0003573060000000017, 0.0003566249999999993, 0.0003589999999999982, 0.0003601800000000016, 0.0003611670000000025, 0.00035974999999999896, 0.0003609299999999954, 0.00035736199999999996, 0.00035947199999999957, 0.00035570900000000266, 0.00036098600000000064, 0.0003552920000000001, 0.0003610969999999977, 0.00035645800000000394, 0.0003569579999999975, 0.00035876400000000447, 0.0003586390000000009, 0.00035743099999999833, 0.000358346999999995, 0.00035505499999999995, 0.00036090299999999575, 0.0003574860000000041, 0.00035776400000000347]</msg>
<status status="PASS" starttime="20201110 08:37:37.172" endtime="20201110 08:37:37.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.167" endtime="20201110 08:37:37.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.177" endtime="20201110 08:37:37.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.180" endtime="20201110 08:37:37.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.179" endtime="20201110 08:37:37.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.175" endtime="20201110 08:37:37.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.784" endtime="20201110 08:37:37.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.783" endtime="20201110 08:37:37.201"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.211" endtime="20201110 08:37:37.247"></status>
</kw>
<msg timestamp="20201110 08:37:37.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.209" endtime="20201110 08:37:37.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.249" endtime="20201110 08:37:37.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.252" endtime="20201110 08:37:37.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.206" endtime="20201110 08:37:37.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.204" endtime="20201110 08:37:37.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.261" endtime="20201110 08:37:37.548"></status>
</kw>
<msg timestamp="20201110 08:37:37.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023862861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024235958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.260" endtime="20201110 08:37:37.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023862861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024235958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.552" endtime="20201110 08:37:37.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.561" endtime="20201110 08:37:37.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.257" endtime="20201110 08:37:37.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.255" endtime="20201110 08:37:37.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.568" level="INFO">${RESULT} = [{'time': 0.024235958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003730969999999993, 'source_diff': 0.0003730969999999993}, {'time': 0.024601389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:37.564" endtime="20201110 08:37:37.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:37.582" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:37.569" endtime="20201110 08:37:37.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.586" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:37:37.585" endtime="20201110 08:37:37.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.589" level="INFO">VALUE: [0.0003730969999999993, 0.00035683300000000084, 0.00035875000000000143, 0.00035669499999999715, 0.0003556249999999983, 0.00035887500000000155, 0.00035516599999999704, 0.0003614590000000015, 0.0003586809999999996, 0.00035697200000000054, 0.0003596390000000019, 0.00035676400000000247, 0.0003611389999999999, 0.00035537499999999805, 0.00035673699999999933, 0.00035966600000000154, 0.00035806899999999905, 0.0003580549999999995, 0.0003561950000000001, 0.0003584589999999985, 0.0003568889999999991, 0.0003600140000000057, 0.00035815299999999994, 0.00035611099999999923, 0.00036115199999999653, 0.00035522300000000173, 0.0003589579999999995, 0.0003552229999999948, 0.00035591699999999726, 0.00035659700000000016, 0.00035731899999999484, 0.0003569579999999975, 0.0003586250000000013, 0.0003553059999999997, 0.0003603610000000035, 0.00035915300000000094, 0.0003612230000000008, 0.00036091700000000226, 0.00036065300000000244, 0.0003574720000000045, 0.00035863899999999393, 0.00035691699999999826, 0.00035594500000000334, 0.00036026399999999903, 0.0003556660000000045, 0.0003551950000000026, 0.0003609030000000027, 0.0003587219999999988, 0.0003551799999999966, 0.0003573190000000018]</msg>
<status status="PASS" starttime="20201110 08:37:37.588" endtime="20201110 08:37:37.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.583" endtime="20201110 08:37:37.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.597" endtime="20201110 08:37:37.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.600" endtime="20201110 08:37:37.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.599" endtime="20201110 08:37:37.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.595" endtime="20201110 08:37:37.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.202" endtime="20201110 08:37:37.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.202" endtime="20201110 08:37:37.621"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.630" endtime="20201110 08:37:37.664"></status>
</kw>
<msg timestamp="20201110 08:37:37.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.629" endtime="20201110 08:37:37.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.666" endtime="20201110 08:37:37.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.668" endtime="20201110 08:37:37.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.626" endtime="20201110 08:37:37.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.624" endtime="20201110 08:37:37.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.678" endtime="20201110 08:37:37.965"></status>
</kw>
<msg timestamp="20201110 08:37:37.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021033222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021394042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.676" endtime="20201110 08:37:37.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021033222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021394042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.970" endtime="20201110 08:37:37.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.978" endtime="20201110 08:37:37.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.673" endtime="20201110 08:37:37.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.672" endtime="20201110 08:37:37.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.985" level="INFO">${RESULT} = [{'time': 0.021394042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003608199999999978, 'source_diff': 0.0003608199999999978}, {'time': 0.021759292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:37.981" endtime="20201110 08:37:37.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:37.999" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:37.986" endtime="20201110 08:37:37.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.003" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:37:38.002" endtime="20201110 08:37:38.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.006" level="INFO">VALUE: [0.0003608199999999978, 0.0003570279999999988, 0.00035888899999999765, 0.0003590139999999978, 0.0003604999999999997, 0.0003587359999999984, 0.00035797199999999807, 0.00035609700000000313, 0.0003602779999999986, 0.00035574999999999843, 0.0003583749999999976, 0.0003594999999999987, 0.0003591250000000018, 0.00036076300000000006, 0.0003597770000000021, 0.00036061100000000026, 0.0003554859999999986, 0.00035668100000000105, 0.0003547919999999996, 0.000354972000000002, 0.0003591250000000018, 0.0003574440000000019, 0.00035887500000000155, 0.0003596810000000006, 0.00035577800000000104, 0.0003599020000000022, 0.0003600000000000027, 0.00035595899999999944, 0.0003556799999999971, 0.0003566389999999989, 0.0003556389999999979, 0.0003570689999999946, 0.0003550829999999991, 0.00035876399999999753, 0.00036015300000000194, 0.0003610559999999985, 0.0003589030000000007, 0.0003552219999999953, 0.00036031899999999784, 0.00035859700000000216, 0.00035962499999999537, 0.00036126400000000003, 0.00036027800000000554, 0.00035898599999999864, 0.0003588339999999954, 0.00035944400000000043, 0.0003595139999999983, 0.0003615000000000007, 0.000358457999999999, 0.0003580690000000025]</msg>
<status status="PASS" starttime="20201110 08:37:38.005" endtime="20201110 08:37:38.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.000" endtime="20201110 08:37:38.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.010" endtime="20201110 08:37:38.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:38.013" endtime="20201110 08:37:38.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.012" endtime="20201110 08:37:38.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.008" endtime="20201110 08:37:38.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.622" endtime="20201110 08:37:38.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.622" endtime="20201110 08:37:38.034"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.044" endtime="20201110 08:37:38.081"></status>
</kw>
<msg timestamp="20201110 08:37:38.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.042" endtime="20201110 08:37:38.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.082" endtime="20201110 08:37:38.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.085" endtime="20201110 08:37:38.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.039" endtime="20201110 08:37:38.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.037" endtime="20201110 08:37:38.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.094" endtime="20201110 08:37:38.383"></status>
</kw>
<msg timestamp="20201110 08:37:38.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024690694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.093" endtime="20201110 08:37:38.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024690694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.387" endtime="20201110 08:37:38.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.396" endtime="20201110 08:37:38.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.090" endtime="20201110 08:37:38.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.088" endtime="20201110 08:37:38.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:38.403" level="INFO">${RESULT} = [{'time': 0.025055958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036526400000000056, 'source_diff': 0.00036526400000000056}, {'time': 0.025421222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:38.399" endtime="20201110 08:37:38.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:38.417" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:38.404" endtime="20201110 08:37:38.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.421" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:37:38.420" endtime="20201110 08:37:38.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.424" level="INFO">VALUE: [0.00036526400000000056, 0.00035920799999999975, 0.00035555599999999993, 0.0003593060000000002, 0.00036105600000000196, 0.00035994400000000093, 0.0003573610000000005, 0.00035597199999999954, 0.00035837500000000105, 0.0003547500000000009, 0.00035837500000000105, 0.00035591600000000126, 0.0003571249999999998, 0.0003568889999999991, 0.00035962499999999883, 0.0003553750000000015, 0.00035597199999999954, 0.0003594160000000013, 0.00035859800000000164, 0.0003584999999999977, 0.0003558750000000055, 0.0003577089999999977, 0.00035773699999999686, 0.00035531999999999925, 0.0003558050000000007, 0.0003598469999999965, 0.00036029199999999817, 0.0003576250000000003, 0.0003593610000000025, 0.00035765299999999944, 0.0003608879999999967, 0.00035798599999999764, 0.0003566530000000054, 0.0003582219999999983, 0.00036097200000000107, 0.0003582359999999979, 0.00035616599999999804, 0.00035609699999999966, 0.00036140299999999626, 0.00035723600000000383, 0.00035826399999999703, 0.0003571950000000046, 0.0003595129999999988, 0.000358181000000006, 0.00035620900000000316, 0.0003553330000000063, 0.0003555140000000012, 0.00035527800000000054, 0.00035854200000000336, 0.0003599030000000017]</msg>
<status status="PASS" starttime="20201110 08:37:38.422" endtime="20201110 08:37:38.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.418" endtime="20201110 08:37:38.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.428" endtime="20201110 08:37:38.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:38.431" endtime="20201110 08:37:38.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.430" endtime="20201110 08:37:38.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.426" endtime="20201110 08:37:38.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.035" endtime="20201110 08:37:38.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.035" endtime="20201110 08:37:38.452"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.461" endtime="20201110 08:37:38.497"></status>
</kw>
<msg timestamp="20201110 08:37:38.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.460" endtime="20201110 08:37:38.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.499" endtime="20201110 08:37:38.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.502" endtime="20201110 08:37:38.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.457" endtime="20201110 08:37:38.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.455" endtime="20201110 08:37:38.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.511" endtime="20201110 08:37:38.799"></status>
</kw>
<msg timestamp="20201110 08:37:38.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023969667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024340361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.509" endtime="20201110 08:37:38.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023969667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024340361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.803" endtime="20201110 08:37:38.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.812" endtime="20201110 08:37:38.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.507" endtime="20201110 08:37:38.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.505" endtime="20201110 08:37:38.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:38.818" level="INFO">${RESULT} = [{'time': 0.024340361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037069400000000127, 'source_diff': 0.00037069400000000127}, {'time': 0.024705639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:38.815" endtime="20201110 08:37:38.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:38.832" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:38.819" endtime="20201110 08:37:38.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.837" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:37:38.836" endtime="20201110 08:37:38.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.839" level="INFO">VALUE: [0.00037069400000000127, 0.00036127800000000307, 0.0003601529999999985, 0.0003598330000000004, 0.0003587090000000022, 0.00036076399999999953, 0.0003572080000000012, 0.00035967999999999764, 0.00036116599999999957, 0.00035829199999999964, 0.0003575000000000002, 0.0003552079999999992, 0.00035619400000000065, 0.000359959, 0.00035674999999999943, 0.0003586950000000026, 0.0003560410000000014, 0.0003613060000000022, 0.0003561950000000001, 0.00036011199999999577, 0.00035658400000000007, 0.0003548059999999992, 0.000359667000000001, 0.0003593610000000025, 0.0003576389999999999, 0.00036030599999999774, 0.0003590269999999979, 0.0003569019999999992, 0.00035794399999999893, 0.00035504199999999986, 0.0003593470000000029, 0.0003584020000000007, 0.00035793099999999883, 0.0003561940000000041, 0.00035598599999999564, 0.000357861000000001, 0.000358861000000002, 0.0003562500000000024, 0.0003577219999999978, 0.00035593099999999683, 0.00035561100000000567, 0.0003548469999999984, 0.00035593100000000377, 0.00036136099999999755, 0.0003610130000000003, 0.0003567909999999952, 0.0003599169999999943, 0.00035886099999999505, 0.0003598890000000021, 0.00036112499999999687]</msg>
<status status="PASS" starttime="20201110 08:37:38.838" endtime="20201110 08:37:38.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.833" endtime="20201110 08:37:38.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.843" endtime="20201110 08:37:38.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:38.847" endtime="20201110 08:37:38.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.845" endtime="20201110 08:37:38.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.841" endtime="20201110 08:37:38.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.453" endtime="20201110 08:37:38.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.453" endtime="20201110 08:37:38.868"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.877" endtime="20201110 08:37:38.915"></status>
</kw>
<msg timestamp="20201110 08:37:38.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.875" endtime="20201110 08:37:38.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.917" endtime="20201110 08:37:38.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.919" endtime="20201110 08:37:38.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.873" endtime="20201110 08:37:38.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.870" endtime="20201110 08:37:38.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.929" endtime="20201110 08:37:39.217"></status>
</kw>
<msg timestamp="20201110 08:37:39.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025400611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025757208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.927" endtime="20201110 08:37:39.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025400611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025757208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.221" endtime="20201110 08:37:39.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.229" endtime="20201110 08:37:39.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.925" endtime="20201110 08:37:39.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.923" endtime="20201110 08:37:39.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:39.236" level="INFO">${RESULT} = [{'time': 0.025757208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035659700000000016, 'source_diff': 0.00035659700000000016}, {'time': 0.026122486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:39.233" endtime="20201110 08:37:39.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:39.250" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:39.237" endtime="20201110 08:37:39.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.255" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:37:39.254" endtime="20201110 08:37:39.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.257" level="INFO">VALUE: [0.00035659700000000016, 0.0003598190000000008, 0.0003615000000000007, 0.00035845900000000194, 0.00036011099999999976, 0.00036041700000000176, 0.0003611810000000021, 0.0003563060000000007, 0.00035748599999999714, 0.0003577220000000013, 0.0003584730000000015, 0.0003610830000000016, 0.000355069999999999, 0.00036144399999999896, 0.00035838899999999715, 0.0003583189999999993, 0.000361555999999999, 0.0003570690000000015, 0.00035511099999999823, 0.00036137500000000405, 0.00035962499999999537, 0.0003571249999999998, 0.0003604999999999997, 0.0003614450000000019, 0.00035600000000000215, 0.00035576400000000147, 0.0003600969999999967, 0.00036044400000000143, 0.00035824999999999746, 0.0003548049999999997, 0.0003574029999999992, 0.0003556389999999979, 0.0003561939999999972, 0.00035970800000000025, 0.00035937500000000205, 0.0003611940000000022, 0.0003560280000000013, 0.00035672300000000323, 0.0003590139999999978, 0.00035959700000000316, 0.0003602769999999991, 0.00035993000000000136, 0.00035770799999999825, 0.0003579449999999984, 0.00035961100000000273, 0.00035698599999999664, 0.0003583470000000019, 0.0003559590000000029, 0.00035777800000000304, 0.0003574589999999975]</msg>
<status status="PASS" starttime="20201110 08:37:39.256" endtime="20201110 08:37:39.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.251" endtime="20201110 08:37:39.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.261" endtime="20201110 08:37:39.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.265" endtime="20201110 08:37:39.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.263" endtime="20201110 08:37:39.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.259" endtime="20201110 08:37:39.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.869" endtime="20201110 08:37:39.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.868" endtime="20201110 08:37:39.286"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.295" endtime="20201110 08:37:39.337"></status>
</kw>
<msg timestamp="20201110 08:37:39.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.293" endtime="20201110 08:37:39.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.339" endtime="20201110 08:37:39.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.341" endtime="20201110 08:37:39.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.291" endtime="20201110 08:37:39.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.289" endtime="20201110 08:37:39.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.351" endtime="20201110 08:37:39.638"></status>
</kw>
<msg timestamp="20201110 08:37:39.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024242542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.349" endtime="20201110 08:37:39.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024242542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.642" endtime="20201110 08:37:39.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.650" endtime="20201110 08:37:39.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.346" endtime="20201110 08:37:39.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.344" endtime="20201110 08:37:39.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:39.657" level="INFO">${RESULT} = [{'time': 0.024616903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037436100000000014, 'source_diff': 0.00037436100000000014}, {'time': 0.024982028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:39.654" endtime="20201110 08:37:39.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:39.671" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:39.658" endtime="20201110 08:37:39.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.676" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:37:39.675" endtime="20201110 08:37:39.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.678" level="INFO">VALUE: [0.00037436100000000014, 0.00036019500000000065, 0.0003561249999999988, 0.0003570280000000023, 0.00035801400000000025, 0.00035526400000000097, 0.0003595549999999975, 0.00035640300000000166, 0.00035695900000000044, 0.0003562920000000011, 0.0003589999999999982, 0.00035613900000000184, 0.0003592359999999989, 0.00035747200000000104, 0.0003585419999999999, 0.00035561099999999873, 0.00035695800000000097, 0.0003598749999999991, 0.0003612220000000013, 0.00035843099999999933, 0.0003583610000000015, 0.00036094400000000193, 0.000355181000000003, 0.00035943100000000033, 0.0003609580000000015, 0.00035488799999999765, 0.00035855500000000345, 0.00035559799999999864, 0.0003582229999999978, 0.00035920799999999975, 0.00036094400000000193, 0.0003571389999999994, 0.00035754200000000236, 0.0003563889999999986, 0.00035593099999999683, 0.0003603749999999961, 0.00035620900000000316, 0.00035677700000000256, 0.00035537499999999805, 0.0003558469999999994, 0.00036061100000000373, 0.00035965300000000144, 0.0003608199999999978, 0.000355569, 0.000359054999999997, 0.00035848599999999814, 0.00035557000000000644, 0.0003613199999999983, 0.0003589999999999982, 0.0003599450000000004]</msg>
<status status="PASS" starttime="20201110 08:37:39.677" endtime="20201110 08:37:39.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.672" endtime="20201110 08:37:39.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.682" endtime="20201110 08:37:39.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.685" endtime="20201110 08:37:39.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.684" endtime="20201110 08:37:39.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.680" endtime="20201110 08:37:39.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.287" endtime="20201110 08:37:39.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.286" endtime="20201110 08:37:39.707"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.716" endtime="20201110 08:37:39.754"></status>
</kw>
<msg timestamp="20201110 08:37:39.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.714" endtime="20201110 08:37:39.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.755" endtime="20201110 08:37:39.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.758" endtime="20201110 08:37:39.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.711" endtime="20201110 08:37:39.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.709" endtime="20201110 08:37:39.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.768" endtime="20201110 08:37:40.057"></status>
</kw>
<msg timestamp="20201110 08:37:40.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025762944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0261235, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:39.766" endtime="20201110 08:37:40.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025762944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0261235, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:40.061" endtime="20201110 08:37:40.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.069" endtime="20201110 08:37:40.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.763" endtime="20201110 08:37:40.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.761" endtime="20201110 08:37:40.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.076" level="INFO">${RESULT} = [{'time': 0.0261235, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036055600000000146, 'source_diff': 0.00036055600000000146}, {'time': 0.026488556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:40.073" endtime="20201110 08:37:40.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.089" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:40.077" endtime="20201110 08:37:40.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.094" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.093" endtime="20201110 08:37:40.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.096" level="INFO">VALUE: [0.00036055600000000146, 0.0003552370000000013, 0.0003608480000000004, 0.00035618100000000055, 0.000356569000000001, 0.0003591529999999975, 0.0003548059999999992, 0.00035874999999999796, 0.00035672299999999976, 0.0003552500000000014, 0.0003599860000000031, 0.00035574999999999843, 0.0003590000000000017, 0.00036098600000000064, 0.00035463800000000087, 0.0003584999999999977, 0.0003582229999999978, 0.00035908400000000257, 0.00035494400000000287, 0.0003566660000000055, 0.0003607220000000008, 0.0003596109999999958, 0.000358457999999999, 0.0003555829999999996, 0.0003569300000000053, 0.0003559019999999982, 0.0003548189999999993, 0.000357569000000002, 0.0003570280000000023, 0.0003549449999999954, 0.0003568060000000012, 0.00036108299999999816, 0.00035881899999999634, 0.0003588050000000037, 0.00035761100000000073, 0.0003607769999999996, 0.00035555500000000045, 0.0003550140000000007, 0.0003593610000000025, 0.0003556389999999979, 0.0003610000000000002, 0.0003581799999999996, 0.00035520799999999575, 0.00035787500000000055, 0.00035848599999999814, 0.0003567219999999968, 0.00035829100000000363, 0.0003579029999999997, 0.00035761100000000073, 0.0003594869999999986]</msg>
<status status="PASS" starttime="20201110 08:37:40.095" endtime="20201110 08:37:40.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.090" endtime="20201110 08:37:40.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.100" endtime="20201110 08:37:40.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.103" endtime="20201110 08:37:40.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.101" endtime="20201110 08:37:40.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.098" endtime="20201110 08:37:40.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.707" endtime="20201110 08:37:40.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.707" endtime="20201110 08:37:40.124"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.133" endtime="20201110 08:37:40.172"></status>
</kw>
<msg timestamp="20201110 08:37:40.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.132" endtime="20201110 08:37:40.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.173" endtime="20201110 08:37:40.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.175" endtime="20201110 08:37:40.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.129" endtime="20201110 08:37:40.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.126" endtime="20201110 08:37:40.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.184" endtime="20201110 08:37:40.471"></status>
</kw>
<msg timestamp="20201110 08:37:40.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025366917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025742222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.183" endtime="20201110 08:37:40.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025366917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025742222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.475" endtime="20201110 08:37:40.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.484" endtime="20201110 08:37:40.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.180" endtime="20201110 08:37:40.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.179" endtime="20201110 08:37:40.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.490" level="INFO">${RESULT} = [{'time': 0.025742222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003753049999999994, 'source_diff': 0.0003753049999999994}, {'time': 0.026107417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:40.487" endtime="20201110 08:37:40.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.504" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:40.491" endtime="20201110 08:37:40.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.510" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.508" endtime="20201110 08:37:40.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.516" level="INFO">VALUE: [0.0003753049999999994, 0.00035955600000000046, 0.0003596809999999971, 0.0003598609999999995, 0.0003597219999999998, 0.0003600280000000018, 0.0003566389999999989, 0.00036026399999999903, 0.00035912499999999833, 0.00036047300000000004, 0.00035651399999999875, 0.0003558469999999994, 0.0003554859999999986, 0.0003576250000000003, 0.0003600970000000002, 0.00035559799999999864, 0.0003554720000000025, 0.00035777800000000304, 0.0003576380000000004, 0.0003558339999999993, 0.00035898599999999864, 0.0003590139999999978, 0.0003614020000000037, 0.00035611099999999923, 0.0003553189999999998, 0.0003593060000000037, 0.00035979199999999767, 0.00035527700000000106, 0.00035969500000000015, 0.0003607779999999991, 0.0003564999999999957, 0.0003564019999999987, 0.0003550270000000008, 0.0003605269999999994, 0.0003609580000000015, 0.0003592089999999992, 0.0003570410000000024, 0.00035827800000000354, 0.00035776399999999653, 0.0003581250000000008, 0.0003566940000000046, 0.00035659700000000016, 0.0003548479999999979, 0.00035865300000000044, 0.00035804099999999645, 0.00035743100000000527, 0.00035792999999999936, 0.0003611949999999947, 0.0003606940000000017, 0.0003576380000000004]</msg>
<status status="PASS" starttime="20201110 08:37:40.513" endtime="20201110 08:37:40.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.505" endtime="20201110 08:37:40.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.524" endtime="20201110 08:37:40.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.531" endtime="20201110 08:37:40.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.528" endtime="20201110 08:37:40.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.520" endtime="20201110 08:37:40.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.125" endtime="20201110 08:37:40.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.124" endtime="20201110 08:37:40.557"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.577" endtime="20201110 08:37:40.614"></status>
</kw>
<msg timestamp="20201110 08:37:40.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.573" endtime="20201110 08:37:40.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.616" endtime="20201110 08:37:40.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.618" endtime="20201110 08:37:40.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.567" endtime="20201110 08:37:40.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.562" endtime="20201110 08:37:40.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.628" endtime="20201110 08:37:40.915"></status>
</kw>
<msg timestamp="20201110 08:37:40.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038102625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038470278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.626" endtime="20201110 08:37:40.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038102625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038470278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.919" endtime="20201110 08:37:40.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.927" endtime="20201110 08:37:40.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.624" endtime="20201110 08:37:40.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.622" endtime="20201110 08:37:40.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.934" level="INFO">${RESULT} = [{'time': 0.038470278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036765299999999557, 'source_diff': 0.00036765299999999557}, {'time': 0.038835486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:40.931" endtime="20201110 08:37:40.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.948" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:40.935" endtime="20201110 08:37:40.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.953" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.952" endtime="20201110 08:37:40.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.955" level="INFO">VALUE: [0.00036765299999999557, 0.0003611940000000022, 0.0003578470000000014, 0.0003576810000000055, 0.0003593890000000016, 0.0003569159999999988, 0.00035593100000000377, 0.00035993000000000136, 0.00035637499999999905, 0.0003596810000000006, 0.00036030599999999774, 0.0003604999999999997, 0.00035747199999999757, 0.00035737500000000005, 0.0003598329999999969, 0.00035677800000000204, 0.00035847199999999857, 0.00035819499999999865, 0.00035808299999999516, 0.0003602909999999987, 0.0003550840000000055, 0.00036065300000000244, 0.0003557920000000006, 0.0003567920000000016, 0.0003571799999999986, 0.0003554860000000021, 0.000360346999999997, 0.000358667, 0.00035568000000000405, 0.00035797199999999807, 0.0003560269999999949, 0.0003612920000000061, 0.00035993100000000083, 0.0003611940000000022, 0.0003557920000000006, 0.0003586250000000013, 0.0003576950000000051, 0.000358958999999999, 0.0003609030000000027, 0.0003560410000000014, 0.0003574589999999975, 0.00035666700000000495, 0.0003582219999999983, 0.0003595419999999974, 0.0003588329999999959, 0.0003576809999999986, 0.0003585139999999973, 0.0003611109999999973, 0.00036004200000000486, 0.0003572359999999969]</msg>
<status status="PASS" starttime="20201110 08:37:40.954" endtime="20201110 08:37:40.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.949" endtime="20201110 08:37:40.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.959" endtime="20201110 08:37:40.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.962" endtime="20201110 08:37:40.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.961" endtime="20201110 08:37:40.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.957" endtime="20201110 08:37:40.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.559" endtime="20201110 08:37:40.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.558" endtime="20201110 08:37:40.984"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.993" endtime="20201110 08:37:41.030"></status>
</kw>
<msg timestamp="20201110 08:37:41.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.991" endtime="20201110 08:37:41.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.031" endtime="20201110 08:37:41.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.034" endtime="20201110 08:37:41.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.988" endtime="20201110 08:37:41.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.986" endtime="20201110 08:37:41.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.043" endtime="20201110 08:37:41.331"></status>
</kw>
<msg timestamp="20201110 08:37:41.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024839, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025202861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:41.042" endtime="20201110 08:37:41.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024839, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025202861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:41.335" endtime="20201110 08:37:41.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.343" endtime="20201110 08:37:41.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.039" endtime="20201110 08:37:41.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.037" endtime="20201110 08:37:41.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:41.350" level="INFO">${RESULT} = [{'time': 0.025202861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036386100000000005, 'source_diff': 0.00036386100000000005}, {'time': 0.025567958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:41.346" endtime="20201110 08:37:41.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:41.364" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:41.351" endtime="20201110 08:37:41.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.369" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:37:41.367" endtime="20201110 08:37:41.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.371" level="INFO">VALUE: [0.00036386100000000005, 0.0003554439999999999, 0.0003576250000000003, 0.00035755599999999846, 0.00035697200000000054, 0.0003610000000000002, 0.00035862499999999783, 0.00035615200000000194, 0.00035741600000000276, 0.0003588329999999994, 0.0003558060000000002, 0.00036048600000000014, 0.000355069999999999, 0.00036084700000000094, 0.00035956900000000055, 0.00035934699999999944, 0.0003560140000000017, 0.00035968100000000405, 0.00035820799999999875, 0.0003586939999999997, 0.00036008299999999716, 0.00035687499999999955, 0.0003577359999999974, 0.00035543100000000327, 0.0003586109999999948, 0.0003571669999999985, 0.0003564029999999982, 0.00035966600000000154, 0.00035616700000000445, 0.00035526400000000097, 0.0003612920000000061, 0.00035512500000000474, 0.000358457999999999, 0.00035500000000000115, 0.0003603050000000052, 0.00036068099999999464, 0.0003604450000000009, 0.0003549730000000015, 0.00036086200000000346, 0.00035650000000000265, 0.0003592779999999976, 0.0003551669999999965, 0.0003552500000000014, 0.0003590140000000047, 0.00035776399999999653, 0.00036044400000000143, 0.000359667000000001, 0.00035924999999999846, 0.0003601670000000015, 0.0003563339999999998]</msg>
<status status="PASS" starttime="20201110 08:37:41.370" endtime="20201110 08:37:41.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.365" endtime="20201110 08:37:41.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.375" endtime="20201110 08:37:41.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:41.379" endtime="20201110 08:37:41.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.377" endtime="20201110 08:37:41.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.373" endtime="20201110 08:37:41.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.984" endtime="20201110 08:37:41.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.984" endtime="20201110 08:37:41.400"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.409" endtime="20201110 08:37:41.448"></status>
</kw>
<msg timestamp="20201110 08:37:41.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.407" endtime="20201110 08:37:41.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.449" endtime="20201110 08:37:41.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.452" endtime="20201110 08:37:41.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.404" endtime="20201110 08:37:41.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.402" endtime="20201110 08:37:41.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.461" endtime="20201110 08:37:41.749"></status>
</kw>
<msg timestamp="20201110 08:37:41.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025690222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026047181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.460" endtime="20201110 08:37:41.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025690222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026047181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.753" endtime="20201110 08:37:41.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.761" endtime="20201110 08:37:41.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.457" endtime="20201110 08:37:41.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.455" endtime="20201110 08:37:41.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:41.768" level="INFO">${RESULT} = [{'time': 0.026047181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035695900000000044, 'source_diff': 0.00035695900000000044}, {'time': 0.026412528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:41.765" endtime="20201110 08:37:41.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:41.782" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:41.769" endtime="20201110 08:37:41.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.787" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:37:41.786" endtime="20201110 08:37:41.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.789" level="INFO">VALUE: [0.00035695900000000044, 0.00035540300000000066, 0.00036052799999999885, 0.0003599580000000005, 0.000360054999999998, 0.0003580419999999994, 0.00036108399999999763, 0.00035855599999999946, 0.0003575969999999977, 0.0003611940000000022, 0.00036076399999999953, 0.0003598609999999995, 0.0003603330000000009, 0.0003608610000000005, 0.00036012499999999933, 0.00035677800000000204, 0.000357569000000002, 0.00035809700000000166, 0.00035959700000000316, 0.00036061100000000373, 0.00035588900000000506, 0.00035566700000000395, 0.0003572359999999969, 0.00035793099999999883, 0.0003611670000000025, 0.0003607220000000008, 0.0003585269999999974, 0.00035723600000000383, 0.0003561249999999988, 0.00036112499999999687, 0.00035947299999999904, 0.00035991700000000126, 0.00035715299999999894, 0.0003586250000000013, 0.0003560280000000013, 0.0003583890000000006, 0.00035769499999999815, 0.0003608889999999962, 0.00035704200000000186, 0.0003561249999999988, 0.0003611250000000038, 0.00036011100000000323, 0.0003566389999999989, 0.0003610139999999998, 0.0003548610000000049, 0.00035526400000000097, 0.00035609699999999966, 0.0003601390000000024, 0.00036148600000000114, 0.0003558889999999981]</msg>
<status status="PASS" starttime="20201110 08:37:41.788" endtime="20201110 08:37:41.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.783" endtime="20201110 08:37:41.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.793" endtime="20201110 08:37:41.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:41.797" endtime="20201110 08:37:41.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.795" endtime="20201110 08:37:41.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.791" endtime="20201110 08:37:41.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.401" endtime="20201110 08:37:41.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.400" endtime="20201110 08:37:41.818"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.827" endtime="20201110 08:37:41.864"></status>
</kw>
<msg timestamp="20201110 08:37:41.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.825" endtime="20201110 08:37:41.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.866" endtime="20201110 08:37:41.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.869" endtime="20201110 08:37:41.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.822" endtime="20201110 08:37:41.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.820" endtime="20201110 08:37:41.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.878" endtime="20201110 08:37:42.165"></status>
</kw>
<msg timestamp="20201110 08:37:42.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024623, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024991958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:41.876" endtime="20201110 08:37:42.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024623, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024991958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:42.169" endtime="20201110 08:37:42.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.178" endtime="20201110 08:37:42.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.874" endtime="20201110 08:37:42.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.872" endtime="20201110 08:37:42.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.185" level="INFO">${RESULT} = [{'time': 0.024991958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036895800000000256, 'source_diff': 0.00036895800000000256}, {'time': 0.025357222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:42.181" endtime="20201110 08:37:42.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:42.199" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:42.186" endtime="20201110 08:37:42.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.203" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:37:42.202" endtime="20201110 08:37:42.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.206" level="INFO">VALUE: [0.00036895800000000256, 0.0003554159999999973, 0.00035709700000000066, 0.00035805599999999896, 0.00035765199999999997, 0.00035957000000000003, 0.00035477800000000004, 0.0003607779999999991, 0.0003580269999999969, 0.00035874999999999796, 0.00035877800000000057, 0.00035793099999999883, 0.0003555140000000012, 0.00036057000000000103, 0.00036088899999999965, 0.0003613199999999983, 0.0003589999999999982, 0.0003580549999999995, 0.0003604450000000044, 0.0003577909999999962, 0.0003594999999999987, 0.00035806999999999506, 0.00035993000000000136, 0.00035819499999999865, 0.0003593889999999947, 0.00035652799999999485, 0.0003559300000000043, 0.00035852799999999685, 0.0003569860000000036, 0.00036026399999999903, 0.00035566700000000395, 0.00035537499999999805, 0.0003605689999999981, 0.0003549860000000016, 0.00035616599999999804, 0.0003549579999999955, 0.0003549579999999955, 0.00035954200000000436, 0.0003579999999999972, 0.000354972000000002, 0.0003595830000000036, 0.00035481999999999875, 0.00035932000000000325, 0.0003610559999999985, 0.00035744399999999843, 0.000359070000000003, 0.0003614019999999968, 0.0003604299999999949, 0.00035501300000000124, 0.000358569000000003]</msg>
<status status="PASS" starttime="20201110 08:37:42.204" endtime="20201110 08:37:42.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.200" endtime="20201110 08:37:42.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.210" endtime="20201110 08:37:42.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.213" endtime="20201110 08:37:42.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.212" endtime="20201110 08:37:42.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.208" endtime="20201110 08:37:42.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.819" endtime="20201110 08:37:42.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.818" endtime="20201110 08:37:42.234"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.243" endtime="20201110 08:37:42.281"></status>
</kw>
<msg timestamp="20201110 08:37:42.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.242" endtime="20201110 08:37:42.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.283" endtime="20201110 08:37:42.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.285" endtime="20201110 08:37:42.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.239" endtime="20201110 08:37:42.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.237" endtime="20201110 08:37:42.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.295" endtime="20201110 08:37:42.582"></status>
</kw>
<msg timestamp="20201110 08:37:42.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025073569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025428333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.293" endtime="20201110 08:37:42.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025073569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025428333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.586" endtime="20201110 08:37:42.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.595" endtime="20201110 08:37:42.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.290" endtime="20201110 08:37:42.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.288" endtime="20201110 08:37:42.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.601" level="INFO">${RESULT} = [{'time': 0.025428333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035476400000000047, 'source_diff': 0.00035476400000000047}, {'time': 0.025793639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:42.598" endtime="20201110 08:37:42.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:42.615" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:42.602" endtime="20201110 08:37:42.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.620" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:37:42.619" endtime="20201110 08:37:42.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.623" level="INFO">VALUE: [0.00035476400000000047, 0.00035962499999999883, 0.00035991700000000126, 0.0003555280000000008, 0.0003586800000000001, 0.0003561389999999984, 0.0003601529999999985, 0.00036079199999999867, 0.00035909700000000266, 0.0003564859999999996, 0.00035741699999999876, 0.00036006900000000105, 0.0003613749999999971, 0.0003552639999999975, 0.00035924999999999846, 0.00035677799999999857, 0.00036061100000000026, 0.00035800000000000415, 0.00035676299999999606, 0.00035726400000000297, 0.00035693100000000477, 0.0003611250000000038, 0.0003569860000000036, 0.00036093000000000236, 0.0003567219999999968, 0.00035837500000000105, 0.0003604590000000005, 0.0003580139999999968, 0.0003611109999999973, 0.0003602090000000002, 0.0003563469999999999, 0.00036076399999999953, 0.0003565280000000018, 0.0003610000000000002, 0.0003564720000000035, 0.00036074999999999996, 0.00035693100000000477, 0.00035879100000000413, 0.0003579579999999985, 0.00035743100000000527, 0.0003598190000000043, 0.00035627700000000206, 0.00035544400000000337, 0.0003592779999999976, 0.0003573480000000004, 0.0003551119999999977, 0.0003579020000000002, 0.0003608749999999966, 0.00035858299999999566, 0.00035741699999999876]</msg>
<status status="PASS" starttime="20201110 08:37:42.621" endtime="20201110 08:37:42.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.616" endtime="20201110 08:37:42.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.630" endtime="20201110 08:37:42.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.634" endtime="20201110 08:37:42.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.633" endtime="20201110 08:37:42.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.629" endtime="20201110 08:37:42.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.235" endtime="20201110 08:37:42.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.235" endtime="20201110 08:37:42.655"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.664" endtime="20201110 08:37:42.698"></status>
</kw>
<msg timestamp="20201110 08:37:42.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.663" endtime="20201110 08:37:42.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.699" endtime="20201110 08:37:42.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.702" endtime="20201110 08:37:42.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.660" endtime="20201110 08:37:42.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.658" endtime="20201110 08:37:42.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.711" endtime="20201110 08:37:42.999"></status>
</kw>
<msg timestamp="20201110 08:37:43.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021158514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.710" endtime="20201110 08:37:43.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021158514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.003" endtime="20201110 08:37:43.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.011" endtime="20201110 08:37:43.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.707" endtime="20201110 08:37:43.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.705" endtime="20201110 08:37:43.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.018" level="INFO">${RESULT} = [{'time': 0.021537306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003787919999999993, 'source_diff': 0.0003787919999999993}, {'time': 0.021902569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:43.015" endtime="20201110 08:37:43.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:43.032" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:43.019" endtime="20201110 08:37:43.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.037" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:37:43.036" endtime="20201110 08:37:43.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.040" level="INFO">VALUE: [0.0003787919999999993, 0.0003612770000000001, 0.00035719400000000165, 0.0003610970000000012, 0.00035834699999999844, 0.00035745900000000094, 0.000357666000000003, 0.00035811099999999776, 0.0003583890000000006, 0.00035856899999999955, 0.00035775000000000043, 0.0003593890000000016, 0.00035775000000000043, 0.0003554590000000024, 0.00035505499999999995, 0.0003573470000000009, 0.00035577800000000104, 0.0003589579999999995, 0.0003594030000000012, 0.0003551800000000001, 0.0003553340000000023, 0.00036012499999999933, 0.00035833399999999835, 0.0003582090000000017, 0.00035691700000000173, 0.0003554999999999982, 0.00035565199999999797, 0.0003593890000000016, 0.0003575139999999963, 0.0003576250000000003, 0.000358667, 0.0003603339999999969, 0.00035559699999999916, 0.000359861000000003, 0.0003564300000000048, 0.00036109700000000466, 0.00035909700000000266, 0.0003597219999999998, 0.000355860999999999, 0.00035720799999999775, 0.00035869499999999915, 0.0003571389999999994, 0.0003612090000000012, 0.0003592779999999976, 0.000360555999999998, 0.00035716599999999904, 0.00035970800000000025, 0.0003592920000000041, 0.000357054999999995, 0.00035555599999999993]</msg>
<status status="PASS" starttime="20201110 08:37:43.038" endtime="20201110 08:37:43.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.033" endtime="20201110 08:37:43.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.043" endtime="20201110 08:37:43.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.047" endtime="20201110 08:37:43.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.045" endtime="20201110 08:37:43.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.042" endtime="20201110 08:37:43.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.656" endtime="20201110 08:37:43.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.655" endtime="20201110 08:37:43.068"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.077" endtime="20201110 08:37:43.116"></status>
</kw>
<msg timestamp="20201110 08:37:43.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.076" endtime="20201110 08:37:43.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.117" endtime="20201110 08:37:43.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.120" endtime="20201110 08:37:43.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.073" endtime="20201110 08:37:43.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.071" endtime="20201110 08:37:43.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.129" endtime="20201110 08:37:43.418"></status>
</kw>
<msg timestamp="20201110 08:37:43.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02526775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025649458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:43.128" endtime="20201110 08:37:43.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02526775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025649458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:43.422" endtime="20201110 08:37:43.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.431" endtime="20201110 08:37:43.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.125" endtime="20201110 08:37:43.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.123" endtime="20201110 08:37:43.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.442" level="INFO">${RESULT} = [{'time': 0.025649458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038170800000000144, 'source_diff': 0.00038170800000000144}, {'time': 0.026014806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:43.435" endtime="20201110 08:37:43.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:43.475" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:43.444" endtime="20201110 08:37:43.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.484" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:37:43.482" endtime="20201110 08:37:43.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.490" level="INFO">VALUE: [0.00038170800000000144, 0.0003593890000000016, 0.00035825000000000093, 0.0003571939999999982, 0.00035561099999999873, 0.00035865300000000044, 0.00035943100000000033, 0.000359555000000001, 0.00035623599999999936, 0.00035775000000000043, 0.0003559859999999991, 0.00035641699999999776, 0.00035609699999999966, 0.00035641699999999776, 0.00035609699999999966, 0.0003599450000000004, 0.0003570129999999998, 0.0003575969999999942, 0.0003593340000000028, 0.0003580690000000025, 0.00035897199999999907, 0.00035929199999999717, 0.0003596669999999941, 0.0003556940000000036, 0.00035581999999999975, 0.0003584720000000055, 0.00035609699999999966, 0.00035483400000000526, 0.00035861100000000173, 0.0003589579999999995, 0.0003586250000000013, 0.00035800000000000415, 0.0003581669999999995, 0.00035523600000000183, 0.0003553469999999989, 0.00036020800000000075, 0.00035770799999999825, 0.000358054999999996, 0.00035974999999999896, 0.00036105500000000595, 0.0003598619999999955, 0.00035583299999999984, 0.00035683300000000084, 0.0003557500000000019, 0.0003613470000000049, 0.00035573699999999486, 0.00035626399999999503, 0.0003599580000000005, 0.0003556810000000035, 0.0003553189999999998]</msg>
<status status="PASS" starttime="20201110 08:37:43.487" endtime="20201110 08:37:43.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.476" endtime="20201110 08:37:43.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.498" endtime="20201110 08:37:43.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.505" endtime="20201110 08:37:43.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.502" endtime="20201110 08:37:43.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.494" endtime="20201110 08:37:43.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.069" endtime="20201110 08:37:43.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.068" endtime="20201110 08:37:43.531"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.545" endtime="20201110 08:37:43.582"></status>
</kw>
<msg timestamp="20201110 08:37:43.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.543" endtime="20201110 08:37:43.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.584" endtime="20201110 08:37:43.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.586" endtime="20201110 08:37:43.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.540" endtime="20201110 08:37:43.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.536" endtime="20201110 08:37:43.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.596" endtime="20201110 08:37:43.882"></status>
</kw>
<msg timestamp="20201110 08:37:43.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033681139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034043833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.594" endtime="20201110 08:37:43.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033681139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034043833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.886" endtime="20201110 08:37:43.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.895" endtime="20201110 08:37:43.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.591" endtime="20201110 08:37:43.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.590" endtime="20201110 08:37:43.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.901" level="INFO">${RESULT} = [{'time': 0.034043833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003626940000000037, 'source_diff': 0.0003626940000000037}, {'time': 0.034409014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:43.898" endtime="20201110 08:37:43.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:43.915" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:43.902" endtime="20201110 08:37:43.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.920" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:37:43.919" endtime="20201110 08:37:43.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.923" level="INFO">VALUE: [0.0003626940000000037, 0.0003559860000000026, 0.0003591250000000018, 0.00035794399999999893, 0.00035943100000000033, 0.00035852799999999685, 0.00035490200000000416, 0.00035804099999999645, 0.00035698599999999664, 0.0003572359999999969, 0.0003553059999999997, 0.0003562219999999963, 0.00035931899999999684, 0.0003577920000000026, 0.00035697199999999707, 0.0003573340000000008, 0.0003554860000000021, 0.0003594589999999995, 0.00035593099999999683, 0.0003581250000000008, 0.00036106999999999806, 0.00035626399999999503, 0.0003581250000000008, 0.0003598470000000034, 0.0003581120000000007, 0.00035544500000000284, 0.0003551390000000043, 0.00035605600000000043, 0.0003600139999999988, 0.00035852799999999685, 0.000360569000000005, 0.0003583610000000015, 0.00035974999999999896, 0.0003576250000000003, 0.000359861000000003, 0.00035891700000000026, 0.00036002799999999835, 0.00036098600000000064, 0.00035994499999999346, 0.00036070800000000125, 0.0003570140000000027, 0.0003565139999999953, 0.00035891700000000026, 0.0003591669999999936, 0.00035611099999999923, 0.00035620799999999675, 0.00035987500000000255, 0.0003593060000000037, 0.0003599160000000018, 0.0003578749999999936]</msg>
<status status="PASS" starttime="20201110 08:37:43.921" endtime="20201110 08:37:43.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.916" endtime="20201110 08:37:43.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.926" endtime="20201110 08:37:43.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.930" endtime="20201110 08:37:43.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.928" endtime="20201110 08:37:43.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.925" endtime="20201110 08:37:43.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.533" endtime="20201110 08:37:43.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.532" endtime="20201110 08:37:43.951"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.960" endtime="20201110 08:37:43.994"></status>
</kw>
<msg timestamp="20201110 08:37:43.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.958" endtime="20201110 08:37:43.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.996" endtime="20201110 08:37:43.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.998" endtime="20201110 08:37:44.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.956" endtime="20201110 08:37:44.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.954" endtime="20201110 08:37:44.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.007" endtime="20201110 08:37:44.296"></status>
</kw>
<msg timestamp="20201110 08:37:44.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021398681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021754528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.006" endtime="20201110 08:37:44.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021398681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021754528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.300" endtime="20201110 08:37:44.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.308" endtime="20201110 08:37:44.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.003" endtime="20201110 08:37:44.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.002" endtime="20201110 08:37:44.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.315" level="INFO">${RESULT} = [{'time': 0.021754528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003558469999999994, 'source_diff': 0.0003558469999999994}, {'time': 0.022119778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:44.312" endtime="20201110 08:37:44.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:44.329" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:44.316" endtime="20201110 08:37:44.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.334" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:37:44.333" endtime="20201110 08:37:44.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.336" level="INFO">VALUE: [0.0003558469999999994, 0.0003569860000000001, 0.0003591670000000005, 0.0003610139999999998, 0.00036125000000000046, 0.0003604159999999988, 0.0003588189999999998, 0.00035627799999999807, 0.00035733300000000134, 0.0003570280000000023, 0.0003577359999999974, 0.0003594449999999999, 0.00035915300000000094, 0.0003553890000000011, 0.00035801400000000025, 0.00035527800000000054, 0.000357554999999999, 0.00035984699999999994, 0.0003591810000000001, 0.0003593890000000016, 0.00035626400000000197, 0.00035984699999999994, 0.00035751399999999975, 0.0003563750000000025, 0.0003581800000000031, 0.0003572639999999995, 0.0003572090000000007, 0.00035841699999999976, 0.0003554860000000021, 0.00035700000000000315, 0.0003580280000000033, 0.00036043100000000133, 0.00036061100000000373, 0.0003562500000000024, 0.00035616599999999804, 0.0003582359999999979, 0.00035937500000000205, 0.00035701300000000324, 0.0003608339999999974, 0.00035791699999999926, 0.0003584030000000002, 0.0003551249999999978, 0.0003588889999999942, 0.00036141700000000276, 0.00035933300000000334, 0.00035966600000000154, 0.0003549860000000016, 0.000355666999999997, 0.0003611949999999947, 0.0003578060000000022]</msg>
<status status="PASS" starttime="20201110 08:37:44.335" endtime="20201110 08:37:44.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.330" endtime="20201110 08:37:44.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.340" endtime="20201110 08:37:44.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.343" endtime="20201110 08:37:44.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.342" endtime="20201110 08:37:44.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.338" endtime="20201110 08:37:44.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.952" endtime="20201110 08:37:44.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.951" endtime="20201110 08:37:44.364"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.374" endtime="20201110 08:37:44.412"></status>
</kw>
<msg timestamp="20201110 08:37:44.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.372" endtime="20201110 08:37:44.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.413" endtime="20201110 08:37:44.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.416" endtime="20201110 08:37:44.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.369" endtime="20201110 08:37:44.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.367" endtime="20201110 08:37:44.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.425" endtime="20201110 08:37:44.713"></status>
</kw>
<msg timestamp="20201110 08:37:44.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025022806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025398597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.424" endtime="20201110 08:37:44.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025022806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025398597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.717" endtime="20201110 08:37:44.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.725" endtime="20201110 08:37:44.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.421" endtime="20201110 08:37:44.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.419" endtime="20201110 08:37:44.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.732" level="INFO">${RESULT} = [{'time': 0.025398597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037579099999999685, 'source_diff': 0.00037579099999999685}, {'time': 0.025763903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:44.729" endtime="20201110 08:37:44.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:44.746" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:44.733" endtime="20201110 08:37:44.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.750" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:37:44.749" endtime="20201110 08:37:44.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.753" level="INFO">VALUE: [0.00037579099999999685, 0.0003549590000000019, 0.0003576809999999986, 0.00036020800000000075, 0.00035659700000000016, 0.00036012499999999933, 0.0003565830000000006, 0.0003597219999999998, 0.00035695900000000044, 0.0003612779999999996, 0.0003600970000000002, 0.0003604029999999987, 0.0003586800000000001, 0.00035912499999999833, 0.0003582640000000005, 0.0003550980000000016, 0.00036052799999999885, 0.0003580419999999959, 0.00036125000000000046, 0.0003571249999999998, 0.0003585700000000025, 0.00035666700000000495, 0.0003570690000000015, 0.0003580140000000037, 0.0003601250000000028, 0.00035665299999999844, 0.0003576250000000003, 0.0003559730000000025, 0.00035758400000000107, 0.000358473000000005, 0.00036044400000000143, 0.0003605689999999981, 0.00035761100000000073, 0.00036117999999999567, 0.00035876400000000447, 0.00035601300000000224, 0.000355375000000005, 0.0003581390000000004, 0.00035866600000000054, 0.00036082000000000475, 0.00036141700000000276, 0.0003556799999999971, 0.00035648599999999614, 0.0003568470000000004, 0.00036047200000000057, 0.0003561249999999988, 0.0003574720000000045, 0.00035780499999999577, 0.00035752799999999585, 0.0003577359999999974]</msg>
<status status="PASS" starttime="20201110 08:37:44.751" endtime="20201110 08:37:44.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.747" endtime="20201110 08:37:44.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.756" endtime="20201110 08:37:44.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.760" endtime="20201110 08:37:44.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.758" endtime="20201110 08:37:44.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.755" endtime="20201110 08:37:44.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.365" endtime="20201110 08:37:44.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.365" endtime="20201110 08:37:44.781"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.791" endtime="20201110 08:37:44.828"></status>
</kw>
<msg timestamp="20201110 08:37:44.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.789" endtime="20201110 08:37:44.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.830" endtime="20201110 08:37:44.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.832" endtime="20201110 08:37:44.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.787" endtime="20201110 08:37:44.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.784" endtime="20201110 08:37:44.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.841" endtime="20201110 08:37:45.148"></status>
</kw>
<msg timestamp="20201110 08:37:45.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025703097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026082069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.840" endtime="20201110 08:37:45.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025703097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026082069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.152" endtime="20201110 08:37:45.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.160" endtime="20201110 08:37:45.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.837" endtime="20201110 08:37:45.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.835" endtime="20201110 08:37:45.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.167" level="INFO">${RESULT} = [{'time': 0.026082069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037897199999999825, 'source_diff': 0.00037897199999999825}, {'time': 0.02644725, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:45.164" endtime="20201110 08:37:45.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:45.181" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:45.168" endtime="20201110 08:37:45.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.185" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:37:45.184" endtime="20201110 08:37:45.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.188" level="INFO">VALUE: [0.00037897199999999825, 0.00035495799999999897, 0.00035682000000000075, 0.0003587080000000027, 0.00036112500000000033, 0.0003557079999999997, 0.00035655599999999746, 0.00035659700000000016, 0.000355167, 0.00035615299999999794, 0.00035673599999999986, 0.00035674999999999943, 0.00035823600000000136, 0.00036088899999999965, 0.00035754200000000236, 0.0003569590000000039, 0.0003555140000000012, 0.0003603190000000048, 0.00035886099999999505, 0.00035622300000000273, 0.0003584589999999985, 0.0003594020000000017, 0.00035622200000000326, 0.0003598190000000043, 0.00035955500000000445, 0.0003604590000000005, 0.0003551389999999974, 0.00035679100000000213, 0.00035643099999999733, 0.0003567359999999964, 0.00035865200000000097, 0.0003550280000000003, 0.0003546660000000035, 0.0003573050000000022, 0.0003610000000000002, 0.00036119500000000165, 0.0003558060000000002, 0.000358861000000002, 0.00035566700000000395, 0.0003587359999999984, 0.00035523699999999436, 0.00035956999999999656, 0.000356166000000005, 0.00035577800000000104, 0.0003589999999999982, 0.00036041700000000176, 0.0003602909999999987, 0.00035776399999999653, 0.00035577700000000156, 0.0003598190000000043]</msg>
<status status="PASS" starttime="20201110 08:37:45.186" endtime="20201110 08:37:45.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.182" endtime="20201110 08:37:45.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.191" endtime="20201110 08:37:45.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.195" endtime="20201110 08:37:45.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.193" endtime="20201110 08:37:45.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.190" endtime="20201110 08:37:45.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.782" endtime="20201110 08:37:45.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.782" endtime="20201110 08:37:45.216"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.225" endtime="20201110 08:37:45.261"></status>
</kw>
<msg timestamp="20201110 08:37:45.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.223" endtime="20201110 08:37:45.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.263" endtime="20201110 08:37:45.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.265" endtime="20201110 08:37:45.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.221" endtime="20201110 08:37:45.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.218" endtime="20201110 08:37:45.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.274" endtime="20201110 08:37:45.560"></status>
</kw>
<msg timestamp="20201110 08:37:45.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022740153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023100556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.273" endtime="20201110 08:37:45.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022740153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023100556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.564" endtime="20201110 08:37:45.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.572" endtime="20201110 08:37:45.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.270" endtime="20201110 08:37:45.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.268" endtime="20201110 08:37:45.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.579" level="INFO">${RESULT} = [{'time': 0.023100556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003604030000000022, 'source_diff': 0.0003604030000000022}, {'time': 0.023465708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:45.576" endtime="20201110 08:37:45.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:45.592" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:45.580" endtime="20201110 08:37:45.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.597" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:37:45.596" endtime="20201110 08:37:45.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.599" level="INFO">VALUE: [0.0003604030000000022, 0.00035679099999999866, 0.00036061100000000026, 0.00035875000000000143, 0.00036038899999999915, 0.000359555999999997, 0.00036057000000000103, 0.00035797199999999807, 0.00035947299999999904, 0.00035765299999999944, 0.0003586250000000013, 0.0003610000000000002, 0.00035938899999999815, 0.00035711100000000023, 0.00035866600000000054, 0.0003563469999999999, 0.0003583189999999993, 0.00035724999999999993, 0.0003604590000000005, 0.0003554020000000012, 0.00035468099999999905, 0.0003584860000000016, 0.00036044400000000143, 0.0003568890000000026, 0.00035494500000000234, 0.0003557219999999958, 0.00035716599999999904, 0.0003582500000000044, 0.0003593610000000025, 0.0003591390000000014, 0.0003557089999999957, 0.00035870799999999925, 0.00035727800000000254, 0.00036125000000000046, 0.0003594169999999938, 0.00036047200000000057, 0.00036030599999999774, 0.0003596390000000019, 0.0003587779999999971, 0.0003605700000000045, 0.0003569029999999987, 0.0003574999999999967, 0.00036032000000000425, 0.0003567920000000016, 0.0003608469999999975, 0.0003578480000000009, 0.00035605600000000043, 0.00035794399999999893, 0.0003560830000000001, 0.00035836099999999455]</msg>
<status status="PASS" starttime="20201110 08:37:45.598" endtime="20201110 08:37:45.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.593" endtime="20201110 08:37:45.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.603" endtime="20201110 08:37:45.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.606" endtime="20201110 08:37:45.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.605" endtime="20201110 08:37:45.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.601" endtime="20201110 08:37:45.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.217" endtime="20201110 08:37:45.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.216" endtime="20201110 08:37:45.627"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.636" endtime="20201110 08:37:45.673"></status>
</kw>
<msg timestamp="20201110 08:37:45.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.635" endtime="20201110 08:37:45.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.674" endtime="20201110 08:37:45.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.677" endtime="20201110 08:37:45.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.632" endtime="20201110 08:37:45.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.630" endtime="20201110 08:37:45.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.686" endtime="20201110 08:37:45.972"></status>
</kw>
<msg timestamp="20201110 08:37:45.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023148597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023528792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.684" endtime="20201110 08:37:45.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023148597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023528792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.977" endtime="20201110 08:37:45.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.985" endtime="20201110 08:37:45.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.682" endtime="20201110 08:37:45.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.680" endtime="20201110 08:37:45.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.991" level="INFO">${RESULT} = [{'time': 0.023528792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038019499999999984, 'source_diff': 0.00038019499999999984}, {'time': 0.023893931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:45.988" endtime="20201110 08:37:45.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.007" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:45.993" endtime="20201110 08:37:46.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.012" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.011" endtime="20201110 08:37:46.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.014" level="INFO">VALUE: [0.00038019499999999984, 0.00035623699999999883, 0.00035875000000000143, 0.0003607360000000004, 0.00035883399999999885, 0.0003546949999999986, 0.0003613620000000005, 0.00036074999999999996, 0.0003580409999999999, 0.0003566249999999993, 0.00036112499999999687, 0.0003554019999999977, 0.0003551949999999991, 0.0003608610000000005, 0.0003553470000000024, 0.00035794399999999893, 0.0003566530000000019, 0.0003595410000000014, 0.0003578059999999987, 0.0003564859999999996, 0.0003606390000000029, 0.00035877800000000057, 0.0003555419999999969, 0.0003587500000000049, 0.0003584589999999985, 0.0003607219999999939, 0.0003564720000000035, 0.0003560280000000013, 0.0003563050000000012, 0.00035626400000000197, 0.00035597199999999607, 0.000357555999999995, 0.0003567920000000016, 0.0003587909999999972, 0.0003594860000000061, 0.0003560140000000017, 0.000361346999999998, 0.0003574999999999967, 0.00035598599999999564, 0.0003552229999999948, 0.00035565299999999744, 0.0003611669999999956, 0.0003583889999999937, 0.00035954200000000436, 0.0003559300000000043, 0.0003589579999999995, 0.0003569029999999987, 0.00035640300000000513, 0.00035627800000000154, 0.00035661099999999973]</msg>
<status status="PASS" starttime="20201110 08:37:46.013" endtime="20201110 08:37:46.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.008" endtime="20201110 08:37:46.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.018" endtime="20201110 08:37:46.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.022" endtime="20201110 08:37:46.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.020" endtime="20201110 08:37:46.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.016" endtime="20201110 08:37:46.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.628" endtime="20201110 08:37:46.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.628" endtime="20201110 08:37:46.043"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.051" endtime="20201110 08:37:46.089"></status>
</kw>
<msg timestamp="20201110 08:37:46.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.050" endtime="20201110 08:37:46.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.091" endtime="20201110 08:37:46.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.093" endtime="20201110 08:37:46.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.047" endtime="20201110 08:37:46.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.045" endtime="20201110 08:37:46.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.102" endtime="20201110 08:37:46.389"></status>
</kw>
<msg timestamp="20201110 08:37:46.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024886375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025256917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.101" endtime="20201110 08:37:46.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024886375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025256917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.393" endtime="20201110 08:37:46.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.401" endtime="20201110 08:37:46.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.098" endtime="20201110 08:37:46.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.096" endtime="20201110 08:37:46.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.408" level="INFO">${RESULT} = [{'time': 0.025256917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003705420000000015, 'source_diff': 0.0003705420000000015}, {'time': 0.025622111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:46.405" endtime="20201110 08:37:46.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.421" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:46.409" endtime="20201110 08:37:46.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.426" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.425" endtime="20201110 08:37:46.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.428" level="INFO">VALUE: [0.0003705420000000015, 0.0003583890000000006, 0.0003564159999999983, 0.00035997299999999954, 0.0003577630000000005, 0.0003597359999999994, 0.0003570279999999988, 0.0003595129999999988, 0.00035555500000000045, 0.0003569029999999987, 0.00035933399999999935, 0.00035816600000000004, 0.00036047200000000057, 0.00035500000000000115, 0.000359360999999999, 0.0003550140000000007, 0.0003610969999999977, 0.000356861, 0.00036112499999999687, 0.00036026399999999903, 0.00035793100000000577, 0.00035791699999999926, 0.00035672300000000323, 0.00035998599999999964, 0.0003576250000000003, 0.0003587500000000049, 0.0003577370000000038, 0.00035544399999999643, 0.00035920799999999975, 0.0003563609999999995, 0.0003566249999999993, 0.0003546810000000025, 0.0003604030000000022, 0.00035509699999999866, 0.0003563050000000012, 0.00035926400000000497, 0.00036043000000000186, 0.0003588470000000024, 0.0003563889999999986, 0.0003585410000000039, 0.0003566939999999977, 0.00035533299999999934, 0.0003585139999999973, 0.00035504199999999986, 0.0003608890000000031, 0.00035716599999999904, 0.0003570830000000011, 0.0003577769999999966, 0.0003548189999999993, 0.00035844399999999943]</msg>
<status status="PASS" starttime="20201110 08:37:46.427" endtime="20201110 08:37:46.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.422" endtime="20201110 08:37:46.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.432" endtime="20201110 08:37:46.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.435" endtime="20201110 08:37:46.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.433" endtime="20201110 08:37:46.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.430" endtime="20201110 08:37:46.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.043" endtime="20201110 08:37:46.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.043" endtime="20201110 08:37:46.456"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.464" endtime="20201110 08:37:46.505"></status>
</kw>
<msg timestamp="20201110 08:37:46.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.463" endtime="20201110 08:37:46.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.511" endtime="20201110 08:37:46.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.520" endtime="20201110 08:37:46.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.460" endtime="20201110 08:37:46.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.458" endtime="20201110 08:37:46.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.547" endtime="20201110 08:37:46.841"></status>
</kw>
<msg timestamp="20201110 08:37:46.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023628736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023999778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.544" endtime="20201110 08:37:46.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023628736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023999778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.845" endtime="20201110 08:37:46.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.853" endtime="20201110 08:37:46.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.536" endtime="20201110 08:37:46.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.531" endtime="20201110 08:37:46.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.859" level="INFO">${RESULT} = [{'time': 0.023999778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003710419999999985, 'source_diff': 0.0003710419999999985}, {'time': 0.024364847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:46.856" endtime="20201110 08:37:46.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.873" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:46.860" endtime="20201110 08:37:46.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.877" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.876" endtime="20201110 08:37:46.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.880" level="INFO">VALUE: [0.0003710419999999985, 0.0003571389999999994, 0.0003582770000000006, 0.00035651399999999875, 0.0003598060000000007, 0.0003583890000000006, 0.0003566799999999981, 0.00036047300000000004, 0.0003572220000000008, 0.0003585969999999987, 0.00035527800000000054, 0.0003578749999999971, 0.00035674999999999943, 0.00036088899999999965, 0.00035884699999999894, 0.00035627799999999807, 0.0003601809999999976, 0.0003547089999999982, 0.0003611670000000025, 0.0003590550000000005, 0.00035494500000000234, 0.0003605139999999993, 0.00035894399999999993, 0.00035822200000000526, 0.00035591699999999726, 0.00035505499999999995, 0.00035490300000000363, 0.0003587769999999976, 0.000354584000000005, 0.00036093100000000183, 0.000360861000000004, 0.00035579199999999367, 0.0003579860000000046, 0.0003560280000000013, 0.00035604200000000086, 0.00035781899999999534, 0.0003562920000000011, 0.00035933300000000334, 0.0003579579999999985, 0.0003611250000000038, 0.0003560689999999936, 0.0003600280000000053, 0.00035588900000000506, 0.00036043000000000186, 0.00035711100000000023, 0.0003585969999999952, 0.00035674999999999596, 0.00035774999999999696, 0.00035568000000000405, 0.00035550000000000165]</msg>
<status status="PASS" starttime="20201110 08:37:46.878" endtime="20201110 08:37:46.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.874" endtime="20201110 08:37:46.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.883" endtime="20201110 08:37:46.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.887" endtime="20201110 08:37:46.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.885" endtime="20201110 08:37:46.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.882" endtime="20201110 08:37:46.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.457" endtime="20201110 08:37:46.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.456" endtime="20201110 08:37:46.907"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.916" endtime="20201110 08:37:46.954"></status>
</kw>
<msg timestamp="20201110 08:37:46.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.914" endtime="20201110 08:37:46.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.956" endtime="20201110 08:37:46.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.958" endtime="20201110 08:37:46.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.912" endtime="20201110 08:37:46.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.910" endtime="20201110 08:37:46.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.968" endtime="20201110 08:37:47.254"></status>
</kw>
<msg timestamp="20201110 08:37:47.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024154097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024520569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.966" endtime="20201110 08:37:47.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024154097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024520569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.258" endtime="20201110 08:37:47.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.266" endtime="20201110 08:37:47.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.963" endtime="20201110 08:37:47.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.961" endtime="20201110 08:37:47.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.273" level="INFO">${RESULT} = [{'time': 0.024520569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036647199999999963, 'source_diff': 0.00036647199999999963}, {'time': 0.024885847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:47.270" endtime="20201110 08:37:47.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:47.286" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:47.274" endtime="20201110 08:37:47.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.291" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:37:47.290" endtime="20201110 08:37:47.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.293" level="INFO">VALUE: [0.00036647199999999963, 0.00035934699999999944, 0.0003588199999999993, 0.00035933399999999935, 0.00036006900000000105, 0.0003605969999999972, 0.0003602359999999999, 0.00035541700000000023, 0.0003600000000000027, 0.0003593340000000028, 0.00035826399999999703, 0.0003593890000000016, 0.0003603749999999996, 0.00035505599999999943, 0.0003580419999999994, 0.00036076399999999953, 0.00036102700000000335, 0.00036120800000000175, 0.00035713900000000284, 0.0003609159999999993, 0.00035909800000000214, 0.00035947199999999957, 0.0003548889999999971, 0.000355069999999999, 0.0003602220000000003, 0.000359569000000004, 0.00036026399999999903, 0.00035559799999999864, 0.00035491699999999626, 0.000355569, 0.0003583610000000015, 0.00036108299999999816, 0.0003563479999999994, 0.0003594160000000013, 0.0003594030000000012, 0.00036125000000000046, 0.000360959000000001, 0.00035611099999999923, 0.0003588199999999958, 0.00035900000000000515, 0.0003554029999999972, 0.0003580979999999942, 0.00035494400000000287, 0.000357181000000005, 0.0003592779999999976, 0.00035488900000000406, 0.000359861000000003, 0.0003575280000000028, 0.00036091599999999585, 0.0003555140000000012]</msg>
<status status="PASS" starttime="20201110 08:37:47.292" endtime="20201110 08:37:47.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.287" endtime="20201110 08:37:47.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.297" endtime="20201110 08:37:47.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.300" endtime="20201110 08:37:47.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.299" endtime="20201110 08:37:47.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.295" endtime="20201110 08:37:47.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.908" endtime="20201110 08:37:47.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.908" endtime="20201110 08:37:47.321"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.330" endtime="20201110 08:37:47.370"></status>
</kw>
<msg timestamp="20201110 08:37:47.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.328" endtime="20201110 08:37:47.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.372" endtime="20201110 08:37:47.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.374" endtime="20201110 08:37:47.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.325" endtime="20201110 08:37:47.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.323" endtime="20201110 08:37:47.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.383" endtime="20201110 08:37:47.669"></status>
</kw>
<msg timestamp="20201110 08:37:47.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.381" endtime="20201110 08:37:47.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.673" endtime="20201110 08:37:47.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.681" endtime="20201110 08:37:47.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.379" endtime="20201110 08:37:47.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.377" endtime="20201110 08:37:47.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.687" level="INFO">${RESULT} = [{'time': 0.022808486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003785279999999995, 'source_diff': 0.0003785279999999995}, {'time': 0.023173708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:47.684" endtime="20201110 08:37:47.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:47.701" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:47.688" endtime="20201110 08:37:47.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.705" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:37:47.704" endtime="20201110 08:37:47.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.708" level="INFO">VALUE: [0.0003785279999999995, 0.00035663900000000234, 0.0003559999999999987, 0.00035683300000000084, 0.00035601399999999825, 0.0003570830000000011, 0.0003607360000000004, 0.0003599030000000017, 0.0003570549999999985, 0.0003553050000000002, 0.0003585410000000004, 0.00035724999999999993, 0.00036038899999999915, 0.0003580000000000007, 0.0003557500000000019, 0.00035574999999999843, 0.0003601800000000016, 0.0003577770000000001, 0.00035495800000000244, 0.000356861, 0.0003553469999999989, 0.0003546389999999969, 0.0003581799999999996, 0.0003601810000000011, 0.00036063799999999993, 0.00036115300000000294, 0.00035877800000000404, 0.00036083300000000484, 0.00035612500000000574, 0.00035741699999999876, 0.00036130599999999874, 0.0003551390000000043, 0.00035720900000000416, 0.0003612360000000009, 0.0003560280000000013, 0.00036109700000000466, 0.00036061100000000373, 0.0003595549999999975, 0.0003560140000000017, 0.00035898599999999864, 0.00035687499999999955, 0.0003565140000000022, 0.0003589160000000008, 0.00035750000000000365, 0.0003597359999999994, 0.0003556390000000048, 0.0003610969999999977, 0.0003579579999999985, 0.000356666999999998, 0.0003554590000000024]</msg>
<status status="PASS" starttime="20201110 08:37:47.706" endtime="20201110 08:37:47.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.702" endtime="20201110 08:37:47.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.715" endtime="20201110 08:37:47.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.719" endtime="20201110 08:37:47.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.717" endtime="20201110 08:37:47.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.714" endtime="20201110 08:37:47.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.322" endtime="20201110 08:37:47.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.321" endtime="20201110 08:37:47.740"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.748" endtime="20201110 08:37:47.782"></status>
</kw>
<msg timestamp="20201110 08:37:47.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.747" endtime="20201110 08:37:47.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.784" endtime="20201110 08:37:47.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.786" endtime="20201110 08:37:47.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.744" endtime="20201110 08:37:47.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.742" endtime="20201110 08:37:47.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.795" endtime="20201110 08:37:48.082"></status>
</kw>
<msg timestamp="20201110 08:37:48.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020796944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021157958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.794" endtime="20201110 08:37:48.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020796944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021157958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.086" endtime="20201110 08:37:48.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.094" endtime="20201110 08:37:48.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.791" endtime="20201110 08:37:48.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.789" endtime="20201110 08:37:48.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.100" level="INFO">${RESULT} = [{'time': 0.021157958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003610139999999998, 'source_diff': 0.0003610139999999998}, {'time': 0.021523097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:48.097" endtime="20201110 08:37:48.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:48.114" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:48.101" endtime="20201110 08:37:48.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.118" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:37:48.117" endtime="20201110 08:37:48.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.121" level="INFO">VALUE: [0.0003610139999999998, 0.0003551250000000013, 0.0003560140000000017, 0.00035870799999999925, 0.0003583610000000015, 0.0003613329999999984, 0.00035624999999999893, 0.00035627799999999807, 0.00035724999999999993, 0.00035920799999999975, 0.0003572220000000008, 0.0003587359999999984, 0.00035563900000000134, 0.0003553889999999976, 0.0003555140000000012, 0.00035934699999999944, 0.00036040199999999925, 0.00036113800000000043, 0.0003553059999999997, 0.00035832000000000225, 0.00035655500000000145, 0.00035862499999999783, 0.0003595969999999997, 0.0003568470000000004, 0.0003566530000000019, 0.0003547769999999971, 0.0003583189999999993, 0.00035687499999999955, 0.0003547769999999971, 0.0003599869999999991, 0.00035772200000000476, 0.0003607779999999991, 0.00035674999999999596, 0.0003554029999999972, 0.0003603749999999961, 0.00035841699999999976, 0.00035959800000000264, 0.0003566950000000041, 0.0003569860000000036, 0.0003602779999999986, 0.0003547919999999996, 0.0003573610000000005, 0.00035745800000000494, 0.0003605419999999984, 0.00035541699999999676, 0.00036108299999999816, 0.00035723600000000383, 0.0003605419999999984, 0.00035669499999999715, 0.00035915200000000147]</msg>
<status status="PASS" starttime="20201110 08:37:48.119" endtime="20201110 08:37:48.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.115" endtime="20201110 08:37:48.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.124" endtime="20201110 08:37:48.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.128" endtime="20201110 08:37:48.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.126" endtime="20201110 08:37:48.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.123" endtime="20201110 08:37:48.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.741" endtime="20201110 08:37:48.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.740" endtime="20201110 08:37:48.149"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.157" endtime="20201110 08:37:48.194"></status>
</kw>
<msg timestamp="20201110 08:37:48.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.155" endtime="20201110 08:37:48.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.196" endtime="20201110 08:37:48.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.198" endtime="20201110 08:37:48.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.153" endtime="20201110 08:37:48.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.151" endtime="20201110 08:37:48.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.207" endtime="20201110 08:37:48.494"></status>
</kw>
<msg timestamp="20201110 08:37:48.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024020625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024399389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.205" endtime="20201110 08:37:48.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024020625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024399389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.498" endtime="20201110 08:37:48.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.506" endtime="20201110 08:37:48.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.203" endtime="20201110 08:37:48.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.201" endtime="20201110 08:37:48.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.513" level="INFO">${RESULT} = [{'time': 0.024399389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003787640000000002, 'source_diff': 0.0003787640000000002}, {'time': 0.024764625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:48.509" endtime="20201110 08:37:48.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:48.526" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:48.514" endtime="20201110 08:37:48.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.530" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:37:48.529" endtime="20201110 08:37:48.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.533" level="INFO">VALUE: [0.0003787640000000002, 0.000354763999999997, 0.00035633300000000034, 0.00035629199999999764, 0.00035724999999999993, 0.00035755600000000193, 0.00035665299999999844, 0.00035619400000000065, 0.00036067999999999864, 0.00035704200000000186, 0.0003563889999999986, 0.00035943100000000033, 0.0003548469999999984, 0.00035604200000000086, 0.00035815200000000047, 0.000360361, 0.0003597219999999998, 0.0003607220000000008, 0.00036007000000000053, 0.00036054099999999895, 0.00035723699999999636, 0.00036080599999999824, 0.00035983300000000384, 0.0003576530000000064, 0.0003605140000000062, 0.00035826400000000397, 0.00036006999999999706, 0.0003582779999999966, 0.0003604450000000009, 0.0003598749999999956, 0.0003562779999999946, 0.00035561100000000567, 0.0003550410000000004, 0.0003605139999999993, 0.0003571249999999998, 0.000357666999999999, 0.00035930499999999727, 0.00036047300000000004, 0.0003580689999999956, 0.0003593329999999964, 0.0003582920000000031, 0.0003547080000000022, 0.0003608190000000053, 0.0003601810000000011, 0.00035484700000000535, 0.00035997200000000007, 0.0003601670000000015, 0.00035481999999999875, 0.00035876299999999806, 0.00036015300000000194]</msg>
<status status="PASS" starttime="20201110 08:37:48.531" endtime="20201110 08:37:48.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.527" endtime="20201110 08:37:48.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.536" endtime="20201110 08:37:48.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.540" endtime="20201110 08:37:48.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.538" endtime="20201110 08:37:48.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.535" endtime="20201110 08:37:48.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.149" endtime="20201110 08:37:48.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.149" endtime="20201110 08:37:48.561"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.570" endtime="20201110 08:37:48.607"></status>
</kw>
<msg timestamp="20201110 08:37:48.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.568" endtime="20201110 08:37:48.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.609" endtime="20201110 08:37:48.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.611" endtime="20201110 08:37:48.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.566" endtime="20201110 08:37:48.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.563" endtime="20201110 08:37:48.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.620" endtime="20201110 08:37:48.922"></status>
</kw>
<msg timestamp="20201110 08:37:48.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023817569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024189806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.619" endtime="20201110 08:37:48.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023817569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024189806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.926" endtime="20201110 08:37:48.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.934" endtime="20201110 08:37:48.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.616" endtime="20201110 08:37:48.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.614" endtime="20201110 08:37:48.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.941" level="INFO">${RESULT} = [{'time': 0.024189806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037223700000000096, 'source_diff': 0.00037223700000000096}, {'time': 0.024554972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:48.937" endtime="20201110 08:37:48.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:48.954" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:48.942" endtime="20201110 08:37:48.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.959" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:37:48.958" endtime="20201110 08:37:48.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.961" level="INFO">VALUE: [0.00037223700000000096, 0.0003566530000000019, 0.0003555419999999969, 0.000360555999999998, 0.0003611529999999995, 0.0003552079999999992, 0.0003578890000000001, 0.0003576809999999986, 0.0003572080000000012, 0.00035973699999999886, 0.0003599999999999992, 0.0003564859999999996, 0.0003591670000000005, 0.0003599999999999992, 0.0003585280000000003, 0.00035841699999999976, 0.00035956900000000055, 0.0003566800000000016, 0.0003611670000000025, 0.0003580829999999986, 0.00035629100000000163, 0.00035755600000000193, 0.0003588749999999946, 0.00035505599999999943, 0.0003611949999999947, 0.0003591390000000014, 0.00036000000000000615, 0.00035693099999999783, 0.00036074999999999996, 0.00036104099999999945, 0.0003581120000000007, 0.00035779199999999567, 0.00035577800000000104, 0.0003559170000000042, 0.00035566599999999754, 0.00035720799999999775, 0.00036076399999999953, 0.00035481999999999875, 0.0003579449999999984, 0.0003571809999999981, 0.00035831899999999584, 0.0003565410000000019, 0.0003576250000000003, 0.00036044400000000143, 0.00036141700000000276, 0.0003555280000000008, 0.0003613610000000045, 0.0003572630000000035, 0.0003565269999999954, 0.00036102799999999935]</msg>
<status status="PASS" starttime="20201110 08:37:48.960" endtime="20201110 08:37:48.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.955" endtime="20201110 08:37:48.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.965" endtime="20201110 08:37:48.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.968" endtime="20201110 08:37:48.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.967" endtime="20201110 08:37:48.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.963" endtime="20201110 08:37:48.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.561" endtime="20201110 08:37:48.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.561" endtime="20201110 08:37:48.989"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.999" endtime="20201110 08:37:49.039"></status>
</kw>
<msg timestamp="20201110 08:37:49.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.996" endtime="20201110 08:37:49.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.040" endtime="20201110 08:37:49.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.043" endtime="20201110 08:37:49.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.994" endtime="20201110 08:37:49.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.992" endtime="20201110 08:37:49.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.052" endtime="20201110 08:37:49.338"></status>
</kw>
<msg timestamp="20201110 08:37:49.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027469528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027832833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.050" endtime="20201110 08:37:49.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027469528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027832833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.342" endtime="20201110 08:37:49.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.350" endtime="20201110 08:37:49.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.047" endtime="20201110 08:37:49.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.046" endtime="20201110 08:37:49.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.357" level="INFO">${RESULT} = [{'time': 0.027832833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036330500000000127, 'source_diff': 0.00036330500000000127}, {'time': 0.028197986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:49.353" endtime="20201110 08:37:49.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:49.371" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:49.358" endtime="20201110 08:37:49.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.376" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:37:49.375" endtime="20201110 08:37:49.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.378" level="INFO">VALUE: [0.00036330500000000127, 0.0003608330000000014, 0.0003576250000000003, 0.0003569999999999997, 0.0003564020000000022, 0.00036041700000000176, 0.00035879200000000014, 0.00036079199999999867, 0.0003589159999999973, 0.00035493100000000277, 0.00035859700000000216, 0.00035476400000000047, 0.00035477800000000004, 0.000360667000000002, 0.0003597779999999981, 0.0003586809999999996, 0.00036090299999999575, 0.0003582920000000031, 0.00036111100000000423, 0.00035941700000000076, 0.0003603480000000034, 0.0003562500000000024, 0.0003588060000000032, 0.00035982000000000375, 0.00035644500000000384, 0.00036112499999999687, 0.0003604169999999948, 0.0003585689999999961, 0.00036090299999999575, 0.000359458, 0.000357958999999998, 0.0003591109999999953, 0.0003596390000000019, 0.0003612079999999948, 0.00035497299999999454, 0.00035591699999999726, 0.00035527800000000054, 0.00035477800000000004, 0.0003603199999999973, 0.0003585700000000025, 0.0003562359999999959, 0.0003605139999999993, 0.00035531999999999925, 0.0003593890000000016, 0.00035770900000000466, 0.00035593100000000377, 0.0003565280000000018, 0.0003596250000000023, 0.00035583299999999984, 0.0003603339999999969]</msg>
<status status="PASS" starttime="20201110 08:37:49.377" endtime="20201110 08:37:49.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.372" endtime="20201110 08:37:49.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.381" endtime="20201110 08:37:49.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.385" endtime="20201110 08:37:49.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.383" endtime="20201110 08:37:49.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.380" endtime="20201110 08:37:49.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.990" endtime="20201110 08:37:49.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.989" endtime="20201110 08:37:49.406"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.414" endtime="20201110 08:37:49.450"></status>
</kw>
<msg timestamp="20201110 08:37:49.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.413" endtime="20201110 08:37:49.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.452" endtime="20201110 08:37:49.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.454" endtime="20201110 08:37:49.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.410" endtime="20201110 08:37:49.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.408" endtime="20201110 08:37:49.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.463" endtime="20201110 08:37:49.767"></status>
</kw>
<msg timestamp="20201110 08:37:49.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022749986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023112264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.461" endtime="20201110 08:37:49.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022749986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023112264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.771" endtime="20201110 08:37:49.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.779" endtime="20201110 08:37:49.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.459" endtime="20201110 08:37:49.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.457" endtime="20201110 08:37:49.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.786" level="INFO">${RESULT} = [{'time': 0.023112264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003622780000000006, 'source_diff': 0.0003622780000000006}, {'time': 0.023477333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:49.783" endtime="20201110 08:37:49.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:49.799" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:49.787" endtime="20201110 08:37:49.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.804" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:37:49.803" endtime="20201110 08:37:49.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.806" level="INFO">VALUE: [0.0003622780000000006, 0.00035930500000000073, 0.00036095799999999803, 0.0003583749999999976, 0.0003605830000000011, 0.00035573599999999886, 0.00035911100000000223, 0.0003548330000000023, 0.0003562920000000011, 0.00035974999999999896, 0.0003598199999999968, 0.000359555000000001, 0.0003569860000000001, 0.0003563889999999986, 0.00035902799999999735, 0.0003558890000000016, 0.00035477800000000004, 0.0003597359999999994, 0.00035829100000000016, 0.00035547199999999904, 0.00035709700000000066, 0.0003608750000000001, 0.00036107000000000153, 0.0003563050000000012, 0.00035929199999999717, 0.0003581799999999996, 0.00036090299999999575, 0.00035655600000000093, 0.00035737500000000005, 0.0003556810000000035, 0.00035961100000000273, 0.0003601250000000028, 0.00035600000000000215, 0.00035836200000000096, 0.00035561099999999873, 0.0003606810000000016, 0.00035870799999999925, 0.00035493099999999583, 0.0003598469999999965, 0.0003562219999999963, 0.0003559300000000043, 0.00036080499999999877, 0.00035477800000000004, 0.00036069500000000115, 0.00035483299999999884, 0.00036125000000000046, 0.0003553609999999985, 0.00035488900000000406, 0.0003561389999999984, 0.0003563889999999986]</msg>
<status status="PASS" starttime="20201110 08:37:49.805" endtime="20201110 08:37:49.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.800" endtime="20201110 08:37:49.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.810" endtime="20201110 08:37:49.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.813" endtime="20201110 08:37:49.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.811" endtime="20201110 08:37:49.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.808" endtime="20201110 08:37:49.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.407" endtime="20201110 08:37:49.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.406" endtime="20201110 08:37:49.834"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.842" endtime="20201110 08:37:49.880"></status>
</kw>
<msg timestamp="20201110 08:37:49.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.841" endtime="20201110 08:37:49.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.881" endtime="20201110 08:37:49.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.883" endtime="20201110 08:37:49.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.838" endtime="20201110 08:37:49.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.836" endtime="20201110 08:37:49.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.892" endtime="20201110 08:37:50.180"></status>
</kw>
<msg timestamp="20201110 08:37:50.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.891" endtime="20201110 08:37:50.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.184" endtime="20201110 08:37:50.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.192" endtime="20201110 08:37:50.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.888" endtime="20201110 08:37:50.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.887" endtime="20201110 08:37:50.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.198" level="INFO">${RESULT} = [{'time': 0.022022167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035974999999999896, 'source_diff': 0.00035974999999999896}, {'time': 0.022387514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:50.195" endtime="20201110 08:37:50.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:50.212" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:50.199" endtime="20201110 08:37:50.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.216" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:37:50.215" endtime="20201110 08:37:50.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.219" level="INFO">VALUE: [0.00035974999999999896, 0.0003568060000000012, 0.00036055600000000146, 0.00036015300000000194, 0.0003599580000000005, 0.00035490300000000016, 0.00036112500000000033, 0.00036002799999999835, 0.0003602359999999999, 0.0003553340000000023, 0.00036024999999999946, 0.0003583059999999992, 0.00035915300000000094, 0.0003571669999999985, 0.0003581799999999996, 0.00035533299999999934, 0.00035687499999999955, 0.00035809700000000166, 0.0003560690000000005, 0.0003551249999999978, 0.0003614029999999997, 0.00036125000000000046, 0.0003605139999999993, 0.0003566389999999989, 0.0003580969999999982, 0.0003572080000000012, 0.0003574310000000018, 0.00035522200000000226, 0.0003587779999999971, 0.0003562089999999962, 0.00035673600000000333, 0.0003577779999999961, 0.00035891700000000026, 0.00036108399999999763, 0.0003555280000000008, 0.0003556390000000048, 0.0003571809999999981, 0.0003551939999999962, 0.00036036099999999655, 0.0003595549999999975, 0.0003615140000000003, 0.0003584860000000051, 0.0003568050000000017, 0.0003579029999999997, 0.00035711100000000023, 0.00035698599999999664, 0.00036086099999999705, 0.00035543100000000327, 0.0003595549999999975, 0.00035908299999999616]</msg>
<status status="PASS" starttime="20201110 08:37:50.217" endtime="20201110 08:37:50.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.213" endtime="20201110 08:37:50.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.222" endtime="20201110 08:37:50.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.225" endtime="20201110 08:37:50.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.224" endtime="20201110 08:37:50.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.220" endtime="20201110 08:37:50.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.835" endtime="20201110 08:37:50.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.834" endtime="20201110 08:37:50.246"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.255" endtime="20201110 08:37:50.290"></status>
</kw>
<msg timestamp="20201110 08:37:50.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.253" endtime="20201110 08:37:50.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.291" endtime="20201110 08:37:50.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.294" endtime="20201110 08:37:50.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.251" endtime="20201110 08:37:50.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.249" endtime="20201110 08:37:50.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.303" endtime="20201110 08:37:50.590"></status>
</kw>
<msg timestamp="20201110 08:37:50.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021224875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021592639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.301" endtime="20201110 08:37:50.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021224875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021592639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.594" endtime="20201110 08:37:50.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.602" endtime="20201110 08:37:50.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.299" endtime="20201110 08:37:50.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.297" endtime="20201110 08:37:50.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.608" level="INFO">${RESULT} = [{'time': 0.021592639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003677639999999996, 'source_diff': 0.0003677639999999996}, {'time': 0.021957764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:50.605" endtime="20201110 08:37:50.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:50.622" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:50.609" endtime="20201110 08:37:50.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.626" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:37:50.625" endtime="20201110 08:37:50.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.629" level="INFO">VALUE: [0.0003677639999999996, 0.000359764000000002, 0.00035777799999999957, 0.0003575280000000028, 0.00035559699999999916, 0.00035473600000000133, 0.0003586120000000012, 0.0003589030000000007, 0.00035729099999999916, 0.0003608750000000001, 0.00035797199999999807, 0.0003548890000000006, 0.0003559999999999987, 0.00036074999999999996, 0.0003549439999999994, 0.000357764, 0.0003552079999999992, 0.00035893000000000036, 0.0003560270000000018, 0.0003570419999999984, 0.00035655600000000093, 0.000360959000000001, 0.0003583480000000014, 0.00035995799999999703, 0.00035784699999999794, 0.0003598749999999991, 0.0003606519999999995, 0.0003607359999999969, 0.0003608470000000044, 0.0003603199999999973, 0.0003601940000000012, 0.0003590269999999979, 0.0003599020000000022, 0.0003589449999999994, 0.00035759700000000116, 0.0003565140000000022, 0.00035540300000000413, 0.00035500000000000115, 0.0003608470000000044, 0.00035926399999999803, 0.00035720799999999775, 0.00036034799999999645, 0.0003596250000000023, 0.00036126400000000003, 0.0003568470000000004, 0.00035931899999999684, 0.00035672200000000376, 0.000358667, 0.00035683300000000084, 0.0003548479999999979]</msg>
<status status="PASS" starttime="20201110 08:37:50.627" endtime="20201110 08:37:50.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.623" endtime="20201110 08:37:50.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.632" endtime="20201110 08:37:50.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.636" endtime="20201110 08:37:50.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.634" endtime="20201110 08:37:50.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.631" endtime="20201110 08:37:50.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.247" endtime="20201110 08:37:50.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.247" endtime="20201110 08:37:50.656"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.665" endtime="20201110 08:37:50.701"></status>
</kw>
<msg timestamp="20201110 08:37:50.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.664" endtime="20201110 08:37:50.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.703" endtime="20201110 08:37:50.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.705" endtime="20201110 08:37:50.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.661" endtime="20201110 08:37:50.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.659" endtime="20201110 08:37:50.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.714" endtime="20201110 08:37:51.001"></status>
</kw>
<msg timestamp="20201110 08:37:51.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023003222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023359139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.712" endtime="20201110 08:37:51.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023003222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023359139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.005" endtime="20201110 08:37:51.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.013" endtime="20201110 08:37:51.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.710" endtime="20201110 08:37:51.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.708" endtime="20201110 08:37:51.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.019" level="INFO">${RESULT} = [{'time': 0.023359139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035591700000000073, 'source_diff': 0.00035591700000000073}, {'time': 0.023724597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:51.016" endtime="20201110 08:37:51.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:51.033" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:51.020" endtime="20201110 08:37:51.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.037" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:37:51.036" endtime="20201110 08:37:51.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.040" level="INFO">VALUE: [0.00035591700000000073, 0.0003611939999999987, 0.00035643000000000133, 0.0003575409999999994, 0.00035701399999999925, 0.0003558060000000002, 0.000356666999999998, 0.0003600830000000006, 0.0003610139999999998, 0.00035519399999999965, 0.00035644500000000037, 0.00035574999999999843, 0.00035495899999999844, 0.0003597089999999997, 0.00035830499999999973, 0.00036038899999999915, 0.00036052799999999885, 0.0003606809999999981, 0.00035898599999999864, 0.00035691699999999826, 0.00036138900000000015, 0.0003599160000000018, 0.00035879199999999667, 0.0003586390000000009, 0.00036091700000000226, 0.00035673699999999586, 0.00035966600000000154, 0.0003603329999999974, 0.00035876399999999753, 0.0003588890000000011, 0.0003610269999999999, 0.0003610139999999998, 0.00035593100000000377, 0.000361458000000002, 0.0003569869999999961, 0.0003606390000000029, 0.0003604999999999997, 0.00036047200000000057, 0.0003555140000000012, 0.00036026399999999903, 0.00035970800000000025, 0.0003571249999999998, 0.00035765199999999997, 0.0003599580000000005, 0.00036076399999999953, 0.0003595280000000048, 0.00036023699999999936, 0.00035886099999999505, 0.00036104200000000586, 0.0003569579999999975]</msg>
<status status="PASS" starttime="20201110 08:37:51.039" endtime="20201110 08:37:51.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.034" endtime="20201110 08:37:51.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.043" endtime="20201110 08:37:51.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.047" endtime="20201110 08:37:51.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.045" endtime="20201110 08:37:51.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.042" endtime="20201110 08:37:51.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.657" endtime="20201110 08:37:51.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.657" endtime="20201110 08:37:51.068"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.076" endtime="20201110 08:37:51.113"></status>
</kw>
<msg timestamp="20201110 08:37:51.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.075" endtime="20201110 08:37:51.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.115" endtime="20201110 08:37:51.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.117" endtime="20201110 08:37:51.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.072" endtime="20201110 08:37:51.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.070" endtime="20201110 08:37:51.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.126" endtime="20201110 08:37:51.414"></status>
</kw>
<msg timestamp="20201110 08:37:51.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023782542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024155431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.124" endtime="20201110 08:37:51.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023782542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024155431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.418" endtime="20201110 08:37:51.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.426" endtime="20201110 08:37:51.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.122" endtime="20201110 08:37:51.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.120" endtime="20201110 08:37:51.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.432" level="INFO">${RESULT} = [{'time': 0.024155431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037288900000000125, 'source_diff': 0.00037288900000000125}, {'time': 0.024520792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:51.429" endtime="20201110 08:37:51.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:51.445" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:51.433" endtime="20201110 08:37:51.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.450" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:37:51.449" endtime="20201110 08:37:51.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.452" level="INFO">VALUE: [0.00037288900000000125, 0.00036043099999999786, 0.00036043100000000133, 0.0003598200000000003, 0.0003578050000000027, 0.000355860999999999, 0.00036147200000000157, 0.000359652999999998, 0.0003585829999999991, 0.0003587219999999988, 0.00035974999999999896, 0.0003593749999999986, 0.00035834699999999844, 0.0003610269999999999, 0.00035948599999999914, 0.000356861, 0.0003585000000000012, 0.0003597909999999982, 0.000355181000000003, 0.0003565700000000005, 0.0003614729999999976, 0.0003552080000000027, 0.00035705500000000195, 0.0003568470000000004, 0.0003550280000000003, 0.00035718000000000555, 0.00036037500000000305, 0.00036029199999999817, 0.0003603749999999961, 0.00035566599999999754, 0.00035593099999999683, 0.0003592089999999992, 0.0003558190000000003, 0.00035893099999999983, 0.0003585140000000042, 0.00035711100000000023, 0.00036006999999999706, 0.00036087500000000355, 0.00035977700000000556, 0.000358346999999995, 0.0003583340000000018, 0.0003588190000000033, 0.00035736199999999996, 0.0003578890000000001, 0.00035650000000000265, 0.00035744399999999843, 0.0003565410000000019, 0.0003595549999999975, 0.0003579579999999985, 0.0003598470000000034]</msg>
<status status="PASS" starttime="20201110 08:37:51.451" endtime="20201110 08:37:51.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.446" endtime="20201110 08:37:51.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.456" endtime="20201110 08:37:51.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.459" endtime="20201110 08:37:51.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.458" endtime="20201110 08:37:51.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.454" endtime="20201110 08:37:51.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.069" endtime="20201110 08:37:51.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.068" endtime="20201110 08:37:51.480"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.489" endtime="20201110 08:37:51.526"></status>
</kw>
<msg timestamp="20201110 08:37:51.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.487" endtime="20201110 08:37:51.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.527" endtime="20201110 08:37:51.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.530" endtime="20201110 08:37:51.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.485" endtime="20201110 08:37:51.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.483" endtime="20201110 08:37:51.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.539" endtime="20201110 08:37:51.827"></status>
</kw>
<msg timestamp="20201110 08:37:51.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023187764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023556681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.537" endtime="20201110 08:37:51.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023187764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023556681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.832" endtime="20201110 08:37:51.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.842" endtime="20201110 08:37:51.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.535" endtime="20201110 08:37:51.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.533" endtime="20201110 08:37:51.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.852" level="INFO">${RESULT} = [{'time': 0.023556681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036891699999999986, 'source_diff': 0.00036891699999999986}, {'time': 0.023921847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:51.847" endtime="20201110 08:37:51.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:51.867" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:51.853" endtime="20201110 08:37:51.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.871" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:37:51.870" endtime="20201110 08:37:51.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.874" level="INFO">VALUE: [0.00036891699999999986, 0.00035879100000000066, 0.000359360999999999, 0.0003554860000000021, 0.0003590000000000017, 0.00036074999999999996, 0.00035808400000000157, 0.00035541600000000076, 0.00036111100000000076, 0.00035501399999999725, 0.00036109800000000067, 0.00035851400000000075, 0.00035608399999999957, 0.00035873700000000133, 0.00036027800000000207, 0.00036066699999999854, 0.00036017999999999814, 0.000355569, 0.00035787500000000055, 0.00035587499999999855, 0.00036026399999999903, 0.0003564859999999996, 0.00035925000000000193, 0.00035688900000000606, 0.00035866600000000054, 0.0003562920000000011, 0.0003606529999999955, 0.0003582769999999971, 0.00035477800000000004, 0.0003610000000000002, 0.0003608889999999962, 0.000360458000000001, 0.0003586810000000065, 0.0003608749999999966, 0.000359667000000001, 0.000354860999999998, 0.0003566939999999977, 0.00035850000000000465, 0.00035683300000000084, 0.0003584020000000007, 0.00036082000000000475, 0.0003563339999999998, 0.00035904200000000386, 0.00035661099999999973, 0.00035569499999999615, 0.00035852799999999685, 0.0003554860000000021, 0.00036083300000000484, 0.0003560690000000005, 0.0003558050000000007]</msg>
<status status="PASS" starttime="20201110 08:37:51.872" endtime="20201110 08:37:51.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.868" endtime="20201110 08:37:51.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.877" endtime="20201110 08:37:51.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.881" endtime="20201110 08:37:51.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.879" endtime="20201110 08:37:51.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.876" endtime="20201110 08:37:51.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.481" endtime="20201110 08:37:51.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.481" endtime="20201110 08:37:51.902"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.910" endtime="20201110 08:37:51.952"></status>
</kw>
<msg timestamp="20201110 08:37:51.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.909" endtime="20201110 08:37:51.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.954" endtime="20201110 08:37:51.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.956" endtime="20201110 08:37:51.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.906" endtime="20201110 08:37:51.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.904" endtime="20201110 08:37:51.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.966" endtime="20201110 08:37:52.253"></status>
</kw>
<msg timestamp="20201110 08:37:52.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023944264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024326431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.963" endtime="20201110 08:37:52.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023944264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024326431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.257" endtime="20201110 08:37:52.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.265" endtime="20201110 08:37:52.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.961" endtime="20201110 08:37:52.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.959" endtime="20201110 08:37:52.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.272" level="INFO">${RESULT} = [{'time': 0.024326431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038216699999999923, 'source_diff': 0.00038216699999999923}, {'time': 0.0246915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:52.269" endtime="20201110 08:37:52.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:52.285" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:52.273" endtime="20201110 08:37:52.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.290" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:37:52.289" endtime="20201110 08:37:52.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.292" level="INFO">VALUE: [0.00038216699999999923, 0.0003582640000000005, 0.00036106999999999806, 0.00036007000000000053, 0.000360346999999997, 0.00035477800000000004, 0.00036097200000000107, 0.0003548189999999993, 0.0003604030000000022, 0.00035780499999999923, 0.0003604169999999983, 0.00035519399999999965, 0.00035476400000000047, 0.00035809700000000166, 0.0003578480000000009, 0.00035543000000000033, 0.00036038899999999915, 0.00035934699999999944, 0.0003580969999999982, 0.0003594719999999961, 0.00035494500000000234, 0.0003591390000000014, 0.000356457999999997, 0.00035520799999999575, 0.00036125000000000046, 0.00035493100000000277, 0.00036087500000000355, 0.00036017999999999467, 0.000357555999999995, 0.00035591699999999726, 0.00035848599999999814, 0.0003572920000000021, 0.00035609699999999966, 0.0003584999999999977, 0.0003572229999999968, 0.0003591800000000006, 0.0003553469999999989, 0.00036015300000000194, 0.0003571530000000059, 0.0003598480000000029, 0.00035511099999999823, 0.0003551950000000026, 0.0003610139999999998, 0.00035526400000000097, 0.000356861, 0.00035698599999999664, 0.0003551950000000026, 0.0003567219999999968, 0.00035704200000000186, 0.00035543099999999633]</msg>
<status status="PASS" starttime="20201110 08:37:52.291" endtime="20201110 08:37:52.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.286" endtime="20201110 08:37:52.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.296" endtime="20201110 08:37:52.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.299" endtime="20201110 08:37:52.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.297" endtime="20201110 08:37:52.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.294" endtime="20201110 08:37:52.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.902" endtime="20201110 08:37:52.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.902" endtime="20201110 08:37:52.320"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.329" endtime="20201110 08:37:52.364"></status>
</kw>
<msg timestamp="20201110 08:37:52.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.327" endtime="20201110 08:37:52.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.367" endtime="20201110 08:37:52.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.369" endtime="20201110 08:37:52.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.324" endtime="20201110 08:37:52.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.322" endtime="20201110 08:37:52.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.378" endtime="20201110 08:37:52.665"></status>
</kw>
<msg timestamp="20201110 08:37:52.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:52.377" endtime="20201110 08:37:52.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:52.669" endtime="20201110 08:37:52.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.677" endtime="20201110 08:37:52.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.374" endtime="20201110 08:37:52.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.372" endtime="20201110 08:37:52.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.684" level="INFO">${RESULT} = [{'time': 0.0229075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038384699999999966, 'source_diff': 0.00038384699999999966}, {'time': 0.023272806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:52.680" endtime="20201110 08:37:52.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:52.697" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:52.685" endtime="20201110 08:37:52.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.702" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:37:52.701" endtime="20201110 08:37:52.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.704" level="INFO">VALUE: [0.00038384699999999966, 0.00035518099999999955, 0.0003554860000000021, 0.0003608610000000005, 0.0003573480000000004, 0.00035666599999999854, 0.0003582089999999982, 0.0003588189999999998, 0.000358070000000002, 0.000359360999999999, 0.00035679099999999866, 0.0003579029999999997, 0.0003568889999999991, 0.00036034700000000044, 0.00036083400000000085, 0.000356763999999999, 0.00036040199999999925, 0.00035844399999999943, 0.0003575419999999989, 0.0003562639999999985, 0.00035847200000000204, 0.0003568479999999999, 0.0003563890000000021, 0.0003586389999999974, 0.00035998599999999964, 0.0003569730000000035, 0.00036125000000000046, 0.00035850000000000465, 0.0003606949999999942, 0.0003560280000000013, 0.0003562080000000037, 0.00035948599999999914, 0.0003607220000000008, 0.00035748599999999714, 0.00035522200000000226, 0.0003563609999999995, 0.000356473000000003, 0.0003600969999999967, 0.0003610559999999985, 0.00035632000000000025, 0.0003582219999999983, 0.0003549869999999941, 0.00036020800000000075, 0.00035543099999999633, 0.00036086099999999705, 0.00035833300000000234, 0.00035841699999999976, 0.00036145799999999506, 0.00036009700000000366, 0.0003564019999999987]</msg>
<status status="PASS" starttime="20201110 08:37:52.703" endtime="20201110 08:37:52.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.698" endtime="20201110 08:37:52.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.708" endtime="20201110 08:37:52.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.711" endtime="20201110 08:37:52.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.710" endtime="20201110 08:37:52.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.706" endtime="20201110 08:37:52.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.321" endtime="20201110 08:37:52.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.320" endtime="20201110 08:37:52.732"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.741" endtime="20201110 08:37:52.776"></status>
</kw>
<msg timestamp="20201110 08:37:52.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.740" endtime="20201110 08:37:52.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.777" endtime="20201110 08:37:52.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.780" endtime="20201110 08:37:52.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.737" endtime="20201110 08:37:52.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.735" endtime="20201110 08:37:52.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.789" endtime="20201110 08:37:53.076"></status>
</kw>
<msg timestamp="20201110 08:37:53.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022043417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.787" endtime="20201110 08:37:53.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022043417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.080" endtime="20201110 08:37:53.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.088" endtime="20201110 08:37:53.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.785" endtime="20201110 08:37:53.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.783" endtime="20201110 08:37:53.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.094" level="INFO">${RESULT} = [{'time': 0.022411861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003684440000000025, 'source_diff': 0.0003684440000000025}, {'time': 0.022777069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:53.091" endtime="20201110 08:37:53.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:53.108" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:53.095" endtime="20201110 08:37:53.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.112" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:37:53.111" endtime="20201110 08:37:53.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.115" level="INFO">VALUE: [0.0003684440000000025, 0.00035695800000000097, 0.0003548330000000023, 0.00036130599999999874, 0.0003571939999999982, 0.0003593199999999998, 0.0003589160000000008, 0.00035602699999999834, 0.0003583059999999992, 0.00035586100000000245, 0.00036091700000000226, 0.000355875000000002, 0.00035668100000000105, 0.0003582090000000017, 0.00035654200000000136, 0.00035859799999999817, 0.00035894399999999993, 0.0003599450000000004, 0.0003553059999999997, 0.000359151999999998, 0.0003598609999999995, 0.0003554020000000012, 0.0003547219999999983, 0.0003566799999999981, 0.00035941700000000076, 0.0003569159999999988, 0.0003601380000000029, 0.0003567219999999968, 0.000354972000000002, 0.00035577800000000104, 0.0003595280000000048, 0.00035880499999999677, 0.0003564589999999965, 0.0003561530000000049, 0.00035977800000000504, 0.00035476299999999406, 0.00036052799999999885, 0.00035626400000000197, 0.0003599160000000018, 0.00035974999999999896, 0.0003579449999999984, 0.0003565280000000018, 0.0003603749999999961, 0.0003591810000000001, 0.00035604200000000086, 0.0003583340000000018, 0.0003549860000000016, 0.0003577500000000039, 0.0003602220000000003, 0.0003573889999999996]</msg>
<status status="PASS" starttime="20201110 08:37:53.113" endtime="20201110 08:37:53.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.109" endtime="20201110 08:37:53.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.123" endtime="20201110 08:37:53.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.126" endtime="20201110 08:37:53.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.125" endtime="20201110 08:37:53.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.121" endtime="20201110 08:37:53.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.733" endtime="20201110 08:37:53.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.733" endtime="20201110 08:37:53.151"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.169" endtime="20201110 08:37:53.212"></status>
</kw>
<msg timestamp="20201110 08:37:53.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.166" endtime="20201110 08:37:53.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.215" endtime="20201110 08:37:53.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.220" endtime="20201110 08:37:53.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.160" endtime="20201110 08:37:53.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.156" endtime="20201110 08:37:53.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.239" endtime="20201110 08:37:53.528"></status>
</kw>
<msg timestamp="20201110 08:37:53.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039135667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039499097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.236" endtime="20201110 08:37:53.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039135667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039499097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.532" endtime="20201110 08:37:53.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.540" endtime="20201110 08:37:53.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.231" endtime="20201110 08:37:53.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.227" endtime="20201110 08:37:53.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.546" level="INFO">${RESULT} = [{'time': 0.039499097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003634299999999979, 'source_diff': 0.0003634299999999979}, {'time': 0.039864375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:53.543" endtime="20201110 08:37:53.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:53.560" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:53.547" endtime="20201110 08:37:53.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.564" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:37:53.563" endtime="20201110 08:37:53.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.567" level="INFO">VALUE: [0.0003634299999999979, 0.0003565140000000022, 0.0003558469999999994, 0.00035869499999999915, 0.00035774999999999696, 0.00035969500000000015, 0.00035592999999999736, 0.00035741699999999876, 0.00035967999999999417, 0.00035470799999999525, 0.0003603890000000026, 0.0003577219999999978, 0.00035500000000000115, 0.0003586800000000001, 0.000358457999999999, 0.00035607, 0.00035990299999999475, 0.0003558190000000003, 0.0003565830000000006, 0.00036024999999999946, 0.00035565299999999744, 0.00036047200000000057, 0.00035765199999999997, 0.00035758400000000107, 0.00035997200000000007, 0.0003587219999999988, 0.0003562500000000024, 0.0003596109999999958, 0.0003609450000000014, 0.00036074999999999996, 0.00036008399999999663, 0.00035998599999999964, 0.000357666999999999, 0.0003610559999999985, 0.0003577219999999978, 0.0003566249999999993, 0.0003575140000000032, 0.0003568479999999999, 0.00035520900000000216, 0.0003586800000000001, 0.00035537499999999805, 0.00036097199999999413, 0.00035948599999999914, 0.0003589999999999982, 0.0003570139999999958, 0.0003571799999999986, 0.0003567219999999968, 0.0003597359999999994, 0.00035494400000000287, 0.0003586800000000001]</msg>
<status status="PASS" starttime="20201110 08:37:53.565" endtime="20201110 08:37:53.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.561" endtime="20201110 08:37:53.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.570" endtime="20201110 08:37:53.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.573" endtime="20201110 08:37:53.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.572" endtime="20201110 08:37:53.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.569" endtime="20201110 08:37:53.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.153" endtime="20201110 08:37:53.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.152" endtime="20201110 08:37:53.594"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.603" endtime="20201110 08:37:53.640"></status>
</kw>
<msg timestamp="20201110 08:37:53.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.601" endtime="20201110 08:37:53.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.642" endtime="20201110 08:37:53.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.644" endtime="20201110 08:37:53.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.599" endtime="20201110 08:37:53.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.597" endtime="20201110 08:37:53.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.653" endtime="20201110 08:37:53.939"></status>
</kw>
<msg timestamp="20201110 08:37:53.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024184472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.652" endtime="20201110 08:37:53.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024184472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.943" endtime="20201110 08:37:53.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.954" endtime="20201110 08:37:53.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.649" endtime="20201110 08:37:53.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.647" endtime="20201110 08:37:53.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.967" level="INFO">${RESULT} = [{'time': 0.024547306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036283400000000285, 'source_diff': 0.00036283400000000285}, {'time': 0.024912389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:53.961" endtime="20201110 08:37:53.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:53.998" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:53.969" endtime="20201110 08:37:53.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.007" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.005" endtime="20201110 08:37:54.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.012" level="INFO">VALUE: [0.00036283400000000285, 0.00035527800000000054, 0.0003570279999999988, 0.000357569000000002, 0.0003611389999999999, 0.0003575700000000015, 0.0003594869999999986, 0.00036034700000000044, 0.0003552920000000001, 0.0003588609999999985, 0.0003595280000000013, 0.00035702699999999934, 0.0003609030000000027, 0.0003593890000000016, 0.00035891700000000026, 0.00035550000000000165, 0.00035751399999999975, 0.00035848599999999814, 0.00036007000000000053, 0.00035491699999999626, 0.0003555139999999943, 0.0003571389999999994, 0.00035876399999999753, 0.0003547500000000009, 0.0003606250000000033, 0.00035516700000000345, 0.0003588199999999958, 0.00035948599999999914, 0.00035986200000000246, 0.000355666999999997, 0.00035766599999999954, 0.0003590139999999978, 0.0003605549999999985, 0.00035544400000000337, 0.00036125000000000046, 0.00035659700000000016, 0.0003596940000000007, 0.0003583190000000028, 0.00035695800000000444, 0.0003588469999999955, 0.0003585139999999973, 0.00035620799999999675, 0.0003547370000000008, 0.0003561389999999984, 0.00035611100000000617, 0.00035527700000000106, 0.00036008399999999663, 0.0003554860000000021, 0.0003561389999999984, 0.0003597219999999998]</msg>
<status status="PASS" starttime="20201110 08:37:54.009" endtime="20201110 08:37:54.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.000" endtime="20201110 08:37:54.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.019" endtime="20201110 08:37:54.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.026" endtime="20201110 08:37:54.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.023" endtime="20201110 08:37:54.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.016" endtime="20201110 08:37:54.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.595" endtime="20201110 08:37:54.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.595" endtime="20201110 08:37:54.051"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.062" endtime="20201110 08:37:54.097"></status>
</kw>
<msg timestamp="20201110 08:37:54.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.060" endtime="20201110 08:37:54.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.099" endtime="20201110 08:37:54.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.101" endtime="20201110 08:37:54.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.057" endtime="20201110 08:37:54.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.055" endtime="20201110 08:37:54.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.110" endtime="20201110 08:37:54.396"></status>
</kw>
<msg timestamp="20201110 08:37:54.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028018069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028379542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.108" endtime="20201110 08:37:54.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028018069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028379542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.400" endtime="20201110 08:37:54.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.408" endtime="20201110 08:37:54.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.106" endtime="20201110 08:37:54.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.104" endtime="20201110 08:37:54.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.414" level="INFO">${RESULT} = [{'time': 0.028379542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036147300000000104, 'source_diff': 0.00036147300000000104}, {'time': 0.028744722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:54.411" endtime="20201110 08:37:54.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:54.428" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:54.415" endtime="20201110 08:37:54.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.432" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.431" endtime="20201110 08:37:54.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.434" level="INFO">VALUE: [0.00036147300000000104, 0.0003547500000000009, 0.00035924999999999846, 0.00035723600000000036, 0.0003559859999999991, 0.00035477800000000004, 0.0003562639999999985, 0.0003572769999999996, 0.00035993099999999736, 0.0003607360000000004, 0.000356958999999997, 0.0003595549999999975, 0.0003597359999999994, 0.00035555600000000687, 0.0003552500000000014, 0.00035602799999999435, 0.000358861000000002, 0.00035924999999999846, 0.0003565270000000023, 0.0003566249999999993, 0.00035776399999999653, 0.0003569579999999975, 0.0003611810000000021, 0.0003565830000000006, 0.00035841699999999976, 0.00035954099999999795, 0.00035772300000000423, 0.00035847299999999804, 0.00035561099999999873, 0.00035965300000000144, 0.0003580139999999968, 0.0003565139999999953, 0.0003584030000000002, 0.0003583889999999937, 0.0003563609999999995, 0.00035577800000000104, 0.00035847199999999857, 0.0003577920000000026, 0.0003574159999999993, 0.000356473000000003, 0.0003587219999999988, 0.00035577800000000104, 0.00036052799999999885, 0.0003585969999999952, 0.0003570140000000027, 0.0003605139999999993, 0.00035615299999999794, 0.00035909800000000214, 0.0003574449999999979, 0.00035830499999999627]</msg>
<status status="PASS" starttime="20201110 08:37:54.433" endtime="20201110 08:37:54.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.429" endtime="20201110 08:37:54.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.438" endtime="20201110 08:37:54.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.441" endtime="20201110 08:37:54.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.440" endtime="20201110 08:37:54.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.436" endtime="20201110 08:37:54.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.053" endtime="20201110 08:37:54.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.051" endtime="20201110 08:37:54.462"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.471" endtime="20201110 08:37:54.507"></status>
</kw>
<msg timestamp="20201110 08:37:54.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.469" endtime="20201110 08:37:54.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.508" endtime="20201110 08:37:54.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.511" endtime="20201110 08:37:54.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.467" endtime="20201110 08:37:54.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.465" endtime="20201110 08:37:54.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.519" endtime="20201110 08:37:54.815"></status>
</kw>
<msg timestamp="20201110 08:37:54.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.518" endtime="20201110 08:37:54.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.824" endtime="20201110 08:37:54.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.841" endtime="20201110 08:37:54.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.515" endtime="20201110 08:37:54.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.514" endtime="20201110 08:37:54.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.855" level="INFO">${RESULT} = [{'time': 0.020661861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036462500000000037, 'source_diff': 0.00036462500000000037}, {'time': 0.021027042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:54.848" endtime="20201110 08:37:54.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:54.876" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:54.857" endtime="20201110 08:37:54.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.881" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.880" endtime="20201110 08:37:54.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.883" level="INFO">VALUE: [0.00036462500000000037, 0.0003588199999999993, 0.00035859700000000216, 0.0003563750000000025, 0.00035605600000000043, 0.00035476400000000047, 0.0003585839999999986, 0.00035641699999999776, 0.0003569440000000014, 0.00035595799999999997, 0.0003575279999999993, 0.0003597229999999993, 0.0003588199999999993, 0.00035477800000000004, 0.0003576950000000016, 0.0003554859999999986, 0.0003591250000000018, 0.00035837500000000105, 0.0003581950000000021, 0.000359652999999998, 0.00035751399999999975, 0.0003574310000000018, 0.0003608329999999979, 0.0003602769999999991, 0.0003566379999999994, 0.0003594589999999995, 0.00036093100000000183, 0.00035944400000000043, 0.00035906999999999953, 0.0003595420000000009, 0.0003601800000000016, 0.0003553330000000063, 0.0003584999999999977, 0.0003571249999999998, 0.00036015300000000194, 0.0003573889999999996, 0.0003575830000000016, 0.0003560140000000017, 0.0003548479999999979, 0.0003580270000000038, 0.0003556520000000049, 0.00035581999999999975, 0.0003576250000000003, 0.000356666999999998, 0.0003560280000000013, 0.0003559159999999978, 0.0003584999999999977, 0.00035533299999999934, 0.00035859700000000216, 0.00035473600000000133]</msg>
<status status="PASS" starttime="20201110 08:37:54.882" endtime="20201110 08:37:54.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.877" endtime="20201110 08:37:54.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.887" endtime="20201110 08:37:54.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.890" endtime="20201110 08:37:54.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.889" endtime="20201110 08:37:54.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.885" endtime="20201110 08:37:54.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.463" endtime="20201110 08:37:54.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.463" endtime="20201110 08:37:54.911"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.920" endtime="20201110 08:37:54.957"></status>
</kw>
<msg timestamp="20201110 08:37:54.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.918" endtime="20201110 08:37:54.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.958" endtime="20201110 08:37:54.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.960" endtime="20201110 08:37:54.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.915" endtime="20201110 08:37:54.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.913" endtime="20201110 08:37:54.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.969" endtime="20201110 08:37:55.258"></status>
</kw>
<msg timestamp="20201110 08:37:55.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023888333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024253819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.968" endtime="20201110 08:37:55.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023888333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024253819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.262" endtime="20201110 08:37:55.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.270" endtime="20201110 08:37:55.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.965" endtime="20201110 08:37:55.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.964" endtime="20201110 08:37:55.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:55.276" level="INFO">${RESULT} = [{'time': 0.024253819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003654859999999982, 'source_diff': 0.0003654859999999982}, {'time': 0.02461925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:55.273" endtime="20201110 08:37:55.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:55.290" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:55.277" endtime="20201110 08:37:55.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.294" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:37:55.293" endtime="20201110 08:37:55.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.296" level="INFO">VALUE: [0.0003654859999999982, 0.0003549859999999981, 0.000355875000000002, 0.00035727799999999907, 0.00035758400000000107, 0.00035997200000000007, 0.00035561099999999873, 0.00035715199999999947, 0.00035859700000000216, 0.00035927800000000107, 0.0003571530000000024, 0.00035965200000000197, 0.00035957000000000003, 0.00035747199999999757, 0.00035768100000000205, 0.0003556249999999983, 0.00035761100000000073, 0.00035636100000000295, 0.0003561530000000014, 0.00035563900000000134, 0.000358457999999999, 0.0003561939999999972, 0.00035941700000000076, 0.00035943100000000033, 0.00035626400000000197, 0.0003592370000000053, 0.00035580499999999377, 0.00035694500000000434, 0.0003593610000000025, 0.0003571389999999994, 0.00036069500000000115, 0.00036076399999999953, 0.0003598890000000021, 0.0003593060000000037, 0.00035826399999999703, 0.0003614169999999958, 0.00035715199999999947, 0.0003587219999999988, 0.0003560140000000017, 0.0003550280000000003, 0.0003573470000000009, 0.0003551809999999961, 0.00035902799999999735, 0.00035533299999999934, 0.0003566249999999993, 0.00035833300000000234, 0.000355375000000005, 0.0003592219999999993, 0.00036048600000000014, 0.00035926400000000497]</msg>
<status status="PASS" starttime="20201110 08:37:55.295" endtime="20201110 08:37:55.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.290" endtime="20201110 08:37:55.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.300" endtime="20201110 08:37:55.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.303" endtime="20201110 08:37:55.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.302" endtime="20201110 08:37:55.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.298" endtime="20201110 08:37:55.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.912" endtime="20201110 08:37:55.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.911" endtime="20201110 08:37:55.324"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.333" endtime="20201110 08:37:55.368"></status>
</kw>
<msg timestamp="20201110 08:37:55.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.331" endtime="20201110 08:37:55.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.370" endtime="20201110 08:37:55.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.372" endtime="20201110 08:37:55.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.329" endtime="20201110 08:37:55.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.327" endtime="20201110 08:37:55.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.381" endtime="20201110 08:37:55.667"></status>
</kw>
<msg timestamp="20201110 08:37:55.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022936889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.380" endtime="20201110 08:37:55.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022936889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.671" endtime="20201110 08:37:55.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.679" endtime="20201110 08:37:55.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.377" endtime="20201110 08:37:55.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.375" endtime="20201110 08:37:55.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:55.685" level="INFO">${RESULT} = [{'time': 0.022936889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037815299999999913, 'source_diff': 0.00037815299999999913}, {'time': 0.023302069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:55.682" endtime="20201110 08:37:55.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:55.698" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:55.686" endtime="20201110 08:37:55.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.703" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:37:55.702" endtime="20201110 08:37:55.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.705" level="INFO">VALUE: [0.00037815299999999913, 0.000357861000000001, 0.0003609870000000001, 0.00035604200000000086, 0.0003561800000000011, 0.0003556949999999996, 0.0003551800000000001, 0.0003563050000000012, 0.0003548189999999993, 0.0003606389999999994, 0.0003547500000000009, 0.0003600830000000006, 0.0003577770000000001, 0.0003566389999999989, 0.0003595129999999988, 0.0003558060000000002, 0.00035691700000000173, 0.0003563050000000012, 0.0003547080000000022, 0.00035505599999999943, 0.00035576400000000147, 0.0003556530000000009, 0.0003604029999999987, 0.000354972000000002, 0.00035924999999999846, 0.0003595419999999974, 0.0003609309999999949, 0.0003606800000000021, 0.0003591940000000002, 0.00035519499999999565, 0.0003605969999999972, 0.0003591810000000001, 0.00035732000000000125, 0.00036111199999999677, 0.0003599869999999991, 0.0003567359999999964, 0.00035615199999999847, 0.00035787500000000055, 0.0003605139999999993, 0.0003605139999999993, 0.00035929199999999717, 0.00036104099999999945, 0.0003583749999999941, 0.000357972000000005, 0.00036093100000000183, 0.0003611800000000026, 0.0003600280000000053, 0.0003551940000000031, 0.00035488900000000406, 0.00035698599999999664]</msg>
<status status="PASS" starttime="20201110 08:37:55.704" endtime="20201110 08:37:55.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.699" endtime="20201110 08:37:55.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.709" endtime="20201110 08:37:55.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.712" endtime="20201110 08:37:55.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.711" endtime="20201110 08:37:55.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.707" endtime="20201110 08:37:55.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.325" endtime="20201110 08:37:55.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.325" endtime="20201110 08:37:55.733"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.742" endtime="20201110 08:37:55.776"></status>
</kw>
<msg timestamp="20201110 08:37:55.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.740" endtime="20201110 08:37:55.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.778" endtime="20201110 08:37:55.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.780" endtime="20201110 08:37:55.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.737" endtime="20201110 08:37:55.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.735" endtime="20201110 08:37:55.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.789" endtime="20201110 08:37:56.076"></status>
</kw>
<msg timestamp="20201110 08:37:56.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021017639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.787" endtime="20201110 08:37:56.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021017639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.080" endtime="20201110 08:37:56.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.088" endtime="20201110 08:37:56.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.785" endtime="20201110 08:37:56.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.783" endtime="20201110 08:37:56.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.095" level="INFO">${RESULT} = [{'time': 0.021017639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003634170000000013, 'source_diff': 0.0003634170000000013}, {'time': 0.021382778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:56.091" endtime="20201110 08:37:56.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.108" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:56.096" endtime="20201110 08:37:56.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.113" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.112" endtime="20201110 08:37:56.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.115" level="INFO">VALUE: [0.0003634170000000013, 0.0003579310000000023, 0.00036111100000000076, 0.00035993100000000083, 0.0003614169999999993, 0.00035993000000000136, 0.00035948599999999914, 0.0003564999999999992, 0.0003581799999999996, 0.0003597219999999998, 0.00035797299999999754, 0.00035911099999999876, 0.000354860999999998, 0.00035600000000000215, 0.00035641699999999776, 0.00035959799999999917, 0.00035934699999999944, 0.000356875000000003, 0.00035916600000000104, 0.0003591529999999975, 0.00035477800000000004, 0.0003588749999999981, 0.00035486100000000145, 0.00036008299999999716, 0.0003568059999999977, 0.00036013799999999943, 0.00036034700000000044, 0.0003583480000000014, 0.0003547500000000009, 0.00035770799999999825, 0.00035748599999999714, 0.0003569159999999988, 0.00035708400000000057, 0.00035577700000000156, 0.00035877700000000456, 0.0003604450000000009, 0.0003597359999999994, 0.00035729100000000263, 0.0003573050000000022, 0.0003561939999999972, 0.0003596940000000007, 0.00036132000000000525, 0.0003557500000000019, 0.0003559730000000025, 0.00036091700000000226, 0.0003553339999999988, 0.0003574589999999975, 0.00036019500000000065, 0.00035672200000000376, 0.0003571389999999994]</msg>
<status status="PASS" starttime="20201110 08:37:56.114" endtime="20201110 08:37:56.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.109" endtime="20201110 08:37:56.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.119" endtime="20201110 08:37:56.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.122" endtime="20201110 08:37:56.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.121" endtime="20201110 08:37:56.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.117" endtime="20201110 08:37:56.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.734" endtime="20201110 08:37:56.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.733" endtime="20201110 08:37:56.143"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.152" endtime="20201110 08:37:56.188"></status>
</kw>
<msg timestamp="20201110 08:37:56.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.150" endtime="20201110 08:37:56.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.189" endtime="20201110 08:37:56.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.192" endtime="20201110 08:37:56.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.148" endtime="20201110 08:37:56.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.145" endtime="20201110 08:37:56.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.201" endtime="20201110 08:37:56.487"></status>
</kw>
<msg timestamp="20201110 08:37:56.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023035528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.199" endtime="20201110 08:37:56.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023035528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.491" endtime="20201110 08:37:56.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.499" endtime="20201110 08:37:56.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.197" endtime="20201110 08:37:56.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.195" endtime="20201110 08:37:56.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.506" level="INFO">${RESULT} = [{'time': 0.023035528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003792219999999985, 'source_diff': 0.0003792219999999985}, {'time': 0.02340075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:56.503" endtime="20201110 08:37:56.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.519" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:56.507" endtime="20201110 08:37:56.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.524" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.523" endtime="20201110 08:37:56.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.526" level="INFO">VALUE: [0.0003792219999999985, 0.00036041700000000176, 0.00036093100000000183, 0.00035744399999999843, 0.00035995799999999703, 0.00036094400000000193, 0.0003583329999999989, 0.000359959, 0.0003548189999999993, 0.00035937500000000205, 0.00035811099999999776, 0.00036130499999999927, 0.00035877800000000057, 0.00035832000000000225, 0.0003550410000000004, 0.00035690300000000216, 0.00035574999999999843, 0.00036095799999999803, 0.000354972999999998, 0.0003580279999999998, 0.0003550560000000029, 0.0003601940000000012, 0.0003567090000000002, 0.0003610969999999977, 0.0003556939999999967, 0.0003583470000000019, 0.00035904200000000386, 0.0003609580000000015, 0.0003564019999999987, 0.00036044400000000143, 0.00035974999999999896, 0.0003559029999999977, 0.00035865300000000044, 0.0003611940000000022, 0.000359555999999997, 0.0003579999999999972, 0.00035819499999999865, 0.0003599999999999992, 0.0003604450000000009, 0.00036120800000000175, 0.00035573600000000233, 0.00035595800000000344, 0.0003582779999999966, 0.00036115199999999653, 0.0003594999999999987, 0.00035797199999999807, 0.00036016600000000204, 0.0003605269999999994, 0.0003577779999999961, 0.0003609859999999937]</msg>
<status status="PASS" starttime="20201110 08:37:56.525" endtime="20201110 08:37:56.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.520" endtime="20201110 08:37:56.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.530" endtime="20201110 08:37:56.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.533" endtime="20201110 08:37:56.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.532" endtime="20201110 08:37:56.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.528" endtime="20201110 08:37:56.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.144" endtime="20201110 08:37:56.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.143" endtime="20201110 08:37:56.554"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.563" endtime="20201110 08:37:56.604"></status>
</kw>
<msg timestamp="20201110 08:37:56.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.561" endtime="20201110 08:37:56.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.606" endtime="20201110 08:37:56.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.608" endtime="20201110 08:37:56.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.559" endtime="20201110 08:37:56.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.556" endtime="20201110 08:37:56.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.617" endtime="20201110 08:37:56.905"></status>
</kw>
<msg timestamp="20201110 08:37:56.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023701986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024072597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.616" endtime="20201110 08:37:56.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023701986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024072597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.909" endtime="20201110 08:37:56.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.917" endtime="20201110 08:37:56.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.613" endtime="20201110 08:37:56.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.611" endtime="20201110 08:37:56.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.924" level="INFO">${RESULT} = [{'time': 0.024072597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037061099999999986, 'source_diff': 0.00037061099999999986}, {'time': 0.024438, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:56.921" endtime="20201110 08:37:56.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.937" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:56.925" endtime="20201110 08:37:56.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.942" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.941" endtime="20201110 08:37:56.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.944" level="INFO">VALUE: [0.00037061099999999986, 0.00035984699999999994, 0.00035590300000000116, 0.0003583879999999977, 0.0003610830000000016, 0.0003562500000000024, 0.0003577090000000012, 0.00035873600000000186, 0.00035724999999999993, 0.00035568100000000005, 0.0003554859999999986, 0.00035611099999999923, 0.00035673699999999933, 0.0003586390000000009, 0.00035856899999999955, 0.0003550270000000008, 0.00035829199999999964, 0.0003583199999999988, 0.0003579860000000011, 0.0003560140000000017, 0.0003584030000000002, 0.0003551390000000043, 0.00035859800000000164, 0.000356666999999998, 0.0003571389999999994, 0.00035716599999999904, 0.00035780499999999577, 0.00035747199999999757, 0.00036102799999999935, 0.00035748599999999714, 0.0003589030000000007, 0.0003606810000000016, 0.0003612779999999996, 0.00035588799999999865, 0.00035854200000000336, 0.0003607769999999996, 0.00035702799999999535, 0.0003550140000000007, 0.00035765299999999944, 0.00036058299999999766, 0.0003600689999999976, 0.0003548189999999993, 0.0003607230000000003, 0.00035765299999999944, 0.0003599450000000004, 0.0003573610000000005, 0.0003612360000000009, 0.000359667000000001, 0.00035622200000000326, 0.00035694399999999793]</msg>
<status status="PASS" starttime="20201110 08:37:56.943" endtime="20201110 08:37:56.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.938" endtime="20201110 08:37:56.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.947" endtime="20201110 08:37:56.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.951" endtime="20201110 08:37:56.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.949" endtime="20201110 08:37:56.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.946" endtime="20201110 08:37:56.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.555" endtime="20201110 08:37:56.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.554" endtime="20201110 08:37:56.972"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.980" endtime="20201110 08:37:57.016"></status>
</kw>
<msg timestamp="20201110 08:37:57.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.979" endtime="20201110 08:37:57.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.018" endtime="20201110 08:37:57.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.020" endtime="20201110 08:37:57.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.976" endtime="20201110 08:37:57.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.974" endtime="20201110 08:37:57.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.029" endtime="20201110 08:37:57.316"></status>
</kw>
<msg timestamp="20201110 08:37:57.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:57.027" endtime="20201110 08:37:57.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:57.320" endtime="20201110 08:37:57.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.328" endtime="20201110 08:37:57.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.025" endtime="20201110 08:37:57.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.023" endtime="20201110 08:37:57.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:57.334" level="INFO">${RESULT} = [{'time': 0.023206, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037769400000000133, 'source_diff': 0.00037769400000000133}, {'time': 0.023571139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:57.331" endtime="20201110 08:37:57.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:57.348" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:57.335" endtime="20201110 08:37:57.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.352" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:37:57.351" endtime="20201110 08:37:57.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.354" level="INFO">VALUE: [0.00037769400000000133, 0.0003577080000000017, 0.00035977800000000157, 0.00035909799999999867, 0.00035655600000000093, 0.0003602090000000002, 0.0003596949999999967, 0.0003606389999999994, 0.0003591810000000001, 0.0003609169999999988, 0.0003596389999999984, 0.0003562500000000024, 0.00035744399999999843, 0.0003558469999999994, 0.0003573470000000009, 0.0003578480000000009, 0.00035515200000000094, 0.0003612359999999974, 0.0003547919999999996, 0.0003597219999999998, 0.00035741699999999876, 0.0003571249999999998, 0.00035536100000000195, 0.0003579449999999984, 0.0003579579999999985, 0.00036011100000000323, 0.00035787500000000055, 0.0003598199999999968, 0.0003580830000000021, 0.0003612779999999996, 0.00036030499999999827, 0.0003568050000000017, 0.0003577219999999978, 0.00035937500000000205, 0.0003585139999999973, 0.0003563050000000012, 0.00035576400000000147, 0.0003584449999999989, 0.00035640300000000513, 0.00035898599999999864, 0.000355584000000006, 0.0003604999999999997, 0.00035645800000000394, 0.00035924999999999846, 0.0003588339999999954, 0.0003601109999999963, 0.0003582359999999979, 0.00035677800000000204, 0.00035626400000000197, 0.00036030499999999827]</msg>
<status status="PASS" starttime="20201110 08:37:57.353" endtime="20201110 08:37:57.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.348" endtime="20201110 08:37:57.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.358" endtime="20201110 08:37:57.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:57.361" endtime="20201110 08:37:57.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.360" endtime="20201110 08:37:57.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.356" endtime="20201110 08:37:57.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.973" endtime="20201110 08:37:57.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.972" endtime="20201110 08:37:57.382"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.392" endtime="20201110 08:37:57.429"></status>
</kw>
<msg timestamp="20201110 08:37:57.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.390" endtime="20201110 08:37:57.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.431" endtime="20201110 08:37:57.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.433" endtime="20201110 08:37:57.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.387" endtime="20201110 08:37:57.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.385" endtime="20201110 08:37:57.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.442" endtime="20201110 08:37:57.736"></status>
</kw>
<msg timestamp="20201110 08:37:57.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024463847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024819167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.440" endtime="20201110 08:37:57.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024463847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024819167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.744" endtime="20201110 08:37:57.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.762" endtime="20201110 08:37:57.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.438" endtime="20201110 08:37:57.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.436" endtime="20201110 08:37:57.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:57.776" level="INFO">${RESULT} = [{'time': 0.024819167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035531999999999925, 'source_diff': 0.00035531999999999925}, {'time': 0.0251845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:57.769" endtime="20201110 08:37:57.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:57.803" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:57.778" endtime="20201110 08:37:57.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.807" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:37:57.806" endtime="20201110 08:37:57.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.810" level="INFO">VALUE: [0.00035531999999999925, 0.00036011099999999976, 0.0003566249999999993, 0.0003582219999999983, 0.00035533299999999934, 0.00035704200000000186, 0.0003581390000000004, 0.0003553889999999976, 0.0003566249999999993, 0.0003590139999999978, 0.00035677799999999857, 0.000355972999999999, 0.0003578340000000013, 0.00035759700000000116, 0.00036079199999999867, 0.0003610000000000002, 0.00035715299999999894, 0.0003594169999999973, 0.0003563190000000008, 0.00035609799999999914, 0.00035931899999999684, 0.0003576950000000051, 0.00035904200000000386, 0.0003573610000000005, 0.0003589730000000055, 0.0003597779999999981, 0.00035520799999999575, 0.0003585139999999973, 0.0003561389999999984, 0.0003553610000000054, 0.0003610140000000067, 0.00035647199999999657, 0.00035958400000000307, 0.0003554720000000025, 0.0003605269999999994, 0.00035861100000000173, 0.00036098600000000064, 0.0003552080000000027, 0.0003575689999999951, 0.00036108400000000457, 0.0003596810000000006, 0.0003605419999999984, 0.00035747199999999757, 0.00035794399999999893, 0.00035993100000000083, 0.000357861000000001, 0.00035594400000000387, 0.0003597219999999998, 0.00035854099999999695, 0.00036097200000000107]</msg>
<status status="PASS" starttime="20201110 08:37:57.808" endtime="20201110 08:37:57.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.804" endtime="20201110 08:37:57.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.813" endtime="20201110 08:37:57.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:57.817" endtime="20201110 08:37:57.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.815" endtime="20201110 08:37:57.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.812" endtime="20201110 08:37:57.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.383" endtime="20201110 08:37:57.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.383" endtime="20201110 08:37:57.837"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.846" endtime="20201110 08:37:57.882"></status>
</kw>
<msg timestamp="20201110 08:37:57.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.844" endtime="20201110 08:37:57.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.883" endtime="20201110 08:37:57.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.885" endtime="20201110 08:37:57.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.842" endtime="20201110 08:37:57.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.840" endtime="20201110 08:37:57.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.894" endtime="20201110 08:37:58.181"></status>
</kw>
<msg timestamp="20201110 08:37:58.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021427306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.893" endtime="20201110 08:37:58.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021427306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.185" endtime="20201110 08:37:58.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.193" endtime="20201110 08:37:58.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.890" endtime="20201110 08:37:58.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.889" endtime="20201110 08:37:58.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.200" level="INFO">${RESULT} = [{'time': 0.021810653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038334699999999916, 'source_diff': 0.00038334699999999916}, {'time': 0.022175875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:58.197" endtime="20201110 08:37:58.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:58.213" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:58.201" endtime="20201110 08:37:58.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.218" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:37:58.217" endtime="20201110 08:37:58.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.220" level="INFO">VALUE: [0.00038334699999999916, 0.0003549860000000016, 0.000360764000000003, 0.0003589449999999994, 0.00035830499999999973, 0.0003568060000000012, 0.0003588189999999998, 0.0003550560000000029, 0.0003551530000000004, 0.0003553750000000015, 0.0003581799999999996, 0.00035909700000000266, 0.0003582640000000005, 0.00035829199999999964, 0.00035682000000000075, 0.00035644500000000037, 0.00035581999999999975, 0.0003576389999999999, 0.000357666999999999, 0.00035897299999999854, 0.00035957000000000003, 0.00035926399999999803, 0.00035848599999999814, 0.00035486199999999746, 0.0003608469999999975, 0.00036077800000000257, 0.0003553750000000015, 0.0003548049999999997, 0.0003563889999999986, 0.00035897299999999854, 0.0003573889999999996, 0.000356457999999997, 0.00035886099999999505, 0.0003605549999999985, 0.0003582219999999983, 0.00035809800000000114, 0.0003577500000000039, 0.0003594160000000013, 0.00035515299999999694, 0.00035783300000000184, 0.0003589999999999982, 0.00035737500000000005, 0.00035874999999999796, 0.0003596800000000011, 0.0003602779999999986, 0.0003563060000000007, 0.0003602769999999991, 0.0003560280000000013, 0.0003587219999999988, 0.00035983300000000384]</msg>
<status status="PASS" starttime="20201110 08:37:58.219" endtime="20201110 08:37:58.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.214" endtime="20201110 08:37:58.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.228" endtime="20201110 08:37:58.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.231" endtime="20201110 08:37:58.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.230" endtime="20201110 08:37:58.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.226" endtime="20201110 08:37:58.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.838" endtime="20201110 08:37:58.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.838" endtime="20201110 08:37:58.252"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.261" endtime="20201110 08:37:58.297"></status>
</kw>
<msg timestamp="20201110 08:37:58.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.259" endtime="20201110 08:37:58.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.299" endtime="20201110 08:37:58.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.301" endtime="20201110 08:37:58.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.256" endtime="20201110 08:37:58.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.254" endtime="20201110 08:37:58.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.310" endtime="20201110 08:37:58.611"></status>
</kw>
<msg timestamp="20201110 08:37:58.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023796819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024177931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.309" endtime="20201110 08:37:58.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023796819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024177931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.615" endtime="20201110 08:37:58.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.623" endtime="20201110 08:37:58.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.306" endtime="20201110 08:37:58.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.304" endtime="20201110 08:37:58.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.630" level="INFO">${RESULT} = [{'time': 0.024177931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003811119999999994, 'source_diff': 0.0003811119999999994}, {'time': 0.024543181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:58.626" endtime="20201110 08:37:58.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:58.643" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:58.631" endtime="20201110 08:37:58.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.647" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:37:58.646" endtime="20201110 08:37:58.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.650" level="INFO">VALUE: [0.0003811119999999994, 0.0003548890000000006, 0.0003595839999999996, 0.0003566389999999989, 0.00036001400000000225, 0.00036072199999999735, 0.00036030599999999774, 0.0003583749999999976, 0.00035998599999999964, 0.00035827800000000007, 0.00035723699999999983, 0.00035991700000000126, 0.00035880500000000023, 0.0003588199999999993, 0.0003570280000000023, 0.00035877800000000057, 0.00036005600000000096, 0.00035856999999999903, 0.00035624999999999893, 0.0003554999999999982, 0.00035645800000000394, 0.000359667000000001, 0.0003608329999999979, 0.0003601109999999963, 0.00035791699999999926, 0.0003560559999999935, 0.0003611390000000034, 0.00035627800000000154, 0.0003579860000000046, 0.0003570280000000023, 0.00035559699999999916, 0.00035677800000000204, 0.00035640200000000566, 0.00035724999999999646, 0.00036020800000000075, 0.0003561950000000036, 0.0003597229999999993, 0.00036097199999999413, 0.0003577920000000026, 0.00035495800000000244, 0.000356861, 0.00036063899999999594, 0.00035926400000000497, 0.00035573600000000233, 0.0003567359999999964, 0.00035623600000000283, 0.0003600559999999975, 0.00036098600000000064, 0.00035677800000000204, 0.0003566249999999993]</msg>
<status status="PASS" starttime="20201110 08:37:58.649" endtime="20201110 08:37:58.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.644" endtime="20201110 08:37:58.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.653" endtime="20201110 08:37:58.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.657" endtime="20201110 08:37:58.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.655" endtime="20201110 08:37:58.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.652" endtime="20201110 08:37:58.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.253" endtime="20201110 08:37:58.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.252" endtime="20201110 08:37:58.678"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.686" endtime="20201110 08:37:58.720"></status>
</kw>
<msg timestamp="20201110 08:37:58.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.685" endtime="20201110 08:37:58.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.722" endtime="20201110 08:37:58.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.724" endtime="20201110 08:37:58.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.682" endtime="20201110 08:37:58.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.680" endtime="20201110 08:37:58.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.733" endtime="20201110 08:37:59.019"></status>
</kw>
<msg timestamp="20201110 08:37:59.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02063825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:58.731" endtime="20201110 08:37:59.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02063825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:59.023" endtime="20201110 08:37:59.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.031" endtime="20201110 08:37:59.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.729" endtime="20201110 08:37:59.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.727" endtime="20201110 08:37:59.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:59.037" level="INFO">${RESULT} = [{'time': 0.02063825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038119400000000137, 'source_diff': 0.00038119400000000137}, {'time': 0.021003375, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:59.034" endtime="20201110 08:37:59.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:59.051" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:59.038" endtime="20201110 08:37:59.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.055" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:37:59.054" endtime="20201110 08:37:59.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.057" level="INFO">VALUE: [0.00038119400000000137, 0.00035856899999999955, 0.00035887500000000155, 0.00035833399999999835, 0.00035536100000000195, 0.0003556389999999979, 0.00035597199999999954, 0.0003585839999999986, 0.0003583199999999988, 0.00035877800000000057, 0.0003562920000000011, 0.00035574999999999843, 0.0003547080000000022, 0.0003608190000000018, 0.0003600419999999979, 0.0003552079999999992, 0.00035943100000000033, 0.00035870799999999925, 0.00035691699999999826, 0.0003582770000000006, 0.00036079200000000214, 0.0003598200000000003, 0.00035745800000000147, 0.0003576389999999999, 0.0003591670000000005, 0.00035695800000000097, 0.000358764000000001, 0.00035961099999999926, 0.0003603200000000008, 0.0003610970000000012, 0.000361361000000001, 0.00035938800000000215, 0.0003607079999999943, 0.00035754200000000236, 0.0003552500000000014, 0.0003591250000000018, 0.0003598339999999964, 0.0003551799999999966, 0.0003583470000000019, 0.0003556530000000044, 0.0003551249999999978, 0.0003589579999999995, 0.0003570830000000011, 0.0003599309999999939, 0.00035793099999999883, 0.00036141700000000276, 0.0003599160000000018, 0.00035594399999999693, 0.0003567500000000029, 0.00035759700000000116]</msg>
<status status="PASS" starttime="20201110 08:37:59.056" endtime="20201110 08:37:59.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.051" endtime="20201110 08:37:59.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.061" endtime="20201110 08:37:59.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:59.064" endtime="20201110 08:37:59.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.063" endtime="20201110 08:37:59.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.059" endtime="20201110 08:37:59.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.678" endtime="20201110 08:37:59.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.678" endtime="20201110 08:37:59.085"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.094" endtime="20201110 08:37:59.132"></status>
</kw>
<msg timestamp="20201110 08:37:59.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.092" endtime="20201110 08:37:59.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.133" endtime="20201110 08:37:59.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.136" endtime="20201110 08:37:59.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.090" endtime="20201110 08:37:59.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.087" endtime="20201110 08:37:59.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.145" endtime="20201110 08:37:59.431"></status>
</kw>
<msg timestamp="20201110 08:37:59.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024999556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.143" endtime="20201110 08:37:59.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024999556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.435" endtime="20201110 08:37:59.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.443" endtime="20201110 08:37:59.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.141" endtime="20201110 08:37:59.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.139" endtime="20201110 08:37:59.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:59.449" level="INFO">${RESULT} = [{'time': 0.024999556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036047300000000004, 'source_diff': 0.00036047300000000004}, {'time': 0.02536475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:59.446" endtime="20201110 08:37:59.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:59.463" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:59.450" endtime="20201110 08:37:59.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.467" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:37:59.466" endtime="20201110 08:37:59.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.470" level="INFO">VALUE: [0.00036047300000000004, 0.0003572639999999995, 0.0003584999999999977, 0.00035880500000000023, 0.0003555129999999983, 0.0003564029999999982, 0.00035481999999999875, 0.0003587080000000027, 0.0003593749999999986, 0.0003573329999999979, 0.00035563900000000134, 0.0003607779999999991, 0.0003548469999999984, 0.00035715299999999894, 0.00035919499999999965, 0.00035777799999999957, 0.0003564999999999992, 0.000358457999999999, 0.0003576389999999999, 0.000354860999999998, 0.00035976399999999853, 0.0003601940000000012, 0.000360346999999997, 0.0003559029999999977, 0.00035629100000000163, 0.00036008399999999663, 0.0003593610000000025, 0.0003561249999999988, 0.00036073699999999986, 0.00035697299999999654, 0.0003551389999999974, 0.0003566530000000054, 0.0003553889999999976, 0.0003597359999999994, 0.00036024999999999946, 0.00035733300000000134, 0.0003556950000000031, 0.00035697199999999707, 0.00035794399999999893, 0.00035600000000000215, 0.0003588190000000033, 0.00035577800000000104, 0.00035548599999999514, 0.00035836200000000096, 0.00035697199999999707, 0.000355166000000004, 0.0003548610000000049, 0.0003570689999999946, 0.0003603340000000038, 0.0003592909999999977]</msg>
<status status="PASS" starttime="20201110 08:37:59.469" endtime="20201110 08:37:59.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.464" endtime="20201110 08:37:59.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.473" endtime="20201110 08:37:59.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:59.477" endtime="20201110 08:37:59.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.475" endtime="20201110 08:37:59.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.472" endtime="20201110 08:37:59.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.086" endtime="20201110 08:37:59.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.085" endtime="20201110 08:37:59.498"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.506" endtime="20201110 08:37:59.543"></status>
</kw>
<msg timestamp="20201110 08:37:59.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.505" endtime="20201110 08:37:59.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.545" endtime="20201110 08:37:59.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.547" endtime="20201110 08:37:59.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.502" endtime="20201110 08:37:59.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.500" endtime="20201110 08:37:59.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.556" endtime="20201110 08:37:59.843"></status>
</kw>
<msg timestamp="20201110 08:37:59.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024157306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024521347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.555" endtime="20201110 08:37:59.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024157306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024521347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.847" endtime="20201110 08:37:59.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.855" endtime="20201110 08:37:59.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.552" endtime="20201110 08:37:59.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.551" endtime="20201110 08:37:59.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:59.862" level="INFO">${RESULT} = [{'time': 0.024521347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000364040999999999, 'source_diff': 0.000364040999999999}, {'time': 0.024886847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:59.859" endtime="20201110 08:37:59.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:59.875" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:37:59.863" endtime="20201110 08:37:59.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.880" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:37:59.879" endtime="20201110 08:37:59.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.882" level="INFO">VALUE: [0.000364040999999999, 0.00036004099999999845, 0.0003583890000000006, 0.0003606810000000016, 0.00035577700000000156, 0.0003600550000000015, 0.0003591250000000018, 0.0003553750000000015, 0.00035523600000000183, 0.0003601389999999989, 0.0003582080000000022, 0.00035856999999999903, 0.0003581390000000004, 0.0003555280000000008, 0.0003615549999999995, 0.0003555279999999973, 0.0003587770000000011, 0.00035993000000000136, 0.00035905599999999996, 0.0003564729999999995, 0.0003573340000000008, 0.00035800000000000415, 0.00035908400000000257, 0.00035709700000000066, 0.00035523600000000183, 0.00035880499999999677, 0.0003596250000000023, 0.0003565700000000005, 0.0003568889999999991, 0.0003557359999999954, 0.00036140299999999626, 0.0003610000000000002, 0.0003595969999999962, 0.0003561939999999972, 0.00036097200000000107, 0.00035905600000000343, 0.00035608399999999957, 0.00035930599999999674, 0.0003568889999999991, 0.00035520900000000216, 0.00035824999999999746, 0.0003584300000000068, 0.0003555699999999995, 0.0003583610000000015, 0.0003568470000000004, 0.0003610000000000002, 0.00035527800000000054, 0.00036156999999999856, 0.0003608749999999966, 0.00036115300000000294]</msg>
<status status="PASS" starttime="20201110 08:37:59.881" endtime="20201110 08:37:59.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.876" endtime="20201110 08:37:59.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.886" endtime="20201110 08:37:59.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:59.889" endtime="20201110 08:37:59.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.888" endtime="20201110 08:37:59.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.884" endtime="20201110 08:37:59.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.499" endtime="20201110 08:37:59.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.498" endtime="20201110 08:37:59.910"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.919" endtime="20201110 08:37:59.955"></status>
</kw>
<msg timestamp="20201110 08:37:59.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.917" endtime="20201110 08:37:59.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.957" endtime="20201110 08:37:59.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.959" endtime="20201110 08:37:59.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.914" endtime="20201110 08:37:59.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.912" endtime="20201110 08:37:59.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.968" endtime="20201110 08:38:00.257"></status>
</kw>
<msg timestamp="20201110 08:38:00.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023739861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024116972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.966" endtime="20201110 08:38:00.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023739861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024116972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.261" endtime="20201110 08:38:00.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.269" endtime="20201110 08:38:00.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.964" endtime="20201110 08:38:00.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.962" endtime="20201110 08:38:00.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.275" level="INFO">${RESULT} = [{'time': 0.024116972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003771109999999994, 'source_diff': 0.0003771109999999994}, {'time': 0.024482347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:00.272" endtime="20201110 08:38:00.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.289" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:00.276" endtime="20201110 08:38:00.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.293" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.292" endtime="20201110 08:38:00.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.295" level="INFO">VALUE: [0.0003771109999999994, 0.0003583470000000019, 0.00036117999999999914, 0.00035505499999999995, 0.0003611389999999999, 0.00035697200000000054, 0.00035791699999999926, 0.00035677799999999857, 0.0003553469999999989, 0.00035587499999999855, 0.00035737500000000005, 0.00035779199999999914, 0.00035759700000000116, 0.00035555599999999993, 0.00035786200000000046, 0.0003554439999999999, 0.00035682000000000075, 0.00035891700000000026, 0.0003563060000000007, 0.0003550280000000003, 0.0003578749999999971, 0.0003558889999999981, 0.00035600000000000215, 0.0003572089999999972, 0.0003573470000000009, 0.0003593060000000037, 0.0003613329999999984, 0.00035569499999999615, 0.00035570799999999625, 0.00035566700000000395, 0.00035765299999999944, 0.00036097199999999413, 0.00035469499999999515, 0.00035929199999999717, 0.0003581390000000004, 0.0003597219999999998, 0.0003591250000000018, 0.0003612779999999996, 0.000359569000000004, 0.0003578890000000001, 0.0003583470000000019, 0.000359458, 0.0003595419999999974, 0.0003561249999999988, 0.0003606669999999951, 0.0003565419999999944, 0.000355569, 0.0003603890000000026, 0.0003598060000000042, 0.0003581939999999992]</msg>
<status status="PASS" starttime="20201110 08:38:00.294" endtime="20201110 08:38:00.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.289" endtime="20201110 08:38:00.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.299" endtime="20201110 08:38:00.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.302" endtime="20201110 08:38:00.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.301" endtime="20201110 08:38:00.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.297" endtime="20201110 08:38:00.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.911" endtime="20201110 08:38:00.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.910" endtime="20201110 08:38:00.323"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.332" endtime="20201110 08:38:00.368"></status>
</kw>
<msg timestamp="20201110 08:38:00.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.330" endtime="20201110 08:38:00.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.370" endtime="20201110 08:38:00.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.372" endtime="20201110 08:38:00.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.328" endtime="20201110 08:38:00.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.326" endtime="20201110 08:38:00.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.381" endtime="20201110 08:38:00.667"></status>
</kw>
<msg timestamp="20201110 08:38:00.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.379" endtime="20201110 08:38:00.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.671" endtime="20201110 08:38:00.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.679" endtime="20201110 08:38:00.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.377" endtime="20201110 08:38:00.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.375" endtime="20201110 08:38:00.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.686" level="INFO">${RESULT} = [{'time': 0.022917472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038254100000000013, 'source_diff': 0.00038254100000000013}, {'time': 0.023282708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:00.683" endtime="20201110 08:38:00.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.699" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:00.687" endtime="20201110 08:38:00.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.703" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.702" endtime="20201110 08:38:00.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.706" level="INFO">VALUE: [0.00038254100000000013, 0.00035874999999999796, 0.00035829100000000016, 0.0003564449999999969, 0.0003586939999999997, 0.00035480600000000265, 0.00036076399999999953, 0.00035974999999999896, 0.0003609029999999992, 0.00036024999999999946, 0.000357764, 0.00035801400000000025, 0.00035644500000000037, 0.00035569400000000015, 0.0003551389999999974, 0.00035572200000000276, 0.0003599580000000005, 0.0003599580000000005, 0.00035481900000000274, 0.00035815299999999994, 0.00035607, 0.00035966699999999754, 0.0003569579999999975, 0.000355972999999999, 0.000356166000000005, 0.00035698599999999664, 0.00035842999999999986, 0.00035861100000000173, 0.00035826399999999703, 0.0003562779999999946, 0.0003599580000000005, 0.0003594160000000013, 0.0003554019999999977, 0.0003549860000000016, 0.0003591810000000001, 0.0003610969999999977, 0.0003597219999999998, 0.00035937500000000205, 0.00035859800000000164, 0.0003602229999999998, 0.0003602229999999998, 0.00035605500000000095, 0.0003563609999999995, 0.0003591810000000001, 0.0003558339999999993, 0.0003597359999999994, 0.00035624999999999546, 0.0003611949999999947, 0.0003595549999999975, 0.0003563609999999995]</msg>
<status status="PASS" starttime="20201110 08:38:00.705" endtime="20201110 08:38:00.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.700" endtime="20201110 08:38:00.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.709" endtime="20201110 08:38:00.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.713" endtime="20201110 08:38:00.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.711" endtime="20201110 08:38:00.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.708" endtime="20201110 08:38:00.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.324" endtime="20201110 08:38:00.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.323" endtime="20201110 08:38:00.734"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.742" endtime="20201110 08:38:00.780"></status>
</kw>
<msg timestamp="20201110 08:38:00.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.741" endtime="20201110 08:38:00.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.781" endtime="20201110 08:38:00.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.784" endtime="20201110 08:38:00.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.738" endtime="20201110 08:38:00.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.736" endtime="20201110 08:38:00.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.793" endtime="20201110 08:38:01.079"></status>
</kw>
<msg timestamp="20201110 08:38:01.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023954125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024316181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.791" endtime="20201110 08:38:01.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023954125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024316181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.083" endtime="20201110 08:38:01.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.091" endtime="20201110 08:38:01.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.788" endtime="20201110 08:38:01.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.787" endtime="20201110 08:38:01.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.098" level="INFO">${RESULT} = [{'time': 0.024316181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003620559999999995, 'source_diff': 0.0003620559999999995}, {'time': 0.024681292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:01.094" endtime="20201110 08:38:01.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.111" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:01.099" endtime="20201110 08:38:01.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.116" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.115" endtime="20201110 08:38:01.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.118" level="INFO">VALUE: [0.0003620559999999995, 0.00035594499999999987, 0.00035491699999999973, 0.00035797200000000154, 0.0003610969999999977, 0.000357457999999998, 0.00035811100000000123, 0.00035865300000000044, 0.0003557500000000019, 0.000358861000000002, 0.0003606939999999982, 0.00035683300000000084, 0.00035623599999999936, 0.0003569860000000001, 0.00035756899999999855, 0.0003553050000000002, 0.0003548189999999993, 0.00036061100000000026, 0.000356861, 0.00035879100000000066, 0.0003570140000000027, 0.0003585689999999961, 0.0003596390000000019, 0.00035669499999999715, 0.00035877700000000456, 0.00035627700000000206, 0.0003551389999999974, 0.00035806999999999506, 0.00035637499999999905, 0.00035533299999999934, 0.0003582920000000031, 0.000359861000000003, 0.0003549159999999968, 0.00035981899999999734, 0.00035915200000000147, 0.00035798599999999764, 0.0003570270000000028, 0.0003594030000000012, 0.00035965300000000144, 0.0003611390000000034, 0.0003610139999999998, 0.0003560419999999939, 0.0003570830000000011, 0.0003564170000000047, 0.0003602359999999999, 0.0003572359999999969, 0.0003577219999999978, 0.00035937500000000205, 0.0003561809999999971, 0.00035908299999999616]</msg>
<status status="PASS" starttime="20201110 08:38:01.117" endtime="20201110 08:38:01.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.112" endtime="20201110 08:38:01.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.122" endtime="20201110 08:38:01.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.125" endtime="20201110 08:38:01.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.123" endtime="20201110 08:38:01.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.120" endtime="20201110 08:38:01.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.735" endtime="20201110 08:38:01.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.734" endtime="20201110 08:38:01.146"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.154" endtime="20201110 08:38:01.191"></status>
</kw>
<msg timestamp="20201110 08:38:01.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.153" endtime="20201110 08:38:01.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.193" endtime="20201110 08:38:01.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.195" endtime="20201110 08:38:01.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.150" endtime="20201110 08:38:01.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.148" endtime="20201110 08:38:01.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.204" endtime="20201110 08:38:01.510"></status>
</kw>
<msg timestamp="20201110 08:38:01.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023812958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.203" endtime="20201110 08:38:01.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023812958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.520" endtime="20201110 08:38:01.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.539" endtime="20201110 08:38:01.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.200" endtime="20201110 08:38:01.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.199" endtime="20201110 08:38:01.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.546" level="INFO">${RESULT} = [{'time': 0.024168819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035586100000000245, 'source_diff': 0.00035586100000000245}, {'time': 0.024533875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:01.543" endtime="20201110 08:38:01.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.560" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:01.547" endtime="20201110 08:38:01.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.565" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.564" endtime="20201110 08:38:01.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.567" level="INFO">VALUE: [0.00035586100000000245, 0.00035827800000000007, 0.0003610969999999977, 0.00035868100000000305, 0.00035980599999999724, 0.0003565280000000018, 0.00035651399999999875, 0.00036084700000000094, 0.000357764, 0.0003594860000000026, 0.00035691700000000173, 0.00035874999999999796, 0.0003595139999999983, 0.00035877800000000057, 0.00035836200000000096, 0.0003548470000000019, 0.0003612359999999974, 0.0003560410000000014, 0.0003609450000000014, 0.0003565419999999979, 0.0003593749999999986, 0.00035529100000000063, 0.000360667000000002, 0.00035601300000000224, 0.0003598469999999965, 0.00035555599999999993, 0.0003560140000000017, 0.00036004099999999845, 0.00035644500000000384, 0.00036026399999999903, 0.0003555140000000012, 0.0003548469999999984, 0.0003593610000000025, 0.00035455599999999893, 0.0003591810000000001, 0.00035669499999999715, 0.0003610559999999985, 0.0003591670000000005, 0.00036008299999999716, 0.0003596250000000023, 0.00035537499999999805, 0.00036069399999999474, 0.000358667, 0.0003596250000000023, 0.000358569000000003, 0.0003604450000000009, 0.0003589579999999995, 0.0003551799999999966, 0.00035505499999999995, 0.0003595689999999971]</msg>
<status status="PASS" starttime="20201110 08:38:01.566" endtime="20201110 08:38:01.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.561" endtime="20201110 08:38:01.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.571" endtime="20201110 08:38:01.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.575" endtime="20201110 08:38:01.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.573" endtime="20201110 08:38:01.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.569" endtime="20201110 08:38:01.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.147" endtime="20201110 08:38:01.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.146" endtime="20201110 08:38:01.596"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.605" endtime="20201110 08:38:01.644"></status>
</kw>
<msg timestamp="20201110 08:38:01.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.603" endtime="20201110 08:38:01.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.646" endtime="20201110 08:38:01.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.648" endtime="20201110 08:38:01.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.601" endtime="20201110 08:38:01.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.598" endtime="20201110 08:38:01.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.658" endtime="20201110 08:38:01.946"></status>
</kw>
<msg timestamp="20201110 08:38:01.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026214319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026596333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.656" endtime="20201110 08:38:01.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026214319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026596333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.950" endtime="20201110 08:38:01.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.959" endtime="20201110 08:38:01.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.654" endtime="20201110 08:38:01.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.652" endtime="20201110 08:38:01.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.965" level="INFO">${RESULT} = [{'time': 0.026596333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038201399999999996, 'source_diff': 0.00038201399999999996}, {'time': 0.026961528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:01.962" endtime="20201110 08:38:01.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.979" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:01.967" endtime="20201110 08:38:01.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.984" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.983" endtime="20201110 08:38:01.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.987" level="INFO">VALUE: [0.00038201399999999996, 0.00036058399999999713, 0.000359360999999999, 0.0003575409999999994, 0.000356569000000001, 0.00035661099999999973, 0.00036129199999999917, 0.00035623599999999936, 0.0003604590000000005, 0.0003549999999999977, 0.0003580830000000021, 0.0003564310000000008, 0.0003588189999999998, 0.0003584860000000051, 0.0003556530000000044, 0.0003571389999999994, 0.0003610969999999977, 0.00035766599999999954, 0.0003611940000000022, 0.00036043100000000133, 0.0003557920000000006, 0.0003556389999999979, 0.0003556390000000048, 0.0003581669999999995, 0.00036052799999999885, 0.0003555829999999996, 0.00035827800000000354, 0.0003612360000000009, 0.00035916600000000104, 0.0003583610000000015, 0.0003570690000000015, 0.0003559579999999965, 0.0003575280000000028, 0.00035633300000000034, 0.00035469499999999515, 0.00035561099999999873, 0.00035491699999999626, 0.0003556390000000048, 0.00035516700000000345, 0.0003573889999999996, 0.00035565299999999744, 0.0003602220000000003, 0.0003553480000000053, 0.0003580139999999968, 0.000359346999999996, 0.00036080499999999877, 0.00035620799999999675, 0.00035576400000000147, 0.0003552500000000014, 0.00036024999999999946]</msg>
<status status="PASS" starttime="20201110 08:38:01.985" endtime="20201110 08:38:01.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.980" endtime="20201110 08:38:01.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.990" endtime="20201110 08:38:01.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.994" endtime="20201110 08:38:02.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.992" endtime="20201110 08:38:02.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.989" endtime="20201110 08:38:02.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.597" endtime="20201110 08:38:02.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.596" endtime="20201110 08:38:02.015"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.024" endtime="20201110 08:38:02.061"></status>
</kw>
<msg timestamp="20201110 08:38:02.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.022" endtime="20201110 08:38:02.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.062" endtime="20201110 08:38:02.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.065" endtime="20201110 08:38:02.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.020" endtime="20201110 08:38:02.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.018" endtime="20201110 08:38:02.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.074" endtime="20201110 08:38:02.361"></status>
</kw>
<msg timestamp="20201110 08:38:02.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024001653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024375764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.073" endtime="20201110 08:38:02.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024001653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024375764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.365" endtime="20201110 08:38:02.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.374" endtime="20201110 08:38:02.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.070" endtime="20201110 08:38:02.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.068" endtime="20201110 08:38:02.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.380" level="INFO">${RESULT} = [{'time': 0.024375764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003741109999999999, 'source_diff': 0.0003741109999999999}, {'time': 0.024740847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:02.377" endtime="20201110 08:38:02.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.394" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:02.381" endtime="20201110 08:38:02.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.399" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.398" endtime="20201110 08:38:02.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.402" level="INFO">VALUE: [0.0003741109999999999, 0.00035756899999999855, 0.00036020800000000075, 0.0003551800000000001, 0.00035844399999999943, 0.00036007000000000053, 0.0003547500000000009, 0.0003588890000000011, 0.0003564440000000009, 0.0003585280000000003, 0.00035719499999999765, 0.00036112500000000033, 0.00035741699999999876, 0.00035576400000000147, 0.00035723600000000036, 0.00036081899999999834, 0.0003578189999999988, 0.00036011099999999976, 0.00035993100000000083, 0.00035943100000000033, 0.00035926399999999803, 0.0003562920000000011, 0.0003589869999999981, 0.000355457999999996, 0.00035987500000000255, 0.00035676400000000247, 0.00035980599999999724, 0.0003601120000000027, 0.0003556660000000045, 0.00035683300000000084, 0.0003596390000000019, 0.0003586800000000001, 0.0003556249999999983, 0.0003583470000000019, 0.0003576809999999986, 0.000354860999999998, 0.00035755600000000193, 0.00035720900000000416, 0.0003610419999999989, 0.00035912499999999486, 0.0003574720000000045, 0.00035477800000000004, 0.0003547919999999996, 0.00036129199999999917, 0.0003587779999999971, 0.0003564999999999957, 0.00036024999999999946, 0.00035893099999999983, 0.00035837500000000105, 0.0003593749999999951]</msg>
<status status="PASS" starttime="20201110 08:38:02.400" endtime="20201110 08:38:02.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.395" endtime="20201110 08:38:02.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.405" endtime="20201110 08:38:02.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.409" endtime="20201110 08:38:02.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.407" endtime="20201110 08:38:02.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.404" endtime="20201110 08:38:02.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.016" endtime="20201110 08:38:02.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.015" endtime="20201110 08:38:02.430"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.439" endtime="20201110 08:38:02.474"></status>
</kw>
<msg timestamp="20201110 08:38:02.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.437" endtime="20201110 08:38:02.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.476" endtime="20201110 08:38:02.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.478" endtime="20201110 08:38:02.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.435" endtime="20201110 08:38:02.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.433" endtime="20201110 08:38:02.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.488" endtime="20201110 08:38:02.776"></status>
</kw>
<msg timestamp="20201110 08:38:02.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020811778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021168847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.486" endtime="20201110 08:38:02.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020811778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021168847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.780" endtime="20201110 08:38:02.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.788" endtime="20201110 08:38:02.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.483" endtime="20201110 08:38:02.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.482" endtime="20201110 08:38:02.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.795" level="INFO">${RESULT} = [{'time': 0.021168847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003570690000000015, 'source_diff': 0.0003570690000000015}, {'time': 0.021534056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:02.792" endtime="20201110 08:38:02.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.809" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:02.796" endtime="20201110 08:38:02.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.814" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.813" endtime="20201110 08:38:02.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.816" level="INFO">VALUE: [0.0003570690000000015, 0.0003590280000000008, 0.0003597079999999968, 0.0003568470000000004, 0.0003595689999999971, 0.0003611529999999995, 0.00035841699999999976, 0.00035938899999999815, 0.00035511099999999823, 0.00036070800000000125, 0.000359764000000002, 0.0003590829999999996, 0.0003558479999999989, 0.0003580000000000007, 0.0003611389999999999, 0.00036048600000000014, 0.00035783300000000184, 0.00035511099999999823, 0.00036034700000000044, 0.0003585700000000025, 0.00035988899999999865, 0.00036034700000000044, 0.0003579579999999985, 0.000355972999999999, 0.000358263000000001, 0.0003558050000000007, 0.00035508399999999857, 0.0003560830000000001, 0.000361054999999999, 0.0003610969999999977, 0.00035491699999999626, 0.0003561939999999972, 0.0003595969999999962, 0.00035504199999999986, 0.0003549159999999968, 0.00035991599999999485, 0.0003571390000000063, 0.00035924999999999846, 0.00035943100000000033, 0.0003559029999999977, 0.0003596390000000019, 0.00035795800000000544, 0.0003566249999999993, 0.0003580969999999947, 0.00035561100000000567, 0.0003586380000000014, 0.00035641699999999776, 0.00035792999999999936, 0.00035554200000000036, 0.0003599019999999953]</msg>
<status status="PASS" starttime="20201110 08:38:02.815" endtime="20201110 08:38:02.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.810" endtime="20201110 08:38:02.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.820" endtime="20201110 08:38:02.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.823" endtime="20201110 08:38:02.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.822" endtime="20201110 08:38:02.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.818" endtime="20201110 08:38:02.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.431" endtime="20201110 08:38:02.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.430" endtime="20201110 08:38:02.844"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.854" endtime="20201110 08:38:02.889"></status>
</kw>
<msg timestamp="20201110 08:38:02.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.852" endtime="20201110 08:38:02.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.891" endtime="20201110 08:38:02.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.893" endtime="20201110 08:38:02.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.849" endtime="20201110 08:38:02.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.847" endtime="20201110 08:38:02.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.903" endtime="20201110 08:38:03.191"></status>
</kw>
<msg timestamp="20201110 08:38:03.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0234255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023798694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:02.901" endtime="20201110 08:38:03.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0234255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023798694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:03.195" endtime="20201110 08:38:03.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.203" endtime="20201110 08:38:03.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.898" endtime="20201110 08:38:03.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.896" endtime="20201110 08:38:03.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.210" level="INFO">${RESULT} = [{'time': 0.023798694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003731940000000003, 'source_diff': 0.0003731940000000003}, {'time': 0.024163931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:03.206" endtime="20201110 08:38:03.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:03.224" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:03.211" endtime="20201110 08:38:03.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.228" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:38:03.227" endtime="20201110 08:38:03.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.231" level="INFO">VALUE: [0.0003731940000000003, 0.00036062499999999983, 0.0003602779999999986, 0.00035641600000000176, 0.00035491699999999973, 0.00035597199999999954, 0.00035573600000000233, 0.0003561249999999988, 0.00035537499999999805, 0.0003551530000000004, 0.0003558050000000007, 0.0003551110000000017, 0.0003553050000000002, 0.00036047300000000004, 0.0003551250000000013, 0.0003592779999999976, 0.0003558469999999994, 0.00035805600000000243, 0.0003600840000000001, 0.0003575830000000016, 0.0003589169999999968, 0.0003568479999999999, 0.00035748599999999714, 0.00035697199999999707, 0.00036029100000000563, 0.00035931899999999684, 0.00036005500000000495, 0.000358667, 0.00035873699999999786, 0.00035915300000000094, 0.0003551249999999978, 0.0003575410000000029, 0.00035715299999999894, 0.0003557080000000032, 0.00035758400000000107, 0.00035477800000000004, 0.0003585280000000038, 0.0003556249999999983, 0.00036115300000000294, 0.0003566389999999989, 0.0003610690000000055, 0.00035877800000000404, 0.00036011100000000323, 0.0003576810000000055, 0.0003607779999999991, 0.00035809700000000166, 0.00035600000000000215, 0.0003603610000000035, 0.0003588890000000011, 0.0003560690000000005]</msg>
<status status="PASS" starttime="20201110 08:38:03.230" endtime="20201110 08:38:03.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.225" endtime="20201110 08:38:03.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.241" endtime="20201110 08:38:03.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.245" endtime="20201110 08:38:03.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.243" endtime="20201110 08:38:03.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.240" endtime="20201110 08:38:03.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.845" endtime="20201110 08:38:03.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.845" endtime="20201110 08:38:03.266"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.275" endtime="20201110 08:38:03.312"></status>
</kw>
<msg timestamp="20201110 08:38:03.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.274" endtime="20201110 08:38:03.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.314" endtime="20201110 08:38:03.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.316" endtime="20201110 08:38:03.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.271" endtime="20201110 08:38:03.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.269" endtime="20201110 08:38:03.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.325" endtime="20201110 08:38:03.614"></status>
</kw>
<msg timestamp="20201110 08:38:03.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023752208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024109819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.324" endtime="20201110 08:38:03.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023752208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024109819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.618" endtime="20201110 08:38:03.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.627" endtime="20201110 08:38:03.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.321" endtime="20201110 08:38:03.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.320" endtime="20201110 08:38:03.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.633" level="INFO">${RESULT} = [{'time': 0.024109819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035761100000000073, 'source_diff': 0.00035761100000000073}, {'time': 0.024475069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:03.630" endtime="20201110 08:38:03.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:03.647" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:03.634" endtime="20201110 08:38:03.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.652" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:38:03.651" endtime="20201110 08:38:03.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.654" level="INFO">VALUE: [0.00035761100000000073, 0.0003593879999999987, 0.00035897199999999907, 0.00036076399999999953, 0.00035827800000000007, 0.00035541600000000076, 0.0003574310000000018, 0.0003573340000000008, 0.00035540300000000066, 0.00036074999999999996, 0.0003587089999999987, 0.00036029200000000164, 0.00035988899999999865, 0.00036019500000000065, 0.0003586389999999974, 0.00035898599999999864, 0.00035801400000000025, 0.00036015300000000194, 0.0003549730000000015, 0.00036074999999999996, 0.0003554309999999998, 0.00035879199999999667, 0.0003555139999999943, 0.0003584590000000054, 0.00035815299999999994, 0.0003597909999999982, 0.0003584860000000051, 0.00035991700000000126, 0.00036012499999999587, 0.0003595969999999962, 0.00035531999999999925, 0.00035759800000000064, 0.00036086099999999705, 0.00035618000000000455, 0.00035850000000000465, 0.00035824999999999746, 0.00036113899999999644, 0.0003600139999999988, 0.0003602359999999999, 0.0003549170000000032, 0.0003554860000000021, 0.0003586800000000001, 0.0003582769999999971, 0.0003586809999999996, 0.00036058299999999766, 0.0003554029999999972, 0.00035952799999999785, 0.00035676400000000247, 0.00035787500000000055, 0.00035509699999999866]</msg>
<status status="PASS" starttime="20201110 08:38:03.653" endtime="20201110 08:38:03.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.648" endtime="20201110 08:38:03.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.658" endtime="20201110 08:38:03.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.662" endtime="20201110 08:38:03.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.660" endtime="20201110 08:38:03.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.656" endtime="20201110 08:38:03.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.267" endtime="20201110 08:38:03.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.267" endtime="20201110 08:38:03.683"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.692" endtime="20201110 08:38:03.729"></status>
</kw>
<msg timestamp="20201110 08:38:03.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.691" endtime="20201110 08:38:03.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.730" endtime="20201110 08:38:03.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.733" endtime="20201110 08:38:03.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.688" endtime="20201110 08:38:03.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.686" endtime="20201110 08:38:03.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.742" endtime="20201110 08:38:04.043"></status>
</kw>
<msg timestamp="20201110 08:38:04.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023824264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.741" endtime="20201110 08:38:04.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023824264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.051" endtime="20201110 08:38:04.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.066" endtime="20201110 08:38:04.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.738" endtime="20201110 08:38:04.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.736" endtime="20201110 08:38:04.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.078" level="INFO">${RESULT} = [{'time': 0.024198014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003737499999999991, 'source_diff': 0.0003737499999999991}, {'time': 0.024563403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:04.075" endtime="20201110 08:38:04.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.092" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:04.080" endtime="20201110 08:38:04.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.097" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.096" endtime="20201110 08:38:04.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.099" level="INFO">VALUE: [0.0003737499999999991, 0.00035837500000000105, 0.00035801400000000025, 0.00036034700000000044, 0.00035944400000000043, 0.0003594029999999977, 0.00035747199999999757, 0.00036133400000000135, 0.00035773600000000086, 0.0003571389999999994, 0.00035504199999999986, 0.0003580690000000025, 0.00035862499999999783, 0.000360458000000001, 0.0003591940000000002, 0.00035804200000000286, 0.0003570279999999988, 0.0003613750000000006, 0.00035856999999999903, 0.00035577800000000104, 0.0003581669999999995, 0.0003559019999999982, 0.0003614590000000015, 0.00036081899999999834, 0.0003607779999999991, 0.00035683300000000084, 0.0003559999999999952, 0.00035747299999999704, 0.00035800000000000415, 0.0003565830000000006, 0.00035766599999999954, 0.0003603199999999973, 0.00036047200000000057, 0.00035848599999999814, 0.0003590689999999966, 0.0003556530000000044, 0.00036044400000000143, 0.0003566809999999976, 0.00035858299999999566, 0.0003569449999999974, 0.0003558190000000003, 0.00035669499999999715, 0.0003557920000000006, 0.0003586390000000009, 0.00035829199999999617, 0.0003554720000000025, 0.00035566700000000395, 0.0003607920000000056, 0.00036017999999999467, 0.0003576250000000003]</msg>
<status status="PASS" starttime="20201110 08:38:04.098" endtime="20201110 08:38:04.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.093" endtime="20201110 08:38:04.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.103" endtime="20201110 08:38:04.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.106" endtime="20201110 08:38:04.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.105" endtime="20201110 08:38:04.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.101" endtime="20201110 08:38:04.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.684" endtime="20201110 08:38:04.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.683" endtime="20201110 08:38:04.127"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.136" endtime="20201110 08:38:04.170"></status>
</kw>
<msg timestamp="20201110 08:38:04.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.135" endtime="20201110 08:38:04.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.172" endtime="20201110 08:38:04.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.174" endtime="20201110 08:38:04.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.132" endtime="20201110 08:38:04.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.130" endtime="20201110 08:38:04.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.183" endtime="20201110 08:38:04.485"></status>
</kw>
<msg timestamp="20201110 08:38:04.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021548958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.182" endtime="20201110 08:38:04.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021548958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.489" endtime="20201110 08:38:04.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.501" endtime="20201110 08:38:04.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.179" endtime="20201110 08:38:04.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.177" endtime="20201110 08:38:04.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.508" level="INFO">${RESULT} = [{'time': 0.021929653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038069500000000034, 'source_diff': 0.00038069500000000034}, {'time': 0.022294861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:04.504" endtime="20201110 08:38:04.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.521" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:04.509" endtime="20201110 08:38:04.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.526" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.525" endtime="20201110 08:38:04.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.529" level="INFO">VALUE: [0.00038069500000000034, 0.000357764, 0.00036002799999999835, 0.0003554720000000025, 0.00036006900000000105, 0.00035880500000000023, 0.0003580829999999986, 0.00035526400000000097, 0.00035674999999999943, 0.00036011099999999976, 0.00035656899999999755, 0.0003591940000000002, 0.00035768100000000205, 0.00035665299999999844, 0.0003565279999999983, 0.00035998599999999964, 0.0003558890000000016, 0.0003573190000000018, 0.0003597779999999981, 0.00035672299999999976, 0.000359360999999999, 0.00035483299999999884, 0.00035597199999999954, 0.0003610689999999986, 0.000357666999999999, 0.000355860999999999, 0.0003576809999999986, 0.0003574170000000057, 0.0003557920000000006, 0.0003593050000000042, 0.0003549300000000033, 0.00035936099999999555, 0.00035809800000000114, 0.0003605689999999981, 0.00035565299999999744, 0.0003593610000000025, 0.00035570799999999625, 0.0003608470000000044, 0.0003604999999999997, 0.0003553189999999998, 0.0003584030000000002, 0.0003550829999999991, 0.0003561389999999984, 0.0003602359999999999, 0.0003601800000000016, 0.00035905500000000395, 0.0003554170000000037, 0.00035842999999999986, 0.000358070000000002, 0.0003563190000000008]</msg>
<status status="PASS" starttime="20201110 08:38:04.527" endtime="20201110 08:38:04.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.522" endtime="20201110 08:38:04.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.533" endtime="20201110 08:38:04.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.537" endtime="20201110 08:38:04.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.535" endtime="20201110 08:38:04.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.531" endtime="20201110 08:38:04.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.128" endtime="20201110 08:38:04.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.128" endtime="20201110 08:38:04.559"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.567" endtime="20201110 08:38:04.608"></status>
</kw>
<msg timestamp="20201110 08:38:04.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.566" endtime="20201110 08:38:04.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.609" endtime="20201110 08:38:04.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.612" endtime="20201110 08:38:04.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.563" endtime="20201110 08:38:04.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.561" endtime="20201110 08:38:04.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.621" endtime="20201110 08:38:04.909"></status>
</kw>
<msg timestamp="20201110 08:38:04.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022275931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.619" endtime="20201110 08:38:04.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022275931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.913" endtime="20201110 08:38:04.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.921" endtime="20201110 08:38:04.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.616" endtime="20201110 08:38:04.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.615" endtime="20201110 08:38:04.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.928" level="INFO">${RESULT} = [{'time': 0.022651875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003759439999999996, 'source_diff': 0.0003759439999999996}, {'time': 0.023017333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:04.925" endtime="20201110 08:38:04.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.943" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:04.929" endtime="20201110 08:38:04.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.948" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.947" endtime="20201110 08:38:04.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.951" level="INFO">VALUE: [0.0003759439999999996, 0.00036011099999999976, 0.0003557500000000019, 0.0003608190000000018, 0.0003591670000000005, 0.00035645899999999994, 0.00035637499999999905, 0.00035709700000000066, 0.0003588059999999997, 0.0003571249999999998, 0.00035944400000000043, 0.00036026399999999903, 0.0003599450000000004, 0.00035888899999999765, 0.00035745800000000147, 0.0003578189999999988, 0.00035655600000000093, 0.0003586250000000013, 0.00035701399999999925, 0.00035527799999999707, 0.00035558399999999907, 0.0003585839999999986, 0.0003569029999999987, 0.0003561950000000001, 0.0003553050000000037, 0.000359555999999997, 0.0003593749999999951, 0.0003597909999999982, 0.0003556389999999979, 0.00035695800000000444, 0.00035843100000000627, 0.00035526400000000097, 0.00035800000000000415, 0.0003556389999999979, 0.00035698599999999664, 0.0003599160000000018, 0.00035587499999999855, 0.0003581109999999943, 0.0003590969999999957, 0.0003569019999999992, 0.0003566809999999976, 0.0003581809999999991, 0.00035644399999999743, 0.000358958999999999, 0.00036152799999999985, 0.0003614299999999959, 0.0003594999999999987, 0.00035673600000000333, 0.00035893099999999983, 0.0003565700000000005]</msg>
<status status="PASS" starttime="20201110 08:38:04.949" endtime="20201110 08:38:04.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.944" endtime="20201110 08:38:04.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.954" endtime="20201110 08:38:04.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.958" endtime="20201110 08:38:04.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.956" endtime="20201110 08:38:04.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.953" endtime="20201110 08:38:04.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.560" endtime="20201110 08:38:04.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.559" endtime="20201110 08:38:04.979"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.988" endtime="20201110 08:38:05.025"></status>
</kw>
<msg timestamp="20201110 08:38:05.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.987" endtime="20201110 08:38:05.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.027" endtime="20201110 08:38:05.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.030" endtime="20201110 08:38:05.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.984" endtime="20201110 08:38:05.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.982" endtime="20201110 08:38:05.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.039" endtime="20201110 08:38:05.343"></status>
</kw>
<msg timestamp="20201110 08:38:05.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023944181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024298833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.038" endtime="20201110 08:38:05.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023944181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024298833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.347" endtime="20201110 08:38:05.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.355" endtime="20201110 08:38:05.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.035" endtime="20201110 08:38:05.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.033" endtime="20201110 08:38:05.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.361" level="INFO">${RESULT} = [{'time': 0.024298833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035465200000000044, 'source_diff': 0.00035465200000000044}, {'time': 0.024664111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:05.358" endtime="20201110 08:38:05.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.420" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:05.362" endtime="20201110 08:38:05.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.424" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.423" endtime="20201110 08:38:05.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.426" level="INFO">VALUE: [0.00035465200000000044, 0.0003610139999999998, 0.0003574449999999979, 0.0003564999999999992, 0.0003553200000000027, 0.0003553890000000011, 0.00035795800000000197, 0.00035943100000000033, 0.0003592640000000015, 0.0003583749999999976, 0.00035944400000000043, 0.0003580830000000021, 0.0003571800000000021, 0.00035672299999999976, 0.00035851400000000075, 0.0003569860000000001, 0.0003582089999999982, 0.0003585829999999991, 0.0003584999999999977, 0.0003582640000000005, 0.0003594299999999974, 0.00035787500000000055, 0.0003562089999999962, 0.0003554720000000025, 0.0003551669999999965, 0.00035527700000000106, 0.000356666999999998, 0.00036009700000000366, 0.0003571389999999994, 0.0003572359999999969, 0.0003572219999999973, 0.00035963899999999493, 0.0003571249999999998, 0.0003590280000000043, 0.0003614299999999959, 0.0003613610000000045, 0.0003556249999999983, 0.0003607220000000008, 0.00035609699999999966, 0.000358667, 0.00035494500000000234, 0.00035747299999999704, 0.0003599999999999992, 0.0003573060000000017, 0.0003600830000000041, 0.00035569499999999615, 0.00035844399999999943, 0.0003553050000000002, 0.0003607360000000004, 0.00035705600000000143]</msg>
<status status="PASS" starttime="20201110 08:38:05.425" endtime="20201110 08:38:05.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.420" endtime="20201110 08:38:05.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.430" endtime="20201110 08:38:05.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.433" endtime="20201110 08:38:05.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.432" endtime="20201110 08:38:05.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.428" endtime="20201110 08:38:05.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.980" endtime="20201110 08:38:05.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.980" endtime="20201110 08:38:05.454"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.463" endtime="20201110 08:38:05.497"></status>
</kw>
<msg timestamp="20201110 08:38:05.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.462" endtime="20201110 08:38:05.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.498" endtime="20201110 08:38:05.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.501" endtime="20201110 08:38:05.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.459" endtime="20201110 08:38:05.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.456" endtime="20201110 08:38:05.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.510" endtime="20201110 08:38:05.796"></status>
</kw>
<msg timestamp="20201110 08:38:05.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021162764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021530653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.508" endtime="20201110 08:38:05.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021162764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021530653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.801" endtime="20201110 08:38:05.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.809" endtime="20201110 08:38:05.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.505" endtime="20201110 08:38:05.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.504" endtime="20201110 08:38:05.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.816" level="INFO">${RESULT} = [{'time': 0.021530653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003678889999999997, 'source_diff': 0.0003678889999999997}, {'time': 0.021895917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:05.812" endtime="20201110 08:38:05.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.830" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:05.817" endtime="20201110 08:38:05.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.834" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.833" endtime="20201110 08:38:05.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.837" level="INFO">VALUE: [0.0003678889999999997, 0.0003600280000000018, 0.0003602090000000002, 0.00035876299999999806, 0.0003562080000000002, 0.0003592640000000015, 0.00036134799999999745, 0.0003613190000000023, 0.00035961099999999926, 0.00035579199999999714, 0.00035629100000000163, 0.0003600970000000002, 0.00036041700000000176, 0.00035605600000000043, 0.0003589449999999994, 0.0003563469999999999, 0.0003571669999999985, 0.00035801400000000025, 0.0003577220000000013, 0.0003551530000000004, 0.000360458000000001, 0.00035856999999999903, 0.00036125000000000046, 0.0003610000000000002, 0.00035655500000000145, 0.00035655600000000093, 0.0003587359999999984, 0.0003597079999999968, 0.00035993100000000083, 0.0003551249999999978, 0.0003551249999999978, 0.00035483299999999884, 0.0003589030000000007, 0.00035729199999999517, 0.0003586800000000001, 0.000356666999999998, 0.0003569449999999974, 0.0003566249999999993, 0.0003549170000000032, 0.00035927800000000454, 0.00035891700000000026, 0.00035894399999999993, 0.0003555410000000009, 0.0003592779999999976, 0.0003569999999999962, 0.0003566389999999989, 0.00035594500000000334, 0.0003612909999999997, 0.0003598469999999965, 0.0003607220000000008]</msg>
<status status="PASS" starttime="20201110 08:38:05.836" endtime="20201110 08:38:05.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.831" endtime="20201110 08:38:05.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.841" endtime="20201110 08:38:05.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.844" endtime="20201110 08:38:05.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.843" endtime="20201110 08:38:05.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.839" endtime="20201110 08:38:05.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.455" endtime="20201110 08:38:05.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.454" endtime="20201110 08:38:05.865"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.875" endtime="20201110 08:38:05.910"></status>
</kw>
<msg timestamp="20201110 08:38:05.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.873" endtime="20201110 08:38:05.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.911" endtime="20201110 08:38:05.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.914" endtime="20201110 08:38:05.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.870" endtime="20201110 08:38:05.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.868" endtime="20201110 08:38:05.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.924" endtime="20201110 08:38:06.233"></status>
</kw>
<msg timestamp="20201110 08:38:06.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022451472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.922" endtime="20201110 08:38:06.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022451472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.237" endtime="20201110 08:38:06.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.246" endtime="20201110 08:38:06.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.919" endtime="20201110 08:38:06.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.917" endtime="20201110 08:38:06.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.253" level="INFO">${RESULT} = [{'time': 0.022451472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003834999999999984, 'source_diff': 0.0003834999999999984}, {'time': 0.022816833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:06.249" endtime="20201110 08:38:06.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.267" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:06.254" endtime="20201110 08:38:06.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.271" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.270" endtime="20201110 08:38:06.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.274" level="INFO">VALUE: [0.0003834999999999984, 0.00035959700000000316, 0.0003571799999999986, 0.0003548890000000006, 0.0003569860000000001, 0.0003604029999999987, 0.00035615299999999794, 0.0003557500000000019, 0.0003563609999999995, 0.00035894399999999993, 0.00035508399999999857, 0.0003608480000000004, 0.0003575830000000016, 0.000356666999999998, 0.00035997299999999954, 0.0003610420000000024, 0.00035777799999999957, 0.0003547500000000009, 0.00035829199999999964, 0.0003556800000000006, 0.000357861000000001, 0.0003589999999999982, 0.0003581809999999991, 0.0003558190000000003, 0.00035523600000000183, 0.00035859700000000216, 0.0003603890000000026, 0.0003556809999999966, 0.0003612220000000013, 0.000355763000000002, 0.0003572779999999956, 0.00035905500000000395, 0.00036126400000000003, 0.0003559579999999965, 0.00035604200000000086, 0.0003564159999999983, 0.00035527800000000054, 0.00036086099999999705, 0.00035622200000000326, 0.0003605969999999972, 0.00035594500000000334, 0.0003604030000000022, 0.00036037500000000305, 0.000359959, 0.00035797199999999807, 0.0003612079999999948, 0.00035809800000000114, 0.000359458, 0.0003574589999999975, 0.0003546810000000025]</msg>
<status status="PASS" starttime="20201110 08:38:06.273" endtime="20201110 08:38:06.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.268" endtime="20201110 08:38:06.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.278" endtime="20201110 08:38:06.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.281" endtime="20201110 08:38:06.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.280" endtime="20201110 08:38:06.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.276" endtime="20201110 08:38:06.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.866" endtime="20201110 08:38:06.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.866" endtime="20201110 08:38:06.302"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.311" endtime="20201110 08:38:06.346"></status>
</kw>
<msg timestamp="20201110 08:38:06.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.310" endtime="20201110 08:38:06.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.348" endtime="20201110 08:38:06.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.350" endtime="20201110 08:38:06.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.307" endtime="20201110 08:38:06.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.305" endtime="20201110 08:38:06.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.360" endtime="20201110 08:38:06.647"></status>
</kw>
<msg timestamp="20201110 08:38:06.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022052958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.358" endtime="20201110 08:38:06.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022052958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.651" endtime="20201110 08:38:06.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.659" endtime="20201110 08:38:06.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.355" endtime="20201110 08:38:06.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.354" endtime="20201110 08:38:06.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.666" level="INFO">${RESULT} = [{'time': 0.022433708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038074999999999914, 'source_diff': 0.00038074999999999914}, {'time': 0.022798889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:06.663" endtime="20201110 08:38:06.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.680" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:06.667" endtime="20201110 08:38:06.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.685" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.684" endtime="20201110 08:38:06.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.687" level="INFO">VALUE: [0.00038074999999999914, 0.0003546949999999986, 0.0003558190000000003, 0.00035948599999999914, 0.0003557079999999997, 0.0003579159999999998, 0.00035640300000000166, 0.0003576250000000003, 0.0003573470000000009, 0.00035733300000000134, 0.0003584160000000003, 0.00035659700000000016, 0.0003609870000000001, 0.0003550140000000007, 0.00036029199999999817, 0.0003565700000000005, 0.00036113800000000043, 0.0003547080000000022, 0.0003566530000000019, 0.0003580829999999986, 0.00035720799999999775, 0.00035915300000000094, 0.00035609699999999966, 0.0003571249999999998, 0.0003569860000000001, 0.00035559699999999916, 0.0003549860000000016, 0.0003546530000000034, 0.00035559699999999916, 0.0003553200000000062, 0.00036099999999999327, 0.0003590559999999965, 0.0003548049999999997, 0.00035638900000000556, 0.00035923600000000583, 0.0003576250000000003, 0.0003582359999999979, 0.0003556249999999983, 0.00035705500000000195, 0.00035604200000000086, 0.00035900000000000515, 0.000359458, 0.00035594399999999693, 0.00036080499999999877, 0.0003571799999999986, 0.00036058299999999766, 0.0003609160000000028, 0.00035847199999999857, 0.00035511099999999823, 0.00036113899999999644]</msg>
<status status="PASS" starttime="20201110 08:38:06.686" endtime="20201110 08:38:06.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.681" endtime="20201110 08:38:06.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.691" endtime="20201110 08:38:06.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.695" endtime="20201110 08:38:06.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.693" endtime="20201110 08:38:06.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.689" endtime="20201110 08:38:06.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.303" endtime="20201110 08:38:06.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.303" endtime="20201110 08:38:06.716"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.725" endtime="20201110 08:38:06.763"></status>
</kw>
<msg timestamp="20201110 08:38:06.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.723" endtime="20201110 08:38:06.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.764" endtime="20201110 08:38:06.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.767" endtime="20201110 08:38:06.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.721" endtime="20201110 08:38:06.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.718" endtime="20201110 08:38:06.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.777" endtime="20201110 08:38:07.063"></status>
</kw>
<msg timestamp="20201110 08:38:07.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025793903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026151764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.775" endtime="20201110 08:38:07.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025793903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026151764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.068" endtime="20201110 08:38:07.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.076" endtime="20201110 08:38:07.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.772" endtime="20201110 08:38:07.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.771" endtime="20201110 08:38:07.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:07.083" level="INFO">${RESULT} = [{'time': 0.026151764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000357861000000001, 'source_diff': 0.000357861000000001}, {'time': 0.026516917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:07.080" endtime="20201110 08:38:07.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:07.098" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:38:07.084" endtime="20201110 08:38:07.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.103" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:38:07.102" endtime="20201110 08:38:07.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.105" level="INFO">VALUE: [0.000357861000000001, 0.0003571950000000011, 0.00035658400000000007, 0.000355972000000003, 0.00035830499999999973, 0.00035755599999999846, 0.0003601529999999985, 0.00035980500000000123, 0.00035651399999999875, 0.00035673599999999986, 0.00035497199999999854, 0.0003578470000000014, 0.00035511099999999823, 0.0003560410000000014, 0.000356360999999996, 0.0003590140000000047, 0.0003590140000000047, 0.0003549730000000015, 0.00036073699999999986, 0.00035637499999999905, 0.00035809700000000166, 0.0003610689999999986, 0.0003549590000000019, 0.0003604030000000022, 0.00035815299999999994, 0.00035591699999999726, 0.00036030599999999774, 0.00035609799999999914, 0.0003581390000000004, 0.0003608190000000053, 0.0003558339999999993, 0.00035991599999999485, 0.00035958400000000307, 0.00035844399999999943, 0.00036136099999999755, 0.0003550280000000003, 0.00035626400000000197, 0.00035979199999999767, 0.0003581950000000056, 0.0003593329999999964, 0.0003573050000000022, 0.00035870799999999925, 0.0003584999999999977, 0.00035793100000000577, 0.00035477800000000004, 0.0003582920000000031, 0.0003581109999999943, 0.0003589449999999994, 0.00035787500000000055, 0.0003601940000000012]</msg>
<status status="PASS" starttime="20201110 08:38:07.104" endtime="20201110 08:38:07.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.099" endtime="20201110 08:38:07.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.109" endtime="20201110 08:38:07.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.113" endtime="20201110 08:38:07.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.111" endtime="20201110 08:38:07.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.107" endtime="20201110 08:38:07.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.717" endtime="20201110 08:38:07.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.716" endtime="20201110 08:38:07.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.047" endtime="20201110 08:38:07.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.138" endtime="20201110 08:38:07.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.136" endtime="20201110 08:38:07.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.135" endtime="20201110 08:38:07.158"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:24.974" endtime="20201110 08:38:07.159" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:36:41.518" endtime="20201110 08:38:07.162"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.217" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:38:07.226" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:38:08.373" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:38:07.216" endtime="20201110 08:38:08.374"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.377" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:38:08.375" endtime="20201110 08:38:08.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.215" endtime="20201110 08:38:08.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.380" endtime="20201110 08:38:08.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.378" endtime="20201110 08:38:08.569"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.583" endtime="20201110 08:38:08.603"></status>
</kw>
<msg timestamp="20201110 08:38:08.604" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.581" endtime="20201110 08:38:08.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.606" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.605" endtime="20201110 08:38:08.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.610" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:08.608" endtime="20201110 08:38:08.610"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:08.578" endtime="20201110 08:38:08.611"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:08.576" endtime="20201110 08:38:08.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.574" endtime="20201110 08:38:08.612"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:08.617" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:08.616" endtime="20201110 08:38:08.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.613" endtime="20201110 08:38:08.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.573" endtime="20201110 08:38:08.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.573" endtime="20201110 08:38:08.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.618" endtime="20201110 08:38:08.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.571" endtime="20201110 08:38:08.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.629" endtime="20201110 08:38:08.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.569" endtime="20201110 08:38:08.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.213" endtime="20201110 08:38:08.632"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.638" endtime="20201110 08:38:08.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.636" endtime="20201110 08:38:08.658"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.672" endtime="20201110 08:38:08.689"></status>
</kw>
<msg timestamp="20201110 08:38:08.689" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.670" endtime="20201110 08:38:08.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.692" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.690" endtime="20201110 08:38:08.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.695" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:08.693" endtime="20201110 08:38:08.695"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:08.667" endtime="20201110 08:38:08.696"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:08.664" endtime="20201110 08:38:08.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.663" endtime="20201110 08:38:08.697"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:08.700" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:08.700" endtime="20201110 08:38:08.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.697" endtime="20201110 08:38:08.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.662" endtime="20201110 08:38:08.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.662" endtime="20201110 08:38:08.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.702" endtime="20201110 08:38:08.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.660" endtime="20201110 08:38:08.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.659" endtime="20201110 08:38:08.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.635" endtime="20201110 08:38:08.705"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:08.708" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.718" endtime="20201110 08:38:10.832"></status>
</kw>
<msg timestamp="20201110 08:38:10.834" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 396362, 'start-iter': 1, 'wakeups': [406402, 416412, 426422, 436401, 4...</msg>
<status status="PASS" starttime="20201110 08:38:08.716" endtime="20201110 08:38:10.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.840" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 396362, 'start-iter': 1, 'wakeups': [406402, 416412, 426422, 436401, 4...</msg>
<status status="PASS" starttime="20201110 08:38:10.836" endtime="20201110 08:38:10.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.843" endtime="20201110 08:38:10.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.714" endtime="20201110 08:38:10.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.710" endtime="20201110 08:38:10.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.855" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 1, 'wakeups': [406402, 416412, 426422, 436401, 446411, 456420, 466400, 476409, 486419, 496398, 506408, 516418, 526397, 536407, 546417, 556396, 566406, 576416, 586395, ...</msg>
<status status="PASS" starttime="20201110 08:38:10.851" endtime="20201110 08:38:10.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.864" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:10.862" endtime="20201110 08:38:10.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.869" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:10.866" endtime="20201110 08:38:10.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.857" endtime="20201110 08:38:10.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.878" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:10.877" endtime="20201110 08:38:10.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.880" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:10.879" endtime="20201110 08:38:10.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.872" endtime="20201110 08:38:10.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.885" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:10.884" endtime="20201110 08:38:10.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.887" level="INFO">VALUE: 396362</msg>
<status status="PASS" starttime="20201110 08:38:10.886" endtime="20201110 08:38:10.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.882" endtime="20201110 08:38:10.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.892" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:10.891" endtime="20201110 08:38:10.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.895" level="INFO">VALUE: [406402, 416412, 426422, 436401, 446411, 456420, 466400, 476409, 486419, 496398, 506408, 516418, 526397, 536407, 546417, 556396, 566406, 576416, 586395, 596405, 606414, 616394, 626403, 636413, 646392, 656402, 666412, 676422, 686401, 696411, 706420, 716400, 726409, 736419, 746398, 756408, 766418, 776397, 786407, 796417, 806396, 816406, 826416, 836395, 846405, 856414, 866394, 876403, 886413, 896392, 906402, 916412, 926422, 936401, 946411, 956420, 966400, 976409, 986419, 996398, 1006408, 1016418, 1026397, 1036407, 1046417, 1056396, 1066406, 1076416, 1086395, 1096405, 1106414, 1116394, 1126403, 1136413, 1146392, 1156402, 1166412, 1176422, 1186401, 1196411, 1206420, 1216400, 1226409, 1236419, 1246398, 1256408, 1266418, 1276397, 1286407, 1296417, 1306396, 1316406, 1326416, 1336395, 1346405, 1356414, 1366394, 1376403, 1386413, 1396392]</msg>
<status status="PASS" starttime="20201110 08:38:10.894" endtime="20201110 08:38:10.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.889" endtime="20201110 08:38:10.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.902" endtime="20201110 08:38:11.199"></status>
</kw>
<msg timestamp="20201110 08:38:11.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070816125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080839597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.901" endtime="20201110 08:38:11.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070816125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080839597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.203" endtime="20201110 08:38:11.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.211" endtime="20201110 08:38:11.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.898" endtime="20201110 08:38:11.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.896" endtime="20201110 08:38:11.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:11.240" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:11.215" endtime="20201110 08:38:11.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.245" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:11.244" endtime="20201110 08:38:11.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.247" level="INFO">VALUE: 0.070816125</msg>
<status status="PASS" starttime="20201110 08:38:11.246" endtime="20201110 08:38:11.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.241" endtime="20201110 08:38:11.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.252" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:11.251" endtime="20201110 08:38:11.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.254" level="INFO">VALUE: [0.080839597, 0.090852542, 0.100868028, 0.110853694, 0.12086925, 0.130886139, 0.140872528, 0.150889556, 0.160905958, 0.170892681, 0.180910306, 0.190925806, 0.200908472, 0.210922139, 0.220935389, 0.230917847, 0.240931056, 0.250944125, 0.260926139, 0.270939375, 0.280951486, 0.290934097, 0.300946139, 0.310959125, 0.320940181, 0.330953125, 0.340965, 0.350977028, 0.360958625, 0.370969986, 0.380982014, 0.390963597, 0.400975569, 0.410991458, 0.420976778, 0.430993722, 0.441010375, 0.450996903, 0.461013181, 0.471029417, 0.481015028, 0.491030639, 0.501045722, 0.511028694, 0.521042014, 0.531054833, 0.541036028, 0.551048653, 0.561061722, 0.571044931, 0.581059042, 0.591071889, 0.601083319, 0.611065236, 0.621077167, 0.631089278, 0.641070389, 0.651081694, 0.661094181, 0.671075653, 0.681087903, 0.691099986, 0.701081403, 0.711094167, 0.721106042, 0.731087083, 0.741098667, 0.751110333, 0.761092403, 0.771106972, 0.781120681, 0.791104944, 0.801121403, 0.811137347, 0.821120944, 0.831133431, 0.841144694, 0.851159472, 0.861145014, 0.871161153, 0.881177181, 0.891161236, 0.90117325, 0.911184944, 0.921166917, 0.931179639, 0.941192486, 0.951174194, 0.961186944, 0.971200139, 0.981182639, 0.991196083, 1.001208333, 1.011189806, 1.021203431, 1.031219722, 1.041205486, 1.051221111, 1.061236056, 1.071220889] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:11.253" endtime="20201110 08:38:11.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.248" endtime="20201110 08:38:11.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.258" endtime="20201110 08:38:11.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.261" endtime="20201110 08:38:11.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.260" endtime="20201110 08:38:11.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.256" endtime="20201110 08:38:11.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.709" endtime="20201110 08:38:11.282"></status>
</kw>
<msg timestamp="20201110 08:38:11.282" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.291" endtime="20201110 08:38:13.418"></status>
</kw>
<msg timestamp="20201110 08:38:13.420" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2977722, 'start-iter': 1, 'wakeups': [2987792, 2997772, 3007781, 30177...</msg>
<status status="PASS" starttime="20201110 08:38:11.289" endtime="20201110 08:38:13.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.427" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2977722, 'start-iter': 1, 'wakeups': [2987792, 2997772, 3007781, 30177...</msg>
<status status="PASS" starttime="20201110 08:38:13.422" endtime="20201110 08:38:13.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.430" endtime="20201110 08:38:13.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.286" endtime="20201110 08:38:13.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.284" endtime="20201110 08:38:13.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.437" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 1, 'wakeups': [2987792, 2997772, 3007781, 3017761, 3027770, 3037780, 3047760, 3057769, 3067779, 3077758, 3087768, 3097778, 3107757, 3117767, 3127777, 3137756, 3147766,...</msg>
<status status="PASS" starttime="20201110 08:38:13.435" endtime="20201110 08:38:13.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.443" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:13.441" endtime="20201110 08:38:13.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.446" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:13.444" endtime="20201110 08:38:13.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.438" endtime="20201110 08:38:13.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.452" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:13.451" endtime="20201110 08:38:13.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.454" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:13.453" endtime="20201110 08:38:13.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.448" endtime="20201110 08:38:13.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.459" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:13.458" endtime="20201110 08:38:13.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.461" level="INFO">VALUE: 2977722</msg>
<status status="PASS" starttime="20201110 08:38:13.460" endtime="20201110 08:38:13.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.455" endtime="20201110 08:38:13.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.466" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:13.465" endtime="20201110 08:38:13.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.468" level="INFO">VALUE: [2987792, 2997772, 3007781, 3017761, 3027770, 3037780, 3047760, 3057769, 3067779, 3077758, 3087768, 3097778, 3107757, 3117767, 3127777, 3137756, 3147766, 3157775, 3167755, 3177764, 3187774, 3197753, 3207763, 3217773, 3227783, 3237762, 3247772, 3257781, 3267761, 3277770, 3287780, 3297760, 3307769, 3317779, 3327758, 3337768, 3347778, 3357757, 3367767, 3377777, 3387756, 3397766, 3407775, 3417755, 3427764, 3437774, 3447753, 3457763, 3467773, 3477783, 3487762, 3497772, 3507781, 3517761, 3527770, 3537780, 3547760, 3557769, 3567779, 3577758, 3587768, 3597778, 3607757, 3617767, 3627777, 3637756, 3647766, 3657775, 3667755, 3677764, 3687774, 3697753, 3707763, 3717773, 3727783, 3737762, 3747772, 3757781, 3767761, 3777770, 3787780, 3797760, 3807769, 3817779, 3827758, 3837768, 3847778, 3857757, 3867767, 3877777, 3887756, 3897766, 3907775, 3917755, 3927764, 3937774, 3947753, 3957763, 3967773, 3977783]</msg>
<status status="PASS" starttime="20201110 08:38:13.467" endtime="20201110 08:38:13.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.462" endtime="20201110 08:38:13.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.475" endtime="20201110 08:38:13.767"></status>
</kw>
<msg timestamp="20201110 08:38:13.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024537694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034562681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.474" endtime="20201110 08:38:13.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024537694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034562681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.771" endtime="20201110 08:38:13.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.778" endtime="20201110 08:38:13.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.471" endtime="20201110 08:38:13.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.470" endtime="20201110 08:38:13.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.807" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:13.782" endtime="20201110 08:38:13.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.811" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:13.810" endtime="20201110 08:38:13.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.813" level="INFO">VALUE: 0.024537694</msg>
<status status="PASS" starttime="20201110 08:38:13.812" endtime="20201110 08:38:13.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.808" endtime="20201110 08:38:13.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.823" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:13.822" endtime="20201110 08:38:13.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.825" level="INFO">VALUE: [0.034562681, 0.044544375, 0.054555764, 0.064537875, 0.074551292, 0.084563556, 0.094544556, 0.104556861, 0.114570389, 0.124553639, 0.134566556, 0.144579486, 0.154562069, 0.164578611, 0.174595403, 0.184582319, 0.194595736, 0.204606931, 0.214589153, 0.224601361, 0.234615986, 0.244600389, 0.254616389, 0.264632014, 0.274648042, 0.284634319, 0.294650736, 0.304667569, 0.314652611, 0.324668111, 0.334684514, 0.344670278, 0.354686264, 0.36470225, 0.374688083, 0.384704708, 0.394721944, 0.404703403, 0.4147155, 0.424727417, 0.434710472, 0.444726556, 0.454740556, 0.464721569, 0.474732694, 0.48474425, 0.494725222, 0.504736556, 0.514750861, 0.524766875, 0.534749556, 0.544761694, 0.554774431, 0.564756292, 0.574769583, 0.584783, 0.594764931, 0.604776361, 0.614787861, 0.624771014, 0.634786764, 0.644803264, 0.654785528, 0.664797125, 0.674809167, 0.684791056, 0.694803153, 0.704815986, 0.714802181, 0.724817875, 0.734830708, 0.744811625, 0.75482275, 0.764833458, 0.774844611, 0.784825458, 0.794836778, 0.804848125, 0.81482875, 0.824840222, 0.834851653, 0.844833431, 0.854847361, 0.864863361, 0.8748485, 0.884864, 0.894879958, 0.904865528, 0.914881139, 0.924897542, 0.934882597, 0.944898139, 0.954915667, 0.964902181, 0.974919333, 0.984934736, 0.994919639, 1.004936111, 1.014952792, 1.024968986] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:13.824" endtime="20201110 08:38:13.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.815" endtime="20201110 08:38:13.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.828" endtime="20201110 08:38:13.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.832" endtime="20201110 08:38:13.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.830" endtime="20201110 08:38:13.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.827" endtime="20201110 08:38:13.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.283" endtime="20201110 08:38:13.852"></status>
</kw>
<msg timestamp="20201110 08:38:13.853" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.861" endtime="20201110 08:38:15.975"></status>
</kw>
<msg timestamp="20201110 08:38:15.976" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5549133, 'start-iter': 1, 'wakeups': [5559204, 5569183, 5579193, 55891...</msg>
<status status="PASS" starttime="20201110 08:38:13.859" endtime="20201110 08:38:15.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.982" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5549133, 'start-iter': 1, 'wakeups': [5559204, 5569183, 5579193, 55891...</msg>
<status status="PASS" starttime="20201110 08:38:15.978" endtime="20201110 08:38:15.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.984" endtime="20201110 08:38:15.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.856" endtime="20201110 08:38:15.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.855" endtime="20201110 08:38:15.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:15.991" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 1, 'wakeups': [5559204, 5569183, 5579193, 5589172, 5599182, 5609191, 5619171, 5629180, 5639190, 5649169, 5659179, 5669189, 5679168, 5689178, 5699188, 5709167, 5719177,...</msg>
<status status="PASS" starttime="20201110 08:38:15.989" endtime="20201110 08:38:15.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.995" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:15.994" endtime="20201110 08:38:15.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.998" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:15.997" endtime="20201110 08:38:15.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.992" endtime="20201110 08:38:15.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.003" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:16.002" endtime="20201110 08:38:16.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.005" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:16.004" endtime="20201110 08:38:16.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.000" endtime="20201110 08:38:16.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.010" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:16.009" endtime="20201110 08:38:16.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.012" level="INFO">VALUE: 5549133</msg>
<status status="PASS" starttime="20201110 08:38:16.011" endtime="20201110 08:38:16.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.006" endtime="20201110 08:38:16.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.017" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:16.016" endtime="20201110 08:38:16.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.019" level="INFO">VALUE: [5559204, 5569183, 5579193, 5589172, 5599182, 5609191, 5619171, 5629180, 5639190, 5649169, 5659179, 5669189, 5679168, 5689178, 5699188, 5709167, 5719177, 5729187, 5739166, 5749176, 5759185, 5769165, 5779174, 5789184, 5799163, 5809173, 5819183, 5829193, 5839172, 5849182, 5859191, 5869171, 5879180, 5889190, 5899169, 5909179, 5919189, 5929168, 5939178, 5949188, 5959167, 5969177, 5979187, 5989166, 5999176, 6009185, 6019165, 6029174, 6039184, 6049163, 6059173, 6069183, 6079193, 6089172, 6099182, 6109191, 6119171, 6129180, 6139190, 6149169, 6159179, 6169189, 6179168, 6189178, 6199188, 6209167, 6219177, 6229187, 6239166, 6249176, 6259185, 6269165, 6279174, 6289184, 6299163, 6309173, 6319183, 6329193, 6339172, 6349182, 6359191, 6369171, 6379180, 6389190, 6399169, 6409179, 6419189, 6429168, 6439178, 6449188, 6459167, 6469177, 6479187, 6489166, 6499176, 6509185, 6519165, 6529174, 6539184, 6549163]</msg>
<status status="PASS" starttime="20201110 08:38:16.018" endtime="20201110 08:38:16.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.014" endtime="20201110 08:38:16.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.026" endtime="20201110 08:38:16.315"></status>
</kw>
<msg timestamp="20201110 08:38:16.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021427403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031458361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.025" endtime="20201110 08:38:16.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021427403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031458361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.319" endtime="20201110 08:38:16.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.326" endtime="20201110 08:38:16.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.022" endtime="20201110 08:38:16.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.021" endtime="20201110 08:38:16.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.354" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:16.330" endtime="20201110 08:38:16.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.358" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:16.357" endtime="20201110 08:38:16.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.360" level="INFO">VALUE: 0.021427403</msg>
<status status="PASS" starttime="20201110 08:38:16.359" endtime="20201110 08:38:16.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.355" endtime="20201110 08:38:16.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.367" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:16.366" endtime="20201110 08:38:16.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.370" level="INFO">VALUE: [0.031458361, 0.041438389, 0.051452569, 0.0614375, 0.071452986, 0.081468569, 0.091452583, 0.101463028, 0.111473056, 0.121452847, 0.131463431, 0.141473264, 0.151452986, 0.161463014, 0.171473611, 0.181453611, 0.191465569, 0.201479236, 0.211460681, 0.221473333, 0.231486125, 0.241467861, 0.251481694, 0.261496806, 0.271482542, 0.281498028, 0.291513361, 0.301529306, 0.311515319, 0.321531944, 0.331549153, 0.341535847, 0.351551917, 0.361569486, 0.371555722, 0.381573097, 0.391589556, 0.401575736, 0.411593194, 0.42160975, 0.431596181, 0.441612653, 0.451629403, 0.461615417, 0.471631972, 0.481648847, 0.491635, 0.501651819, 0.511668431, 0.521655194, 0.531671931, 0.541685514, 0.551698333, 0.561680542, 0.571694278, 0.581707944, 0.591693042, 0.601711222, 0.611730028, 0.621717347, 0.631734583, 0.641751833, 0.651738583, 0.661756153, 0.671773583, 0.681760417, 0.691777583, 0.701795069, 0.711782583, 0.721796625, 0.73180975, 0.74179125, 0.751803903, 0.7618155, 0.771797194, 0.781809833, 0.791821569, 0.801833556, 0.811815306, 0.821827806, 0.831839653, 0.841821306, 0.851834083, 0.861847431, 0.871831931, 0.881848042, 0.891864208, 0.901850847, 0.911866375, 0.921882917, 0.931869069, 0.941885389, 0.951901375, 0.961883764, 0.971895556, 0.981906764, 0.991887194, 1.001899125, 1.011910403, 1.021892292] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:16.369" endtime="20201110 08:38:16.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.362" endtime="20201110 08:38:16.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.374" endtime="20201110 08:38:16.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.379" endtime="20201110 08:38:16.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.376" endtime="20201110 08:38:16.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.372" endtime="20201110 08:38:16.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.853" endtime="20201110 08:38:16.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.707" endtime="20201110 08:38:16.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.706" endtime="20201110 08:38:16.400"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:16.402" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.410" endtime="20201110 08:38:18.506"></status>
</kw>
<msg timestamp="20201110 08:38:18.506" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8100158, 'start-iter': 1, 'wakeups': [8110229, 8120239, 8130249, 81402...</msg>
<status status="PASS" starttime="20201110 08:38:16.409" endtime="20201110 08:38:18.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.509" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8100158, 'start-iter': 1, 'wakeups': [8110229, 8120239, 8130249, 81402...</msg>
<status status="PASS" starttime="20201110 08:38:18.507" endtime="20201110 08:38:18.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.510" endtime="20201110 08:38:18.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.406" endtime="20201110 08:38:18.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.404" endtime="20201110 08:38:18.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.515" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 2, 'wakeups': [8110229, 8120239, 8130249, 8140228, 8150238, 8160247, 8170227, 8180236, 8190246, 8200225, 8210235, 8220245, 8230224, 8240234, 8250244, 8260223, 8270233,...</msg>
<status status="PASS" starttime="20201110 08:38:18.513" endtime="20201110 08:38:18.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.519" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:18.518" endtime="20201110 08:38:18.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.521" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:18.520" endtime="20201110 08:38:18.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.516" endtime="20201110 08:38:18.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.526" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:18.525" endtime="20201110 08:38:18.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.528" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:18.527" endtime="20201110 08:38:18.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.523" endtime="20201110 08:38:18.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.534" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:18.533" endtime="20201110 08:38:18.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.536" level="INFO">VALUE: 8100158</msg>
<status status="PASS" starttime="20201110 08:38:18.535" endtime="20201110 08:38:18.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.530" endtime="20201110 08:38:18.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.541" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:18.540" endtime="20201110 08:38:18.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.544" level="INFO">VALUE: [8110229, 8120239, 8130249, 8140228, 8150238, 8160247, 8170227, 8180236, 8190246, 8200225, 8210235, 8220245, 8230224, 8240234, 8250244, 8260223, 8270233, 8280242, 8290222, 8300231, 8310241, 8320220, 8330230, 8340240, 8350219, 8360229, 8370239, 8380249, 8390228, 8400238, 8410247, 8420227, 8430236, 8440246, 8450225, 8460235, 8470245, 8480224, 8490234, 8500244, 8510223, 8520233, 8530242, 8540222, 8550231, 8560241, 8570220, 8580230, 8590240, 8600219, 8610229, 8620239, 8630249, 8640228, 8650238, 8660247, 8670227, 8680236, 8690246, 8700225, 8710235, 8720245, 8730224, 8740234, 8750244, 8760223, 8770233, 8780242, 8790222, 8800231, 8810241, 8820220, 8830230, 8840240, 8850219, 8860229, 8870239, 8880249, 8890228, 8900238, 8910247, 8920227, 8930236, 8940246, 8950225, 8960235, 8970245, 8980224, 8990234, 9000244, 9010223, 9020233, 9030242, 9040222, 9050231, 9060241, 9070220, 9080230, 9090240, 9100219]</msg>
<status status="PASS" starttime="20201110 08:38:18.542" endtime="20201110 08:38:18.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.538" endtime="20201110 08:38:18.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.551" endtime="20201110 08:38:18.841"></status>
</kw>
<msg timestamp="20201110 08:38:18.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021696917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031746194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.549" endtime="20201110 08:38:18.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021696917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031746194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.845" endtime="20201110 08:38:18.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.853" endtime="20201110 08:38:18.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.547" endtime="20201110 08:38:18.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.545" endtime="20201110 08:38:18.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.881" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:18.856" endtime="20201110 08:38:18.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.885" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:18.884" endtime="20201110 08:38:18.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.888" level="INFO">VALUE: 0.021696917</msg>
<status status="PASS" starttime="20201110 08:38:18.887" endtime="20201110 08:38:18.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.882" endtime="20201110 08:38:18.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.894" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:18.893" endtime="20201110 08:38:18.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.896" level="INFO">VALUE: [0.031746194, 0.0417275, 0.051709056, 0.061660083, 0.071642069, 0.081623444, 0.091575014, 0.101557028, 0.111539403, 0.121490917, 0.131473125, 0.141455347, 0.151407125, 0.161391458, 0.171377403, 0.181333319, 0.191319222, 0.201305153, 0.211262722, 0.22124925, 0.231233347, 0.241185417, 0.251167972, 0.261154069, 0.271109694, 0.281096708, 0.291084153, 0.301067417, 0.311020486, 0.321004389, 0.330987708, 0.340940083, 0.350922667, 0.360905681, 0.370857542, 0.380839514, 0.390820694, 0.400771153, 0.410753222, 0.420735708, 0.430688208, 0.440669986, 0.450652528, 0.460603625, 0.47058425, 0.480565236, 0.490515417, 0.500496736, 0.510479153, 0.520430236, 0.530411833, 0.540394986, 0.55038025, 0.560335528, 0.570322111, 0.580309056, 0.590263778, 0.600246736, 0.610229153, 0.620181708, 0.630164167, 0.640146847, 0.650099569, 0.660082806, 0.670065708, 0.680017764, 0.689999861, 0.699982653, 0.709935444, 0.719918486, 0.729901111, 0.739855708, 0.749840375, 0.7598225, 0.769774514, 0.779756931, 0.789739111, 0.799721194, 0.80967375, 0.819656889, 0.829639639, 0.839592278, 0.849579278, 0.859566431, 0.869522764, 0.879509694, 0.889493889, 0.899445806, 0.909427, 0.919408556, 0.929360361, 0.939342028, 0.949323972, 0.959275931, 0.969257292, 0.979239361, 0.989191167, 0.999172583, 1.009155347, 1.019106347] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:18.895" endtime="20201110 08:38:18.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.890" endtime="20201110 08:38:18.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.899" endtime="20201110 08:38:18.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:18.902" endtime="20201110 08:38:18.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.901" endtime="20201110 08:38:18.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.897" endtime="20201110 08:38:18.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.403" endtime="20201110 08:38:18.927"></status>
</kw>
<msg timestamp="20201110 08:38:18.927" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.935" endtime="20201110 08:38:21.044"></status>
</kw>
<msg timestamp="20201110 08:38:21.045" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10634277, 'start-iter': 1, 'wakeups': [10644348, 10654357, 10664367, 1...</msg>
<status status="PASS" starttime="20201110 08:38:18.933" endtime="20201110 08:38:21.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.051" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10634277, 'start-iter': 1, 'wakeups': [10644348, 10654357, 10664367, 1...</msg>
<status status="PASS" starttime="20201110 08:38:21.047" endtime="20201110 08:38:21.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.053" endtime="20201110 08:38:21.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.931" endtime="20201110 08:38:21.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.929" endtime="20201110 08:38:21.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.064" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 2, 'wakeups': [10644348, 10654357, 10664367, 10674346, 10684356, 10694366, 10704345, 10714355, 10724365, 10734344, 10744354, 10754364, 10764343, 10774353, 10784362, 10...</msg>
<status status="PASS" starttime="20201110 08:38:21.060" endtime="20201110 08:38:21.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.072" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:21.070" endtime="20201110 08:38:21.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.076" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:21.074" endtime="20201110 08:38:21.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.065" endtime="20201110 08:38:21.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.087" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:21.085" endtime="20201110 08:38:21.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.091" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:21.089" endtime="20201110 08:38:21.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.080" endtime="20201110 08:38:21.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.101" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:21.099" endtime="20201110 08:38:21.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.105" level="INFO">VALUE: 10634277</msg>
<status status="PASS" starttime="20201110 08:38:21.103" endtime="20201110 08:38:21.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.094" endtime="20201110 08:38:21.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.117" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:21.113" endtime="20201110 08:38:21.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.122" level="INFO">VALUE: [10644348, 10654357, 10664367, 10674346, 10684356, 10694366, 10704345, 10714355, 10724365, 10734344, 10744354, 10754364, 10764343, 10774353, 10784362, 10794342, 10804351, 10814361, 10824340, 10834350, 10844360, 10854339, 10864349, 10874359, 10884338, 10894348, 10904357, 10914367, 10924346, 10934356, 10944366, 10954345, 10964355, 10974365, 10984344, 10994354, 11004364, 11014343, 11024353, 11034362, 11044342, 11054351, 11064361, 11074340, 11084350, 11094360, 11104339, 11114349, 11124359, 11134338, 11144348, 11154357, 11164367, 11174346, 11184356, 11194366, 11204345, 11214355, 11224365, 11234344, 11244354, 11254364, 11264343, 11274353, 11284362, 11294342, 11304351, 11314361, 11324340, 11334350, 11344360, 11354339, 11364349, 11374359, 11384338, 11394348, 11404357, 11414367, 11424346, 11434356, 11444366, 11454345, 11464355, 11474365, 11484344, 11494354, 11504364, 11514343, 11524353, 11534362, 11544342, 11554351, 11564361, 11574340, 11584350, 11594360, 11604339, 11614349, 11624359, 11634338]</msg>
<status status="PASS" starttime="20201110 08:38:21.119" endtime="20201110 08:38:21.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.108" endtime="20201110 08:38:21.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.138" endtime="20201110 08:38:21.433"></status>
</kw>
<msg timestamp="20201110 08:38:21.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0253875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035439597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:21.135" endtime="20201110 08:38:21.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0253875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035439597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:21.437" endtime="20201110 08:38:21.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.445" endtime="20201110 08:38:21.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.129" endtime="20201110 08:38:21.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.125" endtime="20201110 08:38:21.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.472" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:21.448" endtime="20201110 08:38:21.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.476" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:21.475" endtime="20201110 08:38:21.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.478" level="INFO">VALUE: 0.0253875</msg>
<status status="PASS" starttime="20201110 08:38:21.477" endtime="20201110 08:38:21.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.473" endtime="20201110 08:38:21.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.483" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:21.482" endtime="20201110 08:38:21.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.485" level="INFO">VALUE: [0.035439597, 0.045420958, 0.055402917, 0.065355347, 0.075337014, 0.085318556, 0.095268153, 0.105249375, 0.115229847, 0.125181417, 0.135164153, 0.145146708, 0.155099375, 0.165082181, 0.175064333, 0.185016222, 0.194998361, 0.204980847, 0.214933431, 0.224913306, 0.234895597, 0.244851014, 0.254832625, 0.264813597, 0.274764292, 0.284746222, 0.294728056, 0.304709792, 0.314661208, 0.324642639, 0.334624875, 0.344575167, 0.354557319, 0.364539708, 0.374490417, 0.384472597, 0.394453667, 0.404404, 0.414385264, 0.424366556, 0.434318972, 0.444301306, 0.454283153, 0.464235917, 0.474217333, 0.484201222, 0.494153528, 0.504135986, 0.514119278, 0.524071806, 0.5340535, 0.544036278, 0.554018722, 0.563970917, 0.573953611, 0.583936306, 0.593892333, 0.603879514, 0.613866333, 0.623823194, 0.633810056, 0.643796931, 0.65375125, 0.663732653, 0.67371475, 0.683666861, 0.693653014, 0.703640194, 0.713592861, 0.723577958, 0.733565306, 0.743521764, 0.753509056, 0.763496375, 0.773452708, 0.783439944, 0.793426736, 0.803413625, 0.813371139, 0.823358236, 0.833342264, 0.843298139, 0.85328475, 0.863271472, 0.873227167, 0.883213986, 0.893198833, 0.903151125, 0.913132819, 0.923114431, 0.933066681, 0.943049361, 0.953032167, 0.962984833, 0.972967819, 0.982949444, 0.992901944, 1.002883778, 1.012865236, 1.022816278] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:21.484" endtime="20201110 08:38:21.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.479" endtime="20201110 08:38:21.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.489" endtime="20201110 08:38:21.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.493" endtime="20201110 08:38:21.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.490" endtime="20201110 08:38:21.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.487" endtime="20201110 08:38:21.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.928" endtime="20201110 08:38:21.513"></status>
</kw>
<msg timestamp="20201110 08:38:21.514" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.522" endtime="20201110 08:38:23.632"></status>
</kw>
<msg timestamp="20201110 08:38:23.633" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13228881, 'start-iter': 1, 'wakeups': [13238922, 13248962, 13258972, 1...</msg>
<status status="PASS" starttime="20201110 08:38:21.520" endtime="20201110 08:38:23.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.639" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13228881, 'start-iter': 1, 'wakeups': [13238922, 13248962, 13258972, 1...</msg>
<status status="PASS" starttime="20201110 08:38:23.636" endtime="20201110 08:38:23.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.642" endtime="20201110 08:38:23.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.517" endtime="20201110 08:38:23.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.516" endtime="20201110 08:38:23.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:23.653" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 2, 'wakeups': [13238922, 13248962, 13258972, 13268951, 13278961, 13288970, 13298950, 13308959, 13318969, 13328948, 13338958, 13348968, 13358947, 13368957, 13378967, 13...</msg>
<status status="PASS" starttime="20201110 08:38:23.649" endtime="20201110 08:38:23.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.661" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:23.659" endtime="20201110 08:38:23.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.665" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:23.663" endtime="20201110 08:38:23.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.654" endtime="20201110 08:38:23.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.675" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:23.673" endtime="20201110 08:38:23.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.679" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:23.677" endtime="20201110 08:38:23.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.668" endtime="20201110 08:38:23.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.689" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:23.687" endtime="20201110 08:38:23.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.694" level="INFO">VALUE: 13228881</msg>
<status status="PASS" starttime="20201110 08:38:23.692" endtime="20201110 08:38:23.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.682" endtime="20201110 08:38:23.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.703" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:23.702" endtime="20201110 08:38:23.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.705" level="INFO">VALUE: [13238922, 13248962, 13258972, 13268951, 13278961, 13288970, 13298950, 13308959, 13318969, 13328948, 13338958, 13348968, 13358947, 13368957, 13378967, 13388946, 13398956, 13408966, 13418945, 13428955, 13438964, 13448944, 13458953, 13468963, 13478942, 13488952, 13498962, 13508972, 13518951, 13528961, 13538970, 13548950, 13558959, 13568969, 13578948, 13588958, 13598968, 13608947, 13618957, 13628967, 13638946, 13648956, 13658966, 13668945, 13678955, 13688964, 13698944, 13708953, 13718963, 13728942, 13738952, 13748962, 13758972, 13768951, 13778961, 13788970, 13798950, 13808959, 13818969, 13828948, 13838958, 13848968, 13858947, 13868957, 13878967, 13888946, 13898956, 13908966, 13918945, 13928955, 13938964, 13948944, 13958953, 13968963, 13978942, 13988952, 13998962, 14008972, 14018951, 14028961, 14038970, 14048950, 14058959, 14068969, 14078948, 14088958, 14098968, 14108947, 14118957, 14128967, 14138946, 14148956, 14158966, 14168945, 14178955, 14188964, 14198944, 14208953, 14218963, 14228942]</msg>
<status status="PASS" starttime="20201110 08:38:23.704" endtime="20201110 08:38:23.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.696" endtime="20201110 08:38:23.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.713" endtime="20201110 08:38:24.005"></status>
</kw>
<msg timestamp="20201110 08:38:24.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032256, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:23.711" endtime="20201110 08:38:24.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032256, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:24.009" endtime="20201110 08:38:24.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.022" endtime="20201110 08:38:24.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.708" endtime="20201110 08:38:24.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.707" endtime="20201110 08:38:24.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.051" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:24.026" endtime="20201110 08:38:24.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.055" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:24.054" endtime="20201110 08:38:24.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.057" level="INFO">VALUE: 0.022220222</msg>
<status status="PASS" starttime="20201110 08:38:24.056" endtime="20201110 08:38:24.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.052" endtime="20201110 08:38:24.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.062" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:24.061" endtime="20201110 08:38:24.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.064" level="INFO">VALUE: [0.032256, 0.042269069, 0.052250833, 0.062201778, 0.072183111, 0.082167458, 0.092122667, 0.102108125, 0.112093792, 0.122048819, 0.132033972, 0.142020083, 0.151975625, 0.161961431, 0.171947069, 0.181902028, 0.191887514, 0.201873222, 0.211828472, 0.221814222, 0.231799931, 0.241755278, 0.251740486, 0.261725944, 0.271681861, 0.281668111, 0.291654875, 0.301641875, 0.311598222, 0.321584236, 0.331571167, 0.341526444, 0.351512528, 0.361499208, 0.371454194, 0.381440833, 0.391427694, 0.401384639, 0.411371528, 0.421358764, 0.431314333, 0.441299764, 0.451285153, 0.461240514, 0.471225375, 0.481208347, 0.491160403, 0.501142861, 0.511124375, 0.521075111, 0.531055986, 0.541037111, 0.551019806, 0.560971861, 0.570953528, 0.580936111, 0.590888708, 0.600874764, 0.610860903, 0.620815653, 0.630797764, 0.640780306, 0.650732083, 0.660713583, 0.670697625, 0.680652486, 0.690633736, 0.700615042, 0.710566403, 0.720549097, 0.730532181, 0.740485028, 0.750467958, 0.760450347, 0.770402667, 0.780385653, 0.790367778, 0.800349625, 0.810301736, 0.820284819, 0.830267514, 0.840219417, 0.850202458, 0.860184389, 0.870135403, 0.88011625, 0.890098417, 0.9000495, 0.910031014, 0.920012417, 0.929963889, 0.939949917, 0.949936264, 0.959892917, 0.969879792, 0.979866694, 0.989823667, 0.99981025, 1.009792722, 1.019745111] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:24.063" endtime="20201110 08:38:24.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.058" endtime="20201110 08:38:24.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.067" endtime="20201110 08:38:24.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.071" endtime="20201110 08:38:24.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.069" endtime="20201110 08:38:24.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.066" endtime="20201110 08:38:24.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.514" endtime="20201110 08:38:24.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.401" endtime="20201110 08:38:24.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.400" endtime="20201110 08:38:24.092"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:24.094" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.103" endtime="20201110 08:38:26.214"></status>
</kw>
<msg timestamp="20201110 08:38:26.215" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15818267, 'start-iter': 1, 'wakeups': [15828369, 15838348, 15848388, 1...</msg>
<status status="PASS" starttime="20201110 08:38:24.101" endtime="20201110 08:38:26.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.221" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15818267, 'start-iter': 1, 'wakeups': [15828369, 15838348, 15848388, 1...</msg>
<status status="PASS" starttime="20201110 08:38:26.217" endtime="20201110 08:38:26.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.223" endtime="20201110 08:38:26.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.098" endtime="20201110 08:38:26.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.096" endtime="20201110 08:38:26.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.235" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 3, 'wakeups': [15828369, 15838348, 15848388, 15858337, 15868377, 15878356, 15888366, 15898345, 15908386, 15918334, 15928375, 15938354, 15948364, 15958343, 15968383, 15...</msg>
<status status="PASS" starttime="20201110 08:38:26.231" endtime="20201110 08:38:26.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.243" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:26.241" endtime="20201110 08:38:26.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.247" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:26.245" endtime="20201110 08:38:26.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.236" endtime="20201110 08:38:26.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.257" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:26.255" endtime="20201110 08:38:26.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.261" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:26.259" endtime="20201110 08:38:26.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.250" endtime="20201110 08:38:26.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.271" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:38:26.269" endtime="20201110 08:38:26.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.275" level="INFO">VALUE: 15818267</msg>
<status status="PASS" starttime="20201110 08:38:26.274" endtime="20201110 08:38:26.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.264" endtime="20201110 08:38:26.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.286" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:26.284" endtime="20201110 08:38:26.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.290" level="INFO">VALUE: [15828369, 15838348, 15848388, 15858337, 15868377, 15878356, 15888366, 15898345, 15908386, 15918334, 15928375, 15938354, 15948364, 15958343, 15968383, 15978332, 15988372, 15998352, 16008361, 16018341, 16028381, 16038330, 16048370, 16058349, 16068359, 16078338, 16088378, 16098358, 16108367, 16118347, 16128387, 16138336, 16148376, 16158355, 16168365, 16178344, 16188385, 16198333, 16208374, 16218353, 16228363, 16238342, 16248382, 16258331, 16268371, 16278350, 16288360, 16298339, 16308380, 16318328, 16328369, 16338348, 16348388, 16358337, 16368377, 16378356, 16388366, 16398345, 16408386, 16418334, 16428375, 16438354, 16448364, 16458343, 16468383, 16478332, 16488372, 16498352, 16508361, 16518341, 16528381, 16538330, 16548370, 16558349, 16568359, 16578338, 16588378, 16598358, 16608367, 16618347, 16628387, 16638336, 16648376, 16658355, 16668365, 16678344, 16688385, 16698333, 16708374, 16718353, 16728363, 16738342, 16748382, 16758331, 16768371, 16778350, 16788360, 16798339, 16808380, 16818328]</msg>
<status status="PASS" starttime="20201110 08:38:26.288" endtime="20201110 08:38:26.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.279" endtime="20201110 08:38:26.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.303" endtime="20201110 08:38:26.593"></status>
</kw>
<msg timestamp="20201110 08:38:26.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026406139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036464125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.301" endtime="20201110 08:38:26.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026406139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036464125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.597" endtime="20201110 08:38:26.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.604" endtime="20201110 08:38:26.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.297" endtime="20201110 08:38:26.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.294" endtime="20201110 08:38:26.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.632" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:26.608" endtime="20201110 08:38:26.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.637" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:38:26.636" endtime="20201110 08:38:26.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.639" level="INFO">VALUE: 0.026406139</msg>
<status status="PASS" starttime="20201110 08:38:26.638" endtime="20201110 08:38:26.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.634" endtime="20201110 08:38:26.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.644" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:26.643" endtime="20201110 08:38:26.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.646" level="INFO">VALUE: [0.036464125, 0.046427736, 0.056423625, 0.066356708, 0.076352236, 0.086315694, 0.096281458, 0.106245111, 0.1162415, 0.126175208, 0.136171667, 0.146135194, 0.156100417, 0.166064764, 0.176062389, 0.185997194, 0.195994264, 0.205959111, 0.215924931, 0.225888736, 0.235885819, 0.245819042, 0.255815944, 0.265779319, 0.275744528, 0.285708375, 0.295704444, 0.305668667, 0.315635014, 0.325598222, 0.335595361, 0.345528944, 0.355525792, 0.365489917, 0.375455958, 0.385420125, 0.395416486, 0.405350514, 0.415347167, 0.425311778, 0.435281083, 0.445249403, 0.455250361, 0.465188514, 0.475186639, 0.485150625, 0.495116014, 0.505079597, 0.515076569, 0.525010264, 0.535005958, 0.544969514, 0.554966056, 0.564899292, 0.574896889, 0.584862931, 0.594834181, 0.604803292, 0.614805528, 0.624743583, 0.634745014, 0.644714125, 0.654685819, 0.664654597, 0.67465725, 0.684594903, 0.69459175, 0.704555792, 0.714523014, 0.724489208, 0.734488306, 0.744423889, 0.754422042, 0.764387653, 0.774355736, 0.784325389, 0.794326319, 0.804291528, 0.814258292, 0.824224125, 0.834224528, 0.844164681, 0.854167944, 0.864134569, 0.874101806, 0.884066847, 0.894064625, 0.903999125, 0.913995736, 0.923960694, 0.933928431, 0.943893514, 0.953891319, 0.963827736, 0.973829667, 0.983799264, 0.993770778, 1.003739958, 1.013741097, 1.023680056] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:26.645" endtime="20201110 08:38:26.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.641" endtime="20201110 08:38:26.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.650" endtime="20201110 08:38:26.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.653" endtime="20201110 08:38:26.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.651" endtime="20201110 08:38:26.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.648" endtime="20201110 08:38:26.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.095" endtime="20201110 08:38:26.674"></status>
</kw>
<msg timestamp="20201110 08:38:26.674" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.682" endtime="20201110 08:38:28.791"></status>
</kw>
<msg timestamp="20201110 08:38:28.792" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18402832, 'start-iter': 1, 'wakeups': [18412933, 18422912, 18432952, 1...</msg>
<status status="PASS" starttime="20201110 08:38:26.680" endtime="20201110 08:38:28.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.797" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18402832, 'start-iter': 1, 'wakeups': [18412933, 18422912, 18432952, 1...</msg>
<status status="PASS" starttime="20201110 08:38:28.794" endtime="20201110 08:38:28.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.800" endtime="20201110 08:38:28.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.678" endtime="20201110 08:38:28.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.676" endtime="20201110 08:38:28.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:28.811" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 3, 'wakeups': [18412933, 18422912, 18432952, 18442901, 18452941, 18462921, 18472930, 18482910, 18492950, 18502899, 18512939, 18522918, 18532928, 18542907, 18552947, 18...</msg>
<status status="PASS" starttime="20201110 08:38:28.807" endtime="20201110 08:38:28.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.821" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:28.817" endtime="20201110 08:38:28.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.825" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:28.823" endtime="20201110 08:38:28.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.812" endtime="20201110 08:38:28.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.836" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:28.834" endtime="20201110 08:38:28.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.840" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:28.838" endtime="20201110 08:38:28.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.829" endtime="20201110 08:38:28.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.850" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:38:28.848" endtime="20201110 08:38:28.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.854" level="INFO">VALUE: 18402832</msg>
<status status="PASS" starttime="20201110 08:38:28.852" endtime="20201110 08:38:28.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.843" endtime="20201110 08:38:28.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.864" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:28.862" endtime="20201110 08:38:28.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.866" level="INFO">VALUE: [18412933, 18422912, 18432952, 18442901, 18452941, 18462921, 18472930, 18482910, 18492950, 18502899, 18512939, 18522918, 18532928, 18542907, 18552947, 18562896, 18572937, 18582916, 18592926, 18602905, 18612945, 18622894, 18632934, 18642913, 18652923, 18662902, 18672943, 18682922, 18692932, 18702911, 18712951, 18722900, 18732940, 18742919, 18752929, 18762908, 18772949, 18782897, 18792938, 18802917, 18812927, 18822906, 18832946, 18842895, 18852935, 18862915, 18872924, 18882904, 18892944, 18902893, 18912933, 18922912, 18932952, 18942901, 18952941, 18962921, 18972930, 18982910, 18992950, 19002899, 19012939, 19022918, 19032928, 19042907, 19052947, 19062896, 19072937, 19082916, 19092926, 19102905, 19112945, 19122894, 19132934, 19142913, 19152923, 19162902, 19172943, 19182922, 19192932, 19202911, 19212951, 19222900, 19232940, 19242919, 19252929, 19262908, 19272949, 19282897, 19292938, 19302917, 19312927, 19322906, 19332946, 19342895, 19352935, 19362915, 19372924, 19382904, 19392944, 19402893]</msg>
<status status="PASS" starttime="20201110 08:38:28.865" endtime="20201110 08:38:28.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.857" endtime="20201110 08:38:28.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.874" endtime="20201110 08:38:29.164"></status>
</kw>
<msg timestamp="20201110 08:38:29.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021712778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031786681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.872" endtime="20201110 08:38:29.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021712778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031786681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.168" endtime="20201110 08:38:29.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.175" endtime="20201110 08:38:29.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.870" endtime="20201110 08:38:29.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.868" endtime="20201110 08:38:29.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:29.203" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:29.178" endtime="20201110 08:38:29.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.208" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:38:29.207" endtime="20201110 08:38:29.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.210" level="INFO">VALUE: 0.021712778</msg>
<status status="PASS" starttime="20201110 08:38:29.209" endtime="20201110 08:38:29.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.204" endtime="20201110 08:38:29.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.216" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:29.214" endtime="20201110 08:38:29.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.218" level="INFO">VALUE: [0.031786681, 0.04175325, 0.051751833, 0.061688097, 0.071687292, 0.081653222, 0.091624389, 0.101594167, 0.111595653, 0.121528847, 0.131526764, 0.141491917, 0.151459694, 0.161425694, 0.171424333, 0.18136075, 0.191363514, 0.201332208, 0.211303389, 0.221272458, 0.231274125, 0.241213125, 0.251214306, 0.261183833, 0.271156403, 0.281123639, 0.291121514, 0.301087347, 0.311055236, 0.321020069, 0.331017847, 0.340953194, 0.350950778, 0.360916986, 0.370884472, 0.380849597, 0.390846778, 0.400781222, 0.410778556, 0.420743194, 0.430710278, 0.440675306, 0.450672125, 0.460606556, 0.470606917, 0.48057575, 0.490544333, 0.500509153, 0.510506472, 0.520441347, 0.530440333, 0.540406236, 0.550403264, 0.560338917, 0.570337653, 0.580304167, 0.590272569, 0.600238944, 0.610237861, 0.620173903, 0.630175194, 0.640144014, 0.650115583, 0.660085389, 0.670084347, 0.680019097, 0.690016917, 0.699982778, 0.709949931, 0.719915306, 0.729913847, 0.739848486, 0.749846444, 0.759810458, 0.769777181, 0.779741667, 0.789739417, 0.799707, 0.809679042, 0.819648875, 0.829650319, 0.839588917, 0.849590597, 0.859554583, 0.869520431, 0.879484347, 0.889481597, 0.899416014, 0.909413833, 0.919379569, 0.929350208, 0.939320042, 0.949322722, 0.959259083, 0.969258069, 0.979224236, 0.9891925, 0.999158458, 1.009157556, 1.019093347] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:29.217" endtime="20201110 08:38:29.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.211" endtime="20201110 08:38:29.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.221" endtime="20201110 08:38:29.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:29.224" endtime="20201110 08:38:29.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.223" endtime="20201110 08:38:29.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.219" endtime="20201110 08:38:29.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.674" endtime="20201110 08:38:29.245"></status>
</kw>
<msg timestamp="20201110 08:38:29.245" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.253" endtime="20201110 08:38:31.363"></status>
</kw>
<msg timestamp="20201110 08:38:31.364" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20982360, 'start-iter': 1, 'wakeups': [20992431, 21002441, 21012481, 2...</msg>
<status status="PASS" starttime="20201110 08:38:29.251" endtime="20201110 08:38:31.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.370" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20982360, 'start-iter': 1, 'wakeups': [20992431, 21002441, 21012481, 2...</msg>
<status status="PASS" starttime="20201110 08:38:31.366" endtime="20201110 08:38:31.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.372" endtime="20201110 08:38:31.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.249" endtime="20201110 08:38:31.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.247" endtime="20201110 08:38:31.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:31.383" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 3, 'wakeups': [20992431, 21002441, 21012481, 21022430, 21032470, 21042449, 21052459, 21062438, 21072479, 21082427, 21092468, 21102447, 21112457, 21122436, 21132476, 21...</msg>
<status status="PASS" starttime="20201110 08:38:31.379" endtime="20201110 08:38:31.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.391" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:31.389" endtime="20201110 08:38:31.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.395" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:31.393" endtime="20201110 08:38:31.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.385" endtime="20201110 08:38:31.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.405" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:31.403" endtime="20201110 08:38:31.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.410" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:31.408" endtime="20201110 08:38:31.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.398" endtime="20201110 08:38:31.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.423" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:38:31.420" endtime="20201110 08:38:31.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.427" level="INFO">VALUE: 20982360</msg>
<status status="PASS" starttime="20201110 08:38:31.425" endtime="20201110 08:38:31.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.413" endtime="20201110 08:38:31.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.437" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:31.435" endtime="20201110 08:38:31.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.441" level="INFO">VALUE: [20992431, 21002441, 21012481, 21022430, 21032470, 21042449, 21052459, 21062438, 21072479, 21082427, 21092468, 21102447, 21112457, 21122436, 21132476, 21142425, 21152465, 21162445, 21172454, 21182434, 21192474, 21202423, 21212463, 21222442, 21232452, 21242431, 21252471, 21262451, 21272460, 21282440, 21292480, 21302429, 21312469, 21322448, 21332458, 21342437, 21352478, 21362426, 21372467, 21382446, 21392456, 21402435, 21412475, 21422424, 21432464, 21442443, 21452453, 21462432, 21472473, 21482421, 21492462, 21502441, 21512481, 21522430, 21532470, 21542449, 21552459, 21562438, 21572479, 21582427, 21592468, 21602447, 21612457, 21622436, 21632476, 21642425, 21652465, 21662445, 21672454, 21682434, 21692474, 21702423, 21712463, 21722442, 21732452, 21742431, 21752471, 21762451, 21772460, 21782440, 21792480, 21802429, 21812469, 21822448, 21832458, 21842437, 21852478, 21862426, 21872467, 21882446, 21892456, 21902435, 21912475, 21922424, 21932464, 21942443, 21952453, 21962432, 21972473, 21982421]</msg>
<status status="PASS" starttime="20201110 08:38:31.439" endtime="20201110 08:38:31.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.430" endtime="20201110 08:38:31.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.448" endtime="20201110 08:38:31.739"></status>
</kw>
<msg timestamp="20201110 08:38:31.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032878722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.446" endtime="20201110 08:38:31.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032878722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.743" endtime="20201110 08:38:31.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.750" endtime="20201110 08:38:31.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.444" endtime="20201110 08:38:31.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.442" endtime="20201110 08:38:31.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:31.777" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:31.753" endtime="20201110 08:38:31.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.782" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:38:31.781" endtime="20201110 08:38:31.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.784" level="INFO">VALUE: 0.022821139</msg>
<status status="PASS" starttime="20201110 08:38:31.783" endtime="20201110 08:38:31.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.778" endtime="20201110 08:38:31.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.790" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:31.788" endtime="20201110 08:38:31.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.792" level="INFO">VALUE: [0.032878722, 0.042876389, 0.052875097, 0.062812083, 0.072812458, 0.082781056, 0.092753083, 0.10272275, 0.112724722, 0.122661417, 0.132662486, 0.142631389, 0.152601694, 0.162569667, 0.172571444, 0.182509764, 0.192510958, 0.202479194, 0.212446278, 0.222412764, 0.232413583, 0.242352264, 0.252354347, 0.262322694, 0.272293208, 0.282261417, 0.292263556, 0.302232806, 0.31220525, 0.322175069, 0.332176806, 0.342112792, 0.352111528, 0.362079972, 0.372052083, 0.382022, 0.392024417, 0.401963333, 0.411964181, 0.42193275, 0.431903958, 0.44187325, 0.451874028, 0.461811931, 0.471813306, 0.481781833, 0.491752847, 0.501721403, 0.511722306, 0.521660806, 0.531662681, 0.541628611, 0.551626306, 0.561560125, 0.571556806, 0.581520972, 0.591487333, 0.601451792, 0.611449431, 0.621384639, 0.631382653, 0.641346917, 0.651315361, 0.661281472, 0.671278667, 0.681213264, 0.691211833, 0.701177903, 0.711145028, 0.721109778, 0.731106861, 0.741041264, 0.751038361, 0.761002917, 0.770970417, 0.78093525, 0.790932417, 0.800896986, 0.810865319, 0.820834667, 0.830836403, 0.840775097, 0.850776236, 0.860745986, 0.870717222, 0.880686639, 0.890689653, 0.900628208, 0.910631306, 0.920600347, 0.930570389, 0.940538069, 0.950538486, 0.960475181, 0.970471194, 0.980435708, 0.99040275, 1.000366833, 1.010364764, 1.020299583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:31.791" endtime="20201110 08:38:31.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.785" endtime="20201110 08:38:31.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.795" endtime="20201110 08:38:31.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:31.799" endtime="20201110 08:38:31.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.797" endtime="20201110 08:38:31.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.794" endtime="20201110 08:38:31.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.246" endtime="20201110 08:38:31.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.093" endtime="20201110 08:38:31.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.092" endtime="20201110 08:38:31.820"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:31.822" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.830" endtime="20201110 08:38:33.944"></status>
</kw>
<msg timestamp="20201110 08:38:33.945" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23566802, 'start-iter': 1, 'wakeups': [23576934, 23586883, 23596832, 2...</msg>
<status status="PASS" starttime="20201110 08:38:31.829" endtime="20201110 08:38:33.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.951" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23566802, 'start-iter': 1, 'wakeups': [23576934, 23586883, 23596832, 2...</msg>
<status status="PASS" starttime="20201110 08:38:33.947" endtime="20201110 08:38:33.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.953" endtime="20201110 08:38:33.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.826" endtime="20201110 08:38:33.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.824" endtime="20201110 08:38:33.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:33.964" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 4, 'wakeups': [23576934, 23586883, 23596832, 23606903, 23616882, 23626861, 23636901, 23646881, 23656860, 23666900, 23676879, 23686859, 23696899, 23706878, 23716857, 23...</msg>
<status status="PASS" starttime="20201110 08:38:33.960" endtime="20201110 08:38:33.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.973" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:33.970" endtime="20201110 08:38:33.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.977" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:33.975" endtime="20201110 08:38:33.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.966" endtime="20201110 08:38:33.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.987" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:33.985" endtime="20201110 08:38:33.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.991" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:33.989" endtime="20201110 08:38:33.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.980" endtime="20201110 08:38:33.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.001" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:33.999" endtime="20201110 08:38:34.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.005" level="INFO">VALUE: 23566802</msg>
<status status="PASS" starttime="20201110 08:38:34.003" endtime="20201110 08:38:34.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.994" endtime="20201110 08:38:34.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.013" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:34.012" endtime="20201110 08:38:34.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.015" level="INFO">VALUE: [23576934, 23586883, 23596832, 23606903, 23616882, 23626861, 23636901, 23646881, 23656860, 23666900, 23676879, 23686859, 23696899, 23706878, 23716857, 23726898, 23736877, 23746856, 23756896, 23766876, 23776855, 23786895, 23796875, 23806854, 23816894, 23826873, 23836853, 23846893, 23856872, 23866851, 23876922, 23886871, 23896850, 23906921, 23916870, 23926849, 23936920, 23946868, 23956848, 23966918, 23976867, 23986846, 23996917, 24006866, 24016845, 24026916, 24036865, 24046844, 24056915, 24066864, 24076843, 24086914, 24096862, 24106842, 24116912, 24126892, 24136840, 24146911, 24156890, 24166839, 24176910, 24186889, 24196838, 24206909, 24216888, 24226837, 24236907, 24246887, 24256835, 24266906, 24276885, 24286834, 24296905, 24306884, 24316833, 24326904, 24336883, 24346832, 24356903, 24366882, 24376861, 24386901, 24396881, 24406860, 24416900, 24426879, 24436859, 24446899, 24456878, 24466857, 24476898, 24486877, 24496856, 24506896, 24516876, 24526855, 24536895, 24546875, 24556854, 24566894]</msg>
<status status="PASS" starttime="20201110 08:38:34.014" endtime="20201110 08:38:34.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.009" endtime="20201110 08:38:34.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.024" endtime="20201110 08:38:34.316"></status>
</kw>
<msg timestamp="20201110 08:38:34.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025371514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035467069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.022" endtime="20201110 08:38:34.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025371514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035467069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.320" endtime="20201110 08:38:34.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.328" endtime="20201110 08:38:34.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.019" endtime="20201110 08:38:34.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.017" endtime="20201110 08:38:34.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.356" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:34.331" endtime="20201110 08:38:34.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.360" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:34.359" endtime="20201110 08:38:34.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.362" level="INFO">VALUE: 0.025371514</msg>
<status status="PASS" starttime="20201110 08:38:34.361" endtime="20201110 08:38:34.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.356" endtime="20201110 08:38:34.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.367" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:34.366" endtime="20201110 08:38:34.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.369" level="INFO">VALUE: [0.035467069, 0.045439056, 0.055409125, 0.065457194, 0.075456806, 0.085457972, 0.095479472, 0.105481431, 0.115481556, 0.125501056, 0.135500806, 0.145500111, 0.155520264, 0.165521667, 0.175522611, 0.185542111, 0.195539417, 0.205536194, 0.215552014, 0.225548389, 0.235543792, 0.245557958, 0.255554639, 0.265550042, 0.275565889, 0.285562778, 0.295559931, 0.305575875, 0.315572014, 0.325567528, 0.335612667, 0.345578389, 0.355574125, 0.365623208, 0.375592833, 0.385591931, 0.395641764, 0.405611889, 0.415611722, 0.425660569, 0.435630236, 0.445630847, 0.455681111, 0.465651389, 0.475651986, 0.485703306, 0.495673778, 0.505674417, 0.515725278, 0.525696569, 0.535697958, 0.545749889, 0.555721514, 0.565722903, 0.575773, 0.585770528, 0.595735319, 0.605780333, 0.61577675, 0.625741153, 0.635787153, 0.645783347, 0.655748028, 0.665793236, 0.675789931, 0.685755542, 0.695800792, 0.705797653, 0.715762778, 0.725807764, 0.735804069, 0.745768431, 0.755812917, 0.765808792, 0.775774069, 0.785818264, 0.795814486, 0.805779472, 0.815825319, 0.825827014, 0.835827833, 0.845846389, 0.855847556, 0.865848028, 0.875867944, 0.885865444, 0.895864264, 0.905883861, 0.915884528, 0.925884556, 0.935900111, 0.945897111, 0.955893514, 0.965909097, 0.975906569, 0.985902764, 0.995917847, 1.005917153, 1.015917056, 1.025936194] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:34.368" endtime="20201110 08:38:34.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.363" endtime="20201110 08:38:34.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.372" endtime="20201110 08:38:34.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:34.376" endtime="20201110 08:38:34.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.374" endtime="20201110 08:38:34.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.371" endtime="20201110 08:38:34.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.823" endtime="20201110 08:38:34.403"></status>
</kw>
<msg timestamp="20201110 08:38:34.404" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.412" endtime="20201110 08:38:36.526"></status>
</kw>
<msg timestamp="20201110 08:38:36.528" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26152862, 'start-iter': 1, 'wakeups': [26162994, 26172943, 26182922, 2...</msg>
<status status="PASS" starttime="20201110 08:38:34.411" endtime="20201110 08:38:36.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.534" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26152862, 'start-iter': 1, 'wakeups': [26162994, 26172943, 26182922, 2...</msg>
<status status="PASS" starttime="20201110 08:38:36.530" endtime="20201110 08:38:36.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.536" endtime="20201110 08:38:36.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.408" endtime="20201110 08:38:36.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.406" endtime="20201110 08:38:36.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.547" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 4, 'wakeups': [26162994, 26172943, 26182922, 26192962, 26202941, 26212921, 26222961, 26232940, 26242919, 26252960, 26262939, 26272918, 26282958, 26292938, 26302917, 26...</msg>
<status status="PASS" starttime="20201110 08:38:36.543" endtime="20201110 08:38:36.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.555" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:36.553" endtime="20201110 08:38:36.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.559" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:36.557" endtime="20201110 08:38:36.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.549" endtime="20201110 08:38:36.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.569" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:36.567" endtime="20201110 08:38:36.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.574" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:36.572" endtime="20201110 08:38:36.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.562" endtime="20201110 08:38:36.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.584" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:36.582" endtime="20201110 08:38:36.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.588" level="INFO">VALUE: 26152862</msg>
<status status="PASS" starttime="20201110 08:38:36.586" endtime="20201110 08:38:36.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.577" endtime="20201110 08:38:36.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.598" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:36.596" endtime="20201110 08:38:36.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.603" level="INFO">VALUE: [26162994, 26172943, 26182922, 26192962, 26202941, 26212921, 26222961, 26232940, 26242919, 26252960, 26262939, 26272918, 26282958, 26292938, 26302917, 26312957, 26322937, 26332916, 26342956, 26352935, 26362915, 26372955, 26382934, 26392913, 26402954, 26412933, 26422912, 26432983, 26442932, 26452911, 26462982, 26472930, 26482910, 26492980, 26502929, 26512908, 26522979, 26532928, 26542907, 26552978, 26562927, 26572906, 26582977, 26592926, 26602905, 26612976, 26622924, 26632904, 26642974, 26652923, 26662902, 26672973, 26682952, 26692901, 26702972, 26712951, 26722900, 26732971, 26742950, 26752899, 26762969, 26772949, 26782897, 26792968, 26802947, 26812896, 26822967, 26832946, 26842895, 26852966, 26862945, 26872894, 26882965, 26892944, 26902893, 26912963, 26922943, 26932922, 26942962, 26952941, 26962921, 26972961, 26982940, 26992919, 27002960, 27012939, 27022918, 27032958, 27042938, 27052917, 27062957, 27072937, 27082916, 27092956, 27102935, 27112915, 27122955, 27132934, 27142913, 27152954]</msg>
<status status="PASS" starttime="20201110 08:38:36.600" endtime="20201110 08:38:36.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.591" endtime="20201110 08:38:36.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.619" endtime="20201110 08:38:36.915"></status>
</kw>
<msg timestamp="20201110 08:38:36.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0306995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040791333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:36.615" endtime="20201110 08:38:36.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0306995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040791333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:36.919" endtime="20201110 08:38:36.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.927" endtime="20201110 08:38:36.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.610" endtime="20201110 08:38:36.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.606" endtime="20201110 08:38:36.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.955" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:36.930" endtime="20201110 08:38:36.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.959" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:36.958" endtime="20201110 08:38:36.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.961" level="INFO">VALUE: 0.0306995</msg>
<status status="PASS" starttime="20201110 08:38:36.960" endtime="20201110 08:38:36.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.956" endtime="20201110 08:38:36.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.966" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:36.965" endtime="20201110 08:38:36.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.968" level="INFO">VALUE: [0.040791333, 0.050759347, 0.060759, 0.070775069, 0.080770875, 0.090765333, 0.100780528, 0.110777389, 0.120772458, 0.130787167, 0.140783306, 0.150779389, 0.160794069, 0.170789375, 0.180785944, 0.190802042, 0.200803278, 0.210803958, 0.220823806, 0.230826889, 0.240828375, 0.2508485, 0.260847944, 0.270844889, 0.280861306, 0.290859903, 0.300860125, 0.310908861, 0.320878, 0.330877833, 0.340926069, 0.350893472, 0.360892208, 0.370942014, 0.380911569, 0.390911361, 0.400960361, 0.410930833, 0.420930514, 0.430979361, 0.440947861, 0.450942444, 0.460987944, 0.470954278, 0.480949958, 0.490995403, 0.500961681, 0.510958889, 0.521004986, 0.5309725, 0.540969597, 0.551015708, 0.561013417, 0.570979417, 0.581026222, 0.591026208, 0.600996903, 0.611047903, 0.621049042, 0.631014889, 0.641062361, 0.6510615, 0.661027389, 0.671075819, 0.6810755, 0.691040944, 0.701086097, 0.711081569, 0.721046958, 0.731093056, 0.741089486, 0.751054028, 0.761099653, 0.771096972, 0.781062375, 0.791108319, 0.801104639, 0.811100417, 0.821115319, 0.831111028, 0.841106417, 0.851122, 0.861118903, 0.871115528, 0.881131194, 0.891129194, 0.901125431, 0.911141486, 0.921138889, 0.931135361, 0.941150708, 0.951147542, 0.961142972, 0.971157611, 0.981153472, 0.991148611, 1.001162722, 1.011160097, 1.021155139, 1.031169903] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:36.967" endtime="20201110 08:38:36.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.962" endtime="20201110 08:38:36.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.971" endtime="20201110 08:38:36.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:36.975" endtime="20201110 08:38:36.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.973" endtime="20201110 08:38:36.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.970" endtime="20201110 08:38:36.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.404" endtime="20201110 08:38:36.996"></status>
</kw>
<msg timestamp="20201110 08:38:36.996" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.004" endtime="20201110 08:38:39.111"></status>
</kw>
<msg timestamp="20201110 08:38:39.112" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28744415, 'start-iter': 1, 'wakeups': [28754547, 28764495, 28774475, 2...</msg>
<status status="PASS" starttime="20201110 08:38:37.002" endtime="20201110 08:38:39.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.119" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28744415, 'start-iter': 1, 'wakeups': [28754547, 28764495, 28774475, 2...</msg>
<status status="PASS" starttime="20201110 08:38:39.115" endtime="20201110 08:38:39.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.121" endtime="20201110 08:38:39.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.000" endtime="20201110 08:38:39.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.998" endtime="20201110 08:38:39.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.132" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 4, 'wakeups': [28754547, 28764495, 28774475, 28784515, 28794494, 28804473, 28814514, 28824493, 28834472, 28844512, 28854492, 28864471, 28874511, 28884490, 28894470, 28...</msg>
<status status="PASS" starttime="20201110 08:38:39.128" endtime="20201110 08:38:39.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.143" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:39.139" endtime="20201110 08:38:39.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.147" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:39.145" endtime="20201110 08:38:39.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.134" endtime="20201110 08:38:39.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.157" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:39.155" endtime="20201110 08:38:39.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.161" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:39.159" endtime="20201110 08:38:39.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.150" endtime="20201110 08:38:39.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.171" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:39.169" endtime="20201110 08:38:39.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.175" level="INFO">VALUE: 28744415</msg>
<status status="PASS" starttime="20201110 08:38:39.173" endtime="20201110 08:38:39.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.164" endtime="20201110 08:38:39.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.185" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:39.183" endtime="20201110 08:38:39.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.190" level="INFO">VALUE: [28754547, 28764495, 28774475, 28784515, 28794494, 28804473, 28814514, 28824493, 28834472, 28844512, 28854492, 28864471, 28874511, 28884490, 28894470, 28904510, 28914489, 28924468, 28934509, 28944488, 28954467, 28964508, 28974487, 28984466, 28994506, 29004486, 29014465, 29024536, 29034484, 29044464, 29054534, 29064483, 29074462, 29084533, 29094482, 29104461, 29114532, 29124481, 29134460, 29144531, 29154479, 29164459, 29174530, 29184478, 29194458, 29204528, 29214477, 29224456, 29234527, 29244476, 29254455, 29264526, 29274505, 29284454, 29294525, 29304504, 29314453, 29324523, 29334503, 29344451, 29354522, 29364501, 29374450, 29384521, 29394500, 29404449, 29414520, 29424499, 29434448, 29444519, 29454498, 29464447, 29474517, 29484497, 29494445, 29504516, 29514495, 29524475, 29534515, 29544494, 29554473, 29564514, 29574493, 29584472, 29594512, 29604492, 29614471, 29624511, 29634490, 29644470, 29654510, 29664489, 29674468, 29684509, 29694488, 29704467, 29714508, 29724487, 29734466, 29744506]</msg>
<status status="PASS" starttime="20201110 08:38:39.188" endtime="20201110 08:38:39.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.178" endtime="20201110 08:38:39.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.205" endtime="20201110 08:38:39.500"></status>
</kw>
<msg timestamp="20201110 08:38:39.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019046542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029134056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.202" endtime="20201110 08:38:39.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019046542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029134056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.504" endtime="20201110 08:38:39.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.516" endtime="20201110 08:38:39.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.196" endtime="20201110 08:38:39.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.193" endtime="20201110 08:38:39.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.544" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:39.519" endtime="20201110 08:38:39.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.548" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:39.547" endtime="20201110 08:38:39.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.551" level="INFO">VALUE: 0.019046542</msg>
<status status="PASS" starttime="20201110 08:38:39.550" endtime="20201110 08:38:39.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.545" endtime="20201110 08:38:39.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.556" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:39.555" endtime="20201110 08:38:39.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.558" level="INFO">VALUE: [0.029134056, 0.039104694, 0.049103542, 0.059121944, 0.069122375, 0.079121569, 0.089139958, 0.099136847, 0.109132722, 0.119148472, 0.129145431, 0.1391415, 0.149155819, 0.159152333, 0.169148, 0.179162917, 0.189159389, 0.199155167, 0.209169167, 0.219165056, 0.229163875, 0.239182097, 0.249181708, 0.259180556, 0.269199194, 0.279198833, 0.289197472, 0.299247125, 0.309216611, 0.319216722, 0.329265986, 0.339234472, 0.349233444, 0.359282097, 0.369247583, 0.379242917, 0.389288486, 0.399254597, 0.409250042, 0.419294889, 0.429260597, 0.439255667, 0.449301042, 0.459266833, 0.469262917, 0.479310083, 0.489280236, 0.499280264, 0.509329042, 0.519299653, 0.529299639, 0.539349306, 0.549349458, 0.559318819, 0.569365194, 0.579362778, 0.589328875, 0.599375222, 0.609371472, 0.619336903, 0.629382403, 0.6393775, 0.649341722, 0.659386583, 0.669382361, 0.679346861, 0.689391597, 0.699387528, 0.709352125, 0.719396139, 0.729393819, 0.739360903, 0.749404625, 0.759399097, 0.769362833, 0.779407014, 0.789402, 0.799396653, 0.809409667, 0.819405639, 0.829399736, 0.839414833, 0.849411194, 0.859406653, 0.869421028, 0.879416319, 0.889411222, 0.899425194, 0.909425153, 0.919424194, 0.929442694, 0.939443778, 0.949443583, 0.959462958, 0.969462847, 0.979461528, 0.989478778, 0.999477542, 1.009476944, 1.019496014] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:39.557" endtime="20201110 08:38:39.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.552" endtime="20201110 08:38:39.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.561" endtime="20201110 08:38:39.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:39.564" endtime="20201110 08:38:39.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.563" endtime="20201110 08:38:39.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.559" endtime="20201110 08:38:39.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.996" endtime="20201110 08:38:39.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.821" endtime="20201110 08:38:39.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.820" endtime="20201110 08:38:39.585"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:39.588" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.596" endtime="20201110 08:38:41.703"></status>
</kw>
<msg timestamp="20201110 08:38:41.704" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31341156, 'start-iter': 1, 'wakeups': [31351287, 31361267, 31371246, 3...</msg>
<status status="PASS" starttime="20201110 08:38:39.594" endtime="20201110 08:38:41.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.710" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31341156, 'start-iter': 1, 'wakeups': [31351287, 31361267, 31371246, 3...</msg>
<status status="PASS" starttime="20201110 08:38:41.706" endtime="20201110 08:38:41.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.712" endtime="20201110 08:38:41.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.592" endtime="20201110 08:38:41.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.590" endtime="20201110 08:38:41.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:41.724" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 5, 'wakeups': [31351287, 31361267, 31371246, 31381195, 31391265, 31401275, 31411224, 31421203, 31431274, 31441253, 31451232, 31461212, 31471252, 31481262, 31491241, 31...</msg>
<status status="PASS" starttime="20201110 08:38:41.720" endtime="20201110 08:38:41.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.732" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:41.730" endtime="20201110 08:38:41.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.736" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:41.734" endtime="20201110 08:38:41.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.725" endtime="20201110 08:38:41.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.746" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:41.744" endtime="20201110 08:38:41.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.750" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:41.748" endtime="20201110 08:38:41.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.739" endtime="20201110 08:38:41.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.763" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:38:41.760" endtime="20201110 08:38:41.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.767" level="INFO">VALUE: 31341156</msg>
<status status="PASS" starttime="20201110 08:38:41.765" endtime="20201110 08:38:41.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.753" endtime="20201110 08:38:41.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.777" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:41.775" endtime="20201110 08:38:41.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.781" level="INFO">VALUE: [31351287, 31361267, 31371246, 31381195, 31391265, 31401275, 31411224, 31421203, 31431274, 31441253, 31451232, 31461212, 31471252, 31481262, 31491241, 31501190, 31511260, 31521270, 31531219, 31541198, 31551269, 31561248, 31571228, 31581207, 31591278, 31601257, 31611236, 31621215, 31631256, 31641265, 31651245, 31661193, 31671264, 31681274, 31691223, 31701202, 31711273, 31721252, 31731231, 31741210, 31751251, 31761260, 31771240, 31781188, 31791259, 31801269, 31811218, 31821197, 31831268, 31841278, 31851226, 31861206, 31871276, 31881256, 31891235, 31901214, 31911254, 31921264, 31931243, 31941192, 31951263, 31961273, 31971221, 31981201, 31991271, 32001251, 32011230, 32021209, 32031250, 32041259, 32051239, 32061187, 32071258, 32081268, 32091247, 32101196, 32111267, 32121276, 32131225, 32141204, 32151275, 32161254, 32171234, 32181213, 32191253, 32201263, 32211242, 32221191, 32231262, 32241271, 32251220, 32261199, 32271270, 32281250, 32291229, 32301208, 32311248, 32321258, 32331237, 32341217]</msg>
<status status="PASS" starttime="20201110 08:38:41.779" endtime="20201110 08:38:41.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.770" endtime="20201110 08:38:41.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.796" endtime="20201110 08:38:42.093"></status>
</kw>
<msg timestamp="20201110 08:38:42.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0322305, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:41.793" endtime="20201110 08:38:42.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0322305, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:42.097" endtime="20201110 08:38:42.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.105" endtime="20201110 08:38:42.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.788" endtime="20201110 08:38:42.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.784" endtime="20201110 08:38:42.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:42.132" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:42.108" endtime="20201110 08:38:42.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.136" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:38:42.135" endtime="20201110 08:38:42.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.139" level="INFO">VALUE: 0.022127056</msg>
<status status="PASS" starttime="20201110 08:38:42.138" endtime="20201110 08:38:42.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.133" endtime="20201110 08:38:42.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.145" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:42.144" endtime="20201110 08:38:42.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.147" level="INFO">VALUE: [0.0322305, 0.042167708, 0.052136181, 0.062070986, 0.072107875, 0.082076042, 0.092013514, 0.101977306, 0.11200925, 0.121943236, 0.131908139, 0.141871833, 0.151874181, 0.161838597, 0.171803556, 0.181736597, 0.191772181, 0.201738764, 0.211673542, 0.221637472, 0.231669861, 0.241604486, 0.251569528, 0.261533403, 0.271566014, 0.281500389, 0.291464222, 0.301428056, 0.311430194, 0.321395181, 0.331363278, 0.341301875, 0.351339903, 0.361309042, 0.371247319, 0.381214764, 0.391252097, 0.401190639, 0.411160833, 0.421130139, 0.431138139, 0.441108, 0.451078194, 0.461016375, 0.471052806, 0.481018903, 0.490953458, 0.500917028, 0.510947917, 0.520911681, 0.530844861, 0.540808875, 0.550840708, 0.560774083, 0.570739486, 0.580703444, 0.590704681, 0.600668611, 0.610632889, 0.620565667, 0.630597139, 0.640560889, 0.650494736, 0.660458597, 0.670490375, 0.680424389, 0.690388764, 0.700352542, 0.7103535, 0.720318069, 0.730282458, 0.740215694, 0.750246569, 0.760210431, 0.770174431, 0.78010625, 0.790137556, 0.800105542, 0.810044167, 0.820011819, 0.830048431, 0.839987097, 0.849955556, 0.859922778, 0.869928708, 0.879894375, 0.889860042, 0.899794917, 0.909826597, 0.919791278, 0.929726625, 0.939690417, 0.949722778, 0.959656944, 0.969621986, 0.979585486, 0.989586778, 0.999550903, 1.009515444, 1.019479056] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:42.146" endtime="20201110 08:38:42.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.141" endtime="20201110 08:38:42.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.150" endtime="20201110 08:38:42.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:42.153" endtime="20201110 08:38:42.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.152" endtime="20201110 08:38:42.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.148" endtime="20201110 08:38:42.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.589" endtime="20201110 08:38:42.174"></status>
</kw>
<msg timestamp="20201110 08:38:42.174" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.182" endtime="20201110 08:38:44.289"></status>
</kw>
<msg timestamp="20201110 08:38:44.291" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33935821, 'start-iter': 1, 'wakeups': [33945953, 33955932, 33965911, 3...</msg>
<status status="PASS" starttime="20201110 08:38:42.180" endtime="20201110 08:38:44.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.296" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33935821, 'start-iter': 1, 'wakeups': [33945953, 33955932, 33965911, 3...</msg>
<status status="PASS" starttime="20201110 08:38:44.293" endtime="20201110 08:38:44.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.299" endtime="20201110 08:38:44.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.178" endtime="20201110 08:38:44.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.176" endtime="20201110 08:38:44.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:44.309" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 5, 'wakeups': [33945953, 33955932, 33965911, 33975860, 33985931, 33995941, 34005889, 34015869, 34025939, 34035919, 34045898, 34055877, 34065917, 34075927, 34085906, 34...</msg>
<status status="PASS" starttime="20201110 08:38:44.305" endtime="20201110 08:38:44.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.318" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:44.316" endtime="20201110 08:38:44.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.323" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:44.321" endtime="20201110 08:38:44.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.311" endtime="20201110 08:38:44.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.333" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:44.331" endtime="20201110 08:38:44.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.337" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:44.335" endtime="20201110 08:38:44.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.326" endtime="20201110 08:38:44.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.347" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:38:44.345" endtime="20201110 08:38:44.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.351" level="INFO">VALUE: 33935821</msg>
<status status="PASS" starttime="20201110 08:38:44.349" endtime="20201110 08:38:44.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.340" endtime="20201110 08:38:44.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.363" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:44.359" endtime="20201110 08:38:44.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.368" level="INFO">VALUE: [33945953, 33955932, 33965911, 33975860, 33985931, 33995941, 34005889, 34015869, 34025939, 34035919, 34045898, 34055877, 34065917, 34075927, 34085906, 34095855, 34105926, 34115936, 34125885, 34135864, 34145935, 34155914, 34165893, 34175872, 34185913, 34195922, 34205902, 34215881, 34225921, 34235931, 34245910, 34255859, 34265930, 34275939, 34285888, 34295867, 34305938, 34315917, 34325897, 34335876, 34345916, 34355926, 34365905, 34375854, 34385925, 34395935, 34405883, 34415863, 34425933, 34435913, 34445892, 34455871, 34465942, 34475921, 34485900, 34495880, 34505920, 34515930, 34525909, 34535858, 34545928, 34555938, 34565887, 34575866, 34585937, 34595916, 34605895, 34615875, 34625915, 34635925, 34645904, 34655853, 34665924, 34675933, 34685882, 34695861, 34705932, 34715942, 34725891, 34735870, 34745941, 34755920, 34765899, 34775878, 34785919, 34795928, 34805908, 34815856, 34825927, 34835937, 34845886, 34855865, 34865936, 34875915, 34885894, 34895874, 34905914, 34915924, 34925903, 34935852]</msg>
<status status="PASS" starttime="20201110 08:38:44.365" endtime="20201110 08:38:44.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.354" endtime="20201110 08:38:44.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.383" endtime="20201110 08:38:44.675"></status>
</kw>
<msg timestamp="20201110 08:38:44.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020625625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030732708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.380" endtime="20201110 08:38:44.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020625625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030732708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.679" endtime="20201110 08:38:44.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.686" endtime="20201110 08:38:44.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.374" endtime="20201110 08:38:44.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.371" endtime="20201110 08:38:44.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:44.714" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:44.689" endtime="20201110 08:38:44.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.718" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:38:44.717" endtime="20201110 08:38:44.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.720" level="INFO">VALUE: 0.020625625</msg>
<status status="PASS" starttime="20201110 08:38:44.719" endtime="20201110 08:38:44.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.715" endtime="20201110 08:38:44.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.730" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:44.729" endtime="20201110 08:38:44.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.732" level="INFO">VALUE: [0.030732708, 0.040671403, 0.050641069, 0.060579889, 0.070617292, 0.08058675, 0.090526208, 0.100495514, 0.110531861, 0.120467542, 0.130433028, 0.140398014, 0.150400444, 0.160366417, 0.170331792, 0.180267778, 0.190304111, 0.200272111, 0.210210153, 0.220178153, 0.230214167, 0.240152153, 0.250120472, 0.260084764, 0.270091222, 0.280057347, 0.290021264, 0.299985056, 0.309987278, 0.319951431, 0.329916542, 0.339850653, 0.349883569, 0.359848556, 0.369783181, 0.379746389, 0.389778181, 0.399711833, 0.409675986, 0.419639778, 0.429640958, 0.439606625, 0.449572319, 0.459506236, 0.469538986, 0.479503514, 0.489440764, 0.499408042, 0.509444389, 0.519382486, 0.529351972, 0.539317542, 0.549350236, 0.559285333, 0.569250306, 0.579212958, 0.589213764, 0.599177833, 0.609142514, 0.619074792, 0.62910675, 0.639071236, 0.6490055, 0.658968903, 0.669001125, 0.678934653, 0.688899153, 0.698862306, 0.708864444, 0.718829097, 0.728793792, 0.738726403, 0.748758181, 0.758722139, 0.768655542, 0.778619806, 0.788651306, 0.798615778, 0.808549403, 0.818512236, 0.828543708, 0.838476903, 0.848441444, 0.858405639, 0.868408611, 0.878373681, 0.888339056, 0.898273028, 0.908305583, 0.918270875, 0.928204597, 0.938167472, 0.948199, 0.958136347, 0.968104861, 0.978071736, 0.988077292, 0.998045514, 1.008014556, 1.017952625] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:44.731" endtime="20201110 08:38:44.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.726" endtime="20201110 08:38:44.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.735" endtime="20201110 08:38:44.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:44.739" endtime="20201110 08:38:44.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.737" endtime="20201110 08:38:44.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.733" endtime="20201110 08:38:44.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.175" endtime="20201110 08:38:44.760"></status>
</kw>
<msg timestamp="20201110 08:38:44.760" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.768" endtime="20201110 08:38:46.877"></status>
</kw>
<msg timestamp="20201110 08:38:46.878" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36530670, 'start-iter': 1, 'wakeups': [36540802, 36550781, 36560760, 3...</msg>
<status status="PASS" starttime="20201110 08:38:44.767" endtime="20201110 08:38:46.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.884" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36530670, 'start-iter': 1, 'wakeups': [36540802, 36550781, 36560760, 3...</msg>
<status status="PASS" starttime="20201110 08:38:46.880" endtime="20201110 08:38:46.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.886" endtime="20201110 08:38:46.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.764" endtime="20201110 08:38:46.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.762" endtime="20201110 08:38:46.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:46.897" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 5, 'wakeups': [36540802, 36550781, 36560760, 36570709, 36580780, 36590789, 36600738, 36610717, 36620788, 36630767, 36640747, 36650726, 36660766, 36670776, 36680755, 36...</msg>
<status status="PASS" starttime="20201110 08:38:46.893" endtime="20201110 08:38:46.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.905" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:46.903" endtime="20201110 08:38:46.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.909" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:46.907" endtime="20201110 08:38:46.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.899" endtime="20201110 08:38:46.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.919" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:46.917" endtime="20201110 08:38:46.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.923" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:46.922" endtime="20201110 08:38:46.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.912" endtime="20201110 08:38:46.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.934" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:38:46.932" endtime="20201110 08:38:46.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.939" level="INFO">VALUE: 36530670</msg>
<status status="PASS" starttime="20201110 08:38:46.937" endtime="20201110 08:38:46.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.927" endtime="20201110 08:38:46.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.949" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:46.946" endtime="20201110 08:38:46.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.953" level="INFO">VALUE: [36540802, 36550781, 36560760, 36570709, 36580780, 36590789, 36600738, 36610717, 36620788, 36630767, 36640747, 36650726, 36660766, 36670776, 36680755, 36690704, 36700775, 36710784, 36720733, 36730712, 36740783, 36750762, 36760742, 36770721, 36780792, 36790771, 36800750, 36810729, 36820770, 36830780, 36840759, 36850708, 36860778, 36870788, 36880737, 36890716, 36900787, 36910766, 36920745, 36930725, 36940765, 36950775, 36960754, 36970703, 36980773, 36990783, 37000732, 37010711, 37020782, 37030792, 37040740, 37050720, 37060791, 37070770, 37080749, 37090728, 37100769, 37110778, 37120758, 37130706, 37140777, 37150787, 37160736, 37170715, 37180786, 37190765, 37200744, 37210723, 37220764, 37230773, 37240753, 37250701, 37260772, 37270782, 37280761, 37290710, 37300781, 37310791, 37320739, 37330718, 37340789, 37350769, 37360748, 37370727, 37380767, 37390777, 37400756, 37410705, 37420776, 37430786, 37440734, 37450714, 37460784, 37470764, 37480743, 37490722, 37500762, 37510772, 37520751, 37530731]</msg>
<status status="PASS" starttime="20201110 08:38:46.951" endtime="20201110 08:38:46.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.942" endtime="20201110 08:38:46.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.968" endtime="20201110 08:38:47.265"></status>
</kw>
<msg timestamp="20201110 08:38:47.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021834903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031940431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:46.965" endtime="20201110 08:38:47.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021834903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031940431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.268" endtime="20201110 08:38:47.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.276" endtime="20201110 08:38:47.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.960" endtime="20201110 08:38:47.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.956" endtime="20201110 08:38:47.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:47.303" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:47.279" endtime="20201110 08:38:47.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.307" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:38:47.306" endtime="20201110 08:38:47.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.309" level="INFO">VALUE: 0.021834903</msg>
<status status="PASS" starttime="20201110 08:38:47.308" endtime="20201110 08:38:47.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.304" endtime="20201110 08:38:47.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.315" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:47.314" endtime="20201110 08:38:47.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.317" level="INFO">VALUE: [0.031940431, 0.041879792, 0.051850139, 0.061788639, 0.071825875, 0.081793278, 0.091726347, 0.101688431, 0.111720556, 0.121653444, 0.131620125, 0.141587306, 0.151592542, 0.161560208, 0.171528542, 0.18146575, 0.191502139, 0.201470861, 0.211409611, 0.221377556, 0.231414222, 0.241352486, 0.251319292, 0.261284042, 0.271317806, 0.281252083, 0.291218208, 0.301182097, 0.311184444, 0.321150014, 0.331115847, 0.341053792, 0.351091333, 0.361060917, 0.371000833, 0.380969708, 0.391006292, 0.400944639, 0.410910875, 0.420878056, 0.430882847, 0.440847653, 0.450811681, 0.460744347, 0.470776222, 0.480739597, 0.490672819, 0.500635847, 0.51066775, 0.520631472, 0.530565056, 0.540528042, 0.550559611, 0.560492833, 0.5704565, 0.580419375, 0.590420542, 0.600383889, 0.610347333, 0.620278972, 0.630310472, 0.64027375, 0.650208569, 0.660172319, 0.670204611, 0.680137972, 0.690102264, 0.700065264, 0.710066625, 0.720030986, 0.729994667, 0.739926708, 0.749957333, 0.759921375, 0.769885736, 0.77981825, 0.789850264, 0.799814, 0.809747375, 0.81971075, 0.829742639, 0.839675653, 0.849639417, 0.859602667, 0.869604292, 0.879568, 0.889532056, 0.899464986, 0.909496014, 0.919460014, 0.929393417, 0.939357722, 0.949389819, 0.959325236, 0.969290458, 0.979254792, 0.989257194, 0.999221958, 1.009186597, 1.019150556] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:47.316" endtime="20201110 08:38:47.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.311" endtime="20201110 08:38:47.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.320" endtime="20201110 08:38:47.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:47.323" endtime="20201110 08:38:47.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.322" endtime="20201110 08:38:47.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.318" endtime="20201110 08:38:47.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.761" endtime="20201110 08:38:47.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.586" endtime="20201110 08:38:47.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.586" endtime="20201110 08:38:47.345"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:47.347" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.356" endtime="20201110 08:38:49.465"></status>
</kw>
<msg timestamp="20201110 08:38:49.466" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 39125274, 'start-iter': 1, 'wakeups': [39135437, 39145416, 39155426, 3...</msg>
<status status="PASS" starttime="20201110 08:38:47.354" endtime="20201110 08:38:49.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.472" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 39125274, 'start-iter': 1, 'wakeups': [39135437, 39145416, 39155426, 3...</msg>
<status status="PASS" starttime="20201110 08:38:49.468" endtime="20201110 08:38:49.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.474" endtime="20201110 08:38:49.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.351" endtime="20201110 08:38:49.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.349" endtime="20201110 08:38:49.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:49.485" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 6, 'wakeups': [39135437, 39145416, 39155426, 39165374, 39175354, 39185455, 39195404, 39205413, 39215393, 39225341, 39235443, 39245422, 39255401, 39265380, 39275360, 39...</msg>
<status status="PASS" starttime="20201110 08:38:49.481" endtime="20201110 08:38:49.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.493" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:49.491" endtime="20201110 08:38:49.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.498" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:49.496" endtime="20201110 08:38:49.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.487" endtime="20201110 08:38:49.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.507" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:49.505" endtime="20201110 08:38:49.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.512" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:49.510" endtime="20201110 08:38:49.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.501" endtime="20201110 08:38:49.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.522" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:38:49.520" endtime="20201110 08:38:49.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.526" level="INFO">VALUE: 39125274</msg>
<status status="PASS" starttime="20201110 08:38:49.524" endtime="20201110 08:38:49.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.515" endtime="20201110 08:38:49.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.536" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:49.534" endtime="20201110 08:38:49.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.541" level="INFO">VALUE: [39135437, 39145416, 39155426, 39165374, 39175354, 39185455, 39195404, 39205413, 39215393, 39225341, 39235443, 39245422, 39255401, 39265380, 39275360, 39285430, 39295410, 39305419, 39315368, 39325347, 39335449, 39345397, 39355407, 39365386, 39375335, 39385437, 39395416, 39405426, 39415374, 39425354, 39435455, 39445404, 39455413, 39465393, 39475341, 39485443, 39495422, 39505401, 39515380, 39525360, 39535430, 39545410, 39555419, 39565368, 39575347, 39585449, 39595397, 39605407, 39615386, 39625335, 39635437, 39645416, 39655426, 39665374, 39675354, 39685455, 39695404, 39705413, 39715393, 39725341, 39735443, 39745422, 39755401, 39765380, 39775360, 39785430, 39795410, 39805419, 39815368, 39825347, 39835449, 39845397, 39855407, 39865386, 39875335, 39885437, 39895416, 39905426, 39915374, 39925354, 39935455, 39945404, 39955413, 39965393, 39975341, 39985443, 39995422, 40005401, 40015380, 40025360, 40035430, 40045410, 40055419, 40065368, 40075347, 40085449, 40095397, 40105407, 40115386, 40125335]</msg>
<status status="PASS" starttime="20201110 08:38:49.538" endtime="20201110 08:38:49.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.529" endtime="20201110 08:38:49.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.556" endtime="20201110 08:38:49.849"></status>
</kw>
<msg timestamp="20201110 08:38:49.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024940028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035057514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.553" endtime="20201110 08:38:49.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024940028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035057514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.853" endtime="20201110 08:38:49.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.861" endtime="20201110 08:38:49.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.548" endtime="20201110 08:38:49.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.544" endtime="20201110 08:38:49.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:49.889" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:49.864" endtime="20201110 08:38:49.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.894" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:38:49.892" endtime="20201110 08:38:49.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.895" level="INFO">VALUE: 0.024940028</msg>
<status status="PASS" starttime="20201110 08:38:49.895" endtime="20201110 08:38:49.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.890" endtime="20201110 08:38:49.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.901" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:49.900" endtime="20201110 08:38:49.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.903" level="INFO">VALUE: [0.035057514, 0.045025528, 0.054992528, 0.064929667, 0.074896681, 0.084951306, 0.094889264, 0.104856403, 0.114824083, 0.124759694, 0.134814, 0.144781042, 0.154718069, 0.164686583, 0.174654139, 0.184678153, 0.194646347, 0.204613708, 0.214551278, 0.224517889, 0.234572264, 0.244509472, 0.254476528, 0.264444819, 0.274380056, 0.284430708, 0.294395125, 0.304358069, 0.314292208, 0.3242545, 0.334304694, 0.344237972, 0.3542005, 0.364164528, 0.374097389, 0.384147875, 0.394112181, 0.404045167, 0.414008944, 0.423971903, 0.433992375, 0.443957472, 0.453926333, 0.463865708, 0.473834111, 0.4838905, 0.493829847, 0.503798653, 0.513768111, 0.523706319, 0.533762611, 0.543732264, 0.55370125, 0.563640125, 0.573608319, 0.583664083, 0.593603, 0.603570931, 0.613539125, 0.623476167, 0.633528542, 0.643491986, 0.653424444, 0.663388319, 0.673351583, 0.6833715, 0.693336139, 0.703299292, 0.713232528, 0.723196, 0.733246292, 0.743180306, 0.753143778, 0.763108181, 0.773039722, 0.783089528, 0.793053111, 0.803016097, 0.812948556, 0.822910361, 0.832960889, 0.842895042, 0.852859042, 0.862823556, 0.872757042, 0.882806958, 0.892771861, 0.902706458, 0.912671083, 0.922635056, 0.932658847, 0.942626792, 0.952594986, 0.962533472, 0.972501528, 0.982557167, 0.992494708, 1.002462431, 1.012428014, 1.022361347] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:49.902" endtime="20201110 08:38:49.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.897" endtime="20201110 08:38:49.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.906" endtime="20201110 08:38:49.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:49.909" endtime="20201110 08:38:49.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.908" endtime="20201110 08:38:49.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.904" endtime="20201110 08:38:49.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.348" endtime="20201110 08:38:49.931"></status>
</kw>
<msg timestamp="20201110 08:38:49.931" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.939" endtime="20201110 08:38:52.048"></status>
</kw>
<msg timestamp="20201110 08:38:52.049" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41714660, 'start-iter': 1, 'wakeups': [41724822, 41734802, 41744812, 4...</msg>
<status status="PASS" starttime="20201110 08:38:49.937" endtime="20201110 08:38:52.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.055" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41714660, 'start-iter': 1, 'wakeups': [41724822, 41734802, 41744812, 4...</msg>
<status status="PASS" starttime="20201110 08:38:52.051" endtime="20201110 08:38:52.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.057" endtime="20201110 08:38:52.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.935" endtime="20201110 08:38:52.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.933" endtime="20201110 08:38:52.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:52.070" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 6, 'wakeups': [41724822, 41734802, 41744812, 41754760, 41764739, 41774841, 41784790, 41794799, 41804779, 41814727, 41824829, 41834808, 41844787, 41854766, 41864746, 41...</msg>
<status status="PASS" starttime="20201110 08:38:52.064" endtime="20201110 08:38:52.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.078" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:52.076" endtime="20201110 08:38:52.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.083" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:52.081" endtime="20201110 08:38:52.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.072" endtime="20201110 08:38:52.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.092" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:52.091" endtime="20201110 08:38:52.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.097" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:52.095" endtime="20201110 08:38:52.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.086" endtime="20201110 08:38:52.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.107" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:38:52.105" endtime="20201110 08:38:52.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.111" level="INFO">VALUE: 41714660</msg>
<status status="PASS" starttime="20201110 08:38:52.109" endtime="20201110 08:38:52.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.100" endtime="20201110 08:38:52.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.121" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:52.119" endtime="20201110 08:38:52.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.125" level="INFO">VALUE: [41724822, 41734802, 41744812, 41754760, 41764739, 41774841, 41784790, 41794799, 41804779, 41814727, 41824829, 41834808, 41844787, 41854766, 41864746, 41874816, 41884796, 41894805, 41904754, 41914733, 41924835, 41934783, 41944793, 41954772, 41964721, 41974822, 41984802, 41994812, 42004760, 42014739, 42024841, 42034790, 42044799, 42054779, 42064727, 42074829, 42084808, 42094787, 42104766, 42114746, 42124816, 42134796, 42144805, 42154754, 42164733, 42174835, 42184783, 42194793, 42204772, 42214721, 42224822, 42234802, 42244812, 42254760, 42264739, 42274841, 42284790, 42294799, 42304779, 42314727, 42324829, 42334808, 42344787, 42354766, 42364746, 42374816, 42384796, 42394805, 42404754, 42414733, 42424835, 42434783, 42444793, 42454772, 42464721, 42474822, 42484802, 42494812, 42504760, 42514739, 42524841, 42534790, 42544799, 42554779, 42564727, 42574829, 42584808, 42594787, 42604766, 42614746, 42624816, 42634796, 42644805, 42654754, 42664733, 42674835, 42684783, 42694793, 42704772, 42714721]</msg>
<status status="PASS" starttime="20201110 08:38:52.123" endtime="20201110 08:38:52.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.114" endtime="20201110 08:38:52.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.142" endtime="20201110 08:38:52.436"></status>
</kw>
<msg timestamp="20201110 08:38:52.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021415556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031531181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.138" endtime="20201110 08:38:52.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021415556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031531181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.439" endtime="20201110 08:38:52.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.447" endtime="20201110 08:38:52.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.133" endtime="20201110 08:38:52.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.128" endtime="20201110 08:38:52.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:52.475" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:52.450" endtime="20201110 08:38:52.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.479" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:38:52.478" endtime="20201110 08:38:52.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.481" level="INFO">VALUE: 0.021415556</msg>
<status status="PASS" starttime="20201110 08:38:52.480" endtime="20201110 08:38:52.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.476" endtime="20201110 08:38:52.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.486" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:52.485" endtime="20201110 08:38:52.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.488" level="INFO">VALUE: [0.031531181, 0.041499375, 0.05146375, 0.061397569, 0.071360528, 0.081410986, 0.091344583, 0.101307556, 0.11127175, 0.121204694, 0.131255972, 0.141220236, 0.151154236, 0.161119569, 0.171083042, 0.181103736, 0.191068944, 0.201033014, 0.210968014, 0.220934861, 0.230986319, 0.240921333, 0.250885958, 0.260850931, 0.270785042, 0.280837153, 0.290801375, 0.300765403, 0.310699708, 0.320663417, 0.330714556, 0.340648625, 0.350612736, 0.360576625, 0.370509361, 0.380560458, 0.390524028, 0.400456736, 0.410420694, 0.420383889, 0.430404264, 0.440366458, 0.450329847, 0.460264139, 0.470227889, 0.48027975, 0.490214986, 0.500179681, 0.510143458, 0.520075972, 0.530126681, 0.5400895, 0.550052361, 0.559985653, 0.569948736, 0.579999125, 0.589932639, 0.599895958, 0.609859625, 0.619792569, 0.629842694, 0.6398065, 0.649740167, 0.659703778, 0.669665944, 0.679684931, 0.689648333, 0.699611181, 0.709544486, 0.719506472, 0.72955775, 0.739495403, 0.749464139, 0.759433958, 0.769371042, 0.77942675, 0.789396736, 0.799363875, 0.809297569, 0.819262347, 0.829313486, 0.839248264, 0.849212486, 0.859177056, 0.869109222, 0.879159583, 0.889123194, 0.899055347, 0.909019278, 0.918982472, 0.929002042, 0.938966, 0.94892975, 0.958863028, 0.968826444, 0.978876625, 0.988809764, 0.998773778, 1.008739153, 1.018673125] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:52.487" endtime="20201110 08:38:52.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.482" endtime="20201110 08:38:52.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.491" endtime="20201110 08:38:52.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:52.495" endtime="20201110 08:38:52.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.493" endtime="20201110 08:38:52.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.490" endtime="20201110 08:38:52.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.931" endtime="20201110 08:38:52.515"></status>
</kw>
<msg timestamp="20201110 08:38:52.516" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.524" endtime="20201110 08:38:54.630"></status>
</kw>
<msg timestamp="20201110 08:38:54.631" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44304382, 'start-iter': 1, 'wakeups': [44314514, 44324523, 44334533, 4...</msg>
<status status="PASS" starttime="20201110 08:38:52.522" endtime="20201110 08:38:54.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.638" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44304382, 'start-iter': 1, 'wakeups': [44314514, 44324523, 44334533, 4...</msg>
<status status="PASS" starttime="20201110 08:38:54.634" endtime="20201110 08:38:54.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.640" endtime="20201110 08:38:54.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.520" endtime="20201110 08:38:54.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.518" endtime="20201110 08:38:54.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:54.651" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 6, 'wakeups': [44314514, 44324523, 44334533, 44344482, 44354461, 44364562, 44374511, 44384521, 44394500, 44404449, 44414550, 44424530, 44434509, 44444488, 44454467, 44...</msg>
<status status="PASS" starttime="20201110 08:38:54.647" endtime="20201110 08:38:54.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.659" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:54.657" endtime="20201110 08:38:54.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.663" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:54.661" endtime="20201110 08:38:54.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.652" endtime="20201110 08:38:54.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.675" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:54.673" endtime="20201110 08:38:54.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.680" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:54.678" endtime="20201110 08:38:54.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.666" endtime="20201110 08:38:54.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.690" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:38:54.688" endtime="20201110 08:38:54.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.692" level="INFO">VALUE: 44304382</msg>
<status status="PASS" starttime="20201110 08:38:54.691" endtime="20201110 08:38:54.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.683" endtime="20201110 08:38:54.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.697" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:54.696" endtime="20201110 08:38:54.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.699" level="INFO">VALUE: [44314514, 44324523, 44334533, 44344482, 44354461, 44364562, 44374511, 44384521, 44394500, 44404449, 44414550, 44424530, 44434509, 44444488, 44454467, 44464538, 44474517, 44484527, 44494476, 44504455, 44514556, 44524505, 44534515, 44544494, 44554443, 44564544, 44574523, 44584533, 44594482, 44604461, 44614562, 44624511, 44634521, 44644500, 44654449, 44664550, 44674530, 44684509, 44694488, 44704467, 44714538, 44724517, 44734527, 44744476, 44754455, 44764556, 44774505, 44784515, 44794494, 44804443, 44814544, 44824523, 44834533, 44844482, 44854461, 44864562, 44874511, 44884521, 44894500, 44904449, 44914550, 44924530, 44934509, 44944488, 44954467, 44964538, 44974517, 44984527, 44994476, 45004455, 45014556, 45024505, 45034515, 45044494, 45054443, 45064544, 45074523, 45084533, 45094482, 45104461, 45114562, 45124511, 45134521, 45144500, 45154449, 45164550, 45174530, 45184509, 45194488, 45204467, 45214538, 45224517, 45234527, 45244476, 45254455, 45264556, 45274505, 45284515, 45294494, 45304443]</msg>
<status status="PASS" starttime="20201110 08:38:54.698" endtime="20201110 08:38:54.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.693" endtime="20201110 08:38:54.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.706" endtime="20201110 08:38:54.997"></status>
</kw>
<msg timestamp="20201110 08:38:55.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018314569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028427917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.704" endtime="20201110 08:38:55.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018314569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028427917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.001" endtime="20201110 08:38:55.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.013" endtime="20201110 08:38:55.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.702" endtime="20201110 08:38:55.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.700" endtime="20201110 08:38:55.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:55.041" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:55.017" endtime="20201110 08:38:55.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.046" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:38:55.045" endtime="20201110 08:38:55.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.048" level="INFO">VALUE: 0.018314569</msg>
<status status="PASS" starttime="20201110 08:38:55.047" endtime="20201110 08:38:55.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.042" endtime="20201110 08:38:55.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.053" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:55.052" endtime="20201110 08:38:55.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.055" level="INFO">VALUE: [0.028427917, 0.038427792, 0.048394833, 0.058329056, 0.068292806, 0.078344486, 0.088279014, 0.098243653, 0.108208972, 0.118142, 0.128197375, 0.138166361, 0.148104458, 0.158072653, 0.168039833, 0.178064292, 0.188032542, 0.198, 0.207937778, 0.217905208, 0.227961597, 0.237901014, 0.247869903, 0.257839514, 0.267777903, 0.277833764, 0.287802167, 0.297770583, 0.307709625, 0.317678069, 0.327733931, 0.337672556, 0.347640722, 0.357610222, 0.367547347, 0.377603056, 0.387571472, 0.397506139, 0.407471597, 0.417435347, 0.427456069, 0.437421042, 0.447386069, 0.457320903, 0.467285417, 0.477336611, 0.487271278, 0.497239722, 0.507207806, 0.517144694, 0.527200097, 0.537167944, 0.547136639, 0.557074833, 0.567042264, 0.577094222, 0.587029625, 0.596995028, 0.606960583, 0.616894431, 0.626946236, 0.636911236, 0.646844625, 0.656809264, 0.666772639, 0.676793778, 0.686758889, 0.696722958, 0.706657347, 0.716621097, 0.726673653, 0.736608556, 0.746573556, 0.756538625, 0.766472917, 0.776525625, 0.786491694, 0.796457333, 0.806393611, 0.816362194, 0.826418389, 0.836358083, 0.846327208, 0.856296792, 0.866234389, 0.876289917, 0.886259361, 0.896198903, 0.906168417, 0.916137292, 0.926161833, 0.936126708, 0.946092194, 0.956026819, 0.965990611, 0.976041986, 0.985977389, 0.995942639, 1.005908514, 1.015843458] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:55.054" endtime="20201110 08:38:55.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.049" endtime="20201110 08:38:55.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.058" endtime="20201110 08:38:55.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.061" endtime="20201110 08:38:55.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.060" endtime="20201110 08:38:55.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.056" endtime="20201110 08:38:55.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.516" endtime="20201110 08:38:55.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.346" endtime="20201110 08:38:55.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.345" endtime="20201110 08:38:55.083"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:55.085" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.093" endtime="20201110 08:38:57.202"></status>
</kw>
<msg timestamp="20201110 08:38:57.203" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46883758, 'start-iter': 1, 'wakeups': [46893920, 46903900, 46913909, 4...</msg>
<status status="PASS" starttime="20201110 08:38:55.092" endtime="20201110 08:38:57.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.209" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46883758, 'start-iter': 1, 'wakeups': [46893920, 46903900, 46913909, 4...</msg>
<status status="PASS" starttime="20201110 08:38:57.205" endtime="20201110 08:38:57.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.211" endtime="20201110 08:38:57.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.089" endtime="20201110 08:38:57.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.087" endtime="20201110 08:38:57.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:57.223" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 7, 'wakeups': [46893920, 46903900, 46913909, 46923858, 46933868, 46943847, 46953796, 46963897, 46973876, 46983856, 46993835, 47003814, 47013885, 47023895, 47033905, 47...</msg>
<status status="PASS" starttime="20201110 08:38:57.219" endtime="20201110 08:38:57.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.231" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:57.229" endtime="20201110 08:38:57.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.235" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:57.233" endtime="20201110 08:38:57.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.224" endtime="20201110 08:38:57.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.245" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:57.243" endtime="20201110 08:38:57.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.250" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:57.248" endtime="20201110 08:38:57.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.238" endtime="20201110 08:38:57.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.260" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:38:57.257" endtime="20201110 08:38:57.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.266" level="INFO">VALUE: 46883758</msg>
<status status="PASS" starttime="20201110 08:38:57.264" endtime="20201110 08:38:57.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.253" endtime="20201110 08:38:57.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.276" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:57.274" endtime="20201110 08:38:57.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.281" level="INFO">VALUE: [46893920, 46903900, 46913909, 46923858, 46933868, 46943847, 46953796, 46963897, 46973876, 46983856, 46993835, 47003814, 47013885, 47023895, 47033905, 47043853, 47053863, 47063842, 47073791, 47083892, 47093902, 47103881, 47113891, 47123901, 47133880, 47143859, 47153869, 47163848, 47173797, 47183898, 47193908, 47203887, 47213897, 47223907, 47233886, 47243865, 47253875, 47263824, 47273803, 47283905, 47293884, 47303894, 47313873, 47323852, 47333831, 47343811, 47353881, 47363861, 47373870, 47383819, 47393798, 47403900, 47413909, 47423858, 47433868, 47443847, 47453796, 47463897, 47473876, 47483856, 47493835, 47503814, 47513885, 47523895, 47533905, 47543853, 47553863, 47563842, 47573791, 47583892, 47593902, 47603881, 47613891, 47623901, 47633880, 47643859, 47653869, 47663848, 47673797, 47683898, 47693908, 47703887, 47713897, 47723907, 47733886, 47743865, 47753875, 47763824, 47773803, 47783905, 47793884, 47803894, 47813873, 47823852, 47833831, 47843811, 47853881, 47863861, 47873870, 47883819]</msg>
<status status="PASS" starttime="20201110 08:38:57.278" endtime="20201110 08:38:57.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.269" endtime="20201110 08:38:57.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.296" endtime="20201110 08:38:57.592"></status>
</kw>
<msg timestamp="20201110 08:38:57.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023971319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034104306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.293" endtime="20201110 08:38:57.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023971319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034104306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.596" endtime="20201110 08:38:57.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.603" endtime="20201110 08:38:57.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.287" endtime="20201110 08:38:57.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.284" endtime="20201110 08:38:57.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:57.630" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:38:57.607" endtime="20201110 08:38:57.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.635" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:38:57.634" endtime="20201110 08:38:57.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.637" level="INFO">VALUE: 0.023971319</msg>
<status status="PASS" starttime="20201110 08:38:57.636" endtime="20201110 08:38:57.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.632" endtime="20201110 08:38:57.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.642" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:57.641" endtime="20201110 08:38:57.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.645" level="INFO">VALUE: [0.034104306, 0.044055778, 0.05402, 0.063953806, 0.073916139, 0.083879319, 0.093811681, 0.103865014, 0.113829542, 0.123762236, 0.133724986, 0.143689028, 0.1537335, 0.163718764, 0.173686792, 0.183623736, 0.193591153, 0.203559208, 0.213493486, 0.223569764, 0.233556806, 0.243513319, 0.253499931, 0.263486944, 0.273422972, 0.283388236, 0.293353097, 0.303318931, 0.313252097, 0.323324125, 0.333306375, 0.343258875, 0.353241236, 0.363223431, 0.373157764, 0.383123528, 0.393087792, 0.403022528, 0.412986486, 0.423057875, 0.433008417, 0.442972986, 0.452937917, 0.462870556, 0.472834375, 0.482796639, 0.492818986, 0.502783542, 0.512748042, 0.522681847, 0.532645167, 0.542715611, 0.552679181, 0.562614069, 0.572576903, 0.582541833, 0.592475792, 0.602528764, 0.612493542, 0.622428667, 0.632396764, 0.642363889, 0.652408611, 0.662394042, 0.672361944, 0.682297736, 0.692260889, 0.702225722, 0.712162167, 0.722238903, 0.732224875, 0.742180986, 0.752168653, 0.762155708, 0.772094194, 0.782064097, 0.792034194, 0.802004181, 0.811942861, 0.822018944, 0.832004236, 0.841957736, 0.851943819, 0.861930486, 0.871868042, 0.881836167, 0.89180125, 0.901735125, 0.911698167, 0.921768667, 0.931719278, 0.941684125, 0.951648083, 0.961581208, 0.971545125, 0.981507167, 0.991529333, 1.001493458, 1.011456292, 1.021389] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:57.644" endtime="20201110 08:38:57.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.639" endtime="20201110 08:38:57.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.648" endtime="20201110 08:38:57.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:57.652" endtime="20201110 08:38:57.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.650" endtime="20201110 08:38:57.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.647" endtime="20201110 08:38:57.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.086" endtime="20201110 08:38:57.672"></status>
</kw>
<msg timestamp="20201110 08:38:57.673" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.681" endtime="20201110 08:38:59.789"></status>
</kw>
<msg timestamp="20201110 08:38:59.790" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49478118, 'start-iter': 1, 'wakeups': [49488281, 49498260, 49508209, 4...</msg>
<status status="PASS" starttime="20201110 08:38:57.679" endtime="20201110 08:38:59.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.796" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49478118, 'start-iter': 1, 'wakeups': [49488281, 49498260, 49508209, 4...</msg>
<status status="PASS" starttime="20201110 08:38:59.792" endtime="20201110 08:38:59.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.798" endtime="20201110 08:38:59.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.676" endtime="20201110 08:38:59.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.675" endtime="20201110 08:38:59.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:59.809" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 7, 'wakeups': [49488281, 49498260, 49508209, 49518218, 49528198, 49538177, 49548248, 49558258, 49568237, 49578216, 49588195, 49598175, 49608245, 49618225, 49628234, 49...</msg>
<status status="PASS" starttime="20201110 08:38:59.805" endtime="20201110 08:38:59.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.817" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:59.815" endtime="20201110 08:38:59.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.822" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:59.820" endtime="20201110 08:38:59.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.810" endtime="20201110 08:38:59.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.833" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:59.831" endtime="20201110 08:38:59.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.838" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:59.836" endtime="20201110 08:38:59.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.826" endtime="20201110 08:38:59.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.849" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:38:59.846" endtime="20201110 08:38:59.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.853" level="INFO">VALUE: 49478118</msg>
<status status="PASS" starttime="20201110 08:38:59.851" endtime="20201110 08:38:59.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.841" endtime="20201110 08:38:59.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.863" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:59.861" endtime="20201110 08:38:59.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.868" level="INFO">VALUE: [49488281, 49498260, 49508209, 49518218, 49528198, 49538177, 49548248, 49558258, 49568237, 49578216, 49588195, 49598175, 49608245, 49618225, 49628234, 49638183, 49648162, 49658264, 49668243, 49678222, 49688232, 49698181, 49708160, 49718261, 49728210, 49738220, 49748199, 49758148, 49768249, 49778228, 49788238, 49798187, 49808166, 49818267, 49828247, 49838256, 49848236, 49858215, 49868194, 49878173, 49888244, 49898254, 49908264, 49918212, 49928222, 49938201, 49948150, 49958251, 49968261, 49978240, 49988250, 49998260, 50008239, 50018249, 50028259, 50038269, 50048217, 50058227, 50068206, 50078155, 50088256, 50098266, 50108245, 50118255, 50128265, 50138244, 50148223, 50158233, 50168182, 50178161, 50188262, 50198242, 50208251, 50218231, 50228210, 50238189, 50248168, 50258239, 50268218, 50278228, 50288208, 50298156, 50308258, 50318267, 50328216, 50338226, 50348205, 50358154, 50368255, 50378234, 50388214, 50398193, 50408172, 50418243, 50428253, 50438232, 50448211, 50458190, 50468170, 50478240]</msg>
<status status="PASS" starttime="20201110 08:38:59.865" endtime="20201110 08:38:59.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.856" endtime="20201110 08:38:59.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.885" endtime="20201110 08:39:00.177"></status>
</kw>
<msg timestamp="20201110 08:39:00.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021072819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031218264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:59.882" endtime="20201110 08:39:00.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021072819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031218264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.181" endtime="20201110 08:39:00.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.189" endtime="20201110 08:39:00.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.874" endtime="20201110 08:39:00.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.871" endtime="20201110 08:39:00.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:00.216" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:39:00.192" endtime="20201110 08:39:00.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.221" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:00.220" endtime="20201110 08:39:00.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.223" level="INFO">VALUE: 0.021072819</msg>
<status status="PASS" starttime="20201110 08:39:00.222" endtime="20201110 08:39:00.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.217" endtime="20201110 08:39:00.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.233" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:00.227" endtime="20201110 08:39:00.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.235" level="INFO">VALUE: [0.031218264, 0.041155319, 0.051092639, 0.06106, 0.071024583, 0.080987111, 0.091027569, 0.100990375, 0.110954153, 0.120887347, 0.130851764, 0.140814917, 0.150837917, 0.160802556, 0.170765917, 0.18070075, 0.190663361, 0.200734792, 0.210669347, 0.220634681, 0.230598708, 0.240533028, 0.250499847, 0.260557375, 0.270495611, 0.280464278, 0.290432958, 0.300365319, 0.310418847, 0.320381833, 0.33034425, 0.340277653, 0.350240222, 0.360310264, 0.370260792, 0.380223361, 0.390186403, 0.400118958, 0.410082778, 0.420045792, 0.430085111, 0.44006625, 0.450031819, 0.459969528, 0.469936236, 0.479903222, 0.489839236, 0.499914111, 0.509899917, 0.519852014, 0.5298345, 0.539817514, 0.549769125, 0.559751875, 0.569734222, 0.579698514, 0.589632917, 0.599596583, 0.609559847, 0.619491625, 0.629562264, 0.639543917, 0.6494945, 0.659476361, 0.669458389, 0.679395653, 0.689363319, 0.699329736, 0.709262958, 0.719225694, 0.729297069, 0.739248347, 0.749212667, 0.759177778, 0.769111417, 0.779076528, 0.789040542, 0.799063931, 0.809028583, 0.818991472, 0.828955167, 0.838887125, 0.848957222, 0.858919875, 0.868852903, 0.878816861, 0.888784292, 0.898720903, 0.908778403, 0.918747514, 0.928684875, 0.938653639, 0.948621167, 0.958662681, 0.968627306, 0.978592056, 0.988524556, 0.998489583, 1.008451597, 1.018473806] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:00.234" endtime="20201110 08:39:00.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.224" endtime="20201110 08:39:00.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.238" endtime="20201110 08:39:00.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:00.241" endtime="20201110 08:39:00.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.240" endtime="20201110 08:39:00.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.236" endtime="20201110 08:39:00.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.673" endtime="20201110 08:39:00.262"></status>
</kw>
<msg timestamp="20201110 08:39:00.262" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.271" endtime="20201110 08:39:02.382"></status>
</kw>
<msg timestamp="20201110 08:39:02.383" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52077697, 'start-iter': 1, 'wakeups': [52087860, 52097839, 52107818, 5...</msg>
<status status="PASS" starttime="20201110 08:39:00.270" endtime="20201110 08:39:02.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.389" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52077697, 'start-iter': 1, 'wakeups': [52087860, 52097839, 52107818, 5...</msg>
<status status="PASS" starttime="20201110 08:39:02.385" endtime="20201110 08:39:02.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.391" endtime="20201110 08:39:02.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.266" endtime="20201110 08:39:02.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.264" endtime="20201110 08:39:02.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:02.402" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 7, 'wakeups': [52087860, 52097839, 52107818, 52117797, 52127777, 52137756, 52147827, 52157806, 52167816, 52177764, 52187744, 52197845, 52207794, 52217803, 52227783, 52...</msg>
<status status="PASS" starttime="20201110 08:39:02.398" endtime="20201110 08:39:02.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.411" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:02.408" endtime="20201110 08:39:02.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.415" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:02.413" endtime="20201110 08:39:02.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.404" endtime="20201110 08:39:02.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.425" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:02.423" endtime="20201110 08:39:02.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.429" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:02.427" endtime="20201110 08:39:02.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.418" endtime="20201110 08:39:02.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.440" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:02.437" endtime="20201110 08:39:02.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.444" level="INFO">VALUE: 52077697</msg>
<status status="PASS" starttime="20201110 08:39:02.442" endtime="20201110 08:39:02.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.432" endtime="20201110 08:39:02.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.454" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:02.452" endtime="20201110 08:39:02.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.458" level="INFO">VALUE: [52087860, 52097839, 52107818, 52117797, 52127777, 52137756, 52147827, 52157806, 52167816, 52177764, 52187744, 52197845, 52207794, 52217803, 52227783, 52237731, 52247833, 52257812, 52267791, 52277770, 52287750, 52297821, 52307800, 52317810, 52327758, 52337738, 52347839, 52357818, 52367797, 52377777, 52387756, 52397827, 52407806, 52417816, 52427764, 52437744, 52447845, 52457794, 52467803, 52477783, 52487731, 52497833, 52507812, 52517791, 52527770, 52537750, 52547821, 52557800, 52567810, 52577758, 52587738, 52597839, 52607818, 52617797, 52627777, 52637756, 52647827, 52657806, 52667816, 52677764, 52687744, 52697845, 52707794, 52717803, 52727783, 52737731, 52747833, 52757812, 52767791, 52777770, 52787750, 52797821, 52807800, 52817810, 52827758, 52837738, 52847839, 52857818, 52867797, 52877777, 52887756, 52897827, 52907806, 52917816, 52927764, 52937744, 52947845, 52957794, 52967803, 52977783, 52987731, 52997833, 53007812, 53017791, 53027770, 53037750, 53047821, 53057800, 53067810, 53077758]</msg>
<status status="PASS" starttime="20201110 08:39:02.456" endtime="20201110 08:39:02.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.447" endtime="20201110 08:39:02.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.474" endtime="20201110 08:39:02.765"></status>
</kw>
<msg timestamp="20201110 08:39:02.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02372475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033872403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:02.470" endtime="20201110 08:39:02.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02372475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033872403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:02.769" endtime="20201110 08:39:02.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.777" endtime="20201110 08:39:02.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.465" endtime="20201110 08:39:02.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.461" endtime="20201110 08:39:02.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:02.805" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:39:02.780" endtime="20201110 08:39:02.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.809" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:02.808" endtime="20201110 08:39:02.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.811" level="INFO">VALUE: 0.02372475</msg>
<status status="PASS" starttime="20201110 08:39:02.810" endtime="20201110 08:39:02.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.806" endtime="20201110 08:39:02.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.816" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:02.815" endtime="20201110 08:39:02.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.819" level="INFO">VALUE: [0.033872403, 0.043807639, 0.053772736, 0.063705847, 0.073674, 0.083641125, 0.093667861, 0.103636361, 0.113604194, 0.123542889, 0.133511125, 0.143568236, 0.153506306, 0.163474403, 0.173442472, 0.183379569, 0.193438375, 0.203409444, 0.213347389, 0.223313819, 0.233277722, 0.243302042, 0.253267708, 0.263232417, 0.273166153, 0.283131097, 0.293186653, 0.303152222, 0.313085306, 0.323050528, 0.333014764, 0.343038514, 0.353003208, 0.362967472, 0.372901, 0.382863806, 0.392917111, 0.402852111, 0.412816097, 0.422780194, 0.432712944, 0.442766417, 0.452731847, 0.462665667, 0.472631097, 0.482595056, 0.492619069, 0.502584861, 0.512549042, 0.522483417, 0.532451069, 0.542509181, 0.552478042, 0.562416139, 0.572385708, 0.58235375, 0.592381931, 0.60235225, 0.612322208, 0.6222615, 0.632227542, 0.642282694, 0.652218431, 0.662184264, 0.672150347, 0.682085125, 0.692139778, 0.702106139, 0.712040083, 0.722005472, 0.731970403, 0.741995556, 0.751961375, 0.761924639, 0.771858556, 0.78182175, 0.791875458, 0.801840208, 0.811773986, 0.821738264, 0.831701903, 0.841725014, 0.851690264, 0.861654486, 0.871588431, 0.881551875, 0.891606861, 0.901540667, 0.911505, 0.921470236, 0.931404597, 0.941459597, 0.951425347, 0.961359181, 0.971323903, 0.981290042, 0.991314972, 1.001279639, 1.011244014, 1.021179431] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:02.818" endtime="20201110 08:39:02.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.813" endtime="20201110 08:39:02.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.822" endtime="20201110 08:39:02.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:02.825" endtime="20201110 08:39:02.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.824" endtime="20201110 08:39:02.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.820" endtime="20201110 08:39:02.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.263" endtime="20201110 08:39:02.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.084" endtime="20201110 08:39:02.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.083" endtime="20201110 08:39:02.847"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:02.849" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.857" endtime="20201110 08:39:04.968"></status>
</kw>
<msg timestamp="20201110 08:39:04.969" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54667175, 'start-iter': 1, 'wakeups': [54677368, 54687347, 54697326, 5...</msg>
<status status="PASS" starttime="20201110 08:39:02.855" endtime="20201110 08:39:04.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.975" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54667175, 'start-iter': 1, 'wakeups': [54677368, 54687347, 54697326, 5...</msg>
<status status="PASS" starttime="20201110 08:39:04.971" endtime="20201110 08:39:04.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.978" endtime="20201110 08:39:04.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.853" endtime="20201110 08:39:04.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.851" endtime="20201110 08:39:04.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:04.989" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 8, 'wakeups': [54677368, 54687347, 54697326, 54707275, 54717346, 54727355, 54737304, 54747283, 54757354, 54767333, 54777313, 54787292, 54797332, 54807342, 54817321, 54...</msg>
<status status="PASS" starttime="20201110 08:39:04.985" endtime="20201110 08:39:04.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.999" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:04.995" endtime="20201110 08:39:05.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.004" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:05.002" endtime="20201110 08:39:05.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.990" endtime="20201110 08:39:05.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.014" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:05.012" endtime="20201110 08:39:05.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.018" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:05.016" endtime="20201110 08:39:05.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.007" endtime="20201110 08:39:05.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.028" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:05.026" endtime="20201110 08:39:05.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.032" level="INFO">VALUE: 54667175</msg>
<status status="PASS" starttime="20201110 08:39:05.030" endtime="20201110 08:39:05.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.021" endtime="20201110 08:39:05.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.042" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:05.040" endtime="20201110 08:39:05.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.047" level="INFO">VALUE: [54677368, 54687347, 54697326, 54707275, 54717346, 54727355, 54737304, 54747283, 54757354, 54767333, 54777313, 54787292, 54797332, 54807342, 54817321, 54827270, 54837341, 54847351, 54857299, 54867279, 54877349, 54887329, 54897308, 54907287, 54917327, 54927337, 54937316, 54947296, 54957336, 54967346, 54977325, 54987274, 54997344, 55007354, 55017303, 55027282, 55037353, 55047332, 55057312, 55067291, 55077331, 55087341, 55097320, 55107269, 55117340, 55127349, 55137298, 55147277, 55157348, 55167327, 55177307, 55187286, 55197357, 55207336, 55217315, 55227294, 55237335, 55247344, 55257324, 55267272, 55277343, 55287353, 55297302, 55307281, 55317352, 55327331, 55337310, 55347290, 55357330, 55367340, 55377319, 55387268, 55397338, 55407348, 55417297, 55427276, 55437347, 55447357, 55457305, 55467285, 55477355, 55487335, 55497314, 55507293, 55517333, 55527343, 55537322, 55547271, 55557342, 55567352, 55577301, 55587280, 55597351, 55607330, 55617309, 55627288, 55637329, 55647338, 55657318, 55667266]</msg>
<status status="PASS" starttime="20201110 08:39:05.044" endtime="20201110 08:39:05.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.035" endtime="20201110 08:39:05.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.055" endtime="20201110 08:39:05.346"></status>
</kw>
<msg timestamp="20201110 08:39:05.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032254347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.054" endtime="20201110 08:39:05.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032254347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.350" endtime="20201110 08:39:05.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.357" endtime="20201110 08:39:05.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.051" endtime="20201110 08:39:05.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.049" endtime="20201110 08:39:05.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:05.385" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:39:05.360" endtime="20201110 08:39:05.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.390" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:05.389" endtime="20201110 08:39:05.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.392" level="INFO">VALUE: 0.022098417</msg>
<status status="PASS" starttime="20201110 08:39:05.391" endtime="20201110 08:39:05.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.386" endtime="20201110 08:39:05.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.397" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:05.396" endtime="20201110 08:39:05.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.399" level="INFO">VALUE: [0.032254347, 0.042188861, 0.052153403, 0.062086931, 0.072123236, 0.082087056, 0.092020542, 0.101983361, 0.112019417, 0.121952917, 0.131916472, 0.141878889, 0.151885111, 0.161847681, 0.171812431, 0.181744389, 0.191780875, 0.201744611, 0.211678528, 0.221640917, 0.231677458, 0.241611278, 0.251575083, 0.261539611, 0.271549708, 0.281518153, 0.291486986, 0.301454264, 0.311464694, 0.321432667, 0.331401583, 0.341337986, 0.351374681, 0.361339097, 0.3712725, 0.381236819, 0.391273347, 0.401207278, 0.411171903, 0.421135389, 0.43114175, 0.441109917, 0.451078778, 0.461016806, 0.471058694, 0.481027625, 0.490966194, 0.500934472, 0.510975431, 0.520913222, 0.530877278, 0.540840556, 0.550879681, 0.560817458, 0.570781667, 0.580745028, 0.590753556, 0.600721944, 0.610690153, 0.620625847, 0.63066275, 0.640625431, 0.650558139, 0.660521972, 0.670562306, 0.680498653, 0.69046575, 0.700432097, 0.710441917, 0.720409028, 0.730376278, 0.740312611, 0.750352014, 0.760319292, 0.770256528, 0.780223139, 0.790262639, 0.800228889, 0.810165278, 0.820131528, 0.830171861, 0.840108181, 0.850076028, 0.860043278, 0.870053625, 0.880021639, 0.889989875, 0.899925861, 0.909965278, 0.919933056, 0.929870486, 0.939838347, 0.949879306, 0.959817167, 0.969785125, 0.979753472, 0.989764306, 0.999732694, 1.009701306, 1.019637792] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:05.398" endtime="20201110 08:39:05.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.393" endtime="20201110 08:39:05.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.402" endtime="20201110 08:39:05.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:05.406" endtime="20201110 08:39:05.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.404" endtime="20201110 08:39:05.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.401" endtime="20201110 08:39:05.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.850" endtime="20201110 08:39:05.433"></status>
</kw>
<msg timestamp="20201110 08:39:05.433" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.441" endtime="20201110 08:39:07.551"></status>
</kw>
<msg timestamp="20201110 08:39:07.552" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57261566, 'start-iter': 1, 'wakeups': [57271759, 57281738, 57291717, 5...</msg>
<status status="PASS" starttime="20201110 08:39:05.439" endtime="20201110 08:39:07.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.557" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57261566, 'start-iter': 1, 'wakeups': [57271759, 57281738, 57291717, 5...</msg>
<status status="PASS" starttime="20201110 08:39:07.554" endtime="20201110 08:39:07.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.560" endtime="20201110 08:39:07.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.437" endtime="20201110 08:39:07.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.435" endtime="20201110 08:39:07.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:07.571" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 8, 'wakeups': [57271759, 57281738, 57291717, 57301666, 57311737, 57321746, 57331695, 57341674, 57351745, 57361724, 57371704, 57381683, 57391723, 57401733, 57411712, 57...</msg>
<status status="PASS" starttime="20201110 08:39:07.567" endtime="20201110 08:39:07.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.579" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:07.577" endtime="20201110 08:39:07.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.583" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:07.581" endtime="20201110 08:39:07.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.572" endtime="20201110 08:39:07.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.593" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:07.591" endtime="20201110 08:39:07.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.598" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:07.596" endtime="20201110 08:39:07.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.586" endtime="20201110 08:39:07.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.610" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:07.608" endtime="20201110 08:39:07.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.614" level="INFO">VALUE: 57261566</msg>
<status status="PASS" starttime="20201110 08:39:07.612" endtime="20201110 08:39:07.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.601" endtime="20201110 08:39:07.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.622" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:07.621" endtime="20201110 08:39:07.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.624" level="INFO">VALUE: [57271759, 57281738, 57291717, 57301666, 57311737, 57321746, 57331695, 57341674, 57351745, 57361724, 57371704, 57381683, 57391723, 57401733, 57411712, 57421661, 57431732, 57441741, 57451690, 57461669, 57471740, 57481719, 57491699, 57501678, 57511718, 57521728, 57531707, 57541687, 57551727, 57561737, 57571716, 57581665, 57591735, 57601745, 57611694, 57621673, 57631744, 57641723, 57651702, 57661682, 57671722, 57681732, 57691711, 57701660, 57711730, 57721740, 57731689, 57741668, 57751739, 57761718, 57771697, 57781677, 57791748, 57801727, 57811706, 57821685, 57831726, 57841735, 57851715, 57861663, 57871734, 57881744, 57891693, 57901672, 57911743, 57921722, 57931701, 57941680, 57951721, 57961730, 57971710, 57981658, 57991729, 58001739, 58011688, 58021667, 58031738, 58041748, 58051696, 58061676, 58071746, 58081726, 58091705, 58101684, 58111724, 58121734, 58131713, 58141662, 58151733, 58161743, 58171691, 58181671, 58191741, 58201721, 58211700, 58221679, 58231719, 58241729, 58251708, 58261657]</msg>
<status status="PASS" starttime="20201110 08:39:07.623" endtime="20201110 08:39:07.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.617" endtime="20201110 08:39:07.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.632" endtime="20201110 08:39:07.922"></status>
</kw>
<msg timestamp="20201110 08:39:07.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029142014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039300389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.630" endtime="20201110 08:39:07.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029142014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039300389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.926" endtime="20201110 08:39:07.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.934" endtime="20201110 08:39:07.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.628" endtime="20201110 08:39:07.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.625" endtime="20201110 08:39:07.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:07.961" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:39:07.937" endtime="20201110 08:39:07.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.965" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:07.964" endtime="20201110 08:39:07.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.967" level="INFO">VALUE: 0.029142014</msg>
<status status="PASS" starttime="20201110 08:39:07.966" endtime="20201110 08:39:07.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.962" endtime="20201110 08:39:07.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.973" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:07.972" endtime="20201110 08:39:07.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.975" level="INFO">VALUE: [0.039300389, 0.049234806, 0.059198819, 0.069132792, 0.079169458, 0.089132667, 0.099065, 0.109028931, 0.119066208, 0.128999139, 0.138963681, 0.148927667, 0.158935278, 0.168898986, 0.178861667, 0.188793486, 0.198829167, 0.208792167, 0.218725139, 0.228687597, 0.238723972, 0.248656681, 0.258619236, 0.268580986, 0.278585347, 0.288548083, 0.298510486, 0.308472014, 0.318476347, 0.328438944, 0.338401444, 0.348332611, 0.358367667, 0.368329444, 0.378261278, 0.388222806, 0.398257431, 0.408189236, 0.418152264, 0.428114319, 0.438119597, 0.448082889, 0.458046639, 0.467979736, 0.478015833, 0.487979083, 0.497913125, 0.507880708, 0.517922, 0.527859208, 0.53782675, 0.547793139, 0.557833389, 0.567770903, 0.577738347, 0.587704833, 0.597714014, 0.607680819, 0.617648111, 0.627584167, 0.637624472, 0.647591222, 0.657527708, 0.667494417, 0.677534236, 0.687471222, 0.697434889, 0.707396986, 0.717401736, 0.7273645, 0.73732725, 0.747259375, 0.757294903, 0.767257222, 0.777189764, 0.787150292, 0.797184972, 0.807147208, 0.817080875, 0.827045208, 0.837080431, 0.84701325, 0.856976056, 0.866938278, 0.876943472, 0.8869105, 0.896877681, 0.906813931, 0.916853361, 0.926820167, 0.936756069, 0.946720458, 0.956760542, 0.966696708, 0.976663806, 0.986630028, 0.996639111, 1.006605639, 1.01657125, 1.026506264] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:07.974" endtime="20201110 08:39:07.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.969" endtime="20201110 08:39:07.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.978" endtime="20201110 08:39:07.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:07.982" endtime="20201110 08:39:08.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.980" endtime="20201110 08:39:08.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.977" endtime="20201110 08:39:08.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.434" endtime="20201110 08:39:08.002"></status>
</kw>
<msg timestamp="20201110 08:39:08.003" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.011" endtime="20201110 08:39:10.119"></status>
</kw>
<msg timestamp="20201110 08:39:10.120" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59836273, 'start-iter': 1, 'wakeups': [59846466, 59856445, 59866424, 5...</msg>
<status status="PASS" starttime="20201110 08:39:08.009" endtime="20201110 08:39:10.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.127" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59836273, 'start-iter': 1, 'wakeups': [59846466, 59856445, 59866424, 5...</msg>
<status status="PASS" starttime="20201110 08:39:10.123" endtime="20201110 08:39:10.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.129" endtime="20201110 08:39:10.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.006" endtime="20201110 08:39:10.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.005" endtime="20201110 08:39:10.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:10.140" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 8, 'wakeups': [59846466, 59856445, 59866424, 59876373, 59886444, 59896453, 59906402, 59916381, 59926452, 59936431, 59946411, 59956390, 59966430, 59976440, 59986419, 59...</msg>
<status status="PASS" starttime="20201110 08:39:10.136" endtime="20201110 08:39:10.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.148" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:10.146" endtime="20201110 08:39:10.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.152" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:10.151" endtime="20201110 08:39:10.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.142" endtime="20201110 08:39:10.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.162" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:10.160" endtime="20201110 08:39:10.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.167" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:10.165" endtime="20201110 08:39:10.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.155" endtime="20201110 08:39:10.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.177" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:10.175" endtime="20201110 08:39:10.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.181" level="INFO">VALUE: 59836273</msg>
<status status="PASS" starttime="20201110 08:39:10.179" endtime="20201110 08:39:10.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.170" endtime="20201110 08:39:10.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.192" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:10.189" endtime="20201110 08:39:10.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.194" level="INFO">VALUE: [59846466, 59856445, 59866424, 59876373, 59886444, 59896453, 59906402, 59916381, 59926452, 59936431, 59946411, 59956390, 59966430, 59976440, 59986419, 59996368, 60006439, 60016448, 60026397, 60036376, 60046447, 60056427, 60066406, 60076385, 60086425, 60096435, 60106414, 60116394, 60126434, 60136444, 60146423, 60156372, 60166442, 60176452, 60186401, 60196380, 60206451, 60216430, 60226409, 60236389, 60246429, 60256439, 60266418, 60276367, 60286437, 60296447, 60306396, 60316375, 60326446, 60336425, 60346405, 60356384, 60366455, 60376434, 60386413, 60396392, 60406433, 60416442, 60426422, 60436370, 60446441, 60456451, 60466400, 60476379, 60486450, 60496429, 60506408, 60516387, 60526428, 60536437, 60546417, 60556365, 60566436, 60576446, 60586395, 60596374, 60606445, 60616455, 60626403, 60636383, 60646453, 60656433, 60666412, 60676391, 60686431, 60696441, 60706420, 60716369, 60726440, 60736450, 60746398, 60756378, 60766448, 60776428, 60786407, 60796386, 60806427, 60816436, 60826416, 60836364]</msg>
<status status="PASS" starttime="20201110 08:39:10.193" endtime="20201110 08:39:10.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.184" endtime="20201110 08:39:10.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.201" endtime="20201110 08:39:10.492"></status>
</kw>
<msg timestamp="20201110 08:39:10.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020527347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030698944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:10.200" endtime="20201110 08:39:10.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020527347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030698944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:10.496" endtime="20201110 08:39:10.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.510" endtime="20201110 08:39:10.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.197" endtime="20201110 08:39:10.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.196" endtime="20201110 08:39:10.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:10.537" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:39:10.513" endtime="20201110 08:39:10.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.542" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:10.541" endtime="20201110 08:39:10.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.544" level="INFO">VALUE: 0.020527347</msg>
<status status="PASS" starttime="20201110 08:39:10.543" endtime="20201110 08:39:10.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.538" endtime="20201110 08:39:10.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.549" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:10.548" endtime="20201110 08:39:10.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.551" level="INFO">VALUE: [0.030698944, 0.040636514, 0.05060525, 0.060543333, 0.070584542, 0.080551875, 0.090489056, 0.100455875, 0.110495819, 0.120432514, 0.130400528, 0.140368694, 0.150377153, 0.160344028, 0.170311403, 0.180247028, 0.190287583, 0.2002555, 0.210193708, 0.220161472, 0.230202889, 0.240140167, 0.250108375, 0.260075764, 0.270087056, 0.280055292, 0.290024167, 0.299989875, 0.3099965, 0.319960361, 0.329924292, 0.339857319, 0.349894528, 0.359857458, 0.369790361, 0.379753681, 0.389789972, 0.399722958, 0.409686472, 0.419649181, 0.429654833, 0.439617347, 0.449581583, 0.459513958, 0.46955, 0.479513653, 0.489447486, 0.499411153, 0.509448569, 0.519386736, 0.529354917, 0.539317764, 0.549353361, 0.559286458, 0.569250403, 0.579213083, 0.589219181, 0.599182972, 0.609147361, 0.619080458, 0.629117611, 0.639081806, 0.649015222, 0.658978264, 0.669014736, 0.678947583, 0.688910764, 0.6988735, 0.708878667, 0.718842708, 0.728807153, 0.73873875, 0.748773917, 0.758737306, 0.768670875, 0.778633375, 0.788669083, 0.798633361, 0.808567139, 0.818530153, 0.828570111, 0.838506875, 0.848473875, 0.858439708, 0.868449556, 0.878416903, 0.888384653, 0.898319792, 0.908358292, 0.918321153, 0.928257431, 0.938223917, 0.948260153, 0.958193028, 0.968156694, 0.978119917, 0.988126139, 0.998094417, 1.008061694, 1.017998833] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:10.550" endtime="20201110 08:39:10.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.545" endtime="20201110 08:39:10.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.554" endtime="20201110 08:39:10.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:10.559" endtime="20201110 08:39:10.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.556" endtime="20201110 08:39:10.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.552" endtime="20201110 08:39:10.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.003" endtime="20201110 08:39:10.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.848" endtime="20201110 08:39:10.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.847" endtime="20201110 08:39:10.580"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:10.583" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.591" endtime="20201110 08:39:12.701"></status>
</kw>
<msg timestamp="20201110 08:39:12.702" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62425872, 'start-iter': 1, 'wakeups': [62436065, 62446075, 62456085, 6...</msg>
<status status="PASS" starttime="20201110 08:39:10.589" endtime="20201110 08:39:12.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.708" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62425872, 'start-iter': 1, 'wakeups': [62436065, 62446075, 62456085, 6...</msg>
<status status="PASS" starttime="20201110 08:39:12.704" endtime="20201110 08:39:12.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.710" endtime="20201110 08:39:12.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.586" endtime="20201110 08:39:12.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.585" endtime="20201110 08:39:12.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:12.722" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 9, 'wakeups': [62436065, 62446075, 62456085, 62466033, 62476013, 62486114, 62496063, 62506072, 62516052, 62526000, 62536102, 62546081, 62556060, 62566040, 62576019, 62...</msg>
<status status="PASS" starttime="20201110 08:39:12.718" endtime="20201110 08:39:12.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.730" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:12.728" endtime="20201110 08:39:12.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.734" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:12.732" endtime="20201110 08:39:12.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.723" endtime="20201110 08:39:12.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.744" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:12.742" endtime="20201110 08:39:12.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.748" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:12.746" endtime="20201110 08:39:12.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.737" endtime="20201110 08:39:12.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.758" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:12.756" endtime="20201110 08:39:12.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.763" level="INFO">VALUE: 62425872</msg>
<status status="PASS" starttime="20201110 08:39:12.761" endtime="20201110 08:39:12.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.751" endtime="20201110 08:39:12.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.772" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:12.770" endtime="20201110 08:39:12.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.777" level="INFO">VALUE: [62436065, 62446075, 62456085, 62466033, 62476013, 62486114, 62496063, 62506072, 62516052, 62526000, 62536102, 62546081, 62556060, 62566040, 62576019, 62586090, 62596069, 62606079, 62616027, 62626007, 62636108, 62646057, 62656066, 62666046, 62675994, 62686096, 62696075, 62706085, 62716033, 62726013, 62736114, 62746063, 62756072, 62766052, 62776000, 62786102, 62796081, 62806060, 62816040, 62826019, 62836090, 62846069, 62856079, 62866027, 62876007, 62886108, 62896057, 62906066, 62916046, 62925994, 62936096, 62946075, 62956085, 62966033, 62976013, 62986114, 62996063, 63006072, 63016052, 63026000, 63036102, 63046081, 63056060, 63066040, 63076019, 63086090, 63096069, 63106079, 63116027, 63126007, 63136108, 63146057, 63156066, 63166046, 63175994, 63186096, 63196075, 63206085, 63216033, 63226013, 63236114, 63246063, 63256072, 63266052, 63276000, 63286102, 63296081, 63306060, 63316040, 63326019, 63336090, 63346069, 63356079, 63366027, 63376007, 63386108, 63396057, 63406066, 63416046, 63425994]</msg>
<status status="PASS" starttime="20201110 08:39:12.775" endtime="20201110 08:39:12.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.765" endtime="20201110 08:39:12.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.793" endtime="20201110 08:39:13.084"></status>
</kw>
<msg timestamp="20201110 08:39:13.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025522264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035694139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:12.791" endtime="20201110 08:39:13.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025522264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035694139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:13.088" endtime="20201110 08:39:13.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.096" endtime="20201110 08:39:13.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.784" endtime="20201110 08:39:13.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.780" endtime="20201110 08:39:13.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:13.123" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:39:13.099" endtime="20201110 08:39:13.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.127" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:13.126" endtime="20201110 08:39:13.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.129" level="INFO">VALUE: 0.025522264</msg>
<status status="PASS" starttime="20201110 08:39:13.128" endtime="20201110 08:39:13.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.124" endtime="20201110 08:39:13.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.135" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:13.134" endtime="20201110 08:39:13.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.137" level="INFO">VALUE: [0.035694139, 0.045693333, 0.055660083, 0.065597292, 0.075560778, 0.085616778, 0.095548181, 0.105510139, 0.115472458, 0.125402972, 0.135458319, 0.145420125, 0.155352764, 0.165316028, 0.175279306, 0.185308944, 0.195277208, 0.205245486, 0.215183597, 0.225150333, 0.235212528, 0.245150125, 0.255118528, 0.265086444, 0.275022681, 0.285083306, 0.295050125, 0.3050145, 0.314946722, 0.324908819, 0.334964944, 0.344898833, 0.354866056, 0.364833625, 0.374770042, 0.384831042, 0.394798986, 0.404736069, 0.414703611, 0.424668847, 0.434695417, 0.444658806, 0.454622167, 0.464553472, 0.474515514, 0.484571653, 0.494508653, 0.504471819, 0.514435264, 0.524366819, 0.534423486, 0.544386958, 0.554348653, 0.564281653, 0.574245306, 0.584302653, 0.594235917, 0.604198639, 0.614162486, 0.624096736, 0.634154958, 0.644119556, 0.654053597, 0.664019056, 0.673983264, 0.684010167, 0.693974819, 0.703939014, 0.713872931, 0.723835736, 0.733891903, 0.743827181, 0.753793514, 0.76376125, 0.773697611, 0.783757861, 0.793726167, 0.803693153, 0.813630028, 0.823596708, 0.833654417, 0.843588153, 0.853551431, 0.863515097, 0.873444847, 0.883499375, 0.893462194, 0.903393097, 0.913357056, 0.923320222, 0.933346889, 0.943311389, 0.953275528, 0.963210236, 0.973174139, 0.983230514, 0.993164486, 1.0031275, 1.013090181, 1.023021972] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:13.136" endtime="20201110 08:39:13.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.131" endtime="20201110 08:39:13.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.140" endtime="20201110 08:39:13.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:13.143" endtime="20201110 08:39:13.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.142" endtime="20201110 08:39:13.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.138" endtime="20201110 08:39:13.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.583" endtime="20201110 08:39:13.164"></status>
</kw>
<msg timestamp="20201110 08:39:13.164" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.174" endtime="20201110 08:39:15.283"></status>
</kw>
<msg timestamp="20201110 08:39:15.284" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65015350, 'start-iter': 1, 'wakeups': [65025573, 65035552, 65045562, 6...</msg>
<status status="PASS" starttime="20201110 08:39:13.172" endtime="20201110 08:39:15.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.290" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65015350, 'start-iter': 1, 'wakeups': [65025573, 65035552, 65045562, 6...</msg>
<status status="PASS" starttime="20201110 08:39:15.286" endtime="20201110 08:39:15.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.292" endtime="20201110 08:39:15.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.169" endtime="20201110 08:39:15.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.167" endtime="20201110 08:39:15.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:15.303" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 9, 'wakeups': [65025573, 65035552, 65045562, 65055511, 65065490, 65075592, 65085540, 65095550, 65105529, 65115478, 65125579, 65135559, 65145538, 65155517, 65165496, 65...</msg>
<status status="PASS" starttime="20201110 08:39:15.299" endtime="20201110 08:39:15.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.311" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:15.309" endtime="20201110 08:39:15.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.316" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:15.314" endtime="20201110 08:39:15.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.305" endtime="20201110 08:39:15.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.326" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:15.324" endtime="20201110 08:39:15.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.330" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:15.329" endtime="20201110 08:39:15.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.319" endtime="20201110 08:39:15.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.340" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:15.338" endtime="20201110 08:39:15.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.345" level="INFO">VALUE: 65015350</msg>
<status status="PASS" starttime="20201110 08:39:15.343" endtime="20201110 08:39:15.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.333" endtime="20201110 08:39:15.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.355" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:15.353" endtime="20201110 08:39:15.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.359" level="INFO">VALUE: [65025573, 65035552, 65045562, 65055511, 65065490, 65075592, 65085540, 65095550, 65105529, 65115478, 65125579, 65135559, 65145538, 65155517, 65165496, 65175567, 65185546, 65195556, 65205505, 65215484, 65225585, 65235534, 65245544, 65255523, 65265472, 65275573, 65285552, 65295562, 65305511, 65315490, 65325592, 65335540, 65345550, 65355529, 65365478, 65375579, 65385559, 65395538, 65405517, 65415496, 65425567, 65435546, 65445556, 65455505, 65465484, 65475585, 65485534, 65495544, 65505523, 65515472, 65525573, 65535552, 65545562, 65555511, 65565490, 65575592, 65585540, 65595550, 65605529, 65615478, 65625579, 65635559, 65645538, 65655517, 65665496, 65675567, 65685546, 65695556, 65705505, 65715484, 65725585, 65735534, 65745544, 65755523, 65765472, 65775573, 65785552, 65795562, 65805511, 65815490, 65825592, 65835540, 65845550, 65855529, 65865478, 65875579, 65885559, 65895538, 65905517, 65915496, 65925567, 65935546, 65945556, 65955505, 65965484, 65975585, 65985534, 65995544, 66005523, 66015472]</msg>
<status status="PASS" starttime="20201110 08:39:15.357" endtime="20201110 08:39:15.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.348" endtime="20201110 08:39:15.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.374" endtime="20201110 08:39:15.668"></status>
</kw>
<msg timestamp="20201110 08:39:15.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023670792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033847819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:15.371" endtime="20201110 08:39:15.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023670792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033847819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:15.672" endtime="20201110 08:39:15.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.680" endtime="20201110 08:39:15.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.366" endtime="20201110 08:39:15.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.362" endtime="20201110 08:39:15.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:15.707" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:39:15.683" endtime="20201110 08:39:15.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.711" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:15.710" endtime="20201110 08:39:15.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.713" level="INFO">VALUE: 0.023670792</msg>
<status status="PASS" starttime="20201110 08:39:15.712" endtime="20201110 08:39:15.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.708" endtime="20201110 08:39:15.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.723" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:15.721" endtime="20201110 08:39:15.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.725" level="INFO">VALUE: [0.033847819, 0.043812806, 0.05377675, 0.063710319, 0.073674139, 0.083731625, 0.093665833, 0.1036295, 0.113592778, 0.123525264, 0.133582486, 0.143546889, 0.153480958, 0.163445958, 0.173409278, 0.183436972, 0.193401278, 0.203365694, 0.213299667, 0.223265722, 0.233324931, 0.243260181, 0.253225042, 0.263191056, 0.273125764, 0.283184208, 0.293149333, 0.303113139, 0.313049625, 0.323017778, 0.333079681, 0.343018889, 0.352987222, 0.362956486, 0.372892875, 0.382949292, 0.392913306, 0.402846583, 0.412810278, 0.422772944, 0.432799833, 0.442764222, 0.452728069, 0.462662778, 0.472627514, 0.482684875, 0.492619625, 0.502583986, 0.512548333, 0.522480819, 0.532538806, 0.542503889, 0.552468333, 0.562402097, 0.572366, 0.582423333, 0.592357375, 0.602320958, 0.612285181, 0.622218111, 0.632274444, 0.642237917, 0.652170458, 0.662133694, 0.672096583, 0.682122819, 0.692086958, 0.702048778, 0.711981778, 0.721944569, 0.732004653, 0.741941722, 0.751909125, 0.761878042, 0.771814778, 0.781872847, 0.791835875, 0.801797944, 0.811730722, 0.821693181, 0.831749139, 0.841681069, 0.851642444, 0.861604694, 0.871534681, 0.881589194, 0.891550958, 0.901481736, 0.911444319, 0.921404903, 0.931428792, 0.941391111, 0.951353569, 0.961285972, 0.971248153, 0.981304306, 0.991236139, 1.001197889, 1.011161958, 1.021093403] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:15.724" endtime="20201110 08:39:15.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.718" endtime="20201110 08:39:15.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.728" endtime="20201110 08:39:15.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:15.731" endtime="20201110 08:39:15.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.729" endtime="20201110 08:39:15.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.726" endtime="20201110 08:39:15.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.165" endtime="20201110 08:39:15.752"></status>
</kw>
<msg timestamp="20201110 08:39:15.752" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.760" endtime="20201110 08:39:17.871"></status>
</kw>
<msg timestamp="20201110 08:39:17.872" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67610137, 'start-iter': 1, 'wakeups': [67620361, 67630340, 67640319, 6...</msg>
<status status="PASS" starttime="20201110 08:39:15.758" endtime="20201110 08:39:17.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.878" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67610137, 'start-iter': 1, 'wakeups': [67620361, 67630340, 67640319, 6...</msg>
<status status="PASS" starttime="20201110 08:39:17.875" endtime="20201110 08:39:17.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.881" endtime="20201110 08:39:17.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.756" endtime="20201110 08:39:17.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.754" endtime="20201110 08:39:17.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:17.892" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 9, 'wakeups': [67620361, 67630340, 67640319, 67650299, 67660278, 67670379, 67680328, 67690338, 67700317, 67710266, 67720367, 67730346, 67740325, 67750305, 67760284, 67...</msg>
<status status="PASS" starttime="20201110 08:39:17.887" endtime="20201110 08:39:17.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.900" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:17.898" endtime="20201110 08:39:17.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.904" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:17.902" endtime="20201110 08:39:17.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.893" endtime="20201110 08:39:17.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.914" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:17.912" endtime="20201110 08:39:17.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.918" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:17.916" endtime="20201110 08:39:17.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.907" endtime="20201110 08:39:17.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.929" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:17.927" endtime="20201110 08:39:17.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.933" level="INFO">VALUE: 67610137</msg>
<status status="PASS" starttime="20201110 08:39:17.931" endtime="20201110 08:39:17.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.922" endtime="20201110 08:39:17.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.943" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:17.941" endtime="20201110 08:39:17.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.948" level="INFO">VALUE: [67620361, 67630340, 67640319, 67650299, 67660278, 67670379, 67680328, 67690338, 67700317, 67710266, 67720367, 67730346, 67740325, 67750305, 67760284, 67770355, 67780334, 67790344, 67800292, 67810272, 67820343, 67830322, 67840301, 67850280, 67860321, 67870330, 67880310, 67890258, 67900360, 67910339, 67920349, 67930297, 67940277, 67950378, 67960327, 67970336, 67980316, 67990264, 68000366, 68010345, 68020324, 68030303, 68040283, 68050354, 68060333, 68070343, 68080291, 68090270, 68100372, 68110321, 68120330, 68130310, 68140258, 68150360, 68160339, 68170349, 68180297, 68190277, 68200378, 68210327, 68220336, 68230316, 68240264, 68250366, 68260345, 68270324, 68280303, 68290283, 68300354, 68310333, 68320343, 68330291, 68340270, 68350372, 68360321, 68370330, 68380310, 68390258, 68400360, 68410339, 68420349, 68430297, 68440277, 68450378, 68460327, 68470336, 68480316, 68490264, 68500366, 68510345, 68520324, 68530303, 68540283, 68550354, 68560333, 68570343, 68580291, 68590270, 68600372, 68610321]</msg>
<status status="PASS" starttime="20201110 08:39:17.945" endtime="20201110 08:39:17.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.936" endtime="20201110 08:39:17.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.957" endtime="20201110 08:39:18.248"></status>
</kw>
<msg timestamp="20201110 08:39:18.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023305736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033501042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:17.955" endtime="20201110 08:39:18.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023305736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033501042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:18.252" endtime="20201110 08:39:18.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.260" endtime="20201110 08:39:18.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.953" endtime="20201110 08:39:18.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.951" endtime="20201110 08:39:18.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:18.288" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:39:18.263" endtime="20201110 08:39:18.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.292" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:18.291" endtime="20201110 08:39:18.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.294" level="INFO">VALUE: 0.023305736</msg>
<status status="PASS" starttime="20201110 08:39:18.293" endtime="20201110 08:39:18.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.288" endtime="20201110 08:39:18.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.299" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:18.298" endtime="20201110 08:39:18.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.302" level="INFO">VALUE: [0.033501042, 0.043463486, 0.053394653, 0.063358194, 0.073321139, 0.083377722, 0.093311375, 0.103274694, 0.113239306, 0.123171542, 0.133229472, 0.143195333, 0.153130917, 0.163095514, 0.173057458, 0.183083361, 0.193046153, 0.203009861, 0.212942, 0.222903639, 0.232941792, 0.242873458, 0.252836222, 0.262799639, 0.27281125, 0.282777181, 0.292740819, 0.302673569, 0.312730028, 0.322693972, 0.332656389, 0.342588167, 0.352549042, 0.362603875, 0.372535444, 0.382498236, 0.392461653, 0.402392708, 0.412447958, 0.422409903, 0.432341847, 0.442303958, 0.452265708, 0.462292639, 0.472255625, 0.482217931, 0.492151625, 0.502113819, 0.512169792, 0.522103333, 0.532066556, 0.542029986, 0.551964319, 0.562024944, 0.571992375, 0.581959306, 0.591895111, 0.601861667, 0.611922319, 0.621859667, 0.631826333, 0.641793625, 0.651729875, 0.661790569, 0.671758306, 0.681694319, 0.691661389, 0.701626389, 0.711654417, 0.721621375, 0.731587625, 0.741524417, 0.751490319, 0.761549931, 0.771486597, 0.781453028, 0.791419958, 0.801355417, 0.811416389, 0.821384431, 0.831352083, 0.841287514, 0.851250222, 0.861306417, 0.871238958, 0.881201861, 0.891165181, 0.901097, 0.911152333, 0.921115306, 0.931046403, 0.941008986, 0.950970528, 0.960995972, 0.970959125, 0.980921889, 0.990854306, 1.000815986, 1.010872681, 1.020805736] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:18.301" endtime="20201110 08:39:18.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.295" endtime="20201110 08:39:18.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.306" endtime="20201110 08:39:18.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:18.310" endtime="20201110 08:39:18.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.308" endtime="20201110 08:39:18.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.304" endtime="20201110 08:39:18.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.753" endtime="20201110 08:39:18.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.581" endtime="20201110 08:39:18.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.580" endtime="20201110 08:39:18.331"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:18.333" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.341" endtime="20201110 08:39:20.449"></status>
</kw>
<msg timestamp="20201110 08:39:20.450" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70194671, 'start-iter': 1, 'wakeups': [70204925, 70214874, 70224945,...</msg>
<status status="PASS" starttime="20201110 08:39:18.340" endtime="20201110 08:39:20.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.456" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70194671, 'start-iter': 1, 'wakeups': [70204925, 70214874, 70224945,...</msg>
<status status="PASS" starttime="20201110 08:39:20.452" endtime="20201110 08:39:20.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.458" endtime="20201110 08:39:20.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.337" endtime="20201110 08:39:20.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.335" endtime="20201110 08:39:20.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:20.469" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 10, 'wakeups': [70204925, 70214874, 70224945, 70234863, 70244934, 70254882, 70264923, 70274871, 70284942, 70294860, 70304931, 70314880, 70324920, 70334869, 70344940, 7...</msg>
<status status="PASS" starttime="20201110 08:39:20.465" endtime="20201110 08:39:20.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.479" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:20.475" endtime="20201110 08:39:20.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.484" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:20.482" endtime="20201110 08:39:20.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.470" endtime="20201110 08:39:20.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.493" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:20.491" endtime="20201110 08:39:20.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.498" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:20.496" endtime="20201110 08:39:20.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.486" endtime="20201110 08:39:20.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.508" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:20.505" endtime="20201110 08:39:20.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.512" level="INFO">VALUE: 70194671</msg>
<status status="PASS" starttime="20201110 08:39:20.510" endtime="20201110 08:39:20.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.501" endtime="20201110 08:39:20.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.522" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:20.520" endtime="20201110 08:39:20.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.527" level="INFO">VALUE: [70204925, 70214874, 70224945, 70234863, 70244934, 70254882, 70264923, 70274871, 70284942, 70294860, 70304931, 70314880, 70324920, 70334869, 70344940, 70354858, 70364929, 70374877, 70384918, 70394866, 70404937, 70414855, 70424926, 70434875, 70444915, 70454895, 70464874, 70474884, 70484832, 70494842, 70504821, 70514892, 70524871, 70534851, 70544799, 70554901, 70564880, 70574829, 70584808, 70594909, 70604858, 70614837, 70624816, 70634887, 70644866, 70654846, 70664794, 70674896, 70684875, 70694824, 70704833, 70714813, 70724914, 70734863, 70744873, 70754852, 70764801, 70774902, 70784881, 70794830, 70804809, 70814910, 70824859, 70834838, 70844818, 70854888, 70864868, 70874847, 70884796, 70894897, 70904876, 70914825, 70924804, 70934906, 70944854, 70954864, 70964843, 70974853, 70984802, 70994903, 71004882, 71014831, 71024810, 71034912, 71044860, 71054840, 71064819, 71074890, 71084869, 71094848, 71104797, 71114898, 71124877, 71134826, 71144805, 71154907, 71164855, 71174835, 71184814, 71194885]</msg>
<status status="PASS" starttime="20201110 08:39:20.524" endtime="20201110 08:39:20.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.515" endtime="20201110 08:39:20.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.541" endtime="20201110 08:39:20.832"></status>
</kw>
<msg timestamp="20201110 08:39:20.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032130097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:20.539" endtime="20201110 08:39:20.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032130097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:20.835" endtime="20201110 08:39:20.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.843" endtime="20201110 08:39:20.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.534" endtime="20201110 08:39:20.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.530" endtime="20201110 08:39:20.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:20.871" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:39:20.846" endtime="20201110 08:39:20.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.875" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:20.874" endtime="20201110 08:39:20.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.877" level="INFO">VALUE: 0.0219115</msg>
<status status="PASS" starttime="20201110 08:39:20.876" endtime="20201110 08:39:20.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.871" endtime="20201110 08:39:20.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.882" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:20.881" endtime="20201110 08:39:20.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.884" level="INFO">VALUE: [0.032130097, 0.04207575, 0.052096347, 0.062015472, 0.072040583, 0.081990514, 0.091984556, 0.101934819, 0.111959875, 0.121875125, 0.131896917, 0.141843125, 0.151833736, 0.161779597, 0.171800403, 0.181719153, 0.191743792, 0.201692431, 0.211686194, 0.221635264, 0.231659153, 0.241576542, 0.251597014, 0.261542069, 0.271531875, 0.281494903, 0.291438208, 0.301419472, 0.311352319, 0.321336681, 0.331302083, 0.341333181, 0.351281181, 0.361248222, 0.371180347, 0.381239806, 0.391183208, 0.401117292, 0.41108, 0.421138764, 0.431051944, 0.441016069, 0.450978389, 0.461007639, 0.470951736, 0.480915611, 0.490848042, 0.500907389, 0.510849972, 0.520781208, 0.530763056, 0.540726958, 0.550790208, 0.560707847, 0.570693639, 0.580659986, 0.590594528, 0.600656028, 0.610602458, 0.620537458, 0.630503042, 0.640563417, 0.650475375, 0.660437472, 0.670397986, 0.680426069, 0.690367958, 0.700329681, 0.710259667, 0.720320819, 0.730267542, 0.740204667, 0.750170708, 0.760235014, 0.770153111, 0.780141097, 0.790110736, 0.800099111, 0.810037069, 0.820100514, 0.830048875, 0.839986278, 0.849949681, 0.860008583, 0.869923125, 0.879887194, 0.889849972, 0.899879222, 0.909823083, 0.919787208, 0.929721264, 0.939782819, 0.949727944, 0.959662708, 0.969625875, 0.979686014, 0.989599931, 0.999563694, 1.009526847, 1.019558792] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:20.883" endtime="20201110 08:39:20.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.878" endtime="20201110 08:39:20.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.887" endtime="20201110 08:39:20.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:20.891" endtime="20201110 08:39:20.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.889" endtime="20201110 08:39:20.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.886" endtime="20201110 08:39:20.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.334" endtime="20201110 08:39:20.915"></status>
</kw>
<msg timestamp="20201110 08:39:20.916" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.924" endtime="20201110 08:39:23.030"></status>
</kw>
<msg timestamp="20201110 08:39:23.032" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72784088, 'start-iter': 1, 'wakeups': [72794342, 72804290, 72814361,...</msg>
<status status="PASS" starttime="20201110 08:39:20.922" endtime="20201110 08:39:23.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.037" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72784088, 'start-iter': 1, 'wakeups': [72794342, 72804290, 72814361,...</msg>
<status status="PASS" starttime="20201110 08:39:23.034" endtime="20201110 08:39:23.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.040" endtime="20201110 08:39:23.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.920" endtime="20201110 08:39:23.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.918" endtime="20201110 08:39:23.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:23.050" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 10, 'wakeups': [72794342, 72804290, 72814361, 72824279, 72834350, 72844299, 72854339, 72864288, 72874359, 72884277, 72894348, 72904296, 72914337, 72924285, 72934356, 7...</msg>
<status status="PASS" starttime="20201110 08:39:23.046" endtime="20201110 08:39:23.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.059" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:23.057" endtime="20201110 08:39:23.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.063" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:23.061" endtime="20201110 08:39:23.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.052" endtime="20201110 08:39:23.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.073" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:23.071" endtime="20201110 08:39:23.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.077" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:23.075" endtime="20201110 08:39:23.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.066" endtime="20201110 08:39:23.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.090" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:23.088" endtime="20201110 08:39:23.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.094" level="INFO">VALUE: 72784088</msg>
<status status="PASS" starttime="20201110 08:39:23.092" endtime="20201110 08:39:23.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.080" endtime="20201110 08:39:23.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.102" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:23.101" endtime="20201110 08:39:23.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.104" level="INFO">VALUE: [72794342, 72804290, 72814361, 72824279, 72834350, 72844299, 72854339, 72864288, 72874359, 72884277, 72894348, 72904296, 72914337, 72924285, 72934356, 72944274, 72954345, 72964294, 72974334, 72984283, 72994354, 73004272, 73014343, 73024291, 73034332, 73044281, 73054321, 73064300, 73074340, 73084289, 73094360, 73104278, 73114349, 73124298, 73134338, 73144287, 73154357, 73164276, 73174346, 73184295, 73194335, 73204284, 73214355, 73224273, 73234344, 73244293, 73254333, 73264282, 73274353, 73284271, 73294342, 73304290, 73314361, 73324279, 73334350, 73344299, 73354339, 73364288, 73374359, 73384277, 73394348, 73404296, 73414337, 73424285, 73434356, 73444274, 73454345, 73464294, 73474334, 73484283, 73494354, 73504272, 73514343, 73524291, 73534332, 73544281, 73554321, 73564300, 73574340, 73584289, 73594360, 73604278, 73614349, 73624298, 73634338, 73644287, 73654357, 73664276, 73674346, 73684295, 73694335, 73704284, 73714355, 73724273, 73734344, 73744293, 73754333, 73764282, 73774353, 73784271]</msg>
<status status="PASS" starttime="20201110 08:39:23.103" endtime="20201110 08:39:23.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.097" endtime="20201110 08:39:23.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.112" endtime="20201110 08:39:23.403"></status>
</kw>
<msg timestamp="20201110 08:39:23.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023307792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033518792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:23.110" endtime="20201110 08:39:23.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023307792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033518792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:23.407" endtime="20201110 08:39:23.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.414" endtime="20201110 08:39:23.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.108" endtime="20201110 08:39:23.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.106" endtime="20201110 08:39:23.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:23.442" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:39:23.418" endtime="20201110 08:39:23.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.447" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:23.445" endtime="20201110 08:39:23.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.449" level="INFO">VALUE: 0.023307792</msg>
<status status="PASS" starttime="20201110 08:39:23.448" endtime="20201110 08:39:23.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.443" endtime="20201110 08:39:23.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.455" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:23.453" endtime="20201110 08:39:23.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.457" level="INFO">VALUE: [0.033518792, 0.043463486, 0.053482042, 0.063395472, 0.073414889, 0.083360264, 0.093350014, 0.103294972, 0.113316292, 0.123231319, 0.133252014, 0.143197944, 0.153188514, 0.163133583, 0.173153208, 0.183067917, 0.193087806, 0.203032319, 0.213020708, 0.222964458, 0.232983569, 0.242896569, 0.252915653, 0.262860208, 0.272851069, 0.282795833, 0.292797361, 0.302760319, 0.312749292, 0.322692583, 0.332711417, 0.342624792, 0.352644514, 0.362588097, 0.372577389, 0.382521847, 0.392541167, 0.402454319, 0.412476764, 0.422425028, 0.432413597, 0.442358042, 0.452380806, 0.462298972, 0.472322694, 0.482271056, 0.492265208, 0.502213389, 0.512236903, 0.522154389, 0.532176972, 0.542125458, 0.552147889, 0.562064056, 0.572087528, 0.582035069, 0.592026306, 0.601970625, 0.611991333, 0.621907056, 0.631926833, 0.641871958, 0.651861847, 0.661805597, 0.671825556, 0.681740556, 0.691760292, 0.701703889, 0.711692472, 0.721635722, 0.731654681, 0.741567875, 0.751586583, 0.761529653, 0.771518014, 0.781461986, 0.791462486, 0.801423042, 0.811411708, 0.821355111, 0.831374333, 0.841288208, 0.851308361, 0.861252806, 0.871242222, 0.881184931, 0.891203958, 0.901117403, 0.911136792, 0.921080444, 0.931069236, 0.941012847, 0.951031125, 0.960943431, 0.970963125, 0.980908181, 0.990897333, 1.000840639, 1.010860181, 1.020773861] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:23.456" endtime="20201110 08:39:23.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.450" endtime="20201110 08:39:23.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.460" endtime="20201110 08:39:23.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:23.464" endtime="20201110 08:39:23.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.462" endtime="20201110 08:39:23.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.459" endtime="20201110 08:39:23.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.916" endtime="20201110 08:39:23.484"></status>
</kw>
<msg timestamp="20201110 08:39:23.485" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.493" endtime="20201110 08:39:25.604"></status>
</kw>
<msg timestamp="20201110 08:39:25.605" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75363555, 'start-iter': 1, 'wakeups': [75373779, 75383758, 75393829,...</msg>
<status status="PASS" starttime="20201110 08:39:23.491" endtime="20201110 08:39:25.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.611" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75363555, 'start-iter': 1, 'wakeups': [75373779, 75383758, 75393829,...</msg>
<status status="PASS" starttime="20201110 08:39:25.608" endtime="20201110 08:39:25.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.614" endtime="20201110 08:39:25.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.489" endtime="20201110 08:39:25.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.487" endtime="20201110 08:39:25.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:25.624" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 10, 'wakeups': [75373779, 75383758, 75393829, 75403747, 75413818, 75423767, 75433807, 75443756, 75453826, 75463745, 75473815, 75483764, 75493804, 75503753, 75513824, 7...</msg>
<status status="PASS" starttime="20201110 08:39:25.620" endtime="20201110 08:39:25.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.633" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:25.631" endtime="20201110 08:39:25.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.637" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:25.635" endtime="20201110 08:39:25.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.626" endtime="20201110 08:39:25.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.647" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:25.645" endtime="20201110 08:39:25.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.651" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:25.649" endtime="20201110 08:39:25.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.640" endtime="20201110 08:39:25.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.661" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:25.659" endtime="20201110 08:39:25.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.665" level="INFO">VALUE: 75363555</msg>
<status status="PASS" starttime="20201110 08:39:25.663" endtime="20201110 08:39:25.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.654" endtime="20201110 08:39:25.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.675" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:25.673" endtime="20201110 08:39:25.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.680" level="INFO">VALUE: [75373779, 75383758, 75393829, 75403747, 75413818, 75423767, 75433807, 75443756, 75453826, 75463745, 75473815, 75483764, 75493804, 75503753, 75513824, 75523742, 75533813, 75543762, 75553802, 75563751, 75573822, 75583740, 75593811, 75603759, 75613800, 75623748, 75633819, 75643768, 75653808, 75663757, 75673828, 75683746, 75693817, 75703765, 75713806, 75723754, 75733825, 75743743, 75753814, 75763763, 75773803, 75783752, 75793823, 75803741, 75813812, 75823760, 75833801, 75843750, 75853790, 75863739, 75873779, 75883758, 75893829, 75903747, 75913818, 75923767, 75933807, 75943756, 75953826, 75963745, 75973815, 75983764, 75993804, 76003753, 76013824, 76023742, 76033813, 76043762, 76053802, 76063751, 76073822, 76083740, 76093811, 76103759, 76113800, 76123748, 76133819, 76143768, 76153808, 76163757, 76173828, 76183746, 76193817, 76203765, 76213806, 76223754, 76233825, 76243743, 76253814, 76263763, 76273803, 76283752, 76293823, 76303741, 76313812, 76323760, 76333801, 76343750, 76353790, 76363739]</msg>
<status status="PASS" starttime="20201110 08:39:25.677" endtime="20201110 08:39:25.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.668" endtime="20201110 08:39:25.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.693" endtime="20201110 08:39:25.983"></status>
</kw>
<msg timestamp="20201110 08:39:25.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03280175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:25.692" endtime="20201110 08:39:25.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03280175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:25.987" endtime="20201110 08:39:25.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.000" endtime="20201110 08:39:26.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.686" endtime="20201110 08:39:26.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.683" endtime="20201110 08:39:26.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:26.027" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:39:26.003" endtime="20201110 08:39:26.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.031" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:26.030" endtime="20201110 08:39:26.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.033" level="INFO">VALUE: 0.022612111</msg>
<status status="PASS" starttime="20201110 08:39:26.032" endtime="20201110 08:39:26.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.028" endtime="20201110 08:39:26.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.038" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:26.037" endtime="20201110 08:39:26.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.040" level="INFO">VALUE: [0.03280175, 0.042777431, 0.052797097, 0.062710861, 0.072729542, 0.082672694, 0.092661486, 0.102604431, 0.112623056, 0.122536278, 0.132556375, 0.142500167, 0.152488917, 0.162432806, 0.172451944, 0.182365986, 0.192385583, 0.202329667, 0.212318792, 0.222262667, 0.232281667, 0.24219475, 0.252214389, 0.262158736, 0.272146639, 0.282091722, 0.292110542, 0.302054264, 0.312042833, 0.321987556, 0.332007736, 0.341922444, 0.351942875, 0.361887889, 0.3718775, 0.381822583, 0.391841264, 0.401753986, 0.411772889, 0.421716278, 0.431704778, 0.441647472, 0.451665972, 0.461579222, 0.471599333, 0.481543458, 0.491532056, 0.501476639, 0.511478306, 0.521408667, 0.531409181, 0.541370694, 0.551389319, 0.561302431, 0.571321069, 0.581264236, 0.591251847, 0.601193972, 0.611210819, 0.621123764, 0.631142667, 0.641089125, 0.651082264, 0.661028944, 0.671046528, 0.680957972, 0.690976361, 0.700919389, 0.710908083, 0.720852597, 0.730872319, 0.740786931, 0.750806667, 0.760751514, 0.770739569, 0.780684667, 0.790703542, 0.800647736, 0.810637375, 0.820582208, 0.830606611, 0.840525111, 0.850550181, 0.860498236, 0.870491083, 0.880439528, 0.890462389, 0.900379153, 0.910400222, 0.920344181, 0.930332653, 0.940276167, 0.950296208, 0.960213972, 0.970238986, 0.980188306, 0.990181583, 1.000128889, 1.010133819, 1.020068653] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:26.040" endtime="20201110 08:39:26.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.034" endtime="20201110 08:39:26.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.043" endtime="20201110 08:39:26.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:26.047" endtime="20201110 08:39:26.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.045" endtime="20201110 08:39:26.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.042" endtime="20201110 08:39:26.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.485" endtime="20201110 08:39:26.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.332" endtime="20201110 08:39:26.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.331" endtime="20201110 08:39:26.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.705" endtime="20201110 08:39:26.068"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:38:08.632" endtime="20201110 08:39:26.069" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:38:07.171" endtime="20201110 08:39:26.071"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:36:16.947" endtime="20201110 08:39:26.087"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
