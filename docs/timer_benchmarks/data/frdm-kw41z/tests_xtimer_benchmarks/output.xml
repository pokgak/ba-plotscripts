<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201110 08:32:53.172" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.757" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:32:53.766" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:32:54.968" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:32:53.756" endtime="20201110 08:32:54.969"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.971" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:32:54.970" endtime="20201110 08:32:54.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.754" endtime="20201110 08:32:54.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:54.974" endtime="20201110 08:32:55.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.973" endtime="20201110 08:32:55.160"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.174" endtime="20201110 08:32:55.189"></status>
</kw>
<msg timestamp="20201110 08:32:55.189" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [')\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.172" endtime="20201110 08:32:55.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.192" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [')\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.190" endtime="20201110 08:32:55.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.195" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:55.193" endtime="20201110 08:32:55.196"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:55.169" endtime="20201110 08:32:55.197"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:55.167" endtime="20201110 08:32:55.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.165" endtime="20201110 08:32:55.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:55.202" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:55.201" endtime="20201110 08:32:55.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.199" endtime="20201110 08:32:55.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.165" endtime="20201110 08:32:55.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.164" endtime="20201110 08:32:55.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.203" endtime="20201110 08:32:55.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.162" endtime="20201110 08:32:55.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.206" endtime="20201110 08:32:55.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.161" endtime="20201110 08:32:55.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.753" endtime="20201110 08:32:55.208"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:55.214" endtime="20201110 08:32:55.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.213" endtime="20201110 08:32:55.235"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.265" endtime="20201110 08:32:55.288"></status>
</kw>
<msg timestamp="20201110 08:32:55.289" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.261" endtime="20201110 08:32:55.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.294" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.291" endtime="20201110 08:32:55.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.300" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:55.296" endtime="20201110 08:32:55.301"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:55.256" endtime="20201110 08:32:55.302"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:55.251" endtime="20201110 08:32:55.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.246" endtime="20201110 08:32:55.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:55.311" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:55.310" endtime="20201110 08:32:55.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.306" endtime="20201110 08:32:55.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.244" endtime="20201110 08:32:55.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.243" endtime="20201110 08:32:55.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.315" endtime="20201110 08:32:55.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.240" endtime="20201110 08:32:55.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.236" endtime="20201110 08:32:55.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.212" endtime="20201110 08:32:55.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.334" endtime="20201110 08:32:55.348"></status>
</kw>
<msg timestamp="20201110 08:32:55.348" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.331" endtime="20201110 08:32:55.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.351" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.349" endtime="20201110 08:32:55.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.352" endtime="20201110 08:32:55.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.325" endtime="20201110 08:32:55.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.322" endtime="20201110 08:32:55.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.358" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:32:55.357" endtime="20201110 08:32:55.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.360" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201110 08:32:55.359" endtime="20201110 08:32:55.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.355" endtime="20201110 08:32:55.361"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:55.209" endtime="20201110 08:32:55.362" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:32:53.290" endtime="20201110 08:32:55.364"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.415" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:32:55.423" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:32:56.563" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:32:55.414" endtime="20201110 08:32:56.564"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.566" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:32:56.565" endtime="20201110 08:32:56.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.412" endtime="20201110 08:32:56.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:56.569" endtime="20201110 08:32:56.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.568" endtime="20201110 08:32:56.807"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.833" endtime="20201110 08:32:56.856"></status>
</kw>
<msg timestamp="20201110 08:32:56.857" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['me to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.829" endtime="20201110 08:32:56.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.861" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['me to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.860" endtime="20201110 08:32:56.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.865" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:56.862" endtime="20201110 08:32:56.865"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:56.824" endtime="20201110 08:32:56.866"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:56.820" endtime="20201110 08:32:56.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.817" endtime="20201110 08:32:56.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:56.870" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:56.870" endtime="20201110 08:32:56.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.868" endtime="20201110 08:32:56.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.816" endtime="20201110 08:32:56.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.814" endtime="20201110 08:32:56.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.872" endtime="20201110 08:32:56.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.812" endtime="20201110 08:32:56.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.875" endtime="20201110 08:32:56.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.809" endtime="20201110 08:32:56.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.411" endtime="20201110 08:32:56.877"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:56.883" endtime="20201110 08:32:56.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.881" endtime="20201110 08:32:56.903"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.915" endtime="20201110 08:32:56.932"></status>
</kw>
<msg timestamp="20201110 08:32:56.933" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.914" endtime="20201110 08:32:56.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.935" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.934" endtime="20201110 08:32:56.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.938" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:56.937" endtime="20201110 08:32:56.939"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:56.911" endtime="20201110 08:32:56.939"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:56.909" endtime="20201110 08:32:56.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.908" endtime="20201110 08:32:56.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:56.945" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:56.943" endtime="20201110 08:32:56.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.941" endtime="20201110 08:32:56.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.907" endtime="20201110 08:32:56.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.906" endtime="20201110 08:32:56.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.947" endtime="20201110 08:32:56.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.905" endtime="20201110 08:32:56.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.903" endtime="20201110 08:32:56.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.880" endtime="20201110 08:32:56.949"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:32:56.951" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.959" endtime="20201110 08:32:56.976"></status>
</kw>
<msg timestamp="20201110 08:32:56.977" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.957" endtime="20201110 08:32:56.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.979" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.978" endtime="20201110 08:32:56.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.981" endtime="20201110 08:32:56.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.954" endtime="20201110 08:32:56.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.953" endtime="20201110 08:32:56.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.992" endtime="20201110 08:32:57.289"></status>
</kw>
<msg timestamp="20201110 08:32:57.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069620958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069621431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.990" endtime="20201110 08:32:57.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069620958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069621431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.294" endtime="20201110 08:32:57.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.305" endtime="20201110 08:32:57.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.987" endtime="20201110 08:32:57.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.985" endtime="20201110 08:32:57.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.312" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:57.311" endtime="20201110 08:32:57.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.318" level="INFO">VALUE: [{'time': 0.069620958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069621431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069630431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000009e-06, 'source_diff': 9.000000000009e-06}, {'time': 0.069630903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.069637486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000004446e-06, 'source_diff': 6.583000000004446e-06}, {'time': 0.069637958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069644653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.069645139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069651042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.069651514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069656722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.208000000006541e-06, 'source_diff': 5.208000000006541e-06}, {'time': 0.069657194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069667111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.069667597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069676278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999996497e-06, 'source_diff': 8.680999999996497e-06}, {'time': 0.06967675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069680736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.069681208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069691542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.069692028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069699861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.069700333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069708694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.069709181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999934649e-07, 'source_diff': 4.869999999934649e-07}, {'time': 0.069718986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.069719472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069724708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999991803e-06, 'source_diff': 5.235999999991803e-06}, {'time': 0.069725181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069731569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3879999999960635e-06, 'source_diff': 6.3879999999960635e-06}, {'time': 0.069732042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069742097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0055000000008807e-05, 'source_diff': 1.0055000000008807e-05}, {'time': 0.069742569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069751944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999992029e-06, 'source_diff': 9.374999999992029e-06}, {'time': 0.069752417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069756722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3049999999961175e-06, 'source_diff': 4.3049999999961175e-06}, {'time': 0.069757208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069762667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.069763139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069773042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999991668e-06, 'source_diff': 9.902999999991668e-06}, {'time': 0.069773528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069780431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.069780903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069788875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999994983e-06, 'source_diff': 7.971999999994983e-06}, {'time': 0.069789347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069793306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.069793778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069802111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.069802597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069810417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.8200000000056e-06, 'source_diff': 7.8200000000056e-06}, {'time': 0.069810889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0698155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.069815972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069819972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9999999999901226e-06, 'source_diff': 3.9999999999901226e-06}, {'time': 0.069820444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069827125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000008375e-06, 'source_diff': 6.681000000008375e-06}, {'time': 0.069827597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069834583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.069835069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069845486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.069845958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069854625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000003866e-06, 'source_diff': 8.667000000003866e-06}, {'time': 0.069855111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069859833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.069860306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069870014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.707999999997163e-06, 'source_diff': 9.707999999997163e-06}, {'time': 0.069870486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069874583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000008455e-06, 'source_diff': 4.097000000008455e-06}, {'time': 0.069875069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069884792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.723000000003146e-06, 'source_diff': 9.723000000003146e-06}, {'time': 0.069885264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069894153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.069894625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069904639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.069905111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069910986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999988528e-06, 'source_diff': 5.874999999988528e-06}, {'time': 0.069911458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069921056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.069921542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069926569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.026999999990789e-06, 'source_diff': 5.026999999990789e-06}, {'time': 0.069927042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069935931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000011915e-06, 'source_diff': 8.889000000011915e-06}, {'time': 0.069936403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.069942903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.500000000006501e-06, 'source_diff': 6.500000000006501e-06}, {'time': 0.069943375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069949153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.069949625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.06995775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.069958236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069968403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0167000000005366e-05, 'source_diff': 1.0167000000005366e-05}, {'time': 0.069968875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069978333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458000000003852e-06, 'source_diff': 9.458000000003852e-06}, {'time': 0.069978806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069986653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999991389e-06, 'source_diff': 7.846999999991389e-06}, {'time': 0.069987125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069993556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.069994028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.070000681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.652999999995357e-06, 'source_diff': 6.652999999995357e-06}, {'time': 0.070001167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.070008292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.070008764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:57.314" endtime="20201110 08:32:57.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.309" endtime="20201110 08:32:57.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:57.347" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:57.321" endtime="20201110 08:32:57.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.351" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:57.350" endtime="20201110 08:32:57.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.355" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7300000000083386e-07, 9.000000000009e-06, 4.7199999998748243e-07, 6.583000000004446e-06, 4.720000000013602e-07, 6.695000000001006e-06, 4.859999999939912e-07, 5.903000000001546e-06, 4.720000000013602e-07, 5.208000000006541e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.859999999939912e-07, 8.680999999996497e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.86000000007869e-07, 7.832999999998758e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.869999999934649e-07, 9.805000000001618e-06, 4.86000000007869e-07, 5.235999999991803e-06, 4.7300000000083386e-07, 6.3879999999960635e-06, 4.7300000000083386e-07, 1.0055000000008807e-05, 4.720000000013602e-07, 9.374999999992029e-06, 4.7300000000083386e-07, 4.3049999999961175e-06, 4.86000000007869e-07, 5.4589999999993255e-06, 4.720000000013602e-07, 9.902999999991668e-06, 4.86000000007869e-07, 6.903000000002546e-06, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 3.958999999997825e-06, 4.720000000013602e-07, 8.332999999999258e-06, 4.859999999939912e-07, 7.8200000000056e-06, 4.720000000013602e-07, 4.611000000001586e-06, 4.720000000013602e-07, 3.9999999999901226e-06, 4.720000000013602e-07, 6.681000000008375e-06, 4.720000000013602e-07, 6.986000000000492e-06, 4.859999999939912e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 8.667000000003866e-06, 4.859999999939912e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 9.707999999997163e-06, 4.720000000013602e-07, 4.097000000008455e-06, 4.859999999939912e-07, 9.723000000003146e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 1.0014000000002632e-05, 4.720000000013602e-07, 5.874999999988528e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.86000000007869e-07, 5.026999999990789e-06, 4.7300000000083386e-07, 8.889000000011915e-06, 4.7199999998748243e-07, 6.500000000006501e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 8.124999999997717e-06, 4.859999999939912e-07, 1.0167000000005366e-05, 4.720000000013602e-07, 9.458000000003852e-06, 4.7300000000083386e-07, 7.846999999991389e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.720000000013602e-07, 6.652999999995357e-06, 4.86000000007869e-07, 7.124999999996717e-06, 4.720000000013602e-07], 'time': [0.069620958, 0.069621431, 0.069630431, 0.069630903, 0.069637486, 0.069637958, 0.069644653, 0.069645139, 0.069651042, 0.069651514, 0.069656722, 0.069657194, 0.069667111, 0.069667597, 0.069676278, 0.06967675, 0.069680736, 0.069681208, 0.069691542, 0.069692028, 0.069699861, 0.069700333, 0.069708694, 0.069709181, 0.069718986, 0.069719472, 0.069724708, 0.069725181, 0.069731569, 0.069732042, 0.069742097, 0.069742569, 0.069751944, 0.069752417, 0.069756722, 0.069757208, 0.069762667, 0.069763139, 0.069773042, 0.069773528, 0.069780431, 0.069780903, 0.069788875, 0.069789347, 0.069793306, 0.069793778, 0.069802111, 0.069802597, 0.069810417, 0.069810889, 0.0698155, 0.069815972, 0.069819972, 0.069820444, 0.069827125, 0.069827597, 0.069834583, 0.069835069, 0.069845486, 0.069845958, 0.069854625, 0.069855111, 0.069859833, 0.069860306, 0.069870014, 0.069870486, 0.069874583, 0.069875069, 0.069884792, 0.069885264, 0.069894153, 0.069894625, 0.069904639, 0.069905111, 0.069910986, 0.069911458, 0.069921056, 0.069921542, 0.069926569, 0.069927042, 0.069935931, 0.069936403, 0.069942903, 0.069943375, 0.069949153, 0.069949625, 0.06995775, 0.069958236, 0.069968403, 0.069968875, 0.069978333, 0.069978806, 0.069986653, 0.069987125, 0.069993556, 0.069994028, 0.070000681, 0.070001167, 0.070008292, 0.070008764], 'diff': [0, 4.7300000000083386e-07, 9.000000000009e-06, 4.7199999998748243e-07, 6.583000000004446e-06, 4.720000000013602e-07, 6.695000000001006e-06, 4.859999999939912e-07, 5.903000000001546e-06, 4.720000000013602e-07, 5.208000000006541e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.859999999939912e-07, 8.680999999996497e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.86000000007869e-07, 7.832999999998758e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.869999999934649e-07, 9.805000000001618e-06, 4.86000000007869e-07, 5.235999999991803e-06, 4.7300000000083386e-07, 6.3879999999960635e-06, 4.7300000000083386e-07, 1.0055000000008807e-05, 4.720000000013602e-07, 9.374999999992029e-06, 4.7300000000083386e-07, 4.3049999999961175e-06, 4.86000000007869e-07, 5.4589999999993255e-06, 4.720000000013602e-07, 9.902999999991668e-06, 4.86000000007869e-07, 6.903000000002546e-06, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 3.958999999997825e-06, 4.720000000013602e-07, 8.332999999999258e-06, 4.859999999939912e-07, 7.8200000000056e-06, 4.720000000013602e-07, 4.611000000001586e-06, 4.720000000013602e-07, 3.9999999999901226e-06, 4.720000000013602e-07, 6.681000000008375e-06, 4.720000000013602e-07, 6.986000000000492e-06, 4.859999999939912e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 8.667000000003866e-06, 4.859999999939912e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 9.707999999997163e-06, 4.720000000013602e-07, 4.097000000008455e-06, 4.859999999939912e-07, 9.723000000003146e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 1.0014000000002632e-05, 4.720000000013602e-07, 5.874999999988528e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.86000000007869e-07, 5.026999999990789e-06, 4.7300000000083386e-07, 8.889000000011915e-06, 4.7199999998748243e-07, 6.500000000006501e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 8.124999999997717e-06, 4.859999999939912e-07, 1.0167000000005366e-05, 4.720000000013602e-07, 9.458000000003852e-06, 4.7300000000083386e-07, 7.846999999991389e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.720000000013602e-07, 6.652999999995357e-06, 4.86000000007869e-07, 7.124999999996717e-06, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:32:57.352" endtime="20201110 08:32:57.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.348" endtime="20201110 08:32:57.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:57.361" level="INFO">${RESULT} = [{'time': 0.069621431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069630903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:57.357" endtime="20201110 08:32:57.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:57.376" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:57.362" endtime="20201110 08:32:57.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.382" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:57.380" endtime="20201110 08:32:57.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.386" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:57.384" endtime="20201110 08:32:57.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.377" endtime="20201110 08:32:57.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.391" endtime="20201110 08:32:57.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:57.397" endtime="20201110 08:32:57.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.394" endtime="20201110 08:32:57.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.389" endtime="20201110 08:32:57.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.952" endtime="20201110 08:32:57.420"></status>
</kw>
<msg timestamp="20201110 08:32:57.420" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.433" endtime="20201110 08:32:57.449"></status>
</kw>
<msg timestamp="20201110 08:32:57.450" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.431" endtime="20201110 08:32:57.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.454" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.452" endtime="20201110 08:32:57.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.456" endtime="20201110 08:32:57.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.426" endtime="20201110 08:32:57.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.423" endtime="20201110 08:32:57.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.473" endtime="20201110 08:32:57.771"></status>
</kw>
<msg timestamp="20201110 08:32:57.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027076236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027076708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.470" endtime="20201110 08:32:57.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027076236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027076708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.775" endtime="20201110 08:32:57.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.784" endtime="20201110 08:32:57.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.464" endtime="20201110 08:32:57.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.461" endtime="20201110 08:32:57.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.790" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:57.789" endtime="20201110 08:32:57.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.795" level="INFO">VALUE: [{'time': 0.027076236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027076708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027085389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.027085861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027095472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.027095944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027100042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.027100514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027109611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.027110083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027115319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.027115806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.027119792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.027120278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.027127, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7219999999972024e-06, 'source_diff': 6.7219999999972024e-06}, {'time': 0.027127472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027131875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.027132347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027138417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.027138889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027149125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.027149597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027154625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.027155097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027162736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.027163208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027172, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.027172472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027182194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.027182667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02719175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.027192222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027197444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.027197917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0272065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583000000002977e-06, 'source_diff': 8.583000000002977e-06}, {'time': 0.027206986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.027213167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.027213639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027218986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.027219458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027227083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.027227569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.027236569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.027237042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.027241472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.027241944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027251444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.027251917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.027256014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.027256486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027266917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0431000000001717e-05, 'source_diff': 1.0431000000001717e-05}, {'time': 0.027267389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027276181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.027276653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02728075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.027281222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02728575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.027286222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027296542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.027297028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.027301333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.027301806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.027307667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.027308153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.027317556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.027318028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027325556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.027326028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027329931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.027330403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027339486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.027339972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.027344694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.027345167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.027353639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.027354111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027364444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.027364917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.027374958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041000000002298e-05, 'source_diff': 1.0041000000002298e-05}, {'time': 0.027375431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.027383569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138000000001283e-06, 'source_diff': 8.138000000001283e-06}, {'time': 0.027384056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.027390542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.027391014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027395417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402999999996576e-06, 'source_diff': 4.402999999996576e-06}, {'time': 0.027395903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.027404264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.027404736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027412806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.07000000000238e-06, 'source_diff': 8.07000000000238e-06}, {'time': 0.027413278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027422042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.027422514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.027427056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.027427528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027437528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.027438014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.027442625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.027443097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027453014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.0274535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:57.791" endtime="20201110 08:32:57.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.787" endtime="20201110 08:32:57.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:57.821" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:57.798" endtime="20201110 08:32:57.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.825" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:57.824" endtime="20201110 08:32:57.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.829" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 9.610999999999648e-06, 4.720000000013602e-07, 4.09800000000099e-06, 4.7199999999789077e-07, 9.096999999999578e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.870000000004038e-07, 3.986000000000961e-06, 4.860000000009301e-07, 6.7219999999972024e-06, 4.720000000013602e-07, 4.403000000000046e-06, 4.720000000013602e-07, 6.070000000000381e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.792000000000522e-06, 4.7199999999789077e-07, 9.722000000000203e-06, 4.7300000000083386e-07, 9.083000000000008e-06, 4.7199999999789077e-07, 5.222000000002641e-06, 4.729999999973644e-07, 8.583000000002977e-06, 4.859999999974607e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.860000000009301e-07, 8.999999999998592e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 8.792000000000522e-06, 4.720000000013602e-07, 4.096999999998047e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.860000000009301e-07, 4.304999999999587e-06, 4.7300000000083386e-07, 5.860999999999367e-06, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 3.902999999999546e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.729999999973644e-07, 1.0041000000002298e-05, 4.729999999973644e-07, 8.138000000001283e-06, 4.870000000004038e-07, 6.485999999999992e-06, 4.720000000013602e-07, 4.402999999996576e-06, 4.860000000009301e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 8.07000000000238e-06, 4.7199999999789077e-07, 8.764000000001382e-06, 4.7199999999789077e-07, 4.541999999999741e-06, 4.720000000013602e-07, 9.999999999999593e-06, 4.860000000009301e-07, 4.610999999998117e-06, 4.720000000013602e-07, 9.917000000001647e-06, 4.859999999974607e-07], 'time': [0.027076236, 0.027076708, 0.027085389, 0.027085861, 0.027095472, 0.027095944, 0.027100042, 0.027100514, 0.027109611, 0.027110083, 0.027115319, 0.027115806, 0.027119792, 0.027120278, 0.027127, 0.027127472, 0.027131875, 0.027132347, 0.027138417, 0.027138889, 0.027149125, 0.027149597, 0.027154625, 0.027155097, 0.027162736, 0.027163208, 0.027172, 0.027172472, 0.027182194, 0.027182667, 0.02719175, 0.027192222, 0.027197444, 0.027197917, 0.0272065, 0.027206986, 0.027213167, 0.027213639, 0.027218986, 0.027219458, 0.027227083, 0.027227569, 0.027236569, 0.027237042, 0.027241472, 0.027241944, 0.027251444, 0.027251917, 0.027256014, 0.027256486, 0.027266917, 0.027267389, 0.027276181, 0.027276653, 0.02728075, 0.027281222, 0.02728575, 0.027286222, 0.027296542, 0.027297028, 0.027301333, 0.027301806, 0.027307667, 0.027308153, 0.027317556, 0.027318028, 0.027325556, 0.027326028, 0.027329931, 0.027330403, 0.027339486, 0.027339972, 0.027344694, 0.027345167, 0.027353639, 0.027354111, 0.027364444, 0.027364917, 0.027374958, 0.027375431, 0.027383569, 0.027384056, 0.027390542, 0.027391014, 0.027395417, 0.027395903, 0.027404264, 0.027404736, 0.027412806, 0.027413278, 0.027422042, 0.027422514, 0.027427056, 0.027427528, 0.027437528, 0.027438014, 0.027442625, 0.027443097, 0.027453014, 0.0274535], 'diff': [0, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 9.610999999999648e-06, 4.720000000013602e-07, 4.09800000000099e-06, 4.7199999999789077e-07, 9.096999999999578e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.870000000004038e-07, 3.986000000000961e-06, 4.860000000009301e-07, 6.7219999999972024e-06, 4.720000000013602e-07, 4.403000000000046e-06, 4.720000000013602e-07, 6.070000000000381e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.792000000000522e-06, 4.7199999999789077e-07, 9.722000000000203e-06, 4.7300000000083386e-07, 9.083000000000008e-06, 4.7199999999789077e-07, 5.222000000002641e-06, 4.729999999973644e-07, 8.583000000002977e-06, 4.859999999974607e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.860000000009301e-07, 8.999999999998592e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 8.792000000000522e-06, 4.720000000013602e-07, 4.096999999998047e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.860000000009301e-07, 4.304999999999587e-06, 4.7300000000083386e-07, 5.860999999999367e-06, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 3.902999999999546e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.729999999973644e-07, 1.0041000000002298e-05, 4.729999999973644e-07, 8.138000000001283e-06, 4.870000000004038e-07, 6.485999999999992e-06, 4.720000000013602e-07, 4.402999999996576e-06, 4.860000000009301e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 8.07000000000238e-06, 4.7199999999789077e-07, 8.764000000001382e-06, 4.7199999999789077e-07, 4.541999999999741e-06, 4.720000000013602e-07, 9.999999999999593e-06, 4.860000000009301e-07, 4.610999999998117e-06, 4.720000000013602e-07, 9.917000000001647e-06, 4.859999999974607e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:32:57.826" endtime="20201110 08:32:57.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.822" endtime="20201110 08:32:57.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:57.834" level="INFO">${RESULT} = [{'time': 0.027076708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.027085861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:57.831" endtime="20201110 08:32:57.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:57.848" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:57.835" endtime="20201110 08:32:57.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.852" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:57.851" endtime="20201110 08:32:57.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.854" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201110 08:32:57.853" endtime="20201110 08:32:57.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.849" endtime="20201110 08:32:57.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.857" endtime="20201110 08:32:57.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:57.861" endtime="20201110 08:32:57.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.859" endtime="20201110 08:32:57.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.856" endtime="20201110 08:32:57.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.421" endtime="20201110 08:32:57.882"></status>
</kw>
<msg timestamp="20201110 08:32:57.882" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.890" endtime="20201110 08:32:57.906"></status>
</kw>
<msg timestamp="20201110 08:32:57.907" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.888" endtime="20201110 08:32:57.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.909" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.908" endtime="20201110 08:32:57.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.910" endtime="20201110 08:32:57.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.886" endtime="20201110 08:32:57.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.884" endtime="20201110 08:32:57.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.919" endtime="20201110 08:32:58.210"></status>
</kw>
<msg timestamp="20201110 08:32:58.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.917" endtime="20201110 08:32:58.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.214" endtime="20201110 08:32:58.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.222" endtime="20201110 08:32:58.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.915" endtime="20201110 08:32:58.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.913" endtime="20201110 08:32:58.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.229" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:58.228" endtime="20201110 08:32:58.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.234" level="INFO">VALUE: [{'time': 0.020333917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020342778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.02034325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020349931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.020350417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020357569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.151999999999853e-06, 'source_diff': 7.151999999999853e-06}, {'time': 0.020358042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020365833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791000000000048e-06, 'source_diff': 7.791000000000048e-06}, {'time': 0.020366319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020375417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.097999999999051e-06, 'source_diff': 9.097999999999051e-06}, {'time': 0.020375889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020381639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.020382125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020391139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.020391611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020395472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.020395944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020406292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.020406764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020411889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.020412375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020419069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.020419542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020429167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.625000000002687e-06, 'source_diff': 9.625000000002687e-06}, {'time': 0.020429639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020436528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.020437014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020442361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.020442833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020451833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.020452306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020457556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.020458028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020466389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.020466861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020471486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.020471958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020480417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.459000000002326e-06, 'source_diff': 8.459000000002326e-06}, {'time': 0.020480889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020489639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.020490111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020498222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.111000000001617e-06, 'source_diff': 8.111000000001617e-06}, {'time': 0.020498694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020505875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.020506361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020515028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.020515514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020524931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.417000000001147e-06, 'source_diff': 9.417000000001147e-06}, {'time': 0.020525403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020535444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0040999999998829e-05, 'source_diff': 1.0040999999998829e-05}, {'time': 0.020535917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020543319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402000000000103e-06, 'source_diff': 7.402000000000103e-06}, {'time': 0.020543792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020553708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.915999999998704e-06, 'source_diff': 9.915999999998704e-06}, {'time': 0.020554181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020560458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.020560944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020568778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.020569264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020575458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.020575931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020585722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791000000002048e-06, 'source_diff': 9.791000000002048e-06}, {'time': 0.020586208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020593847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.638999999996787e-06, 'source_diff': 7.638999999996787e-06}, {'time': 0.020594319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020598514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.020598986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020602986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.020603458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020609236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.020609708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020617431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722999999997676e-06, 'source_diff': 7.722999999997676e-06}, {'time': 0.020617917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02062825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.020628722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020637611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.020638083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020644875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.020645361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020653097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.020653569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020661514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944999999998786e-06, 'source_diff': 7.944999999998786e-06}, {'time': 0.020662, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020668903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.020669375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020679083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.020679556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020686681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.020687153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020692389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.020692875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020698625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.020699111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020703514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.020704, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020714222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.020714708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020721403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.020721875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:58.230" endtime="20201110 08:32:58.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.226" endtime="20201110 08:32:58.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:58.261" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:58.237" endtime="20201110 08:32:58.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.264" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:58.263" endtime="20201110 08:32:58.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.269" level="INFO">VALUE: {'sourcesource_diff': [0, 4.860000000009301e-07, 8.374999999997967e-06, 4.720000000013602e-07, 6.681000000001436e-06, 4.859999999974607e-07, 7.151999999999853e-06, 4.7300000000083386e-07, 7.791000000000048e-06, 4.860000000009301e-07, 9.097999999999051e-06, 4.720000000013602e-07, 5.749999999998812e-06, 4.860000000009301e-07, 9.013999999998162e-06, 4.720000000013602e-07, 3.861000000000836e-06, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 5.1249999999981866e-06, 4.860000000009301e-07, 6.694000000001532e-06, 4.729999999973644e-07, 9.625000000002687e-06, 4.7199999999789077e-07, 6.888999999999507e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 8.459000000002326e-06, 4.7199999999789077e-07, 8.750000000001812e-06, 4.7199999999789077e-07, 8.111000000001617e-06, 4.720000000013602e-07, 7.180999999998466e-06, 4.860000000009301e-07, 8.667000000000397e-06, 4.859999999974607e-07, 9.417000000001147e-06, 4.720000000013602e-07, 1.0040999999998829e-05, 4.7300000000083386e-07, 7.402000000000103e-06, 4.7300000000083386e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 6.276999999998978e-06, 4.860000000009301e-07, 7.833999999998231e-06, 4.860000000009301e-07, 6.194000000001032e-06, 4.729999999973644e-07, 9.791000000002048e-06, 4.860000000009301e-07, 7.638999999996787e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 7.722999999997676e-06, 4.860000000009301e-07, 1.0333000000001258e-05, 4.7199999999789077e-07, 8.889000000001507e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.860000000009301e-07, 7.735999999997772e-06, 4.720000000013602e-07, 7.944999999998786e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 7.124999999996717e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.860000000009301e-07, 5.749999999998812e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.860000000009301e-07, 1.0222000000000703e-05, 4.859999999974607e-07, 6.695000000001006e-06, 4.720000000013602e-07], 'time': [0.020333917, 0.020334403, 0.020342778, 0.02034325, 0.020349931, 0.020350417, 0.020357569, 0.020358042, 0.020365833, 0.020366319, 0.020375417, 0.020375889, 0.020381639, 0.020382125, 0.020391139, 0.020391611, 0.020395472, 0.020395944, 0.020406292, 0.020406764, 0.020411889, 0.020412375, 0.020419069, 0.020419542, 0.020429167, 0.020429639, 0.020436528, 0.020437014, 0.020442361, 0.020442833, 0.020451833, 0.020452306, 0.020457556, 0.020458028, 0.020466389, 0.020466861, 0.020471486, 0.020471958, 0.020480417, 0.020480889, 0.020489639, 0.020490111, 0.020498222, 0.020498694, 0.020505875, 0.020506361, 0.020515028, 0.020515514, 0.020524931, 0.020525403, 0.020535444, 0.020535917, 0.020543319, 0.020543792, 0.020553708, 0.020554181, 0.020560458, 0.020560944, 0.020568778, 0.020569264, 0.020575458, 0.020575931, 0.020585722, 0.020586208, 0.020593847, 0.020594319, 0.020598514, 0.020598986, 0.020602986, 0.020603458, 0.020609236, 0.020609708, 0.020617431, 0.020617917, 0.02062825, 0.020628722, 0.020637611, 0.020638083, 0.020644875, 0.020645361, 0.020653097, 0.020653569, 0.020661514, 0.020662, 0.020668903, 0.020669375, 0.020679083, 0.020679556, 0.020686681, 0.020687153, 0.020692389, 0.020692875, 0.020698625, 0.020699111, 0.020703514, 0.020704, 0.020714222, 0.020714708, 0.020721403, 0.020721875], 'diff': [0, 4.860000000009301e-07, 8.374999999997967e-06, 4.720000000013602e-07, 6.681000000001436e-06, 4.859999999974607e-07, 7.151999999999853e-06, 4.7300000000083386e-07, 7.791000000000048e-06, 4.860000000009301e-07, 9.097999999999051e-06, 4.720000000013602e-07, 5.749999999998812e-06, 4.860000000009301e-07, 9.013999999998162e-06, 4.720000000013602e-07, 3.861000000000836e-06, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 5.1249999999981866e-06, 4.860000000009301e-07, 6.694000000001532e-06, 4.729999999973644e-07, 9.625000000002687e-06, 4.7199999999789077e-07, 6.888999999999507e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 8.459000000002326e-06, 4.7199999999789077e-07, 8.750000000001812e-06, 4.7199999999789077e-07, 8.111000000001617e-06, 4.720000000013602e-07, 7.180999999998466e-06, 4.860000000009301e-07, 8.667000000000397e-06, 4.859999999974607e-07, 9.417000000001147e-06, 4.720000000013602e-07, 1.0040999999998829e-05, 4.7300000000083386e-07, 7.402000000000103e-06, 4.7300000000083386e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 6.276999999998978e-06, 4.860000000009301e-07, 7.833999999998231e-06, 4.860000000009301e-07, 6.194000000001032e-06, 4.729999999973644e-07, 9.791000000002048e-06, 4.860000000009301e-07, 7.638999999996787e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 7.722999999997676e-06, 4.860000000009301e-07, 1.0333000000001258e-05, 4.7199999999789077e-07, 8.889000000001507e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.860000000009301e-07, 7.735999999997772e-06, 4.720000000013602e-07, 7.944999999998786e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 7.124999999996717e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.860000000009301e-07, 5.749999999998812e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.860000000009301e-07, 1.0222000000000703e-05, 4.859999999974607e-07, 6.695000000001006e-06, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:32:58.266" endtime="20201110 08:32:58.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.262" endtime="20201110 08:32:58.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:58.274" level="INFO">${RESULT} = [{'time': 0.020334403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02034325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:32:58.271" endtime="20201110 08:32:58.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:58.288" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:58.275" endtime="20201110 08:32:58.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.292" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:58.291" endtime="20201110 08:32:58.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.294" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:58.293" endtime="20201110 08:32:58.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.289" endtime="20201110 08:32:58.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.297" endtime="20201110 08:32:58.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:58.301" endtime="20201110 08:32:58.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.299" endtime="20201110 08:32:58.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.296" endtime="20201110 08:32:58.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.883" endtime="20201110 08:32:58.322"></status>
</kw>
<msg timestamp="20201110 08:32:58.322" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.330" endtime="20201110 08:32:58.343"></status>
</kw>
<msg timestamp="20201110 08:32:58.343" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.328" endtime="20201110 08:32:58.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.346" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.345" endtime="20201110 08:32:58.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.347" endtime="20201110 08:32:58.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.325" endtime="20201110 08:32:58.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.324" endtime="20201110 08:32:58.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.356" endtime="20201110 08:32:58.661"></status>
</kw>
<msg timestamp="20201110 08:32:58.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017882597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017883069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.355" endtime="20201110 08:32:58.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017882597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017883069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.665" endtime="20201110 08:32:58.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.674" endtime="20201110 08:32:58.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.352" endtime="20201110 08:32:58.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.351" endtime="20201110 08:32:58.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.680" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:58.679" endtime="20201110 08:32:58.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.685" level="INFO">VALUE: [{'time': 0.017882597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017883069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.017890292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222999999997176e-06, 'source_diff': 7.222999999997176e-06}, {'time': 0.017890764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.017896097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.017896583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.017906806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0223000000000176e-05, 'source_diff': 1.0223000000000176e-05}, {'time': 0.017907292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.017913042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.017913528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.017922708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.017923194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.017933097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.017933583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.017940694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.017941167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0179515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.017951972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.017957319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017957806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.017965111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.017965597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.017970208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.017970681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.017981125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000001813e-05, 'source_diff': 1.0444000000001813e-05}, {'time': 0.017981597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.017989444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.017989917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.017994639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017995111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018003472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.018003944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018008764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.01800925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018018139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.018018611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018028944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.018029417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018037458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.018037931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018042958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.018043444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018053389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.945000000000787e-06, 'source_diff': 9.945000000000787e-06}, {'time': 0.018053861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018062083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.018062569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018072375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.018072847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018081736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.018082208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018089111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.018089583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018094097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018094583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018098681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09799999999752e-06, 'source_diff': 4.09799999999752e-06}, {'time': 0.018099153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018105736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.018106222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018112292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069999999996911e-06, 'source_diff': 6.069999999996911e-06}, {'time': 0.018112764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018118625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018119097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018129222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.018129708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018137875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.018138347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018142319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.018142806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018147833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.018148306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018153444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.138000000001752e-06, 'source_diff': 5.138000000001752e-06}, {'time': 0.018153917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018163319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402000000002103e-06, 'source_diff': 9.402000000002103e-06}, {'time': 0.018163792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018173611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999997718e-06, 'source_diff': 9.818999999997718e-06}, {'time': 0.018174083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018181208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018181681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018186389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.018186875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018195333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.018195806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018203542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.018204014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018213222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.018213694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018218611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018219097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018225889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.018226361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018235653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.018236139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018240958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.819000000003126e-06, 'source_diff': 4.819000000003126e-06}, {'time': 0.018241431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018250542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.111000000002617e-06, 'source_diff': 9.111000000002617e-06}, {'time': 0.018251014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018258639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.018259111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018263319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.018263792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:58.681" endtime="20201110 08:32:58.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.677" endtime="20201110 08:32:58.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:58.711" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:58.688" endtime="20201110 08:32:58.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.715" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:58.714" endtime="20201110 08:32:58.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.719" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 7.222999999997176e-06, 4.720000000013602e-07, 5.332999999999727e-06, 4.860000000009301e-07, 1.0223000000000176e-05, 4.859999999974607e-07, 5.750000000002281e-06, 4.860000000009301e-07, 9.179999999997523e-06, 4.860000000009301e-07, 9.902999999998607e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 5.346999999999297e-06, 4.870000000004038e-07, 7.304999999999118e-06, 4.860000000009301e-07, 4.611000000001586e-06, 4.729999999973644e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 7.847000000001797e-06, 4.7300000000083386e-07, 4.721999999998672e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 8.888999999998037e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.729999999973644e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 5.027000000001197e-06, 4.859999999974607e-07, 9.945000000000787e-06, 4.720000000013602e-07, 8.221999999998703e-06, 4.860000000009301e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 6.903000000002546e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.860000000009301e-07, 4.09799999999752e-06, 4.720000000013602e-07, 6.583000000000977e-06, 4.860000000009301e-07, 6.069999999996911e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 3.972000000001391e-06, 4.870000000004038e-07, 5.026999999997728e-06, 4.7300000000083386e-07, 5.138000000001752e-06, 4.729999999973644e-07, 9.402000000002103e-06, 4.7300000000083386e-07, 9.818999999997718e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7300000000083386e-07, 4.707999999999102e-06, 4.860000000009301e-07, 8.457999999999383e-06, 4.729999999973644e-07, 7.736000000001242e-06, 4.720000000013602e-07, 9.208000000000133e-06, 4.7199999999789077e-07, 4.917000000000116e-06, 4.860000000009301e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 9.292000000001022e-06, 4.859999999974607e-07, 4.819000000003126e-06, 4.729999999973644e-07, 9.111000000002617e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07], 'time': [0.017882597, 0.017883069, 0.017890292, 0.017890764, 0.017896097, 0.017896583, 0.017906806, 0.017907292, 0.017913042, 0.017913528, 0.017922708, 0.017923194, 0.017933097, 0.017933583, 0.017940694, 0.017941167, 0.0179515, 0.017951972, 0.017957319, 0.017957806, 0.017965111, 0.017965597, 0.017970208, 0.017970681, 0.017981125, 0.017981597, 0.017989444, 0.017989917, 0.017994639, 0.017995111, 0.018003472, 0.018003944, 0.018008764, 0.01800925, 0.018018139, 0.018018611, 0.018028944, 0.018029417, 0.018037458, 0.018037931, 0.018042958, 0.018043444, 0.018053389, 0.018053861, 0.018062083, 0.018062569, 0.018072375, 0.018072847, 0.018081736, 0.018082208, 0.018089111, 0.018089583, 0.018094097, 0.018094583, 0.018098681, 0.018099153, 0.018105736, 0.018106222, 0.018112292, 0.018112764, 0.018118625, 0.018119097, 0.018129222, 0.018129708, 0.018137875, 0.018138347, 0.018142319, 0.018142806, 0.018147833, 0.018148306, 0.018153444, 0.018153917, 0.018163319, 0.018163792, 0.018173611, 0.018174083, 0.018181208, 0.018181681, 0.018186389, 0.018186875, 0.018195333, 0.018195806, 0.018203542, 0.018204014, 0.018213222, 0.018213694, 0.018218611, 0.018219097, 0.018225889, 0.018226361, 0.018235653, 0.018236139, 0.018240958, 0.018241431, 0.018250542, 0.018251014, 0.018258639, 0.018259111, 0.018263319, 0.018263792], 'diff': [0, 4.720000000013602e-07, 7.222999999997176e-06, 4.720000000013602e-07, 5.332999999999727e-06, 4.860000000009301e-07, 1.0223000000000176e-05, 4.859999999974607e-07, 5.750000000002281e-06, 4.860000000009301e-07, 9.179999999997523e-06, 4.860000000009301e-07, 9.902999999998607e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 5.346999999999297e-06, 4.870000000004038e-07, 7.304999999999118e-06, 4.860000000009301e-07, 4.611000000001586e-06, 4.729999999973644e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 7.847000000001797e-06, 4.7300000000083386e-07, 4.721999999998672e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 8.888999999998037e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.729999999973644e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 5.027000000001197e-06, 4.859999999974607e-07, 9.945000000000787e-06, 4.720000000013602e-07, 8.221999999998703e-06, 4.860000000009301e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 6.903000000002546e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.860000000009301e-07, 4.09799999999752e-06, 4.720000000013602e-07, 6.583000000000977e-06, 4.860000000009301e-07, 6.069999999996911e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 3.972000000001391e-06, 4.870000000004038e-07, 5.026999999997728e-06, 4.7300000000083386e-07, 5.138000000001752e-06, 4.729999999973644e-07, 9.402000000002103e-06, 4.7300000000083386e-07, 9.818999999997718e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7300000000083386e-07, 4.707999999999102e-06, 4.860000000009301e-07, 8.457999999999383e-06, 4.729999999973644e-07, 7.736000000001242e-06, 4.720000000013602e-07, 9.208000000000133e-06, 4.7199999999789077e-07, 4.917000000000116e-06, 4.860000000009301e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 9.292000000001022e-06, 4.859999999974607e-07, 4.819000000003126e-06, 4.729999999973644e-07, 9.111000000002617e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:32:58.716" endtime="20201110 08:32:58.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.712" endtime="20201110 08:32:58.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:58.724" level="INFO">${RESULT} = [{'time': 0.017883069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.017890764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:58.721" endtime="20201110 08:32:58.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:58.738" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:58.725" endtime="20201110 08:32:58.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.742" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:58.741" endtime="20201110 08:32:58.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.744" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:32:58.743" endtime="20201110 08:32:58.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.739" endtime="20201110 08:32:58.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.747" endtime="20201110 08:32:58.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:58.751" endtime="20201110 08:32:58.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.749" endtime="20201110 08:32:58.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.746" endtime="20201110 08:32:58.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.322" endtime="20201110 08:32:58.772"></status>
</kw>
<msg timestamp="20201110 08:32:58.772" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.780" endtime="20201110 08:32:58.794"></status>
</kw>
<msg timestamp="20201110 08:32:58.795" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.779" endtime="20201110 08:32:58.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.797" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.796" endtime="20201110 08:32:58.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.799" endtime="20201110 08:32:58.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.776" endtime="20201110 08:32:58.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.774" endtime="20201110 08:32:58.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.808" endtime="20201110 08:32:59.090"></status>
</kw>
<msg timestamp="20201110 08:32:59.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.806" endtime="20201110 08:32:59.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.094" endtime="20201110 08:32:59.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.102" endtime="20201110 08:32:59.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.804" endtime="20201110 08:32:59.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.802" endtime="20201110 08:32:59.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.109" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:59.108" endtime="20201110 08:32:59.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.114" level="INFO">VALUE: [{'time': 0.019979042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019985083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.019985556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01999225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.019992722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020000972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.020001458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020008264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.020008736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020018653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.020019125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020027167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.020027653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020032681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.020033153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020037153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9999999999970615e-06, 'source_diff': 3.9999999999970615e-06}, {'time': 0.020037625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020046708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.020047194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020051694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.020052181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020061167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.020061639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020070014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.020070486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020079347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.020079833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020086111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.020086583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020092764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.020093236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020099097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.020099583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020107486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.020107958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020115319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.020115792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020125194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.401999999998634e-06, 'source_diff': 9.401999999998634e-06}, {'time': 0.020125667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020130722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.020131194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020139639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.444999999999286e-06, 'source_diff': 8.444999999999286e-06}, {'time': 0.020140125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020145458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.333000000003196e-06, 'source_diff': 5.333000000003196e-06}, {'time': 0.020145944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020152111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.020152597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02015825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.020158722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020163208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.020163681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020172694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013000000002158e-06, 'source_diff': 9.013000000002158e-06}, {'time': 0.020173181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.020180292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.020180764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020187667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.020188153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020197236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.020197708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020203056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34799999999877e-06, 'source_diff': 5.34799999999877e-06}, {'time': 0.020203528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020213028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}, {'time': 0.020213514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020220847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333000000001727e-06, 'source_diff': 7.333000000001727e-06}, {'time': 0.020221319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020226875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555999999996841e-06, 'source_diff': 5.555999999996841e-06}, {'time': 0.020227347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020235319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.020235792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.02024525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458000000000383e-06, 'source_diff': 9.458000000000383e-06}, {'time': 0.020245736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020256069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.020256542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020262403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.020262889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020270833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.943999999999313e-06, 'source_diff': 7.943999999999313e-06}, {'time': 0.020271306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02027575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.020276222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020281153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.020281625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020286736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.020287208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020293903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694999999997536e-06, 'source_diff': 6.694999999997536e-06}, {'time': 0.020294375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020303889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.020304361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020310431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.020310903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020320514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.020320986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020329139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.020329625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020334028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.0203345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020341819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.020342306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020350042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.020350514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:59.110" endtime="20201110 08:32:59.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.106" endtime="20201110 08:32:59.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:59.141" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:59.117" endtime="20201110 08:32:59.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.144" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:59.143" endtime="20201110 08:32:59.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.149" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.860000000009301e-07, 5.555000000000837e-06, 4.7300000000083386e-07, 6.693999999998063e-06, 4.720000000013602e-07, 8.249999999997842e-06, 4.860000000009301e-07, 6.806000000001561e-06, 4.7199999999789077e-07, 9.917000000001647e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.860000000009301e-07, 5.028000000000671e-06, 4.720000000013602e-07, 3.9999999999970615e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.4999999999975615e-06, 4.870000000004038e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 8.375000000001437e-06, 4.7199999999789077e-07, 8.861000000002367e-06, 4.859999999974607e-07, 6.278000000001921e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.860000000009301e-07, 7.903000000000077e-06, 4.7199999999789077e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 9.401999999998634e-06, 4.7300000000083386e-07, 5.055000000000337e-06, 4.720000000013602e-07, 8.444999999999286e-06, 4.859999999974607e-07, 5.333000000003196e-06, 4.859999999974607e-07, 6.167000000001366e-06, 4.860000000009301e-07, 5.6529999999978264e-06, 4.720000000013602e-07, 4.485999999997992e-06, 4.7300000000083386e-07, 9.013000000002158e-06, 4.869999999969343e-07, 7.111000000000617e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 9.083000000000008e-06, 4.720000000013602e-07, 5.34799999999877e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.859999999974607e-07, 7.333000000001727e-06, 4.720000000013602e-07, 5.555999999996841e-06, 4.720000000013602e-07, 7.972000000001922e-06, 4.729999999973644e-07, 9.458000000000383e-06, 4.860000000009301e-07, 1.0333000000001258e-05, 4.729999999973644e-07, 5.860999999999367e-06, 4.860000000009301e-07, 7.943999999999313e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 5.110999999998617e-06, 4.720000000013602e-07, 6.694999999997536e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 6.070000000000381e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.7199999999789077e-07, 7.319000000002157e-06, 4.870000000004038e-07, 7.735999999997772e-06, 4.720000000013602e-07], 'time': [0.019979042, 0.019979528, 0.019985083, 0.019985556, 0.01999225, 0.019992722, 0.020000972, 0.020001458, 0.020008264, 0.020008736, 0.020018653, 0.020019125, 0.020027167, 0.020027653, 0.020032681, 0.020033153, 0.020037153, 0.020037625, 0.020046708, 0.020047194, 0.020051694, 0.020052181, 0.020061167, 0.020061639, 0.020070014, 0.020070486, 0.020079347, 0.020079833, 0.020086111, 0.020086583, 0.020092764, 0.020093236, 0.020099097, 0.020099583, 0.020107486, 0.020107958, 0.020115319, 0.020115792, 0.020125194, 0.020125667, 0.020130722, 0.020131194, 0.020139639, 0.020140125, 0.020145458, 0.020145944, 0.020152111, 0.020152597, 0.02015825, 0.020158722, 0.020163208, 0.020163681, 0.020172694, 0.020173181, 0.020180292, 0.020180764, 0.020187667, 0.020188153, 0.020197236, 0.020197708, 0.020203056, 0.020203528, 0.020213028, 0.020213514, 0.020220847, 0.020221319, 0.020226875, 0.020227347, 0.020235319, 0.020235792, 0.02024525, 0.020245736, 0.020256069, 0.020256542, 0.020262403, 0.020262889, 0.020270833, 0.020271306, 0.02027575, 0.020276222, 0.020281153, 0.020281625, 0.020286736, 0.020287208, 0.020293903, 0.020294375, 0.020303889, 0.020304361, 0.020310431, 0.020310903, 0.020320514, 0.020320986, 0.020329139, 0.020329625, 0.020334028, 0.0203345, 0.020341819, 0.020342306, 0.020350042, 0.020350514], 'diff': [0, 4.860000000009301e-07, 5.555000000000837e-06, 4.7300000000083386e-07, 6.693999999998063e-06, 4.720000000013602e-07, 8.249999999997842e-06, 4.860000000009301e-07, 6.806000000001561e-06, 4.7199999999789077e-07, 9.917000000001647e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.860000000009301e-07, 5.028000000000671e-06, 4.720000000013602e-07, 3.9999999999970615e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.4999999999975615e-06, 4.870000000004038e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 8.375000000001437e-06, 4.7199999999789077e-07, 8.861000000002367e-06, 4.859999999974607e-07, 6.278000000001921e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.860000000009301e-07, 7.903000000000077e-06, 4.7199999999789077e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 9.401999999998634e-06, 4.7300000000083386e-07, 5.055000000000337e-06, 4.720000000013602e-07, 8.444999999999286e-06, 4.859999999974607e-07, 5.333000000003196e-06, 4.859999999974607e-07, 6.167000000001366e-06, 4.860000000009301e-07, 5.6529999999978264e-06, 4.720000000013602e-07, 4.485999999997992e-06, 4.7300000000083386e-07, 9.013000000002158e-06, 4.869999999969343e-07, 7.111000000000617e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 9.083000000000008e-06, 4.720000000013602e-07, 5.34799999999877e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.859999999974607e-07, 7.333000000001727e-06, 4.720000000013602e-07, 5.555999999996841e-06, 4.720000000013602e-07, 7.972000000001922e-06, 4.729999999973644e-07, 9.458000000000383e-06, 4.860000000009301e-07, 1.0333000000001258e-05, 4.729999999973644e-07, 5.860999999999367e-06, 4.860000000009301e-07, 7.943999999999313e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 5.110999999998617e-06, 4.720000000013602e-07, 6.694999999997536e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 6.070000000000381e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.7199999999789077e-07, 7.319000000002157e-06, 4.870000000004038e-07, 7.735999999997772e-06, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:32:59.145" endtime="20201110 08:32:59.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.141" endtime="20201110 08:32:59.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:59.155" level="INFO">${RESULT} = [{'time': 0.019979528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019985556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:59.151" endtime="20201110 08:32:59.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:59.168" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:59.156" endtime="20201110 08:32:59.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.172" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:59.171" endtime="20201110 08:32:59.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.175" level="INFO">VALUE: [4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:59.173" endtime="20201110 08:32:59.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.169" endtime="20201110 08:32:59.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.178" endtime="20201110 08:32:59.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:59.181" endtime="20201110 08:32:59.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.180" endtime="20201110 08:32:59.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.176" endtime="20201110 08:32:59.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.773" endtime="20201110 08:32:59.202"></status>
</kw>
<msg timestamp="20201110 08:32:59.202" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.210" endtime="20201110 08:32:59.227"></status>
</kw>
<msg timestamp="20201110 08:32:59.228" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.208" endtime="20201110 08:32:59.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.230" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.229" endtime="20201110 08:32:59.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.231" endtime="20201110 08:32:59.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.206" endtime="20201110 08:32:59.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.204" endtime="20201110 08:32:59.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.240" endtime="20201110 08:32:59.526"></status>
</kw>
<msg timestamp="20201110 08:32:59.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021699792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.239" endtime="20201110 08:32:59.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021699792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.530" endtime="20201110 08:32:59.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.539" endtime="20201110 08:32:59.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.236" endtime="20201110 08:32:59.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.234" endtime="20201110 08:32:59.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.545" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:59.544" endtime="20201110 08:32:59.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.550" level="INFO">VALUE: [{'time': 0.021699319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021699792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0217045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000002571e-06, 'source_diff': 4.708000000002571e-06}, {'time': 0.021704986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021710736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.021711222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021718986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.021719458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021724069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.021724542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021732472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.929999999999743e-06, 'source_diff': 7.929999999999743e-06}, {'time': 0.021732944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021737875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.021738361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021742556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.021743042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021747875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.021748347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021755444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.021755931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021764097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166000000000423e-06, 'source_diff': 8.166000000000423e-06}, {'time': 0.021764569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021768875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.021769347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02177625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.021776722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021785181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.459000000002326e-06, 'source_diff': 8.459000000002326e-06}, {'time': 0.021785667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021794125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.021794611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021802361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.021802833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021809417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.021809889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021818875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.021819347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021829083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.021829556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021835306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.021835778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021841542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.021842014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021851528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.021852, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021861917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.021862389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021872319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930000000001743e-06, 'source_diff': 9.930000000001743e-06}, {'time': 0.021872792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021883125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.021883597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021890292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694999999997536e-06, 'source_diff': 6.694999999997536e-06}, {'time': 0.021890764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021895542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.021896014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021902931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.021903417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021912292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.021912764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021916931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.021917403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021926069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.021926556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021933333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.776999999999478e-06, 'source_diff': 6.776999999999478e-06}, {'time': 0.021933819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021942597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.021943069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021953181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111999999999621e-05, 'source_diff': 1.0111999999999621e-05}, {'time': 0.021953667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021959236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.021959708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021965111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.021965583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021972014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.021972486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021982403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.021982875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021990403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.021990875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021996639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.021997125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022006875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.022007347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022011403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.022011875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022017875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.022018347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022025431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.084000000000951e-06, 'source_diff': 7.084000000000951e-06}, {'time': 0.022025917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022030125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.022030597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022035208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.022035681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022043125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.443999999998813e-06, 'source_diff': 7.443999999998813e-06}, {'time': 0.022043597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022051431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.022051903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022056417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.022056903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022062403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.022062875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:59.546" endtime="20201110 08:32:59.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.542" endtime="20201110 08:32:59.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:59.576" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:59.553" endtime="20201110 08:32:59.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.580" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:59.579" endtime="20201110 08:32:59.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.584" level="INFO">VALUE: {'sourcesource_diff': [0, 4.729999999973644e-07, 4.708000000002571e-06, 4.859999999974607e-07, 5.750000000002281e-06, 4.859999999974607e-07, 7.764000000000382e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.7300000000083386e-07, 7.929999999999743e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.860000000009301e-07, 4.1949999999985055e-06, 4.860000000009301e-07, 4.832999999999227e-06, 4.720000000013602e-07, 7.0969999999975775e-06, 4.870000000004038e-07, 8.166000000000423e-06, 4.720000000013602e-07, 4.305999999999061e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.7199999999789077e-07, 8.459000000002326e-06, 4.860000000009301e-07, 8.457999999999383e-06, 4.859999999974607e-07, 7.750000000000812e-06, 4.720000000013602e-07, 6.584000000000451e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 9.735999999999773e-06, 4.7300000000083386e-07, 5.749999999998812e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 9.917000000001647e-06, 4.7199999999789077e-07, 9.930000000001743e-06, 4.729999999973644e-07, 1.0333000000001258e-05, 4.720000000013602e-07, 6.694999999997536e-06, 4.720000000013602e-07, 4.778000000000421e-06, 4.7199999999789077e-07, 6.917000000002116e-06, 4.860000000009301e-07, 8.874999999998467e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.7199999999789077e-07, 8.666000000000923e-06, 4.870000000004038e-07, 6.776999999999478e-06, 4.860000000009301e-07, 8.778000000000952e-06, 4.7199999999789077e-07, 1.0111999999999621e-05, 4.860000000009301e-07, 5.569000000000407e-06, 4.720000000013602e-07, 5.402999999997576e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.7199999999789077e-07, 9.917000000001647e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.860000000009301e-07, 9.749999999999343e-06, 4.720000000013602e-07, 4.0559999999988106e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 7.084000000000951e-06, 4.859999999974607e-07, 4.208000000002071e-06, 4.7199999999789077e-07, 4.611000000001586e-06, 4.7300000000083386e-07, 7.443999999998813e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.860000000009301e-07, 5.500000000002031e-06, 4.7199999999789077e-07], 'time': [0.021699319, 0.021699792, 0.0217045, 0.021704986, 0.021710736, 0.021711222, 0.021718986, 0.021719458, 0.021724069, 0.021724542, 0.021732472, 0.021732944, 0.021737875, 0.021738361, 0.021742556, 0.021743042, 0.021747875, 0.021748347, 0.021755444, 0.021755931, 0.021764097, 0.021764569, 0.021768875, 0.021769347, 0.02177625, 0.021776722, 0.021785181, 0.021785667, 0.021794125, 0.021794611, 0.021802361, 0.021802833, 0.021809417, 0.021809889, 0.021818875, 0.021819347, 0.021829083, 0.021829556, 0.021835306, 0.021835778, 0.021841542, 0.021842014, 0.021851528, 0.021852, 0.021861917, 0.021862389, 0.021872319, 0.021872792, 0.021883125, 0.021883597, 0.021890292, 0.021890764, 0.021895542, 0.021896014, 0.021902931, 0.021903417, 0.021912292, 0.021912764, 0.021916931, 0.021917403, 0.021926069, 0.021926556, 0.021933333, 0.021933819, 0.021942597, 0.021943069, 0.021953181, 0.021953667, 0.021959236, 0.021959708, 0.021965111, 0.021965583, 0.021972014, 0.021972486, 0.021982403, 0.021982875, 0.021990403, 0.021990875, 0.021996639, 0.021997125, 0.022006875, 0.022007347, 0.022011403, 0.022011875, 0.022017875, 0.022018347, 0.022025431, 0.022025917, 0.022030125, 0.022030597, 0.022035208, 0.022035681, 0.022043125, 0.022043597, 0.022051431, 0.022051903, 0.022056417, 0.022056903, 0.022062403, 0.022062875], 'diff': [0, 4.729999999973644e-07, 4.708000000002571e-06, 4.859999999974607e-07, 5.750000000002281e-06, 4.859999999974607e-07, 7.764000000000382e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.7300000000083386e-07, 7.929999999999743e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.860000000009301e-07, 4.1949999999985055e-06, 4.860000000009301e-07, 4.832999999999227e-06, 4.720000000013602e-07, 7.0969999999975775e-06, 4.870000000004038e-07, 8.166000000000423e-06, 4.720000000013602e-07, 4.305999999999061e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.7199999999789077e-07, 8.459000000002326e-06, 4.860000000009301e-07, 8.457999999999383e-06, 4.859999999974607e-07, 7.750000000000812e-06, 4.720000000013602e-07, 6.584000000000451e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 9.735999999999773e-06, 4.7300000000083386e-07, 5.749999999998812e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 9.917000000001647e-06, 4.7199999999789077e-07, 9.930000000001743e-06, 4.729999999973644e-07, 1.0333000000001258e-05, 4.720000000013602e-07, 6.694999999997536e-06, 4.720000000013602e-07, 4.778000000000421e-06, 4.7199999999789077e-07, 6.917000000002116e-06, 4.860000000009301e-07, 8.874999999998467e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.7199999999789077e-07, 8.666000000000923e-06, 4.870000000004038e-07, 6.776999999999478e-06, 4.860000000009301e-07, 8.778000000000952e-06, 4.7199999999789077e-07, 1.0111999999999621e-05, 4.860000000009301e-07, 5.569000000000407e-06, 4.720000000013602e-07, 5.402999999997576e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.7199999999789077e-07, 9.917000000001647e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.860000000009301e-07, 9.749999999999343e-06, 4.720000000013602e-07, 4.0559999999988106e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 7.084000000000951e-06, 4.859999999974607e-07, 4.208000000002071e-06, 4.7199999999789077e-07, 4.611000000001586e-06, 4.7300000000083386e-07, 7.443999999998813e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.860000000009301e-07, 5.500000000002031e-06, 4.7199999999789077e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:32:59.581" endtime="20201110 08:32:59.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.577" endtime="20201110 08:32:59.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:59.590" level="INFO">${RESULT} = [{'time': 0.021699792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021704986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:59.586" endtime="20201110 08:32:59.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:59.603" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:59.591" endtime="20201110 08:32:59.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.608" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:59.607" endtime="20201110 08:32:59.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.610" level="INFO">VALUE: [4.729999999973644e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:32:59.609" endtime="20201110 08:32:59.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.604" endtime="20201110 08:32:59.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.613" endtime="20201110 08:32:59.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:59.617" endtime="20201110 08:32:59.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.615" endtime="20201110 08:32:59.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.612" endtime="20201110 08:32:59.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.203" endtime="20201110 08:32:59.637"></status>
</kw>
<msg timestamp="20201110 08:32:59.638" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.646" endtime="20201110 08:32:59.664"></status>
</kw>
<msg timestamp="20201110 08:32:59.664" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.644" endtime="20201110 08:32:59.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.667" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.665" endtime="20201110 08:32:59.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.668" endtime="20201110 08:32:59.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.641" endtime="20201110 08:32:59.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.640" endtime="20201110 08:32:59.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.677" endtime="20201110 08:32:59.980"></status>
</kw>
<msg timestamp="20201110 08:32:59.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023477278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02347775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:32:59.675" endtime="20201110 08:32:59.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023477278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02347775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:32:59.989" endtime="20201110 08:32:59.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.998" endtime="20201110 08:33:00.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.673" endtime="20201110 08:33:00.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.671" endtime="20201110 08:33:00.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.005" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:00.004" endtime="20201110 08:33:00.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.010" level="INFO">VALUE: [{'time': 0.023477278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02347775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023488236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.023488708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023495375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6669999999983964e-06, 'source_diff': 6.6669999999983964e-06}, {'time': 0.023495847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023501694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.023502181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.02351075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.023511222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023515333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.023515806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023524486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.023524958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023532472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.023532958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023541417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.023541889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023549528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.02355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023555889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.023556361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023560444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.023560917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023566167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.023566639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023572917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.023573403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023580528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.023581, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023588639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.023589111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023593611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.023594083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023602917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.8340000000027e-06, 'source_diff': 8.8340000000027e-06}, {'time': 0.023603389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023612222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.023612694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023618139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.023618625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023628958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.023629431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02363925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.023639722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023647569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.023648042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023657458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.415999999998204e-06, 'source_diff': 9.415999999998204e-06}, {'time': 0.023657931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023665556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.023666028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023674181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.023674667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023684583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.915999999998704e-06, 'source_diff': 9.915999999998704e-06}, {'time': 0.023685056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023692069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013000000000158e-06, 'source_diff': 7.013000000000158e-06}, {'time': 0.023692542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023700069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.023700542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023705389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.023705861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023712861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.999999999996592e-06, 'source_diff': 6.999999999996592e-06}, {'time': 0.023713333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023720653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.023721125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023730014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.023730486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023734583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.023735069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023738944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.023739431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.023746958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.023747431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023753708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.023754194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023760681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.023761153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02376775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.023768222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023776792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.570000000002881e-06, 'source_diff': 8.570000000002881e-06}, {'time': 0.023777278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023784389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.023784861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023793389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.023793861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023800917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.056000000001811e-06, 'source_diff': 7.056000000001811e-06}, {'time': 0.023801403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023808611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.023809083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023816722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.638999999996787e-06, 'source_diff': 7.638999999996787e-06}, {'time': 0.023817194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023821292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.023821778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023828986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.023829472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023839611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.023840083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023847514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.023847986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023856958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.023857444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:00.006" endtime="20201110 08:33:00.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.002" endtime="20201110 08:33:00.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:00.036" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:00.013" endtime="20201110 08:33:00.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.040" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:00.039" endtime="20201110 08:33:00.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.044" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7199999999789077e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 6.6669999999983964e-06, 4.720000000013602e-07, 5.846999999999797e-06, 4.870000000004038e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 4.111000000001086e-06, 4.7300000000083386e-07, 8.680000000000493e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 8.458999999998856e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 4.082999999998477e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.860000000009301e-07, 7.125000000000187e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 8.8340000000027e-06, 4.7199999999789077e-07, 8.832999999999758e-06, 4.720000000013602e-07, 5.444999999999756e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.7300000000083386e-07, 9.819000000001188e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.7300000000083386e-07, 9.415999999998204e-06, 4.7300000000083386e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 7.013000000000158e-06, 4.7300000000083386e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 4.846999999998797e-06, 4.720000000013602e-07, 6.999999999996592e-06, 4.720000000013602e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.860000000009301e-07, 3.875000000000406e-06, 4.869999999969343e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 6.276999999998978e-06, 4.860000000009301e-07, 6.486999999999465e-06, 4.720000000013602e-07, 6.597000000000547e-06, 4.7199999999789077e-07, 8.570000000002881e-06, 4.859999999974607e-07, 7.111000000000617e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 7.056000000001811e-06, 4.859999999974607e-07, 7.208000000001602e-06, 4.720000000013602e-07, 7.638999999996787e-06, 4.720000000013602e-07, 4.09800000000099e-06, 4.859999999974607e-07, 7.208000000001602e-06, 4.860000000009301e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 7.430999999998716e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.859999999974607e-07], 'time': [0.023477278, 0.02347775, 0.023488236, 0.023488708, 0.023495375, 0.023495847, 0.023501694, 0.023502181, 0.02351075, 0.023511222, 0.023515333, 0.023515806, 0.023524486, 0.023524958, 0.023532472, 0.023532958, 0.023541417, 0.023541889, 0.023549528, 0.02355, 0.023555889, 0.023556361, 0.023560444, 0.023560917, 0.023566167, 0.023566639, 0.023572917, 0.023573403, 0.023580528, 0.023581, 0.023588639, 0.023589111, 0.023593611, 0.023594083, 0.023602917, 0.023603389, 0.023612222, 0.023612694, 0.023618139, 0.023618625, 0.023628958, 0.023629431, 0.02363925, 0.023639722, 0.023647569, 0.023648042, 0.023657458, 0.023657931, 0.023665556, 0.023666028, 0.023674181, 0.023674667, 0.023684583, 0.023685056, 0.023692069, 0.023692542, 0.023700069, 0.023700542, 0.023705389, 0.023705861, 0.023712861, 0.023713333, 0.023720653, 0.023721125, 0.023730014, 0.023730486, 0.023734583, 0.023735069, 0.023738944, 0.023739431, 0.023746958, 0.023747431, 0.023753708, 0.023754194, 0.023760681, 0.023761153, 0.02376775, 0.023768222, 0.023776792, 0.023777278, 0.023784389, 0.023784861, 0.023793389, 0.023793861, 0.023800917, 0.023801403, 0.023808611, 0.023809083, 0.023816722, 0.023817194, 0.023821292, 0.023821778, 0.023828986, 0.023829472, 0.023839611, 0.023840083, 0.023847514, 0.023847986, 0.023856958, 0.023857444], 'diff': [0, 4.7199999999789077e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 6.6669999999983964e-06, 4.720000000013602e-07, 5.846999999999797e-06, 4.870000000004038e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 4.111000000001086e-06, 4.7300000000083386e-07, 8.680000000000493e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 8.458999999998856e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 4.082999999998477e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.860000000009301e-07, 7.125000000000187e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 8.8340000000027e-06, 4.7199999999789077e-07, 8.832999999999758e-06, 4.720000000013602e-07, 5.444999999999756e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.7300000000083386e-07, 9.819000000001188e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.7300000000083386e-07, 9.415999999998204e-06, 4.7300000000083386e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 7.013000000000158e-06, 4.7300000000083386e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 4.846999999998797e-06, 4.720000000013602e-07, 6.999999999996592e-06, 4.720000000013602e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.860000000009301e-07, 3.875000000000406e-06, 4.869999999969343e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 6.276999999998978e-06, 4.860000000009301e-07, 6.486999999999465e-06, 4.720000000013602e-07, 6.597000000000547e-06, 4.7199999999789077e-07, 8.570000000002881e-06, 4.859999999974607e-07, 7.111000000000617e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 7.056000000001811e-06, 4.859999999974607e-07, 7.208000000001602e-06, 4.720000000013602e-07, 7.638999999996787e-06, 4.720000000013602e-07, 4.09800000000099e-06, 4.859999999974607e-07, 7.208000000001602e-06, 4.860000000009301e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 7.430999999998716e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.859999999974607e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:00.041" endtime="20201110 08:33:00.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.037" endtime="20201110 08:33:00.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:00.049" level="INFO">${RESULT} = [{'time': 0.02347775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023488708, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:33:00.046" endtime="20201110 08:33:00.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:00.064" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:00.050" endtime="20201110 08:33:00.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.068" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:00.067" endtime="20201110 08:33:00.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.071" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201110 08:33:00.069" endtime="20201110 08:33:00.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.065" endtime="20201110 08:33:00.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.074" endtime="20201110 08:33:00.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:00.077" endtime="20201110 08:33:00.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.076" endtime="20201110 08:33:00.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.072" endtime="20201110 08:33:00.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.638" endtime="20201110 08:33:00.098"></status>
</kw>
<msg timestamp="20201110 08:33:00.098" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.106" endtime="20201110 08:33:00.122"></status>
</kw>
<msg timestamp="20201110 08:33:00.122" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.105" endtime="20201110 08:33:00.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.124" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.123" endtime="20201110 08:33:00.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.125" endtime="20201110 08:33:00.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.102" endtime="20201110 08:33:00.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.100" endtime="20201110 08:33:00.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.135" endtime="20201110 08:33:00.416"></status>
</kw>
<msg timestamp="20201110 08:33:00.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019954847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019955319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.133" endtime="20201110 08:33:00.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019954847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019955319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.421" endtime="20201110 08:33:00.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.442" endtime="20201110 08:33:00.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.130" endtime="20201110 08:33:00.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.129" endtime="20201110 08:33:00.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.449" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:00.448" endtime="20201110 08:33:00.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.454" level="INFO">VALUE: [{'time': 0.019954847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019955319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019961708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.019962181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019969222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.019969694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019980111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.019980583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019986875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.019987347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019993736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.019994208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019998417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.019998889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020006833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944000000002782e-06, 'source_diff': 7.944000000002782e-06}, {'time': 0.020007306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020017542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.020018014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020026486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.020026958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020033972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.020034444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020043111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.020043597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020049556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.020050042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020060375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.020060847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020066014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.020066486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020070972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.020071458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020076181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722999999998145e-06, 'source_diff': 4.722999999998145e-06}, {'time': 0.020076653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020081694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.020082167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020087625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.020088097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020093944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.020094431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020101125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.020101597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020111528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.020112, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020116208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.020116681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020123306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.020123778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020133458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680000000001493e-06, 'source_diff': 9.680000000001493e-06}, {'time': 0.020133944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020142431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486999999997996e-06, 'source_diff': 8.486999999997996e-06}, {'time': 0.020142903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020151764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.020152236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020158236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.020158708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020162889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.020163361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0201735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.020173972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020183889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.020184375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020192153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.020192625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020198292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.020198764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020203681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.020204153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020208958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.020209431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020217167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.020217639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020227347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.020227833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020232542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7089999999985754e-06, 'source_diff': 4.7089999999985754e-06}, {'time': 0.020233028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020242069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.020242542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020252417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.875000000002937e-06, 'source_diff': 9.875000000002937e-06}, {'time': 0.020252889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020262181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.020262653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020270389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.020270875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020279431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.020279917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02028525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.020285722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020292931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.209000000001076e-06, 'source_diff': 7.209000000001076e-06}, {'time': 0.020293403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020303556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.020304028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020310472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.020310944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020319083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.020319556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020323833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277000000000447e-06, 'source_diff': 4.277000000000447e-06}, {'time': 0.020324319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020334333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.020334806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:00.450" endtime="20201110 08:33:00.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.446" endtime="20201110 08:33:00.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:00.481" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:00.457" endtime="20201110 08:33:00.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.485" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:00.484" endtime="20201110 08:33:00.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.489" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7199999999789077e-07, 6.389000000002476e-06, 4.729999999973644e-07, 7.040999999999298e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 7.944000000002782e-06, 4.729999999973644e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.860000000009301e-07, 5.9589999999998255e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 4.485999999997992e-06, 4.860000000009301e-07, 4.722999999998145e-06, 4.720000000013602e-07, 5.041000000000767e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.7199999999789077e-07, 5.846999999999797e-06, 4.870000000004038e-07, 6.694000000001532e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 6.624999999999687e-06, 4.7199999999789077e-07, 9.680000000001493e-06, 4.860000000009301e-07, 8.486999999997996e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999789077e-07, 9.917000000001647e-06, 4.860000000009301e-07, 7.777999999999952e-06, 4.7199999999789077e-07, 5.667000000000866e-06, 4.720000000013602e-07, 4.917000000000116e-06, 4.7199999999789077e-07, 4.805000000000087e-06, 4.7300000000083386e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 9.708000000000633e-06, 4.860000000009301e-07, 4.7089999999985754e-06, 4.860000000009301e-07, 9.041000000001298e-06, 4.729999999973644e-07, 9.875000000002937e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.860000000009301e-07, 8.555999999999842e-06, 4.860000000009301e-07, 5.332999999999727e-06, 4.7199999999789077e-07, 7.209000000001076e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.7199999999789077e-07, 6.444000000001282e-06, 4.720000000013602e-07, 8.139000000000757e-06, 4.729999999973644e-07, 4.277000000000447e-06, 4.860000000009301e-07, 1.0013999999999162e-05, 4.7300000000083386e-07], 'time': [0.019954847, 0.019955319, 0.019961708, 0.019962181, 0.019969222, 0.019969694, 0.019980111, 0.019980583, 0.019986875, 0.019987347, 0.019993736, 0.019994208, 0.019998417, 0.019998889, 0.020006833, 0.020007306, 0.020017542, 0.020018014, 0.020026486, 0.020026958, 0.020033972, 0.020034444, 0.020043111, 0.020043597, 0.020049556, 0.020050042, 0.020060375, 0.020060847, 0.020066014, 0.020066486, 0.020070972, 0.020071458, 0.020076181, 0.020076653, 0.020081694, 0.020082167, 0.020087625, 0.020088097, 0.020093944, 0.020094431, 0.020101125, 0.020101597, 0.020111528, 0.020112, 0.020116208, 0.020116681, 0.020123306, 0.020123778, 0.020133458, 0.020133944, 0.020142431, 0.020142903, 0.020151764, 0.020152236, 0.020158236, 0.020158708, 0.020162889, 0.020163361, 0.0201735, 0.020173972, 0.020183889, 0.020184375, 0.020192153, 0.020192625, 0.020198292, 0.020198764, 0.020203681, 0.020204153, 0.020208958, 0.020209431, 0.020217167, 0.020217639, 0.020227347, 0.020227833, 0.020232542, 0.020233028, 0.020242069, 0.020242542, 0.020252417, 0.020252889, 0.020262181, 0.020262653, 0.020270389, 0.020270875, 0.020279431, 0.020279917, 0.02028525, 0.020285722, 0.020292931, 0.020293403, 0.020303556, 0.020304028, 0.020310472, 0.020310944, 0.020319083, 0.020319556, 0.020323833, 0.020324319, 0.020334333, 0.020334806], 'diff': [0, 4.7199999999789077e-07, 6.389000000002476e-06, 4.729999999973644e-07, 7.040999999999298e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 7.944000000002782e-06, 4.729999999973644e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.860000000009301e-07, 5.9589999999998255e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 4.485999999997992e-06, 4.860000000009301e-07, 4.722999999998145e-06, 4.720000000013602e-07, 5.041000000000767e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.7199999999789077e-07, 5.846999999999797e-06, 4.870000000004038e-07, 6.694000000001532e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 6.624999999999687e-06, 4.7199999999789077e-07, 9.680000000001493e-06, 4.860000000009301e-07, 8.486999999997996e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999789077e-07, 9.917000000001647e-06, 4.860000000009301e-07, 7.777999999999952e-06, 4.7199999999789077e-07, 5.667000000000866e-06, 4.720000000013602e-07, 4.917000000000116e-06, 4.7199999999789077e-07, 4.805000000000087e-06, 4.7300000000083386e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 9.708000000000633e-06, 4.860000000009301e-07, 4.7089999999985754e-06, 4.860000000009301e-07, 9.041000000001298e-06, 4.729999999973644e-07, 9.875000000002937e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.860000000009301e-07, 8.555999999999842e-06, 4.860000000009301e-07, 5.332999999999727e-06, 4.7199999999789077e-07, 7.209000000001076e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.7199999999789077e-07, 6.444000000001282e-06, 4.720000000013602e-07, 8.139000000000757e-06, 4.729999999973644e-07, 4.277000000000447e-06, 4.860000000009301e-07, 1.0013999999999162e-05, 4.7300000000083386e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:00.486" endtime="20201110 08:33:00.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.482" endtime="20201110 08:33:00.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:00.498" level="INFO">${RESULT} = [{'time': 0.019955319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019962181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:00.491" endtime="20201110 08:33:00.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:00.513" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:00.499" endtime="20201110 08:33:00.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.519" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:00.516" endtime="20201110 08:33:00.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.522" level="INFO">VALUE: [4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:33:00.520" endtime="20201110 08:33:00.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.514" endtime="20201110 08:33:00.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.526" endtime="20201110 08:33:00.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:00.530" endtime="20201110 08:33:00.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.529" endtime="20201110 08:33:00.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.524" endtime="20201110 08:33:00.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.099" endtime="20201110 08:33:00.551"></status>
</kw>
<msg timestamp="20201110 08:33:00.552" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.559" endtime="20201110 08:33:00.573"></status>
</kw>
<msg timestamp="20201110 08:33:00.573" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.557" endtime="20201110 08:33:00.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.576" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.574" endtime="20201110 08:33:00.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.577" endtime="20201110 08:33:00.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.555" endtime="20201110 08:33:00.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.553" endtime="20201110 08:33:00.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.587" endtime="20201110 08:33:00.887"></status>
</kw>
<msg timestamp="20201110 08:33:00.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018873694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018874167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.585" endtime="20201110 08:33:00.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018873694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018874167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.891" endtime="20201110 08:33:00.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.900" endtime="20201110 08:33:00.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.583" endtime="20201110 08:33:00.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.581" endtime="20201110 08:33:00.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.906" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:00.905" endtime="20201110 08:33:00.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.911" level="INFO">VALUE: [{'time': 0.018873694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018874167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018878056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018878528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018888972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000001813e-05, 'source_diff': 1.0444000000001813e-05}, {'time': 0.018889444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018895014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.57000000000335e-06, 'source_diff': 5.57000000000335e-06}, {'time': 0.018895486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018904167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.018904639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018912167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.018912639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018919347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.018919819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018929333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.018929806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018939833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.018940306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018949792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.018950278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018955014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.018955486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018960611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.018961083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018968306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2230000000006456e-06, 'source_diff': 7.2230000000006456e-06}, {'time': 0.018968778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018973708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.018974181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018982958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777000000001478e-06, 'source_diff': 8.777000000001478e-06}, {'time': 0.018983444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018989306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86200000000231e-06, 'source_diff': 5.86200000000231e-06}, {'time': 0.018989778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018998667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.018999139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019008028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.0190085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0190125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019012972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019021125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019021597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019030069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.019030542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019035375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.019035847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019040569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.019041042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019045889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.019046361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019052625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.019053111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019059597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019060069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019065667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.59800000000249e-06, 'source_diff': 5.59800000000249e-06}, {'time': 0.019066139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01907, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.019070472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019079667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.019080139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019084653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.019085139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019095083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.943999999997843e-06, 'source_diff': 9.943999999997843e-06}, {'time': 0.019095556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019104833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277000000001978e-06, 'source_diff': 9.277000000001978e-06}, {'time': 0.019105306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.01911575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000001813e-05, 'source_diff': 1.0444000000001813e-05}, {'time': 0.019116222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019125625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.019126097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019136236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.019136708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019141444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.019141917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019146417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.019146903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019154653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.019155125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019159625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.019160111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019164514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.019164986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019170236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.019170708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019177833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.019178306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019187917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.019188389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019194778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.01919525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019199986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.019200458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019207458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019207944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019213806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.019214278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019222444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166000000000423e-06, 'source_diff': 8.166000000000423e-06}, {'time': 0.019222917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.01923025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333000000001727e-06, 'source_diff': 7.333000000001727e-06}, {'time': 0.019230722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019236569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.019237056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:00.907" endtime="20201110 08:33:00.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.903" endtime="20201110 08:33:00.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:00.938" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:00.914" endtime="20201110 08:33:00.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.942" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:00.941" endtime="20201110 08:33:00.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.946" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.7300000000083386e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 5.57000000000335e-06, 4.7199999999789077e-07, 8.680999999999967e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 6.708000000001102e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 9.485999999999523e-06, 4.860000000009301e-07, 4.735999999998242e-06, 4.720000000013602e-07, 5.1249999999981866e-06, 4.720000000013602e-07, 7.2230000000006456e-06, 4.7199999999789077e-07, 4.930000000000212e-06, 4.7300000000083386e-07, 8.777000000001478e-06, 4.859999999974607e-07, 5.86200000000231e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 4.832999999999227e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 4.846999999998797e-06, 4.720000000013602e-07, 6.2639999999988816e-06, 4.860000000009301e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 5.59800000000249e-06, 4.7199999999789077e-07, 3.861000000000836e-06, 4.720000000013602e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.860000000009301e-07, 9.943999999997843e-06, 4.7300000000083386e-07, 9.277000000001978e-06, 4.729999999973644e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 9.403000000001577e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999789077e-07, 4.736000000001711e-06, 4.7300000000083386e-07, 4.4999999999975615e-06, 4.860000000009301e-07, 7.750000000000812e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.7199999999789077e-07, 5.250000000001781e-06, 4.720000000013602e-07, 7.124999999996717e-06, 4.7300000000083386e-07, 9.610999999999648e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.860000000009301e-07, 5.86199999999884e-06, 4.720000000013602e-07, 8.166000000000423e-06, 4.729999999973644e-07, 7.333000000001727e-06, 4.7199999999789077e-07, 5.846999999999797e-06, 4.870000000004038e-07], 'time': [0.018873694, 0.018874167, 0.018878056, 0.018878528, 0.018888972, 0.018889444, 0.018895014, 0.018895486, 0.018904167, 0.018904639, 0.018912167, 0.018912639, 0.018919347, 0.018919819, 0.018929333, 0.018929806, 0.018939833, 0.018940306, 0.018949792, 0.018950278, 0.018955014, 0.018955486, 0.018960611, 0.018961083, 0.018968306, 0.018968778, 0.018973708, 0.018974181, 0.018982958, 0.018983444, 0.018989306, 0.018989778, 0.018998667, 0.018999139, 0.019008028, 0.0190085, 0.0190125, 0.019012972, 0.019021125, 0.019021597, 0.019030069, 0.019030542, 0.019035375, 0.019035847, 0.019040569, 0.019041042, 0.019045889, 0.019046361, 0.019052625, 0.019053111, 0.019059597, 0.019060069, 0.019065667, 0.019066139, 0.01907, 0.019070472, 0.019079667, 0.019080139, 0.019084653, 0.019085139, 0.019095083, 0.019095556, 0.019104833, 0.019105306, 0.01911575, 0.019116222, 0.019125625, 0.019126097, 0.019136236, 0.019136708, 0.019141444, 0.019141917, 0.019146417, 0.019146903, 0.019154653, 0.019155125, 0.019159625, 0.019160111, 0.019164514, 0.019164986, 0.019170236, 0.019170708, 0.019177833, 0.019178306, 0.019187917, 0.019188389, 0.019194778, 0.01919525, 0.019199986, 0.019200458, 0.019207458, 0.019207944, 0.019213806, 0.019214278, 0.019222444, 0.019222917, 0.01923025, 0.019230722, 0.019236569, 0.019237056], 'diff': [0, 4.7300000000083386e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 5.57000000000335e-06, 4.7199999999789077e-07, 8.680999999999967e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 6.708000000001102e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 9.485999999999523e-06, 4.860000000009301e-07, 4.735999999998242e-06, 4.720000000013602e-07, 5.1249999999981866e-06, 4.720000000013602e-07, 7.2230000000006456e-06, 4.7199999999789077e-07, 4.930000000000212e-06, 4.7300000000083386e-07, 8.777000000001478e-06, 4.859999999974607e-07, 5.86200000000231e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 4.832999999999227e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 4.846999999998797e-06, 4.720000000013602e-07, 6.2639999999988816e-06, 4.860000000009301e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 5.59800000000249e-06, 4.7199999999789077e-07, 3.861000000000836e-06, 4.720000000013602e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.860000000009301e-07, 9.943999999997843e-06, 4.7300000000083386e-07, 9.277000000001978e-06, 4.729999999973644e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 9.403000000001577e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999789077e-07, 4.736000000001711e-06, 4.7300000000083386e-07, 4.4999999999975615e-06, 4.860000000009301e-07, 7.750000000000812e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.7199999999789077e-07, 5.250000000001781e-06, 4.720000000013602e-07, 7.124999999996717e-06, 4.7300000000083386e-07, 9.610999999999648e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.860000000009301e-07, 5.86199999999884e-06, 4.720000000013602e-07, 8.166000000000423e-06, 4.729999999973644e-07, 7.333000000001727e-06, 4.7199999999789077e-07, 5.846999999999797e-06, 4.870000000004038e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:00.943" endtime="20201110 08:33:00.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.939" endtime="20201110 08:33:00.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:00.951" level="INFO">${RESULT} = [{'time': 0.018874167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018878528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:00.948" endtime="20201110 08:33:00.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:00.965" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:00.952" endtime="20201110 08:33:00.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.969" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:00.968" endtime="20201110 08:33:00.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.971" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.870000000004038e-07]</msg>
<status status="PASS" starttime="20201110 08:33:00.970" endtime="20201110 08:33:00.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.966" endtime="20201110 08:33:00.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.975" endtime="20201110 08:33:00.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:00.978" endtime="20201110 08:33:00.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.976" endtime="20201110 08:33:00.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.973" endtime="20201110 08:33:00.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.552" endtime="20201110 08:33:00.999"></status>
</kw>
<msg timestamp="20201110 08:33:00.999" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.007" endtime="20201110 08:33:01.021"></status>
</kw>
<msg timestamp="20201110 08:33:01.021" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.005" endtime="20201110 08:33:01.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.024" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.022" endtime="20201110 08:33:01.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.025" endtime="20201110 08:33:01.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.003" endtime="20201110 08:33:01.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.001" endtime="20201110 08:33:01.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.034" endtime="20201110 08:33:01.324"></status>
</kw>
<msg timestamp="20201110 08:33:01.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018629139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018629611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.032" endtime="20201110 08:33:01.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018629139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018629611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.329" endtime="20201110 08:33:01.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.338" endtime="20201110 08:33:01.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.030" endtime="20201110 08:33:01.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.028" endtime="20201110 08:33:01.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.344" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:01.343" endtime="20201110 08:33:01.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.350" level="INFO">VALUE: [{'time': 0.018629139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018629611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018634417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.018634889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0186415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.018641972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018648153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018648625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018655431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.018655903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018660528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.018661, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018669444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.018669931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018675819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.887999999999033e-06, 'source_diff': 5.887999999999033e-06}, {'time': 0.018676292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018683583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.018684069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018691597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.018692069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0187025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0431000000001717e-05, 'source_diff': 1.0431000000001717e-05}, {'time': 0.018702986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018707514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018707986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018715611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.018716083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018720694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018721181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018728514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333000000001727e-06, 'source_diff': 7.333000000001727e-06}, {'time': 0.018728986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018732861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018733333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018739208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.018739681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018745028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.0187455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018751986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.018752472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018759597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018760069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018768833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763999999997912e-06, 'source_diff': 8.763999999997912e-06}, {'time': 0.018769306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018779014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.0187795, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018783819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.018784292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018793583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.290999999998079e-06, 'source_diff': 9.290999999998079e-06}, {'time': 0.018794056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018802, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.943999999999313e-06, 'source_diff': 7.943999999999313e-06}, {'time': 0.018802472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018811569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018812042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018816861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.018817333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018822792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.459000000002795e-06, 'source_diff': 5.459000000002795e-06}, {'time': 0.018823264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018828403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018828875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018833153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018833625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018840153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.018840625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018850653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.018851125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018856778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018857264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.0188625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.018862986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018871458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.018871931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018880944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.012999999998689e-06, 'source_diff': 9.012999999998689e-06}, {'time': 0.018881417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018887139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018887611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018893792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018894264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018900139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.018900611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018910833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.018911319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018920611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.018921083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018929375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291999999996552e-06, 'source_diff': 8.291999999996552e-06}, {'time': 0.018929847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018933736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018934208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018938069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.018938556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018946903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.018947389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018957014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.625000000002687e-06, 'source_diff': 9.625000000002687e-06}, {'time': 0.018957486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018966917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.431000000000717e-06, 'source_diff': 9.431000000000717e-06}, {'time': 0.018967389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018975458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.018975931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018981181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.018981653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018989278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.01898975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:01.346" endtime="20201110 08:33:01.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.341" endtime="20201110 08:33:01.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:01.378" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:01.352" endtime="20201110 08:33:01.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.382" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:01.381" endtime="20201110 08:33:01.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.386" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 4.805999999999561e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.720000000013602e-07, 6.181000000000936e-06, 4.7199999999789077e-07, 6.806000000001561e-06, 4.720000000013602e-07, 4.6249999999976865e-06, 4.720000000013602e-07, 8.443999999999813e-06, 4.870000000004038e-07, 5.887999999999033e-06, 4.7300000000083386e-07, 7.290999999999548e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.860000000009301e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.870000000004038e-07, 7.333000000001727e-06, 4.7199999999789077e-07, 3.875000000000406e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.7300000000083386e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 6.485999999999992e-06, 4.860000000009301e-07, 7.125000000000187e-06, 4.720000000013602e-07, 8.763999999997912e-06, 4.7300000000083386e-07, 9.708000000000633e-06, 4.860000000009301e-07, 4.318999999999157e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.7300000000083386e-07, 7.943999999999313e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7300000000083386e-07, 4.818999999999657e-06, 4.7199999999789077e-07, 5.459000000002795e-06, 4.7199999999789077e-07, 5.139000000001226e-06, 4.7199999999789077e-07, 4.277999999999921e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 5.653000000001296e-06, 4.859999999974607e-07, 5.236000000002211e-06, 4.860000000009301e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 9.012999999998689e-06, 4.7300000000083386e-07, 5.721999999999672e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 1.0221999999997233e-05, 4.860000000009301e-07, 9.292000000001022e-06, 4.720000000013602e-07, 8.291999999996552e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.720000000013602e-07, 3.8609999999973665e-06, 4.870000000004038e-07, 8.347000000002297e-06, 4.859999999974607e-07, 9.625000000002687e-06, 4.7199999999789077e-07, 9.431000000000717e-06, 4.720000000013602e-07, 8.068999999999438e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 7.624999999997217e-06, 4.720000000013602e-07], 'time': [0.018629139, 0.018629611, 0.018634417, 0.018634889, 0.0186415, 0.018641972, 0.018648153, 0.018648625, 0.018655431, 0.018655903, 0.018660528, 0.018661, 0.018669444, 0.018669931, 0.018675819, 0.018676292, 0.018683583, 0.018684069, 0.018691597, 0.018692069, 0.0187025, 0.018702986, 0.018707514, 0.018707986, 0.018715611, 0.018716083, 0.018720694, 0.018721181, 0.018728514, 0.018728986, 0.018732861, 0.018733333, 0.018739208, 0.018739681, 0.018745028, 0.0187455, 0.018751986, 0.018752472, 0.018759597, 0.018760069, 0.018768833, 0.018769306, 0.018779014, 0.0187795, 0.018783819, 0.018784292, 0.018793583, 0.018794056, 0.018802, 0.018802472, 0.018811569, 0.018812042, 0.018816861, 0.018817333, 0.018822792, 0.018823264, 0.018828403, 0.018828875, 0.018833153, 0.018833625, 0.018840153, 0.018840625, 0.018850653, 0.018851125, 0.018856778, 0.018857264, 0.0188625, 0.018862986, 0.018871458, 0.018871931, 0.018880944, 0.018881417, 0.018887139, 0.018887611, 0.018893792, 0.018894264, 0.018900139, 0.018900611, 0.018910833, 0.018911319, 0.018920611, 0.018921083, 0.018929375, 0.018929847, 0.018933736, 0.018934208, 0.018938069, 0.018938556, 0.018946903, 0.018947389, 0.018957014, 0.018957486, 0.018966917, 0.018967389, 0.018975458, 0.018975931, 0.018981181, 0.018981653, 0.018989278, 0.01898975], 'diff': [0, 4.720000000013602e-07, 4.805999999999561e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.720000000013602e-07, 6.181000000000936e-06, 4.7199999999789077e-07, 6.806000000001561e-06, 4.720000000013602e-07, 4.6249999999976865e-06, 4.720000000013602e-07, 8.443999999999813e-06, 4.870000000004038e-07, 5.887999999999033e-06, 4.7300000000083386e-07, 7.290999999999548e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.860000000009301e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.870000000004038e-07, 7.333000000001727e-06, 4.7199999999789077e-07, 3.875000000000406e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.7300000000083386e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 6.485999999999992e-06, 4.860000000009301e-07, 7.125000000000187e-06, 4.720000000013602e-07, 8.763999999997912e-06, 4.7300000000083386e-07, 9.708000000000633e-06, 4.860000000009301e-07, 4.318999999999157e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.7300000000083386e-07, 7.943999999999313e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7300000000083386e-07, 4.818999999999657e-06, 4.7199999999789077e-07, 5.459000000002795e-06, 4.7199999999789077e-07, 5.139000000001226e-06, 4.7199999999789077e-07, 4.277999999999921e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 5.653000000001296e-06, 4.859999999974607e-07, 5.236000000002211e-06, 4.860000000009301e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 9.012999999998689e-06, 4.7300000000083386e-07, 5.721999999999672e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 1.0221999999997233e-05, 4.860000000009301e-07, 9.292000000001022e-06, 4.720000000013602e-07, 8.291999999996552e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.720000000013602e-07, 3.8609999999973665e-06, 4.870000000004038e-07, 8.347000000002297e-06, 4.859999999974607e-07, 9.625000000002687e-06, 4.7199999999789077e-07, 9.431000000000717e-06, 4.720000000013602e-07, 8.068999999999438e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 7.624999999997217e-06, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:01.383" endtime="20201110 08:33:01.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.379" endtime="20201110 08:33:01.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:01.392" level="INFO">${RESULT} = [{'time': 0.018629611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018634889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:01.389" endtime="20201110 08:33:01.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:01.406" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:01.393" endtime="20201110 08:33:01.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.410" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:01.409" endtime="20201110 08:33:01.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.413" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:33:01.411" endtime="20201110 08:33:01.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.407" endtime="20201110 08:33:01.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.416" endtime="20201110 08:33:01.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:01.420" endtime="20201110 08:33:01.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.418" endtime="20201110 08:33:01.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.414" endtime="20201110 08:33:01.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.999" endtime="20201110 08:33:01.444"></status>
</kw>
<msg timestamp="20201110 08:33:01.445" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.457" endtime="20201110 08:33:01.472"></status>
</kw>
<msg timestamp="20201110 08:33:01.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.455" endtime="20201110 08:33:01.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.475" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.474" endtime="20201110 08:33:01.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.476" endtime="20201110 08:33:01.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.451" endtime="20201110 08:33:01.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.449" endtime="20201110 08:33:01.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.486" endtime="20201110 08:33:01.781"></status>
</kw>
<msg timestamp="20201110 08:33:01.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029086764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029087236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.485" endtime="20201110 08:33:01.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029086764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029087236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.785" endtime="20201110 08:33:01.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.794" endtime="20201110 08:33:01.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.482" endtime="20201110 08:33:01.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.480" endtime="20201110 08:33:01.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.801" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:01.799" endtime="20201110 08:33:01.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.806" level="INFO">VALUE: [{'time': 0.029086764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029087236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.029096722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.029097194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029105236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.029105708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029110861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.029111333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029116264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.029116736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029122972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.029123444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.029129528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.02913, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029139611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.029140083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029149806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722999999999676e-06, 'source_diff': 9.722999999999676e-06}, {'time': 0.029150278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.029155472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029161458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.029161931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.029169514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.583000000001977e-06, 'source_diff': 7.583000000001977e-06}, {'time': 0.029169986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.029176722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.029177208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.029183167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.029183653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.029187889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.029188361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.029193097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.029193569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.029199389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.029199875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.029208639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.029209125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.029218319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.029218792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.029227986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.029228458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.029233597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.029234083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.029239944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.029240417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.029245444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.029245931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.029251903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.029252375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029260333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.029260806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.029267181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.029267653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029277264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.029277736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.029282361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.029282833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029293278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444999999997817e-05, 'source_diff': 1.0444999999997817e-05}, {'time': 0.02929375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029303375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.029303847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029310111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.029310597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.029316972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.029317458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.029326542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083999999999481e-06, 'source_diff': 9.083999999999481e-06}, {'time': 0.029327014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.029331014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.029331486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029337514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.029337986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029344361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.029344833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029348681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.029349153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.029358264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.029358736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029367181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.444999999999286e-06, 'source_diff': 8.444999999999286e-06}, {'time': 0.029367667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.029372389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.029372861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029381736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.029382222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.029391514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.029391986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.029400042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.056000000002811e-06, 'source_diff': 8.056000000002811e-06}, {'time': 0.029400514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.029404708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.194000000002501e-06, 'source_diff': 4.194000000002501e-06}, {'time': 0.029405194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.029413236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.029413722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.029421972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.029422458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.029432639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000001467e-05, 'source_diff': 1.0181000000001467e-05}, {'time': 0.029433111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029439889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.029440361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.029446583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.221999999996702e-06, 'source_diff': 6.221999999996702e-06}, {'time': 0.029447056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.029453944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888000000000033e-06, 'source_diff': 6.888000000000033e-06}, {'time': 0.029454417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:01.802" endtime="20201110 08:33:01.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.797" endtime="20201110 08:33:01.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:01.834" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:01.808" endtime="20201110 08:33:01.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.838" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:01.837" endtime="20201110 08:33:01.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.842" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7199999999789077e-07, 9.485999999999523e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 5.152999999997326e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 6.235999999999742e-06, 4.7199999999789077e-07, 6.0839999999999506e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.720000000013602e-07, 9.722999999999676e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.729999999973644e-07, 7.583000000001977e-06, 4.7199999999789077e-07, 6.736000000000242e-06, 4.860000000009301e-07, 5.9589999999998255e-06, 4.860000000009301e-07, 4.236000000001211e-06, 4.7199999999789077e-07, 4.736000000001711e-06, 4.7199999999789077e-07, 5.820000000000131e-06, 4.860000000009301e-07, 8.764000000001382e-06, 4.859999999974607e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 5.139000000001226e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 5.026999999997728e-06, 4.870000000004038e-07, 5.971999999999922e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 6.374999999999437e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.7199999999789077e-07, 4.625000000001156e-06, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 6.2639999999988816e-06, 4.860000000009301e-07, 6.374999999999437e-06, 4.860000000009301e-07, 9.083999999999481e-06, 4.7199999999789077e-07, 4.000000000000531e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.720000000013602e-07, 3.84800000000074e-06, 4.7199999999789077e-07, 9.110999999999148e-06, 4.720000000013602e-07, 8.444999999999286e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.860000000009301e-07, 9.292000000001022e-06, 4.7199999999789077e-07, 8.056000000002811e-06, 4.7199999999789077e-07, 4.194000000002501e-06, 4.859999999974607e-07, 8.041999999999772e-06, 4.860000000009301e-07, 8.250000000001312e-06, 4.859999999974607e-07, 1.0181000000001467e-05, 4.720000000013602e-07, 6.7779999999989515e-06, 4.720000000013602e-07, 6.221999999996702e-06, 4.7300000000083386e-07, 6.888000000000033e-06, 4.7300000000083386e-07], 'time': [0.029086764, 0.029087236, 0.029096722, 0.029097194, 0.029105236, 0.029105708, 0.029110861, 0.029111333, 0.029116264, 0.029116736, 0.029122972, 0.029123444, 0.029129528, 0.02913, 0.029139611, 0.029140083, 0.029149806, 0.029150278, 0.029155, 0.029155472, 0.029161458, 0.029161931, 0.029169514, 0.029169986, 0.029176722, 0.029177208, 0.029183167, 0.029183653, 0.029187889, 0.029188361, 0.029193097, 0.029193569, 0.029199389, 0.029199875, 0.029208639, 0.029209125, 0.029218319, 0.029218792, 0.029227986, 0.029228458, 0.029233597, 0.029234083, 0.029239944, 0.029240417, 0.029245444, 0.029245931, 0.029251903, 0.029252375, 0.029260333, 0.029260806, 0.029267181, 0.029267653, 0.029277264, 0.029277736, 0.029282361, 0.029282833, 0.029293278, 0.02929375, 0.029303375, 0.029303847, 0.029310111, 0.029310597, 0.029316972, 0.029317458, 0.029326542, 0.029327014, 0.029331014, 0.029331486, 0.029337514, 0.029337986, 0.029344361, 0.029344833, 0.029348681, 0.029349153, 0.029358264, 0.029358736, 0.029367181, 0.029367667, 0.029372389, 0.029372861, 0.029381736, 0.029382222, 0.029391514, 0.029391986, 0.029400042, 0.029400514, 0.029404708, 0.029405194, 0.029413236, 0.029413722, 0.029421972, 0.029422458, 0.029432639, 0.029433111, 0.029439889, 0.029440361, 0.029446583, 0.029447056, 0.029453944, 0.029454417], 'diff': [0, 4.7199999999789077e-07, 9.485999999999523e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 5.152999999997326e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 6.235999999999742e-06, 4.7199999999789077e-07, 6.0839999999999506e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.720000000013602e-07, 9.722999999999676e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.729999999973644e-07, 7.583000000001977e-06, 4.7199999999789077e-07, 6.736000000000242e-06, 4.860000000009301e-07, 5.9589999999998255e-06, 4.860000000009301e-07, 4.236000000001211e-06, 4.7199999999789077e-07, 4.736000000001711e-06, 4.7199999999789077e-07, 5.820000000000131e-06, 4.860000000009301e-07, 8.764000000001382e-06, 4.859999999974607e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 5.139000000001226e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 5.026999999997728e-06, 4.870000000004038e-07, 5.971999999999922e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 6.374999999999437e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.7199999999789077e-07, 4.625000000001156e-06, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 6.2639999999988816e-06, 4.860000000009301e-07, 6.374999999999437e-06, 4.860000000009301e-07, 9.083999999999481e-06, 4.7199999999789077e-07, 4.000000000000531e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.720000000013602e-07, 3.84800000000074e-06, 4.7199999999789077e-07, 9.110999999999148e-06, 4.720000000013602e-07, 8.444999999999286e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.860000000009301e-07, 9.292000000001022e-06, 4.7199999999789077e-07, 8.056000000002811e-06, 4.7199999999789077e-07, 4.194000000002501e-06, 4.859999999974607e-07, 8.041999999999772e-06, 4.860000000009301e-07, 8.250000000001312e-06, 4.859999999974607e-07, 1.0181000000001467e-05, 4.720000000013602e-07, 6.7779999999989515e-06, 4.720000000013602e-07, 6.221999999996702e-06, 4.7300000000083386e-07, 6.888000000000033e-06, 4.7300000000083386e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:01.839" endtime="20201110 08:33:01.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.835" endtime="20201110 08:33:01.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:01.848" level="INFO">${RESULT} = [{'time': 0.029087236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.029097194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:01.844" endtime="20201110 08:33:01.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:01.862" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:01.849" endtime="20201110 08:33:01.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.866" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:01.865" endtime="20201110 08:33:01.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.868" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:33:01.867" endtime="20201110 08:33:01.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.863" endtime="20201110 08:33:01.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.872" endtime="20201110 08:33:01.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:01.875" endtime="20201110 08:33:01.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.873" endtime="20201110 08:33:01.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.870" endtime="20201110 08:33:01.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.446" endtime="20201110 08:33:01.896"></status>
</kw>
<msg timestamp="20201110 08:33:01.896" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.904" endtime="20201110 08:33:01.922"></status>
</kw>
<msg timestamp="20201110 08:33:01.923" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.902" endtime="20201110 08:33:01.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.925" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.924" endtime="20201110 08:33:01.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.926" endtime="20201110 08:33:01.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.900" endtime="20201110 08:33:01.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.898" endtime="20201110 08:33:01.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.935" endtime="20201110 08:33:02.218"></status>
</kw>
<msg timestamp="20201110 08:33:02.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020923417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020923889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.934" endtime="20201110 08:33:02.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020923417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020923889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.222" endtime="20201110 08:33:02.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.231" endtime="20201110 08:33:02.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.931" endtime="20201110 08:33:02.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.929" endtime="20201110 08:33:02.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.238" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:02.237" endtime="20201110 08:33:02.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.243" level="INFO">VALUE: [{'time': 0.020923417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020923889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020932083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.020932556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020940917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.020941389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020950167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.020950639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02095925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.020959722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020965611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.020966083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020976472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.020976944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020983958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.020984431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020990194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.762999999998908e-06, 'source_diff': 5.762999999998908e-06}, {'time': 0.020990667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020999556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.021000028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021007153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.021007625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021015153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.528000000003171e-06, 'source_diff': 7.528000000003171e-06}, {'time': 0.021015625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021021278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.02102175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021031986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.021032458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021042486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.021042958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02105225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.021052736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021058597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.021059069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021065889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.021066361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021070861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.021071347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021075958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.021076431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021082931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.021083403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021093431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.021093903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021098847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.021099319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021107458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.021107931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021113819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.887999999999033e-06, 'source_diff': 5.887999999999033e-06}, {'time': 0.021114292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021119931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.021120417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021128153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.021128625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021136792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.021137264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021142597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.021143069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021149972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.021150458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021157458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.021157944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021164319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.021164806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021170458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.021170931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021175653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.021176125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021181889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.021182361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021190875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.021191347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021199667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}, {'time': 0.021200139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021207583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.443999999998813e-06, 'source_diff': 7.443999999998813e-06}, {'time': 0.021208056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021214236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.021214708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021224528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.021225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021232, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.021232472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021238861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.021239333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021246444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.021246917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021252583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.021253056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021263417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.021263889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021274097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.021274569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021280639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.021281125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021289486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.021289958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021293958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.021294431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.02129925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.021299736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:02.239" endtime="20201110 08:33:02.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.234" endtime="20201110 08:33:02.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:02.271" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:02.246" endtime="20201110 08:33:02.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.275" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:02.274" endtime="20201110 08:33:02.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.279" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 8.777999999997482e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 5.762999999998908e-06, 4.7300000000083386e-07, 8.888999999998037e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 7.528000000003171e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.292000000001022e-06, 4.859999999974607e-07, 5.860999999999367e-06, 4.720000000013602e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 4.610999999998117e-06, 4.7300000000083386e-07, 6.499999999999562e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 4.943999999999782e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.7300000000083386e-07, 5.887999999999033e-06, 4.7300000000083386e-07, 5.639000000001726e-06, 4.859999999974607e-07, 7.736000000001242e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 5.332999999999727e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.860000000009301e-07, 6.374999999999437e-06, 4.870000000004038e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 4.721999999998672e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7199999999789077e-07, 8.319999999999161e-06, 4.720000000013602e-07, 7.443999999998813e-06, 4.7300000000083386e-07, 6.180000000001462e-06, 4.7199999999789077e-07, 9.820000000000662e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 5.665999999997923e-06, 4.7300000000083386e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 6.070000000000381e-06, 4.860000000009301e-07, 8.360999999998397e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.729999999973644e-07, 4.818999999999657e-06, 4.860000000009301e-07], 'time': [0.020923417, 0.020923889, 0.020932083, 0.020932556, 0.020940917, 0.020941389, 0.020950167, 0.020950639, 0.02095925, 0.020959722, 0.020965611, 0.020966083, 0.020976472, 0.020976944, 0.020983958, 0.020984431, 0.020990194, 0.020990667, 0.020999556, 0.021000028, 0.021007153, 0.021007625, 0.021015153, 0.021015625, 0.021021278, 0.02102175, 0.021031986, 0.021032458, 0.021042486, 0.021042958, 0.02105225, 0.021052736, 0.021058597, 0.021059069, 0.021065889, 0.021066361, 0.021070861, 0.021071347, 0.021075958, 0.021076431, 0.021082931, 0.021083403, 0.021093431, 0.021093903, 0.021098847, 0.021099319, 0.021107458, 0.021107931, 0.021113819, 0.021114292, 0.021119931, 0.021120417, 0.021128153, 0.021128625, 0.021136792, 0.021137264, 0.021142597, 0.021143069, 0.021149972, 0.021150458, 0.021157458, 0.021157944, 0.021164319, 0.021164806, 0.021170458, 0.021170931, 0.021175653, 0.021176125, 0.021181889, 0.021182361, 0.021190875, 0.021191347, 0.021199667, 0.021200139, 0.021207583, 0.021208056, 0.021214236, 0.021214708, 0.021224528, 0.021225, 0.021232, 0.021232472, 0.021238861, 0.021239333, 0.021246444, 0.021246917, 0.021252583, 0.021253056, 0.021263417, 0.021263889, 0.021274097, 0.021274569, 0.021280639, 0.021281125, 0.021289486, 0.021289958, 0.021293958, 0.021294431, 0.02129925, 0.021299736], 'diff': [0, 4.720000000013602e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 8.777999999997482e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 5.762999999998908e-06, 4.7300000000083386e-07, 8.888999999998037e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 7.528000000003171e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.292000000001022e-06, 4.859999999974607e-07, 5.860999999999367e-06, 4.720000000013602e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 4.610999999998117e-06, 4.7300000000083386e-07, 6.499999999999562e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 4.943999999999782e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.7300000000083386e-07, 5.887999999999033e-06, 4.7300000000083386e-07, 5.639000000001726e-06, 4.859999999974607e-07, 7.736000000001242e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 5.332999999999727e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.860000000009301e-07, 6.374999999999437e-06, 4.870000000004038e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 4.721999999998672e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7199999999789077e-07, 8.319999999999161e-06, 4.720000000013602e-07, 7.443999999998813e-06, 4.7300000000083386e-07, 6.180000000001462e-06, 4.7199999999789077e-07, 9.820000000000662e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 5.665999999997923e-06, 4.7300000000083386e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 6.070000000000381e-06, 4.860000000009301e-07, 8.360999999998397e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.729999999973644e-07, 4.818999999999657e-06, 4.860000000009301e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:02.276" endtime="20201110 08:33:02.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.272" endtime="20201110 08:33:02.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:02.285" level="INFO">${RESULT} = [{'time': 0.020923889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020932556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:02.282" endtime="20201110 08:33:02.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:02.299" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:02.286" endtime="20201110 08:33:02.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.303" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:02.302" endtime="20201110 08:33:02.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.306" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201110 08:33:02.305" endtime="20201110 08:33:02.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.300" endtime="20201110 08:33:02.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.309" endtime="20201110 08:33:02.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:02.313" endtime="20201110 08:33:02.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.311" endtime="20201110 08:33:02.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.308" endtime="20201110 08:33:02.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.897" endtime="20201110 08:33:02.338"></status>
</kw>
<msg timestamp="20201110 08:33:02.338" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.355" endtime="20201110 08:33:02.373"></status>
</kw>
<msg timestamp="20201110 08:33:02.374" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.352" endtime="20201110 08:33:02.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.380" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.377" endtime="20201110 08:33:02.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.382" endtime="20201110 08:33:02.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.346" endtime="20201110 08:33:02.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.342" endtime="20201110 08:33:02.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.404" endtime="20201110 08:33:02.695"></status>
</kw>
<msg timestamp="20201110 08:33:02.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035015194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035015667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.401" endtime="20201110 08:33:02.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035015194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035015667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.699" endtime="20201110 08:33:02.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.708" endtime="20201110 08:33:02.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.395" endtime="20201110 08:33:02.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.391" endtime="20201110 08:33:02.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.715" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:02.714" endtime="20201110 08:33:02.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.720" level="INFO">VALUE: [{'time': 0.035015194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035015667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035020264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.03502075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.035028083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.035028556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035033375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8189999999961874e-06, 'source_diff': 4.8189999999961874e-06}, {'time': 0.035033847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035041167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.035041639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035051667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.035052153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.035058319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999994953e-06, 'source_diff': 6.165999999994953e-06}, {'time': 0.035058806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.035063333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000004167e-06, 'source_diff': 4.527000000004167e-06}, {'time': 0.035063806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035068625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8189999999961874e-06, 'source_diff': 4.8189999999961874e-06}, {'time': 0.035069097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035075597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.035076069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035083694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.035084181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.035094514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.035094986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035102417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430999999995247e-06, 'source_diff': 7.430999999995247e-06}, {'time': 0.035102889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035107403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.51400000000407e-06, 'source_diff': 4.51400000000407e-06}, {'time': 0.035107889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.035116139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999994373e-06, 'source_diff': 8.249999999994373e-06}, {'time': 0.035116611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035125514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.035125986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035132986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.035133458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035143403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944999999997317e-06, 'source_diff': 9.944999999997317e-06}, {'time': 0.035143875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035152319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.444000000003282e-06, 'source_diff': 8.444000000003282e-06}, {'time': 0.035152806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.035160639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.035161125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.035166875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.035167361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.035174486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.035174958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035181014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055999999997341e-06, 'source_diff': 6.055999999997341e-06}, {'time': 0.0351815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.035189125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000004156e-06, 'source_diff': 7.625000000004156e-06}, {'time': 0.035189611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.035196514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.902999999995607e-06, 'source_diff': 6.902999999995607e-06}, {'time': 0.035196986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035201083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.035201569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.035209194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.035209681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.035214611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.035215083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035220125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.035220597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035227403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.035227875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035232903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.02800000000414e-06, 'source_diff': 5.02800000000414e-06}, {'time': 0.035233389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.035241444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.035241917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035248708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.790999999999048e-06, 'source_diff': 6.790999999999048e-06}, {'time': 0.035249194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.03525475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.55600000000378e-06, 'source_diff': 5.55600000000378e-06}, {'time': 0.035255222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035265264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041999999994833e-05, 'source_diff': 1.0041999999994833e-05}, {'time': 0.035265736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035274806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.035275292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.035282194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.902000000003072e-06, 'source_diff': 6.902000000003072e-06}, {'time': 0.035282667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035292486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.035292958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035300542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.583999999997981e-06, 'source_diff': 7.583999999997981e-06}, {'time': 0.035301014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03530975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.035310222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035320153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930999999997747e-06, 'source_diff': 9.930999999997747e-06}, {'time': 0.035320625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035326903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.035327375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035337194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.035337681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.0353425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8189999999961874e-06, 'source_diff': 4.8189999999961874e-06}, {'time': 0.035342972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035351444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.035351917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035360903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.035361375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035366097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.035366583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.035375139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.035375625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.035385444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.035385917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035392306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999995537e-06, 'source_diff': 6.388999999995537e-06}, {'time': 0.035392778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:02.716" endtime="20201110 08:33:02.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.711" endtime="20201110 08:33:02.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:02.746" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:02.722" endtime="20201110 08:33:02.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.750" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:02.749" endtime="20201110 08:33:02.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.754" level="INFO">VALUE: {'sourcesource_diff': [0, 4.7300000000083386e-07, 4.597000000002016e-06, 4.860000000009301e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 4.8189999999961874e-06, 4.720000000013602e-07, 7.319999999998161e-06, 4.720000000013602e-07, 1.0028000000002202e-05, 4.860000000009301e-07, 6.165999999994953e-06, 4.870000000004038e-07, 4.527000000004167e-06, 4.7300000000083386e-07, 4.8189999999961874e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 7.624999999997217e-06, 4.870000000004038e-07, 1.0333000000001258e-05, 4.720000000013602e-07, 7.430999999995247e-06, 4.720000000013602e-07, 4.51400000000407e-06, 4.860000000009301e-07, 8.249999999994373e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.720000000013602e-07, 9.944999999997317e-06, 4.720000000013602e-07, 8.444000000003282e-06, 4.870000000004038e-07, 7.832999999998758e-06, 4.860000000009301e-07, 5.749999999998812e-06, 4.860000000009301e-07, 7.124999999996717e-06, 4.720000000013602e-07, 6.055999999997341e-06, 4.860000000009301e-07, 7.625000000004156e-06, 4.860000000009301e-07, 6.902999999995607e-06, 4.720000000013602e-07, 4.097000000001516e-06, 4.860000000009301e-07, 7.624999999997217e-06, 4.870000000004038e-07, 4.930000000000212e-06, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 5.02800000000414e-06, 4.859999999939912e-07, 8.054999999999868e-06, 4.7300000000083386e-07, 6.790999999999048e-06, 4.860000000009301e-07, 5.55600000000378e-06, 4.720000000013602e-07, 1.0041999999994833e-05, 4.720000000013602e-07, 9.069999999999911e-06, 4.860000000009301e-07, 6.902000000003072e-06, 4.7299999999389497e-07, 9.819000000001188e-06, 4.720000000013602e-07, 7.583999999997981e-06, 4.720000000013602e-07, 8.736000000002242e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 9.819000000001188e-06, 4.870000000004038e-07, 4.8189999999961874e-06, 4.720000000013602e-07, 8.472000000002422e-06, 4.7299999999389497e-07, 8.986000000002492e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.860000000009301e-07, 8.555999999999842e-06, 4.860000000009301e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 6.388999999995537e-06, 4.720000000013602e-07], 'time': [0.035015194, 0.035015667, 0.035020264, 0.03502075, 0.035028083, 0.035028556, 0.035033375, 0.035033847, 0.035041167, 0.035041639, 0.035051667, 0.035052153, 0.035058319, 0.035058806, 0.035063333, 0.035063806, 0.035068625, 0.035069097, 0.035075597, 0.035076069, 0.035083694, 0.035084181, 0.035094514, 0.035094986, 0.035102417, 0.035102889, 0.035107403, 0.035107889, 0.035116139, 0.035116611, 0.035125514, 0.035125986, 0.035132986, 0.035133458, 0.035143403, 0.035143875, 0.035152319, 0.035152806, 0.035160639, 0.035161125, 0.035166875, 0.035167361, 0.035174486, 0.035174958, 0.035181014, 0.0351815, 0.035189125, 0.035189611, 0.035196514, 0.035196986, 0.035201083, 0.035201569, 0.035209194, 0.035209681, 0.035214611, 0.035215083, 0.035220125, 0.035220597, 0.035227403, 0.035227875, 0.035232903, 0.035233389, 0.035241444, 0.035241917, 0.035248708, 0.035249194, 0.03525475, 0.035255222, 0.035265264, 0.035265736, 0.035274806, 0.035275292, 0.035282194, 0.035282667, 0.035292486, 0.035292958, 0.035300542, 0.035301014, 0.03530975, 0.035310222, 0.035320153, 0.035320625, 0.035326903, 0.035327375, 0.035337194, 0.035337681, 0.0353425, 0.035342972, 0.035351444, 0.035351917, 0.035360903, 0.035361375, 0.035366097, 0.035366583, 0.035375139, 0.035375625, 0.035385444, 0.035385917, 0.035392306, 0.035392778], 'diff': [0, 4.7300000000083386e-07, 4.597000000002016e-06, 4.860000000009301e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 4.8189999999961874e-06, 4.720000000013602e-07, 7.319999999998161e-06, 4.720000000013602e-07, 1.0028000000002202e-05, 4.860000000009301e-07, 6.165999999994953e-06, 4.870000000004038e-07, 4.527000000004167e-06, 4.7300000000083386e-07, 4.8189999999961874e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 7.624999999997217e-06, 4.870000000004038e-07, 1.0333000000001258e-05, 4.720000000013602e-07, 7.430999999995247e-06, 4.720000000013602e-07, 4.51400000000407e-06, 4.860000000009301e-07, 8.249999999994373e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.720000000013602e-07, 9.944999999997317e-06, 4.720000000013602e-07, 8.444000000003282e-06, 4.870000000004038e-07, 7.832999999998758e-06, 4.860000000009301e-07, 5.749999999998812e-06, 4.860000000009301e-07, 7.124999999996717e-06, 4.720000000013602e-07, 6.055999999997341e-06, 4.860000000009301e-07, 7.625000000004156e-06, 4.860000000009301e-07, 6.902999999995607e-06, 4.720000000013602e-07, 4.097000000001516e-06, 4.860000000009301e-07, 7.624999999997217e-06, 4.870000000004038e-07, 4.930000000000212e-06, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 5.02800000000414e-06, 4.859999999939912e-07, 8.054999999999868e-06, 4.7300000000083386e-07, 6.790999999999048e-06, 4.860000000009301e-07, 5.55600000000378e-06, 4.720000000013602e-07, 1.0041999999994833e-05, 4.720000000013602e-07, 9.069999999999911e-06, 4.860000000009301e-07, 6.902000000003072e-06, 4.7299999999389497e-07, 9.819000000001188e-06, 4.720000000013602e-07, 7.583999999997981e-06, 4.720000000013602e-07, 8.736000000002242e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 9.819000000001188e-06, 4.870000000004038e-07, 4.8189999999961874e-06, 4.720000000013602e-07, 8.472000000002422e-06, 4.7299999999389497e-07, 8.986000000002492e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.860000000009301e-07, 8.555999999999842e-06, 4.860000000009301e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 6.388999999995537e-06, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:02.751" endtime="20201110 08:33:02.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.747" endtime="20201110 08:33:02.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:02.759" level="INFO">${RESULT} = [{'time': 0.035015667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03502075, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:33:02.756" endtime="20201110 08:33:02.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:02.773" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:02.760" endtime="20201110 08:33:02.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.777" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:02.776" endtime="20201110 08:33:02.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.779" level="INFO">VALUE: [4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:33:02.778" endtime="20201110 08:33:02.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.774" endtime="20201110 08:33:02.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.782" endtime="20201110 08:33:02.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:02.786" endtime="20201110 08:33:02.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.784" endtime="20201110 08:33:02.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.781" endtime="20201110 08:33:02.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.339" endtime="20201110 08:33:02.807"></status>
</kw>
<msg timestamp="20201110 08:33:02.807" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.814" endtime="20201110 08:33:02.829"></status>
</kw>
<msg timestamp="20201110 08:33:02.830" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.813" endtime="20201110 08:33:02.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.832" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.831" endtime="20201110 08:33:02.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.833" endtime="20201110 08:33:02.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.810" endtime="20201110 08:33:02.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.809" endtime="20201110 08:33:02.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.842" endtime="20201110 08:33:03.137"></status>
</kw>
<msg timestamp="20201110 08:33:03.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019496194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.841" endtime="20201110 08:33:03.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019496194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.147" endtime="20201110 08:33:03.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.167" endtime="20201110 08:33:03.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.838" endtime="20201110 08:33:03.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.836" endtime="20201110 08:33:03.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.181" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:03.179" endtime="20201110 08:33:03.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.193" level="INFO">VALUE: [{'time': 0.019495708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019496194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019505069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.019505542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019512028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.0195125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01952025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.019520722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019526264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.01952675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019536972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.019537458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019545722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.019546194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019554861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.019555333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019560264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.01956075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019566403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019566889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019575889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.019576361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019582042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.019582514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019586639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.019587111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019597139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.019597611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019602972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019603444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019613917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0473000000000426e-05, 'source_diff': 1.0473000000000426e-05}, {'time': 0.019614389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019624833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000001813e-05, 'source_diff': 1.0444000000001813e-05}, {'time': 0.019625306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019633764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458000000002852e-06, 'source_diff': 8.458000000002852e-06}, {'time': 0.01963425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019641097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.019641569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019651875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305999999998122e-05, 'source_diff': 1.0305999999998122e-05}, {'time': 0.019652347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019661944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.019662417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019668694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.019669167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019674111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.019674583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01968025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.019680722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019684653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.019685125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019691458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.019691931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019695931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019696403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019704458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.019704931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019712667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.019713139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019721403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.263999999997412e-06, 'source_diff': 8.263999999997412e-06}, {'time': 0.019721875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019731694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.019732167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019739389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.019739861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019745722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019746194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019754042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847999999997801e-06, 'source_diff': 7.847999999997801e-06}, {'time': 0.019754514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019764236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.019764708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019770875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.019771361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019780069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.019780542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019788361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.019788833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019797903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.019798389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000000117e-06, 'source_diff': 6.611000000000117e-06}, {'time': 0.019805472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019813528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.019814, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019823333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.019823806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019834167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.019834639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019841125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019841611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019848014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.019848486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019858833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.019859306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0198685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.019868986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019874528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.019875014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019881917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.019882389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019892, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.019892472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:03.184" endtime="20201110 08:33:03.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.174" endtime="20201110 08:33:03.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:03.241" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:03.199" endtime="20201110 08:33:03.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.245" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:03.244" endtime="20201110 08:33:03.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.250" level="INFO">VALUE: {'sourcesource_diff': [0, 4.860000000009301e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.720000000013602e-07, 5.542000000000741e-06, 4.859999999974607e-07, 1.0222000000000703e-05, 4.860000000009301e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.859999999974607e-07, 5.653000000001296e-06, 4.860000000009301e-07, 8.999999999998592e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.7199999999789077e-07, 4.125000000000656e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.0473000000000426e-05, 4.7199999999789077e-07, 1.0444000000001813e-05, 4.729999999973644e-07, 8.458000000002852e-06, 4.859999999974607e-07, 6.847000000000797e-06, 4.720000000013602e-07, 1.0305999999998122e-05, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 6.276999999998978e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.7199999999789077e-07, 5.667000000000866e-06, 4.720000000013602e-07, 3.9309999999986855e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.7300000000083386e-07, 4.000000000000531e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.729999999973644e-07, 7.736000000001242e-06, 4.720000000013602e-07, 8.263999999997412e-06, 4.720000000013602e-07, 9.819000000001188e-06, 4.729999999973644e-07, 7.222000000001172e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 7.847999999997801e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 6.167000000001366e-06, 4.860000000009301e-07, 8.707999999999633e-06, 4.7300000000083386e-07, 7.818999999999188e-06, 4.7199999999789077e-07, 9.069999999999911e-06, 4.860000000009301e-07, 6.611000000000117e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.7199999999789077e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 6.485999999999992e-06, 4.859999999974607e-07, 6.403000000002046e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 9.194000000000563e-06, 4.860000000009301e-07, 5.541999999997271e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.720000000013602e-07], 'time': [0.019495708, 0.019496194, 0.019505069, 0.019505542, 0.019512028, 0.0195125, 0.01952025, 0.019520722, 0.019526264, 0.01952675, 0.019536972, 0.019537458, 0.019545722, 0.019546194, 0.019554861, 0.019555333, 0.019560264, 0.01956075, 0.019566403, 0.019566889, 0.019575889, 0.019576361, 0.019582042, 0.019582514, 0.019586639, 0.019587111, 0.019597139, 0.019597611, 0.019602972, 0.019603444, 0.019613917, 0.019614389, 0.019624833, 0.019625306, 0.019633764, 0.01963425, 0.019641097, 0.019641569, 0.019651875, 0.019652347, 0.019661944, 0.019662417, 0.019668694, 0.019669167, 0.019674111, 0.019674583, 0.01968025, 0.019680722, 0.019684653, 0.019685125, 0.019691458, 0.019691931, 0.019695931, 0.019696403, 0.019704458, 0.019704931, 0.019712667, 0.019713139, 0.019721403, 0.019721875, 0.019731694, 0.019732167, 0.019739389, 0.019739861, 0.019745722, 0.019746194, 0.019754042, 0.019754514, 0.019764236, 0.019764708, 0.019770875, 0.019771361, 0.019780069, 0.019780542, 0.019788361, 0.019788833, 0.019797903, 0.019798389, 0.019805, 0.019805472, 0.019813528, 0.019814, 0.019823333, 0.019823806, 0.019834167, 0.019834639, 0.019841125, 0.019841611, 0.019848014, 0.019848486, 0.019858833, 0.019859306, 0.0198685, 0.019868986, 0.019874528, 0.019875014, 0.019881917, 0.019882389, 0.019892, 0.019892472], 'diff': [0, 4.860000000009301e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.720000000013602e-07, 5.542000000000741e-06, 4.859999999974607e-07, 1.0222000000000703e-05, 4.860000000009301e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.859999999974607e-07, 5.653000000001296e-06, 4.860000000009301e-07, 8.999999999998592e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.7199999999789077e-07, 4.125000000000656e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.0473000000000426e-05, 4.7199999999789077e-07, 1.0444000000001813e-05, 4.729999999973644e-07, 8.458000000002852e-06, 4.859999999974607e-07, 6.847000000000797e-06, 4.720000000013602e-07, 1.0305999999998122e-05, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 6.276999999998978e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.7199999999789077e-07, 5.667000000000866e-06, 4.720000000013602e-07, 3.9309999999986855e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.7300000000083386e-07, 4.000000000000531e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.729999999973644e-07, 7.736000000001242e-06, 4.720000000013602e-07, 8.263999999997412e-06, 4.720000000013602e-07, 9.819000000001188e-06, 4.729999999973644e-07, 7.222000000001172e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 7.847999999997801e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 6.167000000001366e-06, 4.860000000009301e-07, 8.707999999999633e-06, 4.7300000000083386e-07, 7.818999999999188e-06, 4.7199999999789077e-07, 9.069999999999911e-06, 4.860000000009301e-07, 6.611000000000117e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.7199999999789077e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 6.485999999999992e-06, 4.859999999974607e-07, 6.403000000002046e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 9.194000000000563e-06, 4.860000000009301e-07, 5.541999999997271e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:03.246" endtime="20201110 08:33:03.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.242" endtime="20201110 08:33:03.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:03.255" level="INFO">${RESULT} = [{'time': 0.019496194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019505542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:03.252" endtime="20201110 08:33:03.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:03.270" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:03.256" endtime="20201110 08:33:03.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.274" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:03.273" endtime="20201110 08:33:03.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.276" level="INFO">VALUE: [4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:33:03.275" endtime="20201110 08:33:03.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.271" endtime="20201110 08:33:03.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.280" endtime="20201110 08:33:03.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:03.283" endtime="20201110 08:33:03.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.282" endtime="20201110 08:33:03.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.278" endtime="20201110 08:33:03.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.807" endtime="20201110 08:33:03.304"></status>
</kw>
<msg timestamp="20201110 08:33:03.305" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.313" endtime="20201110 08:33:03.327"></status>
</kw>
<msg timestamp="20201110 08:33:03.328" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.311" endtime="20201110 08:33:03.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.330" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.329" endtime="20201110 08:33:03.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.331" endtime="20201110 08:33:03.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.308" endtime="20201110 08:33:03.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.306" endtime="20201110 08:33:03.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.342" endtime="20201110 08:33:03.626"></status>
</kw>
<msg timestamp="20201110 08:33:03.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019206778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019207264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.340" endtime="20201110 08:33:03.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019206778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019207264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.630" endtime="20201110 08:33:03.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.639" endtime="20201110 08:33:03.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.337" endtime="20201110 08:33:03.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.335" endtime="20201110 08:33:03.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.646" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:03.645" endtime="20201110 08:33:03.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.651" level="INFO">VALUE: [{'time': 0.019206778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019207264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019212931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.019213403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019221361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.019221833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019228319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019228806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019233431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.019233903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019238847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.019239319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019245514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194999999997036e-06, 'source_diff': 6.194999999997036e-06}, {'time': 0.019245986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019253319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333000000001727e-06, 'source_diff': 7.333000000001727e-06}, {'time': 0.019253806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.019264153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.019264625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019269778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.01927025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0192805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0249999999999843e-05, 'source_diff': 1.0249999999999843e-05}, {'time': 0.019280972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019288819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.019289292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019297028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.0192975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019304931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.019305403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01931325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.019313722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019320431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.019320903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019328208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.019328681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019338306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.019338778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019347347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.019347819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019355653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.8340000000017e-06, 'source_diff': 7.8340000000017e-06}, {'time': 0.019356125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019366056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.019366528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019373111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5829999999975075e-06, 'source_diff': 6.5829999999975075e-06}, {'time': 0.019373597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019378097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.019378583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019389014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430999999998247e-05, 'source_diff': 1.0430999999998247e-05}, {'time': 0.0193895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019394028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.0193945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019404097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.019404569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019411708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.019412181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019416667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.019417153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019421764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.019422236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019431597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.019432069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019438083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.019438556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019446917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.019447403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019457111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.019457583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019467736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.019468208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019477931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722999999999676e-06, 'source_diff': 9.722999999999676e-06}, {'time': 0.019478417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019482417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9999999999970615e-06, 'source_diff': 3.9999999999970615e-06}, {'time': 0.019482889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019488986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.019489458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019497431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972999999997926e-06, 'source_diff': 7.972999999997926e-06}, {'time': 0.019497903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019504181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.019504667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019512319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652000000000353e-06, 'source_diff': 7.652000000000353e-06}, {'time': 0.019512792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019522, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.019522472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019532278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.019532764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019542889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.019543361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019548833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472000000002891e-06, 'source_diff': 5.472000000002891e-06}, {'time': 0.019549306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019554639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.019555111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019562944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.019563431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019571514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083000000002477e-06, 'source_diff': 8.083000000002477e-06}, {'time': 0.019571986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019576083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.019576556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019583736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180000000002462e-06, 'source_diff': 7.180000000002462e-06}, {'time': 0.019584222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019593097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.019593569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:03.647" endtime="20201110 08:33:03.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.643" endtime="20201110 08:33:03.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:03.678" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:03.654" endtime="20201110 08:33:03.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.682" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:03.681" endtime="20201110 08:33:03.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.686" level="INFO">VALUE: {'sourcesource_diff': [0, 4.860000000009301e-07, 5.666999999997396e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.720000000013602e-07, 6.485999999999992e-06, 4.870000000004038e-07, 4.6249999999976865e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.720000000013602e-07, 6.194999999997036e-06, 4.720000000013602e-07, 7.333000000001727e-06, 4.869999999969343e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 7.431000000002186e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 6.709000000000576e-06, 4.720000000013602e-07, 7.304999999999118e-06, 4.7300000000083386e-07, 9.624999999999218e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 7.8340000000017e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.720000000013602e-07, 6.5829999999975075e-06, 4.860000000009301e-07, 4.500000000001031e-06, 4.860000000009301e-07, 1.0430999999998247e-05, 4.860000000009301e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 9.597000000000078e-06, 4.720000000013602e-07, 7.138999999999757e-06, 4.7300000000083386e-07, 4.485999999997992e-06, 4.860000000009301e-07, 4.611000000001586e-06, 4.7199999999789077e-07, 9.360999999999398e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 8.361000000001867e-06, 4.859999999974607e-07, 9.708000000000633e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 9.722999999999676e-06, 4.860000000009301e-07, 3.9999999999970615e-06, 4.720000000013602e-07, 6.097000000000047e-06, 4.720000000013602e-07, 7.972999999997926e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.860000000009301e-07, 7.652000000000353e-06, 4.7300000000083386e-07, 9.208000000000133e-06, 4.7199999999789077e-07, 9.806000000001092e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 4.7199999999789077e-07, 5.472000000002891e-06, 4.729999999973644e-07, 5.332999999999727e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.870000000004038e-07, 8.083000000002477e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.729999999973644e-07, 7.180000000002462e-06, 4.859999999974607e-07, 8.875000000001937e-06, 4.720000000013602e-07], 'time': [0.019206778, 0.019207264, 0.019212931, 0.019213403, 0.019221361, 0.019221833, 0.019228319, 0.019228806, 0.019233431, 0.019233903, 0.019238847, 0.019239319, 0.019245514, 0.019245986, 0.019253319, 0.019253806, 0.019264153, 0.019264625, 0.019269778, 0.01927025, 0.0192805, 0.019280972, 0.019288819, 0.019289292, 0.019297028, 0.0192975, 0.019304931, 0.019305403, 0.01931325, 0.019313722, 0.019320431, 0.019320903, 0.019328208, 0.019328681, 0.019338306, 0.019338778, 0.019347347, 0.019347819, 0.019355653, 0.019356125, 0.019366056, 0.019366528, 0.019373111, 0.019373597, 0.019378097, 0.019378583, 0.019389014, 0.0193895, 0.019394028, 0.0193945, 0.019404097, 0.019404569, 0.019411708, 0.019412181, 0.019416667, 0.019417153, 0.019421764, 0.019422236, 0.019431597, 0.019432069, 0.019438083, 0.019438556, 0.019446917, 0.019447403, 0.019457111, 0.019457583, 0.019467736, 0.019468208, 0.019477931, 0.019478417, 0.019482417, 0.019482889, 0.019488986, 0.019489458, 0.019497431, 0.019497903, 0.019504181, 0.019504667, 0.019512319, 0.019512792, 0.019522, 0.019522472, 0.019532278, 0.019532764, 0.019542889, 0.019543361, 0.019548833, 0.019549306, 0.019554639, 0.019555111, 0.019562944, 0.019563431, 0.019571514, 0.019571986, 0.019576083, 0.019576556, 0.019583736, 0.019584222, 0.019593097, 0.019593569], 'diff': [0, 4.860000000009301e-07, 5.666999999997396e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.720000000013602e-07, 6.485999999999992e-06, 4.870000000004038e-07, 4.6249999999976865e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.720000000013602e-07, 6.194999999997036e-06, 4.720000000013602e-07, 7.333000000001727e-06, 4.869999999969343e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 7.431000000002186e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 6.709000000000576e-06, 4.720000000013602e-07, 7.304999999999118e-06, 4.7300000000083386e-07, 9.624999999999218e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 7.8340000000017e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.720000000013602e-07, 6.5829999999975075e-06, 4.860000000009301e-07, 4.500000000001031e-06, 4.860000000009301e-07, 1.0430999999998247e-05, 4.860000000009301e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 9.597000000000078e-06, 4.720000000013602e-07, 7.138999999999757e-06, 4.7300000000083386e-07, 4.485999999997992e-06, 4.860000000009301e-07, 4.611000000001586e-06, 4.7199999999789077e-07, 9.360999999999398e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 8.361000000001867e-06, 4.859999999974607e-07, 9.708000000000633e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 9.722999999999676e-06, 4.860000000009301e-07, 3.9999999999970615e-06, 4.720000000013602e-07, 6.097000000000047e-06, 4.720000000013602e-07, 7.972999999997926e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.860000000009301e-07, 7.652000000000353e-06, 4.7300000000083386e-07, 9.208000000000133e-06, 4.7199999999789077e-07, 9.806000000001092e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 4.7199999999789077e-07, 5.472000000002891e-06, 4.729999999973644e-07, 5.332999999999727e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.870000000004038e-07, 8.083000000002477e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.729999999973644e-07, 7.180000000002462e-06, 4.859999999974607e-07, 8.875000000001937e-06, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:03.683" endtime="20201110 08:33:03.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.679" endtime="20201110 08:33:03.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:03.692" level="INFO">${RESULT} = [{'time': 0.019207264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019213403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:03.689" endtime="20201110 08:33:03.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:03.706" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:03.693" endtime="20201110 08:33:03.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.711" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:03.710" endtime="20201110 08:33:03.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.713" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:33:03.712" endtime="20201110 08:33:03.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.707" endtime="20201110 08:33:03.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.717" endtime="20201110 08:33:03.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:03.720" endtime="20201110 08:33:03.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.719" endtime="20201110 08:33:03.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.715" endtime="20201110 08:33:03.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.305" endtime="20201110 08:33:03.741"></status>
</kw>
<msg timestamp="20201110 08:33:03.741" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.749" endtime="20201110 08:33:03.765"></status>
</kw>
<msg timestamp="20201110 08:33:03.765" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.748" endtime="20201110 08:33:03.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.768" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.766" endtime="20201110 08:33:03.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.769" endtime="20201110 08:33:03.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.745" endtime="20201110 08:33:03.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.743" endtime="20201110 08:33:03.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.778" endtime="20201110 08:33:04.068"></status>
</kw>
<msg timestamp="20201110 08:33:04.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019411931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019412403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.777" endtime="20201110 08:33:04.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019411931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019412403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:04.072" endtime="20201110 08:33:04.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.082" endtime="20201110 08:33:04.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.774" endtime="20201110 08:33:04.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.772" endtime="20201110 08:33:04.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.090" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:04.089" endtime="20201110 08:33:04.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.095" level="INFO">VALUE: [{'time': 0.019411931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019412403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019416694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.019417181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.0194245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.019424972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019434264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.01943475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019443722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.019444208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019450903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694999999997536e-06, 'source_diff': 6.694999999997536e-06}, {'time': 0.019451375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019459653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.019460125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019467431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.019467917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019475958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.019476431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019486583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0151999999999384e-05, 'source_diff': 1.0151999999999384e-05}, {'time': 0.019487056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019492597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.019493069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0195005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.019500972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019505694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.019506167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019511736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5689999999969375e-06, 'source_diff': 5.5689999999969375e-06}, {'time': 0.019512208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019519208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019519681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019524514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.019524986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019528986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019529472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019535028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.019535514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019541486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019541972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019548153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.019548639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019555042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.019555514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019562319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.019562806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.019568472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.019568944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019579319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.019579792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019583681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.019584153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019591681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019592167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019602083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.915999999998704e-06, 'source_diff': 9.915999999998704e-06}, {'time': 0.019602556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019610625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.019611097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019620069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.019620556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.01962725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.019627722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019633611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.019634083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019638569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.019639056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.019648972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916000000002173e-06, 'source_diff': 9.916000000002173e-06}, {'time': 0.019649444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019655222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.019655694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019663736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.019664208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019671736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019672222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019679333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.019679806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019686403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.019686875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019695444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.019695917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019704278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.01970475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019711056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.019711528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019717694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.019718167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019724875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.019725347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019730472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.019730958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019740972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.019741458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019749722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.019750194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019759792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.59800000000302e-06, 'source_diff': 9.59800000000302e-06}, {'time': 0.019760278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019766861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.019767347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019773417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.019773889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019782389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.019782861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:04.091" endtime="20201110 08:33:04.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.086" endtime="20201110 08:33:04.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:04.122" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:04.097" endtime="20201110 08:33:04.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.126" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:04.125" endtime="20201110 08:33:04.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.131" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.720000000013602e-07, 4.291000000000017e-06, 4.869999999969343e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.860000000009301e-07, 8.971999999999453e-06, 4.860000000009301e-07, 6.694999999997536e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.860000000009301e-07, 8.041000000000298e-06, 4.729999999973644e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 5.541000000001267e-06, 4.7199999999789077e-07, 7.431000000002186e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.7300000000083386e-07, 5.5689999999969375e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.7300000000083386e-07, 4.832999999999227e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.859999999974607e-07, 5.556000000000311e-06, 4.860000000009301e-07, 5.971999999999922e-06, 4.860000000009301e-07, 6.180999999997466e-06, 4.860000000009301e-07, 6.403000000002046e-06, 4.7199999999789077e-07, 6.805000000002087e-06, 4.869999999969343e-07, 5.666000000001392e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.729999999973644e-07, 3.888999999999976e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.860000000009301e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 8.068999999999438e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.870000000004038e-07, 6.693999999998063e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 4.486000000001461e-06, 4.869999999969343e-07, 9.916000000002173e-06, 4.7199999999789077e-07, 5.778000000001421e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 6.597000000000547e-06, 4.7199999999789077e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 6.306000000001061e-06, 4.7199999999789077e-07, 6.166000000001892e-06, 4.7300000000083386e-07, 6.7079999999976325e-06, 4.720000000013602e-07, 5.1249999999981866e-06, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 9.59800000000302e-06, 4.859999999974607e-07, 6.583000000000977e-06, 4.860000000009301e-07, 6.070000000000381e-06, 4.7199999999789077e-07, 8.500000000001562e-06, 4.7199999999789077e-07], 'time': [0.019411931, 0.019412403, 0.019416694, 0.019417181, 0.0194245, 0.019424972, 0.019434264, 0.01943475, 0.019443722, 0.019444208, 0.019450903, 0.019451375, 0.019459653, 0.019460125, 0.019467431, 0.019467917, 0.019475958, 0.019476431, 0.019486583, 0.019487056, 0.019492597, 0.019493069, 0.0195005, 0.019500972, 0.019505694, 0.019506167, 0.019511736, 0.019512208, 0.019519208, 0.019519681, 0.019524514, 0.019524986, 0.019528986, 0.019529472, 0.019535028, 0.019535514, 0.019541486, 0.019541972, 0.019548153, 0.019548639, 0.019555042, 0.019555514, 0.019562319, 0.019562806, 0.019568472, 0.019568944, 0.019579319, 0.019579792, 0.019583681, 0.019584153, 0.019591681, 0.019592167, 0.019602083, 0.019602556, 0.019610625, 0.019611097, 0.019620069, 0.019620556, 0.01962725, 0.019627722, 0.019633611, 0.019634083, 0.019638569, 0.019639056, 0.019648972, 0.019649444, 0.019655222, 0.019655694, 0.019663736, 0.019664208, 0.019671736, 0.019672222, 0.019679333, 0.019679806, 0.019686403, 0.019686875, 0.019695444, 0.019695917, 0.019704278, 0.01970475, 0.019711056, 0.019711528, 0.019717694, 0.019718167, 0.019724875, 0.019725347, 0.019730472, 0.019730958, 0.019740972, 0.019741458, 0.019749722, 0.019750194, 0.019759792, 0.019760278, 0.019766861, 0.019767347, 0.019773417, 0.019773889, 0.019782389, 0.019782861], 'diff': [0, 4.720000000013602e-07, 4.291000000000017e-06, 4.869999999969343e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.860000000009301e-07, 8.971999999999453e-06, 4.860000000009301e-07, 6.694999999997536e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.860000000009301e-07, 8.041000000000298e-06, 4.729999999973644e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 5.541000000001267e-06, 4.7199999999789077e-07, 7.431000000002186e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.7300000000083386e-07, 5.5689999999969375e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.7300000000083386e-07, 4.832999999999227e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.859999999974607e-07, 5.556000000000311e-06, 4.860000000009301e-07, 5.971999999999922e-06, 4.860000000009301e-07, 6.180999999997466e-06, 4.860000000009301e-07, 6.403000000002046e-06, 4.7199999999789077e-07, 6.805000000002087e-06, 4.869999999969343e-07, 5.666000000001392e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.729999999973644e-07, 3.888999999999976e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.860000000009301e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 8.068999999999438e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.870000000004038e-07, 6.693999999998063e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 4.486000000001461e-06, 4.869999999969343e-07, 9.916000000002173e-06, 4.7199999999789077e-07, 5.778000000001421e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 6.597000000000547e-06, 4.7199999999789077e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 6.306000000001061e-06, 4.7199999999789077e-07, 6.166000000001892e-06, 4.7300000000083386e-07, 6.7079999999976325e-06, 4.720000000013602e-07, 5.1249999999981866e-06, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 9.59800000000302e-06, 4.859999999974607e-07, 6.583000000000977e-06, 4.860000000009301e-07, 6.070000000000381e-06, 4.7199999999789077e-07, 8.500000000001562e-06, 4.7199999999789077e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:04.127" endtime="20201110 08:33:04.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.123" endtime="20201110 08:33:04.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:04.136" level="INFO">${RESULT} = [{'time': 0.019412403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019417181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:04.133" endtime="20201110 08:33:04.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:04.150" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:04.137" endtime="20201110 08:33:04.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.154" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:04.153" endtime="20201110 08:33:04.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.156" level="INFO">VALUE: [4.720000000013602e-07, 4.869999999969343e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.869999999969343e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:33:04.155" endtime="20201110 08:33:04.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.151" endtime="20201110 08:33:04.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.160" endtime="20201110 08:33:04.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:04.163" endtime="20201110 08:33:04.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.161" endtime="20201110 08:33:04.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.158" endtime="20201110 08:33:04.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.742" endtime="20201110 08:33:04.184"></status>
</kw>
<msg timestamp="20201110 08:33:04.184" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.192" endtime="20201110 08:33:04.206"></status>
</kw>
<msg timestamp="20201110 08:33:04.207" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.190" endtime="20201110 08:33:04.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.209" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.208" endtime="20201110 08:33:04.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.210" endtime="20201110 08:33:04.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.187" endtime="20201110 08:33:04.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.186" endtime="20201110 08:33:04.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.220" endtime="20201110 08:33:04.505"></status>
</kw>
<msg timestamp="20201110 08:33:04.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018938514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018939, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:04.218" endtime="20201110 08:33:04.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018938514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018939, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:04.510" endtime="20201110 08:33:04.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.519" endtime="20201110 08:33:04.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.215" endtime="20201110 08:33:04.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.214" endtime="20201110 08:33:04.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.526" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:04.525" endtime="20201110 08:33:04.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.531" level="INFO">VALUE: [{'time': 0.018938514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018939, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018945792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.018946264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018956514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0249999999999843e-05, 'source_diff': 1.0249999999999843e-05}, {'time': 0.018956986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018964083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.018964569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018971486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.018971958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018980833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018981306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018986347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.018986819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018995181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.36200000000134e-06, 'source_diff': 8.36200000000134e-06}, {'time': 0.018995653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019001819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.019002306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019006806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.019007292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019013875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.019014361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01902375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.019024236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019032292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.019032764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019039347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.019039819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019046222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.019046694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019053167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.019053653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019063583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.019064056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019070861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.019071333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019081569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.019082042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019089556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019090028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019098292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.019098764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019108389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.019108861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019113667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.019114153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019120236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.019120708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019130514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.019130986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019136694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.019137167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019141236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.068999999998907e-06, 'source_diff': 4.068999999998907e-06}, {'time': 0.019141708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019149847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.019150319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019158486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.019158958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019166069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.019166542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019174444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.901999999997134e-06, 'source_diff': 7.901999999997134e-06}, {'time': 0.019174917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019180833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.019181306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019189972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.019190444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019196306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.019196792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019200986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.019201472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019209722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.019210194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019218889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.019219361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019227611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.019228083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019235708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.019236181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019242708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.019243181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019248181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.019248653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019252875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.019253347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019262319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.019262792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019270528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.019271014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019276556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.019277042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019283, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.019283486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019288306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8200000000026e-06, 'source_diff': 4.8200000000026e-06}, {'time': 0.019288778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019298903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.019299389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019307986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.019308458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019313361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.019313833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:04.527" endtime="20201110 08:33:04.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.523" endtime="20201110 08:33:04.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:04.556" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:04.533" endtime="20201110 08:33:04.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.560" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:04.559" endtime="20201110 08:33:04.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.564" level="INFO">VALUE: {'sourcesource_diff': [0, 4.860000000009301e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.7199999999789077e-07, 7.097000000001047e-06, 4.860000000009301e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 5.041000000000767e-06, 4.7199999999789077e-07, 8.36200000000134e-06, 4.720000000013602e-07, 6.165999999998423e-06, 4.870000000004038e-07, 4.500000000001031e-06, 4.859999999974607e-07, 6.583000000000977e-06, 4.860000000009301e-07, 9.388999999998537e-06, 4.860000000009301e-07, 8.055999999999341e-06, 4.720000000013602e-07, 6.583000000000977e-06, 4.7199999999789077e-07, 6.403000000002046e-06, 4.7199999999789077e-07, 6.4729999999998955e-06, 4.860000000009301e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 6.805000000002087e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.7300000000083386e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 4.805999999999561e-06, 4.859999999974607e-07, 6.083000000000477e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 4.068999999998907e-06, 4.720000000013602e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 8.166999999999897e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 7.901999999997134e-06, 4.7300000000083386e-07, 5.916000000001642e-06, 4.729999999973644e-07, 8.666000000000923e-06, 4.720000000013602e-07, 5.86199999999884e-06, 4.860000000009301e-07, 4.193999999999032e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.694999999999536e-06, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 4.9999999999980616e-06, 4.720000000013602e-07, 4.221999999998172e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.7300000000083386e-07, 7.735999999997772e-06, 4.860000000009301e-07, 5.542000000000741e-06, 4.860000000009301e-07, 5.958000000000352e-06, 4.859999999974607e-07, 4.8200000000026e-06, 4.7199999999789077e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 8.596999999999078e-06, 4.720000000013602e-07, 4.903000000000546e-06, 4.7199999999789077e-07], 'time': [0.018938514, 0.018939, 0.018945792, 0.018946264, 0.018956514, 0.018956986, 0.018964083, 0.018964569, 0.018971486, 0.018971958, 0.018980833, 0.018981306, 0.018986347, 0.018986819, 0.018995181, 0.018995653, 0.019001819, 0.019002306, 0.019006806, 0.019007292, 0.019013875, 0.019014361, 0.01902375, 0.019024236, 0.019032292, 0.019032764, 0.019039347, 0.019039819, 0.019046222, 0.019046694, 0.019053167, 0.019053653, 0.019063583, 0.019064056, 0.019070861, 0.019071333, 0.019081569, 0.019082042, 0.019089556, 0.019090028, 0.019098292, 0.019098764, 0.019108389, 0.019108861, 0.019113667, 0.019114153, 0.019120236, 0.019120708, 0.019130514, 0.019130986, 0.019136694, 0.019137167, 0.019141236, 0.019141708, 0.019149847, 0.019150319, 0.019158486, 0.019158958, 0.019166069, 0.019166542, 0.019174444, 0.019174917, 0.019180833, 0.019181306, 0.019189972, 0.019190444, 0.019196306, 0.019196792, 0.019200986, 0.019201472, 0.019209722, 0.019210194, 0.019218889, 0.019219361, 0.019227611, 0.019228083, 0.019235708, 0.019236181, 0.019242708, 0.019243181, 0.019248181, 0.019248653, 0.019252875, 0.019253347, 0.019262319, 0.019262792, 0.019270528, 0.019271014, 0.019276556, 0.019277042, 0.019283, 0.019283486, 0.019288306, 0.019288778, 0.019298903, 0.019299389, 0.019307986, 0.019308458, 0.019313361, 0.019313833], 'diff': [0, 4.860000000009301e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.7199999999789077e-07, 7.097000000001047e-06, 4.860000000009301e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 5.041000000000767e-06, 4.7199999999789077e-07, 8.36200000000134e-06, 4.720000000013602e-07, 6.165999999998423e-06, 4.870000000004038e-07, 4.500000000001031e-06, 4.859999999974607e-07, 6.583000000000977e-06, 4.860000000009301e-07, 9.388999999998537e-06, 4.860000000009301e-07, 8.055999999999341e-06, 4.720000000013602e-07, 6.583000000000977e-06, 4.7199999999789077e-07, 6.403000000002046e-06, 4.7199999999789077e-07, 6.4729999999998955e-06, 4.860000000009301e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 6.805000000002087e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.7300000000083386e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 4.805999999999561e-06, 4.859999999974607e-07, 6.083000000000477e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 4.068999999998907e-06, 4.720000000013602e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 8.166999999999897e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 7.901999999997134e-06, 4.7300000000083386e-07, 5.916000000001642e-06, 4.729999999973644e-07, 8.666000000000923e-06, 4.720000000013602e-07, 5.86199999999884e-06, 4.860000000009301e-07, 4.193999999999032e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.694999999999536e-06, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 4.9999999999980616e-06, 4.720000000013602e-07, 4.221999999998172e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.7300000000083386e-07, 7.735999999997772e-06, 4.860000000009301e-07, 5.542000000000741e-06, 4.860000000009301e-07, 5.958000000000352e-06, 4.859999999974607e-07, 4.8200000000026e-06, 4.7199999999789077e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 8.596999999999078e-06, 4.720000000013602e-07, 4.903000000000546e-06, 4.7199999999789077e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:04.561" endtime="20201110 08:33:04.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.557" endtime="20201110 08:33:04.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:04.570" level="INFO">${RESULT} = [{'time': 0.018939, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018946264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:33:04.567" endtime="20201110 08:33:04.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:04.584" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:04.571" endtime="20201110 08:33:04.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.588" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:04.587" endtime="20201110 08:33:04.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.591" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:33:04.589" endtime="20201110 08:33:04.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.585" endtime="20201110 08:33:04.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.595" endtime="20201110 08:33:04.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:04.599" endtime="20201110 08:33:04.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.597" endtime="20201110 08:33:04.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.593" endtime="20201110 08:33:04.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.184" endtime="20201110 08:33:04.620"></status>
</kw>
<msg timestamp="20201110 08:33:04.620" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.627" endtime="20201110 08:33:04.644"></status>
</kw>
<msg timestamp="20201110 08:33:04.645" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.626" endtime="20201110 08:33:04.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.650" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.647" endtime="20201110 08:33:04.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.652" endtime="20201110 08:33:04.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.623" endtime="20201110 08:33:04.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.622" endtime="20201110 08:33:04.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.671" endtime="20201110 08:33:04.965"></status>
</kw>
<msg timestamp="20201110 08:33:04.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02031775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020318222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:04.667" endtime="20201110 08:33:04.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02031775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020318222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:04.970" endtime="20201110 08:33:04.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.979" endtime="20201110 08:33:04.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.662" endtime="20201110 08:33:04.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.658" endtime="20201110 08:33:04.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.985" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:04.984" endtime="20201110 08:33:04.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.991" level="INFO">VALUE: [{'time': 0.02031775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020318222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0203245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.020324972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020332444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.020332917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020342278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.02034275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020349556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.020350028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020359958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930000000001743e-06, 'source_diff': 9.930000000001743e-06}, {'time': 0.020360431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020367542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.020368014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020375236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.020375708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020380764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.020381236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020388028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.0203885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020396542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.020397028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020402389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.020402861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020409972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.020410444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020417778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.334000000001201e-06, 'source_diff': 7.334000000001201e-06}, {'time': 0.02041825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020423681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.020424167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020432, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.020432486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020436792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.020437264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020444306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.020444778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020454042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999998412e-06, 'source_diff': 9.263999999998412e-06}, {'time': 0.020454528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020463528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.020464, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020472458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.020472931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020480042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.020480514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020490028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.0204905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020497486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.020497958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020503514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.020503986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020510139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.020510625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020515972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.020516444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020524986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.020525458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020531833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.020532306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020537347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.020537819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020541792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.973000000000865e-06, 'source_diff': 3.973000000000865e-06}, {'time': 0.020542264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020550931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.020551403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020558611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.020559097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020568389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.020568861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020577542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.020578014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020585125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.020585597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020589806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208999999998075e-06, 'source_diff': 4.208999999998075e-06}, {'time': 0.020590278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020596875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.020597347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020607806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0459000000000857e-05, 'source_diff': 1.0459000000000857e-05}, {'time': 0.020608278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020613819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.540999999997798e-06, 'source_diff': 5.540999999997798e-06}, {'time': 0.020614292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020618528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.020619, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020622861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.020623333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020629931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5980000000000205e-06, 'source_diff': 6.5980000000000205e-06}, {'time': 0.020630403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020638986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583000000002977e-06, 'source_diff': 8.583000000002977e-06}, {'time': 0.020639458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020646986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.020647458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020651458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.020651931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020656139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.020656611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020665889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.020666375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020671208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.020671681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020680653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.020681139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:04.986" endtime="20201110 08:33:04.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.982" endtime="20201110 08:33:04.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:05.018" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:04.993" endtime="20201110 08:33:05.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.022" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:05.021" endtime="20201110 08:33:05.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.027" level="INFO">VALUE: {'sourcesource_diff': [0, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.729999999973644e-07, 9.360999999999398e-06, 4.720000000013602e-07, 6.806000000001561e-06, 4.7199999999789077e-07, 9.930000000001743e-06, 4.729999999973644e-07, 7.111000000000617e-06, 4.720000000013602e-07, 7.222000000001172e-06, 4.7199999999789077e-07, 5.055999999999811e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.860000000009301e-07, 5.360999999998867e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.720000000013602e-07, 7.334000000001201e-06, 4.7199999999789077e-07, 5.431000000000186e-06, 4.860000000009301e-07, 7.832999999998758e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.263999999998412e-06, 4.860000000009301e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 8.457999999999383e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 6.986000000000492e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 6.153000000001796e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 8.542000000000272e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7300000000083386e-07, 5.041000000000767e-06, 4.7199999999789077e-07, 3.973000000000865e-06, 4.720000000013602e-07, 8.667000000000397e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.859999999974607e-07, 9.292000000001022e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.720000000013602e-07, 4.208999999998075e-06, 4.720000000013602e-07, 6.597000000000547e-06, 4.7199999999789077e-07, 1.0459000000000857e-05, 4.720000000013602e-07, 5.540999999997798e-06, 4.7300000000083386e-07, 4.236000000001211e-06, 4.7199999999789077e-07, 3.861000000000836e-06, 4.720000000013602e-07, 6.5980000000000205e-06, 4.7199999999789077e-07, 8.583000000002977e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.729999999973644e-07, 4.208000000002071e-06, 4.7199999999789077e-07, 9.278000000001452e-06, 4.860000000009301e-07, 4.832999999999227e-06, 4.7300000000083386e-07, 8.971999999999453e-06, 4.860000000009301e-07], 'time': [0.02031775, 0.020318222, 0.0203245, 0.020324972, 0.020332444, 0.020332917, 0.020342278, 0.02034275, 0.020349556, 0.020350028, 0.020359958, 0.020360431, 0.020367542, 0.020368014, 0.020375236, 0.020375708, 0.020380764, 0.020381236, 0.020388028, 0.0203885, 0.020396542, 0.020397028, 0.020402389, 0.020402861, 0.020409972, 0.020410444, 0.020417778, 0.02041825, 0.020423681, 0.020424167, 0.020432, 0.020432486, 0.020436792, 0.020437264, 0.020444306, 0.020444778, 0.020454042, 0.020454528, 0.020463528, 0.020464, 0.020472458, 0.020472931, 0.020480042, 0.020480514, 0.020490028, 0.0204905, 0.020497486, 0.020497958, 0.020503514, 0.020503986, 0.020510139, 0.020510625, 0.020515972, 0.020516444, 0.020524986, 0.020525458, 0.020531833, 0.020532306, 0.020537347, 0.020537819, 0.020541792, 0.020542264, 0.020550931, 0.020551403, 0.020558611, 0.020559097, 0.020568389, 0.020568861, 0.020577542, 0.020578014, 0.020585125, 0.020585597, 0.020589806, 0.020590278, 0.020596875, 0.020597347, 0.020607806, 0.020608278, 0.020613819, 0.020614292, 0.020618528, 0.020619, 0.020622861, 0.020623333, 0.020629931, 0.020630403, 0.020638986, 0.020639458, 0.020646986, 0.020647458, 0.020651458, 0.020651931, 0.020656139, 0.020656611, 0.020665889, 0.020666375, 0.020671208, 0.020671681, 0.020680653, 0.020681139], 'diff': [0, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.729999999973644e-07, 9.360999999999398e-06, 4.720000000013602e-07, 6.806000000001561e-06, 4.7199999999789077e-07, 9.930000000001743e-06, 4.729999999973644e-07, 7.111000000000617e-06, 4.720000000013602e-07, 7.222000000001172e-06, 4.7199999999789077e-07, 5.055999999999811e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.860000000009301e-07, 5.360999999998867e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.720000000013602e-07, 7.334000000001201e-06, 4.7199999999789077e-07, 5.431000000000186e-06, 4.860000000009301e-07, 7.832999999998758e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.263999999998412e-06, 4.860000000009301e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 8.457999999999383e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 6.986000000000492e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 6.153000000001796e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 8.542000000000272e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7300000000083386e-07, 5.041000000000767e-06, 4.7199999999789077e-07, 3.973000000000865e-06, 4.720000000013602e-07, 8.667000000000397e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.859999999974607e-07, 9.292000000001022e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.720000000013602e-07, 4.208999999998075e-06, 4.720000000013602e-07, 6.597000000000547e-06, 4.7199999999789077e-07, 1.0459000000000857e-05, 4.720000000013602e-07, 5.540999999997798e-06, 4.7300000000083386e-07, 4.236000000001211e-06, 4.7199999999789077e-07, 3.861000000000836e-06, 4.720000000013602e-07, 6.5980000000000205e-06, 4.7199999999789077e-07, 8.583000000002977e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.729999999973644e-07, 4.208000000002071e-06, 4.7199999999789077e-07, 9.278000000001452e-06, 4.860000000009301e-07, 4.832999999999227e-06, 4.7300000000083386e-07, 8.971999999999453e-06, 4.860000000009301e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:05.023" endtime="20201110 08:33:05.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.019" endtime="20201110 08:33:05.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:05.032" level="INFO">${RESULT} = [{'time': 0.020318222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020324972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:05.029" endtime="20201110 08:33:05.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:05.046" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:05.033" endtime="20201110 08:33:05.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.051" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:05.050" endtime="20201110 08:33:05.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.053" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201110 08:33:05.052" endtime="20201110 08:33:05.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.047" endtime="20201110 08:33:05.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.056" endtime="20201110 08:33:05.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:05.060" endtime="20201110 08:33:05.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.058" endtime="20201110 08:33:05.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.055" endtime="20201110 08:33:05.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.620" endtime="20201110 08:33:05.081"></status>
</kw>
<msg timestamp="20201110 08:33:05.081" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.089" endtime="20201110 08:33:05.105"></status>
</kw>
<msg timestamp="20201110 08:33:05.106" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:05.087" endtime="20201110 08:33:05.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.109" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:05.107" endtime="20201110 08:33:05.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.110" endtime="20201110 08:33:05.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.085" endtime="20201110 08:33:05.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.083" endtime="20201110 08:33:05.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.120" endtime="20201110 08:33:05.405"></status>
</kw>
<msg timestamp="20201110 08:33:05.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021043069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021043542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:05.119" endtime="20201110 08:33:05.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021043069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021043542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:05.409" endtime="20201110 08:33:05.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.418" endtime="20201110 08:33:05.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.116" endtime="20201110 08:33:05.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.114" endtime="20201110 08:33:05.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.425" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:05.424" endtime="20201110 08:33:05.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.430" level="INFO">VALUE: [{'time': 0.021043069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021043542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021053778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.021054264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021062722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.021063194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021073708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.021074181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021081569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.388000000000533e-06, 'source_diff': 7.388000000000533e-06}, {'time': 0.021082042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021089028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.0210895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021099833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.021100319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021107861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.021108333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021113764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.02111425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021118361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.021118833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021125847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.021126319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021133528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208999999997606e-06, 'source_diff': 7.208999999997606e-06}, {'time': 0.021134, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021139042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.021139514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021147681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.021148153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021157444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.021157917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021162444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.021162917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021171056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.021171542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021178042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.021178514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021188222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.021188694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021199042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.021199514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021209944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430000000002243e-05, 'source_diff': 1.0430000000002243e-05}, {'time': 0.021210431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.021220764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.021221236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021230542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.021231014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021237819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.021238292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021245097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.021245569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021255069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}, {'time': 0.021255556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.021264528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.021265014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021273472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458000000002852e-06, 'source_diff': 8.458000000002852e-06}, {'time': 0.021273958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021283472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.021283944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02129125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.021291736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021298, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.021298472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02130425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.021304736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021313111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.021313583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021320708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.021321181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021328486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.021328958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021332861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.903000000003015e-06, 'source_diff': 3.903000000003015e-06}, {'time': 0.021333333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021337417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.021337903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021342208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305000000003056e-06, 'source_diff': 4.305000000003056e-06}, {'time': 0.021342681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021347708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.021348194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021358111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.021358583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021364764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.021365236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021369236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.021369708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021379222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.021379694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021387333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.021387806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021391792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.021392278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021396167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.021396639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021406458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.021406931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021416333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.401999999998634e-06, 'source_diff': 9.401999999998634e-06}, {'time': 0.021416806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021423917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.021424403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021430792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.021431264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:05.426" endtime="20201110 08:33:05.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.422" endtime="20201110 08:33:05.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:05.469" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:05.440" endtime="20201110 08:33:05.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.473" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:05.472" endtime="20201110 08:33:05.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.477" level="INFO">VALUE: {'sourcesource_diff': [0, 4.729999999973644e-07, 1.0236000000000273e-05, 4.860000000009301e-07, 8.457999999999383e-06, 4.720000000013602e-07, 1.0513999999999663e-05, 4.7300000000083386e-07, 7.388000000000533e-06, 4.729999999973644e-07, 6.986000000000492e-06, 4.720000000013602e-07, 1.0332999999997788e-05, 4.860000000009301e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 5.431000000000186e-06, 4.860000000009301e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 7.208999999997606e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 9.291000000001548e-06, 4.729999999973644e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 8.139000000000757e-06, 4.860000000009301e-07, 6.499999999999562e-06, 4.7199999999789077e-07, 9.708000000000633e-06, 4.720000000013602e-07, 1.0348000000000301e-05, 4.7199999999789077e-07, 1.0430000000002243e-05, 4.869999999969343e-07, 1.0333000000001258e-05, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 6.805000000002087e-06, 4.729999999973644e-07, 6.805000000002087e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.869999999969343e-07, 8.972000000002922e-06, 4.859999999974607e-07, 8.458000000002852e-06, 4.859999999974607e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.859999999974607e-07, 6.264000000002351e-06, 4.7199999999789077e-07, 5.778000000001421e-06, 4.860000000009301e-07, 8.374999999997967e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7300000000083386e-07, 7.304999999999118e-06, 4.7199999999789077e-07, 3.903000000003015e-06, 4.7199999999789077e-07, 4.08400000000142e-06, 4.859999999974607e-07, 4.305000000003056e-06, 4.729999999973644e-07, 5.027000000001197e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.720000000013602e-07, 6.181000000000936e-06, 4.7199999999789077e-07, 4.000000000000531e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.729999999973644e-07, 3.986000000000961e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 9.401999999998634e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.860000000009301e-07, 6.388999999999007e-06, 4.7199999999789077e-07], 'time': [0.021043069, 0.021043542, 0.021053778, 0.021054264, 0.021062722, 0.021063194, 0.021073708, 0.021074181, 0.021081569, 0.021082042, 0.021089028, 0.0210895, 0.021099833, 0.021100319, 0.021107861, 0.021108333, 0.021113764, 0.02111425, 0.021118361, 0.021118833, 0.021125847, 0.021126319, 0.021133528, 0.021134, 0.021139042, 0.021139514, 0.021147681, 0.021148153, 0.021157444, 0.021157917, 0.021162444, 0.021162917, 0.021171056, 0.021171542, 0.021178042, 0.021178514, 0.021188222, 0.021188694, 0.021199042, 0.021199514, 0.021209944, 0.021210431, 0.021220764, 0.021221236, 0.021230542, 0.021231014, 0.021237819, 0.021238292, 0.021245097, 0.021245569, 0.021255069, 0.021255556, 0.021264528, 0.021265014, 0.021273472, 0.021273958, 0.021283472, 0.021283944, 0.02129125, 0.021291736, 0.021298, 0.021298472, 0.02130425, 0.021304736, 0.021313111, 0.021313583, 0.021320708, 0.021321181, 0.021328486, 0.021328958, 0.021332861, 0.021333333, 0.021337417, 0.021337903, 0.021342208, 0.021342681, 0.021347708, 0.021348194, 0.021358111, 0.021358583, 0.021364764, 0.021365236, 0.021369236, 0.021369708, 0.021379222, 0.021379694, 0.021387333, 0.021387806, 0.021391792, 0.021392278, 0.021396167, 0.021396639, 0.021406458, 0.021406931, 0.021416333, 0.021416806, 0.021423917, 0.021424403, 0.021430792, 0.021431264], 'diff': [0, 4.729999999973644e-07, 1.0236000000000273e-05, 4.860000000009301e-07, 8.457999999999383e-06, 4.720000000013602e-07, 1.0513999999999663e-05, 4.7300000000083386e-07, 7.388000000000533e-06, 4.729999999973644e-07, 6.986000000000492e-06, 4.720000000013602e-07, 1.0332999999997788e-05, 4.860000000009301e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 5.431000000000186e-06, 4.860000000009301e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 7.208999999997606e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 9.291000000001548e-06, 4.729999999973644e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 8.139000000000757e-06, 4.860000000009301e-07, 6.499999999999562e-06, 4.7199999999789077e-07, 9.708000000000633e-06, 4.720000000013602e-07, 1.0348000000000301e-05, 4.7199999999789077e-07, 1.0430000000002243e-05, 4.869999999969343e-07, 1.0333000000001258e-05, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 6.805000000002087e-06, 4.729999999973644e-07, 6.805000000002087e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.869999999969343e-07, 8.972000000002922e-06, 4.859999999974607e-07, 8.458000000002852e-06, 4.859999999974607e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.859999999974607e-07, 6.264000000002351e-06, 4.7199999999789077e-07, 5.778000000001421e-06, 4.860000000009301e-07, 8.374999999997967e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7300000000083386e-07, 7.304999999999118e-06, 4.7199999999789077e-07, 3.903000000003015e-06, 4.7199999999789077e-07, 4.08400000000142e-06, 4.859999999974607e-07, 4.305000000003056e-06, 4.729999999973644e-07, 5.027000000001197e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.720000000013602e-07, 6.181000000000936e-06, 4.7199999999789077e-07, 4.000000000000531e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.729999999973644e-07, 3.986000000000961e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 9.401999999998634e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.860000000009301e-07, 6.388999999999007e-06, 4.7199999999789077e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:05.474" endtime="20201110 08:33:05.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.470" endtime="20201110 08:33:05.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:05.483" level="INFO">${RESULT} = [{'time': 0.021043542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021054264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:05.480" endtime="20201110 08:33:05.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:05.498" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:05.484" endtime="20201110 08:33:05.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.502" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:05.501" endtime="20201110 08:33:05.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.505" level="INFO">VALUE: [4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.869999999969343e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:33:05.503" endtime="20201110 08:33:05.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.499" endtime="20201110 08:33:05.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.508" endtime="20201110 08:33:05.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:05.512" endtime="20201110 08:33:05.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.510" endtime="20201110 08:33:05.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.506" endtime="20201110 08:33:05.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.082" endtime="20201110 08:33:05.533"></status>
</kw>
<msg timestamp="20201110 08:33:05.533" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.541" endtime="20201110 08:33:05.557"></status>
</kw>
<msg timestamp="20201110 08:33:05.558" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:05.539" endtime="20201110 08:33:05.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.561" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:05.559" endtime="20201110 08:33:05.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.562" endtime="20201110 08:33:05.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.537" endtime="20201110 08:33:05.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.535" endtime="20201110 08:33:05.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.571" endtime="20201110 08:33:05.861"></status>
</kw>
<msg timestamp="20201110 08:33:05.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021464222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021464694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:05.570" endtime="20201110 08:33:05.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021464222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021464694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:05.865" endtime="20201110 08:33:05.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.874" endtime="20201110 08:33:05.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.567" endtime="20201110 08:33:05.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.565" endtime="20201110 08:33:05.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.881" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:05.880" endtime="20201110 08:33:05.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.886" level="INFO">VALUE: [{'time': 0.021464222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021464694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02147275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.021473222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021482944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.021483417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021491917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999998092e-06, 'source_diff': 8.499999999998092e-06}, {'time': 0.021492389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021499458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.021499931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021505486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.021505958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021515875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.021516361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021526583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.021527056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021532319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.263000000001877e-06, 'source_diff': 5.263000000001877e-06}, {'time': 0.021532792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021536889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.021537361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021542389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.021542861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021552792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.021553264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021559028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.0215595, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021568681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.021569153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021575861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.021576333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021581778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.02158225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021587292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.021587764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02159175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.021592236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021598764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.021599236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021606194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9579999999978825e-06, 'source_diff': 6.9579999999978825e-06}, {'time': 0.021606681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021612639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.021613125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021623458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.021623931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021627819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888000000000502e-06, 'source_diff': 3.888000000000502e-06}, {'time': 0.021628292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021636347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.021636819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021640875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.021641347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021651, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.021651472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021655889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.021656361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021665028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.021665514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021670847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.021671333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021675528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.021676014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021685944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.021686417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021690806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.021691292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021698306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.021698778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021706917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.021707403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021711819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.021712292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021716722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.021717194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021726486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.021726958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021731236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.021731722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021739556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.8340000000017e-06, 'source_diff': 7.8340000000017e-06}, {'time': 0.021740042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021749861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999997718e-06, 'source_diff': 9.818999999997718e-06}, {'time': 0.021750347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021756069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.021756542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021763931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.021764403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021771333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.929999999998743e-06, 'source_diff': 6.929999999998743e-06}, {'time': 0.021771806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021777875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.021778361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021784542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.021785028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021791958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.929999999998743e-06, 'source_diff': 6.929999999998743e-06}, {'time': 0.021792431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021798861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.429999999998243e-06, 'source_diff': 6.429999999998243e-06}, {'time': 0.021799333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021808292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958999999999356e-06, 'source_diff': 8.958999999999356e-06}, {'time': 0.021808764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021815139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.021815611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021821264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.021821736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:33:05.882" endtime="20201110 08:33:05.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.878" endtime="20201110 08:33:05.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:05.914" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:05.889" endtime="20201110 08:33:05.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.918" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:05.917" endtime="20201110 08:33:05.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.922" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.7199999999789077e-07, 8.055999999999341e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7300000000083386e-07, 8.499999999998092e-06, 4.720000000013602e-07, 7.068999999998438e-06, 4.7300000000083386e-07, 5.555000000000837e-06, 4.7199999999789077e-07, 9.917000000001647e-06, 4.860000000009301e-07, 1.0221999999997233e-05, 4.7300000000083386e-07, 5.263000000001877e-06, 4.729999999973644e-07, 4.097000000001516e-06, 4.720000000013602e-07, 5.027999999997201e-06, 4.720000000013602e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 6.708000000001102e-06, 4.7199999999789077e-07, 5.444999999999756e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 3.986000000000961e-06, 4.860000000009301e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 6.9579999999978825e-06, 4.870000000004038e-07, 5.958000000000352e-06, 4.860000000009301e-07, 1.0333000000001258e-05, 4.729999999973644e-07, 3.888000000000502e-06, 4.7300000000083386e-07, 8.054999999999868e-06, 4.720000000013602e-07, 4.0559999999988106e-06, 4.7199999999789077e-07, 9.653000000001827e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.860000000009301e-07, 5.332999999999727e-06, 4.860000000009301e-07, 4.1949999999985055e-06, 4.860000000009301e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 4.389000000000476e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.860000000009301e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.720000000013602e-07, 4.277999999999921e-06, 4.859999999974607e-07, 7.8340000000017e-06, 4.860000000009301e-07, 9.818999999997718e-06, 4.860000000009301e-07, 5.721999999999672e-06, 4.7300000000083386e-07, 7.389000000000007e-06, 4.720000000013602e-07, 6.929999999998743e-06, 4.7300000000083386e-07, 6.0689999999974376e-06, 4.860000000009301e-07, 6.181000000000936e-06, 4.860000000009301e-07, 6.929999999998743e-06, 4.7300000000083386e-07, 6.429999999998243e-06, 4.720000000013602e-07, 8.958999999999356e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07], 'time': [0.021464222, 0.021464694, 0.02147275, 0.021473222, 0.021482944, 0.021483417, 0.021491917, 0.021492389, 0.021499458, 0.021499931, 0.021505486, 0.021505958, 0.021515875, 0.021516361, 0.021526583, 0.021527056, 0.021532319, 0.021532792, 0.021536889, 0.021537361, 0.021542389, 0.021542861, 0.021552792, 0.021553264, 0.021559028, 0.0215595, 0.021568681, 0.021569153, 0.021575861, 0.021576333, 0.021581778, 0.02158225, 0.021587292, 0.021587764, 0.02159175, 0.021592236, 0.021598764, 0.021599236, 0.021606194, 0.021606681, 0.021612639, 0.021613125, 0.021623458, 0.021623931, 0.021627819, 0.021628292, 0.021636347, 0.021636819, 0.021640875, 0.021641347, 0.021651, 0.021651472, 0.021655889, 0.021656361, 0.021665028, 0.021665514, 0.021670847, 0.021671333, 0.021675528, 0.021676014, 0.021685944, 0.021686417, 0.021690806, 0.021691292, 0.021698306, 0.021698778, 0.021706917, 0.021707403, 0.021711819, 0.021712292, 0.021716722, 0.021717194, 0.021726486, 0.021726958, 0.021731236, 0.021731722, 0.021739556, 0.021740042, 0.021749861, 0.021750347, 0.021756069, 0.021756542, 0.021763931, 0.021764403, 0.021771333, 0.021771806, 0.021777875, 0.021778361, 0.021784542, 0.021785028, 0.021791958, 0.021792431, 0.021798861, 0.021799333, 0.021808292, 0.021808764, 0.021815139, 0.021815611, 0.021821264, 0.021821736], 'diff': [0, 4.7199999999789077e-07, 8.055999999999341e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7300000000083386e-07, 8.499999999998092e-06, 4.720000000013602e-07, 7.068999999998438e-06, 4.7300000000083386e-07, 5.555000000000837e-06, 4.7199999999789077e-07, 9.917000000001647e-06, 4.860000000009301e-07, 1.0221999999997233e-05, 4.7300000000083386e-07, 5.263000000001877e-06, 4.729999999973644e-07, 4.097000000001516e-06, 4.720000000013602e-07, 5.027999999997201e-06, 4.720000000013602e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 6.708000000001102e-06, 4.7199999999789077e-07, 5.444999999999756e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 3.986000000000961e-06, 4.860000000009301e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 6.9579999999978825e-06, 4.870000000004038e-07, 5.958000000000352e-06, 4.860000000009301e-07, 1.0333000000001258e-05, 4.729999999973644e-07, 3.888000000000502e-06, 4.7300000000083386e-07, 8.054999999999868e-06, 4.720000000013602e-07, 4.0559999999988106e-06, 4.7199999999789077e-07, 9.653000000001827e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.860000000009301e-07, 5.332999999999727e-06, 4.860000000009301e-07, 4.1949999999985055e-06, 4.860000000009301e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 4.389000000000476e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.860000000009301e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.720000000013602e-07, 4.277999999999921e-06, 4.859999999974607e-07, 7.8340000000017e-06, 4.860000000009301e-07, 9.818999999997718e-06, 4.860000000009301e-07, 5.721999999999672e-06, 4.7300000000083386e-07, 7.389000000000007e-06, 4.720000000013602e-07, 6.929999999998743e-06, 4.7300000000083386e-07, 6.0689999999974376e-06, 4.860000000009301e-07, 6.181000000000936e-06, 4.860000000009301e-07, 6.929999999998743e-06, 4.7300000000083386e-07, 6.429999999998243e-06, 4.720000000013602e-07, 8.958999999999356e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201110 08:33:05.919" endtime="20201110 08:33:05.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.915" endtime="20201110 08:33:05.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:05.928" level="INFO">${RESULT} = [{'time': 0.021464694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021473222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:05.925" endtime="20201110 08:33:05.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:05.942" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:05.929" endtime="20201110 08:33:05.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.946" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:05.945" endtime="20201110 08:33:05.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.949" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:33:05.947" endtime="20201110 08:33:05.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.943" endtime="20201110 08:33:05.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.952" endtime="20201110 08:33:05.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:05.956" endtime="20201110 08:33:05.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.954" endtime="20201110 08:33:05.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.951" endtime="20201110 08:33:05.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.534" endtime="20201110 08:33:05.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.950" endtime="20201110 08:33:05.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:05.981" endtime="20201110 08:33:06.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.979" endtime="20201110 08:33:06.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.978" endtime="20201110 08:33:06.001"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:56.878" endtime="20201110 08:33:06.002" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:06.009" endtime="20201110 08:33:06.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.007" endtime="20201110 08:33:06.029"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.043" endtime="20201110 08:33:06.061"></status>
</kw>
<msg timestamp="20201110 08:33:06.062" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.042" endtime="20201110 08:33:06.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.064" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.063" endtime="20201110 08:33:06.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.068" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:06.066" endtime="20201110 08:33:06.068"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:06.039" endtime="20201110 08:33:06.069"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:06.036" endtime="20201110 08:33:06.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.035" endtime="20201110 08:33:06.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:06.074" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:06.073" endtime="20201110 08:33:06.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.071" endtime="20201110 08:33:06.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.033" endtime="20201110 08:33:06.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.033" endtime="20201110 08:33:06.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.075" endtime="20201110 08:33:06.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.031" endtime="20201110 08:33:06.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.029" endtime="20201110 08:33:06.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.006" endtime="20201110 08:33:06.078"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:33:06.080" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.088" endtime="20201110 08:33:06.106"></status>
</kw>
<msg timestamp="20201110 08:33:06.106" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.086" endtime="20201110 08:33:06.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.109" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.107" endtime="20201110 08:33:06.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.110" endtime="20201110 08:33:06.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.084" endtime="20201110 08:33:06.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.082" endtime="20201110 08:33:06.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.120" endtime="20201110 08:33:06.404"></status>
</kw>
<msg timestamp="20201110 08:33:06.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072821181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072825486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:06.118" endtime="20201110 08:33:06.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072821181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072825486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:06.408" endtime="20201110 08:33:06.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.417" endtime="20201110 08:33:06.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.115" endtime="20201110 08:33:06.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.113" endtime="20201110 08:33:06.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:06.424" level="INFO">${RESULT} = [{'time': 0.072825486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3049999999961175e-06, 'source_diff': 4.3049999999961175e-06}, {'time': 0.072834139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:06.421" endtime="20201110 08:33:06.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:06.438" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:06.425" endtime="20201110 08:33:06.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.443" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:06.442" endtime="20201110 08:33:06.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.446" level="INFO">VALUE: [4.3049999999961175e-06, 4.29200000000296e-06, 4.333000000009135e-06, 4.278000000010329e-06, 4.29200000000296e-06, 4.305000000009995e-06, 4.360999999994397e-06, 4.361000000008275e-06, 4.305999999995591e-06, 4.3049999999961175e-06, 4.2499999999973115e-06, 4.277999999996451e-06, 4.3200000000021e-06, 4.29200000000296e-06, 4.26400000000382e-06, 4.2910000000034865e-06, 4.277999999996451e-06, 4.291999999989082e-06, 4.29200000000296e-06, 4.1949999999985055e-06, 4.29200000000296e-06, 4.305999999995591e-06, 4.26400000000382e-06, 4.277999999996451e-06, 4.277999999996451e-06, 4.221999999998172e-06, 4.26400000000382e-06, 4.319999999988222e-06, 4.3200000000021e-06, 4.3049999999961175e-06, 4.347000000001766e-06, 4.3049999999961175e-06, 4.277999999996451e-06, 4.319000000002626e-06, 4.375000000000906e-06, 4.276999999996978e-06, 4.277999999996451e-06, 4.333000000009135e-06, 4.305999999995591e-06, 4.29200000000296e-06, 4.29200000000296e-06, 4.2639999999899425e-06, 4.290999999989609e-06, 4.3049999999961175e-06, 4.347000000001766e-06, 4.305999999995591e-06, 4.29200000000296e-06, 4.305999999995591e-06, 4.278000000010329e-06, 4.305999999995591e-06]</msg>
<status status="PASS" starttime="20201110 08:33:06.444" endtime="20201110 08:33:06.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.440" endtime="20201110 08:33:06.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.449" endtime="20201110 08:33:06.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:06.453" endtime="20201110 08:33:06.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.451" endtime="20201110 08:33:06.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.447" endtime="20201110 08:33:06.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.081" endtime="20201110 08:33:06.473"></status>
</kw>
<msg timestamp="20201110 08:33:06.474" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.482" endtime="20201110 08:33:06.497"></status>
</kw>
<msg timestamp="20201110 08:33:06.498" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.480" endtime="20201110 08:33:06.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.500" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.499" endtime="20201110 08:33:06.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.501" endtime="20201110 08:33:06.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.477" endtime="20201110 08:33:06.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.476" endtime="20201110 08:33:06.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.510" endtime="20201110 08:33:06.796"></status>
</kw>
<msg timestamp="20201110 08:33:06.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020662056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020666361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:06.509" endtime="20201110 08:33:06.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020662056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020666361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:06.800" endtime="20201110 08:33:06.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.809" endtime="20201110 08:33:06.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.506" endtime="20201110 08:33:06.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.504" endtime="20201110 08:33:06.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:06.816" level="INFO">${RESULT} = [{'time': 0.020666361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.020679625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:06.812" endtime="20201110 08:33:06.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:06.830" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:06.817" endtime="20201110 08:33:06.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.834" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:06.833" endtime="20201110 08:33:06.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.837" level="INFO">VALUE: [4.304999999999587e-06, 4.347000000001766e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.319000000002626e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.304999999999587e-06, 4.305999999999061e-06, 4.291999999999491e-06, 4.305999999999061e-06, 4.319000000002626e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.291000000000017e-06, 4.263000000000877e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.318999999999157e-06, 4.389000000000476e-06, 4.277999999999921e-06, 4.318999999999157e-06, 4.318999999999157e-06, 4.291999999999491e-06, 4.30600000000253e-06, 4.263999999996881e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.264000000000351e-06, 4.291000000000017e-06, 4.3199999999986305e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.221999999998172e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.208999999998075e-06, 4.305999999999061e-06, 4.291999999999491e-06]</msg>
<status status="PASS" starttime="20201110 08:33:06.835" endtime="20201110 08:33:06.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.831" endtime="20201110 08:33:06.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.840" endtime="20201110 08:33:06.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:06.843" endtime="20201110 08:33:06.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.842" endtime="20201110 08:33:06.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.838" endtime="20201110 08:33:06.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.474" endtime="20201110 08:33:06.864"></status>
</kw>
<msg timestamp="20201110 08:33:06.865" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.873" endtime="20201110 08:33:06.891"></status>
</kw>
<msg timestamp="20201110 08:33:06.891" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.871" endtime="20201110 08:33:06.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.894" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.892" endtime="20201110 08:33:06.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.895" endtime="20201110 08:33:06.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.868" endtime="20201110 08:33:06.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.866" endtime="20201110 08:33:06.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.904" endtime="20201110 08:33:07.189"></status>
</kw>
<msg timestamp="20201110 08:33:07.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021735153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:06.903" endtime="20201110 08:33:07.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021735153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:07.194" endtime="20201110 08:33:07.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.202" endtime="20201110 08:33:07.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.900" endtime="20201110 08:33:07.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.898" endtime="20201110 08:33:07.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:07.210" level="INFO">${RESULT} = [{'time': 0.021735153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.021749708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:07.206" endtime="20201110 08:33:07.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:07.223" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:07.211" endtime="20201110 08:33:07.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.228" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:07.227" endtime="20201110 08:33:07.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.230" level="INFO">VALUE: [4.222000000001641e-06, 4.236000000001211e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.333000000002196e-06, 4.2359999999977416e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.319000000002626e-06, 4.277999999999921e-06, 4.221999999998172e-06, 4.291000000000017e-06, 4.277000000000447e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.3199999999986305e-06, 4.29200000000296e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.318999999999157e-06, 4.291999999999491e-06, 4.305000000003056e-06, 4.304999999999587e-06, 4.291999999999491e-06, 4.305999999999061e-06, 4.30600000000253e-06, 4.291999999999491e-06, 4.3199999999986305e-06, 4.304999999999587e-06, 4.305999999999061e-06, 4.304999999999587e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.250000000000781e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.346999999998297e-06, 4.361000000001336e-06, 4.277999999999921e-06, 4.264000000000351e-06]</msg>
<status status="PASS" starttime="20201110 08:33:07.229" endtime="20201110 08:33:07.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.224" endtime="20201110 08:33:07.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.234" endtime="20201110 08:33:07.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:07.237" endtime="20201110 08:33:07.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.236" endtime="20201110 08:33:07.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.232" endtime="20201110 08:33:07.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.865" endtime="20201110 08:33:07.258"></status>
</kw>
<msg timestamp="20201110 08:33:07.259" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.267" endtime="20201110 08:33:07.281"></status>
</kw>
<msg timestamp="20201110 08:33:07.282" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.265" endtime="20201110 08:33:07.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.285" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.283" endtime="20201110 08:33:07.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.286" endtime="20201110 08:33:07.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.262" endtime="20201110 08:33:07.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.260" endtime="20201110 08:33:07.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.295" endtime="20201110 08:33:07.619"></status>
</kw>
<msg timestamp="20201110 08:33:07.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019656875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:07.293" endtime="20201110 08:33:07.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019656875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:07.632" endtime="20201110 08:33:07.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.658" endtime="20201110 08:33:07.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.291" endtime="20201110 08:33:07.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.289" endtime="20201110 08:33:07.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:07.672" level="INFO">${RESULT} = [{'time': 0.019656875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.019665208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:07.668" endtime="20201110 08:33:07.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:07.687" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:07.674" endtime="20201110 08:33:07.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.691" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:07.690" endtime="20201110 08:33:07.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.694" level="INFO">VALUE: [4.277999999999921e-06, 4.291000000000017e-06, 4.236000000001211e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.2359999999977416e-06, 4.277999999999921e-06, 4.3200000000021e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.291999999999491e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.29200000000296e-06, 4.3339999999982e-06, 4.277999999999921e-06, 4.34799999999777e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.3200000000021e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.318999999999157e-06, 4.291999999999491e-06, 4.263999999996881e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.305000000003056e-06, 4.277000000000447e-06, 4.3199999999986305e-06, 4.318999999999157e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.291999999999491e-06, 4.3200000000021e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.305000000003056e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.264000000000351e-06]</msg>
<status status="PASS" starttime="20201110 08:33:07.692" endtime="20201110 08:33:07.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.688" endtime="20201110 08:33:07.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.697" endtime="20201110 08:33:07.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:07.701" endtime="20201110 08:33:07.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.699" endtime="20201110 08:33:07.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.695" endtime="20201110 08:33:07.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.259" endtime="20201110 08:33:07.722"></status>
</kw>
<msg timestamp="20201110 08:33:07.722" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.730" endtime="20201110 08:33:07.748"></status>
</kw>
<msg timestamp="20201110 08:33:07.748" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.728" endtime="20201110 08:33:07.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.751" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.750" endtime="20201110 08:33:07.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.752" endtime="20201110 08:33:07.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.725" endtime="20201110 08:33:07.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.724" endtime="20201110 08:33:07.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.761" endtime="20201110 08:33:08.048"></status>
</kw>
<msg timestamp="20201110 08:33:08.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023618681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023622944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:07.760" endtime="20201110 08:33:08.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023618681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023622944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:08.052" endtime="20201110 08:33:08.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.061" endtime="20201110 08:33:08.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.757" endtime="20201110 08:33:08.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.755" endtime="20201110 08:33:08.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:08.067" level="INFO">${RESULT} = [{'time': 0.023622944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.263000000000877e-06, 'source_diff': 4.263000000000877e-06}, {'time': 0.023633444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:08.064" endtime="20201110 08:33:08.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:08.082" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:08.068" endtime="20201110 08:33:08.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.086" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:08.085" endtime="20201110 08:33:08.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.088" level="INFO">VALUE: [4.263000000000877e-06, 4.222000000001641e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.332999999998727e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.262999999997408e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.360999999997867e-06, 4.305000000003056e-06, 4.3200000000021e-06, 4.304999999999587e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.3199999999986305e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.3199999999986305e-06, 4.305999999999061e-06, 4.276999999996978e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.305999999999061e-06, 4.3749999999974365e-06, 4.304999999999587e-06, 4.305000000003056e-06, 4.332999999998727e-06, 4.222000000001641e-06, 4.305999999999061e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.30600000000253e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.29200000000296e-06]</msg>
<status status="PASS" starttime="20201110 08:33:08.087" endtime="20201110 08:33:08.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.082" endtime="20201110 08:33:08.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.091" endtime="20201110 08:33:08.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:08.095" endtime="20201110 08:33:08.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.093" endtime="20201110 08:33:08.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.090" endtime="20201110 08:33:08.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.722" endtime="20201110 08:33:08.115"></status>
</kw>
<msg timestamp="20201110 08:33:08.116" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.123" endtime="20201110 08:33:08.145"></status>
</kw>
<msg timestamp="20201110 08:33:08.145" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.122" endtime="20201110 08:33:08.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.147" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.146" endtime="20201110 08:33:08.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.148" endtime="20201110 08:33:08.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.119" endtime="20201110 08:33:08.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.117" endtime="20201110 08:33:08.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.158" endtime="20201110 08:33:08.478"></status>
</kw>
<msg timestamp="20201110 08:33:08.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02150325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021507542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:08.156" endtime="20201110 08:33:08.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02150325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021507542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:08.483" endtime="20201110 08:33:08.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.492" endtime="20201110 08:33:08.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.153" endtime="20201110 08:33:08.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.152" endtime="20201110 08:33:08.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:08.499" level="INFO">${RESULT} = [{'time': 0.021507542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.021521069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:08.495" endtime="20201110 08:33:08.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:08.512" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:08.500" endtime="20201110 08:33:08.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.517" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:08.516" endtime="20201110 08:33:08.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.520" level="INFO">VALUE: [4.291999999999491e-06, 4.291000000000017e-06, 4.263999999996881e-06, 4.333000000002196e-06, 4.291999999999491e-06, 4.193999999999032e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.304999999999587e-06, 4.291999999999491e-06, 4.318999999999157e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.333000000002196e-06, 4.29200000000296e-06, 4.318999999999157e-06, 4.304999999999587e-06, 4.29200000000296e-06, 4.277000000000447e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.305999999999061e-06, 4.263000000000877e-06, 4.3199999999986305e-06, 4.332999999998727e-06, 4.277999999999921e-06, 4.305000000003056e-06, 4.264000000000351e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.318999999999157e-06, 4.291000000000017e-06, 4.250000000000781e-06, 4.277000000000447e-06, 4.347000000001766e-06, 4.277999999999921e-06, 4.29200000000296e-06, 4.277999999999921e-06, 4.3200000000021e-06, 4.305999999999061e-06]</msg>
<status status="PASS" starttime="20201110 08:33:08.518" endtime="20201110 08:33:08.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.513" endtime="20201110 08:33:08.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.523" endtime="20201110 08:33:08.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:08.526" endtime="20201110 08:33:08.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.525" endtime="20201110 08:33:08.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.521" endtime="20201110 08:33:08.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.116" endtime="20201110 08:33:08.547"></status>
</kw>
<msg timestamp="20201110 08:33:08.547" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.555" endtime="20201110 08:33:08.572"></status>
</kw>
<msg timestamp="20201110 08:33:08.573" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.554" endtime="20201110 08:33:08.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.575" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.574" endtime="20201110 08:33:08.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.576" endtime="20201110 08:33:08.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.551" endtime="20201110 08:33:08.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.549" endtime="20201110 08:33:08.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.586" endtime="20201110 08:33:08.874"></status>
</kw>
<msg timestamp="20201110 08:33:08.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021948139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:08.585" endtime="20201110 08:33:08.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021948139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:08.880" endtime="20201110 08:33:08.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.891" endtime="20201110 08:33:08.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.582" endtime="20201110 08:33:08.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.580" endtime="20201110 08:33:08.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:08.898" level="INFO">${RESULT} = [{'time': 0.021948139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.021956569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:08.894" endtime="20201110 08:33:08.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:08.912" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:08.899" endtime="20201110 08:33:08.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.916" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:08.915" endtime="20201110 08:33:08.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.919" level="INFO">VALUE: [4.291999999999491e-06, 4.276999999996978e-06, 4.361000000001336e-06, 4.250000000000781e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.389000000000476e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.29200000000296e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.346999999998297e-06, 4.29200000000296e-06, 4.250000000000781e-06, 4.305999999999061e-06, 4.3199999999986305e-06, 4.346999999998297e-06, 4.29200000000296e-06, 4.360999999997867e-06, 4.277999999999921e-06, 4.2359999999977416e-06, 4.264000000000351e-06, 4.333000000002196e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.30600000000253e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.291999999999491e-06]</msg>
<status status="PASS" starttime="20201110 08:33:08.917" endtime="20201110 08:33:08.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.913" endtime="20201110 08:33:08.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.922" endtime="20201110 08:33:08.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:08.925" endtime="20201110 08:33:08.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.924" endtime="20201110 08:33:08.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.920" endtime="20201110 08:33:08.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.548" endtime="20201110 08:33:08.946"></status>
</kw>
<msg timestamp="20201110 08:33:08.947" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.954" endtime="20201110 08:33:08.969"></status>
</kw>
<msg timestamp="20201110 08:33:08.969" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.953" endtime="20201110 08:33:08.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.972" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.971" endtime="20201110 08:33:08.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.974" endtime="20201110 08:33:08.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.950" endtime="20201110 08:33:08.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.949" endtime="20201110 08:33:08.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.983" endtime="20201110 08:33:09.271"></status>
</kw>
<msg timestamp="20201110 08:33:09.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019616556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:08.981" endtime="20201110 08:33:09.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019616556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:09.276" endtime="20201110 08:33:09.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.284" endtime="20201110 08:33:09.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.979" endtime="20201110 08:33:09.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.977" endtime="20201110 08:33:09.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:09.291" level="INFO">${RESULT} = [{'time': 0.019616556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.019625292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:09.288" endtime="20201110 08:33:09.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:09.305" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:09.292" endtime="20201110 08:33:09.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.309" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:09.308" endtime="20201110 08:33:09.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.312" level="INFO">VALUE: [4.277999999999921e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.291999999999491e-06, 4.263999999996881e-06, 4.291999999999491e-06, 4.264000000000351e-06, 4.319000000002626e-06, 4.305000000003056e-06, 4.277999999999921e-06, 4.30600000000253e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.305999999999061e-06, 4.27800000000339e-06, 4.277000000000447e-06, 4.318999999999157e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.2499999999973115e-06, 4.193999999999032e-06, 4.2359999999977416e-06, 4.304999999999587e-06, 4.291999999999491e-06, 4.319000000002626e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.360999999997867e-06, 4.277000000000447e-06, 4.33400000000167e-06, 4.361000000001336e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.207999999998602e-06, 4.276999999996978e-06, 4.27800000000339e-06, 4.305999999999061e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.291999999999491e-06]</msg>
<status status="PASS" starttime="20201110 08:33:09.311" endtime="20201110 08:33:09.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.306" endtime="20201110 08:33:09.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.315" endtime="20201110 08:33:09.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:09.319" endtime="20201110 08:33:09.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.317" endtime="20201110 08:33:09.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.313" endtime="20201110 08:33:09.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.947" endtime="20201110 08:33:09.340"></status>
</kw>
<msg timestamp="20201110 08:33:09.340" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.348" endtime="20201110 08:33:09.365"></status>
</kw>
<msg timestamp="20201110 08:33:09.366" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.346" endtime="20201110 08:33:09.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.368" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.367" endtime="20201110 08:33:09.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.370" endtime="20201110 08:33:09.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.344" endtime="20201110 08:33:09.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.342" endtime="20201110 08:33:09.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.379" endtime="20201110 08:33:09.670"></status>
</kw>
<msg timestamp="20201110 08:33:09.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023131681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023135986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:09.377" endtime="20201110 08:33:09.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023131681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023135986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:09.674" endtime="20201110 08:33:09.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.683" endtime="20201110 08:33:09.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.375" endtime="20201110 08:33:09.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.373" endtime="20201110 08:33:09.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:09.690" level="INFO">${RESULT} = [{'time': 0.023135986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.023146097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:09.686" endtime="20201110 08:33:09.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:09.705" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:09.691" endtime="20201110 08:33:09.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.709" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:09.708" endtime="20201110 08:33:09.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.712" level="INFO">VALUE: [4.304999999999587e-06, 4.291000000000017e-06, 4.305000000003056e-06, 4.375000000000906e-06, 4.305000000003056e-06, 4.291999999999491e-06, 4.346999999998297e-06, 4.304999999999587e-06, 4.305999999999061e-06, 4.291999999999491e-06, 4.27800000000339e-06, 4.304999999999587e-06, 4.29200000000296e-06, 4.305999999999061e-06, 4.305999999999061e-06, 4.277000000000447e-06, 4.3199999999986305e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.3199999999986305e-06, 4.277999999999921e-06, 4.347000000001766e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.291000000000017e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.29200000000296e-06, 4.318999999999157e-06, 4.29200000000296e-06, 4.305999999999061e-06, 4.30600000000253e-06, 4.3199999999986305e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.29200000000296e-06, 4.305999999999061e-06, 4.3200000000021e-06, 4.277999999999921e-06, 4.333000000002196e-06, 4.291999999999491e-06]</msg>
<status status="PASS" starttime="20201110 08:33:09.710" endtime="20201110 08:33:09.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.706" endtime="20201110 08:33:09.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.715" endtime="20201110 08:33:09.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:09.719" endtime="20201110 08:33:09.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.717" endtime="20201110 08:33:09.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.713" endtime="20201110 08:33:09.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.341" endtime="20201110 08:33:09.740"></status>
</kw>
<msg timestamp="20201110 08:33:09.740" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.748" endtime="20201110 08:33:09.764"></status>
</kw>
<msg timestamp="20201110 08:33:09.765" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.747" endtime="20201110 08:33:09.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.767" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.766" endtime="20201110 08:33:09.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.768" endtime="20201110 08:33:09.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.744" endtime="20201110 08:33:09.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.742" endtime="20201110 08:33:09.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.778" endtime="20201110 08:33:10.068"></status>
</kw>
<msg timestamp="20201110 08:33:10.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:09.776" endtime="20201110 08:33:10.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.074" endtime="20201110 08:33:10.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.086" endtime="20201110 08:33:10.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.773" endtime="20201110 08:33:10.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.772" endtime="20201110 08:33:10.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:10.099" level="INFO">${RESULT} = [{'time': 0.020298056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34799999999777e-06, 'source_diff': 4.34799999999777e-06}, {'time': 0.020307125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:10.093" endtime="20201110 08:33:10.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:10.114" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:10.101" endtime="20201110 08:33:10.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.118" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:10.117" endtime="20201110 08:33:10.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.121" level="INFO">VALUE: [4.34799999999777e-06, 4.346999999998297e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.318999999999157e-06, 4.333000000002196e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.305000000003056e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.305000000003056e-06, 4.291000000000017e-06, 4.318999999999157e-06, 4.277000000000447e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.291999999999491e-06, 4.3199999999986305e-06, 4.264000000000351e-06, 4.291000000000017e-06, 4.346999999998297e-06, 4.291000000000017e-06, 4.304999999999587e-06, 4.193999999999032e-06, 4.3339999999982e-06, 4.304999999999587e-06, 4.29200000000296e-06, 4.277999999999921e-06, 4.222000000001641e-06, 4.305999999999061e-06, 4.319000000002626e-06, 4.30600000000253e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.2359999999977416e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.3339999999982e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.30600000000253e-06, 4.305999999999061e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.3199999999986305e-06, 4.277000000000447e-06, 4.250000000000781e-06]</msg>
<status status="PASS" starttime="20201110 08:33:10.120" endtime="20201110 08:33:10.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.115" endtime="20201110 08:33:10.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.125" endtime="20201110 08:33:10.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:10.128" endtime="20201110 08:33:10.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.126" endtime="20201110 08:33:10.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.123" endtime="20201110 08:33:10.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.740" endtime="20201110 08:33:10.150"></status>
</kw>
<msg timestamp="20201110 08:33:10.150" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.158" endtime="20201110 08:33:10.175"></status>
</kw>
<msg timestamp="20201110 08:33:10.175" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:10.156" endtime="20201110 08:33:10.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.178" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:10.176" endtime="20201110 08:33:10.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.179" endtime="20201110 08:33:10.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.153" endtime="20201110 08:33:10.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.152" endtime="20201110 08:33:10.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.188" endtime="20201110 08:33:10.473"></status>
</kw>
<msg timestamp="20201110 08:33:10.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.187" endtime="20201110 08:33:10.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.478" endtime="20201110 08:33:10.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.486" endtime="20201110 08:33:10.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.184" endtime="20201110 08:33:10.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.182" endtime="20201110 08:33:10.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:10.493" level="INFO">${RESULT} = [{'time': 0.022661958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.022672472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:10.490" endtime="20201110 08:33:10.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:10.507" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:10.494" endtime="20201110 08:33:10.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.511" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:10.510" endtime="20201110 08:33:10.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.514" level="INFO">VALUE: [4.291000000000017e-06, 4.291000000000017e-06, 4.2499999999973115e-06, 4.304999999999587e-06, 4.236000000001211e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.2499999999973115e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.30600000000253e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.305999999999061e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.250000000000781e-06, 4.318999999999157e-06, 4.305999999999061e-06, 4.236000000001211e-06, 4.277999999999921e-06, 4.318999999999157e-06, 4.333000000002196e-06, 4.318999999999157e-06, 4.305999999999061e-06, 4.318999999999157e-06, 4.291000000000017e-06, 4.3199999999986305e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.277000000000447e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.304999999999587e-06, 4.264000000000351e-06, 4.305999999999061e-06, 4.264000000000351e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.291000000000017e-06, 4.318999999999157e-06]</msg>
<status status="PASS" starttime="20201110 08:33:10.512" endtime="20201110 08:33:10.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.508" endtime="20201110 08:33:10.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.525" endtime="20201110 08:33:10.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:10.529" endtime="20201110 08:33:10.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.527" endtime="20201110 08:33:10.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.523" endtime="20201110 08:33:10.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.150" endtime="20201110 08:33:10.550"></status>
</kw>
<msg timestamp="20201110 08:33:10.550" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.558" endtime="20201110 08:33:10.572"></status>
</kw>
<msg timestamp="20201110 08:33:10.573" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:10.556" endtime="20201110 08:33:10.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.575" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:10.574" endtime="20201110 08:33:10.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.576" endtime="20201110 08:33:10.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.554" endtime="20201110 08:33:10.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.552" endtime="20201110 08:33:10.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.586" endtime="20201110 08:33:10.873"></status>
</kw>
<msg timestamp="20201110 08:33:10.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018765458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018769722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.584" endtime="20201110 08:33:10.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018765458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018769722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.879" endtime="20201110 08:33:10.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.889" endtime="20201110 08:33:10.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.582" endtime="20201110 08:33:10.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.580" endtime="20201110 08:33:10.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:10.896" level="INFO">${RESULT} = [{'time': 0.018769722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.018782819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:10.893" endtime="20201110 08:33:10.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:10.910" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:10.897" endtime="20201110 08:33:10.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.914" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:10.913" endtime="20201110 08:33:10.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.917" level="INFO">VALUE: [4.264000000000351e-06, 4.375000000000906e-06, 4.291000000000017e-06, 4.305999999999061e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.30600000000253e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.2499999999973115e-06, 4.305000000003056e-06, 4.264000000000351e-06, 4.305999999999061e-06, 4.264000000000351e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.3200000000021e-06, 4.291000000000017e-06, 4.375000000000906e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.30600000000253e-06, 4.30600000000253e-06, 4.291999999999491e-06, 4.2359999999977416e-06, 4.291000000000017e-06, 4.375000000000906e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.305999999999061e-06, 4.305999999999061e-06, 4.291999999999491e-06, 4.264000000000351e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.346999999998297e-06, 4.304999999999587e-06, 4.389000000000476e-06, 4.291000000000017e-06, 4.222000000001641e-06]</msg>
<status status="PASS" starttime="20201110 08:33:10.915" endtime="20201110 08:33:10.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.911" endtime="20201110 08:33:10.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.921" endtime="20201110 08:33:10.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:10.924" endtime="20201110 08:33:10.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.923" endtime="20201110 08:33:10.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.919" endtime="20201110 08:33:10.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.551" endtime="20201110 08:33:10.945"></status>
</kw>
<msg timestamp="20201110 08:33:10.946" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.953" endtime="20201110 08:33:10.969"></status>
</kw>
<msg timestamp="20201110 08:33:10.969" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:10.952" endtime="20201110 08:33:10.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.972" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:10.970" endtime="20201110 08:33:10.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.973" endtime="20201110 08:33:10.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.949" endtime="20201110 08:33:10.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.947" endtime="20201110 08:33:10.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.983" endtime="20201110 08:33:11.272"></status>
</kw>
<msg timestamp="20201110 08:33:11.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020285222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.981" endtime="20201110 08:33:11.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020285222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:11.276" endtime="20201110 08:33:11.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.285" endtime="20201110 08:33:11.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.978" endtime="20201110 08:33:11.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.976" endtime="20201110 08:33:11.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:11.292" level="INFO">${RESULT} = [{'time': 0.020285222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.020294486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:11.288" endtime="20201110 08:33:11.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:11.307" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:11.293" endtime="20201110 08:33:11.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.311" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:11.310" endtime="20201110 08:33:11.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.314" level="INFO">VALUE: [4.318999999999157e-06, 4.304999999999587e-06, 4.3199999999986305e-06, 4.237000000000685e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.236000000001211e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.318999999999157e-06, 4.277999999999921e-06, 4.3199999999986305e-06, 4.277000000000447e-06, 4.30600000000253e-06, 4.332999999998727e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.277000000000447e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.304999999999587e-06, 4.277000000000447e-06, 4.304999999999587e-06, 4.319000000002626e-06, 4.305999999999061e-06, 4.304999999999587e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.3339999999982e-06, 4.291999999999491e-06, 4.277000000000447e-06, 4.305000000003056e-06, 4.264000000000351e-06, 4.29200000000296e-06, 4.3200000000021e-06, 4.304999999999587e-06, 4.305999999999061e-06, 4.3200000000021e-06, 4.361000000001336e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.291000000000017e-06, 4.222000000001641e-06, 4.318999999999157e-06, 4.332999999998727e-06]</msg>
<status status="PASS" starttime="20201110 08:33:11.312" endtime="20201110 08:33:11.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.308" endtime="20201110 08:33:11.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.318" endtime="20201110 08:33:11.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:11.321" endtime="20201110 08:33:11.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.320" endtime="20201110 08:33:11.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.316" endtime="20201110 08:33:11.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.946" endtime="20201110 08:33:11.342"></status>
</kw>
<msg timestamp="20201110 08:33:11.342" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.350" endtime="20201110 08:33:11.368"></status>
</kw>
<msg timestamp="20201110 08:33:11.368" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:11.349" endtime="20201110 08:33:11.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.371" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:11.369" endtime="20201110 08:33:11.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.372" endtime="20201110 08:33:11.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.346" endtime="20201110 08:33:11.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.344" endtime="20201110 08:33:11.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.381" endtime="20201110 08:33:11.672"></status>
</kw>
<msg timestamp="20201110 08:33:11.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020382722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020386986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:11.380" endtime="20201110 08:33:11.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020382722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020386986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:11.676" endtime="20201110 08:33:11.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.685" endtime="20201110 08:33:11.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.377" endtime="20201110 08:33:11.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.375" endtime="20201110 08:33:11.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:11.692" level="INFO">${RESULT} = [{'time': 0.020386986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.020395319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:11.688" endtime="20201110 08:33:11.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:11.705" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:11.693" endtime="20201110 08:33:11.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.710" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:11.709" endtime="20201110 08:33:11.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.712" level="INFO">VALUE: [4.264000000000351e-06, 4.304999999999587e-06, 4.263000000000877e-06, 4.30600000000253e-06, 4.304999999999587e-06, 4.277000000000447e-06, 4.291999999999491e-06, 4.277000000000447e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.3200000000021e-06, 4.207999999998602e-06, 4.305999999999061e-06, 4.30600000000253e-06, 4.276999999996978e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.29200000000296e-06, 4.291999999999491e-06, 4.305999999999061e-06, 4.30600000000253e-06, 4.221999999998172e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.222000000001641e-06, 4.29200000000296e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.3200000000021e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.305999999999061e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.291000000000017e-06, 4.304999999999587e-06, 4.236000000001211e-06, 4.318999999999157e-06, 4.277000000000447e-06, 4.291000000000017e-06, 4.250000000000781e-06, 4.276999999996978e-06, 4.277999999999921e-06, 4.36200000000081e-06, 4.332999999998727e-06, 4.33400000000167e-06, 4.304999999999587e-06, 4.304999999999587e-06, 4.318999999999157e-06]</msg>
<status status="PASS" starttime="20201110 08:33:11.711" endtime="20201110 08:33:11.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.706" endtime="20201110 08:33:11.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.716" endtime="20201110 08:33:11.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:11.720" endtime="20201110 08:33:11.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.718" endtime="20201110 08:33:11.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.714" endtime="20201110 08:33:11.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.343" endtime="20201110 08:33:11.741"></status>
</kw>
<msg timestamp="20201110 08:33:11.741" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.749" endtime="20201110 08:33:11.767"></status>
</kw>
<msg timestamp="20201110 08:33:11.767" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:11.747" endtime="20201110 08:33:11.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.770" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:11.769" endtime="20201110 08:33:11.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.771" endtime="20201110 08:33:11.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.745" endtime="20201110 08:33:11.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.743" endtime="20201110 08:33:11.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.782" endtime="20201110 08:33:12.082"></status>
</kw>
<msg timestamp="20201110 08:33:12.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023747069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023751333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:11.779" endtime="20201110 08:33:12.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023747069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023751333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.091" endtime="20201110 08:33:12.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.110" endtime="20201110 08:33:12.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.776" endtime="20201110 08:33:12.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.775" endtime="20201110 08:33:12.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:12.122" level="INFO">${RESULT} = [{'time': 0.023751333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.023764431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:12.117" endtime="20201110 08:33:12.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:12.135" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:12.123" endtime="20201110 08:33:12.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.140" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:12.138" endtime="20201110 08:33:12.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.142" level="INFO">VALUE: [4.264000000000351e-06, 4.264000000000351e-06, 4.360999999997867e-06, 4.291999999999491e-06, 4.277000000000447e-06, 4.305999999999061e-06, 4.361000000001336e-06, 4.264000000000351e-06, 4.222000000001641e-06, 4.3199999999986305e-06, 4.3199999999986305e-06, 4.304999999999587e-06, 4.305999999999061e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.29200000000296e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.264000000000351e-06, 4.3200000000021e-06, 4.291999999999491e-06, 4.3199999999986305e-06, 4.2499999999973115e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.305999999999061e-06, 4.3200000000021e-06, 4.305999999999061e-06, 4.236000000001211e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.263000000000877e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.361000000001336e-06, 4.250000000000781e-06, 4.30600000000253e-06, 4.305999999999061e-06, 4.30600000000253e-06]</msg>
<status status="PASS" starttime="20201110 08:33:12.141" endtime="20201110 08:33:12.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.136" endtime="20201110 08:33:12.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.146" endtime="20201110 08:33:12.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:12.149" endtime="20201110 08:33:12.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.147" endtime="20201110 08:33:12.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.144" endtime="20201110 08:33:12.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.741" endtime="20201110 08:33:12.170"></status>
</kw>
<msg timestamp="20201110 08:33:12.170" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.178" endtime="20201110 08:33:12.195"></status>
</kw>
<msg timestamp="20201110 08:33:12.195" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.176" endtime="20201110 08:33:12.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.198" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.196" endtime="20201110 08:33:12.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.199" endtime="20201110 08:33:12.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.173" endtime="20201110 08:33:12.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.172" endtime="20201110 08:33:12.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.208" endtime="20201110 08:33:12.494"></status>
</kw>
<msg timestamp="20201110 08:33:12.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021503875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.206" endtime="20201110 08:33:12.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021503875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.499" endtime="20201110 08:33:12.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.507" endtime="20201110 08:33:12.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.204" endtime="20201110 08:33:12.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.202" endtime="20201110 08:33:12.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:12.513" level="INFO">${RESULT} = [{'time': 0.021503875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.021514806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:12.510" endtime="20201110 08:33:12.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:12.527" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:12.514" endtime="20201110 08:33:12.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.531" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:12.530" endtime="20201110 08:33:12.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.533" level="INFO">VALUE: [4.305999999999061e-06, 4.3200000000021e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.3199999999986305e-06, 4.318999999999157e-06, 4.304999999999587e-06, 4.318999999999157e-06, 4.318999999999157e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.305999999999061e-06, 4.291999999999491e-06, 4.263000000000877e-06, 4.30600000000253e-06, 4.250000000000781e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.263999999996881e-06, 4.305999999999061e-06, 4.277999999999921e-06, 4.318999999999157e-06, 4.304999999999587e-06, 4.250000000000781e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.304999999999587e-06, 4.304999999999587e-06, 4.291999999999491e-06, 4.277000000000447e-06, 4.291999999999491e-06, 4.305999999999061e-06, 4.277000000000447e-06, 4.3200000000021e-06, 4.291999999999491e-06, 4.332999999998727e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.3200000000021e-06, 4.304999999999587e-06, 4.30600000000253e-06, 4.277000000000447e-06, 4.291000000000017e-06]</msg>
<status status="PASS" starttime="20201110 08:33:12.532" endtime="20201110 08:33:12.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.528" endtime="20201110 08:33:12.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.537" endtime="20201110 08:33:12.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:12.541" endtime="20201110 08:33:12.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.539" endtime="20201110 08:33:12.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.535" endtime="20201110 08:33:12.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.171" endtime="20201110 08:33:12.561"></status>
</kw>
<msg timestamp="20201110 08:33:12.562" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.569" endtime="20201110 08:33:12.591"></status>
</kw>
<msg timestamp="20201110 08:33:12.592" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.568" endtime="20201110 08:33:12.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.594" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.593" endtime="20201110 08:33:12.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.595" endtime="20201110 08:33:12.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.565" endtime="20201110 08:33:12.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.563" endtime="20201110 08:33:12.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.604" endtime="20201110 08:33:12.891"></status>
</kw>
<msg timestamp="20201110 08:33:12.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.603" endtime="20201110 08:33:12.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.898" endtime="20201110 08:33:12.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.910" endtime="20201110 08:33:12.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.600" endtime="20201110 08:33:12.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.598" endtime="20201110 08:33:12.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:12.921" level="INFO">${RESULT} = [{'time': 0.021903153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.021912431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:12.914" endtime="20201110 08:33:12.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:12.938" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:12.922" endtime="20201110 08:33:12.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.943" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:12.942" endtime="20201110 08:33:12.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.946" level="INFO">VALUE: [4.29200000000296e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.30600000000253e-06, 4.30600000000253e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.318999999999157e-06, 4.318999999999157e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.346999999998297e-06, 4.305000000003056e-06, 4.277999999999921e-06, 4.30600000000253e-06, 4.277999999999921e-06, 4.3200000000021e-06, 4.291000000000017e-06, 4.305999999999061e-06, 4.264000000000351e-06, 4.221999999998172e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.3200000000021e-06, 4.318999999999157e-06, 4.250000000000781e-06, 4.291999999999491e-06, 4.305999999999061e-06, 4.291999999999491e-06, 4.29200000000296e-06, 4.291999999999491e-06, 4.305000000003056e-06, 4.3200000000021e-06, 4.318999999999157e-06, 4.305999999999061e-06, 4.318999999999157e-06, 4.277999999999921e-06, 4.2359999999977416e-06, 4.291999999999491e-06, 4.318999999999157e-06, 4.319000000002626e-06, 4.29200000000296e-06, 4.291000000000017e-06, 4.304999999999587e-06, 4.3199999999986305e-06, 4.304999999999587e-06, 4.305999999999061e-06, 4.277999999999921e-06]</msg>
<status status="PASS" starttime="20201110 08:33:12.944" endtime="20201110 08:33:12.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.939" endtime="20201110 08:33:12.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.950" endtime="20201110 08:33:12.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:12.953" endtime="20201110 08:33:12.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.952" endtime="20201110 08:33:12.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.948" endtime="20201110 08:33:12.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.562" endtime="20201110 08:33:12.974"></status>
</kw>
<msg timestamp="20201110 08:33:12.974" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.983" endtime="20201110 08:33:12.998"></status>
</kw>
<msg timestamp="20201110 08:33:12.998" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.981" endtime="20201110 08:33:12.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.001" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.999" endtime="20201110 08:33:13.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.002" endtime="20201110 08:33:13.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.978" endtime="20201110 08:33:13.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.976" endtime="20201110 08:33:13.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.012" endtime="20201110 08:33:13.302"></status>
</kw>
<msg timestamp="20201110 08:33:13.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021207681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021211972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.010" endtime="20201110 08:33:13.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021207681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021211972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.306" endtime="20201110 08:33:13.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.315" endtime="20201110 08:33:13.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.007" endtime="20201110 08:33:13.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.005" endtime="20201110 08:33:13.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:13.322" level="INFO">${RESULT} = [{'time': 0.021211972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.021222778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:13.318" endtime="20201110 08:33:13.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:13.335" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:13.323" endtime="20201110 08:33:13.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.340" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:13.339" endtime="20201110 08:33:13.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.342" level="INFO">VALUE: [4.291000000000017e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.3199999999986305e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.304999999999587e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.3199999999986305e-06, 4.291999999999491e-06, 4.29200000000296e-06, 4.304999999999587e-06, 4.3199999999986305e-06, 4.319000000002626e-06, 4.291999999999491e-06, 4.318999999999157e-06, 4.277999999999921e-06, 4.250000000000781e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.29200000000296e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.277000000000447e-06, 4.30600000000253e-06, 4.30600000000253e-06, 4.305999999999061e-06, 4.250000000000781e-06, 4.209000000001545e-06, 4.2359999999977416e-06, 4.305999999999061e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.305999999999061e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.3199999999986305e-06, 4.304999999999587e-06, 4.305999999999061e-06, 4.305999999999061e-06, 4.277999999999921e-06]</msg>
<status status="PASS" starttime="20201110 08:33:13.341" endtime="20201110 08:33:13.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.336" endtime="20201110 08:33:13.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.346" endtime="20201110 08:33:13.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:13.350" endtime="20201110 08:33:13.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.348" endtime="20201110 08:33:13.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.344" endtime="20201110 08:33:13.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.975" endtime="20201110 08:33:13.371"></status>
</kw>
<msg timestamp="20201110 08:33:13.371" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.379" endtime="20201110 08:33:13.396"></status>
</kw>
<msg timestamp="20201110 08:33:13.396" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.377" endtime="20201110 08:33:13.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.399" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.397" endtime="20201110 08:33:13.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.400" endtime="20201110 08:33:13.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.375" endtime="20201110 08:33:13.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.373" endtime="20201110 08:33:13.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.409" endtime="20201110 08:33:13.698"></status>
</kw>
<msg timestamp="20201110 08:33:13.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021404903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021409208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.407" endtime="20201110 08:33:13.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021404903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021409208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.703" endtime="20201110 08:33:13.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.711" endtime="20201110 08:33:13.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.405" endtime="20201110 08:33:13.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.403" endtime="20201110 08:33:13.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:13.718" level="INFO">${RESULT} = [{'time': 0.021409208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.021420431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:13.714" endtime="20201110 08:33:13.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:13.732" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:13.719" endtime="20201110 08:33:13.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.736" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:13.735" endtime="20201110 08:33:13.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.739" level="INFO">VALUE: [4.304999999999587e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.318999999999157e-06, 4.360999999997867e-06, 4.291999999999491e-06, 4.277000000000447e-06, 4.304999999999587e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.346999999998297e-06, 4.236000000001211e-06, 4.263000000000877e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.3199999999986305e-06, 4.2499999999973115e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.318999999999157e-06, 4.291999999999491e-06, 4.333000000002196e-06, 4.264000000000351e-06, 4.30600000000253e-06, 4.3199999999986305e-06, 4.264000000000351e-06, 4.305999999999061e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.276999999996978e-06, 4.305999999999061e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.305000000003056e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.3339999999982e-06, 4.361000000001336e-06, 4.277999999999921e-06, 4.29200000000296e-06, 4.2499999999973115e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.277999999999921e-06]</msg>
<status status="PASS" starttime="20201110 08:33:13.737" endtime="20201110 08:33:13.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.733" endtime="20201110 08:33:13.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.742" endtime="20201110 08:33:13.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:13.746" endtime="20201110 08:33:13.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.744" endtime="20201110 08:33:13.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.741" endtime="20201110 08:33:13.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.371" endtime="20201110 08:33:13.767"></status>
</kw>
<msg timestamp="20201110 08:33:13.767" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.775" endtime="20201110 08:33:13.792"></status>
</kw>
<msg timestamp="20201110 08:33:13.793" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.773" endtime="20201110 08:33:13.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.795" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.794" endtime="20201110 08:33:13.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.796" endtime="20201110 08:33:13.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.771" endtime="20201110 08:33:13.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.769" endtime="20201110 08:33:13.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.806" endtime="20201110 08:33:14.094"></status>
</kw>
<msg timestamp="20201110 08:33:14.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.804" endtime="20201110 08:33:14.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.099" endtime="20201110 08:33:14.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.107" endtime="20201110 08:33:14.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.801" endtime="20201110 08:33:14.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.800" endtime="20201110 08:33:14.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:14.114" level="INFO">${RESULT} = [{'time': 0.022255931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3199999999986305e-06, 'source_diff': 4.3199999999986305e-06}, {'time': 0.022267972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:14.111" endtime="20201110 08:33:14.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:14.128" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:14.115" endtime="20201110 08:33:14.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.132" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:14.131" endtime="20201110 08:33:14.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.135" level="INFO">VALUE: [4.3199999999986305e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.291999999999491e-06, 4.277000000000447e-06, 4.277999999999921e-06, 4.30600000000253e-06, 4.360999999997867e-06, 4.305999999999061e-06, 4.291999999999491e-06, 4.375000000000906e-06, 4.30600000000253e-06, 4.36200000000081e-06, 4.277999999999921e-06, 4.304999999999587e-06, 4.291999999999491e-06, 4.388999999997006e-06, 4.304999999999587e-06, 4.304999999999587e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.305999999999061e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.207999999998602e-06, 4.291999999999491e-06, 4.305999999999061e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.305000000003056e-06, 4.304999999999587e-06, 4.360999999997867e-06, 4.264000000000351e-06, 4.291999999999491e-06, 4.305999999999061e-06, 4.264000000000351e-06, 4.2359999999977416e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.305999999999061e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.304999999999587e-06, 4.305999999999061e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.291000000000017e-06, 4.304999999999587e-06]</msg>
<status status="PASS" starttime="20201110 08:33:14.133" endtime="20201110 08:33:14.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.129" endtime="20201110 08:33:14.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.139" endtime="20201110 08:33:14.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:14.142" endtime="20201110 08:33:14.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.141" endtime="20201110 08:33:14.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.137" endtime="20201110 08:33:14.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.768" endtime="20201110 08:33:14.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.079" endtime="20201110 08:33:14.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:14.167" endtime="20201110 08:33:14.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.166" endtime="20201110 08:33:14.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.165" endtime="20201110 08:33:14.188"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:06.003" endtime="20201110 08:33:14.188" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:14.195" endtime="20201110 08:33:14.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.193" endtime="20201110 08:33:14.215"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.231" endtime="20201110 08:33:14.252"></status>
</kw>
<msg timestamp="20201110 08:33:14.253" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.228" endtime="20201110 08:33:14.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.256" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.254" endtime="20201110 08:33:14.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.260" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:14.258" endtime="20201110 08:33:14.261"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:14.224" endtime="20201110 08:33:14.261"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:14.222" endtime="20201110 08:33:14.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.220" endtime="20201110 08:33:14.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:14.266" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:14.266" endtime="20201110 08:33:14.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.263" endtime="20201110 08:33:14.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.220" endtime="20201110 08:33:14.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.219" endtime="20201110 08:33:14.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.268" endtime="20201110 08:33:14.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.217" endtime="20201110 08:33:14.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.216" endtime="20201110 08:33:14.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.192" endtime="20201110 08:33:14.271"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.280" endtime="20201110 08:33:14.300"></status>
</kw>
<msg timestamp="20201110 08:33:14.301" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.278" endtime="20201110 08:33:14.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.303" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.302" endtime="20201110 08:33:14.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.304" endtime="20201110 08:33:14.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.276" endtime="20201110 08:33:14.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.274" endtime="20201110 08:33:14.307"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.309" endtime="20201110 08:33:14.310"></status>
</kw>
<msg timestamp="20201110 08:33:14.311" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:33:14.307" endtime="20201110 08:33:14.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.315" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:14.314" endtime="20201110 08:33:14.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.317" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:14.316" endtime="20201110 08:33:14.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.312" endtime="20201110 08:33:14.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.322" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:14.321" endtime="20201110 08:33:14.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.323" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:14.323" endtime="20201110 08:33:14.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.318" endtime="20201110 08:33:14.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.331" endtime="20201110 08:33:14.621"></status>
</kw>
<msg timestamp="20201110 08:33:14.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076514833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076523333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.329" endtime="20201110 08:33:14.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076514833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076523333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.625" endtime="20201110 08:33:14.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.634" endtime="20201110 08:33:14.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.327" endtime="20201110 08:33:14.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.325" endtime="20201110 08:33:14.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:14.641" level="INFO">${RESULT} = [{'time': 0.076523333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.076541681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:14.637" endtime="20201110 08:33:14.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:14.654" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:14.642" endtime="20201110 08:33:14.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.659" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:33:14.658" endtime="20201110 08:33:14.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.662" level="INFO">VALUE: [8.499999999994623e-06, 8.723000000002146e-06, 8.694000000003532e-06, 8.652999999997357e-06, 8.652999999997357e-06, 8.681000000010375e-06, 8.667000000003866e-06, 8.651999999997884e-06, 8.680999999996497e-06, 8.666999999989988e-06, 8.637999999991375e-06, 8.653000000011235e-06, 8.667000000003866e-06, 8.667000000003866e-06, 8.667000000003866e-06, 8.624999999998217e-06, 8.639000000004726e-06, 8.665999999990515e-06, 8.680999999996497e-06, 8.624999999998217e-06, 8.707999999996163e-06, 8.652999999997357e-06, 8.679999999997023e-06, 8.652000000011761e-06, 8.652999999997357e-06, 8.639000000004726e-06, 8.680999999996497e-06, 8.666000000004392e-06, 8.651999999997884e-06, 8.652999999997357e-06, 8.653000000011235e-06, 8.624999999998217e-06, 8.624999999998217e-06, 8.639000000004726e-06, 8.679999999997023e-06, 8.695000000003006e-06, 8.694999999989128e-06, 8.638999999990848e-06, 8.667000000003866e-06, 8.652999999997357e-06, 8.639000000004726e-06, 8.611000000005586e-06, 8.653000000011235e-06, 8.680999999996497e-06, 8.666999999989988e-06, 8.666999999989988e-06, 8.652999999997357e-06, 8.666000000004392e-06, 8.652999999997357e-06, 8.653000000011235e-06]</msg>
<status status="PASS" starttime="20201110 08:33:14.661" endtime="20201110 08:33:14.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.655" endtime="20201110 08:33:14.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.666" endtime="20201110 08:33:14.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:14.669" endtime="20201110 08:33:14.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.668" endtime="20201110 08:33:14.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.664" endtime="20201110 08:33:14.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.272" endtime="20201110 08:33:14.690"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:14.190" endtime="20201110 08:33:14.691" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:14.697" endtime="20201110 08:33:14.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.696" endtime="20201110 08:33:14.718"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.732" endtime="20201110 08:33:14.748"></status>
</kw>
<msg timestamp="20201110 08:33:14.748" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.729" endtime="20201110 08:33:14.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.751" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.750" endtime="20201110 08:33:14.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.754" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:14.752" endtime="20201110 08:33:14.754"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:14.727" endtime="20201110 08:33:14.755"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:14.724" endtime="20201110 08:33:14.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.723" endtime="20201110 08:33:14.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:14.760" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:14.759" endtime="20201110 08:33:14.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.757" endtime="20201110 08:33:14.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.722" endtime="20201110 08:33:14.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.722" endtime="20201110 08:33:14.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.762" endtime="20201110 08:33:14.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.720" endtime="20201110 08:33:14.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.718" endtime="20201110 08:33:14.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.695" endtime="20201110 08:33:14.765"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.774" endtime="20201110 08:33:14.873"></status>
</kw>
<msg timestamp="20201110 08:33:14.874" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.772" endtime="20201110 08:33:14.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.878" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.876" endtime="20201110 08:33:14.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.880" endtime="20201110 08:33:14.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.770" endtime="20201110 08:33:14.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.767" endtime="20201110 08:33:14.888"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.892" endtime="20201110 08:33:14.894"></status>
</kw>
<msg timestamp="20201110 08:33:14.894" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:33:14.890" endtime="20201110 08:33:14.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.898" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:14.897" endtime="20201110 08:33:14.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.900" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:14.899" endtime="20201110 08:33:14.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.895" endtime="20201110 08:33:14.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.905" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:14.904" endtime="20201110 08:33:14.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.907" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:14.906" endtime="20201110 08:33:14.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.902" endtime="20201110 08:33:14.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.914" endtime="20201110 08:33:15.234"></status>
</kw>
<msg timestamp="20201110 08:33:15.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072717167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072767514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.913" endtime="20201110 08:33:15.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072717167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072767514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:15.238" endtime="20201110 08:33:15.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.246" endtime="20201110 08:33:15.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.910" endtime="20201110 08:33:15.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.908" endtime="20201110 08:33:15.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:15.253" level="INFO">${RESULT} = [{'time': 0.072767514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.034700000000614e-05, 'source_diff': 5.034700000000614e-05}, {'time': 0.074269542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:15.249" endtime="20201110 08:33:15.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:15.266" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:15.254" endtime="20201110 08:33:15.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.271" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:33:15.270" endtime="20201110 08:33:15.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.273" level="INFO">VALUE: [5.034700000000614e-05, 5.03339999999991e-05, 5.0181000000010245e-05, 5.034700000000614e-05, 5.029199999999345e-05, 5.0235999999995173e-05, 5.032000000000647e-05, 5.020800000000991e-05, 5.033299999999963e-05, 5.031899999999312e-05, 5.034799999999173e-05, 5.03339999999991e-05, 5.027700000000135e-05, 5.027800000000082e-05, 5.033299999999963e-05, 5.031999999999259e-05, 5.030599999999996e-05, 5.030500000000049e-05, 5.025000000000168e-05, 5.030500000000049e-05, 5.031899999999312e-05, 5.031899999999312e-05, 5.029200000000733e-05, 5.037500000000528e-05, 5.03339999999991e-05, 5.0207999999996034e-05, 5.029199999999345e-05, 5.030500000000049e-05, 5.0249999999987804e-05, 5.029100000000786e-05, 5.025000000000168e-05, 5.033299999999963e-05, 5.033299999999963e-05, 5.029200000000733e-05, 5.033299999999963e-05, 5.031899999999312e-05, 5.020899999999551e-05, 5.0235999999981296e-05, 5.02909999999801e-05, 5.031899999999312e-05, 5.029200000000733e-05, 5.0207999999996034e-05, 5.030500000000049e-05, 5.031999999999259e-05, 5.030599999999996e-05, 5.026399999999431e-05, 5.026399999999431e-05, 5.034700000000614e-05, 5.027699999998747e-05, 5.033400000001298e-05]</msg>
<status status="PASS" starttime="20201110 08:33:15.272" endtime="20201110 08:33:15.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.267" endtime="20201110 08:33:15.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.281" endtime="20201110 08:33:15.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:15.285" endtime="20201110 08:33:15.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.283" endtime="20201110 08:33:15.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.279" endtime="20201110 08:33:15.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.765" endtime="20201110 08:33:15.306"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:14.692" endtime="20201110 08:33:15.306" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:15.313" endtime="20201110 08:33:15.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.312" endtime="20201110 08:33:15.333"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.347" endtime="20201110 08:33:15.370"></status>
</kw>
<msg timestamp="20201110 08:33:15.371" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.344" endtime="20201110 08:33:15.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.373" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.372" endtime="20201110 08:33:15.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.376" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:15.374" endtime="20201110 08:33:15.377"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:15.342" endtime="20201110 08:33:15.377"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:15.340" endtime="20201110 08:33:15.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.338" endtime="20201110 08:33:15.378"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:15.382" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:15.381" endtime="20201110 08:33:15.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.379" endtime="20201110 08:33:15.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.337" endtime="20201110 08:33:15.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.337" endtime="20201110 08:33:15.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.384" endtime="20201110 08:33:15.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.335" endtime="20201110 08:33:15.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.334" endtime="20201110 08:33:15.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.310" endtime="20201110 08:33:15.387"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.395" endtime="20201110 08:33:15.682"></status>
</kw>
<msg timestamp="20201110 08:33:15.682" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.394" endtime="20201110 08:33:15.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.685" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.683" endtime="20201110 08:33:15.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.686" endtime="20201110 08:33:15.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.391" endtime="20201110 08:33:15.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.389" endtime="20201110 08:33:15.688"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.690" endtime="20201110 08:33:15.692"></status>
</kw>
<msg timestamp="20201110 08:33:15.692" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:33:15.689" endtime="20201110 08:33:15.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.696" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:15.695" endtime="20201110 08:33:15.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.699" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:15.697" endtime="20201110 08:33:15.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.693" endtime="20201110 08:33:15.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.703" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:15.702" endtime="20201110 08:33:15.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.705" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:15.704" endtime="20201110 08:33:15.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.700" endtime="20201110 08:33:15.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.714" endtime="20201110 08:33:16.027"></status>
</kw>
<msg timestamp="20201110 08:33:16.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078580694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07867475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:15.711" endtime="20201110 08:33:16.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078580694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07867475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:16.031" endtime="20201110 08:33:16.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.039" endtime="20201110 08:33:16.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.708" endtime="20201110 08:33:16.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.707" endtime="20201110 08:33:16.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:16.046" level="INFO">${RESULT} = [{'time': 0.07867475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.405599999999514e-05, 'source_diff': 9.405599999999514e-05}, {'time': 0.083990806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:16.043" endtime="20201110 08:33:16.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:16.060" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:16.048" endtime="20201110 08:33:16.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.065" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:33:16.064" endtime="20201110 08:33:16.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.067" level="INFO">VALUE: [9.405599999999514e-05, 9.333400000000047e-05, 9.332000000000784e-05, 9.334700000000751e-05, 9.338899999999928e-05, 9.336100000000014e-05, 9.347199999999722e-05, 9.336100000000014e-05, 9.340299999999191e-05, 9.338899999999928e-05, 9.327799999997444e-05, 9.336099999998626e-05, 9.334699999999363e-05, 9.337500000000665e-05, 9.33479999999931e-05, 9.336099999998626e-05, 9.32639999999818e-05, 9.33879999999998e-05, 9.331899999998061e-05, 9.329099999999535e-05, 9.337500000000665e-05, 9.334700000002139e-05, 9.32910000000231e-05, 9.324999999998917e-05, 9.32639999999818e-05, 9.323599999999654e-05, 9.330600000001521e-05, 9.338899999999928e-05, 9.334699999999363e-05, 9.334699999999363e-05, 9.3333000000001e-05, 9.336099999998626e-05, 9.334699999999363e-05, 9.327800000002995e-05, 9.33479999999931e-05, 9.327700000000272e-05, 9.336199999998573e-05, 9.336100000001402e-05, 9.337500000000665e-05, 9.330600000001521e-05, 9.341700000004005e-05, 9.331899999998061e-05, 9.338899999999928e-05, 9.332000000000784e-05, 9.338899999999928e-05, 9.323599999999654e-05, 9.338899999999928e-05, 9.32639999999818e-05, 9.329199999996707e-05, 9.340299999999191e-05]</msg>
<status status="PASS" starttime="20201110 08:33:16.066" endtime="20201110 08:33:16.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.061" endtime="20201110 08:33:16.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.070" endtime="20201110 08:33:16.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:16.074" endtime="20201110 08:33:16.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.072" endtime="20201110 08:33:16.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.069" endtime="20201110 08:33:16.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.388" endtime="20201110 08:33:16.095"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:15.308" endtime="20201110 08:33:16.095" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:16.102" endtime="20201110 08:33:16.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.100" endtime="20201110 08:33:16.122"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.136" endtime="20201110 08:33:16.159"></status>
</kw>
<msg timestamp="20201110 08:33:16.160" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.134" endtime="20201110 08:33:16.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.164" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.162" endtime="20201110 08:33:16.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.169" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:16.166" endtime="20201110 08:33:16.169"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:16.131" endtime="20201110 08:33:16.171"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:16.128" endtime="20201110 08:33:16.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.127" endtime="20201110 08:33:16.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:16.175" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:16.175" endtime="20201110 08:33:16.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.172" endtime="20201110 08:33:16.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.126" endtime="20201110 08:33:16.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.126" endtime="20201110 08:33:16.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.177" endtime="20201110 08:33:16.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.124" endtime="20201110 08:33:16.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.123" endtime="20201110 08:33:16.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.099" endtime="20201110 08:33:16.180"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.189" endtime="20201110 08:33:16.210"></status>
</kw>
<msg timestamp="20201110 08:33:16.211" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.187" endtime="20201110 08:33:16.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.213" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.212" endtime="20201110 08:33:16.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.214" endtime="20201110 08:33:16.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.184" endtime="20201110 08:33:16.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.182" endtime="20201110 08:33:16.217"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.219" endtime="20201110 08:33:16.221"></status>
</kw>
<msg timestamp="20201110 08:33:16.221" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:33:16.218" endtime="20201110 08:33:16.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.225" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:16.224" endtime="20201110 08:33:16.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.227" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:16.226" endtime="20201110 08:33:16.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.222" endtime="20201110 08:33:16.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.232" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:16.231" endtime="20201110 08:33:16.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.234" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:16.233" endtime="20201110 08:33:16.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.229" endtime="20201110 08:33:16.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.245" endtime="20201110 08:33:16.531"></status>
</kw>
<msg timestamp="20201110 08:33:16.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079081917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079083917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.243" endtime="20201110 08:33:16.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079081917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079083917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.535" endtime="20201110 08:33:16.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.543" endtime="20201110 08:33:16.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.237" endtime="20201110 08:33:16.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.236" endtime="20201110 08:33:16.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:16.551" level="INFO">${RESULT} = [{'time': 0.079083917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.079099806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9...</msg>
<status status="PASS" starttime="20201110 08:33:16.547" endtime="20201110 08:33:16.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:16.564" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:16.552" endtime="20201110 08:33:16.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.569" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:33:16.567" endtime="20201110 08:33:16.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.571" level="INFO">VALUE: [2.000000000002e-06, 1.972999999988456e-06, 1.973000000002334e-06, 2.013999999994631e-06, 2.014000000008509e-06, 2.000000000002e-06, 1.9580000000102293e-06, 2.0129999999951576e-06, 2.000000000002e-06, 1.986999999994965e-06, 2.000000000002e-06, 2.000000000002e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.069000000007315e-06, 2.013999999994631e-06, 1.9859999999954914e-06, 2.000000000002e-06, 2.013999999994631e-06, 1.986000000009369e-06, 1.973000000002334e-06, 2.013999999994631e-06, 2.000000000002e-06, 1.986000000009369e-06, 2.02800000000114e-06, 1.9299999999972117e-06, 2.000000000002e-06, 2.000000000002e-06, 2.000000000002e-06, 1.9720000000028604e-06, 2.000000000002e-06, 2.000000000002e-06, 2.055000000000806e-06, 2.0279999999872622e-06, 1.9720000000028604e-06, 1.959000000009703e-06, 2.000000000002e-06, 1.9719999999889826e-06, 2.000000000002e-06, 1.9999999999881224e-06, 2.02800000000114e-06, 2.0279999999872622e-06, 2.055000000000806e-06, 1.9859999999954914e-06, 2.000000000002e-06, 1.973000000002334e-06, 1.9720000000028604e-06, 2.000000000002e-06, 1.9859999999954914e-06, 1.9859999999954914e-06]</msg>
<status status="PASS" starttime="20201110 08:33:16.570" endtime="20201110 08:33:16.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.565" endtime="20201110 08:33:16.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.574" endtime="20201110 08:33:16.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:16.577" endtime="20201110 08:33:16.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.576" endtime="20201110 08:33:16.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.572" endtime="20201110 08:33:16.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.181" endtime="20201110 08:33:16.598"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:16.096" endtime="20201110 08:33:16.599" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:16.606" endtime="20201110 08:33:16.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.604" endtime="20201110 08:33:16.626"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.639" endtime="20201110 08:33:16.656"></status>
</kw>
<msg timestamp="20201110 08:33:16.657" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.638" endtime="20201110 08:33:16.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.659" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.658" endtime="20201110 08:33:16.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.662" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:16.660" endtime="20201110 08:33:16.663"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:16.634" endtime="20201110 08:33:16.663"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:16.632" endtime="20201110 08:33:16.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.631" endtime="20201110 08:33:16.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:16.668" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:16.668" endtime="20201110 08:33:16.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.665" endtime="20201110 08:33:16.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.630" endtime="20201110 08:33:16.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.629" endtime="20201110 08:33:16.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.670" endtime="20201110 08:33:16.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.628" endtime="20201110 08:33:16.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.626" endtime="20201110 08:33:16.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.603" endtime="20201110 08:33:16.673"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.681" endtime="20201110 08:33:16.777"></status>
</kw>
<msg timestamp="20201110 08:33:16.778" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.680" endtime="20201110 08:33:16.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.782" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.780" endtime="20201110 08:33:16.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.784" endtime="20201110 08:33:16.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.677" endtime="20201110 08:33:16.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.675" endtime="20201110 08:33:16.789"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.793" endtime="20201110 08:33:16.794"></status>
</kw>
<msg timestamp="20201110 08:33:16.795" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:33:16.791" endtime="20201110 08:33:16.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.799" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:16.798" endtime="20201110 08:33:16.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.801" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:16.800" endtime="20201110 08:33:16.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.796" endtime="20201110 08:33:16.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.806" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:16.805" endtime="20201110 08:33:16.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.808" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:16.807" endtime="20201110 08:33:16.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.802" endtime="20201110 08:33:16.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.816" endtime="20201110 08:33:17.109"></status>
</kw>
<msg timestamp="20201110 08:33:17.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069244875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069257069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.813" endtime="20201110 08:33:17.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069244875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069257069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.113" endtime="20201110 08:33:17.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.121" endtime="20201110 08:33:17.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.811" endtime="20201110 08:33:17.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.809" endtime="20201110 08:33:17.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:17.128" level="INFO">${RESULT} = [{'time': 0.069257069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2194000000007033e-05, 'source_diff': 1.2194000000007033e-05}, {'time': 0.070764028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:17.125" endtime="20201110 08:33:17.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:17.141" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:17.129" endtime="20201110 08:33:17.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.146" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:33:17.145" endtime="20201110 08:33:17.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.149" level="INFO">VALUE: [1.2194000000007033e-05, 1.2167000000007366e-05, 1.2180000000000524e-05, 1.2195000000006506e-05, 1.2195000000006506e-05, 1.2193999999993155e-05, 1.2194000000007033e-05, 1.2180000000000524e-05, 1.2167000000007366e-05, 1.2194000000007033e-05, 1.2166999999993489e-05, 1.2180999999999997e-05, 1.2221999999992295e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2180000000000524e-05, 1.2195000000006506e-05, 1.2194000000007033e-05, 1.2180999999999997e-05, 1.2194000000007033e-05, 1.2125000000001718e-05, 1.2180999999999997e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2166000000007893e-05, 1.2222000000006172e-05, 1.2180000000000524e-05, 1.2194999999992628e-05, 1.2194000000007033e-05, 1.2180000000000524e-05, 1.2153000000000858e-05, 1.2166999999993489e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2180999999999997e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2193999999993155e-05, 1.2138999999994349e-05, 1.2194999999992628e-05, 1.2193999999993155e-05, 1.2193999999993155e-05, 1.2180000000000524e-05, 1.2180000000000524e-05, 1.2249999999991434e-05, 1.2207999999985786e-05, 1.2193999999993155e-05, 1.2179999999972768e-05, 1.2194999999992628e-05]</msg>
<status status="PASS" starttime="20201110 08:33:17.147" endtime="20201110 08:33:17.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.142" endtime="20201110 08:33:17.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.152" endtime="20201110 08:33:17.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:17.155" endtime="20201110 08:33:17.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.154" endtime="20201110 08:33:17.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.150" endtime="20201110 08:33:17.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.673" endtime="20201110 08:33:17.176"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:16.600" endtime="20201110 08:33:17.177" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:17.183" endtime="20201110 08:33:17.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.182" endtime="20201110 08:33:17.203"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.217" endtime="20201110 08:33:17.235"></status>
</kw>
<msg timestamp="20201110 08:33:17.235" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.215" endtime="20201110 08:33:17.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.238" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.236" endtime="20201110 08:33:17.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.241" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:17.239" endtime="20201110 08:33:17.241"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:17.212" endtime="20201110 08:33:17.242"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:17.210" endtime="20201110 08:33:17.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.209" endtime="20201110 08:33:17.243"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:17.247" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:17.246" endtime="20201110 08:33:17.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.244" endtime="20201110 08:33:17.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.208" endtime="20201110 08:33:17.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.207" endtime="20201110 08:33:17.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.248" endtime="20201110 08:33:17.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.206" endtime="20201110 08:33:17.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.204" endtime="20201110 08:33:17.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.181" endtime="20201110 08:33:17.251"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.259" endtime="20201110 08:33:17.547"></status>
</kw>
<msg timestamp="20201110 08:33:17.548" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.258" endtime="20201110 08:33:17.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.550" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.549" endtime="20201110 08:33:17.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.551" endtime="20201110 08:33:17.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.255" endtime="20201110 08:33:17.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.253" endtime="20201110 08:33:17.554"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.556" endtime="20201110 08:33:17.558"></status>
</kw>
<msg timestamp="20201110 08:33:17.558" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:33:17.555" endtime="20201110 08:33:17.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.562" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:17.561" endtime="20201110 08:33:17.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.564" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:17.563" endtime="20201110 08:33:17.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.559" endtime="20201110 08:33:17.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.569" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:17.568" endtime="20201110 08:33:17.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.571" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:17.570" endtime="20201110 08:33:17.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.566" endtime="20201110 08:33:17.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.578" endtime="20201110 08:33:17.871"></status>
</kw>
<msg timestamp="20201110 08:33:17.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072572403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072594944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.577" endtime="20201110 08:33:17.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072572403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072594944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.875" endtime="20201110 08:33:17.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.883" endtime="20201110 08:33:17.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.574" endtime="20201110 08:33:17.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.572" endtime="20201110 08:33:17.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:17.890" level="INFO">${RESULT} = [{'time': 0.072594944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.254100000000092e-05, 'source_diff': 2.254100000000092e-05}, {'time': 0.07793525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:17.887" endtime="20201110 08:33:17.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:17.903" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:17.891" endtime="20201110 08:33:17.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.908" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:33:17.907" endtime="20201110 08:33:17.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.911" level="INFO">VALUE: [2.254100000000092e-05, 2.2582999999992692e-05, 2.25969999999992e-05, 2.261100000000571e-05, 2.2527999999993886e-05, 2.2584000000006044e-05, 2.2542000000000395e-05, 2.2597999999998675e-05, 2.2582999999992692e-05, 2.25969999999992e-05, 2.2569999999999535e-05, 2.2569999999999535e-05, 2.2569999999999535e-05, 2.2596999999985323e-05, 2.2611999999977428e-05, 2.261100000000571e-05, 2.2582999999992692e-05, 2.2582999999992692e-05, 2.262499999999834e-05, 2.261100000000571e-05, 2.2582999999992692e-05, 2.2583999999992166e-05, 2.2598000000012552e-05, 2.256900000000006e-05, 2.259700000001308e-05, 2.2514000000001255e-05, 2.259700000001308e-05, 2.2569999999999535e-05, 2.2541999999986517e-05, 2.2555999999979148e-05, 2.2583999999992166e-05, 2.2638999999990972e-05, 2.2582999999992692e-05, 2.256900000000006e-05, 2.2555000000035186e-05, 2.2569999999999535e-05, 2.2596999999957568e-05, 2.2584000000047677e-05, 2.2542000000014273e-05, 2.25139999999735e-05, 2.2584000000047677e-05, 2.2583999999992166e-05, 2.259700000001308e-05, 2.259700000001308e-05, 2.259700000001308e-05, 2.259700000001308e-05, 2.2583000000020448e-05, 2.259700000001308e-05, 2.2582999999964937e-05, 2.2569999999999535e-05]</msg>
<status status="PASS" starttime="20201110 08:33:17.909" endtime="20201110 08:33:17.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.904" endtime="20201110 08:33:17.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.914" endtime="20201110 08:33:17.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:17.917" endtime="20201110 08:33:17.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.915" endtime="20201110 08:33:17.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.912" endtime="20201110 08:33:17.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.252" endtime="20201110 08:33:17.938"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:17.178" endtime="20201110 08:33:17.938" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:32:55.368" endtime="20201110 08:33:17.945"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.054" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:18.072" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:19.292" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:18.052" endtime="20201110 08:33:19.293"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.295" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:33:19.294" endtime="20201110 08:33:19.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.049" endtime="20201110 08:33:19.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:19.298" endtime="20201110 08:33:19.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.297" endtime="20201110 08:33:19.485"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.498" endtime="20201110 08:33:19.526"></status>
</kw>
<msg timestamp="20201110 08:33:19.527" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.496" endtime="20201110 08:33:19.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.532" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.529" endtime="20201110 08:33:19.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.539" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:19.535" endtime="20201110 08:33:19.540"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:19.493" endtime="20201110 08:33:19.541"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:19.491" endtime="20201110 08:33:19.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.489" endtime="20201110 08:33:19.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:19.552" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:19.549" endtime="20201110 08:33:19.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.544" endtime="20201110 08:33:19.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.489" endtime="20201110 08:33:19.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.488" endtime="20201110 08:33:19.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.558" endtime="20201110 08:33:19.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.487" endtime="20201110 08:33:19.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.566" endtime="20201110 08:33:19.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.485" endtime="20201110 08:33:19.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.044" endtime="20201110 08:33:19.573"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:19.588" endtime="20201110 08:33:19.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.584" endtime="20201110 08:33:19.609"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.622" endtime="20201110 08:33:19.640"></status>
</kw>
<msg timestamp="20201110 08:33:19.641" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.621" endtime="20201110 08:33:19.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.643" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.642" endtime="20201110 08:33:19.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.646" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:19.644" endtime="20201110 08:33:19.647"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:19.618" endtime="20201110 08:33:19.647"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:19.616" endtime="20201110 08:33:19.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.614" endtime="20201110 08:33:19.648"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:19.653" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:19.652" endtime="20201110 08:33:19.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.649" endtime="20201110 08:33:19.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.614" endtime="20201110 08:33:19.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.613" endtime="20201110 08:33:19.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.654" endtime="20201110 08:33:19.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.612" endtime="20201110 08:33:19.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.610" endtime="20201110 08:33:19.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.581" endtime="20201110 08:33:19.657"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.667" endtime="20201110 08:33:19.686"></status>
</kw>
<msg timestamp="20201110 08:33:19.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.666" endtime="20201110 08:33:19.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.687" endtime="20201110 08:33:19.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.690" endtime="20201110 08:33:19.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.662" endtime="20201110 08:33:19.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.660" endtime="20201110 08:33:19.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.699" endtime="20201110 08:33:19.990"></status>
</kw>
<msg timestamp="20201110 08:33:19.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073872125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073878042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.697" endtime="20201110 08:33:19.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073872125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073878042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.994" endtime="20201110 08:33:20.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.002" endtime="20201110 08:33:20.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.695" endtime="20201110 08:33:20.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.693" endtime="20201110 08:33:20.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:20.009" level="INFO">${RESULT} = [{'time': 0.073878042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000008055e-06, 'source_diff': 5.917000000008055e-06}, {'time': 0.073893722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:20.005" endtime="20201110 08:33:20.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:20.022" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:20.010" endtime="20201110 08:33:20.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.027" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:33:20.026" endtime="20201110 08:33:20.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.029" level="INFO">VALUE: [5.917000000008055e-06, 5.943999999993843e-06, 5.9729999999924566e-06, 5.943999999993843e-06, 5.943999999993843e-06, 5.971999999992983e-06, 5.958000000000352e-06, 5.986999999998965e-06, 5.9450000000071945e-06, 5.971999999992983e-06, 5.972000000006861e-06, 5.9450000000071945e-06, 5.917000000008055e-06, 5.930000000001212e-06, 5.958000000000352e-06, 5.944000000007721e-06, 5.931000000000686e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.985999999999492e-06, 5.930999999986808e-06, 5.944000000007721e-06, 5.930000000001212e-06, 5.9729999999924566e-06, 5.9450000000071945e-06, 5.931000000000686e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.972000000006861e-06, 5.9729999999924566e-06, 5.9589999999998255e-06, 5.985999999999492e-06, 5.916999999994177e-06, 5.971999999992983e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.943999999993843e-06, 5.9589999999998255e-06, 5.971999999992983e-06, 5.971999999992983e-06, 5.916999999994177e-06, 5.9589999999998255e-06, 5.931000000000686e-06, 5.916999999994177e-06, 5.943999999993843e-06, 5.971999999992983e-06, 5.985999999999492e-06, 5.9450000000071945e-06, 5.958000000000352e-06]</msg>
<status status="PASS" starttime="20201110 08:33:20.028" endtime="20201110 08:33:20.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.023" endtime="20201110 08:33:20.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.033" endtime="20201110 08:33:20.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:20.036" endtime="20201110 08:33:20.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.035" endtime="20201110 08:33:20.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.031" endtime="20201110 08:33:20.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.659" endtime="20201110 08:33:20.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.658" endtime="20201110 08:33:20.057"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.065" endtime="20201110 08:33:20.089"></status>
</kw>
<msg timestamp="20201110 08:33:20.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.064" endtime="20201110 08:33:20.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.090" endtime="20201110 08:33:20.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.093" endtime="20201110 08:33:20.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.061" endtime="20201110 08:33:20.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.059" endtime="20201110 08:33:20.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.102" endtime="20201110 08:33:20.390"></status>
</kw>
<msg timestamp="20201110 08:33:20.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023081472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.100" endtime="20201110 08:33:20.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023081472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.394" endtime="20201110 08:33:20.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.403" endtime="20201110 08:33:20.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.097" endtime="20201110 08:33:20.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.096" endtime="20201110 08:33:20.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:20.409" level="INFO">${RESULT} = [{'time': 0.023087389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.023102792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:20.406" endtime="20201110 08:33:20.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:20.423" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:20.410" endtime="20201110 08:33:20.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.427" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:33:20.426" endtime="20201110 08:33:20.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.430" level="INFO">VALUE: [5.917000000001116e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.999999999999062e-06, 5.915999999998173e-06, 5.9439999999973125e-06, 5.931000000000686e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.9439999999973125e-06, 6.012999999999158e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.887999999999033e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.973000000002865e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.9439999999973125e-06, 5.874999999998937e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.931000000000686e-06, 5.944000000000782e-06, 5.9729999999993955e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.915999999998173e-06]</msg>
<status status="PASS" starttime="20201110 08:33:20.428" endtime="20201110 08:33:20.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.424" endtime="20201110 08:33:20.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.433" endtime="20201110 08:33:20.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:20.437" endtime="20201110 08:33:20.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.435" endtime="20201110 08:33:20.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.432" endtime="20201110 08:33:20.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.058" endtime="20201110 08:33:20.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.057" endtime="20201110 08:33:20.458"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.466" endtime="20201110 08:33:20.485"></status>
</kw>
<msg timestamp="20201110 08:33:20.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.464" endtime="20201110 08:33:20.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.487" endtime="20201110 08:33:20.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.489" endtime="20201110 08:33:20.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.462" endtime="20201110 08:33:20.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.460" endtime="20201110 08:33:20.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.499" endtime="20201110 08:33:20.784"></status>
</kw>
<msg timestamp="20201110 08:33:20.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024447889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024453861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.497" endtime="20201110 08:33:20.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024447889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024453861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.789" endtime="20201110 08:33:20.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.797" endtime="20201110 08:33:20.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.495" endtime="20201110 08:33:20.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.493" endtime="20201110 08:33:20.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:20.803" level="INFO">${RESULT} = [{'time': 0.024453861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.024468958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:20.800" endtime="20201110 08:33:20.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:20.817" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:20.804" endtime="20201110 08:33:20.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.821" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:33:20.820" endtime="20201110 08:33:20.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.824" level="INFO">VALUE: [5.971999999999922e-06, 5.9439999999973125e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.901999999998603e-06, 5.973000000002865e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.9439999999973125e-06, 5.958000000000352e-06, 5.930000000001212e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.931000000000686e-06, 5.889000000001976e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.930000000001212e-06, 5.958000000000352e-06, 6.000000000002531e-06, 5.986999999998965e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.9029999999980765e-06, 5.944000000000782e-06, 5.9729999999993955e-06, 5.944000000000782e-06, 5.9439999999973125e-06, 5.931000000000686e-06, 5.945000000000256e-06, 5.999999999999062e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.931000000000686e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.931000000000686e-06, 5.929999999997743e-06, 5.930000000001212e-06]</msg>
<status status="PASS" starttime="20201110 08:33:20.822" endtime="20201110 08:33:20.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.818" endtime="20201110 08:33:20.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.827" endtime="20201110 08:33:20.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:20.831" endtime="20201110 08:33:20.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.829" endtime="20201110 08:33:20.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.826" endtime="20201110 08:33:20.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.458" endtime="20201110 08:33:20.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.458" endtime="20201110 08:33:20.851"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.860" endtime="20201110 08:33:20.877"></status>
</kw>
<msg timestamp="20201110 08:33:20.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.858" endtime="20201110 08:33:20.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.878" endtime="20201110 08:33:20.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.881" endtime="20201110 08:33:20.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.856" endtime="20201110 08:33:20.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.854" endtime="20201110 08:33:20.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.891" endtime="20201110 08:33:21.175"></status>
</kw>
<msg timestamp="20201110 08:33:21.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.889" endtime="20201110 08:33:21.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.179" endtime="20201110 08:33:21.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.187" endtime="20201110 08:33:21.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.886" endtime="20201110 08:33:21.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.885" endtime="20201110 08:33:21.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:21.194" level="INFO">${RESULT} = [{'time': 0.022381597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.022395597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:21.190" endtime="20201110 08:33:21.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:21.208" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:21.195" endtime="20201110 08:33:21.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.213" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:33:21.212" endtime="20201110 08:33:21.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.215" level="INFO">VALUE: [5.944000000000782e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.902000000002072e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.958000000000352e-06, 6.0139999999986316e-06, 5.930000000001212e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.875000000002406e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.860999999999367e-06, 5.9589999999998255e-06, 5.916999999997646e-06, 6.000000000002531e-06, 5.985999999999492e-06, 5.917000000001116e-06, 5.971999999999922e-06, 5.931000000000686e-06, 5.9589999999998255e-06, 5.931000000000686e-06, 5.8889999999985065e-06, 5.944000000000782e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.931000000000686e-06, 5.971999999999922e-06, 5.930999999997216e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.917000000001116e-06, 5.9589999999998255e-06, 5.916000000001642e-06]</msg>
<status status="PASS" starttime="20201110 08:33:21.214" endtime="20201110 08:33:21.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.209" endtime="20201110 08:33:21.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.226" endtime="20201110 08:33:21.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:21.230" endtime="20201110 08:33:21.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.228" endtime="20201110 08:33:21.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.225" endtime="20201110 08:33:21.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.852" endtime="20201110 08:33:21.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.852" endtime="20201110 08:33:21.251"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.260" endtime="20201110 08:33:21.280"></status>
</kw>
<msg timestamp="20201110 08:33:21.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.258" endtime="20201110 08:33:21.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.282" endtime="20201110 08:33:21.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.284" endtime="20201110 08:33:21.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.255" endtime="20201110 08:33:21.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.253" endtime="20201110 08:33:21.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.294" endtime="20201110 08:33:21.581"></status>
</kw>
<msg timestamp="20201110 08:33:21.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024954264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024960194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.292" endtime="20201110 08:33:21.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024954264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024960194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.585" endtime="20201110 08:33:21.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.593" endtime="20201110 08:33:21.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.290" endtime="20201110 08:33:21.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.288" endtime="20201110 08:33:21.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:21.600" level="INFO">${RESULT} = [{'time': 0.024960194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.024972514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:21.597" endtime="20201110 08:33:21.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:21.613" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:21.601" endtime="20201110 08:33:21.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.619" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:33:21.618" endtime="20201110 08:33:21.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.622" level="INFO">VALUE: [5.930000000001212e-06, 5.971999999999922e-06, 6.000000000002531e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.889000000001976e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.931000000000686e-06, 5.916000000001642e-06, 5.971999999999922e-06, 5.929999999997743e-06, 5.971999999999922e-06, 5.9439999999973125e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.944999999996786e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 6.0279999999982015e-06, 5.987000000002435e-06, 5.945000000000256e-06, 5.875000000002406e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 5.9439999999973125e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.916000000001642e-06, 5.958000000000352e-06, 5.9029999999980765e-06, 5.958000000000352e-06, 5.930000000001212e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 5.945000000000256e-06]</msg>
<status status="PASS" starttime="20201110 08:33:21.620" endtime="20201110 08:33:21.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.615" endtime="20201110 08:33:21.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.627" endtime="20201110 08:33:21.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:21.631" endtime="20201110 08:33:21.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.629" endtime="20201110 08:33:21.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.625" endtime="20201110 08:33:21.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.252" endtime="20201110 08:33:21.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.251" endtime="20201110 08:33:21.652"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.661" endtime="20201110 08:33:21.676"></status>
</kw>
<msg timestamp="20201110 08:33:21.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.659" endtime="20201110 08:33:21.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.677" endtime="20201110 08:33:21.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.680" endtime="20201110 08:33:21.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.657" endtime="20201110 08:33:21.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.654" endtime="20201110 08:33:21.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.690" endtime="20201110 08:33:21.974"></status>
</kw>
<msg timestamp="20201110 08:33:21.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020652556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020658569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.688" endtime="20201110 08:33:21.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020652556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020658569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.978" endtime="20201110 08:33:21.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.986" endtime="20201110 08:33:21.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.686" endtime="20201110 08:33:21.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.684" endtime="20201110 08:33:21.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:21.992" level="INFO">${RESULT} = [{'time': 0.020658569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.013000000002627e-06, 'source_diff': 6.013000000002627e-06}, {'time': 0.02067, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201110 08:33:21.989" endtime="20201110 08:33:21.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:22.006" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:21.993" endtime="20201110 08:33:22.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.010" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:33:22.009" endtime="20201110 08:33:22.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.013" level="INFO">VALUE: [6.013000000002627e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.930000000001212e-06, 5.9439999999973125e-06, 5.9589999999998255e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.944000000000782e-06, 5.931000000000686e-06, 5.916000000001642e-06, 5.971999999999922e-06, 5.973000000002865e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.8889999999985065e-06, 5.944000000000782e-06, 5.985999999999492e-06, 6.0279999999982015e-06, 5.958000000000352e-06, 5.999999999999062e-06, 5.958000000000352e-06, 5.958000000000352e-06, 6.000000000002531e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.929999999997743e-06, 5.9589999999998255e-06, 5.944999999996786e-06, 5.9589999999998255e-06, 5.972000000003391e-06, 5.985999999999492e-06, 5.931000000000686e-06, 5.9439999999973125e-06, 5.9439999999973125e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.930999999997216e-06, 5.916000000001642e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.9589999999998255e-06]</msg>
<status status="PASS" starttime="20201110 08:33:22.011" endtime="20201110 08:33:22.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.007" endtime="20201110 08:33:22.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.016" endtime="20201110 08:33:22.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:22.020" endtime="20201110 08:33:22.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.018" endtime="20201110 08:33:22.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.015" endtime="20201110 08:33:22.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.653" endtime="20201110 08:33:22.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.652" endtime="20201110 08:33:22.041"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.049" endtime="20201110 08:33:22.067"></status>
</kw>
<msg timestamp="20201110 08:33:22.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.047" endtime="20201110 08:33:22.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.069" endtime="20201110 08:33:22.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.071" endtime="20201110 08:33:22.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.045" endtime="20201110 08:33:22.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.043" endtime="20201110 08:33:22.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.081" endtime="20201110 08:33:22.368"></status>
</kw>
<msg timestamp="20201110 08:33:22.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023858931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023864861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.080" endtime="20201110 08:33:22.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023858931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023864861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.373" endtime="20201110 08:33:22.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.381" endtime="20201110 08:33:22.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.077" endtime="20201110 08:33:22.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.075" endtime="20201110 08:33:22.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:22.388" level="INFO">${RESULT} = [{'time': 0.023864861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.023882042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:22.384" endtime="20201110 08:33:22.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:22.402" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:22.389" endtime="20201110 08:33:22.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.406" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:33:22.405" endtime="20201110 08:33:22.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.409" level="INFO">VALUE: [5.930000000001212e-06, 5.945000000000256e-06, 5.930000000001212e-06, 5.901999999998603e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.945000000000256e-06, 6.040999999998298e-06, 5.931000000000686e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.930000000001212e-06, 5.929999999997743e-06, 5.874999999998937e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.930000000001212e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.931000000000686e-06, 5.9729999999993955e-06, 5.9439999999973125e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.9439999999973125e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.973000000002865e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.916000000001642e-06, 5.931000000000686e-06, 5.958000000000352e-06, 5.999999999999062e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.930000000001212e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.931000000000686e-06]</msg>
<status status="PASS" starttime="20201110 08:33:22.407" endtime="20201110 08:33:22.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.403" endtime="20201110 08:33:22.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.412" endtime="20201110 08:33:22.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:22.415" endtime="20201110 08:33:22.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.414" endtime="20201110 08:33:22.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.411" endtime="20201110 08:33:22.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.042" endtime="20201110 08:33:22.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.041" endtime="20201110 08:33:22.436"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.445" endtime="20201110 08:33:22.460"></status>
</kw>
<msg timestamp="20201110 08:33:22.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.443" endtime="20201110 08:33:22.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.462" endtime="20201110 08:33:22.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.464" endtime="20201110 08:33:22.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.441" endtime="20201110 08:33:22.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.439" endtime="20201110 08:33:22.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.474" endtime="20201110 08:33:22.759"></status>
</kw>
<msg timestamp="20201110 08:33:22.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020051556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.473" endtime="20201110 08:33:22.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020051556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.763" endtime="20201110 08:33:22.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.771" endtime="20201110 08:33:22.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.470" endtime="20201110 08:33:22.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.468" endtime="20201110 08:33:22.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:22.778" level="INFO">${RESULT} = [{'time': 0.020051556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.020064722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:22.775" endtime="20201110 08:33:22.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:22.792" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:22.779" endtime="20201110 08:33:22.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.797" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:33:22.796" endtime="20201110 08:33:22.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.799" level="INFO">VALUE: [5.945000000000256e-06, 5.999999999999062e-06, 5.958000000000352e-06, 5.9029999999980765e-06, 5.9589999999998255e-06, 5.986999999998965e-06, 5.9439999999973125e-06, 5.9589999999998255e-06, 5.9439999999973125e-06, 5.958000000000352e-06, 5.931000000000686e-06, 5.9439999999973125e-06, 5.930999999997216e-06, 5.930000000001212e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.930000000001212e-06, 5.931000000000686e-06, 5.888000000002502e-06, 6.0279999999982015e-06, 5.929999999997743e-06, 5.971999999999922e-06, 5.929999999997743e-06, 5.9729999999993955e-06, 5.916999999997646e-06, 5.958000000000352e-06, 6.014000000002101e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 6.040999999998298e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.931000000000686e-06, 5.999999999999062e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.903000000001546e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.930000000001212e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.9029999999980765e-06]</msg>
<status status="PASS" starttime="20201110 08:33:22.798" endtime="20201110 08:33:22.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.793" endtime="20201110 08:33:22.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.803" endtime="20201110 08:33:22.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:22.806" endtime="20201110 08:33:22.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.804" endtime="20201110 08:33:22.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.801" endtime="20201110 08:33:22.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.437" endtime="20201110 08:33:22.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.437" endtime="20201110 08:33:22.827"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.835" endtime="20201110 08:33:22.852"></status>
</kw>
<msg timestamp="20201110 08:33:22.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.834" endtime="20201110 08:33:22.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.853" endtime="20201110 08:33:22.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.856" endtime="20201110 08:33:22.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.831" endtime="20201110 08:33:22.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.829" endtime="20201110 08:33:22.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.866" endtime="20201110 08:33:23.152"></status>
</kw>
<msg timestamp="20201110 08:33:23.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021383375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021389319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.864" endtime="20201110 08:33:23.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021383375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021389319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.156" endtime="20201110 08:33:23.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.164" endtime="20201110 08:33:23.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.862" endtime="20201110 08:33:23.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.860" endtime="20201110 08:33:23.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:23.171" level="INFO">${RESULT} = [{'time': 0.021389319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.021399972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:23.168" endtime="20201110 08:33:23.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:23.184" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:23.172" endtime="20201110 08:33:23.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.189" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:33:23.188" endtime="20201110 08:33:23.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.191" level="INFO">VALUE: [5.944000000000782e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9579999999968825e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.958000000000352e-06, 6.0279999999982015e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.986999999998965e-06, 5.958000000000352e-06, 5.915999999998173e-06, 5.916999999997646e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.929999999997743e-06, 5.958000000000352e-06, 6.055999999997341e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.930999999997216e-06, 5.945000000000256e-06, 5.931000000000686e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.930999999997216e-06, 5.945000000000256e-06, 5.931000000000686e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.9729999999993955e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.929999999997743e-06, 5.9439999999973125e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.9579999999968825e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.930000000001212e-06]</msg>
<status status="PASS" starttime="20201110 08:33:23.190" endtime="20201110 08:33:23.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.185" endtime="20201110 08:33:23.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.195" endtime="20201110 08:33:23.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:23.198" endtime="20201110 08:33:23.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.196" endtime="20201110 08:33:23.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.193" endtime="20201110 08:33:23.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.828" endtime="20201110 08:33:23.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.827" endtime="20201110 08:33:23.219"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.227" endtime="20201110 08:33:23.243"></status>
</kw>
<msg timestamp="20201110 08:33:23.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.226" endtime="20201110 08:33:23.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.245" endtime="20201110 08:33:23.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.247" endtime="20201110 08:33:23.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.223" endtime="20201110 08:33:23.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.221" endtime="20201110 08:33:23.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.257" endtime="20201110 08:33:23.545"></status>
</kw>
<msg timestamp="20201110 08:33:23.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021328139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021334111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.256" endtime="20201110 08:33:23.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021328139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021334111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.549" endtime="20201110 08:33:23.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.557" endtime="20201110 08:33:23.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.253" endtime="20201110 08:33:23.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.252" endtime="20201110 08:33:23.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:23.564" level="INFO">${RESULT} = [{'time': 0.021334111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.021345681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:23.560" endtime="20201110 08:33:23.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:23.577" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:23.565" endtime="20201110 08:33:23.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.581" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:33:23.580" endtime="20201110 08:33:23.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.584" level="INFO">VALUE: [5.971999999999922e-06, 5.9589999999998255e-06, 6.000000000002531e-06, 5.971999999999922e-06, 5.972000000003391e-06, 5.944000000000782e-06, 5.971999999999922e-06, 6.0279999999982015e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.917000000001116e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.9439999999973125e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.945000000000256e-06, 6.0139999999986316e-06, 5.986999999998965e-06, 5.971999999999922e-06, 5.973000000002865e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.973000000002865e-06, 5.887999999999033e-06, 5.9439999999973125e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.972000000003391e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.9729999999993955e-06, 5.944000000000782e-06, 5.987000000002435e-06, 5.9729999999993955e-06, 5.901999999998603e-06, 6.028000000001671e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.958000000000352e-06]</msg>
<status status="PASS" starttime="20201110 08:33:23.582" endtime="20201110 08:33:23.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.578" endtime="20201110 08:33:23.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.587" endtime="20201110 08:33:23.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:23.591" endtime="20201110 08:33:23.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.589" endtime="20201110 08:33:23.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.586" endtime="20201110 08:33:23.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.220" endtime="20201110 08:33:23.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.219" endtime="20201110 08:33:23.612"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.620" endtime="20201110 08:33:23.637"></status>
</kw>
<msg timestamp="20201110 08:33:23.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.619" endtime="20201110 08:33:23.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.639" endtime="20201110 08:33:23.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.641" endtime="20201110 08:33:23.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.616" endtime="20201110 08:33:23.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.614" endtime="20201110 08:33:23.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.651" endtime="20201110 08:33:23.938"></status>
</kw>
<msg timestamp="20201110 08:33:23.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020379056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020385, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:23.649" endtime="20201110 08:33:23.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020379056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020385, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:23.942" endtime="20201110 08:33:23.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.950" endtime="20201110 08:33:23.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.647" endtime="20201110 08:33:23.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.645" endtime="20201110 08:33:23.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:23.957" level="INFO">${RESULT} = [{'time': 0.020385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.020401264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:33:23.954" endtime="20201110 08:33:23.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:23.970" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:23.958" endtime="20201110 08:33:23.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.975" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:33:23.974" endtime="20201110 08:33:23.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.979" level="INFO">VALUE: [5.944000000000782e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.931000000000686e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.959000000003295e-06, 5.971999999999922e-06, 6.014000000002101e-06, 5.930000000001212e-06, 5.931000000000686e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.959000000003295e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.930000000001212e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.945000000000256e-06, 6.0279999999982015e-06, 5.931000000000686e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 6.041999999997771e-06, 5.971999999999922e-06, 5.930000000001212e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.931000000000686e-06, 5.931000000000686e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.9439999999973125e-06, 5.931000000000686e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.944999999996786e-06, 5.945000000000256e-06, 5.945000000000256e-06]</msg>
<status status="PASS" starttime="20201110 08:33:23.977" endtime="20201110 08:33:23.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.971" endtime="20201110 08:33:23.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.983" endtime="20201110 08:33:23.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:23.988" endtime="20201110 08:33:24.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.986" endtime="20201110 08:33:24.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.981" endtime="20201110 08:33:24.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.613" endtime="20201110 08:33:24.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.612" endtime="20201110 08:33:24.009"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.017" endtime="20201110 08:33:24.037"></status>
</kw>
<msg timestamp="20201110 08:33:24.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.016" endtime="20201110 08:33:24.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.038" endtime="20201110 08:33:24.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.041" endtime="20201110 08:33:24.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.014" endtime="20201110 08:33:24.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.012" endtime="20201110 08:33:24.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.050" endtime="20201110 08:33:24.335"></status>
</kw>
<msg timestamp="20201110 08:33:24.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025215042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025220986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.049" endtime="20201110 08:33:24.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025215042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025220986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.339" endtime="20201110 08:33:24.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.348" endtime="20201110 08:33:24.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.046" endtime="20201110 08:33:24.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.045" endtime="20201110 08:33:24.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:24.354" level="INFO">${RESULT} = [{'time': 0.025220986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.025236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:33:24.351" endtime="20201110 08:33:24.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:24.369" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:24.355" endtime="20201110 08:33:24.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.373" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:33:24.372" endtime="20201110 08:33:24.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.376" level="INFO">VALUE: [5.944000000000782e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.9439999999973125e-06, 5.944999999996786e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.9029999999980765e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.929999999997743e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.931000000000686e-06, 6.014000000002101e-06, 5.945000000000256e-06, 5.971999999999922e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.9439999999973125e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.944999999996786e-06, 5.958000000000352e-06, 5.917000000001116e-06, 5.944000000000782e-06, 5.9439999999973125e-06, 6.0139999999986316e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.915999999998173e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.929999999997743e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9579999999968825e-06, 5.930000000001212e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.931000000000686e-06, 5.945000000000256e-06, 5.9439999999973125e-06, 5.916999999997646e-06]</msg>
<status status="PASS" starttime="20201110 08:33:24.374" endtime="20201110 08:33:24.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.370" endtime="20201110 08:33:24.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.379" endtime="20201110 08:33:24.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:24.383" endtime="20201110 08:33:24.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.381" endtime="20201110 08:33:24.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.378" endtime="20201110 08:33:24.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.010" endtime="20201110 08:33:24.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.009" endtime="20201110 08:33:24.404"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.412" endtime="20201110 08:33:24.433"></status>
</kw>
<msg timestamp="20201110 08:33:24.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.411" endtime="20201110 08:33:24.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.435" endtime="20201110 08:33:24.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.437" endtime="20201110 08:33:24.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.408" endtime="20201110 08:33:24.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.406" endtime="20201110 08:33:24.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.447" endtime="20201110 08:33:24.733"></status>
</kw>
<msg timestamp="20201110 08:33:24.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223545, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:24.445" endtime="20201110 08:33:24.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223545, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:24.737" endtime="20201110 08:33:24.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.746" endtime="20201110 08:33:24.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.443" endtime="20201110 08:33:24.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.441" endtime="20201110 08:33:24.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:24.752" level="INFO">${RESULT} = [{'time': 0.0223545, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.022365833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:24.749" endtime="20201110 08:33:24.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:24.765" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:24.753" endtime="20201110 08:33:24.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.770" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:33:24.769" endtime="20201110 08:33:24.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.772" level="INFO">VALUE: [5.958000000000352e-06, 5.930000000001212e-06, 5.944000000000782e-06, 5.931000000000686e-06, 5.985999999999492e-06, 5.929999999997743e-06, 5.985999999999492e-06, 6.0139999999986316e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 5.9589999999998255e-06, 6.026999999998728e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.917000000001116e-06, 5.971999999999922e-06, 5.9439999999973125e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.930000000001212e-06, 5.945000000000256e-06, 5.931000000000686e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.055000000001337e-06, 5.917000000001116e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.999999999999062e-06, 5.929999999997743e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.930000000001212e-06, 5.931000000000686e-06, 5.958000000000352e-06]</msg>
<status status="PASS" starttime="20201110 08:33:24.771" endtime="20201110 08:33:24.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.766" endtime="20201110 08:33:24.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.776" endtime="20201110 08:33:24.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:24.780" endtime="20201110 08:33:24.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.778" endtime="20201110 08:33:24.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.774" endtime="20201110 08:33:24.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.404" endtime="20201110 08:33:24.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.404" endtime="20201110 08:33:24.800"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.809" endtime="20201110 08:33:24.826"></status>
</kw>
<msg timestamp="20201110 08:33:24.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.807" endtime="20201110 08:33:24.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.827" endtime="20201110 08:33:24.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.830" endtime="20201110 08:33:24.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.805" endtime="20201110 08:33:24.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.803" endtime="20201110 08:33:24.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.840" endtime="20201110 08:33:25.127"></status>
</kw>
<msg timestamp="20201110 08:33:25.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02237225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:24.838" endtime="20201110 08:33:25.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02237225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:25.131" endtime="20201110 08:33:25.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.139" endtime="20201110 08:33:25.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.836" endtime="20201110 08:33:25.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.834" endtime="20201110 08:33:25.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:25.146" level="INFO">${RESULT} = [{'time': 0.022378264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.022393861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:25.142" endtime="20201110 08:33:25.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:25.159" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:25.147" endtime="20201110 08:33:25.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.163" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:33:25.163" endtime="20201110 08:33:25.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.166" level="INFO">VALUE: [6.0139999999986316e-06, 5.944000000000782e-06, 5.930000000001212e-06, 5.930999999997216e-06, 5.971999999999922e-06, 5.915999999998173e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.958000000000352e-06, 6.0279999999982015e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.9029999999980765e-06, 5.944000000000782e-06, 5.931000000000686e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.944000000000782e-06, 6.042000000001241e-06, 5.986000000002961e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.986000000002961e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.916000000001642e-06, 5.958000000000352e-06, 5.8889999999985065e-06, 5.944000000000782e-06, 5.944000000000782e-06, 6.000000000002531e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.931000000000686e-06, 5.999999999999062e-06, 5.986999999998965e-06, 5.9439999999973125e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.9439999999973125e-06]</msg>
<status status="PASS" starttime="20201110 08:33:25.165" endtime="20201110 08:33:25.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.160" endtime="20201110 08:33:25.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.169" endtime="20201110 08:33:25.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:25.173" endtime="20201110 08:33:25.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.171" endtime="20201110 08:33:25.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.168" endtime="20201110 08:33:25.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.801" endtime="20201110 08:33:25.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.801" endtime="20201110 08:33:25.194"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.202" endtime="20201110 08:33:25.217"></status>
</kw>
<msg timestamp="20201110 08:33:25.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.201" endtime="20201110 08:33:25.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.219" endtime="20201110 08:33:25.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.221" endtime="20201110 08:33:25.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.198" endtime="20201110 08:33:25.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.196" endtime="20201110 08:33:25.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.231" endtime="20201110 08:33:25.517"></status>
</kw>
<msg timestamp="20201110 08:33:25.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020811778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020817694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.230" endtime="20201110 08:33:25.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020811778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020817694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.522" endtime="20201110 08:33:25.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.530" endtime="20201110 08:33:25.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.227" endtime="20201110 08:33:25.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.226" endtime="20201110 08:33:25.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:25.536" level="INFO">${RESULT} = [{'time': 0.020817694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.020830097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:25.533" endtime="20201110 08:33:25.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:25.550" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:25.537" endtime="20201110 08:33:25.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.554" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:33:25.553" endtime="20201110 08:33:25.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.556" level="INFO">VALUE: [5.916000000001642e-06, 5.9439999999973125e-06, 5.944999999996786e-06, 5.9439999999973125e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.944000000000782e-06, 5.889000000001976e-06, 5.985999999999492e-06, 5.9439999999973125e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 6.056000000000811e-06, 5.9729999999993955e-06, 5.930000000001212e-06, 5.917000000001116e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.931000000000686e-06, 5.930000000001212e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 5.999999999999062e-06, 5.9439999999973125e-06, 5.931000000000686e-06, 5.945000000000256e-06, 5.9729999999993955e-06, 5.944000000000782e-06, 5.944999999996786e-06, 6.026999999998728e-06, 5.929999999997743e-06, 5.985999999999492e-06, 5.9579999999968825e-06, 5.972000000003391e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.9589999999998255e-06]</msg>
<status status="PASS" starttime="20201110 08:33:25.555" endtime="20201110 08:33:25.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.550" endtime="20201110 08:33:25.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.560" endtime="20201110 08:33:25.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:25.564" endtime="20201110 08:33:25.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.562" endtime="20201110 08:33:25.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.558" endtime="20201110 08:33:25.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.195" endtime="20201110 08:33:25.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.194" endtime="20201110 08:33:25.585"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.593" endtime="20201110 08:33:25.615"></status>
</kw>
<msg timestamp="20201110 08:33:25.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.592" endtime="20201110 08:33:25.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.616" endtime="20201110 08:33:25.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.619" endtime="20201110 08:33:25.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.589" endtime="20201110 08:33:25.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.587" endtime="20201110 08:33:25.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.629" endtime="20201110 08:33:25.913"></status>
</kw>
<msg timestamp="20201110 08:33:25.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021768153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.627" endtime="20201110 08:33:25.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021768153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.917" endtime="20201110 08:33:25.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.926" endtime="20201110 08:33:25.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.625" endtime="20201110 08:33:25.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.623" endtime="20201110 08:33:25.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:25.932" level="INFO">${RESULT} = [{'time': 0.021768153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.021779167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:25.929" endtime="20201110 08:33:25.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:25.946" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:25.933" endtime="20201110 08:33:25.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.951" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:33:25.950" endtime="20201110 08:33:25.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.953" level="INFO">VALUE: [6.0279999999982015e-06, 5.9729999999993955e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.930000000001212e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.915999999998173e-06, 5.986000000002961e-06, 5.958000000000352e-06, 5.9439999999973125e-06, 5.971999999999922e-06, 5.986000000002961e-06, 5.999999999999062e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.944999999996786e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.931000000000686e-06, 5.931000000000686e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.971999999999922e-06, 6.000000000002531e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.9579999999968825e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.971999999999922e-06, 6.000000000002531e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.944999999996786e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201110 08:33:25.952" endtime="20201110 08:33:25.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.947" endtime="20201110 08:33:25.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.957" endtime="20201110 08:33:25.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:25.961" endtime="20201110 08:33:25.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.959" endtime="20201110 08:33:25.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.955" endtime="20201110 08:33:25.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.586" endtime="20201110 08:33:25.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.585" endtime="20201110 08:33:25.981"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.990" endtime="20201110 08:33:26.007"></status>
</kw>
<msg timestamp="20201110 08:33:26.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.988" endtime="20201110 08:33:26.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.008" endtime="20201110 08:33:26.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.011" endtime="20201110 08:33:26.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.986" endtime="20201110 08:33:26.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.984" endtime="20201110 08:33:26.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.021" endtime="20201110 08:33:26.307"></status>
</kw>
<msg timestamp="20201110 08:33:26.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.019" endtime="20201110 08:33:26.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.311" endtime="20201110 08:33:26.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.319" endtime="20201110 08:33:26.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.017" endtime="20201110 08:33:26.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.015" endtime="20201110 08:33:26.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:26.326" level="INFO">${RESULT} = [{'time': 0.022015028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.022028597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:26.323" endtime="20201110 08:33:26.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:26.339" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:26.327" endtime="20201110 08:33:26.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.344" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:33:26.343" endtime="20201110 08:33:26.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.346" level="INFO">VALUE: [5.971999999999922e-06, 5.999999999999062e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.944999999996786e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 5.8889999999985065e-06, 5.930000000001212e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9439999999973125e-06, 5.971999999999922e-06, 5.916000000001642e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.9029999999980765e-06, 5.915999999998173e-06, 5.874999999998937e-06, 5.931000000000686e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.944999999996786e-06, 5.985999999999492e-06, 5.931000000000686e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.916000000001642e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.931000000000686e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.986999999998965e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.9729999999993955e-06, 5.929999999997743e-06]</msg>
<status status="PASS" starttime="20201110 08:33:26.345" endtime="20201110 08:33:26.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.340" endtime="20201110 08:33:26.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.374" endtime="20201110 08:33:26.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:26.378" endtime="20201110 08:33:26.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.376" endtime="20201110 08:33:26.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.373" endtime="20201110 08:33:26.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.982" endtime="20201110 08:33:26.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.982" endtime="20201110 08:33:26.399"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.407" endtime="20201110 08:33:26.423"></status>
</kw>
<msg timestamp="20201110 08:33:26.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.406" endtime="20201110 08:33:26.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.425" endtime="20201110 08:33:26.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.427" endtime="20201110 08:33:26.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.403" endtime="20201110 08:33:26.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.401" endtime="20201110 08:33:26.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.437" endtime="20201110 08:33:26.723"></status>
</kw>
<msg timestamp="20201110 08:33:26.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.436" endtime="20201110 08:33:26.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.727" endtime="20201110 08:33:26.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.735" endtime="20201110 08:33:26.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.433" endtime="20201110 08:33:26.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.431" endtime="20201110 08:33:26.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:26.742" level="INFO">${RESULT} = [{'time': 0.021814292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.021827306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:26.738" endtime="20201110 08:33:26.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:26.755" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:26.743" endtime="20201110 08:33:26.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.760" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:33:26.759" endtime="20201110 08:33:26.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.762" level="INFO">VALUE: [5.945000000000256e-06, 5.931000000000686e-06, 5.930000000001212e-06, 6.0139999999986316e-06, 5.986999999998965e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.917000000001116e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.929999999997743e-06, 5.945000000000256e-06, 5.902000000002072e-06, 5.9589999999998255e-06, 5.9579999999968825e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.903000000001546e-06, 5.999999999999062e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.9439999999973125e-06, 5.971999999999922e-06, 5.903000000001546e-06, 5.9589999999998255e-06, 5.931000000000686e-06, 5.9589999999998255e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 5.9729999999993955e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.9729999999993955e-06]</msg>
<status status="PASS" starttime="20201110 08:33:26.761" endtime="20201110 08:33:26.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.756" endtime="20201110 08:33:26.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.766" endtime="20201110 08:33:26.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:26.769" endtime="20201110 08:33:26.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.768" endtime="20201110 08:33:26.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.764" endtime="20201110 08:33:26.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.400" endtime="20201110 08:33:26.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.399" endtime="20201110 08:33:26.790"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.799" endtime="20201110 08:33:26.816"></status>
</kw>
<msg timestamp="20201110 08:33:26.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.797" endtime="20201110 08:33:26.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.818" endtime="20201110 08:33:26.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.820" endtime="20201110 08:33:26.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.794" endtime="20201110 08:33:26.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.792" endtime="20201110 08:33:26.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.830" endtime="20201110 08:33:27.116"></status>
</kw>
<msg timestamp="20201110 08:33:27.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022300806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.829" endtime="20201110 08:33:27.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022300806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.120" endtime="20201110 08:33:27.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.128" endtime="20201110 08:33:27.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.826" endtime="20201110 08:33:27.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.824" endtime="20201110 08:33:27.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:27.135" level="INFO">${RESULT} = [{'time': 0.022300806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.02231775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:33:27.131" endtime="20201110 08:33:27.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:27.148" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:27.136" endtime="20201110 08:33:27.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.152" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:33:27.151" endtime="20201110 08:33:27.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.155" level="INFO">VALUE: [5.9589999999998255e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.944000000000782e-06, 6.028000000001671e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.929999999997743e-06, 5.917000000001116e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 5.931000000000686e-06, 5.971999999999922e-06, 6.000000000002531e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.999999999999062e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.917000000001116e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.958000000000352e-06, 6.0279999999982015e-06, 5.930000000001212e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.999999999999062e-06, 5.916999999997646e-06, 5.944000000000782e-06, 5.917000000001116e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.931000000000686e-06, 5.9589999999998255e-06]</msg>
<status status="PASS" starttime="20201110 08:33:27.153" endtime="20201110 08:33:27.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.149" endtime="20201110 08:33:27.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.158" endtime="20201110 08:33:27.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:27.162" endtime="20201110 08:33:27.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.160" endtime="20201110 08:33:27.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.157" endtime="20201110 08:33:27.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.791" endtime="20201110 08:33:27.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.790" endtime="20201110 08:33:27.183"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.191" endtime="20201110 08:33:27.208"></status>
</kw>
<msg timestamp="20201110 08:33:27.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.190" endtime="20201110 08:33:27.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.209" endtime="20201110 08:33:27.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.212" endtime="20201110 08:33:27.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.187" endtime="20201110 08:33:27.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.185" endtime="20201110 08:33:27.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.221" endtime="20201110 08:33:27.507"></status>
</kw>
<msg timestamp="20201110 08:33:27.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021440764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.220" endtime="20201110 08:33:27.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021440764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.511" endtime="20201110 08:33:27.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.519" endtime="20201110 08:33:27.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.217" endtime="20201110 08:33:27.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.216" endtime="20201110 08:33:27.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:27.526" level="INFO">${RESULT} = [{'time': 0.021440764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.021455556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:27.523" endtime="20201110 08:33:27.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:27.541" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:27.527" endtime="20201110 08:33:27.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.545" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:33:27.544" endtime="20201110 08:33:27.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.548" level="INFO">VALUE: [5.985999999999492e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.9729999999993955e-06, 5.9589999999998255e-06, 5.9439999999973125e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.930000000001212e-06, 5.9589999999998255e-06, 5.917000000001116e-06, 5.944000000000782e-06, 5.916000000001642e-06, 5.944999999996786e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.8889999999985065e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.9439999999973125e-06, 5.931000000000686e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.9589999999998255e-06, 5.9439999999973125e-06, 5.9579999999968825e-06, 5.971999999999922e-06, 5.986000000002961e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.874999999998937e-06, 5.930000000001212e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.8889999999985065e-06, 5.930999999997216e-06, 5.958000000000352e-06, 5.945000000000256e-06]</msg>
<status status="PASS" starttime="20201110 08:33:27.546" endtime="20201110 08:33:27.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.542" endtime="20201110 08:33:27.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.551" endtime="20201110 08:33:27.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:27.555" endtime="20201110 08:33:27.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.553" endtime="20201110 08:33:27.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.550" endtime="20201110 08:33:27.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.184" endtime="20201110 08:33:27.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.183" endtime="20201110 08:33:27.576"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.584" endtime="20201110 08:33:27.599"></status>
</kw>
<msg timestamp="20201110 08:33:27.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.583" endtime="20201110 08:33:27.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.601" endtime="20201110 08:33:27.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.603" endtime="20201110 08:33:27.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.580" endtime="20201110 08:33:27.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.578" endtime="20201110 08:33:27.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.613" endtime="20201110 08:33:27.899"></status>
</kw>
<msg timestamp="20201110 08:33:27.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.611" endtime="20201110 08:33:27.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.903" endtime="20201110 08:33:27.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.912" endtime="20201110 08:33:27.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.609" endtime="20201110 08:33:27.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.607" endtime="20201110 08:33:27.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:27.918" level="INFO">${RESULT} = [{'time': 0.020493792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.020504875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:27.915" endtime="20201110 08:33:27.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:27.931" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:27.919" endtime="20201110 08:33:27.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.936" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:33:27.935" endtime="20201110 08:33:27.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.938" level="INFO">VALUE: [5.945000000000256e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.931000000000686e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 6.028000000001671e-06, 5.916999999997646e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.9729999999993955e-06, 5.931000000000686e-06, 5.971999999999922e-06, 5.9579999999968825e-06, 6.0139999999986316e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.931000000000686e-06, 5.9439999999973125e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.9579999999968825e-06, 5.930000000001212e-06, 5.930999999997216e-06, 5.958000000000352e-06, 5.9439999999973125e-06, 5.9579999999968825e-06, 5.930000000001212e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.929999999997743e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.9439999999973125e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.917000000001116e-06, 5.999999999999062e-06]</msg>
<status status="PASS" starttime="20201110 08:33:27.937" endtime="20201110 08:33:27.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.932" endtime="20201110 08:33:27.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.942" endtime="20201110 08:33:27.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:27.945" endtime="20201110 08:33:27.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.944" endtime="20201110 08:33:27.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.940" endtime="20201110 08:33:27.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.576" endtime="20201110 08:33:27.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.576" endtime="20201110 08:33:27.966"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.975" endtime="20201110 08:33:27.992"></status>
</kw>
<msg timestamp="20201110 08:33:27.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.973" endtime="20201110 08:33:27.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.993" endtime="20201110 08:33:27.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.996" endtime="20201110 08:33:27.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.971" endtime="20201110 08:33:27.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.969" endtime="20201110 08:33:27.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.006" endtime="20201110 08:33:28.295"></status>
</kw>
<msg timestamp="20201110 08:33:28.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.004" endtime="20201110 08:33:28.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.300" endtime="20201110 08:33:28.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.312" endtime="20201110 08:33:28.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.002" endtime="20201110 08:33:28.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.000" endtime="20201110 08:33:28.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:28.325" level="INFO">${RESULT} = [{'time': 0.021743542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.021759167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:28.319" endtime="20201110 08:33:28.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:28.343" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:28.326" endtime="20201110 08:33:28.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.349" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:33:28.347" endtime="20201110 08:33:28.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.352" level="INFO">VALUE: [5.945000000000256e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.945000000000256e-06, 6.0279999999982015e-06, 5.9589999999998255e-06, 5.959000000003295e-06, 6.000000000002531e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.916000000001642e-06, 5.944000000000782e-06, 5.9589999999998255e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.9029999999980765e-06, 5.930000000001212e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.9729999999993955e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 6.000000000002531e-06, 5.958000000000352e-06, 5.916000000001642e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.9579999999968825e-06, 5.944000000000782e-06, 5.9579999999968825e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.944000000000782e-06]</msg>
<status status="PASS" starttime="20201110 08:33:28.350" endtime="20201110 08:33:28.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.344" endtime="20201110 08:33:28.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.359" endtime="20201110 08:33:28.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:28.364" endtime="20201110 08:33:28.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.362" endtime="20201110 08:33:28.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.355" endtime="20201110 08:33:28.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.967" endtime="20201110 08:33:28.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.967" endtime="20201110 08:33:28.385"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.394" endtime="20201110 08:33:28.414"></status>
</kw>
<msg timestamp="20201110 08:33:28.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.393" endtime="20201110 08:33:28.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.415" endtime="20201110 08:33:28.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.418" endtime="20201110 08:33:28.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.390" endtime="20201110 08:33:28.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.388" endtime="20201110 08:33:28.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.428" endtime="20201110 08:33:28.716"></status>
</kw>
<msg timestamp="20201110 08:33:28.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024777472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024783403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.427" endtime="20201110 08:33:28.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024777472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024783403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.721" endtime="20201110 08:33:28.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.729" endtime="20201110 08:33:28.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.424" endtime="20201110 08:33:28.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.422" endtime="20201110 08:33:28.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:28.736" level="INFO">${RESULT} = [{'time': 0.024783403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.024800389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:28.732" endtime="20201110 08:33:28.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:28.750" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:28.737" endtime="20201110 08:33:28.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.754" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:33:28.753" endtime="20201110 08:33:28.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.757" level="INFO">VALUE: [5.931000000000686e-06, 5.945000000000256e-06, 6.000000000002531e-06, 6.0139999999986316e-06, 5.930000000001212e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.986999999998965e-06, 5.860999999999367e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.930999999997216e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.930000000001212e-06, 5.958000000000352e-06, 5.944000000000782e-06, 6.014000000002101e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.973000000002865e-06, 5.9589999999998255e-06, 5.987000000002435e-06, 5.9439999999973125e-06, 5.916000000001642e-06, 5.931000000000686e-06]</msg>
<status status="PASS" starttime="20201110 08:33:28.755" endtime="20201110 08:33:28.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.751" endtime="20201110 08:33:28.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.761" endtime="20201110 08:33:28.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:28.764" endtime="20201110 08:33:28.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.763" endtime="20201110 08:33:28.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.759" endtime="20201110 08:33:28.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.386" endtime="20201110 08:33:28.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.386" endtime="20201110 08:33:28.789"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.808" endtime="20201110 08:33:28.828"></status>
</kw>
<msg timestamp="20201110 08:33:28.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.804" endtime="20201110 08:33:28.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.832" endtime="20201110 08:33:28.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.837" endtime="20201110 08:33:28.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.799" endtime="20201110 08:33:28.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.794" endtime="20201110 08:33:28.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.859" endtime="20201110 08:33:29.152"></status>
</kw>
<msg timestamp="20201110 08:33:29.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036579042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036585014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.856" endtime="20201110 08:33:29.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036579042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036585014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.157" endtime="20201110 08:33:29.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.165" endtime="20201110 08:33:29.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.850" endtime="20201110 08:33:29.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.846" endtime="20201110 08:33:29.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:29.172" level="INFO">${RESULT} = [{'time': 0.036585014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.036595764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:29.169" endtime="20201110 08:33:29.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:29.187" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:29.173" endtime="20201110 08:33:29.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.192" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:33:29.191" endtime="20201110 08:33:29.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.194" level="INFO">VALUE: [5.971999999999922e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 5.931000000000686e-06, 5.931000000000686e-06, 5.916000000001642e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.931000000000686e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.931000000000686e-06, 5.944000000000782e-06, 5.931000000000686e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.931000000000686e-06, 6.0139999999986316e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.930000000001212e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.930000000001212e-06, 5.973000000006334e-06, 5.931000000000686e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.944999999993317e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.903000000001546e-06, 5.945000000000256e-06]</msg>
<status status="PASS" starttime="20201110 08:33:29.193" endtime="20201110 08:33:29.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.188" endtime="20201110 08:33:29.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.198" endtime="20201110 08:33:29.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:29.202" endtime="20201110 08:33:29.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.200" endtime="20201110 08:33:29.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.196" endtime="20201110 08:33:29.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.791" endtime="20201110 08:33:29.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.789" endtime="20201110 08:33:29.223"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.232" endtime="20201110 08:33:29.250"></status>
</kw>
<msg timestamp="20201110 08:33:29.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.230" endtime="20201110 08:33:29.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.252" endtime="20201110 08:33:29.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.254" endtime="20201110 08:33:29.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.227" endtime="20201110 08:33:29.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.225" endtime="20201110 08:33:29.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.265" endtime="20201110 08:33:29.551"></status>
</kw>
<msg timestamp="20201110 08:33:29.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021406333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021412222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.263" endtime="20201110 08:33:29.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021406333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021412222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.555" endtime="20201110 08:33:29.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.564" endtime="20201110 08:33:29.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.260" endtime="20201110 08:33:29.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.259" endtime="20201110 08:33:29.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:29.571" level="INFO">${RESULT} = [{'time': 0.021412222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.021425167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:29.568" endtime="20201110 08:33:29.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:29.585" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:29.572" endtime="20201110 08:33:29.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.590" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:33:29.589" endtime="20201110 08:33:29.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.593" level="INFO">VALUE: [5.889000000001976e-06, 5.9729999999993955e-06, 5.985999999999492e-06, 5.9729999999993955e-06, 5.917000000001116e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.916999999997646e-06, 5.945000000000256e-06, 5.9729999999993955e-06, 5.944000000000782e-06, 5.930999999997216e-06, 5.986000000002961e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.986000000002961e-06, 5.889000000001976e-06, 5.971999999999922e-06, 5.9579999999968825e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.931000000000686e-06, 5.971999999999922e-06, 5.930000000001212e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.931000000000686e-06, 6.041999999997771e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.9579999999968825e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.986000000002961e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.9029999999980765e-06, 5.958000000000352e-06, 5.9439999999973125e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.9439999999973125e-06]</msg>
<status status="PASS" starttime="20201110 08:33:29.591" endtime="20201110 08:33:29.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.586" endtime="20201110 08:33:29.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.596" endtime="20201110 08:33:29.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:29.600" endtime="20201110 08:33:29.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.598" endtime="20201110 08:33:29.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.595" endtime="20201110 08:33:29.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.224" endtime="20201110 08:33:29.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.223" endtime="20201110 08:33:29.621"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.630" endtime="20201110 08:33:29.649"></status>
</kw>
<msg timestamp="20201110 08:33:29.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.628" endtime="20201110 08:33:29.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.651" endtime="20201110 08:33:29.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.653" endtime="20201110 08:33:29.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.626" endtime="20201110 08:33:29.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.623" endtime="20201110 08:33:29.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.664" endtime="20201110 08:33:29.951"></status>
</kw>
<msg timestamp="20201110 08:33:29.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025008847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025014792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.662" endtime="20201110 08:33:29.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025008847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025014792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.956" endtime="20201110 08:33:29.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.964" endtime="20201110 08:33:29.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.660" endtime="20201110 08:33:29.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.658" endtime="20201110 08:33:29.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:29.971" level="INFO">${RESULT} = [{'time': 0.025014792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.025030708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:29.968" endtime="20201110 08:33:29.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:29.985" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:29.972" endtime="20201110 08:33:29.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.990" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:33:29.989" endtime="20201110 08:33:29.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.992" level="INFO">VALUE: [5.945000000000256e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.9439999999973125e-06, 5.903000000001546e-06, 5.945000000000256e-06, 5.930000000001212e-06, 5.987000000002435e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.958000000000352e-06, 6.000000000002531e-06, 5.945000000000256e-06, 5.9579999999968825e-06, 5.958000000000352e-06, 5.959000000003295e-06, 6.012999999999158e-06, 5.916999999997646e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.917000000001116e-06, 5.930000000001212e-06, 5.931000000000686e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.8889999999985065e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.929999999997743e-06, 5.945000000000256e-06, 6.000000000002531e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.9029999999980765e-06, 5.8889999999985065e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.931000000000686e-06]</msg>
<status status="PASS" starttime="20201110 08:33:29.991" endtime="20201110 08:33:29.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.986" endtime="20201110 08:33:29.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.996" endtime="20201110 08:33:29.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.000" endtime="20201110 08:33:30.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.998" endtime="20201110 08:33:30.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.994" endtime="20201110 08:33:30.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.622" endtime="20201110 08:33:30.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.621" endtime="20201110 08:33:30.021"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.030" endtime="20201110 08:33:30.050"></status>
</kw>
<msg timestamp="20201110 08:33:30.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.028" endtime="20201110 08:33:30.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.051" endtime="20201110 08:33:30.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.054" endtime="20201110 08:33:30.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.026" endtime="20201110 08:33:30.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.023" endtime="20201110 08:33:30.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.064" endtime="20201110 08:33:30.350"></status>
</kw>
<msg timestamp="20201110 08:33:30.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.062" endtime="20201110 08:33:30.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.354" endtime="20201110 08:33:30.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.363" endtime="20201110 08:33:30.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.060" endtime="20201110 08:33:30.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.058" endtime="20201110 08:33:30.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:30.370" level="INFO">${RESULT} = [{'time': 0.021941403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.986000000002961e-06, 'source_diff': 5.986000000002961e-06}, {'time': 0.021952236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:30.366" endtime="20201110 08:33:30.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:30.384" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:30.371" endtime="20201110 08:33:30.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.388" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:33:30.387" endtime="20201110 08:33:30.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.391" level="INFO">VALUE: [5.986000000002961e-06, 5.958000000000352e-06, 5.930000000001212e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.916000000001642e-06, 6.0139999999986316e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.999999999999062e-06, 5.917000000001116e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.9439999999973125e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.874999999998937e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.999999999999062e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 5.917000000001116e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.9439999999973125e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201110 08:33:30.389" endtime="20201110 08:33:30.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.385" endtime="20201110 08:33:30.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.395" endtime="20201110 08:33:30.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.398" endtime="20201110 08:33:30.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.397" endtime="20201110 08:33:30.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.393" endtime="20201110 08:33:30.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.022" endtime="20201110 08:33:30.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.021" endtime="20201110 08:33:30.419"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.428" endtime="20201110 08:33:30.447"></status>
</kw>
<msg timestamp="20201110 08:33:30.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.427" endtime="20201110 08:33:30.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.449" endtime="20201110 08:33:30.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.452" endtime="20201110 08:33:30.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.424" endtime="20201110 08:33:30.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.422" endtime="20201110 08:33:30.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.462" endtime="20201110 08:33:30.747"></status>
</kw>
<msg timestamp="20201110 08:33:30.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025486736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.460" endtime="20201110 08:33:30.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025486736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.751" endtime="20201110 08:33:30.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.759" endtime="20201110 08:33:30.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.458" endtime="20201110 08:33:30.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.456" endtime="20201110 08:33:30.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:30.766" level="INFO">${RESULT} = [{'time': 0.025486736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.025497875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:30.763" endtime="20201110 08:33:30.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:30.781" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:30.767" endtime="20201110 08:33:30.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.786" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:33:30.785" endtime="20201110 08:33:30.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.789" level="INFO">VALUE: [5.958000000000352e-06, 5.944000000000782e-06, 5.931000000000686e-06, 5.9579999999968825e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.9439999999973125e-06, 5.971999999999922e-06, 6.042000000001241e-06, 5.945000000000256e-06, 5.986999999998965e-06, 5.9729999999993955e-06, 5.9729999999993955e-06, 5.9439999999973125e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.929999999997743e-06, 5.973000000002865e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.860999999999367e-06, 5.931000000000686e-06, 5.917000000001116e-06, 6.000000000002531e-06, 5.9579999999968825e-06, 5.971999999999922e-06, 5.930999999997216e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.986999999998965e-06, 5.985999999999492e-06, 5.9729999999993955e-06, 5.987000000002435e-06, 5.958000000000352e-06, 5.9439999999973125e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.931000000000686e-06, 5.971999999999922e-06, 5.931000000000686e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.901999999998603e-06]</msg>
<status status="PASS" starttime="20201110 08:33:30.787" endtime="20201110 08:33:30.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.782" endtime="20201110 08:33:30.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.792" endtime="20201110 08:33:30.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.796" endtime="20201110 08:33:30.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.794" endtime="20201110 08:33:30.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.791" endtime="20201110 08:33:30.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.420" endtime="20201110 08:33:30.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.420" endtime="20201110 08:33:30.817"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.826" endtime="20201110 08:33:30.845"></status>
</kw>
<msg timestamp="20201110 08:33:30.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.824" endtime="20201110 08:33:30.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.847" endtime="20201110 08:33:30.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.849" endtime="20201110 08:33:30.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.822" endtime="20201110 08:33:30.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.820" endtime="20201110 08:33:30.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.860" endtime="20201110 08:33:31.147"></status>
</kw>
<msg timestamp="20201110 08:33:31.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024740819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02474675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:30.858" endtime="20201110 08:33:31.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024740819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02474675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:31.152" endtime="20201110 08:33:31.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.161" endtime="20201110 08:33:31.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.855" endtime="20201110 08:33:31.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.854" endtime="20201110 08:33:31.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:31.168" level="INFO">${RESULT} = [{'time': 0.02474675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.024759222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:31.164" endtime="20201110 08:33:31.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:31.182" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:31.169" endtime="20201110 08:33:31.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.186" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:33:31.185" endtime="20201110 08:33:31.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.189" level="INFO">VALUE: [5.931000000000686e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.9439999999973125e-06, 5.931000000000686e-06, 5.944000000000782e-06, 5.931000000000686e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.986999999998965e-06, 5.930000000001212e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.930000000001212e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.945000000000256e-06, 5.9729999999993955e-06, 5.944000000000782e-06, 5.930999999997216e-06, 5.931000000000686e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.930999999997216e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.944999999996786e-06, 5.958000000000352e-06]</msg>
<status status="PASS" starttime="20201110 08:33:31.187" endtime="20201110 08:33:31.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.182" endtime="20201110 08:33:31.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.193" endtime="20201110 08:33:31.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:31.196" endtime="20201110 08:33:31.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.194" endtime="20201110 08:33:31.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.191" endtime="20201110 08:33:31.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.818" endtime="20201110 08:33:31.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.817" endtime="20201110 08:33:31.217"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.226" endtime="20201110 08:33:31.246"></status>
</kw>
<msg timestamp="20201110 08:33:31.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.225" endtime="20201110 08:33:31.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.248" endtime="20201110 08:33:31.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.251" endtime="20201110 08:33:31.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.222" endtime="20201110 08:33:31.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.220" endtime="20201110 08:33:31.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.261" endtime="20201110 08:33:31.548"></status>
</kw>
<msg timestamp="20201110 08:33:31.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021400875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021406806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.259" endtime="20201110 08:33:31.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021400875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021406806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.552" endtime="20201110 08:33:31.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.561" endtime="20201110 08:33:31.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.257" endtime="20201110 08:33:31.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.255" endtime="20201110 08:33:31.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:31.567" level="INFO">${RESULT} = [{'time': 0.021406806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.021418292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:31.564" endtime="20201110 08:33:31.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:31.582" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:31.569" endtime="20201110 08:33:31.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.586" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:33:31.585" endtime="20201110 08:33:31.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.589" level="INFO">VALUE: [5.931000000000686e-06, 5.9729999999993955e-06, 5.916000000001642e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 5.930000000001212e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.931000000000686e-06, 5.930000000001212e-06, 5.9589999999998255e-06, 5.9439999999973125e-06, 5.9579999999968825e-06, 5.931000000000686e-06, 5.916000000001642e-06, 5.958000000000352e-06, 5.917000000001116e-06, 6.0139999999986316e-06, 5.931000000000686e-06, 5.9439999999973125e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.985999999999492e-06, 5.930000000001212e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.944999999996786e-06, 5.985999999999492e-06, 5.930000000001212e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.915999999998173e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.930999999997216e-06, 6.000000000002531e-06, 5.9439999999973125e-06, 5.985999999999492e-06, 5.944000000000782e-06, 5.945000000000256e-06]</msg>
<status status="PASS" starttime="20201110 08:33:31.587" endtime="20201110 08:33:31.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.582" endtime="20201110 08:33:31.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.600" endtime="20201110 08:33:31.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:31.604" endtime="20201110 08:33:31.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.602" endtime="20201110 08:33:31.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.598" endtime="20201110 08:33:31.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.218" endtime="20201110 08:33:31.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.218" endtime="20201110 08:33:31.625"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.634" endtime="20201110 08:33:31.649"></status>
</kw>
<msg timestamp="20201110 08:33:31.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.632" endtime="20201110 08:33:31.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.650" endtime="20201110 08:33:31.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.653" endtime="20201110 08:33:31.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.629" endtime="20201110 08:33:31.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.627" endtime="20201110 08:33:31.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.663" endtime="20201110 08:33:31.949"></status>
</kw>
<msg timestamp="20201110 08:33:31.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020851056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02088575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:31.662" endtime="20201110 08:33:31.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020851056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02088575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:31.954" endtime="20201110 08:33:31.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.962" endtime="20201110 08:33:31.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.659" endtime="20201110 08:33:31.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.657" endtime="20201110 08:33:31.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:31.969" level="INFO">${RESULT} = [{'time': 0.02088575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.469400000000178e-05, 'source_diff': 3.469400000000178e-05}, {'time': 0.020915792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:31.966" endtime="20201110 08:33:31.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:31.983" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:31.970" endtime="20201110 08:33:31.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.988" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:33:31.987" endtime="20201110 08:33:31.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.990" level="INFO">VALUE: [3.469400000000178e-05, 2.312499999999884e-05, 2.0235999999999865e-05, 2.031900000000128e-05, 2.222300000000177e-05, 2.5083999999998136e-05, 2.3235999999999396e-05, 2.1277999999999575e-05, 2.1278000000003044e-05, 2.1221999999997826e-05, 2.508300000000213e-05, 2.029100000000214e-05, 2.1222000000001295e-05, 1.938899999999813e-05, 2.316700000000102e-05, 1.940300000000117e-05, 2.512499999999737e-05, 2.506900000000256e-05, 2.315300000000145e-05, 2.311100000000274e-05, 2.5013000000000812e-05, 1.9333999999999324e-05, 2.031900000000128e-05, 2.4137999999999937e-05, 2.411100000000027e-05, 2.513899999999694e-05, 2.22090000000022e-05, 2.1250000000000435e-05, 2.318100000000059e-05, 2.12770000000001e-05, 2.0320000000000754e-05, 2.415299999999898e-05, 1.937499999999856e-05, 2.023699999999934e-05, 2.5027999999999856e-05, 2.2207999999999256e-05, 1.9333999999999324e-05, 2.5082999999998662e-05, 2.1264000000000005e-05, 1.934699999999942e-05, 2.3111999999998745e-05, 2.5096999999998232e-05, 2.5110999999997802e-05, 2.313900000000188e-05, 2.50970000000017e-05, 2.413899999999941e-05, 1.940300000000117e-05, 2.413899999999941e-05, 2.0292000000001614e-05, 2.0320000000000754e-05]</msg>
<status status="PASS" starttime="20201110 08:33:31.989" endtime="20201110 08:33:31.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.984" endtime="20201110 08:33:31.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.994" endtime="20201110 08:33:31.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:31.998" endtime="20201110 08:33:32.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.996" endtime="20201110 08:33:32.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.992" endtime="20201110 08:33:32.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.626" endtime="20201110 08:33:32.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.625" endtime="20201110 08:33:32.019"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.028" endtime="20201110 08:33:32.045"></status>
</kw>
<msg timestamp="20201110 08:33:32.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.026" endtime="20201110 08:33:32.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.047" endtime="20201110 08:33:32.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.050" endtime="20201110 08:33:32.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.024" endtime="20201110 08:33:32.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.022" endtime="20201110 08:33:32.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.060" endtime="20201110 08:33:32.345"></status>
</kw>
<msg timestamp="20201110 08:33:32.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023577694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023607611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.059" endtime="20201110 08:33:32.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023577694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023607611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.349" endtime="20201110 08:33:32.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.358" endtime="20201110 08:33:32.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.056" endtime="20201110 08:33:32.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.054" endtime="20201110 08:33:32.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:32.365" level="INFO">${RESULT} = [{'time': 0.023607611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9917000000000832e-05, 'source_diff': 2.9917000000000832e-05}, {'time': 0.023637403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:32.361" endtime="20201110 08:33:32.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:32.380" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:32.366" endtime="20201110 08:33:32.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.384" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:33:32.383" endtime="20201110 08:33:32.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.387" level="INFO">VALUE: [2.9917000000000832e-05, 2.0334000000000324e-05, 2.2222000000002295e-05, 2.313899999999841e-05, 2.0292000000001614e-05, 2.505500000000299e-05, 2.0305999999997715e-05, 2.2235999999998396e-05, 2.1249999999996966e-05, 2.412499999999984e-05, 2.0306000000001184e-05, 2.413899999999941e-05, 2.1236000000000865e-05, 2.315300000000145e-05, 2.219499999999916e-05, 2.2235999999998396e-05, 2.2221999999998826e-05, 2.2235999999998396e-05, 2.126300000000053e-05, 2.0305999999997715e-05, 2.318099999999712e-05, 2.3138000000002407e-05, 2.2236000000001865e-05, 2.1250000000000435e-05, 2.416699999999855e-05, 2.413900000000288e-05, 2.2207999999999256e-05, 2.3165999999998077e-05, 2.411100000000027e-05, 2.512499999999737e-05, 2.1264000000000005e-05, 2.1306000000002184e-05, 2.1277999999999575e-05, 2.411100000000027e-05, 2.3180000000001116e-05, 1.933299999999985e-05, 1.9347999999998894e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.416699999999855e-05, 2.5082999999998662e-05, 2.219500000000263e-05, 2.3165999999998077e-05, 2.6054999999997053e-05, 2.316699999999755e-05, 2.5082999999998662e-05, 2.318100000000059e-05, 2.030499999999824e-05, 2.2221999999998826e-05, 2.404100000000242e-05]</msg>
<status status="PASS" starttime="20201110 08:33:32.386" endtime="20201110 08:33:32.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.381" endtime="20201110 08:33:32.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.391" endtime="20201110 08:33:32.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.394" endtime="20201110 08:33:32.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.393" endtime="20201110 08:33:32.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.389" endtime="20201110 08:33:32.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.020" endtime="20201110 08:33:32.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.019" endtime="20201110 08:33:32.415"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.424" endtime="20201110 08:33:32.448"></status>
</kw>
<msg timestamp="20201110 08:33:32.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.423" endtime="20201110 08:33:32.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.450" endtime="20201110 08:33:32.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.452" endtime="20201110 08:33:32.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.420" endtime="20201110 08:33:32.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.418" endtime="20201110 08:33:32.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.463" endtime="20201110 08:33:32.751"></status>
</kw>
<msg timestamp="20201110 08:33:32.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023990042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024009375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.461" endtime="20201110 08:33:32.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023990042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024009375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.755" endtime="20201110 08:33:32.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.763" endtime="20201110 08:33:32.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.459" endtime="20201110 08:33:32.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.457" endtime="20201110 08:33:32.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:32.770" level="INFO">${RESULT} = [{'time': 0.024009375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.933299999999985e-05, 'source_diff': 1.933299999999985e-05}, {'time': 0.024040208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:32.767" endtime="20201110 08:33:32.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:32.784" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:32.771" endtime="20201110 08:33:32.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.789" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:33:32.788" endtime="20201110 08:33:32.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.792" level="INFO">VALUE: [1.933299999999985e-05, 2.508300000000213e-05, 2.319500000000016e-05, 2.2207999999999256e-05, 2.5027999999999856e-05, 2.6055999999999996e-05, 2.2278000000000575e-05, 2.2207999999999256e-05, 1.937499999999856e-05, 2.5083999999998136e-05, 2.1250000000000435e-05, 2.2277999999997106e-05, 2.0306000000001184e-05, 1.934699999999942e-05, 2.2221999999998826e-05, 2.5082999999998662e-05, 2.2235999999998396e-05, 2.519500000000216e-05, 2.4208000000001256e-05, 2.5027999999999856e-05, 2.1250000000000435e-05, 2.1264000000000005e-05, 2.5098000000001175e-05, 2.026299999999953e-05, 2.130500000000271e-05, 2.031900000000128e-05, 2.229100000000067e-05, 2.416700000000202e-05, 1.930500000000071e-05, 2.0263999999999005e-05, 2.5110999999997802e-05, 2.031899999999781e-05, 2.5068999999999092e-05, 2.1250000000000435e-05, 2.5083999999998136e-05, 2.3166000000001546e-05, 2.033300000000085e-05, 1.936099999999899e-05, 2.418100000000159e-05, 2.1264000000000005e-05, 2.2236000000001865e-05, 1.933299999999985e-05, 2.515299999999998e-05, 2.1291999999999145e-05, 2.6013999999997817e-05, 2.3180000000001116e-05, 2.0320000000000754e-05, 2.033299999999738e-05, 2.413899999999941e-05, 1.933299999999985e-05]</msg>
<status status="PASS" starttime="20201110 08:33:32.790" endtime="20201110 08:33:32.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.785" endtime="20201110 08:33:32.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.795" endtime="20201110 08:33:32.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.799" endtime="20201110 08:33:32.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.797" endtime="20201110 08:33:32.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.794" endtime="20201110 08:33:32.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.416" endtime="20201110 08:33:32.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.416" endtime="20201110 08:33:32.820"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.829" endtime="20201110 08:33:32.845"></status>
</kw>
<msg timestamp="20201110 08:33:32.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.827" endtime="20201110 08:33:32.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.846" endtime="20201110 08:33:32.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.849" endtime="20201110 08:33:32.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.825" endtime="20201110 08:33:32.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.823" endtime="20201110 08:33:32.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.860" endtime="20201110 08:33:33.146"></status>
</kw>
<msg timestamp="20201110 08:33:33.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021230528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021237458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.858" endtime="20201110 08:33:33.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021230528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021237458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.151" endtime="20201110 08:33:33.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.159" endtime="20201110 08:33:33.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.855" endtime="20201110 08:33:33.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.853" endtime="20201110 08:33:33.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:33.166" level="INFO">${RESULT} = [{'time': 0.021237458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.930000000002212e-06, 'source_diff': 6.930000000002212e-06}, {'time': 0.021267347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:33.163" endtime="20201110 08:33:33.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:33.180" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:33.167" endtime="20201110 08:33:33.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.185" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:33:33.184" endtime="20201110 08:33:33.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.188" level="INFO">VALUE: [6.930000000002212e-06, 2.5110999999997802e-05, 2.4098000000000175e-05, 2.0235999999999865e-05, 2.036099999999999e-05, 2.3180000000001116e-05, 2.2207999999999256e-05, 2.6042000000000426e-05, 2.313899999999841e-05, 2.411100000000027e-05, 2.5068999999999092e-05, 2.1236000000000865e-05, 2.1320000000001754e-05, 2.033299999999738e-05, 2.511100000000127e-05, 2.218099999999959e-05, 1.934699999999942e-05, 2.2249999999997966e-05, 2.50970000000017e-05, 1.9334000000002793e-05, 2.6096999999999232e-05, 2.2221999999998826e-05, 2.5069999999998566e-05, 2.029100000000214e-05, 2.5138000000000937e-05, 2.411100000000027e-05, 2.2249999999997966e-05, 2.5069999999998566e-05, 1.930500000000071e-05, 2.1277999999999575e-05, 2.0291999999998145e-05, 1.936099999999899e-05, 2.32229999999993e-05, 2.2221999999998826e-05, 2.219500000000263e-05, 2.2222000000002295e-05, 2.316700000000102e-05, 2.2276999999997632e-05, 2.3208000000000256e-05, 2.2221999999998826e-05, 2.1264000000000005e-05, 2.5082999999998662e-05, 2.2180000000000116e-05, 2.0306000000001184e-05, 2.5971999999999107e-05, 2.5096999999998232e-05, 2.2208000000002726e-05, 2.2235999999998396e-05, 2.033300000000085e-05, 2.413899999999941e-05]</msg>
<status status="PASS" starttime="20201110 08:33:33.186" endtime="20201110 08:33:33.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.181" endtime="20201110 08:33:33.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.191" endtime="20201110 08:33:33.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:33.195" endtime="20201110 08:33:33.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.193" endtime="20201110 08:33:33.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.190" endtime="20201110 08:33:33.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.821" endtime="20201110 08:33:33.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.820" endtime="20201110 08:33:33.216"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.225" endtime="20201110 08:33:33.242"></status>
</kw>
<msg timestamp="20201110 08:33:33.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.223" endtime="20201110 08:33:33.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.243" endtime="20201110 08:33:33.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.246" endtime="20201110 08:33:33.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.221" endtime="20201110 08:33:33.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.218" endtime="20201110 08:33:33.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.257" endtime="20201110 08:33:33.548"></status>
</kw>
<msg timestamp="20201110 08:33:33.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.255" endtime="20201110 08:33:33.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.553" endtime="20201110 08:33:33.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.562" endtime="20201110 08:33:33.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.252" endtime="20201110 08:33:33.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.250" endtime="20201110 08:33:33.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:33.569" level="INFO">${RESULT} = [{'time': 0.022341944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.573599999999802e-05, 'source_diff': 3.573599999999802e-05}, {'time': 0.022371792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:33.565" endtime="20201110 08:33:33.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:33.583" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:33.570" endtime="20201110 08:33:33.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.587" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:33:33.586" endtime="20201110 08:33:33.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.590" level="INFO">VALUE: [3.573599999999802e-05, 2.0334000000000324e-05, 2.412499999999984e-05, 2.315300000000145e-05, 2.0306000000001184e-05, 2.318100000000059e-05, 2.1320000000001754e-05, 2.316699999999755e-05, 1.933299999999985e-05, 2.029100000000214e-05, 2.1264000000000005e-05, 2.412499999999984e-05, 2.1264000000000005e-05, 2.0292000000001614e-05, 2.0277999999998575e-05, 2.412499999999984e-05, 2.3194000000000686e-05, 2.512499999999737e-05, 2.3165999999998077e-05, 2.3179999999997647e-05, 2.6042000000000426e-05, 1.837499999999756e-05, 2.6082999999999662e-05, 1.938899999999813e-05, 2.5083999999998136e-05, 2.0291999999998145e-05, 2.030499999999824e-05, 2.313899999999841e-05, 2.029099999999867e-05, 2.220899999999873e-05, 2.50970000000017e-05, 2.0320000000000754e-05, 1.937499999999856e-05, 2.5068999999999092e-05, 2.0208000000000725e-05, 2.50970000000017e-05, 2.6041000000000952e-05, 2.2193999999999686e-05, 2.515299999999998e-05, 2.3236000000002865e-05, 2.312500000000231e-05, 2.0306000000001184e-05, 2.611100000000227e-05, 2.516699999999955e-05, 2.319500000000016e-05, 2.5098000000001175e-05, 2.512500000000084e-05, 2.034700000000042e-05, 2.031899999999781e-05, 2.415299999999898e-05]</msg>
<status status="PASS" starttime="20201110 08:33:33.589" endtime="20201110 08:33:33.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.584" endtime="20201110 08:33:33.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.594" endtime="20201110 08:33:33.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:33.597" endtime="20201110 08:33:33.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.596" endtime="20201110 08:33:33.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.592" endtime="20201110 08:33:33.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.217" endtime="20201110 08:33:33.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.216" endtime="20201110 08:33:33.618"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.627" endtime="20201110 08:33:33.644"></status>
</kw>
<msg timestamp="20201110 08:33:33.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.626" endtime="20201110 08:33:33.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.646" endtime="20201110 08:33:33.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.648" endtime="20201110 08:33:33.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.623" endtime="20201110 08:33:33.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.621" endtime="20201110 08:33:33.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.659" endtime="20201110 08:33:33.944"></status>
</kw>
<msg timestamp="20201110 08:33:33.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.657" endtime="20201110 08:33:33.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.948" endtime="20201110 08:33:33.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.956" endtime="20201110 08:33:33.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.655" endtime="20201110 08:33:33.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.653" endtime="20201110 08:33:33.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:33.963" level="INFO">${RESULT} = [{'time': 0.021736278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.875000000000937e-06, 'source_diff': 7.875000000000937e-06}, {'time': 0.021766819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:33.960" endtime="20201110 08:33:33.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:33.978" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:33.964" endtime="20201110 08:33:33.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.983" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:33:33.982" endtime="20201110 08:33:33.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.986" level="INFO">VALUE: [7.875000000000937e-06, 2.3165999999998077e-05, 2.1249999999996966e-05, 2.5084000000001605e-05, 2.6042000000000426e-05, 2.2305999999999715e-05, 2.0306000000001184e-05, 2.0306000000001184e-05, 2.2249999999997966e-05, 2.6098000000002175e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.1264000000000005e-05, 2.418099999999812e-05, 2.516699999999955e-05, 2.318100000000059e-05, 2.1305999999998715e-05, 2.1277999999999575e-05, 2.413899999999941e-05, 2.2222000000002295e-05, 2.2207999999999256e-05, 2.2222000000002295e-05, 2.2221999999998826e-05, 2.1264000000000005e-05, 2.22090000000022e-05, 2.029099999999867e-05, 2.0320000000000754e-05, 2.033299999999738e-05, 2.0305999999997715e-05, 2.5096999999998232e-05, 2.313899999999841e-05, 2.2292000000000145e-05, 2.5082999999998662e-05, 2.0334000000000324e-05, 2.413899999999941e-05, 2.222300000000177e-05, 2.5096999999998232e-05, 2.1236000000000865e-05, 2.1264000000000005e-05, 2.2221999999998826e-05, 2.4193999999998217e-05, 2.1222000000001295e-05, 2.2193999999999686e-05, 2.3152000000001977e-05, 2.415300000000245e-05, 2.3193999999997217e-05, 2.037499999999956e-05, 2.315299999999798e-05, 2.4098000000000175e-05, 2.5068999999999092e-05]</msg>
<status status="PASS" starttime="20201110 08:33:33.984" endtime="20201110 08:33:33.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.979" endtime="20201110 08:33:33.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.989" endtime="20201110 08:33:33.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:33.993" endtime="20201110 08:33:34.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.991" endtime="20201110 08:33:34.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.988" endtime="20201110 08:33:34.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.619" endtime="20201110 08:33:34.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.619" endtime="20201110 08:33:34.014"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.023" endtime="20201110 08:33:34.040"></status>
</kw>
<msg timestamp="20201110 08:33:34.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.021" endtime="20201110 08:33:34.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.041" endtime="20201110 08:33:34.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.044" endtime="20201110 08:33:34.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.019" endtime="20201110 08:33:34.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.016" endtime="20201110 08:33:34.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.055" endtime="20201110 08:33:34.342"></status>
</kw>
<msg timestamp="20201110 08:33:34.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023097222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023114611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.053" endtime="20201110 08:33:34.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023097222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023114611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.346" endtime="20201110 08:33:34.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.355" endtime="20201110 08:33:34.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.050" endtime="20201110 08:33:34.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.049" endtime="20201110 08:33:34.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:34.362" level="INFO">${RESULT} = [{'time': 0.023114611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.73889999999996e-05, 'source_diff': 1.73889999999996e-05}, {'time': 0.023145444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:34.358" endtime="20201110 08:33:34.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:34.376" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:34.363" endtime="20201110 08:33:34.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.380" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:33:34.379" endtime="20201110 08:33:34.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.383" level="INFO">VALUE: [1.73889999999996e-05, 2.512500000000084e-05, 2.413900000000288e-05, 2.5055999999998996e-05, 2.1278000000003044e-05, 2.0334000000000324e-05, 2.2236000000001865e-05, 2.2236000000001865e-05, 2.3208000000000256e-05, 1.934699999999942e-05, 2.033299999999738e-05, 2.1250000000000435e-05, 2.320899999999973e-05, 2.1236000000000865e-05, 2.412499999999984e-05, 2.1277999999999575e-05, 2.3180000000001116e-05, 2.415299999999898e-05, 2.219499999999916e-05, 2.6055999999999996e-05, 2.0306000000001184e-05, 2.029099999999867e-05, 2.1249999999996966e-05, 2.4068999999998092e-05, 1.929099999999767e-05, 2.6055999999999996e-05, 2.416700000000202e-05, 2.3221999999999826e-05, 2.408300000000113e-05, 2.511100000000127e-05, 2.2207999999999256e-05, 2.412499999999984e-05, 2.0320000000000754e-05, 2.037500000000303e-05, 2.5083999999998136e-05, 2.0320000000000754e-05, 2.508300000000213e-05, 2.415299999999898e-05, 2.1207999999998256e-05, 2.3194000000000686e-05, 1.937500000000203e-05, 1.937500000000203e-05, 2.515299999999998e-05, 2.413899999999941e-05, 2.1291999999999145e-05, 2.0319999999997285e-05, 2.119500000000163e-05, 2.1334000000001324e-05, 2.5110999999997802e-05, 1.934699999999942e-05]</msg>
<status status="PASS" starttime="20201110 08:33:34.382" endtime="20201110 08:33:34.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.377" endtime="20201110 08:33:34.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.387" endtime="20201110 08:33:34.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:34.390" endtime="20201110 08:33:34.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.389" endtime="20201110 08:33:34.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.385" endtime="20201110 08:33:34.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.015" endtime="20201110 08:33:34.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.014" endtime="20201110 08:33:34.411"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.420" endtime="20201110 08:33:34.438"></status>
</kw>
<msg timestamp="20201110 08:33:34.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.419" endtime="20201110 08:33:34.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.439" endtime="20201110 08:33:34.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.442" endtime="20201110 08:33:34.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.416" endtime="20201110 08:33:34.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.414" endtime="20201110 08:33:34.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.452" endtime="20201110 08:33:34.738"></status>
</kw>
<msg timestamp="20201110 08:33:34.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.451" endtime="20201110 08:33:34.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.743" endtime="20201110 08:33:34.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.751" endtime="20201110 08:33:34.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.448" endtime="20201110 08:33:34.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.446" endtime="20201110 08:33:34.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:34.758" level="INFO">${RESULT} = [{'time': 0.022571514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0722000000001203e-05, 'source_diff': 1.0722000000001203e-05}, {'time': 0.022601972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:34.755" endtime="20201110 08:33:34.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:34.772" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:34.759" endtime="20201110 08:33:34.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.777" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:33:34.776" endtime="20201110 08:33:34.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.780" level="INFO">VALUE: [1.0722000000001203e-05, 2.3194000000000686e-05, 2.1250000000000435e-05, 2.0292000000001614e-05, 2.4111999999999745e-05, 1.934699999999942e-05, 2.2235999999998396e-05, 2.036099999999999e-05, 2.5068999999999092e-05, 1.837499999999756e-05, 2.5083999999998136e-05, 2.1277999999999575e-05, 2.3166000000001546e-05, 2.026299999999953e-05, 2.512500000000084e-05, 2.2250000000001435e-05, 1.937500000000203e-05, 1.936099999999899e-05, 2.0292000000001614e-05, 2.413899999999941e-05, 2.5097999999997705e-05, 2.6027000000001382e-05, 2.316700000000102e-05, 2.1292000000002614e-05, 2.12770000000001e-05, 2.2193999999999686e-05, 2.0305999999997715e-05, 2.0249999999999435e-05, 2.40970000000007e-05, 2.031899999999781e-05, 2.5055999999998996e-05, 2.316699999999755e-05, 2.0347999999999894e-05, 2.0249999999999435e-05, 2.5054999999999522e-05, 2.511100000000127e-05, 2.031900000000128e-05, 2.4096999999997232e-05, 1.936099999999899e-05, 2.5098000000001175e-05, 2.411100000000027e-05, 2.312499999999884e-05, 2.2221999999998826e-05, 2.033299999999738e-05, 2.2249999999997966e-05, 2.40970000000007e-05, 2.4084000000000605e-05, 2.413899999999941e-05, 2.319500000000016e-05, 1.934699999999942e-05]</msg>
<status status="PASS" starttime="20201110 08:33:34.778" endtime="20201110 08:33:34.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.773" endtime="20201110 08:33:34.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.783" endtime="20201110 08:33:34.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:34.787" endtime="20201110 08:33:34.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.785" endtime="20201110 08:33:34.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.782" endtime="20201110 08:33:34.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.412" endtime="20201110 08:33:34.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.412" endtime="20201110 08:33:34.808"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.817" endtime="20201110 08:33:34.834"></status>
</kw>
<msg timestamp="20201110 08:33:34.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.815" endtime="20201110 08:33:34.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.836" endtime="20201110 08:33:34.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.839" endtime="20201110 08:33:34.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.813" endtime="20201110 08:33:34.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.811" endtime="20201110 08:33:34.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.849" endtime="20201110 08:33:35.135"></status>
</kw>
<msg timestamp="20201110 08:33:35.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022740361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.847" endtime="20201110 08:33:35.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022740361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.139" endtime="20201110 08:33:35.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.148" endtime="20201110 08:33:35.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.845" endtime="20201110 08:33:35.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.843" endtime="20201110 08:33:35.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:35.155" level="INFO">${RESULT} = [{'time': 0.022759708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.934699999999942e-05, 'source_diff': 1.934699999999942e-05}, {'time': 0.022790583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:35.151" endtime="20201110 08:33:35.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:35.169" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:35.156" endtime="20201110 08:33:35.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.173" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:33:35.172" endtime="20201110 08:33:35.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.176" level="INFO">VALUE: [1.934699999999942e-05, 2.3180000000001116e-05, 2.4180000000002116e-05, 2.323699999999887e-05, 2.1264000000000005e-05, 2.316700000000102e-05, 1.933299999999985e-05, 2.033300000000085e-05, 2.2222000000002295e-05, 2.316699999999755e-05, 2.413899999999941e-05, 2.313900000000188e-05, 2.2263999999997536e-05, 2.119500000000163e-05, 2.5084000000001605e-05, 2.412499999999984e-05, 2.2236000000001865e-05, 2.316699999999755e-05, 2.136100000000099e-05, 2.1291999999999145e-05, 2.2236000000001865e-05, 2.1277999999999575e-05, 2.5097999999997705e-05, 2.1277999999999575e-05, 1.931900000000028e-05, 2.1222000000001295e-05, 1.9361999999998464e-05, 1.9401999999998226e-05, 2.031900000000128e-05, 2.033300000000085e-05, 2.1277999999999575e-05, 2.511100000000127e-05, 2.406900000000156e-05, 2.412499999999984e-05, 2.5096999999998232e-05, 2.1264000000000005e-05, 2.412499999999984e-05, 2.1277999999999575e-05, 2.6069000000000092e-05, 1.9362000000001933e-05, 2.2207999999999256e-05, 2.12770000000001e-05, 2.0305999999997715e-05, 2.0277999999998575e-05, 2.411100000000027e-05, 2.029099999999867e-05, 2.1236000000000865e-05, 2.513900000000041e-05, 2.6055999999999996e-05, 2.418100000000159e-05]</msg>
<status status="PASS" starttime="20201110 08:33:35.175" endtime="20201110 08:33:35.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.170" endtime="20201110 08:33:35.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.180" endtime="20201110 08:33:35.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.184" endtime="20201110 08:33:35.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.182" endtime="20201110 08:33:35.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.178" endtime="20201110 08:33:35.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.809" endtime="20201110 08:33:35.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.808" endtime="20201110 08:33:35.205"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.213" endtime="20201110 08:33:35.231"></status>
</kw>
<msg timestamp="20201110 08:33:35.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.212" endtime="20201110 08:33:35.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.233" endtime="20201110 08:33:35.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.235" endtime="20201110 08:33:35.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.209" endtime="20201110 08:33:35.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.207" endtime="20201110 08:33:35.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.246" endtime="20201110 08:33:35.533"></status>
</kw>
<msg timestamp="20201110 08:33:35.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023082917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023101278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.244" endtime="20201110 08:33:35.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023082917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023101278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.537" endtime="20201110 08:33:35.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.546" endtime="20201110 08:33:35.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.241" endtime="20201110 08:33:35.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.240" endtime="20201110 08:33:35.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:35.553" level="INFO">${RESULT} = [{'time': 0.023101278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.836099999999799e-05, 'source_diff': 1.836099999999799e-05}, {'time': 0.023132014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:35.549" endtime="20201110 08:33:35.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:35.568" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:35.554" endtime="20201110 08:33:35.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.572" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:33:35.571" endtime="20201110 08:33:35.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.575" level="INFO">VALUE: [1.836099999999799e-05, 2.2207999999999256e-05, 2.313900000000188e-05, 2.5014000000000286e-05, 2.0263999999999005e-05, 2.3180000000001116e-05, 1.9334000000002793e-05, 2.5096999999998232e-05, 2.5084000000001605e-05, 2.3179999999997647e-05, 2.412499999999984e-05, 2.511100000000127e-05, 1.93890000000016e-05, 2.029099999999867e-05, 2.413899999999941e-05, 2.316699999999755e-05, 2.1236000000000865e-05, 1.934700000000289e-05, 2.416699999999855e-05, 2.315299999999798e-05, 2.3207999999996787e-05, 2.2207999999999256e-05, 2.2264000000001005e-05, 2.2250000000001435e-05, 2.315300000000145e-05, 2.2207999999999256e-05, 2.1221999999997826e-05, 2.2235999999998396e-05, 1.933299999999985e-05, 2.412499999999984e-05, 2.506900000000256e-05, 2.2221999999998826e-05, 2.5096999999998232e-05, 2.2207999999999256e-05, 2.1291999999999145e-05, 1.9388000000002126e-05, 2.1264000000000005e-05, 2.6042000000000426e-05, 2.318100000000059e-05, 2.50970000000017e-05, 2.0333999999996855e-05, 2.511100000000127e-05, 2.413899999999941e-05, 2.1292000000002614e-05, 1.9333999999999324e-05, 2.031900000000128e-05, 2.5068999999999092e-05, 2.5027999999999856e-05, 2.1193999999998686e-05, 2.223699999999787e-05]</msg>
<status status="PASS" starttime="20201110 08:33:35.574" endtime="20201110 08:33:35.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.569" endtime="20201110 08:33:35.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.579" endtime="20201110 08:33:35.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.583" endtime="20201110 08:33:35.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.582" endtime="20201110 08:33:35.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.577" endtime="20201110 08:33:35.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.205" endtime="20201110 08:33:35.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.205" endtime="20201110 08:33:35.605"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.614" endtime="20201110 08:33:35.636"></status>
</kw>
<msg timestamp="20201110 08:33:35.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.612" endtime="20201110 08:33:35.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.638" endtime="20201110 08:33:35.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.640" endtime="20201110 08:33:35.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.609" endtime="20201110 08:33:35.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.607" endtime="20201110 08:33:35.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.651" endtime="20201110 08:33:35.937"></status>
</kw>
<msg timestamp="20201110 08:33:35.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025075514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025090111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.649" endtime="20201110 08:33:35.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025075514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025090111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.942" endtime="20201110 08:33:35.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.950" endtime="20201110 08:33:35.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.646" endtime="20201110 08:33:35.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.645" endtime="20201110 08:33:35.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:35.957" level="INFO">${RESULT} = [{'time': 0.025090111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459699999999814e-05, 'source_diff': 1.459699999999814e-05}, {'time': 0.025120681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:35.954" endtime="20201110 08:33:35.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:35.971" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:35.958" endtime="20201110 08:33:35.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.976" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:33:35.975" endtime="20201110 08:33:35.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.978" level="INFO">VALUE: [1.459699999999814e-05, 2.0319999999997285e-05, 2.2264000000001005e-05, 2.5152000000000507e-05, 2.1264000000000005e-05, 1.936100000000246e-05, 2.413900000000288e-05, 2.5098000000001175e-05, 2.0305999999997715e-05, 1.936099999999899e-05, 2.316700000000102e-05, 2.029100000000214e-05, 2.5096999999998232e-05, 2.319500000000016e-05, 2.319500000000016e-05, 2.2207999999999256e-05, 2.5083999999998136e-05, 1.938899999999813e-05, 2.1264000000000005e-05, 2.0292000000001614e-05, 2.6096999999999232e-05, 2.130499999999924e-05, 2.415299999999898e-05, 1.940300000000117e-05, 2.413899999999941e-05, 2.411100000000027e-05, 2.5096999999998232e-05, 2.319500000000016e-05, 2.0306000000001184e-05, 2.029099999999867e-05, 2.413899999999941e-05, 2.50970000000017e-05, 2.512500000000084e-05, 2.512500000000084e-05, 1.936099999999899e-05, 2.6055999999999996e-05, 2.0292000000001614e-05, 2.508300000000213e-05, 2.1264000000000005e-05, 2.219499999999916e-05, 2.123699999999687e-05, 2.508300000000213e-05, 2.0291999999998145e-05, 2.5098000000001175e-05, 2.2193999999999686e-05, 2.3180000000001116e-05, 2.413899999999941e-05, 2.318099999999712e-05, 2.026299999999953e-05, 2.031899999999781e-05]</msg>
<status status="PASS" starttime="20201110 08:33:35.977" endtime="20201110 08:33:35.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.972" endtime="20201110 08:33:35.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.982" endtime="20201110 08:33:35.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.986" endtime="20201110 08:33:36.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.984" endtime="20201110 08:33:36.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.980" endtime="20201110 08:33:36.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.606" endtime="20201110 08:33:36.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.605" endtime="20201110 08:33:36.007"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.016" endtime="20201110 08:33:36.036"></status>
</kw>
<msg timestamp="20201110 08:33:36.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.014" endtime="20201110 08:33:36.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.037" endtime="20201110 08:33:36.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.040" endtime="20201110 08:33:36.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.012" endtime="20201110 08:33:36.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.009" endtime="20201110 08:33:36.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.050" endtime="20201110 08:33:36.336"></status>
</kw>
<msg timestamp="20201110 08:33:36.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024715556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024728181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.049" endtime="20201110 08:33:36.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024715556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024728181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.341" endtime="20201110 08:33:36.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.349" endtime="20201110 08:33:36.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.046" endtime="20201110 08:33:36.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.044" endtime="20201110 08:33:36.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.356" level="INFO">${RESULT} = [{'time': 0.024728181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2624999999998748e-05, 'source_diff': 1.2624999999998748e-05}, {'time': 0.024758681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:36.352" endtime="20201110 08:33:36.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:36.370" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:36.357" endtime="20201110 08:33:36.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.374" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:33:36.373" endtime="20201110 08:33:36.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.377" level="INFO">VALUE: [1.2624999999998748e-05, 2.0306000000001184e-05, 2.411100000000027e-05, 2.6055999999999996e-05, 2.22229999999983e-05, 2.0291999999998145e-05, 2.508300000000213e-05, 2.036099999999999e-05, 1.94029999999977e-05, 2.2235999999998396e-05, 2.22229999999983e-05, 2.319500000000016e-05, 2.1264000000000005e-05, 2.1250000000000435e-05, 2.3165999999998077e-05, 2.0319999999997285e-05, 2.1264000000000005e-05, 2.2235999999998396e-05, 2.516699999999955e-05, 2.1236000000000865e-05, 2.413899999999941e-05, 2.2221999999998826e-05, 1.937499999999856e-05, 2.0291999999998145e-05, 2.0235999999999865e-05, 2.415299999999898e-05, 2.031899999999781e-05, 2.4056000000001465e-05, 2.2208000000002726e-05, 2.6014000000001286e-05, 2.033299999999738e-05, 2.413899999999941e-05, 2.1291999999999145e-05, 2.30969999999997e-05, 2.5096999999998232e-05, 2.031900000000128e-05, 2.0306000000001184e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.6055999999999996e-05, 2.5166000000000077e-05, 2.3208000000000256e-05, 2.1249999999996966e-05, 2.3165999999998077e-05, 2.413899999999941e-05, 2.219499999999916e-05, 2.411100000000027e-05, 2.420900000000073e-05, 2.0306000000001184e-05, 2.6054999999997053e-05]</msg>
<status status="PASS" starttime="20201110 08:33:36.376" endtime="20201110 08:33:36.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.371" endtime="20201110 08:33:36.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.381" endtime="20201110 08:33:36.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.384" endtime="20201110 08:33:36.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.383" endtime="20201110 08:33:36.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.379" endtime="20201110 08:33:36.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.008" endtime="20201110 08:33:36.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.007" endtime="20201110 08:33:36.406"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.414" endtime="20201110 08:33:36.432"></status>
</kw>
<msg timestamp="20201110 08:33:36.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.413" endtime="20201110 08:33:36.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.434" endtime="20201110 08:33:36.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.436" endtime="20201110 08:33:36.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.410" endtime="20201110 08:33:36.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.408" endtime="20201110 08:33:36.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.447" endtime="20201110 08:33:36.733"></status>
</kw>
<msg timestamp="20201110 08:33:36.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.445" endtime="20201110 08:33:36.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.737" endtime="20201110 08:33:36.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.746" endtime="20201110 08:33:36.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.443" endtime="20201110 08:33:36.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.441" endtime="20201110 08:33:36.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.753" level="INFO">${RESULT} = [{'time': 0.022902625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.318100000000059e-05, 'source_diff': 2.318100000000059e-05}, {'time': 0.022933083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:36.749" endtime="20201110 08:33:36.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:36.767" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:36.754" endtime="20201110 08:33:36.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.771" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:33:36.770" endtime="20201110 08:33:36.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.774" level="INFO">VALUE: [2.318100000000059e-05, 2.513900000000041e-05, 2.413900000000288e-05, 2.4208000000001256e-05, 2.2249999999997966e-05, 2.3194000000000686e-05, 2.2221999999998826e-05, 1.933299999999985e-05, 2.5068999999999092e-05, 2.0291999999998145e-05, 2.415299999999898e-05, 2.419500000000116e-05, 2.318100000000059e-05, 2.512499999999737e-05, 2.5096999999998232e-05, 2.511100000000127e-05, 2.3166000000001546e-05, 2.2222000000002295e-05, 2.220899999999873e-05, 2.3194000000000686e-05, 2.315299999999798e-05, 2.6042000000000426e-05, 2.2236000000001865e-05, 2.318100000000059e-05, 1.93890000000016e-05, 2.2263999999997536e-05, 2.4137999999999937e-05, 2.0235999999999865e-05, 2.5096999999998232e-05, 1.931899999999681e-05, 2.413899999999941e-05, 2.316699999999755e-05, 2.316700000000102e-05, 2.313900000000188e-05, 2.3166000000001546e-05, 2.5082999999998662e-05, 2.2208000000002726e-05, 2.5096999999998232e-05, 2.030500000000171e-05, 2.1277999999999575e-05, 2.412499999999984e-05, 2.506900000000256e-05, 2.5096999999998232e-05, 2.508300000000213e-05, 2.2263999999997536e-05, 2.1292000000002614e-05, 2.5082999999998662e-05, 2.6012999999998343e-05, 2.412499999999984e-05, 2.412499999999984e-05]</msg>
<status status="PASS" starttime="20201110 08:33:36.773" endtime="20201110 08:33:36.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.768" endtime="20201110 08:33:36.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.782" endtime="20201110 08:33:36.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.785" endtime="20201110 08:33:36.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.784" endtime="20201110 08:33:36.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.780" endtime="20201110 08:33:36.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.406" endtime="20201110 08:33:36.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.406" endtime="20201110 08:33:36.806"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.815" endtime="20201110 08:33:36.838"></status>
</kw>
<msg timestamp="20201110 08:33:36.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.814" endtime="20201110 08:33:36.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.840" endtime="20201110 08:33:36.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.842" endtime="20201110 08:33:36.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.811" endtime="20201110 08:33:36.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.809" endtime="20201110 08:33:36.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.853" endtime="20201110 08:33:37.138"></status>
</kw>
<msg timestamp="20201110 08:33:37.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024169875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024189222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.851" endtime="20201110 08:33:37.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024169875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024189222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.143" endtime="20201110 08:33:37.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.153" endtime="20201110 08:33:37.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.848" endtime="20201110 08:33:37.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.846" endtime="20201110 08:33:37.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.160" level="INFO">${RESULT} = [{'time': 0.024189222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.934699999999942e-05, 'source_diff': 1.934699999999942e-05}, {'time': 0.024219708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:37.156" endtime="20201110 08:33:37.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:37.175" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:37.161" endtime="20201110 08:33:37.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.180" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:33:37.179" endtime="20201110 08:33:37.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.182" level="INFO">VALUE: [1.934699999999942e-05, 2.413899999999941e-05, 2.3137999999998937e-05, 2.516699999999955e-05, 2.1250000000000435e-05, 2.3180000000001116e-05, 2.1292000000002614e-05, 2.2207999999999256e-05, 2.3165999999998077e-05, 2.1264000000000005e-05, 2.2250000000001435e-05, 2.030499999999824e-05, 2.506900000000256e-05, 2.0278000000002044e-05, 2.411100000000027e-05, 2.1236000000000865e-05, 2.315300000000145e-05, 1.936099999999899e-05, 2.3165999999998077e-05, 2.318100000000059e-05, 1.9305999999996715e-05, 2.316699999999755e-05, 2.0334000000000324e-05, 1.937500000000203e-05, 1.941700000000074e-05, 2.130499999999924e-05, 2.2264000000001005e-05, 2.412499999999984e-05, 2.1291999999999145e-05, 2.1277999999999575e-05, 2.411100000000027e-05, 2.1250000000000435e-05, 2.3179999999997647e-05, 2.318100000000059e-05, 2.515299999999998e-05, 2.318100000000059e-05, 1.936099999999899e-05, 2.5082999999998662e-05, 2.6055999999999996e-05, 2.031900000000128e-05, 2.413899999999941e-05, 2.5068999999999092e-05, 2.3165999999998077e-05, 2.40970000000007e-05, 2.1250000000000435e-05, 2.3166000000001546e-05, 2.319500000000016e-05, 2.220899999999873e-05, 2.5069999999998566e-05, 1.933299999999985e-05]</msg>
<status status="PASS" starttime="20201110 08:33:37.181" endtime="20201110 08:33:37.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.176" endtime="20201110 08:33:37.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.186" endtime="20201110 08:33:37.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.190" endtime="20201110 08:33:37.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.188" endtime="20201110 08:33:37.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.184" endtime="20201110 08:33:37.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.807" endtime="20201110 08:33:37.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.806" endtime="20201110 08:33:37.211"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.220" endtime="20201110 08:33:37.235"></status>
</kw>
<msg timestamp="20201110 08:33:37.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.218" endtime="20201110 08:33:37.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.237" endtime="20201110 08:33:37.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.240" endtime="20201110 08:33:37.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.215" endtime="20201110 08:33:37.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.213" endtime="20201110 08:33:37.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.250" endtime="20201110 08:33:37.540"></status>
</kw>
<msg timestamp="20201110 08:33:37.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021538917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.249" endtime="20201110 08:33:37.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021538917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.544" endtime="20201110 08:33:37.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.552" endtime="20201110 08:33:37.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.246" endtime="20201110 08:33:37.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.244" endtime="20201110 08:33:37.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.559" level="INFO">${RESULT} = [{'time': 0.021538917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.413900000000288e-05, 'source_diff': 2.413900000000288e-05}, {'time': 0.021569736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:37.555" endtime="20201110 08:33:37.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:37.572" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:37.560" endtime="20201110 08:33:37.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.577" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:33:37.576" endtime="20201110 08:33:37.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.579" level="INFO">VALUE: [2.413900000000288e-05, 2.5096999999998232e-05, 1.936099999999899e-05, 2.5068999999999092e-05, 2.318100000000059e-05, 2.031900000000128e-05, 2.413899999999941e-05, 2.218099999999959e-05, 2.315299999999798e-05, 1.936100000000246e-05, 2.512499999999737e-05, 1.9347999999998894e-05, 2.1250000000000435e-05, 2.036099999999999e-05, 1.933299999999985e-05, 2.0306000000001184e-05, 2.0278000000002044e-05, 2.122300000000077e-05, 2.5027000000000382e-05, 1.937499999999856e-05, 2.1250000000000435e-05, 2.6055000000000522e-05, 2.1291999999999145e-05, 2.2250000000001435e-05, 2.0278000000002044e-05, 2.315299999999798e-05, 2.40970000000007e-05, 2.1194000000002156e-05, 2.1277999999999575e-05, 2.126300000000053e-05, 2.416700000000202e-05, 2.0291999999998145e-05, 2.2221999999998826e-05, 2.5012999999997343e-05, 2.1235999999997396e-05, 2.30969999999997e-05, 2.413899999999941e-05, 2.3194000000000686e-05, 2.512499999999737e-05, 2.123700000000034e-05, 2.5112000000000745e-05, 2.031899999999781e-05, 2.513900000000041e-05, 2.2207999999999256e-05, 2.02769999999991e-05, 2.413899999999941e-05, 2.4055999999997996e-05, 2.0306000000001184e-05, 1.933299999999985e-05, 1.936100000000246e-05]</msg>
<status status="PASS" starttime="20201110 08:33:37.578" endtime="20201110 08:33:37.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.573" endtime="20201110 08:33:37.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.583" endtime="20201110 08:33:37.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.586" endtime="20201110 08:33:37.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.584" endtime="20201110 08:33:37.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.581" endtime="20201110 08:33:37.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.212" endtime="20201110 08:33:37.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.211" endtime="20201110 08:33:37.607"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.617" endtime="20201110 08:33:37.633"></status>
</kw>
<msg timestamp="20201110 08:33:37.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.615" endtime="20201110 08:33:37.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.635" endtime="20201110 08:33:37.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.637" endtime="20201110 08:33:37.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.612" endtime="20201110 08:33:37.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.610" endtime="20201110 08:33:37.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.647" endtime="20201110 08:33:37.935"></status>
</kw>
<msg timestamp="20201110 08:33:37.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022154514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.646" endtime="20201110 08:33:37.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022154514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.939" endtime="20201110 08:33:37.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.947" endtime="20201110 08:33:37.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.643" endtime="20201110 08:33:37.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.641" endtime="20201110 08:33:37.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.954" level="INFO">${RESULT} = [{'time': 0.022154514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5555999999999903e-05, 'source_diff': 1.5555999999999903e-05}, {'time': 0.022185222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:37.950" endtime="20201110 08:33:37.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:37.967" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:37.955" endtime="20201110 08:33:37.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.972" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:33:37.971" endtime="20201110 08:33:37.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.974" level="INFO">VALUE: [1.5555999999999903e-05, 2.411100000000027e-05, 2.316699999999755e-05, 2.2221999999998826e-05, 2.312499999999884e-05, 2.5110999999997802e-05, 2.029099999999867e-05, 2.320899999999973e-05, 2.4082999999997662e-05, 2.2166000000000546e-05, 2.2208000000002726e-05, 2.411100000000027e-05, 2.5098000000001175e-05, 2.0235999999999865e-05, 1.937499999999856e-05, 2.3180000000001116e-05, 2.0334000000000324e-05, 2.0334000000000324e-05, 2.5082999999998662e-05, 2.1277999999999575e-05, 2.2180000000000116e-05, 2.406900000000156e-05, 2.0277999999998575e-05, 2.315299999999798e-05, 2.508300000000213e-05, 2.1250000000000435e-05, 2.316699999999755e-05, 1.937499999999856e-05, 2.412499999999984e-05, 2.5070000000002035e-05, 2.5040999999999952e-05, 1.933299999999985e-05, 2.6096999999999232e-05, 1.9305999999996715e-05, 2.031899999999781e-05, 2.318100000000059e-05, 2.312500000000231e-05, 2.318100000000059e-05, 2.311099999999927e-05, 2.220899999999873e-05, 2.120899999999773e-05, 2.031900000000128e-05, 2.313900000000188e-05, 2.412499999999984e-05, 2.316700000000102e-05, 1.937499999999856e-05, 2.316700000000102e-05, 2.1250000000000435e-05, 2.5055999999998996e-05, 2.312500000000231e-05]</msg>
<status status="PASS" starttime="20201110 08:33:37.973" endtime="20201110 08:33:37.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.968" endtime="20201110 08:33:37.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.978" endtime="20201110 08:33:37.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.981" endtime="20201110 08:33:38.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.979" endtime="20201110 08:33:38.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.976" endtime="20201110 08:33:38.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.608" endtime="20201110 08:33:38.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.608" endtime="20201110 08:33:38.002"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.011" endtime="20201110 08:33:38.030"></status>
</kw>
<msg timestamp="20201110 08:33:38.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.009" endtime="20201110 08:33:38.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.031" endtime="20201110 08:33:38.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.034" endtime="20201110 08:33:38.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.006" endtime="20201110 08:33:38.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.004" endtime="20201110 08:33:38.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.044" endtime="20201110 08:33:38.347"></status>
</kw>
<msg timestamp="20201110 08:33:38.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02411425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:38.042" endtime="20201110 08:33:38.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02411425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:38.351" endtime="20201110 08:33:38.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.359" endtime="20201110 08:33:38.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.040" endtime="20201110 08:33:38.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.038" endtime="20201110 08:33:38.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.366" level="INFO">${RESULT} = [{'time': 0.02411425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.179199999999924e-05, 'source_diff': 3.179199999999924e-05}, {'time': 0.024144486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:38.362" endtime="20201110 08:33:38.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:38.379" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:38.367" endtime="20201110 08:33:38.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.383" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:33:38.382" endtime="20201110 08:33:38.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.386" level="INFO">VALUE: [3.179199999999924e-05, 2.2235999999998396e-05, 2.6055000000000522e-05, 2.411100000000027e-05, 2.4068999999998092e-05, 2.0235999999999865e-05, 2.513900000000041e-05, 1.934699999999942e-05, 2.50970000000017e-05, 2.1306000000002184e-05, 2.1249999999996966e-05, 2.412499999999984e-05, 2.513900000000041e-05, 2.3179999999997647e-05, 2.216700000000002e-05, 2.0249999999999435e-05, 2.223700000000134e-05, 2.2221999999998826e-05, 2.412499999999984e-05, 2.1291999999999145e-05, 2.6014000000001286e-05, 2.5042000000002895e-05, 2.030499999999824e-05, 2.318100000000059e-05, 2.0249999999999435e-05, 2.2180000000000116e-05, 2.413899999999941e-05, 1.934699999999942e-05, 2.0235999999999865e-05, 2.412500000000331e-05, 2.413899999999941e-05, 2.1250000000000435e-05, 1.933299999999985e-05, 2.413899999999941e-05, 1.933299999999985e-05, 2.1264000000000005e-05, 2.2235999999998396e-05, 2.6069000000000092e-05, 2.50970000000017e-05, 2.120899999999773e-05, 2.5027999999999856e-05, 2.5068999999999092e-05, 2.2263999999997536e-05, 2.0306000000001184e-05, 2.411100000000027e-05, 2.222300000000177e-05, 2.5096999999998232e-05, 2.3165999999998077e-05, 2.1222000000001295e-05, 2.411100000000027e-05]</msg>
<status status="PASS" starttime="20201110 08:33:38.385" endtime="20201110 08:33:38.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.380" endtime="20201110 08:33:38.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.390" endtime="20201110 08:33:38.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.393" endtime="20201110 08:33:38.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.391" endtime="20201110 08:33:38.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.388" endtime="20201110 08:33:38.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.003" endtime="20201110 08:33:38.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.002" endtime="20201110 08:33:38.414"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.422" endtime="20201110 08:33:38.441"></status>
</kw>
<msg timestamp="20201110 08:33:38.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.421" endtime="20201110 08:33:38.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.443" endtime="20201110 08:33:38.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.445" endtime="20201110 08:33:38.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.418" endtime="20201110 08:33:38.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.416" endtime="20201110 08:33:38.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.455" endtime="20201110 08:33:38.742"></status>
</kw>
<msg timestamp="20201110 08:33:38.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024137972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02414775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:38.454" endtime="20201110 08:33:38.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024137972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02414775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:38.746" endtime="20201110 08:33:38.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.754" endtime="20201110 08:33:38.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.451" endtime="20201110 08:33:38.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.450" endtime="20201110 08:33:38.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.761" level="INFO">${RESULT} = [{'time': 0.02414775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777999999998482e-06, 'source_diff': 9.777999999998482e-06}, {'time': 0.024178028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:38.757" endtime="20201110 08:33:38.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:38.775" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:38.762" endtime="20201110 08:33:38.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.779" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:33:38.778" endtime="20201110 08:33:38.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.782" level="INFO">VALUE: [9.777999999998482e-06, 2.0292000000001614e-05, 2.1179999999999116e-05, 2.215300000000045e-05, 2.4151999999999507e-05, 2.030500000000171e-05, 2.1264000000000005e-05, 2.508300000000213e-05, 2.218099999999959e-05, 2.40970000000007e-05, 2.129099999999967e-05, 2.0249999999999435e-05, 2.1277999999999575e-05, 2.5082999999998662e-05, 2.1277999999999575e-05, 2.5110999999997802e-05, 2.4084000000000605e-05, 2.3194000000000686e-05, 2.1264000000000005e-05, 2.3194000000000686e-05, 2.40970000000007e-05, 2.5098000000001175e-05, 2.2193999999999686e-05, 2.2193999999999686e-05, 2.505500000000299e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.2235999999998396e-05, 2.412499999999984e-05, 2.6055999999999996e-05, 1.934699999999942e-05, 2.12770000000001e-05, 2.034700000000042e-05, 2.2208000000002726e-05, 2.5999999999998247e-05, 2.219499999999916e-05, 2.119500000000163e-05, 2.0292000000001614e-05, 2.6069000000000092e-05, 2.2249999999997966e-05, 2.3165999999998077e-05, 1.934699999999942e-05, 2.1264000000000005e-05, 2.319500000000016e-05, 2.027700000000257e-05, 2.3137999999998937e-05, 2.6042000000000426e-05, 2.1235999999997396e-05, 2.1250000000000435e-05, 2.3166000000001546e-05]</msg>
<status status="PASS" starttime="20201110 08:33:38.781" endtime="20201110 08:33:38.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.776" endtime="20201110 08:33:38.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.785" endtime="20201110 08:33:38.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.789" endtime="20201110 08:33:38.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.787" endtime="20201110 08:33:38.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.784" endtime="20201110 08:33:38.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.415" endtime="20201110 08:33:38.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.414" endtime="20201110 08:33:38.810"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.818" endtime="20201110 08:33:38.833"></status>
</kw>
<msg timestamp="20201110 08:33:38.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.817" endtime="20201110 08:33:38.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.835" endtime="20201110 08:33:38.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.837" endtime="20201110 08:33:38.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.814" endtime="20201110 08:33:38.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.812" endtime="20201110 08:33:38.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.847" endtime="20201110 08:33:39.132"></status>
</kw>
<msg timestamp="20201110 08:33:39.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019973292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.846" endtime="20201110 08:33:39.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019973292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.136" endtime="20201110 08:33:39.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.144" endtime="20201110 08:33:39.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.843" endtime="20201110 08:33:39.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.841" endtime="20201110 08:33:39.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.151" level="INFO">${RESULT} = [{'time': 0.020003181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9888999999998223e-05, 'source_diff': 2.9888999999998223e-05}, {'time': 0.020033278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:39.148" endtime="20201110 08:33:39.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:39.164" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:39.152" endtime="20201110 08:33:39.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.169" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:33:39.168" endtime="20201110 08:33:39.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.171" level="INFO">VALUE: [2.9888999999998223e-05, 2.1264000000000005e-05, 2.6096999999999232e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.2236000000001865e-05, 2.2208000000002726e-05, 2.213900000000088e-05, 2.5096999999998232e-05, 2.1277999999999575e-05, 2.6013999999997817e-05, 2.411100000000027e-05, 1.933299999999985e-05, 2.2207999999999256e-05, 2.412499999999984e-05, 2.0291999999998145e-05, 2.2208000000002726e-05, 2.1250000000000435e-05, 2.2180000000000116e-05, 2.0264000000002474e-05, 1.931900000000028e-05, 2.134700000000142e-05, 2.5084000000001605e-05, 2.5098000000001175e-05, 1.936099999999899e-05, 2.034700000000042e-05, 2.318100000000059e-05, 2.02769999999991e-05, 2.02769999999991e-05, 2.2264000000001005e-05, 2.316700000000102e-05, 2.2193999999999686e-05, 2.40970000000007e-05, 2.0306000000001184e-05, 2.5082999999998662e-05, 2.3194000000000686e-05, 1.83890000000006e-05, 2.412499999999984e-05, 2.2236000000001865e-05, 2.3236000000002865e-05, 2.313899999999841e-05, 2.0319999999997285e-05, 2.6028000000000856e-05, 2.413899999999941e-05, 2.413899999999941e-05, 1.936099999999899e-05, 2.029100000000214e-05, 2.2208000000002726e-05, 2.413900000000288e-05, 2.5083999999998136e-05]</msg>
<status status="PASS" starttime="20201110 08:33:39.170" endtime="20201110 08:33:39.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.165" endtime="20201110 08:33:39.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.175" endtime="20201110 08:33:39.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.178" endtime="20201110 08:33:39.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.177" endtime="20201110 08:33:39.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.173" endtime="20201110 08:33:39.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.811" endtime="20201110 08:33:39.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.810" endtime="20201110 08:33:39.199"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.208" endtime="20201110 08:33:39.226"></status>
</kw>
<msg timestamp="20201110 08:33:39.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.206" endtime="20201110 08:33:39.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.227" endtime="20201110 08:33:39.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.230" endtime="20201110 08:33:39.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.204" endtime="20201110 08:33:39.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.202" endtime="20201110 08:33:39.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.240" endtime="20201110 08:33:39.526"></status>
</kw>
<msg timestamp="20201110 08:33:39.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022386153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022420806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.239" endtime="20201110 08:33:39.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022386153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022420806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.531" endtime="20201110 08:33:39.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.539" endtime="20201110 08:33:39.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.236" endtime="20201110 08:33:39.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.234" endtime="20201110 08:33:39.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.546" level="INFO">${RESULT} = [{'time': 0.022420806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.465300000000254e-05, 'source_diff': 3.465300000000254e-05}, {'time': 0.022450764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:39.542" endtime="20201110 08:33:39.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:39.559" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:39.546" endtime="20201110 08:33:39.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.563" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:33:39.562" endtime="20201110 08:33:39.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.566" level="INFO">VALUE: [3.465300000000254e-05, 1.936100000000246e-05, 2.220899999999873e-05, 2.5166000000000077e-05, 2.3250000000002435e-05, 2.316699999999755e-05, 2.3221999999999826e-05, 2.5027999999999856e-05, 2.1264000000000005e-05, 2.5068999999999092e-05, 2.4084000000000605e-05, 1.9333999999999324e-05, 2.2249999999997966e-05, 2.0249999999999435e-05, 2.2207999999999256e-05, 2.0277999999998575e-05, 2.219500000000263e-05, 2.2264000000001005e-05, 2.036099999999999e-05, 2.219499999999916e-05, 2.2207999999999256e-05, 2.4056000000001465e-05, 2.1264000000000005e-05, 2.3180000000001116e-05, 2.219499999999916e-05, 2.3166000000001546e-05, 2.030500000000171e-05, 2.3180000000001116e-05, 2.2207999999999256e-05, 2.1264000000000005e-05, 2.4165999999999077e-05, 2.3180000000001116e-05, 1.930499999999724e-05, 2.4179999999998647e-05, 2.1264000000000005e-05, 2.6084000000002605e-05, 2.0320000000000754e-05, 2.318100000000059e-05, 2.12090000000012e-05, 2.2235999999998396e-05, 2.12770000000001e-05, 2.32229999999993e-05, 2.2249999999997966e-05, 2.6082999999999662e-05, 2.2250000000001435e-05, 1.936099999999899e-05, 2.0320000000000754e-05, 2.1277999999999575e-05, 2.318100000000059e-05, 2.413899999999941e-05]</msg>
<status status="PASS" starttime="20201110 08:33:39.564" endtime="20201110 08:33:39.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.560" endtime="20201110 08:33:39.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.569" endtime="20201110 08:33:39.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.573" endtime="20201110 08:33:39.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.571" endtime="20201110 08:33:39.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.568" endtime="20201110 08:33:39.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.200" endtime="20201110 08:33:39.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.200" endtime="20201110 08:33:39.594"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.602" endtime="20201110 08:33:39.618"></status>
</kw>
<msg timestamp="20201110 08:33:39.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.601" endtime="20201110 08:33:39.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.619" endtime="20201110 08:33:39.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.622" endtime="20201110 08:33:39.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.598" endtime="20201110 08:33:39.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.596" endtime="20201110 08:33:39.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.632" endtime="20201110 08:33:39.917"></status>
</kw>
<msg timestamp="20201110 08:33:39.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019975347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019985153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.630" endtime="20201110 08:33:39.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019975347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019985153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.921" endtime="20201110 08:33:39.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.929" endtime="20201110 08:33:39.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.627" endtime="20201110 08:33:39.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.626" endtime="20201110 08:33:39.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.936" level="INFO">${RESULT} = [{'time': 0.019985153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.805999999997622e-06, 'source_diff': 9.805999999997622e-06}, {'time': 0.020015306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:39.933" endtime="20201110 08:33:39.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:39.949" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:39.937" endtime="20201110 08:33:39.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.954" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:33:39.953" endtime="20201110 08:33:39.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.956" level="INFO">VALUE: [9.805999999997622e-06, 1.9333999999999324e-05, 2.220899999999873e-05, 2.2207999999999256e-05, 2.031899999999781e-05, 2.3180000000001116e-05, 1.9333999999999324e-05, 2.4098000000000175e-05, 2.029100000000214e-05, 2.3180000000001116e-05, 2.223700000000134e-05, 2.5096999999998232e-05, 2.313899999999841e-05, 2.5082999999998662e-05, 1.937500000000203e-05, 2.5096999999998232e-05, 2.1277999999999575e-05, 1.936100000000246e-05, 2.513899999999694e-05, 2.220899999999873e-05, 2.0291999999998145e-05, 2.413899999999941e-05, 2.3194000000000686e-05, 2.316700000000102e-05, 2.411100000000027e-05, 2.4098000000000175e-05, 2.12770000000001e-05, 2.1306000000002184e-05, 2.3221999999999826e-05, 2.031900000000128e-05, 2.316699999999755e-05, 2.1264000000000005e-05, 1.936099999999899e-05, 1.933299999999985e-05, 2.5096999999998232e-05, 2.506900000000256e-05, 1.938899999999813e-05, 2.3180000000001116e-05, 2.1250000000000435e-05, 2.412499999999984e-05, 2.6112000000001745e-05, 2.3165999999998077e-05, 2.1249999999996966e-05, 2.1250000000000435e-05, 1.9348000000002363e-05, 2.223700000000134e-05, 2.3151999999998507e-05, 2.2235999999998396e-05, 2.413899999999941e-05, 2.2250000000001435e-05]</msg>
<status status="PASS" starttime="20201110 08:33:39.955" endtime="20201110 08:33:39.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.950" endtime="20201110 08:33:39.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.960" endtime="20201110 08:33:39.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.963" endtime="20201110 08:33:39.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.962" endtime="20201110 08:33:39.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.958" endtime="20201110 08:33:39.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.594" endtime="20201110 08:33:39.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.594" endtime="20201110 08:33:39.984"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.993" endtime="20201110 08:33:40.012"></status>
</kw>
<msg timestamp="20201110 08:33:40.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.991" endtime="20201110 08:33:40.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.014" endtime="20201110 08:33:40.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.016" endtime="20201110 08:33:40.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.989" endtime="20201110 08:33:40.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.986" endtime="20201110 08:33:40.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.026" endtime="20201110 08:33:40.314"></status>
</kw>
<msg timestamp="20201110 08:33:40.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021409667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021426083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.024" endtime="20201110 08:33:40.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021409667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021426083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.318" endtime="20201110 08:33:40.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.326" endtime="20201110 08:33:40.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.022" endtime="20201110 08:33:40.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.020" endtime="20201110 08:33:40.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.333" level="INFO">${RESULT} = [{'time': 0.021426083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6415999999998265e-05, 'source_diff': 1.6415999999998265e-05}, {'time': 0.021456458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:40.329" endtime="20201110 08:33:40.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:40.347" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:40.334" endtime="20201110 08:33:40.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.351" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:33:40.350" endtime="20201110 08:33:40.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.354" level="INFO">VALUE: [1.6415999999998265e-05, 1.933299999999985e-05, 2.3208000000000256e-05, 1.934700000000289e-05, 2.50970000000017e-05, 2.1222000000001295e-05, 2.315299999999798e-05, 2.416699999999855e-05, 2.0320000000000754e-05, 1.941700000000074e-05, 2.2222000000002295e-05, 2.1264000000000005e-05, 2.412499999999984e-05, 1.933299999999985e-05, 2.413900000000288e-05, 2.3194000000000686e-05, 2.2207999999999256e-05, 2.508300000000213e-05, 2.5070000000002035e-05, 2.1208000000001725e-05, 1.937499999999856e-05, 2.119499999999816e-05, 2.215300000000045e-05, 2.1250000000000435e-05, 2.2193999999999686e-05, 1.931900000000028e-05, 2.411100000000027e-05, 2.1277999999999575e-05, 2.0277999999998575e-05, 2.6012999999998343e-05, 2.22229999999983e-05, 2.0292000000001614e-05, 2.5112000000000745e-05, 2.123700000000034e-05, 2.316700000000102e-05, 2.6041000000000952e-05, 2.415299999999898e-05, 2.1250000000000435e-05, 2.415299999999898e-05, 2.5055999999998996e-05, 2.6055999999999996e-05, 2.1250000000000435e-05, 2.413899999999941e-05, 2.0292000000001614e-05, 2.1277999999999575e-05, 1.933299999999985e-05, 2.6014000000001286e-05, 2.413899999999941e-05, 2.22229999999983e-05, 2.5096999999998232e-05]</msg>
<status status="PASS" starttime="20201110 08:33:40.353" endtime="20201110 08:33:40.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.348" endtime="20201110 08:33:40.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.357" endtime="20201110 08:33:40.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.361" endtime="20201110 08:33:40.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.359" endtime="20201110 08:33:40.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.356" endtime="20201110 08:33:40.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.985" endtime="20201110 08:33:40.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.984" endtime="20201110 08:33:40.382"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.390" endtime="20201110 08:33:40.406"></status>
</kw>
<msg timestamp="20201110 08:33:40.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.389" endtime="20201110 08:33:40.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.407" endtime="20201110 08:33:40.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.410" endtime="20201110 08:33:40.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.386" endtime="20201110 08:33:40.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.384" endtime="20201110 08:33:40.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.420" endtime="20201110 08:33:40.706"></status>
</kw>
<msg timestamp="20201110 08:33:40.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020533375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020546, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:40.418" endtime="20201110 08:33:40.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020533375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020546, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:40.710" endtime="20201110 08:33:40.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.718" endtime="20201110 08:33:40.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.416" endtime="20201110 08:33:40.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.414" endtime="20201110 08:33:40.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.725" level="INFO">${RESULT} = [{'time': 0.020546, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2624999999998748e-05, 'source_diff': 1.2624999999998748e-05}, {'time': 0.020576667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:40.721" endtime="20201110 08:33:40.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:40.738" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:40.726" endtime="20201110 08:33:40.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.743" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:33:40.742" endtime="20201110 08:33:40.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.745" level="INFO">VALUE: [1.2624999999998748e-05, 2.515299999999998e-05, 2.1236000000000865e-05, 2.2221999999998826e-05, 2.0277999999998575e-05, 2.1264000000000005e-05, 2.3165999999998077e-05, 2.2180000000000116e-05, 2.5110999999997802e-05, 2.412499999999984e-05, 2.2138000000001407e-05, 2.408300000000113e-05, 2.123699999999687e-05, 2.0305999999997715e-05, 2.5110999999997802e-05, 2.6041999999996956e-05, 2.5166000000000077e-05, 2.5084000000001605e-05, 2.3166000000001546e-05, 2.2193999999999686e-05, 2.411100000000027e-05, 2.413899999999941e-05, 2.122300000000077e-05, 2.415299999999898e-05, 2.3180000000001116e-05, 2.411100000000027e-05, 2.0320000000000754e-05, 2.1250000000000435e-05, 2.412499999999984e-05, 2.5084000000001605e-05, 2.2221999999998826e-05, 2.2250000000001435e-05, 2.415299999999898e-05, 2.5999999999998247e-05, 2.2180000000000116e-05, 2.3179999999997647e-05, 2.318100000000059e-05, 2.406900000000156e-05, 2.219499999999916e-05, 2.2207999999999256e-05, 2.5083999999998136e-05, 2.2208000000002726e-05, 2.318100000000059e-05, 2.5096999999998232e-05, 2.2221999999998826e-05, 2.2208000000002726e-05, 2.5083999999998136e-05, 2.316700000000102e-05, 2.413899999999941e-05, 2.131899999999881e-05]</msg>
<status status="PASS" starttime="20201110 08:33:40.744" endtime="20201110 08:33:40.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.739" endtime="20201110 08:33:40.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.749" endtime="20201110 08:33:40.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.752" endtime="20201110 08:33:40.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.751" endtime="20201110 08:33:40.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.747" endtime="20201110 08:33:40.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.383" endtime="20201110 08:33:40.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.382" endtime="20201110 08:33:40.773"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.781" endtime="20201110 08:33:40.798"></status>
</kw>
<msg timestamp="20201110 08:33:40.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.780" endtime="20201110 08:33:40.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.799" endtime="20201110 08:33:40.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.802" endtime="20201110 08:33:40.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.777" endtime="20201110 08:33:40.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.775" endtime="20201110 08:33:40.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.812" endtime="20201110 08:33:41.098"></status>
</kw>
<msg timestamp="20201110 08:33:41.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021236361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021254736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.810" endtime="20201110 08:33:41.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021236361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021254736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.102" endtime="20201110 08:33:41.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.111" endtime="20201110 08:33:41.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.807" endtime="20201110 08:33:41.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.806" endtime="20201110 08:33:41.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.117" level="INFO">${RESULT} = [{'time': 0.021254736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.837500000000103e-05, 'source_diff': 1.837500000000103e-05}, {'time': 0.021284819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:41.114" endtime="20201110 08:33:41.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:41.131" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:41.118" endtime="20201110 08:33:41.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.135" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:33:41.134" endtime="20201110 08:33:41.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.138" level="INFO">VALUE: [1.837500000000103e-05, 2.1250000000000435e-05, 1.9347999999998894e-05, 2.029100000000214e-05, 2.5069999999998566e-05, 2.316700000000102e-05, 1.933299999999985e-05, 2.315300000000145e-05, 2.5055999999998996e-05, 2.131899999999881e-05, 2.0320000000000754e-05, 2.0320000000000754e-05, 2.5110999999997802e-05, 2.2180000000000116e-05, 2.5041999999999426e-05, 2.3179999999997647e-05, 2.2222000000002295e-05, 2.2221999999998826e-05, 2.316699999999755e-05, 2.5943999999999967e-05, 2.5957999999999537e-05, 2.12770000000001e-05, 2.318100000000059e-05, 2.0320000000000754e-05, 2.412499999999984e-05, 2.22090000000022e-05, 2.0320000000000754e-05, 2.1236000000000865e-05, 2.415299999999898e-05, 2.215300000000045e-05, 2.1221999999997826e-05, 2.219499999999916e-05, 2.1249999999996966e-05, 2.1235999999997396e-05, 2.1250000000000435e-05, 2.413900000000288e-05, 2.1250000000000435e-05, 2.313900000000188e-05, 2.0278000000002044e-05, 1.9333999999999324e-05, 2.5054999999999522e-05, 2.1278000000003044e-05, 2.1277999999999575e-05, 2.412499999999984e-05, 2.029100000000214e-05, 2.1236000000000865e-05, 2.216700000000002e-05, 2.50970000000017e-05, 2.129099999999967e-05, 2.1277999999999575e-05]</msg>
<status status="PASS" starttime="20201110 08:33:41.136" endtime="20201110 08:33:41.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.132" endtime="20201110 08:33:41.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.141" endtime="20201110 08:33:41.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.145" endtime="20201110 08:33:41.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.143" endtime="20201110 08:33:41.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.140" endtime="20201110 08:33:41.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.774" endtime="20201110 08:33:41.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.773" endtime="20201110 08:33:41.165"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.174" endtime="20201110 08:33:41.193"></status>
</kw>
<msg timestamp="20201110 08:33:41.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.172" endtime="20201110 08:33:41.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.194" endtime="20201110 08:33:41.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.197" endtime="20201110 08:33:41.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.170" endtime="20201110 08:33:41.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.168" endtime="20201110 08:33:41.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.207" endtime="20201110 08:33:41.493"></status>
</kw>
<msg timestamp="20201110 08:33:41.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020559528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.205" endtime="20201110 08:33:41.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020559528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.497" endtime="20201110 08:33:41.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.505" endtime="20201110 08:33:41.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.203" endtime="20201110 08:33:41.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.201" endtime="20201110 08:33:41.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.512" level="INFO">${RESULT} = [{'time': 0.020589417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9888999999998223e-05, 'source_diff': 2.9888999999998223e-05}, {'time': 0.020620028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:41.508" endtime="20201110 08:33:41.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:41.525" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:41.513" endtime="20201110 08:33:41.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.530" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:33:41.529" endtime="20201110 08:33:41.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.532" level="INFO">VALUE: [2.9888999999998223e-05, 2.1264000000000005e-05, 2.318100000000059e-05, 2.4042000000001895e-05, 2.5055999999998996e-05, 1.934699999999942e-05, 2.412499999999984e-05, 2.2193999999999686e-05, 2.0292000000001614e-05, 2.2250000000001435e-05, 2.129099999999967e-05, 2.5098000000001175e-05, 2.3180000000001116e-05, 2.5082999999998662e-05, 2.5097999999997705e-05, 2.2208000000002726e-05, 2.031900000000128e-05, 2.316700000000102e-05, 2.1264000000000005e-05, 2.315300000000145e-05, 2.5096999999998232e-05, 2.0277999999998575e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.511100000000127e-05, 2.315300000000145e-05, 1.933299999999985e-05, 2.415299999999898e-05, 2.5096999999998232e-05, 1.9291999999997145e-05, 2.1264000000000005e-05, 2.5083999999998136e-05, 2.220899999999873e-05, 2.6028000000000856e-05, 2.5096999999998232e-05, 2.0319999999997285e-05, 1.9362000000001933e-05, 2.030500000000171e-05, 2.1250000000000435e-05, 1.937500000000203e-05, 2.0291999999998145e-05, 2.318100000000059e-05, 2.506900000000256e-05, 2.5027999999999856e-05, 2.0292000000001614e-05, 2.220899999999873e-05, 2.030500000000171e-05, 1.934700000000289e-05, 2.1236000000000865e-05, 2.2207999999999256e-05]</msg>
<status status="PASS" starttime="20201110 08:33:41.531" endtime="20201110 08:33:41.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.526" endtime="20201110 08:33:41.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.536" endtime="20201110 08:33:41.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.539" endtime="20201110 08:33:41.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.537" endtime="20201110 08:33:41.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.534" endtime="20201110 08:33:41.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.166" endtime="20201110 08:33:41.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.166" endtime="20201110 08:33:41.560"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.569" endtime="20201110 08:33:41.587"></status>
</kw>
<msg timestamp="20201110 08:33:41.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.567" endtime="20201110 08:33:41.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.589" endtime="20201110 08:33:41.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.591" endtime="20201110 08:33:41.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.564" endtime="20201110 08:33:41.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.562" endtime="20201110 08:33:41.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.601" endtime="20201110 08:33:41.888"></status>
</kw>
<msg timestamp="20201110 08:33:41.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022941653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022975361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.600" endtime="20201110 08:33:41.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022941653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022975361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.892" endtime="20201110 08:33:41.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.900" endtime="20201110 08:33:41.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.597" endtime="20201110 08:33:41.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.595" endtime="20201110 08:33:41.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.907" level="INFO">${RESULT} = [{'time': 0.022975361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.370800000000035e-05, 'source_diff': 3.370800000000035e-05}, {'time': 0.023006014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:41.904" endtime="20201110 08:33:41.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:41.921" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:41.908" endtime="20201110 08:33:41.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.926" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:33:41.925" endtime="20201110 08:33:41.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.928" level="INFO">VALUE: [3.370800000000035e-05, 2.2222000000002295e-05, 2.131899999999881e-05, 2.1264000000000005e-05, 2.50970000000017e-05, 2.318100000000059e-05, 2.3138000000002407e-05, 2.413899999999941e-05, 2.2221999999998826e-05, 2.2193999999999686e-05, 2.033300000000085e-05, 2.5070000000002035e-05, 2.036099999999999e-05, 2.0291999999998145e-05, 2.512500000000084e-05, 2.1250000000000435e-05, 1.936099999999899e-05, 2.2264000000001005e-05, 2.1235999999997396e-05, 2.3194000000000686e-05, 2.6028000000000856e-05, 2.316700000000102e-05, 1.9401999999998226e-05, 2.0291999999998145e-05, 2.413900000000288e-05, 2.4137999999999937e-05, 2.316700000000102e-05, 1.936099999999899e-05, 2.6042000000000426e-05, 2.12229999999973e-05, 1.933299999999985e-05, 2.412499999999984e-05, 2.1235999999997396e-05, 2.315300000000145e-05, 2.4111999999999745e-05, 2.0277999999998575e-05, 2.4194000000001686e-05, 2.218099999999959e-05, 2.2277999999997106e-05, 2.030500000000171e-05, 2.1264000000000005e-05, 2.031899999999781e-05, 2.5999999999998247e-05, 2.5027999999999856e-05, 2.412499999999984e-05, 2.5084000000001605e-05, 2.1250000000000435e-05, 2.3194000000000686e-05, 2.2235999999998396e-05, 2.219499999999916e-05]</msg>
<status status="PASS" starttime="20201110 08:33:41.927" endtime="20201110 08:33:41.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.922" endtime="20201110 08:33:41.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.936" endtime="20201110 08:33:41.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.939" endtime="20201110 08:33:41.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.938" endtime="20201110 08:33:41.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.934" endtime="20201110 08:33:41.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.561" endtime="20201110 08:33:41.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.560" endtime="20201110 08:33:41.960"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.969" endtime="20201110 08:33:41.989"></status>
</kw>
<msg timestamp="20201110 08:33:41.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.967" endtime="20201110 08:33:41.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.990" endtime="20201110 08:33:41.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.993" endtime="20201110 08:33:41.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.965" endtime="20201110 08:33:41.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.963" endtime="20201110 08:33:41.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.003" endtime="20201110 08:33:42.287"></status>
</kw>
<msg timestamp="20201110 08:33:42.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024625944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024658722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.001" endtime="20201110 08:33:42.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024625944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024658722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.292" endtime="20201110 08:33:42.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.300" endtime="20201110 08:33:42.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.999" endtime="20201110 08:33:42.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.997" endtime="20201110 08:33:42.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:42.307" level="INFO">${RESULT} = [{'time': 0.024658722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.277800000000067e-05, 'source_diff': 3.277800000000067e-05}, {'time': 0.024689222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:42.303" endtime="20201110 08:33:42.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:42.320" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:42.307" endtime="20201110 08:33:42.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.324" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:33:42.323" endtime="20201110 08:33:42.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.327" level="INFO">VALUE: [3.277800000000067e-05, 1.937499999999856e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.1291999999999145e-05, 2.133300000000185e-05, 2.412499999999984e-05, 1.936099999999899e-05, 1.937499999999856e-05, 2.515299999999998e-05, 2.413899999999941e-05, 2.0291999999998145e-05, 2.316699999999755e-05, 2.40970000000007e-05, 2.1250000000000435e-05, 2.319500000000016e-05, 2.226300000000153e-05, 2.2207999999999256e-05, 2.0278000000002044e-05, 2.0306000000001184e-05, 1.936099999999899e-05, 2.516699999999955e-05, 1.937500000000203e-05, 2.0235999999999865e-05, 2.1277999999999575e-05, 2.1277999999999575e-05, 2.1236000000000865e-05, 2.40970000000007e-05, 2.411100000000027e-05, 2.029099999999867e-05, 1.9320000000003223e-05, 2.5027000000000382e-05, 2.3166000000001546e-05, 2.3151999999998507e-05, 2.1264000000000005e-05, 2.313899999999841e-05, 2.318100000000059e-05, 2.6055000000000522e-05, 2.5068999999999092e-05, 2.2207999999999256e-05, 1.934699999999942e-05, 2.031900000000128e-05, 2.419500000000116e-05, 2.130499999999924e-05, 2.036099999999999e-05, 2.318100000000059e-05, 2.5054999999999522e-05, 2.418100000000159e-05, 1.936100000000246e-05, 2.5069999999998566e-05]</msg>
<status status="PASS" starttime="20201110 08:33:42.325" endtime="20201110 08:33:42.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.321" endtime="20201110 08:33:42.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.330" endtime="20201110 08:33:42.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.334" endtime="20201110 08:33:42.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.332" endtime="20201110 08:33:42.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.329" endtime="20201110 08:33:42.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.961" endtime="20201110 08:33:42.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.961" endtime="20201110 08:33:42.355"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.363" endtime="20201110 08:33:42.385"></status>
</kw>
<msg timestamp="20201110 08:33:42.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.362" endtime="20201110 08:33:42.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.386" endtime="20201110 08:33:42.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.389" endtime="20201110 08:33:42.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.359" endtime="20201110 08:33:42.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.357" endtime="20201110 08:33:42.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.399" endtime="20201110 08:33:42.685"></status>
</kw>
<msg timestamp="20201110 08:33:42.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022253806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.397" endtime="20201110 08:33:42.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022253806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.689" endtime="20201110 08:33:42.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.698" endtime="20201110 08:33:42.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.395" endtime="20201110 08:33:42.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.393" endtime="20201110 08:33:42.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:42.705" level="INFO">${RESULT} = [{'time': 0.022253806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0723000000000676e-05, 'source_diff': 1.0723000000000676e-05}, {'time': 0.02228475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:33:42.701" endtime="20201110 08:33:42.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:42.718" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:42.706" endtime="20201110 08:33:42.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.722" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:33:42.721" endtime="20201110 08:33:42.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.725" level="INFO">VALUE: [1.0723000000000676e-05, 2.1264000000000005e-05, 2.5084000000001605e-05, 2.220899999999873e-05, 2.315300000000145e-05, 2.131899999999881e-05, 2.219499999999916e-05, 2.508300000000213e-05, 2.511100000000127e-05, 2.0277999999998575e-05, 2.316699999999755e-05, 2.508300000000213e-05, 2.033299999999738e-05, 1.937500000000203e-05, 2.22090000000022e-05, 2.508300000000213e-05, 2.033300000000085e-05, 2.40970000000007e-05, 2.415299999999898e-05, 2.5096999999998232e-05, 2.1277999999999575e-05, 2.2221999999998826e-05, 2.0292000000001614e-05, 2.318100000000059e-05, 2.030500000000171e-05, 2.6042000000000426e-05, 2.1277999999999575e-05, 2.215300000000045e-05, 2.2193999999999686e-05, 2.412499999999984e-05, 2.5084000000001605e-05, 2.5110999999997802e-05, 2.1277999999999575e-05, 2.219499999999916e-05, 2.2249999999997966e-05, 2.0249999999999435e-05, 2.415300000000245e-05, 2.0249999999999435e-05, 2.32229999999993e-05, 2.1319999999998285e-05, 2.1277999999999575e-05, 2.2207999999999256e-05, 2.5068999999999092e-05, 2.2207999999999256e-05, 2.2264000000001005e-05, 2.413899999999941e-05, 2.0334000000000324e-05, 2.6041000000000952e-05, 1.9361999999998464e-05, 2.2193999999999686e-05]</msg>
<status status="PASS" starttime="20201110 08:33:42.724" endtime="20201110 08:33:42.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.719" endtime="20201110 08:33:42.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.729" endtime="20201110 08:33:42.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.732" endtime="20201110 08:33:42.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.730" endtime="20201110 08:33:42.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.727" endtime="20201110 08:33:42.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.355" endtime="20201110 08:33:42.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.355" endtime="20201110 08:33:42.753"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.761" endtime="20201110 08:33:42.777"></status>
</kw>
<msg timestamp="20201110 08:33:42.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.760" endtime="20201110 08:33:42.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.778" endtime="20201110 08:33:42.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.781" endtime="20201110 08:33:42.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.757" endtime="20201110 08:33:42.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.755" endtime="20201110 08:33:42.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.791" endtime="20201110 08:33:43.076"></status>
</kw>
<msg timestamp="20201110 08:33:43.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02084575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020855542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:42.789" endtime="20201110 08:33:43.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02084575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020855542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:43.080" endtime="20201110 08:33:43.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.089" endtime="20201110 08:33:43.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.787" endtime="20201110 08:33:43.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.785" endtime="20201110 08:33:43.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.095" level="INFO">${RESULT} = [{'time': 0.020855542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.020886389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:43.092" endtime="20201110 08:33:43.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:43.109" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:43.096" endtime="20201110 08:33:43.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.113" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:33:43.112" endtime="20201110 08:33:43.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.115" level="INFO">VALUE: [9.792000000001522e-06, 2.408300000000113e-05, 2.0278000000002044e-05, 2.22229999999983e-05, 1.940300000000117e-05, 2.3180000000001116e-05, 2.6028000000000856e-05, 2.5040999999999952e-05, 2.213900000000088e-05, 2.5055999999998996e-05, 2.0292000000001614e-05, 2.511100000000127e-05, 2.315299999999798e-05, 1.937499999999856e-05, 2.316699999999755e-05, 2.5082999999998662e-05, 2.2138000000001407e-05, 2.50970000000017e-05, 2.1264000000000005e-05, 2.031900000000128e-05, 2.6028000000000856e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.0235999999999865e-05, 2.5027999999999856e-05, 2.2250000000001435e-05, 2.5070000000002035e-05, 2.411100000000027e-05, 2.5097999999997705e-05, 2.036099999999999e-05, 2.0306000000001184e-05, 2.40970000000007e-05, 2.1250000000000435e-05, 2.0306000000001184e-05, 2.3166000000001546e-05, 2.0320000000000754e-05, 2.029099999999867e-05, 2.415299999999898e-05, 2.316700000000102e-05, 2.5999999999998247e-05, 2.2207999999999256e-05, 2.0249999999999435e-05, 2.123700000000034e-05, 2.1291999999999145e-05, 2.223700000000134e-05, 2.5096999999998232e-05, 2.12770000000001e-05, 2.2236000000001865e-05, 2.3179999999997647e-05, 2.511100000000127e-05]</msg>
<status status="PASS" starttime="20201110 08:33:43.114" endtime="20201110 08:33:43.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.110" endtime="20201110 08:33:43.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.119" endtime="20201110 08:33:43.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.123" endtime="20201110 08:33:43.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.121" endtime="20201110 08:33:43.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.117" endtime="20201110 08:33:43.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.754" endtime="20201110 08:33:43.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.753" endtime="20201110 08:33:43.144"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.153" endtime="20201110 08:33:43.169"></status>
</kw>
<msg timestamp="20201110 08:33:43.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.151" endtime="20201110 08:33:43.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.170" endtime="20201110 08:33:43.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.173" endtime="20201110 08:33:43.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.148" endtime="20201110 08:33:43.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.146" endtime="20201110 08:33:43.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.183" endtime="20201110 08:33:43.469"></status>
</kw>
<msg timestamp="20201110 08:33:43.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.181" endtime="20201110 08:33:43.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.473" endtime="20201110 08:33:43.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.481" endtime="20201110 08:33:43.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.179" endtime="20201110 08:33:43.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.177" endtime="20201110 08:33:43.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.488" level="INFO">${RESULT} = [{'time': 0.022021792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4097999999996705e-05, 'source_diff': 2.4097999999996705e-05}, {'time': 0.022051889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:43.484" endtime="20201110 08:33:43.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:43.502" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:43.489" endtime="20201110 08:33:43.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.507" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:33:43.506" endtime="20201110 08:33:43.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.509" level="INFO">VALUE: [2.4097999999996705e-05, 2.4070000000001035e-05, 2.0277999999998575e-05, 2.411100000000027e-05, 2.029099999999867e-05, 2.506900000000256e-05, 1.9278000000001044e-05, 2.1250000000000435e-05, 2.6055999999999996e-05, 2.5040999999999952e-05, 2.0292000000001614e-05, 2.6055999999999996e-05, 2.4111999999999745e-05, 2.312499999999884e-05, 2.22229999999983e-05, 2.5041999999999426e-05, 2.030500000000171e-05, 2.413899999999941e-05, 2.123700000000034e-05, 2.411100000000027e-05, 2.5068999999999092e-05, 2.1264000000000005e-05, 2.416700000000202e-05, 2.3193999999997217e-05, 2.50970000000017e-05, 2.415299999999898e-05, 2.119500000000163e-05, 2.3194000000000686e-05, 2.0306000000001184e-05, 2.120899999999773e-05, 2.126300000000053e-05, 2.316699999999755e-05, 2.511100000000127e-05, 2.1236000000000865e-05, 2.5054999999999522e-05, 2.5041999999999426e-05, 2.0235999999999865e-05, 2.219499999999916e-05, 2.1264000000000005e-05, 2.5082999999998662e-05, 2.3152000000001977e-05, 2.218099999999959e-05, 1.936099999999899e-05, 2.029099999999867e-05, 2.220899999999873e-05, 2.5068999999999092e-05, 1.9333999999999324e-05, 1.934700000000289e-05, 2.22229999999983e-05, 2.511100000000127e-05]</msg>
<status status="PASS" starttime="20201110 08:33:43.508" endtime="20201110 08:33:43.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.503" endtime="20201110 08:33:43.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.513" endtime="20201110 08:33:43.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.516" endtime="20201110 08:33:43.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.515" endtime="20201110 08:33:43.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.511" endtime="20201110 08:33:43.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.144" endtime="20201110 08:33:43.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.144" endtime="20201110 08:33:43.537"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.546" endtime="20201110 08:33:43.562"></status>
</kw>
<msg timestamp="20201110 08:33:43.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.544" endtime="20201110 08:33:43.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.563" endtime="20201110 08:33:43.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.566" endtime="20201110 08:33:43.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.542" endtime="20201110 08:33:43.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.539" endtime="20201110 08:33:43.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.575" endtime="20201110 08:33:43.862"></status>
</kw>
<msg timestamp="20201110 08:33:43.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020470903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.574" endtime="20201110 08:33:43.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020470903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.866" endtime="20201110 08:33:43.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.874" endtime="20201110 08:33:43.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.572" endtime="20201110 08:33:43.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.570" endtime="20201110 08:33:43.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.881" level="INFO">${RESULT} = [{'time': 0.020501736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.083300000000094e-05, 'source_diff': 3.083300000000094e-05}, {'time': 0.020532208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:43.877" endtime="20201110 08:33:43.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:43.894" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:43.882" endtime="20201110 08:33:43.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.899" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:33:43.897" endtime="20201110 08:33:43.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.901" level="INFO">VALUE: [3.083300000000094e-05, 2.5054999999999522e-05, 2.315300000000145e-05, 2.2222000000002295e-05, 2.0277999999998575e-05, 2.5084000000001605e-05, 2.316700000000102e-05, 2.316700000000102e-05, 1.9319999999999754e-05, 2.413899999999941e-05, 2.1180000000002586e-05, 2.0263999999999005e-05, 2.316699999999755e-05, 1.934699999999942e-05, 1.9348000000002363e-05, 2.1277999999999575e-05, 2.219500000000263e-05, 1.934699999999942e-05, 2.419500000000116e-05, 2.415299999999898e-05, 2.312500000000231e-05, 2.315299999999798e-05, 1.9306000000000184e-05, 2.312500000000231e-05, 2.413899999999941e-05, 2.12770000000001e-05, 2.5096999999998232e-05, 2.3207999999996787e-05, 2.1264000000000005e-05, 2.1250000000000435e-05, 2.312500000000231e-05, 2.315300000000145e-05, 1.9333999999999324e-05, 2.220899999999873e-05, 2.2235999999998396e-05, 2.6042000000000426e-05, 2.5069999999998566e-05, 2.0292000000001614e-05, 2.0277999999998575e-05, 2.5054999999999522e-05, 1.933299999999985e-05, 2.3221999999999826e-05, 2.6055000000000522e-05, 2.2235999999998396e-05, 2.511100000000127e-05, 2.2208000000002726e-05, 2.6014000000001286e-05, 2.4041999999998426e-05, 2.413899999999941e-05, 2.413900000000288e-05]</msg>
<status status="PASS" starttime="20201110 08:33:43.900" endtime="20201110 08:33:43.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.895" endtime="20201110 08:33:43.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.905" endtime="20201110 08:33:43.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.908" endtime="20201110 08:33:43.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.906" endtime="20201110 08:33:43.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.903" endtime="20201110 08:33:43.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.538" endtime="20201110 08:33:43.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.537" endtime="20201110 08:33:43.929"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.937" endtime="20201110 08:33:43.956"></status>
</kw>
<msg timestamp="20201110 08:33:43.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.936" endtime="20201110 08:33:43.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.958" endtime="20201110 08:33:43.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.960" endtime="20201110 08:33:43.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.933" endtime="20201110 08:33:43.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.931" endtime="20201110 08:33:43.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.970" endtime="20201110 08:33:44.256"></status>
</kw>
<msg timestamp="20201110 08:33:44.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020407958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.969" endtime="20201110 08:33:44.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020407958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.261" endtime="20201110 08:33:44.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.269" endtime="20201110 08:33:44.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.966" endtime="20201110 08:33:44.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.965" endtime="20201110 08:33:44.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:44.275" level="INFO">${RESULT} = [{'time': 0.020447347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9389000000000784e-05, 'source_diff': 3.9389000000000784e-05}, {'time': 0.020508625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:44.272" endtime="20201110 08:33:44.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:44.289" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:44.276" endtime="20201110 08:33:44.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.293" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:33:44.292" endtime="20201110 08:33:44.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.296" level="INFO">VALUE: [3.9389000000000784e-05, 5.566699999999883e-05, 5.093100000000059e-05, 5.087500000000231e-05, 5.2693999999998964e-05, 5.091700000000102e-05, 4.997199999999882e-05, 5.3749999999998244e-05, 5.191699999999855e-05, 5.475000000000271e-05, 5.4708000000000534e-05, 5.6666000000000355e-05, 5.088900000000188e-05, 4.999999999999796e-05, 5.3707999999999534e-05, 5.379200000000042e-05, 5.376400000000128e-05, 5.083300000000013e-05, 4.990300000000045e-05, 5.087500000000231e-05, 5.091700000000102e-05, 5.573700000000015e-05, 5.3777999999997383e-05, 5.186100000000027e-05, 4.898600000000086e-05, 5.091700000000102e-05, 5.376400000000128e-05, 5.461099999999955e-05, 5.088899999999841e-05, 5.5679999999998925e-05, 5.090300000000145e-05, 5.3763999999997814e-05, 5.559800000000045e-05, 4.987500000000131e-05, 5.087500000000231e-05, 5.18470000000007e-05, 5.280599999999899e-05, 5.5694000000001964e-05, 5.373600000000214e-05, 5.379200000000042e-05, 5.4694000000000964e-05, 4.987500000000131e-05, 5.088899999999841e-05, 5.5693999999998495e-05, 5.091600000000154e-05, 5.662500000000112e-05, 5.281899999999909e-05, 5.288900000000041e-05, 5.5707999999998065e-05, 5.468100000000087e-05]</msg>
<status status="PASS" starttime="20201110 08:33:44.294" endtime="20201110 08:33:44.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.290" endtime="20201110 08:33:44.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.299" endtime="20201110 08:33:44.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.303" endtime="20201110 08:33:44.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.301" endtime="20201110 08:33:44.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.298" endtime="20201110 08:33:44.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.930" endtime="20201110 08:33:44.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.929" endtime="20201110 08:33:44.324"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.332" endtime="20201110 08:33:44.353"></status>
</kw>
<msg timestamp="20201110 08:33:44.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.331" endtime="20201110 08:33:44.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.355" endtime="20201110 08:33:44.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.357" endtime="20201110 08:33:44.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.328" endtime="20201110 08:33:44.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.326" endtime="20201110 08:33:44.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.367" endtime="20201110 08:33:44.653"></status>
</kw>
<msg timestamp="20201110 08:33:44.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022680611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.365" endtime="20201110 08:33:44.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022680611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.658" endtime="20201110 08:33:44.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.666" endtime="20201110 08:33:44.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.363" endtime="20201110 08:33:44.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.361" endtime="20201110 08:33:44.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:44.673" level="INFO">${RESULT} = [{'time': 0.022680611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.900000000000043e-05, 'source_diff': 4.900000000000043e-05}, {'time': 0.022741417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:44.670" endtime="20201110 08:33:44.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:44.686" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:44.674" endtime="20201110 08:33:44.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.691" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:33:44.690" endtime="20201110 08:33:44.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.693" level="INFO">VALUE: [4.900000000000043e-05, 5.570900000000101e-05, 5.5694000000001964e-05, 4.899999999999696e-05, 5.663900000000069e-05, 5.282000000000203e-05, 5.183299999999766e-05, 5.177799999999885e-05, 5.3777999999997383e-05, 5.191700000000202e-05, 5.177699999999938e-05, 4.995799999999925e-05, 5.4735999999999674e-05, 5.5750000000000244e-05, 5.187499999999984e-05, 5.281899999999909e-05, 5.280599999999899e-05, 5.086099999999927e-05, 5.086099999999927e-05, 5.08469999999997e-05, 5.379100000000095e-05, 5.570900000000101e-05, 5.566699999999883e-05, 5.086199999999874e-05, 5.5736000000000674e-05, 5.188899999999941e-05, 4.991700000000002e-05, 5.077800000000132e-05, 5.186100000000027e-05, 5.4735999999999674e-05, 4.8987000000000336e-05, 5.28470000000017e-05, 4.987500000000131e-05, 5.663900000000069e-05, 5.087500000000231e-05, 5.275000000000071e-05, 5.187499999999984e-05, 5.665299999999679e-05, 5.279199999999942e-05, 5.5707999999998065e-05, 5.475000000000271e-05, 5.462499999999912e-05, 5.18470000000007e-05, 5.383399999999913e-05, 5.5694000000001964e-05, 5.275000000000071e-05, 5.56670000000023e-05, 5.5651999999999785e-05, 5.3721999999999104e-05, 4.898600000000086e-05]</msg>
<status status="PASS" starttime="20201110 08:33:44.692" endtime="20201110 08:33:44.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.687" endtime="20201110 08:33:44.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.697" endtime="20201110 08:33:44.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.701" endtime="20201110 08:33:44.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.699" endtime="20201110 08:33:44.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.695" endtime="20201110 08:33:44.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.324" endtime="20201110 08:33:44.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.324" endtime="20201110 08:33:44.722"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.731" endtime="20201110 08:33:44.750"></status>
</kw>
<msg timestamp="20201110 08:33:44.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.729" endtime="20201110 08:33:44.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.752" endtime="20201110 08:33:44.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.754" endtime="20201110 08:33:44.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.727" endtime="20201110 08:33:44.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.724" endtime="20201110 08:33:44.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.765" endtime="20201110 08:33:45.051"></status>
</kw>
<msg timestamp="20201110 08:33:45.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021648833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.763" endtime="20201110 08:33:45.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021648833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.055" endtime="20201110 08:33:45.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.063" endtime="20201110 08:33:45.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.761" endtime="20201110 08:33:45.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.759" endtime="20201110 08:33:45.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:45.070" level="INFO">${RESULT} = [{'time': 0.021648833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2318999999998996e-05, 'source_diff': 4.2318999999998996e-05}, {'time': 0.021709361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:45.066" endtime="20201110 08:33:45.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:45.084" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:45.071" endtime="20201110 08:33:45.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.088" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:33:45.087" endtime="20201110 08:33:45.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.091" level="INFO">VALUE: [4.2318999999998996e-05, 5.4722000000000104e-05, 5.190299999999898e-05, 5.09729999999993e-05, 5.376400000000128e-05, 5.4763999999998814e-05, 5.5679999999998925e-05, 5.570900000000101e-05, 5.186100000000027e-05, 5.28470000000017e-05, 5.484700000000023e-05, 5.008299999999938e-05, 5.470900000000001e-05, 5.091700000000102e-05, 5.3763999999997814e-05, 5.090299999999798e-05, 5.187499999999984e-05, 5.276400000000028e-05, 5.4749999999999244e-05, 5.195800000000125e-05, 5.280500000000299e-05, 4.994399999999968e-05, 5.663900000000069e-05, 5.6721999999998635e-05, 5.091600000000154e-05, 5.4735999999999674e-05, 5.090299999999798e-05, 4.990300000000045e-05, 5.284699999999823e-05, 5.18340000000006e-05, 5.188899999999941e-05, 5.5750000000000244e-05, 5.570900000000101e-05, 5.087500000000231e-05, 5.190299999999898e-05, 5.3721999999999104e-05, 5.379100000000095e-05, 5.0014000000001e-05, 5.373600000000214e-05, 5.18470000000007e-05, 5.087500000000231e-05, 5.093100000000059e-05, 5.5750000000000244e-05, 5.279199999999942e-05, 5.184800000000017e-05, 5.280499999999952e-05, 5.379100000000095e-05, 5.1915999999999074e-05, 5.5708000000001534e-05, 5.287500000000084e-05]</msg>
<status status="PASS" starttime="20201110 08:33:45.090" endtime="20201110 08:33:45.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.085" endtime="20201110 08:33:45.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.094" endtime="20201110 08:33:45.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.098" endtime="20201110 08:33:45.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.096" endtime="20201110 08:33:45.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.093" endtime="20201110 08:33:45.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.723" endtime="20201110 08:33:45.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.722" endtime="20201110 08:33:45.119"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.127" endtime="20201110 08:33:45.146"></status>
</kw>
<msg timestamp="20201110 08:33:45.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.126" endtime="20201110 08:33:45.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.148" endtime="20201110 08:33:45.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.150" endtime="20201110 08:33:45.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.123" endtime="20201110 08:33:45.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.121" endtime="20201110 08:33:45.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.160" endtime="20201110 08:33:45.446"></status>
</kw>
<msg timestamp="20201110 08:33:45.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021146375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021196361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.159" endtime="20201110 08:33:45.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021146375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021196361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.450" endtime="20201110 08:33:45.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.459" endtime="20201110 08:33:45.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.156" endtime="20201110 08:33:45.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.154" endtime="20201110 08:33:45.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:45.465" level="INFO">${RESULT} = [{'time': 0.021196361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.998600000000186e-05, 'source_diff': 4.998600000000186e-05}, {'time': 0.0212575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:45.462" endtime="20201110 08:33:45.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:45.479" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:45.466" endtime="20201110 08:33:45.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.483" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:33:45.482" endtime="20201110 08:33:45.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.486" level="INFO">VALUE: [4.998600000000186e-05, 5.28609999999978e-05, 5.5763999999999814e-05, 5.376400000000128e-05, 5.093100000000059e-05, 5.476400000000228e-05, 5.287500000000084e-05, 4.997200000000229e-05, 5.4777999999998384e-05, 5.477800000000185e-05, 5.570899999999754e-05, 5.4749999999999244e-05, 5.476400000000228e-05, 5.376400000000128e-05, 5.279199999999942e-05, 4.9959000000002196e-05, 5.281899999999909e-05, 5.193100000000159e-05, 5.000000000000143e-05, 5.188899999999941e-05, 5.095800000000025e-05, 5.477699999999891e-05, 5.570899999999754e-05, 5.5708000000001534e-05, 5.663900000000069e-05, 5.187499999999984e-05, 5.4735999999999674e-05, 5.5707999999998065e-05, 5.284800000000117e-05, 5.286100000000127e-05, 5.379200000000042e-05, 5.090300000000145e-05, 5.5665999999999355e-05, 5.190300000000245e-05, 5.377800000000085e-05, 5.387499999999837e-05, 4.997199999999882e-05, 5.4722000000000104e-05, 5.277799999999985e-05, 5.283300000000213e-05, 5.4735999999999674e-05, 5.4791999999997953e-05, 5.093100000000059e-05, 5.56670000000023e-05, 5.5651999999999785e-05, 4.998599999999839e-05, 5.281999999999856e-05, 5.283300000000213e-05, 5.098599999999939e-05, 5.093099999999712e-05]</msg>
<status status="PASS" starttime="20201110 08:33:45.484" endtime="20201110 08:33:45.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.480" endtime="20201110 08:33:45.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.489" endtime="20201110 08:33:45.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.493" endtime="20201110 08:33:45.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.491" endtime="20201110 08:33:45.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.488" endtime="20201110 08:33:45.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.120" endtime="20201110 08:33:45.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.119" endtime="20201110 08:33:45.514"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.522" endtime="20201110 08:33:45.549"></status>
</kw>
<msg timestamp="20201110 08:33:45.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.521" endtime="20201110 08:33:45.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.550" endtime="20201110 08:33:45.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.553" endtime="20201110 08:33:45.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.518" endtime="20201110 08:33:45.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.516" endtime="20201110 08:33:45.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.563" endtime="20201110 08:33:45.849"></status>
</kw>
<msg timestamp="20201110 08:33:45.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023317847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023368736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.561" endtime="20201110 08:33:45.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023317847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023368736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.853" endtime="20201110 08:33:45.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.861" endtime="20201110 08:33:45.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.559" endtime="20201110 08:33:45.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.557" endtime="20201110 08:33:45.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:45.868" level="INFO">${RESULT} = [{'time': 0.023368736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.088900000000188e-05, 'source_diff': 5.088900000000188e-05}, {'time': 0.023429403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:45.864" endtime="20201110 08:33:45.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:45.881" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:45.869" endtime="20201110 08:33:45.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.885" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:33:45.884" endtime="20201110 08:33:45.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.888" level="INFO">VALUE: [5.088900000000188e-05, 5.473600000000314e-05, 5.094500000000016e-05, 5.376400000000128e-05, 5.477800000000185e-05, 5.181899999999809e-05, 4.991600000000054e-05, 5.383399999999913e-05, 5.38470000000027e-05, 5.379100000000095e-05, 5.379200000000042e-05, 5.468100000000087e-05, 5.181899999999809e-05, 5.383299999999966e-05, 5.369499999999944e-05, 5.569499999999797e-05, 5.2763999999996813e-05, 5.187499999999984e-05, 5.379200000000042e-05, 5.4735999999999674e-05, 5.561100000000055e-05, 5.088900000000188e-05, 5.290299999999998e-05, 5.469499999999697e-05, 5.087499999999884e-05, 5.280499999999952e-05, 5.5736000000000674e-05, 5.283399999999813e-05, 5.0902000000001973e-05, 5.18470000000007e-05, 5.091700000000102e-05, 4.994499999999916e-05, 5.477800000000185e-05, 5.2693999999998964e-05, 4.8973000000000766e-05, 5.283399999999813e-05, 5.569500000000144e-05, 5.093000000000111e-05, 5.377800000000085e-05, 5.283300000000213e-05, 5.377800000000085e-05, 5.187499999999984e-05, 5.468100000000087e-05, 5.277799999999985e-05, 5.376400000000128e-05, 5.380599999999999e-05, 5.568100000000187e-05, 5.187499999999984e-05, 4.995799999999925e-05, 5.184800000000017e-05]</msg>
<status status="PASS" starttime="20201110 08:33:45.886" endtime="20201110 08:33:45.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.882" endtime="20201110 08:33:45.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.891" endtime="20201110 08:33:45.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.895" endtime="20201110 08:33:45.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.893" endtime="20201110 08:33:45.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.890" endtime="20201110 08:33:45.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.514" endtime="20201110 08:33:45.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.514" endtime="20201110 08:33:45.916"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.924" endtime="20201110 08:33:45.946"></status>
</kw>
<msg timestamp="20201110 08:33:45.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.923" endtime="20201110 08:33:45.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.947" endtime="20201110 08:33:45.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.950" endtime="20201110 08:33:45.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.920" endtime="20201110 08:33:45.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.918" endtime="20201110 08:33:45.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.960" endtime="20201110 08:33:46.246"></status>
</kw>
<msg timestamp="20201110 08:33:46.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023271667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023312958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.958" endtime="20201110 08:33:46.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023271667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023312958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.251" endtime="20201110 08:33:46.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.259" endtime="20201110 08:33:46.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.956" endtime="20201110 08:33:46.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.954" endtime="20201110 08:33:46.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.266" level="INFO">${RESULT} = [{'time': 0.023312958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1291000000002326e-05, 'source_diff': 4.1291000000002326e-05}, {'time': 0.023373681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:46.262" endtime="20201110 08:33:46.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:46.279" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:46.267" endtime="20201110 08:33:46.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.283" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:33:46.282" endtime="20201110 08:33:46.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.286" level="INFO">VALUE: [4.1291000000002326e-05, 4.993099999999959e-05, 5.377800000000085e-05, 5.188899999999941e-05, 5.18470000000007e-05, 5.179199999999842e-05, 5.091700000000102e-05, 5.569499999999797e-05, 5.184699999999723e-05, 5.188899999999941e-05, 5.6541999999999704e-05, 5.4749999999999244e-05, 5.384699999999923e-05, 5.283300000000213e-05, 5.080600000000046e-05, 5.087499999999884e-05, 5.562500000000012e-05, 5.663900000000069e-05, 5.269499999999844e-05, 5.4722000000000104e-05, 4.995799999999925e-05, 5.08339999999996e-05, 5.094500000000016e-05, 5.379199999999695e-05, 5.559700000000098e-05, 5.281900000000256e-05, 5.4735999999999674e-05, 5.277799999999985e-05, 5.654100000000023e-05, 5.188899999999941e-05, 5.091700000000102e-05, 5.081900000000056e-05, 5.091700000000102e-05, 5.380500000000052e-05, 5.5749999999996774e-05, 5.180600000000146e-05, 4.9972999999998297e-05, 5.4749999999999244e-05, 5.082000000000003e-05, 5.372200000000257e-05, 5.3763999999997814e-05, 5.276400000000028e-05, 5.283399999999813e-05, 5.2749999999997244e-05, 5.3707999999999534e-05, 5.283299999999866e-05, 5.281999999999856e-05, 5.3666000000000824e-05, 4.990200000000097e-05, 5.091699999999755e-05]</msg>
<status status="PASS" starttime="20201110 08:33:46.284" endtime="20201110 08:33:46.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.280" endtime="20201110 08:33:46.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.289" endtime="20201110 08:33:46.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.293" endtime="20201110 08:33:46.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.291" endtime="20201110 08:33:46.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.288" endtime="20201110 08:33:46.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.916" endtime="20201110 08:33:46.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.916" endtime="20201110 08:33:46.314"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.322" endtime="20201110 08:33:46.343"></status>
</kw>
<msg timestamp="20201110 08:33:46.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.321" endtime="20201110 08:33:46.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.344" endtime="20201110 08:33:46.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.347" endtime="20201110 08:33:46.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.318" endtime="20201110 08:33:46.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.316" endtime="20201110 08:33:46.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.356" endtime="20201110 08:33:46.642"></status>
</kw>
<msg timestamp="20201110 08:33:46.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.355" endtime="20201110 08:33:46.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.646" endtime="20201110 08:33:46.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.655" endtime="20201110 08:33:46.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.352" endtime="20201110 08:33:46.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.351" endtime="20201110 08:33:46.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.661" level="INFO">${RESULT} = [{'time': 0.022036417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.144500000000025e-05, 'source_diff': 6.144500000000025e-05}, {'time': 0.022097722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:46.658" endtime="20201110 08:33:46.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:46.676" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:46.662" endtime="20201110 08:33:46.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.680" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:33:46.679" endtime="20201110 08:33:46.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.683" level="INFO">VALUE: [6.144500000000025e-05, 5.090300000000145e-05, 5.5708000000001534e-05, 5.4735999999999674e-05, 5.5722000000001104e-05, 5.272200000000157e-05, 5.28340000000016e-05, 5.4735999999999674e-05, 5.665300000000026e-05, 5.376400000000128e-05, 5.566699999999883e-05, 5.476400000000228e-05, 5.3749999999998244e-05, 5.090299999999798e-05, 5.093100000000059e-05, 5.0887999999998934e-05, 5.091600000000154e-05, 5.188899999999941e-05, 5.286100000000127e-05, 5.276400000000028e-05, 5.566699999999883e-05, 4.993000000000011e-05, 5.4763999999998814e-05, 5.5722000000001104e-05, 5.184800000000017e-05, 4.994399999999968e-05, 5.4749999999999244e-05, 5.275000000000071e-05, 5.380599999999999e-05, 5.090299999999798e-05, 5.28470000000017e-05, 5.5694000000001964e-05, 5.38470000000027e-05, 5.093000000000111e-05, 5.273600000000114e-05, 5.5708000000001534e-05, 5.094400000000068e-05, 5.284699999999823e-05, 5.281899999999909e-05, 5.182000000000103e-05, 4.995799999999925e-05, 5.665300000000026e-05, 5.086099999999927e-05, 5.186100000000027e-05, 5.186100000000027e-05, 5.3693999999999964e-05, 5.186100000000027e-05, 5.5694000000001964e-05, 5.186199999999974e-05, 5.093000000000111e-05]</msg>
<status status="PASS" starttime="20201110 08:33:46.681" endtime="20201110 08:33:46.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.677" endtime="20201110 08:33:46.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.686" endtime="20201110 08:33:46.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.690" endtime="20201110 08:33:46.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.688" endtime="20201110 08:33:46.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.685" endtime="20201110 08:33:46.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.315" endtime="20201110 08:33:46.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.314" endtime="20201110 08:33:46.711"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.719" endtime="20201110 08:33:46.740"></status>
</kw>
<msg timestamp="20201110 08:33:46.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.718" endtime="20201110 08:33:46.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.741" endtime="20201110 08:33:46.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.744" endtime="20201110 08:33:46.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.715" endtime="20201110 08:33:46.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.713" endtime="20201110 08:33:46.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.755" endtime="20201110 08:33:47.041"></status>
</kw>
<msg timestamp="20201110 08:33:47.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.753" endtime="20201110 08:33:47.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.045" endtime="20201110 08:33:47.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.054" endtime="20201110 08:33:47.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.750" endtime="20201110 08:33:47.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.749" endtime="20201110 08:33:47.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.060" level="INFO">${RESULT} = [{'time': 0.022011306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.093100000000059e-05, 'source_diff': 5.093100000000059e-05}, {'time': 0.022072361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:47.057" endtime="20201110 08:33:47.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:47.074" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:47.061" endtime="20201110 08:33:47.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.078" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:33:47.077" endtime="20201110 08:33:47.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.081" level="INFO">VALUE: [5.093100000000059e-05, 5.188899999999941e-05, 5.370899999999901e-05, 5.373600000000214e-05, 5.28340000000016e-05, 4.991700000000002e-05, 5.377800000000085e-05, 5.377800000000085e-05, 5.083300000000013e-05, 5.375000000000171e-05, 5.569499999999797e-05, 4.998599999999839e-05, 5.091700000000102e-05, 5.280600000000246e-05, 5.56809999999984e-05, 5.5722000000001104e-05, 5.3707999999999534e-05, 5.661199999999755e-05, 5.186100000000027e-05, 5.280599999999899e-05, 5.279199999999942e-05, 5.379099999999748e-05, 5.181900000000156e-05, 5.661100000000155e-05, 5.088900000000188e-05, 5.379200000000042e-05, 5.570900000000101e-05, 5.186100000000027e-05, 5.279200000000289e-05, 5.376400000000128e-05, 5.093100000000059e-05, 5.094500000000016e-05, 4.986099999999827e-05, 5.187499999999984e-05, 5.093100000000059e-05, 4.987499999999784e-05, 5.280499999999952e-05, 5.1929999999998644e-05, 5.083300000000013e-05, 5.662499999999765e-05, 5.095800000000025e-05, 4.997199999999882e-05, 5.083400000000307e-05, 5.088899999999841e-05, 5.284699999999823e-05, 5.463899999999869e-05, 5.5721999999997635e-05, 4.995799999999925e-05, 5.08469999999997e-05, 5.376400000000128e-05]</msg>
<status status="PASS" starttime="20201110 08:33:47.079" endtime="20201110 08:33:47.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.075" endtime="20201110 08:33:47.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.089" endtime="20201110 08:33:47.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.092" endtime="20201110 08:33:47.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.091" endtime="20201110 08:33:47.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.087" endtime="20201110 08:33:47.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.711" endtime="20201110 08:33:47.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.711" endtime="20201110 08:33:47.113"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.122" endtime="20201110 08:33:47.141"></status>
</kw>
<msg timestamp="20201110 08:33:47.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.121" endtime="20201110 08:33:47.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.142" endtime="20201110 08:33:47.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.145" endtime="20201110 08:33:47.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.118" endtime="20201110 08:33:47.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.116" endtime="20201110 08:33:47.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.156" endtime="20201110 08:33:47.462"></status>
</kw>
<msg timestamp="20201110 08:33:47.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021293917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021344833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.154" endtime="20201110 08:33:47.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021293917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021344833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.466" endtime="20201110 08:33:47.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.475" endtime="20201110 08:33:47.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.151" endtime="20201110 08:33:47.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.150" endtime="20201110 08:33:47.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.482" level="INFO">${RESULT} = [{'time': 0.021344833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.091600000000154e-05, 'source_diff': 5.091600000000154e-05}, {'time': 0.021405514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:47.479" endtime="20201110 08:33:47.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:47.496" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:47.483" endtime="20201110 08:33:47.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.501" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:33:47.500" endtime="20201110 08:33:47.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.503" level="INFO">VALUE: [5.091600000000154e-05, 5.276400000000028e-05, 5.180600000000146e-05, 5.4749999999999244e-05, 5.381899999999662e-05, 5.5707999999998065e-05, 5.463899999999869e-05, 5.276300000000081e-05, 5.569500000000144e-05, 5.091699999999755e-05, 5.5708000000001534e-05, 5.56670000000023e-05, 5.559700000000098e-05, 4.9959000000002196e-05, 5.186100000000027e-05, 5.090299999999798e-05, 5.5666000000002824e-05, 5.086200000000221e-05, 5.179200000000189e-05, 5.666699999999983e-05, 5.280600000000246e-05, 5.566699999999883e-05, 5.3721999999999104e-05, 5.093100000000059e-05, 5.183299999999766e-05, 5.472299999999958e-05, 5.3763999999997814e-05, 5.662500000000112e-05, 5.3721999999999104e-05, 5.093000000000111e-05, 5.4735999999999674e-05, 5.3707999999999534e-05, 5.286100000000127e-05, 5.183300000000113e-05, 4.994400000000315e-05, 5.563899999999969e-05, 5.3735999999998674e-05, 5.1901999999999504e-05, 5.4722000000000104e-05, 5.187499999999984e-05, 5.380499999999705e-05, 5.276400000000028e-05, 5.086099999999927e-05, 5.186100000000027e-05, 5.5721999999997635e-05, 5.093100000000059e-05, 5.179200000000189e-05, 5.276400000000028e-05, 5.4735999999999674e-05, 5.4735999999999674e-05]</msg>
<status status="PASS" starttime="20201110 08:33:47.502" endtime="20201110 08:33:47.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.497" endtime="20201110 08:33:47.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.507" endtime="20201110 08:33:47.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.511" endtime="20201110 08:33:47.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.509" endtime="20201110 08:33:47.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.505" endtime="20201110 08:33:47.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.114" endtime="20201110 08:33:47.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.114" endtime="20201110 08:33:47.532"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.541" endtime="20201110 08:33:47.564"></status>
</kw>
<msg timestamp="20201110 08:33:47.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.539" endtime="20201110 08:33:47.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.565" endtime="20201110 08:33:47.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.568" endtime="20201110 08:33:47.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.536" endtime="20201110 08:33:47.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.534" endtime="20201110 08:33:47.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.578" endtime="20201110 08:33:47.864"></status>
</kw>
<msg timestamp="20201110 08:33:47.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024824931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.577" endtime="20201110 08:33:47.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024824931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.868" endtime="20201110 08:33:47.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.877" endtime="20201110 08:33:47.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.574" endtime="20201110 08:33:47.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.572" endtime="20201110 08:33:47.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.884" level="INFO">${RESULT} = [{'time': 0.024887319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.238800000000003e-05, 'source_diff': 6.238800000000003e-05}, {'time': 0.024947931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:47.880" endtime="20201110 08:33:47.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:47.898" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:47.885" endtime="20201110 08:33:47.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.902" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:33:47.901" endtime="20201110 08:33:47.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.905" level="INFO">VALUE: [6.238800000000003e-05, 5.376400000000128e-05, 5.088899999999841e-05, 5.101399999999853e-05, 5.663900000000069e-05, 5.565299999999926e-05, 5.5805999999998523e-05, 5.091600000000154e-05, 5.4708000000000534e-05, 5.184699999999723e-05, 5.5680000000002394e-05, 5.184800000000017e-05, 5.087499999999884e-05, 5.091700000000102e-05, 5.195900000000073e-05, 5.4722000000000104e-05, 5.4735999999999674e-05, 5.4722000000000104e-05, 5.090300000000145e-05, 5.4735999999999674e-05, 4.8973000000000766e-05, 5.295899999999826e-05, 5.183300000000113e-05, 5.087499999999884e-05, 5.659799999999798e-05, 5.470900000000001e-05, 5.5694000000001964e-05, 5.291699999999955e-05, 5.4722000000000104e-05, 5.281999999999856e-05, 5.4749999999999244e-05, 5.3749999999998244e-05, 5.088900000000188e-05, 5.5722000000001104e-05, 4.994499999999916e-05, 5.4735999999999674e-05, 4.994399999999968e-05, 5.472300000000305e-05, 5.187499999999984e-05, 5.104100000000167e-05, 5.373600000000214e-05, 5.379200000000042e-05, 5.198600000000039e-05, 5.4735999999999674e-05, 5.56809999999984e-05, 5.280600000000246e-05, 5.5680000000002394e-05, 5.093000000000111e-05, 4.994499999999916e-05, 5.472300000000305e-05]</msg>
<status status="PASS" starttime="20201110 08:33:47.904" endtime="20201110 08:33:47.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.899" endtime="20201110 08:33:47.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.909" endtime="20201110 08:33:47.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.912" endtime="20201110 08:33:47.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.911" endtime="20201110 08:33:47.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.907" endtime="20201110 08:33:47.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.533" endtime="20201110 08:33:47.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.532" endtime="20201110 08:33:47.933"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.942" endtime="20201110 08:33:47.967"></status>
</kw>
<msg timestamp="20201110 08:33:47.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.941" endtime="20201110 08:33:47.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.968" endtime="20201110 08:33:47.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.971" endtime="20201110 08:33:47.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.938" endtime="20201110 08:33:47.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.936" endtime="20201110 08:33:47.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.981" endtime="20201110 08:33:48.268"></status>
</kw>
<msg timestamp="20201110 08:33:48.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025128861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025166389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.980" endtime="20201110 08:33:48.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025128861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025166389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.272" endtime="20201110 08:33:48.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.281" endtime="20201110 08:33:48.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.977" endtime="20201110 08:33:48.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.975" endtime="20201110 08:33:48.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.288" level="INFO">${RESULT} = [{'time': 0.025166389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.752800000000195e-05, 'source_diff': 3.752800000000195e-05}, {'time': 0.025228222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:48.284" endtime="20201110 08:33:48.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:48.303" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:48.289" endtime="20201110 08:33:48.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.307" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:33:48.306" endtime="20201110 08:33:48.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.310" level="INFO">VALUE: [3.752800000000195e-05, 5.18470000000007e-05, 5.186100000000027e-05, 5.188899999999941e-05, 5.281999999999856e-05, 5.1929999999998644e-05, 5.280599999999899e-05, 5.180600000000146e-05, 5.375000000000171e-05, 5.5679999999998925e-05, 5.4679999999997925e-05, 5.4735999999999674e-05, 5.28470000000017e-05, 5.190299999999898e-05, 5.46670000000013e-05, 5.472299999999958e-05, 5.5694000000001964e-05, 5.4749999999999244e-05, 5.18340000000006e-05, 5.4749999999999244e-05, 5.091700000000102e-05, 5.284699999999823e-05, 5.088900000000188e-05, 5.186100000000027e-05, 5.281899999999909e-05, 5.658300000000241e-05, 5.470900000000001e-05, 5.187499999999984e-05, 5.281899999999909e-05, 5.5707999999998065e-05, 5.276400000000028e-05, 5.181900000000156e-05, 5.469500000000044e-05, 5.5722000000001104e-05, 4.995799999999925e-05, 5.3777999999997383e-05, 4.997199999999882e-05, 4.995899999999873e-05, 5.386100000000227e-05, 5.0901999999998504e-05, 5.384699999999923e-05, 4.9945000000002626e-05, 5.4749999999999244e-05, 5.276400000000028e-05, 5.573700000000015e-05, 5.3721999999999104e-05, 5.470900000000001e-05, 5.283300000000213e-05, 5.090300000000145e-05, 5.4722000000000104e-05]</msg>
<status status="PASS" starttime="20201110 08:33:48.309" endtime="20201110 08:33:48.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.304" endtime="20201110 08:33:48.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.314" endtime="20201110 08:33:48.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.317" endtime="20201110 08:33:48.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.316" endtime="20201110 08:33:48.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.312" endtime="20201110 08:33:48.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.934" endtime="20201110 08:33:48.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.934" endtime="20201110 08:33:48.338"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.347" endtime="20201110 08:33:48.367"></status>
</kw>
<msg timestamp="20201110 08:33:48.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.346" endtime="20201110 08:33:48.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.369" endtime="20201110 08:33:48.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.371" endtime="20201110 08:33:48.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.343" endtime="20201110 08:33:48.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.341" endtime="20201110 08:33:48.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.382" endtime="20201110 08:33:48.667"></status>
</kw>
<msg timestamp="20201110 08:33:48.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:48.380" endtime="20201110 08:33:48.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:48.671" endtime="20201110 08:33:48.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.680" endtime="20201110 08:33:48.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.377" endtime="20201110 08:33:48.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.376" endtime="20201110 08:33:48.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.687" level="INFO">${RESULT} = [{'time': 0.022119819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.281899999999909e-05, 'source_diff': 5.281899999999909e-05}, {'time': 0.022180417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:48.683" endtime="20201110 08:33:48.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:48.700" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:48.688" endtime="20201110 08:33:48.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.705" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:33:48.704" endtime="20201110 08:33:48.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.708" level="INFO">VALUE: [5.281899999999909e-05, 5.381999999999956e-05, 5.463899999999869e-05, 5.4735999999999674e-05, 5.286200000000074e-05, 4.990300000000045e-05, 5.379100000000095e-05, 5.280600000000246e-05, 5.091600000000154e-05, 5.276400000000028e-05, 5.569500000000144e-05, 5.093000000000111e-05, 5.284699999999823e-05, 5.3721999999999104e-05, 5.18470000000007e-05, 5.572299999999711e-05, 5.381999999999956e-05, 5.086099999999927e-05, 5.387500000000184e-05, 5.66809999999994e-05, 5.086100000000274e-05, 5.280499999999952e-05, 5.4694000000000964e-05, 5.6679999999999925e-05, 5.561100000000055e-05, 5.186100000000027e-05, 5.0943999999997214e-05, 5.187499999999984e-05, 5.377800000000085e-05, 5.176399999999928e-05, 5.281900000000256e-05, 5.283399999999813e-05, 5.570899999999754e-05, 5.376400000000128e-05, 5.4735999999999674e-05, 5.576300000000034e-05, 5.276400000000028e-05, 4.998600000000186e-05, 5.387499999999837e-05, 5.28340000000016e-05, 5.4749999999999244e-05, 4.987500000000131e-05, 5.091699999999755e-05, 5.5736000000000674e-05, 5.483299999999719e-05, 5.094400000000068e-05, 5.5721999999997635e-05, 5.4735999999999674e-05, 5.6679999999999925e-05, 5.268100000000234e-05]</msg>
<status status="PASS" starttime="20201110 08:33:48.706" endtime="20201110 08:33:48.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.701" endtime="20201110 08:33:48.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.711" endtime="20201110 08:33:48.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.715" endtime="20201110 08:33:48.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.713" endtime="20201110 08:33:48.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.710" endtime="20201110 08:33:48.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.339" endtime="20201110 08:33:48.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.339" endtime="20201110 08:33:48.736"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.745" endtime="20201110 08:33:48.764"></status>
</kw>
<msg timestamp="20201110 08:33:48.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.743" endtime="20201110 08:33:48.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.765" endtime="20201110 08:33:48.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.768" endtime="20201110 08:33:48.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.741" endtime="20201110 08:33:48.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.739" endtime="20201110 08:33:48.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.779" endtime="20201110 08:33:49.066"></status>
</kw>
<msg timestamp="20201110 08:33:49.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021358667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021423, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:48.777" endtime="20201110 08:33:49.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021358667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021423, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:49.070" endtime="20201110 08:33:49.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.079" endtime="20201110 08:33:49.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.775" endtime="20201110 08:33:49.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.773" endtime="20201110 08:33:49.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.086" level="INFO">${RESULT} = [{'time': 0.021423, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.433299999999975e-05, 'source_diff': 6.433299999999975e-05}, {'time': 0.021484014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:33:49.082" endtime="20201110 08:33:49.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:49.099" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:49.087" endtime="20201110 08:33:49.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.104" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:33:49.103" endtime="20201110 08:33:49.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.107" level="INFO">VALUE: [6.433299999999975e-05, 4.990300000000045e-05, 5.568100000000187e-05, 5.094500000000016e-05, 5.5721999999997635e-05, 5.5736000000000674e-05, 4.990200000000097e-05, 5.281999999999856e-05, 4.995899999999873e-05, 5.666699999999983e-05, 5.090299999999798e-05, 5.188899999999941e-05, 5.376400000000128e-05, 5.56809999999984e-05, 5.569500000000144e-05, 5.188899999999941e-05, 5.186100000000027e-05, 5.086099999999927e-05, 5.3749999999998244e-05, 5.5722000000001104e-05, 5.4722000000000104e-05, 5.090299999999798e-05, 5.566699999999883e-05, 5.087499999999884e-05, 5.381999999999956e-05, 5.283299999999866e-05, 5.561100000000055e-05, 5.5693999999998495e-05, 5.0887999999998934e-05, 5.286100000000127e-05, 5.562499999999665e-05, 5.279099999999995e-05, 5.3763999999997814e-05, 5.5750000000000244e-05, 5.562500000000012e-05, 5.4722000000000104e-05, 5.4680000000001394e-05, 5.279199999999942e-05, 5.4735999999999674e-05, 5.473699999999915e-05, 5.377800000000085e-05, 5.565299999999926e-05, 5.184699999999723e-05, 5.379100000000095e-05, 5.473699999999915e-05, 5.469499999999697e-05, 5.1943999999998214e-05, 5.281900000000256e-05, 5.4763999999998814e-05, 5.0901999999998504e-05]</msg>
<status status="PASS" starttime="20201110 08:33:49.105" endtime="20201110 08:33:49.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.100" endtime="20201110 08:33:49.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.111" endtime="20201110 08:33:49.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.114" endtime="20201110 08:33:49.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.112" endtime="20201110 08:33:49.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.109" endtime="20201110 08:33:49.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.737" endtime="20201110 08:33:49.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.736" endtime="20201110 08:33:49.135"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.144" endtime="20201110 08:33:49.167"></status>
</kw>
<msg timestamp="20201110 08:33:49.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.143" endtime="20201110 08:33:49.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.169" endtime="20201110 08:33:49.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.171" endtime="20201110 08:33:49.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.140" endtime="20201110 08:33:49.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.138" endtime="20201110 08:33:49.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.182" endtime="20201110 08:33:49.468"></status>
</kw>
<msg timestamp="20201110 08:33:49.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024198319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024235847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.180" endtime="20201110 08:33:49.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024198319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024235847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.473" endtime="20201110 08:33:49.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.481" endtime="20201110 08:33:49.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.178" endtime="20201110 08:33:49.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.176" endtime="20201110 08:33:49.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.488" level="INFO">${RESULT} = [{'time': 0.024235847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.752800000000195e-05, 'source_diff': 3.752800000000195e-05}, {'time': 0.024297014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:49.485" endtime="20201110 08:33:49.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:49.502" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:49.489" endtime="20201110 08:33:49.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.507" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:33:49.506" endtime="20201110 08:33:49.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.509" level="INFO">VALUE: [3.752800000000195e-05, 5.4722000000000104e-05, 5.283299999999866e-05, 5.473600000000314e-05, 5.380599999999999e-05, 5.572300000000058e-05, 5.090299999999798e-05, 5.569499999999797e-05, 5.084700000000317e-05, 5.279099999999995e-05, 5.379200000000042e-05, 5.186100000000027e-05, 5.5722000000001104e-05, 5.377700000000138e-05, 5.187499999999984e-05, 5.376400000000128e-05, 4.9945000000002626e-05, 5.368099999999987e-05, 5.273600000000114e-05, 5.379200000000042e-05, 4.990200000000097e-05, 5.5693999999998495e-05, 5.376400000000128e-05, 5.177799999999885e-05, 5.4693999999997495e-05, 5.479100000000195e-05, 5.4708000000000534e-05, 5.379099999999748e-05, 5.090299999999798e-05, 5.569499999999797e-05, 5.563899999999969e-05, 4.993000000000011e-05, 5.463900000000216e-05, 5.568100000000187e-05, 5.4735999999999674e-05, 5.666699999999983e-05, 5.379199999999695e-05, 5.273600000000114e-05, 5.663900000000069e-05, 5.4735999999999674e-05, 5.281899999999909e-05, 4.995799999999925e-05, 5.188899999999941e-05, 4.988900000000088e-05, 5.18470000000007e-05, 5.6652000000000785e-05, 4.994499999999916e-05, 5.377800000000085e-05, 5.180600000000146e-05, 4.994499999999916e-05]</msg>
<status status="PASS" starttime="20201110 08:33:49.508" endtime="20201110 08:33:49.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.503" endtime="20201110 08:33:49.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.513" endtime="20201110 08:33:49.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.517" endtime="20201110 08:33:49.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.515" endtime="20201110 08:33:49.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.511" endtime="20201110 08:33:49.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.136" endtime="20201110 08:33:49.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.135" endtime="20201110 08:33:49.538"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.547" endtime="20201110 08:33:49.568"></status>
</kw>
<msg timestamp="20201110 08:33:49.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.545" endtime="20201110 08:33:49.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.570" endtime="20201110 08:33:49.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.572" endtime="20201110 08:33:49.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.543" endtime="20201110 08:33:49.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.540" endtime="20201110 08:33:49.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.583" endtime="20201110 08:33:49.869"></status>
</kw>
<msg timestamp="20201110 08:33:49.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023447542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023508014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.581" endtime="20201110 08:33:49.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023447542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023508014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.874" endtime="20201110 08:33:49.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.882" endtime="20201110 08:33:49.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.579" endtime="20201110 08:33:49.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.577" endtime="20201110 08:33:49.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.889" level="INFO">${RESULT} = [{'time': 0.023508014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0472000000002385e-05, 'source_diff': 6.0472000000002385e-05}, {'time': 0.023569042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:49.886" endtime="20201110 08:33:49.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:49.904" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:49.890" endtime="20201110 08:33:49.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.909" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:33:49.908" endtime="20201110 08:33:49.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.911" level="INFO">VALUE: [6.0472000000002385e-05, 5.469499999999697e-05, 5.282000000000203e-05, 5.0915999999998074e-05, 4.993099999999959e-05, 5.372200000000257e-05, 5.5722000000001104e-05, 5.379100000000095e-05, 5.087500000000231e-05, 4.983299999999913e-05, 5.473600000000314e-05, 5.4735999999999674e-05, 5.281899999999909e-05, 5.377700000000138e-05, 5.187499999999984e-05, 5.3777999999997383e-05, 4.9959000000002196e-05, 5.658399999999841e-05, 5.187499999999984e-05, 5.379100000000095e-05, 5.5694000000001964e-05, 5.4749999999999244e-05, 5.183300000000113e-05, 4.988900000000088e-05, 5.186100000000027e-05, 5.0929999999997644e-05, 4.9959000000002196e-05, 5.1014000000002e-05, 5.0929999999997644e-05, 4.995799999999925e-05, 4.994499999999916e-05, 5.277700000000038e-05, 5.4694000000000964e-05, 5.5680000000002394e-05, 5.4763999999998814e-05, 5.275000000000071e-05, 5.091699999999755e-05, 5.5721999999997635e-05, 5.18340000000006e-05, 5.276400000000028e-05, 5.28470000000017e-05, 5.5680000000002394e-05, 5.283299999999866e-05, 4.995899999999873e-05, 5.282000000000203e-05, 5.4722000000000104e-05, 5.187499999999984e-05, 5.0887999999998934e-05, 4.994399999999968e-05, 5.376299999999834e-05]</msg>
<status status="PASS" starttime="20201110 08:33:49.910" endtime="20201110 08:33:49.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.905" endtime="20201110 08:33:49.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.915" endtime="20201110 08:33:49.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.919" endtime="20201110 08:33:49.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.917" endtime="20201110 08:33:49.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.913" endtime="20201110 08:33:49.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.539" endtime="20201110 08:33:49.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.538" endtime="20201110 08:33:49.940"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.949" endtime="20201110 08:33:49.970"></status>
</kw>
<msg timestamp="20201110 08:33:49.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.947" endtime="20201110 08:33:49.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.971" endtime="20201110 08:33:49.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.974" endtime="20201110 08:33:49.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.945" endtime="20201110 08:33:49.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.942" endtime="20201110 08:33:49.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.984" endtime="20201110 08:33:50.271"></status>
</kw>
<msg timestamp="20201110 08:33:50.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023387333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023451639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.983" endtime="20201110 08:33:50.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023387333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023451639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.275" endtime="20201110 08:33:50.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.284" endtime="20201110 08:33:50.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.980" endtime="20201110 08:33:50.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.978" endtime="20201110 08:33:50.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.291" level="INFO">${RESULT} = [{'time': 0.023451639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.430600000000009e-05, 'source_diff': 6.430600000000009e-05}, {'time': 0.023513208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:50.287" endtime="20201110 08:33:50.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:50.305" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:50.292" endtime="20201110 08:33:50.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.310" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:33:50.308" endtime="20201110 08:33:50.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.312" level="INFO">VALUE: [6.430600000000009e-05, 5.375000000000171e-05, 5.463899999999869e-05, 5.476400000000228e-05, 5.476400000000228e-05, 5.190299999999898e-05, 5.18470000000007e-05, 5.183299999999766e-05, 5.090300000000145e-05, 4.993099999999959e-05, 5.087500000000231e-05, 5.282000000000203e-05, 5.095800000000025e-05, 5.377700000000138e-05, 4.997199999999882e-05, 5.380500000000052e-05, 5.56670000000023e-05, 5.275000000000071e-05, 5.5722000000001104e-05, 5.4763999999998814e-05, 5.000000000000143e-05, 5.658400000000188e-05, 5.188900000000288e-05, 5.4735999999999674e-05, 5.188899999999941e-05, 5.659699999999851e-05, 5.090299999999798e-05, 5.091700000000102e-05, 5.5693999999998495e-05, 5.666699999999983e-05, 4.993099999999959e-05, 5.286100000000127e-05, 5.184800000000017e-05, 5.184800000000017e-05, 5.5721999999997635e-05, 5.375000000000171e-05, 5.570900000000101e-05, 5.277799999999985e-05, 5.563899999999969e-05, 5.277799999999985e-05, 5.091700000000102e-05, 5.4735999999999674e-05, 5.468100000000087e-05, 5.563899999999969e-05, 5.187499999999984e-05, 5.3763999999997814e-05, 5.18470000000007e-05, 5.188899999999941e-05, 5.470900000000001e-05, 5.3735999999998674e-05]</msg>
<status status="PASS" starttime="20201110 08:33:50.311" endtime="20201110 08:33:50.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.306" endtime="20201110 08:33:50.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.316" endtime="20201110 08:33:50.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.320" endtime="20201110 08:33:50.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.318" endtime="20201110 08:33:50.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.314" endtime="20201110 08:33:50.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.941" endtime="20201110 08:33:50.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.940" endtime="20201110 08:33:50.341"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.350" endtime="20201110 08:33:50.371"></status>
</kw>
<msg timestamp="20201110 08:33:50.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.348" endtime="20201110 08:33:50.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.373" endtime="20201110 08:33:50.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.376" endtime="20201110 08:33:50.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.345" endtime="20201110 08:33:50.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.343" endtime="20201110 08:33:50.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.386" endtime="20201110 08:33:50.671"></status>
</kw>
<msg timestamp="20201110 08:33:50.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024519833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024585986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.384" endtime="20201110 08:33:50.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024519833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024585986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.675" endtime="20201110 08:33:50.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.684" endtime="20201110 08:33:50.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.382" endtime="20201110 08:33:50.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.380" endtime="20201110 08:33:50.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.691" level="INFO">${RESULT} = [{'time': 0.024585986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.615299999999935e-05, 'source_diff': 6.615299999999935e-05}, {'time': 0.024646903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:50.687" endtime="20201110 08:33:50.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:50.705" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:50.692" endtime="20201110 08:33:50.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.710" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:33:50.708" endtime="20201110 08:33:50.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.712" level="INFO">VALUE: [6.615299999999935e-05, 5.187499999999984e-05, 5.476400000000228e-05, 5.093000000000111e-05, 5.275000000000071e-05, 5.091700000000102e-05, 5.0943999999997214e-05, 4.993000000000011e-05, 5.187499999999984e-05, 5.18340000000006e-05, 5.187499999999984e-05, 5.087500000000231e-05, 5.270899999999801e-05, 5.280499999999952e-05, 5.281899999999909e-05, 5.656900000000284e-05, 4.994399999999968e-05, 5.4735999999999674e-05, 5.28340000000016e-05, 4.995899999999873e-05, 5.5707999999998065e-05, 5.187499999999984e-05, 5.280599999999899e-05, 5.5679999999998925e-05, 5.281899999999909e-05, 4.994399999999968e-05, 5.365300000000073e-05, 5.287499999999737e-05, 4.990300000000045e-05, 5.6637999999997746e-05, 4.993099999999959e-05, 5.086099999999927e-05, 5.093000000000111e-05, 5.1901999999999504e-05, 5.081900000000056e-05, 5.4722000000000104e-05, 5.376400000000128e-05, 5.190299999999898e-05, 5.186100000000027e-05, 4.994499999999916e-05, 5.568100000000187e-05, 5.268099999999887e-05, 4.995799999999925e-05, 5.28470000000017e-05, 5.088899999999841e-05, 5.6652000000000785e-05, 5.0915999999998074e-05, 5.288900000000041e-05, 4.997199999999882e-05, 5.569499999999797e-05]</msg>
<status status="PASS" starttime="20201110 08:33:50.711" endtime="20201110 08:33:50.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.706" endtime="20201110 08:33:50.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.716" endtime="20201110 08:33:50.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.720" endtime="20201110 08:33:50.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.718" endtime="20201110 08:33:50.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.714" endtime="20201110 08:33:50.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.342" endtime="20201110 08:33:50.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.341" endtime="20201110 08:33:50.741"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.750" endtime="20201110 08:33:50.769"></status>
</kw>
<msg timestamp="20201110 08:33:50.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.748" endtime="20201110 08:33:50.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.771" endtime="20201110 08:33:50.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.773" endtime="20201110 08:33:50.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.745" endtime="20201110 08:33:50.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.743" endtime="20201110 08:33:50.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.784" endtime="20201110 08:33:51.071"></status>
</kw>
<msg timestamp="20201110 08:33:51.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021392028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021447625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.782" endtime="20201110 08:33:51.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021392028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021447625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.075" endtime="20201110 08:33:51.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.084" endtime="20201110 08:33:51.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.780" endtime="20201110 08:33:51.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.778" endtime="20201110 08:33:51.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.091" level="INFO">${RESULT} = [{'time': 0.021447625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.559700000000098e-05, 'source_diff': 5.559700000000098e-05}, {'time': 0.021508958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:51.087" endtime="20201110 08:33:51.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:51.105" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:51.092" endtime="20201110 08:33:51.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.110" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:33:51.108" endtime="20201110 08:33:51.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.112" level="INFO">VALUE: [5.559700000000098e-05, 5.479100000000195e-05, 5.377700000000138e-05, 5.273600000000114e-05, 4.991700000000002e-05, 5.5694000000001964e-05, 5.5680000000002394e-05, 5.3693999999999964e-05, 5.186100000000027e-05, 5.569499999999797e-05, 5.280600000000246e-05, 5.4735999999999674e-05, 5.463900000000216e-05, 5.4749999999999244e-05, 5.477800000000185e-05, 5.28340000000016e-05, 4.997200000000229e-05, 5.281899999999909e-05, 5.5693999999998495e-05, 5.477700000000238e-05, 5.186100000000027e-05, 5.3763999999997814e-05, 5.280499999999952e-05, 5.5680000000002394e-05, 5.476400000000228e-05, 5.3693999999999964e-05, 5.4680000000001394e-05, 5.083300000000013e-05, 5.663900000000069e-05, 5.279200000000289e-05, 5.281899999999909e-05, 5.475000000000271e-05, 5.5693999999998495e-05, 5.3763999999997814e-05, 5.569500000000144e-05, 5.379200000000042e-05, 5.5680000000002394e-05, 5.3777999999997383e-05, 5.187499999999984e-05, 4.995799999999925e-05, 5.568100000000187e-05, 5.088900000000188e-05, 5.088900000000188e-05, 5.0887999999998934e-05, 5.379200000000042e-05, 5.283300000000213e-05, 5.5707999999998065e-05, 5.184800000000017e-05, 5.4735999999999674e-05, 5.5693999999998495e-05]</msg>
<status status="PASS" starttime="20201110 08:33:51.111" endtime="20201110 08:33:51.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.106" endtime="20201110 08:33:51.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.116" endtime="20201110 08:33:51.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.119" endtime="20201110 08:33:51.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.118" endtime="20201110 08:33:51.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.114" endtime="20201110 08:33:51.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.741" endtime="20201110 08:33:51.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.741" endtime="20201110 08:33:51.141"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.150" endtime="20201110 08:33:51.176"></status>
</kw>
<msg timestamp="20201110 08:33:51.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.148" endtime="20201110 08:33:51.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.177" endtime="20201110 08:33:51.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.180" endtime="20201110 08:33:51.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.145" endtime="20201110 08:33:51.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.143" endtime="20201110 08:33:51.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.190" endtime="20201110 08:33:51.477"></status>
</kw>
<msg timestamp="20201110 08:33:51.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023351736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.189" endtime="20201110 08:33:51.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023351736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.482" endtime="20201110 08:33:51.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.491" endtime="20201110 08:33:51.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.186" endtime="20201110 08:33:51.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.184" endtime="20201110 08:33:51.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.505" level="INFO">${RESULT} = [{'time': 0.023406444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4707999999997065e-05, 'source_diff': 5.4707999999997065e-05}, {'time': 0.023466639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:51.499" endtime="20201110 08:33:51.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:51.524" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:51.507" endtime="20201110 08:33:51.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.529" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:33:51.528" endtime="20201110 08:33:51.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.531" level="INFO">VALUE: [5.4707999999997065e-05, 5.094500000000016e-05, 5.569500000000144e-05, 5.4735999999999674e-05, 5.5694000000001964e-05, 5.091700000000102e-05, 5.4735999999999674e-05, 5.283399999999813e-05, 5.568100000000187e-05, 5.4708000000000534e-05, 5.3735999999998674e-05, 5.4665999999998355e-05, 5.187500000000331e-05, 5.188899999999941e-05, 5.183300000000113e-05, 5.376300000000181e-05, 5.187499999999984e-05, 5.561099999999708e-05, 5.3707999999999534e-05, 5.090300000000145e-05, 5.5694000000001964e-05, 5.3763999999997814e-05, 5.090299999999798e-05, 5.1887999999999934e-05, 5.281900000000256e-05, 5.181899999999809e-05, 5.5679999999998925e-05, 5.56809999999984e-05, 5.4680000000001394e-05, 5.276400000000028e-05, 5.5693999999998495e-05, 5.5707999999998065e-05, 5.379100000000095e-05, 5.187499999999984e-05, 5.5708000000001534e-05, 5.093100000000059e-05, 5.3763999999997814e-05, 5.090299999999798e-05, 4.994399999999968e-05, 5.3708000000003e-05, 5.280499999999952e-05, 4.994499999999916e-05, 5.377700000000138e-05, 5.188900000000288e-05, 5.373700000000162e-05, 5.279099999999995e-05, 5.184800000000017e-05, 5.087500000000231e-05, 5.08469999999997e-05, 5.283299999999866e-05]</msg>
<status status="PASS" starttime="20201110 08:33:51.530" endtime="20201110 08:33:51.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.525" endtime="20201110 08:33:51.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.535" endtime="20201110 08:33:51.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.540" endtime="20201110 08:33:51.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.537" endtime="20201110 08:33:51.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.533" endtime="20201110 08:33:51.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.141" endtime="20201110 08:33:51.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.141" endtime="20201110 08:33:51.561"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.569" endtime="20201110 08:33:51.588"></status>
</kw>
<msg timestamp="20201110 08:33:51.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.568" endtime="20201110 08:33:51.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.589" endtime="20201110 08:33:51.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.592" endtime="20201110 08:33:51.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.565" endtime="20201110 08:33:51.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.563" endtime="20201110 08:33:51.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.602" endtime="20201110 08:33:51.899"></status>
</kw>
<msg timestamp="20201110 08:33:51.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020275167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.600" endtime="20201110 08:33:51.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020275167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.903" endtime="20201110 08:33:51.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.912" endtime="20201110 08:33:51.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.598" endtime="20201110 08:33:51.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.596" endtime="20201110 08:33:51.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.918" level="INFO">${RESULT} = [{'time': 0.020326111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.094400000000068e-05, 'source_diff': 5.094400000000068e-05}, {'time': 0.020387667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:51.915" endtime="20201110 08:33:51.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:51.932" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:51.919" endtime="20201110 08:33:51.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.936" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:33:51.935" endtime="20201110 08:33:51.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.939" level="INFO">VALUE: [5.094400000000068e-05, 5.379200000000042e-05, 5.473600000000314e-05, 5.181999999999756e-05, 5.658299999999894e-05, 5.4749999999999244e-05, 5.476300000000281e-05, 5.087499999999884e-05, 5.186100000000027e-05, 5.383299999999966e-05, 5.091700000000102e-05, 5.38609999999988e-05, 5.480600000000099e-05, 4.9959000000002196e-05, 5.0929999999997644e-05, 5.4735999999999674e-05, 4.9959000000002196e-05, 4.993000000000011e-05, 5.280500000000299e-05, 5.273600000000114e-05, 5.087499999999884e-05, 5.186100000000027e-05, 5.377800000000085e-05, 5.087499999999884e-05, 5.665300000000026e-05, 5.288900000000041e-05, 5.093100000000059e-05, 4.994399999999968e-05, 5.0888000000002404e-05, 5.088900000000188e-05, 5.3763999999997814e-05, 5.5707999999998065e-05, 5.275000000000071e-05, 5.4708000000000534e-05, 5.281900000000256e-05, 5.186100000000027e-05, 5.5693999999998495e-05, 5.4694000000000964e-05, 5.179199999999842e-05, 5.283299999999866e-05, 4.994399999999968e-05, 5.186100000000027e-05, 5.4735999999999674e-05, 5.5680000000002394e-05, 4.994400000000315e-05, 5.081900000000056e-05, 5.463899999999869e-05, 5.56809999999984e-05, 5.470900000000001e-05, 5.097199999999982e-05]</msg>
<status status="PASS" starttime="20201110 08:33:51.937" endtime="20201110 08:33:51.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.932" endtime="20201110 08:33:51.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.942" endtime="20201110 08:33:51.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.946" endtime="20201110 08:33:51.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.944" endtime="20201110 08:33:51.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.941" endtime="20201110 08:33:51.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.561" endtime="20201110 08:33:51.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.561" endtime="20201110 08:33:51.966"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.975" endtime="20201110 08:33:51.994"></status>
</kw>
<msg timestamp="20201110 08:33:51.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.973" endtime="20201110 08:33:51.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.996" endtime="20201110 08:33:51.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.998" endtime="20201110 08:33:52.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.971" endtime="20201110 08:33:52.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.969" endtime="20201110 08:33:52.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.008" endtime="20201110 08:33:52.294"></status>
</kw>
<msg timestamp="20201110 08:33:52.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021272153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021337486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.007" endtime="20201110 08:33:52.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021272153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021337486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.298" endtime="20201110 08:33:52.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.307" endtime="20201110 08:33:52.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.004" endtime="20201110 08:33:52.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.003" endtime="20201110 08:33:52.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.313" level="INFO">${RESULT} = [{'time': 0.021337486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.533300000000075e-05, 'source_diff': 6.533300000000075e-05}, {'time': 0.021398056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:52.310" endtime="20201110 08:33:52.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:52.326" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:52.314" endtime="20201110 08:33:52.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.331" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:33:52.330" endtime="20201110 08:33:52.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.333" level="INFO">VALUE: [6.533300000000075e-05, 5.091699999999755e-05, 5.380500000000052e-05, 5.570900000000101e-05, 5.4735999999999674e-05, 5.4749999999999244e-05, 5.186199999999974e-05, 4.993099999999959e-05, 5.187499999999984e-05, 5.281999999999856e-05, 5.290299999999998e-05, 5.187499999999984e-05, 5.091700000000102e-05, 5.00270000000011e-05, 5.5708000000001534e-05, 5.56809999999984e-05, 5.380500000000052e-05, 5.290299999999998e-05, 5.5777999999999384e-05, 5.5693999999998495e-05, 5.376400000000128e-05, 5.576300000000034e-05, 5.190299999999898e-05, 5.376400000000128e-05, 5.281899999999909e-05, 5.08469999999997e-05, 5.38609999999988e-05, 5.28340000000016e-05, 4.995899999999873e-05, 4.994499999999916e-05, 5.280600000000246e-05, 5.572299999999711e-05, 5.09729999999993e-05, 4.905599999999871e-05, 5.283299999999866e-05, 5.280499999999952e-05, 5.2888000000000934e-05, 5.000000000000143e-05, 4.993099999999959e-05, 5.186100000000027e-05, 5.0901999999998504e-05, 5.18609999999968e-05, 5.283299999999866e-05, 5.097199999999982e-05, 4.9959000000002196e-05, 5.5679999999998925e-05, 5.56809999999984e-05, 5.383399999999913e-05, 5.098600000000286e-05, 5.28609999999978e-05]</msg>
<status status="PASS" starttime="20201110 08:33:52.332" endtime="20201110 08:33:52.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.327" endtime="20201110 08:33:52.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.337" endtime="20201110 08:33:52.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.341" endtime="20201110 08:33:52.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.339" endtime="20201110 08:33:52.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.335" endtime="20201110 08:33:52.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.967" endtime="20201110 08:33:52.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.967" endtime="20201110 08:33:52.361"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.370" endtime="20201110 08:33:52.391"></status>
</kw>
<msg timestamp="20201110 08:33:52.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.368" endtime="20201110 08:33:52.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.393" endtime="20201110 08:33:52.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.395" endtime="20201110 08:33:52.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.366" endtime="20201110 08:33:52.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.364" endtime="20201110 08:33:52.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.405" endtime="20201110 08:33:52.692"></status>
</kw>
<msg timestamp="20201110 08:33:52.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023183528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023235347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.404" endtime="20201110 08:33:52.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023183528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023235347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.696" endtime="20201110 08:33:52.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.704" endtime="20201110 08:33:52.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.401" endtime="20201110 08:33:52.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.400" endtime="20201110 08:33:52.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.711" level="INFO">${RESULT} = [{'time': 0.023235347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.181900000000156e-05, 'source_diff': 5.181900000000156e-05}, {'time': 0.023296347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:52.707" endtime="20201110 08:33:52.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:52.724" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:52.712" endtime="20201110 08:33:52.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.728" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:33:52.727" endtime="20201110 08:33:52.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.731" level="INFO">VALUE: [5.181900000000156e-05, 5.280499999999952e-05, 5.380500000000052e-05, 5.281899999999909e-05, 4.995799999999925e-05, 4.988900000000088e-05, 5.091700000000102e-05, 5.373600000000214e-05, 5.663900000000069e-05, 5.4722000000000104e-05, 5.4722000000000104e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.565300000000273e-05, 5.187499999999984e-05, 5.281899999999909e-05, 5.565299999999926e-05, 5.5722000000001104e-05, 5.376400000000128e-05, 5.0014000000001e-05, 5.561100000000055e-05, 5.276400000000028e-05, 5.477699999999891e-05, 4.990200000000097e-05, 5.377700000000138e-05, 5.186100000000027e-05, 5.5694000000001964e-05, 5.283300000000213e-05, 5.563899999999969e-05, 5.281900000000256e-05, 5.0929999999997644e-05, 5.4679999999997925e-05, 5.18470000000007e-05, 5.569500000000144e-05, 5.093000000000111e-05, 4.993099999999959e-05, 5.183299999999766e-05, 5.46670000000013e-05, 5.5722000000001104e-05, 5.3721999999999104e-05, 5.5707999999998065e-05, 5.380599999999999e-05, 5.180499999999852e-05, 5.088900000000188e-05, 4.995799999999925e-05, 5.1915999999999074e-05, 5.381900000000009e-05, 5.276400000000028e-05, 5.000000000000143e-05, 5.4735999999999674e-05]</msg>
<status status="PASS" starttime="20201110 08:33:52.730" endtime="20201110 08:33:52.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.725" endtime="20201110 08:33:52.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.734" endtime="20201110 08:33:52.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.738" endtime="20201110 08:33:52.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.736" endtime="20201110 08:33:52.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.733" endtime="20201110 08:33:52.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.362" endtime="20201110 08:33:52.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.362" endtime="20201110 08:33:52.759"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.767" endtime="20201110 08:33:52.789"></status>
</kw>
<msg timestamp="20201110 08:33:52.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.766" endtime="20201110 08:33:52.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.790" endtime="20201110 08:33:52.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.793" endtime="20201110 08:33:52.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.763" endtime="20201110 08:33:52.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.761" endtime="20201110 08:33:52.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.803" endtime="20201110 08:33:53.089"></status>
</kw>
<msg timestamp="20201110 08:33:53.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:52.801" endtime="20201110 08:33:53.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:53.093" endtime="20201110 08:33:53.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.101" endtime="20201110 08:33:53.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.799" endtime="20201110 08:33:53.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.797" endtime="20201110 08:33:53.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.108" level="INFO">${RESULT} = [{'time': 0.022722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0431000000000494e-05, 'source_diff': 4.0431000000000494e-05}, {'time': 0.022783528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:53.104" endtime="20201110 08:33:53.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:53.167" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:53.109" endtime="20201110 08:33:53.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.172" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:33:53.171" endtime="20201110 08:33:53.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.174" level="INFO">VALUE: [4.0431000000000494e-05, 5.091700000000102e-05, 4.995799999999925e-05, 5.281899999999909e-05, 5.279099999999995e-05, 5.093000000000111e-05, 5.4763999999998814e-05, 4.997199999999882e-05, 5.570900000000101e-05, 5.0901999999998504e-05, 5.46809999999974e-05, 5.087499999999884e-05, 5.380599999999999e-05, 5.281899999999909e-05, 5.188899999999941e-05, 5.5707999999998065e-05, 5.381900000000009e-05, 5.181900000000156e-05, 5.561100000000055e-05, 5.187499999999984e-05, 4.993099999999959e-05, 5.566699999999883e-05, 5.5679999999998925e-05, 5.465299999999826e-05, 5.093000000000111e-05, 5.281899999999909e-05, 4.986099999999827e-05, 5.5680000000002394e-05, 5.281900000000256e-05, 5.5693999999998495e-05, 5.186100000000027e-05, 5.4735999999999674e-05, 5.3707999999999534e-05, 4.995799999999925e-05, 5.279099999999995e-05, 5.379200000000042e-05, 5.569500000000144e-05, 5.477700000000238e-05, 5.565300000000273e-05, 5.380500000000052e-05, 5.663900000000069e-05, 5.4749999999999244e-05, 5.086099999999927e-05, 5.280500000000299e-05, 5.5763999999999814e-05, 4.995899999999873e-05, 5.572300000000058e-05, 4.9959000000002196e-05, 5.659699999999851e-05, 5.179199999999842e-05]</msg>
<status status="PASS" starttime="20201110 08:33:53.173" endtime="20201110 08:33:53.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.168" endtime="20201110 08:33:53.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.178" endtime="20201110 08:33:53.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.182" endtime="20201110 08:33:53.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.180" endtime="20201110 08:33:53.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.176" endtime="20201110 08:33:53.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.760" endtime="20201110 08:33:53.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.759" endtime="20201110 08:33:53.203"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.211" endtime="20201110 08:33:53.230"></status>
</kw>
<msg timestamp="20201110 08:33:53.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.209" endtime="20201110 08:33:53.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.232" endtime="20201110 08:33:53.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.234" endtime="20201110 08:33:53.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.207" endtime="20201110 08:33:53.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.205" endtime="20201110 08:33:53.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.243" endtime="20201110 08:33:53.530"></status>
</kw>
<msg timestamp="20201110 08:33:53.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021100639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021164861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.242" endtime="20201110 08:33:53.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021100639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021164861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.534" endtime="20201110 08:33:53.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.542" endtime="20201110 08:33:53.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.239" endtime="20201110 08:33:53.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.237" endtime="20201110 08:33:53.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.549" level="INFO">${RESULT} = [{'time': 0.021164861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.42219999999992e-05, 'source_diff': 6.42219999999992e-05}, {'time': 0.021226028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:53.545" endtime="20201110 08:33:53.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:53.562" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:53.550" endtime="20201110 08:33:53.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.567" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:33:53.566" endtime="20201110 08:33:53.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.569" level="INFO">VALUE: [6.42219999999992e-05, 5.090300000000145e-05, 5.188900000000288e-05, 5.4722000000000104e-05, 5.379200000000042e-05, 5.280599999999899e-05, 5.276400000000028e-05, 5.187499999999984e-05, 4.986100000000174e-05, 5.194499999999769e-05, 5.569500000000144e-05, 5.281999999999856e-05, 5.281999999999856e-05, 5.091700000000102e-05, 5.188899999999941e-05, 4.990300000000045e-05, 5.4708000000000534e-05, 5.280599999999899e-05, 5.5651999999999785e-05, 5.084700000000317e-05, 5.176399999999928e-05, 5.4749999999999244e-05, 5.572299999999711e-05, 5.186100000000027e-05, 5.180600000000146e-05, 5.0929999999997644e-05, 5.284800000000117e-05, 4.993099999999959e-05, 5.568100000000187e-05, 5.5694000000001964e-05, 4.997199999999882e-05, 4.994399999999968e-05, 5.384699999999923e-05, 5.663900000000069e-05, 5.558300000000141e-05, 4.994499999999916e-05, 5.566699999999883e-05, 5.565299999999926e-05, 5.186100000000027e-05, 5.281899999999909e-05, 5.5679999999998925e-05, 5.556999999999784e-05, 5.088899999999841e-05, 5.4749999999999244e-05, 5.475000000000271e-05, 5.0901999999998504e-05, 5.281900000000256e-05, 5.561100000000055e-05, 5.188900000000288e-05, 5.663900000000069e-05]</msg>
<status status="PASS" starttime="20201110 08:33:53.568" endtime="20201110 08:33:53.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.563" endtime="20201110 08:33:53.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.573" endtime="20201110 08:33:53.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.576" endtime="20201110 08:33:53.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.575" endtime="20201110 08:33:53.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.571" endtime="20201110 08:33:53.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.203" endtime="20201110 08:33:53.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.203" endtime="20201110 08:33:53.597"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.605" endtime="20201110 08:33:53.628"></status>
</kw>
<msg timestamp="20201110 08:33:53.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.604" endtime="20201110 08:33:53.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.630" endtime="20201110 08:33:53.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.632" endtime="20201110 08:33:53.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.601" endtime="20201110 08:33:53.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.599" endtime="20201110 08:33:53.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.641" endtime="20201110 08:33:53.930"></status>
</kw>
<msg timestamp="20201110 08:33:53.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023568542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023611736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.640" endtime="20201110 08:33:53.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023568542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023611736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.939" endtime="20201110 08:33:53.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.957" endtime="20201110 08:33:53.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.637" endtime="20201110 08:33:53.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.635" endtime="20201110 08:33:53.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.973" level="INFO">${RESULT} = [{'time': 0.023611736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.319399999999987e-05, 'source_diff': 4.319399999999987e-05}, {'time': 0.023673139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:53.966" endtime="20201110 08:33:53.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:54.003" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:53.975" endtime="20201110 08:33:54.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.012" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:33:54.010" endtime="20201110 08:33:54.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.017" level="INFO">VALUE: [4.319399999999987e-05, 5.279199999999942e-05, 5.376400000000128e-05, 5.56809999999984e-05, 5.187499999999984e-05, 5.5694000000001964e-05, 5.3721999999999104e-05, 5.466699999999783e-05, 5.5721999999997635e-05, 5.094400000000068e-05, 5.0929999999997644e-05, 5.087499999999884e-05, 5.183299999999766e-05, 5.090299999999798e-05, 5.5651999999999785e-05, 5.280499999999952e-05, 5.088899999999841e-05, 5.090300000000145e-05, 5.283299999999866e-05, 5.373600000000214e-05, 5.4749999999999244e-05, 5.28340000000016e-05, 5.5722000000001104e-05, 5.08469999999997e-05, 5.56670000000023e-05, 5.4722000000000104e-05, 5.5721999999997635e-05, 5.277799999999985e-05, 5.565299999999926e-05, 5.4680000000001394e-05, 5.4749999999999244e-05, 5.4680000000001394e-05, 5.277799999999985e-05, 5.5707999999998065e-05, 5.5750000000000244e-05, 5.188899999999941e-05, 5.1915999999999074e-05, 4.990300000000045e-05, 5.18470000000007e-05, 5.186100000000027e-05, 5.179199999999842e-05, 5.368099999999987e-05, 5.094400000000068e-05, 5.3693999999999964e-05, 5.081899999999709e-05, 5.661100000000155e-05, 5.0902000000001973e-05, 5.283399999999813e-05, 5.5763999999999814e-05, 5.5721999999997635e-05]</msg>
<status status="PASS" starttime="20201110 08:33:54.014" endtime="20201110 08:33:54.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.004" endtime="20201110 08:33:54.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.022" endtime="20201110 08:33:54.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.025" endtime="20201110 08:33:54.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.024" endtime="20201110 08:33:54.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.020" endtime="20201110 08:33:54.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.598" endtime="20201110 08:33:54.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.597" endtime="20201110 08:33:54.046"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.055" endtime="20201110 08:33:54.075"></status>
</kw>
<msg timestamp="20201110 08:33:54.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.053" endtime="20201110 08:33:54.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.076" endtime="20201110 08:33:54.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.079" endtime="20201110 08:33:54.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.051" endtime="20201110 08:33:54.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.049" endtime="20201110 08:33:54.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.088" endtime="20201110 08:33:54.374"></status>
</kw>
<msg timestamp="20201110 08:33:54.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02142075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021473583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:54.086" endtime="20201110 08:33:54.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02142075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021473583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:54.378" endtime="20201110 08:33:54.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.387" endtime="20201110 08:33:54.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.084" endtime="20201110 08:33:54.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.082" endtime="20201110 08:33:54.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.393" level="INFO">${RESULT} = [{'time': 0.021473583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.283300000000213e-05, 'source_diff': 5.283300000000213e-05}, {'time': 0.021535431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:54.390" endtime="20201110 08:33:54.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:54.406" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:54.394" endtime="20201110 08:33:54.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.411" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:33:54.410" endtime="20201110 08:33:54.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.413" level="INFO">VALUE: [5.283300000000213e-05, 5.572300000000058e-05, 5.379100000000095e-05, 5.187500000000331e-05, 4.994499999999916e-05, 4.993000000000011e-05, 5.379200000000042e-05, 5.379200000000042e-05, 5.286100000000127e-05, 5.472299999999958e-05, 5.1943999999998214e-05, 5.283299999999866e-05, 5.284699999999823e-05, 5.570900000000101e-05, 5.5721999999997635e-05, 5.376400000000128e-05, 5.282000000000203e-05, 5.46670000000013e-05, 5.4763999999998814e-05, 4.995799999999925e-05, 5.376400000000128e-05, 5.666699999999983e-05, 5.56809999999984e-05, 5.276300000000081e-05, 5.0929999999997644e-05, 5.093000000000111e-05, 5.372200000000257e-05, 5.473600000000314e-05, 5.4763999999998814e-05, 5.186100000000027e-05, 5.088900000000188e-05, 5.097199999999982e-05, 5.5708000000001534e-05, 4.995799999999925e-05, 5.183299999999766e-05, 5.569499999999797e-05, 5.2735999999997674e-05, 5.283299999999866e-05, 5.56670000000023e-05, 5.568100000000187e-05, 5.284699999999823e-05, 5.284699999999823e-05, 5.284699999999823e-05, 5.280599999999899e-05, 5.179199999999842e-05, 5.5763999999999814e-05, 5.283399999999813e-05, 4.9959000000002196e-05, 5.191699999999855e-05, 5.091700000000102e-05]</msg>
<status status="PASS" starttime="20201110 08:33:54.412" endtime="20201110 08:33:54.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.407" endtime="20201110 08:33:54.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.417" endtime="20201110 08:33:54.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.420" endtime="20201110 08:33:54.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.419" endtime="20201110 08:33:54.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.415" endtime="20201110 08:33:54.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.047" endtime="20201110 08:33:54.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.047" endtime="20201110 08:33:54.441"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.450" endtime="20201110 08:33:54.472"></status>
</kw>
<msg timestamp="20201110 08:33:54.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.448" endtime="20201110 08:33:54.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.473" endtime="20201110 08:33:54.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.475" endtime="20201110 08:33:54.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.445" endtime="20201110 08:33:54.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.443" endtime="20201110 08:33:54.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.484" endtime="20201110 08:33:54.771"></status>
</kw>
<msg timestamp="20201110 08:33:54.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023461292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023524681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.483" endtime="20201110 08:33:54.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023461292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023524681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.776" endtime="20201110 08:33:54.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.784" endtime="20201110 08:33:54.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.480" endtime="20201110 08:33:54.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.479" endtime="20201110 08:33:54.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.790" level="INFO">${RESULT} = [{'time': 0.023524681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.338899999999703e-05, 'source_diff': 6.338899999999703e-05}, {'time': 0.023585556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:54.787" endtime="20201110 08:33:54.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:54.805" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:54.791" endtime="20201110 08:33:54.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.809" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:33:54.808" endtime="20201110 08:33:54.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.812" level="INFO">VALUE: [6.338899999999703e-05, 5.569500000000144e-05, 5.376400000000128e-05, 5.379200000000042e-05, 5.090299999999798e-05, 5.186100000000027e-05, 5.284699999999823e-05, 4.998600000000186e-05, 5.665300000000026e-05, 5.559700000000098e-05, 5.5680000000002394e-05, 4.9945000000002626e-05, 5.180500000000199e-05, 5.093100000000059e-05, 5.569499999999797e-05, 5.5708000000001534e-05, 5.188899999999941e-05, 5.090300000000145e-05, 5.473699999999915e-05, 5.090300000000145e-05, 5.372300000000205e-05, 5.4722000000000104e-05, 5.1916000000002543e-05, 5.379100000000095e-05, 5.556900000000184e-05, 5.093000000000111e-05, 5.376400000000128e-05, 5.093099999999712e-05, 5.377700000000138e-05, 5.088900000000188e-05, 5.276400000000028e-05, 5.6679999999999925e-05, 5.569499999999797e-05, 5.279199999999942e-05, 5.187499999999984e-05, 5.469499999999697e-05, 5.276400000000028e-05, 5.001399999999753e-05, 5.0929999999997644e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.087499999999884e-05, 5.659699999999851e-05, 5.090300000000145e-05, 5.191700000000202e-05, 5.381999999999956e-05, 5.3735999999998674e-05, 5.093000000000111e-05, 5.666699999999983e-05, 5.093000000000111e-05]</msg>
<status status="PASS" starttime="20201110 08:33:54.810" endtime="20201110 08:33:54.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.806" endtime="20201110 08:33:54.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.815" endtime="20201110 08:33:54.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.819" endtime="20201110 08:33:54.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.817" endtime="20201110 08:33:54.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.814" endtime="20201110 08:33:54.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.442" endtime="20201110 08:33:54.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.441" endtime="20201110 08:33:54.840"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.848" endtime="20201110 08:33:54.868"></status>
</kw>
<msg timestamp="20201110 08:33:54.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.847" endtime="20201110 08:33:54.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.870" endtime="20201110 08:33:54.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.873" endtime="20201110 08:33:54.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.844" endtime="20201110 08:33:54.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.842" endtime="20201110 08:33:54.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.882" endtime="20201110 08:33:55.169"></status>
</kw>
<msg timestamp="20201110 08:33:55.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.880" endtime="20201110 08:33:55.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.173" endtime="20201110 08:33:55.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.183" endtime="20201110 08:33:55.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.878" endtime="20201110 08:33:55.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.876" endtime="20201110 08:33:55.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.190" level="INFO">${RESULT} = [{'time': 0.021943181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.845900000000029e-05, 'source_diff': 5.845900000000029e-05}, {'time': 0.022004014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:55.187" endtime="20201110 08:33:55.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:55.203" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:55.191" endtime="20201110 08:33:55.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.208" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:33:55.207" endtime="20201110 08:33:55.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.210" level="INFO">VALUE: [5.845900000000029e-05, 5.3763999999997814e-05, 5.188899999999941e-05, 5.559700000000098e-05, 5.094400000000068e-05, 5.5708000000001534e-05, 5.177799999999885e-05, 5.569500000000144e-05, 5.381900000000009e-05, 5.4749999999999244e-05, 5.3777999999997383e-05, 5.281900000000256e-05, 5.5722000000001104e-05, 5.283300000000213e-05, 5.079200000000089e-05, 5.087500000000231e-05, 5.282000000000203e-05, 5.281899999999909e-05, 4.988900000000088e-05, 5.6750000000001244e-05, 5.56809999999984e-05, 5.079099999999795e-05, 5.190300000000245e-05, 5.093000000000111e-05, 5.288900000000041e-05, 5.079099999999795e-05, 5.4722000000000104e-05, 5.377800000000085e-05, 5.187499999999984e-05, 5.284699999999823e-05, 5.180600000000146e-05, 5.282000000000203e-05, 5.18470000000007e-05, 5.377700000000138e-05, 4.995899999999873e-05, 5.3777999999997383e-05, 4.987500000000131e-05, 5.090300000000145e-05, 5.380500000000052e-05, 5.380499999999705e-05, 5.28340000000016e-05, 5.5693999999998495e-05, 5.5736000000000674e-05, 5.4763999999998814e-05, 5.0736999999998617e-05, 5.6666000000000355e-05, 5.477699999999891e-05, 5.4735999999999674e-05, 5.56809999999984e-05, 5.663900000000069e-05]</msg>
<status status="PASS" starttime="20201110 08:33:55.209" endtime="20201110 08:33:55.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.204" endtime="20201110 08:33:55.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.214" endtime="20201110 08:33:55.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.217" endtime="20201110 08:33:55.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.216" endtime="20201110 08:33:55.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.212" endtime="20201110 08:33:55.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.841" endtime="20201110 08:33:55.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.840" endtime="20201110 08:33:55.238"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.247" endtime="20201110 08:33:55.265"></status>
</kw>
<msg timestamp="20201110 08:33:55.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.245" endtime="20201110 08:33:55.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.266" endtime="20201110 08:33:55.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.269" endtime="20201110 08:33:55.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.243" endtime="20201110 08:33:55.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.241" endtime="20201110 08:33:55.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.278" endtime="20201110 08:33:55.564"></status>
</kw>
<msg timestamp="20201110 08:33:55.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020009361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.276" endtime="20201110 08:33:55.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020009361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.568" endtime="20201110 08:33:55.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.576" endtime="20201110 08:33:55.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.274" endtime="20201110 08:33:55.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.272" endtime="20201110 08:33:55.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.583" level="INFO">${RESULT} = [{'time': 0.020056472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.711099999999899e-05, 'source_diff': 4.711099999999899e-05}, {'time': 0.020117111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:55.580" endtime="20201110 08:33:55.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:55.596" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:55.584" endtime="20201110 08:33:55.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.600" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:33:55.599" endtime="20201110 08:33:55.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.603" level="INFO">VALUE: [4.711099999999899e-05, 5.28470000000017e-05, 5.5722000000001104e-05, 5.379200000000042e-05, 5.093099999999712e-05, 5.569500000000144e-05, 5.369499999999944e-05, 5.5665999999999355e-05, 5.283299999999866e-05, 5.284699999999823e-05, 5.187499999999984e-05, 4.997200000000229e-05, 5.283299999999866e-05, 4.993099999999959e-05, 5.5707999999998065e-05, 5.186100000000027e-05, 5.08469999999997e-05, 5.5736000000000674e-05, 5.188899999999941e-05, 5.286100000000127e-05, 5.18609999999968e-05, 5.570899999999754e-05, 5.562500000000012e-05, 5.4749999999999244e-05, 5.187499999999984e-05, 5.190300000000245e-05, 5.380599999999999e-05, 5.086099999999927e-05, 5.4722000000000104e-05, 5.3721999999999104e-05, 5.569500000000144e-05, 5.1887999999999934e-05, 5.284699999999823e-05, 5.4749999999999244e-05, 5.091700000000102e-05, 5.08469999999997e-05, 5.284699999999823e-05, 5.572300000000058e-05, 5.376400000000128e-05, 5.5693999999998495e-05, 5.081899999999709e-05, 4.997199999999882e-05, 5.666699999999983e-05, 5.284699999999823e-05, 5.002800000000057e-05, 5.3735999999998674e-05, 5.3763999999997814e-05, 5.281999999999856e-05, 5.668100000000287e-05, 5.093100000000059e-05]</msg>
<status status="PASS" starttime="20201110 08:33:55.602" endtime="20201110 08:33:55.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.597" endtime="20201110 08:33:55.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.606" endtime="20201110 08:33:55.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.610" endtime="20201110 08:33:55.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.608" endtime="20201110 08:33:55.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.605" endtime="20201110 08:33:55.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.239" endtime="20201110 08:33:55.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.239" endtime="20201110 08:33:55.631"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.639" endtime="20201110 08:33:55.663"></status>
</kw>
<msg timestamp="20201110 08:33:55.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.638" endtime="20201110 08:33:55.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.664" endtime="20201110 08:33:55.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.667" endtime="20201110 08:33:55.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.635" endtime="20201110 08:33:55.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.633" endtime="20201110 08:33:55.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.675" endtime="20201110 08:33:55.961"></status>
</kw>
<msg timestamp="20201110 08:33:55.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024481889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024548, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:55.674" endtime="20201110 08:33:55.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024481889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024548, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:55.965" endtime="20201110 08:33:55.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.974" endtime="20201110 08:33:55.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.671" endtime="20201110 08:33:55.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.670" endtime="20201110 08:33:55.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.980" level="INFO">${RESULT} = [{'time': 0.024548, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.611100000000064e-05, 'source_diff': 6.611100000000064e-05}, {'time': 0.024609167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:33:55.977" endtime="20201110 08:33:55.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:55.994" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:55.981" endtime="20201110 08:33:55.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.998" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:33:55.997" endtime="20201110 08:33:55.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.001" level="INFO">VALUE: [6.611100000000064e-05, 5.380599999999999e-05, 5.6666000000000355e-05, 5.4707999999997065e-05, 5.3707999999999534e-05, 5.379099999999748e-05, 5.284699999999823e-05, 5.08469999999997e-05, 5.187499999999984e-05, 5.093100000000059e-05, 5.177699999999938e-05, 5.473699999999915e-05, 5.570900000000101e-05, 5.091700000000102e-05, 5.281899999999909e-05, 5.188899999999941e-05, 5.3707999999999534e-05, 5.283299999999866e-05, 5.090300000000145e-05, 5.377800000000085e-05, 5.4777999999998384e-05, 5.561100000000055e-05, 5.280600000000246e-05, 5.5679999999998925e-05, 5.4735999999999674e-05, 5.18470000000007e-05, 5.570900000000101e-05, 5.573700000000015e-05, 5.381900000000009e-05, 4.993099999999959e-05, 5.188899999999941e-05, 5.5638000000000215e-05, 5.097199999999982e-05, 5.091600000000154e-05, 5.369499999999944e-05, 5.283299999999866e-05, 5.656899999999937e-05, 5.4722000000000104e-05, 4.998600000000186e-05, 5.18470000000007e-05, 5.081900000000056e-05, 5.187500000000331e-05, 5.179199999999842e-05, 5.462499999999912e-05, 5.5750000000000244e-05, 4.998600000000186e-05, 5.561099999999708e-05, 5.5708000000001534e-05, 5.476400000000228e-05, 5.4763999999998814e-05]</msg>
<status status="PASS" starttime="20201110 08:33:55.999" endtime="20201110 08:33:56.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.994" endtime="20201110 08:33:56.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.004" endtime="20201110 08:33:56.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.007" endtime="20201110 08:33:56.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.006" endtime="20201110 08:33:56.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.002" endtime="20201110 08:33:56.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.632" endtime="20201110 08:33:56.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.631" endtime="20201110 08:33:56.028"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.037" endtime="20201110 08:33:56.060"></status>
</kw>
<msg timestamp="20201110 08:33:56.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.035" endtime="20201110 08:33:56.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.061" endtime="20201110 08:33:56.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.064" endtime="20201110 08:33:56.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.033" endtime="20201110 08:33:56.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.031" endtime="20201110 08:33:56.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.073" endtime="20201110 08:33:56.359"></status>
</kw>
<msg timestamp="20201110 08:33:56.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023731931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023821111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.071" endtime="20201110 08:33:56.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023731931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023821111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.364" endtime="20201110 08:33:56.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.372" endtime="20201110 08:33:56.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.069" endtime="20201110 08:33:56.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.067" endtime="20201110 08:33:56.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.378" level="INFO">${RESULT} = [{'time': 0.023821111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.917999999999773e-05, 'source_diff': 8.917999999999773e-05}, {'time': 0.023912986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:56.375" endtime="20201110 08:33:56.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:56.393" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:56.379" endtime="20201110 08:33:56.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.397" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:33:56.396" endtime="20201110 08:33:56.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.400" level="INFO">VALUE: [8.917999999999773e-05, 8.336100000000055e-05, 8.151400000000128e-05, 8.344399999999849e-05, 8.145799999999953e-05, 8.248599999999967e-05, 8.14170000000003e-05, 8.73470000000015e-05, 8.437500000000112e-05, 8.426400000000056e-05, 8.53469999999995e-05, 8.137500000000158e-05, 8.436100000000155e-05, 8.14719999999991e-05, 8.34309999999984e-05, 8.534700000000298e-05, 8.341699999999883e-05, 8.154200000000042e-05, 8.538900000000169e-05, 8.248599999999967e-05, 8.344500000000143e-05, 8.624999999999952e-05, 8.53469999999995e-05, 8.622200000000038e-05, 8.24720000000001e-05, 8.058299999999866e-05, 8.618100000000115e-05, 8.251399999999881e-05, 8.437499999999765e-05, 8.1458000000003e-05, 8.249999999999924e-05, 8.727700000000019e-05, 8.148599999999867e-05, 8.336100000000055e-05, 8.3459000000001e-05, 8.152800000000085e-05, 8.522199999999938e-05, 8.330599999999827e-05, 8.06390000000004e-05, 8.71669999999991e-05, 8.054099999999995e-05, 8.24170000000013e-05, 8.533299999999994e-05, 8.43469999999985e-05, 8.245800000000053e-05, 8.336100000000055e-05, 8.248599999999967e-05, 8.44170000000033e-05, 8.620800000000081e-05, 8.152800000000085e-05]</msg>
<status status="PASS" starttime="20201110 08:33:56.398" endtime="20201110 08:33:56.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.394" endtime="20201110 08:33:56.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.403" endtime="20201110 08:33:56.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.407" endtime="20201110 08:33:56.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.405" endtime="20201110 08:33:56.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.402" endtime="20201110 08:33:56.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.029" endtime="20201110 08:33:56.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.029" endtime="20201110 08:33:56.428"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.436" endtime="20201110 08:33:56.457"></status>
</kw>
<msg timestamp="20201110 08:33:56.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.434" endtime="20201110 08:33:56.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.458" endtime="20201110 08:33:56.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.461" endtime="20201110 08:33:56.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.432" endtime="20201110 08:33:56.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.430" endtime="20201110 08:33:56.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.470" endtime="20201110 08:33:56.755"></status>
</kw>
<msg timestamp="20201110 08:33:56.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021524014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021598764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.468" endtime="20201110 08:33:56.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021524014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021598764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.760" endtime="20201110 08:33:56.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.768" endtime="20201110 08:33:56.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.465" endtime="20201110 08:33:56.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.464" endtime="20201110 08:33:56.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.774" level="INFO">${RESULT} = [{'time': 0.021598764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.474999999999843e-05, 'source_diff': 7.474999999999843e-05}, {'time': 0.021690569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:56.771" endtime="20201110 08:33:56.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:56.788" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:56.775" endtime="20201110 08:33:56.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.792" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:33:56.791" endtime="20201110 08:33:56.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.794" level="INFO">VALUE: [7.474999999999843e-05, 8.154100000000095e-05, 8.333400000000088e-05, 8.536099999999908e-05, 8.524999999999852e-05, 8.626399999999909e-05, 8.249999999999924e-05, 8.532000000000331e-05, 8.337500000000012e-05, 8.338899999999969e-05, 8.527799999999766e-05, 8.162499999999837e-05, 8.623599999999995e-05, 8.144499999999943e-05, 8.248599999999967e-05, 8.537499999999865e-05, 8.154099999999748e-05, 8.524999999999852e-05, 8.440300000000026e-05, 8.249999999999924e-05, 8.048599999999767e-05, 8.249999999999924e-05, 8.243100000000086e-05, 8.537499999999865e-05, 8.623599999999995e-05, 8.062500000000083e-05, 8.622199999999691e-05, 8.436100000000155e-05, 8.44309999999994e-05, 8.438900000000069e-05, 8.340299999999926e-05, 8.152800000000085e-05, 8.244500000000043e-05, 8.53469999999995e-05, 8.42919999999997e-05, 8.44170000000033e-05, 8.24170000000013e-05, 8.541599999999788e-05, 8.623599999999995e-05, 8.058300000000213e-05, 8.249999999999924e-05, 8.152800000000085e-05, 8.250000000000271e-05, 8.440300000000026e-05, 8.249999999999924e-05, 8.343100000000186e-05, 8.441699999999983e-05, 8.713899999999997e-05, 8.632000000000084e-05, 8.33330000000014e-05]</msg>
<status status="PASS" starttime="20201110 08:33:56.793" endtime="20201110 08:33:56.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.788" endtime="20201110 08:33:56.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.798" endtime="20201110 08:33:56.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.801" endtime="20201110 08:33:56.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.800" endtime="20201110 08:33:56.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.796" endtime="20201110 08:33:56.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.428" endtime="20201110 08:33:56.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.428" endtime="20201110 08:33:56.822"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.831" endtime="20201110 08:33:56.857"></status>
</kw>
<msg timestamp="20201110 08:33:56.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.829" endtime="20201110 08:33:56.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.859" endtime="20201110 08:33:56.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.861" endtime="20201110 08:33:56.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.827" endtime="20201110 08:33:56.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.825" endtime="20201110 08:33:56.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.870" endtime="20201110 08:33:57.157"></status>
</kw>
<msg timestamp="20201110 08:33:57.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023686069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023771403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.869" endtime="20201110 08:33:57.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023686069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023771403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.161" endtime="20201110 08:33:57.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.170" endtime="20201110 08:33:57.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.866" endtime="20201110 08:33:57.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.864" endtime="20201110 08:33:57.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.176" level="INFO">${RESULT} = [{'time': 0.023771403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.533399999999941e-05, 'source_diff': 8.533399999999941e-05}, {'time': 0.023863125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:57.173" endtime="20201110 08:33:57.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:57.189" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:57.177" endtime="20201110 08:33:57.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.194" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:33:57.193" endtime="20201110 08:33:57.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.196" level="INFO">VALUE: [8.533399999999941e-05, 8.444399999999949e-05, 8.056899999999909e-05, 8.343000000000239e-05, 8.25979999999997e-05, 8.054199999999942e-05, 8.723700000000043e-05, 8.63059999999978e-05, 8.16109999999988e-05, 8.154100000000095e-05, 8.527799999999766e-05, 8.05840000000016e-05, 8.250000000000271e-05, 8.626400000000256e-05, 8.548600000000267e-05, 8.248599999999967e-05, 8.434700000000198e-05, 8.436100000000155e-05, 8.632000000000084e-05, 8.344399999999849e-05, 8.061200000000074e-05, 8.24720000000001e-05, 8.344400000000196e-05, 8.342999999999892e-05, 8.249999999999924e-05, 8.058399999999813e-05, 8.536099999999908e-05, 8.631900000000137e-05, 8.436099999999808e-05, 8.62920000000017e-05, 8.536099999999908e-05, 8.536099999999908e-05, 8.345799999999806e-05, 8.056999999999856e-05, 8.534799999999898e-05, 8.63050000000018e-05, 8.634799999999998e-05, 8.24720000000001e-05, 8.34309999999984e-05, 8.152700000000138e-05, 8.63470000000005e-05, 8.536199999999855e-05, 8.442999999999992e-05, 8.53469999999995e-05, 8.151400000000128e-05, 8.438900000000069e-05, 8.154200000000042e-05, 8.154200000000042e-05, 8.152799999999738e-05, 8.148600000000214e-05]</msg>
<status status="PASS" starttime="20201110 08:33:57.195" endtime="20201110 08:33:57.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.190" endtime="20201110 08:33:57.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.200" endtime="20201110 08:33:57.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.203" endtime="20201110 08:33:57.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.202" endtime="20201110 08:33:57.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.198" endtime="20201110 08:33:57.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.823" endtime="20201110 08:33:57.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.823" endtime="20201110 08:33:57.224"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.233" endtime="20201110 08:33:57.255"></status>
</kw>
<msg timestamp="20201110 08:33:57.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.231" endtime="20201110 08:33:57.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.257" endtime="20201110 08:33:57.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.259" endtime="20201110 08:33:57.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.229" endtime="20201110 08:33:57.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.226" endtime="20201110 08:33:57.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.268" endtime="20201110 08:33:57.555"></status>
</kw>
<msg timestamp="20201110 08:33:57.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023781, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023867306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:57.266" endtime="20201110 08:33:57.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023781, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023867306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:57.559" endtime="20201110 08:33:57.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.567" endtime="20201110 08:33:57.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.264" endtime="20201110 08:33:57.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.262" endtime="20201110 08:33:57.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.574" level="INFO">${RESULT} = [{'time': 0.023867306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.630600000000127e-05, 'source_diff': 8.630600000000127e-05}, {'time': 0.023959069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:57.570" endtime="20201110 08:33:57.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:57.587" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:57.575" endtime="20201110 08:33:57.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.591" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:33:57.590" endtime="20201110 08:33:57.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.594" level="INFO">VALUE: [8.630600000000127e-05, 8.240199999999878e-05, 8.24720000000001e-05, 8.727799999999966e-05, 8.340300000000272e-05, 8.627799999999866e-05, 8.536099999999908e-05, 8.24720000000001e-05, 8.24720000000001e-05, 8.630600000000127e-05, 8.629199999999823e-05, 8.537499999999865e-05, 8.344499999999797e-05, 8.537499999999865e-05, 8.633299999999747e-05, 8.149999999999824e-05, 8.248599999999967e-05, 8.627800000000213e-05, 8.148599999999867e-05, 8.338899999999969e-05, 8.244400000000096e-05, 8.056999999999856e-05, 8.440300000000026e-05, 8.247299999999957e-05, 8.538899999999822e-05, 8.336100000000055e-05, 8.340299999999926e-05, 8.344399999999849e-05, 8.438900000000069e-05, 8.050000000000071e-05, 8.438900000000069e-05, 8.631900000000137e-05, 8.538899999999822e-05, 8.62920000000017e-05, 8.055599999999899e-05, 8.726400000000009e-05, 8.151399999999781e-05, 8.151400000000128e-05, 8.154200000000042e-05, 8.629199999999823e-05, 8.536100000000255e-05, 8.247300000000304e-05, 8.536099999999908e-05, 8.727799999999966e-05, 8.438900000000069e-05, 8.438900000000069e-05, 8.140300000000072e-05, 8.336100000000055e-05, 8.724999999999705e-05, 8.330599999999827e-05]</msg>
<status status="PASS" starttime="20201110 08:33:57.593" endtime="20201110 08:33:57.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.588" endtime="20201110 08:33:57.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.601" endtime="20201110 08:33:57.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.604" endtime="20201110 08:33:57.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.603" endtime="20201110 08:33:57.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.599" endtime="20201110 08:33:57.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.225" endtime="20201110 08:33:57.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.224" endtime="20201110 08:33:57.625"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.634" endtime="20201110 08:33:57.658"></status>
</kw>
<msg timestamp="20201110 08:33:57.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.632" endtime="20201110 08:33:57.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.659" endtime="20201110 08:33:57.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.662" endtime="20201110 08:33:57.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.630" endtime="20201110 08:33:57.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.628" endtime="20201110 08:33:57.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.671" endtime="20201110 08:33:57.969"></status>
</kw>
<msg timestamp="20201110 08:33:57.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024429417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024513778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.669" endtime="20201110 08:33:57.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024429417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024513778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.973" endtime="20201110 08:33:57.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.981" endtime="20201110 08:33:57.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.667" endtime="20201110 08:33:57.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.665" endtime="20201110 08:33:57.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.988" level="INFO">${RESULT} = [{'time': 0.024513778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.436100000000155e-05, 'source_diff': 8.436100000000155e-05}, {'time': 0.024604792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:57.985" endtime="20201110 08:33:57.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:58.003" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:57.989" endtime="20201110 08:33:58.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.007" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:33:58.006" endtime="20201110 08:33:58.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.010" level="INFO">VALUE: [8.436100000000155e-05, 8.630600000000127e-05, 8.24720000000001e-05, 8.056900000000256e-05, 8.251399999999881e-05, 8.538900000000169e-05, 8.433400000000188e-05, 8.63059999999978e-05, 8.631900000000137e-05, 8.248599999999967e-05, 8.441600000000035e-05, 8.345799999999806e-05, 8.058299999999866e-05, 8.347199999999763e-05, 8.058299999999866e-05, 8.440199999999731e-05, 8.067999999999964e-05, 8.152800000000085e-05, 8.344499999999797e-05, 8.63050000000018e-05, 8.158399999999913e-05, 8.630600000000127e-05, 8.248599999999967e-05, 8.537499999999865e-05, 8.343100000000186e-05, 8.536100000000255e-05, 8.155500000000052e-05, 8.350000000000024e-05, 8.437500000000112e-05, 8.158399999999913e-05, 8.249999999999924e-05, 8.537499999999865e-05, 8.441699999999983e-05, 8.055599999999899e-05, 8.151400000000128e-05, 8.441600000000035e-05, 8.441600000000035e-05, 8.051400000000028e-05, 8.438900000000069e-05, 8.630600000000127e-05, 8.441600000000035e-05, 8.63189999999979e-05, 8.627699999999919e-05, 8.152800000000085e-05, 8.34309999999984e-05, 8.440300000000026e-05, 8.147299999999857e-05, 8.436200000000102e-05, 8.151399999999781e-05, 8.341699999999883e-05]</msg>
<status status="PASS" starttime="20201110 08:33:58.008" endtime="20201110 08:33:58.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.004" endtime="20201110 08:33:58.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.013" endtime="20201110 08:33:58.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.016" endtime="20201110 08:33:58.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.015" endtime="20201110 08:33:58.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.012" endtime="20201110 08:33:58.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.626" endtime="20201110 08:33:58.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.626" endtime="20201110 08:33:58.037"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.046" endtime="20201110 08:33:58.075"></status>
</kw>
<msg timestamp="20201110 08:33:58.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.044" endtime="20201110 08:33:58.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.076" endtime="20201110 08:33:58.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.079" endtime="20201110 08:33:58.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.042" endtime="20201110 08:33:58.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.040" endtime="20201110 08:33:58.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.087" endtime="20201110 08:33:58.374"></status>
</kw>
<msg timestamp="20201110 08:33:58.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024447431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024516583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.086" endtime="20201110 08:33:58.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024447431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024516583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.378" endtime="20201110 08:33:58.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.387" endtime="20201110 08:33:58.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.083" endtime="20201110 08:33:58.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.082" endtime="20201110 08:33:58.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.393" level="INFO">${RESULT} = [{'time': 0.024516583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.915200000000288e-05, 'source_diff': 6.915200000000288e-05}, {'time': 0.024608708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:58.390" endtime="20201110 08:33:58.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:58.406" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:58.394" endtime="20201110 08:33:58.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.411" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:33:58.410" endtime="20201110 08:33:58.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.413" level="INFO">VALUE: [6.915200000000288e-05, 8.248599999999967e-05, 8.341699999999883e-05, 8.536100000000255e-05, 8.438800000000121e-05, 8.71799999999992e-05, 8.344399999999849e-05, 8.43049999999998e-05, 8.631900000000137e-05, 8.336100000000055e-05, 8.438900000000069e-05, 8.423600000000142e-05, 8.347300000000057e-05, 8.437500000000112e-05, 8.629099999999876e-05, 8.620800000000081e-05, 8.248599999999967e-05, 8.43049999999998e-05, 8.63059999999978e-05, 8.234799999999945e-05, 8.437500000000112e-05, 8.055599999999899e-05, 8.627799999999866e-05, 8.429100000000023e-05, 8.154200000000042e-05, 8.529199999999723e-05, 8.251399999999881e-05, 8.438900000000069e-05, 8.426400000000056e-05, 8.156999999999956e-05, 8.536099999999908e-05, 8.63189999999979e-05, 8.24720000000001e-05, 8.338899999999969e-05, 8.345799999999806e-05, 8.34309999999984e-05, 8.238900000000215e-05, 8.537499999999865e-05, 8.244400000000096e-05, 8.061100000000126e-05, 8.331999999999784e-05, 8.24720000000001e-05, 8.337500000000012e-05, 8.338899999999969e-05, 8.244500000000043e-05, 8.241600000000182e-05, 8.341599999999935e-05, 8.243100000000086e-05, 8.34170000000023e-05, 8.622200000000038e-05]</msg>
<status status="PASS" starttime="20201110 08:33:58.412" endtime="20201110 08:33:58.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.407" endtime="20201110 08:33:58.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.417" endtime="20201110 08:33:58.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.420" endtime="20201110 08:33:58.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.419" endtime="20201110 08:33:58.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.415" endtime="20201110 08:33:58.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.038" endtime="20201110 08:33:58.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.038" endtime="20201110 08:33:58.441"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.450" endtime="20201110 08:33:58.471"></status>
</kw>
<msg timestamp="20201110 08:33:58.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.448" endtime="20201110 08:33:58.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.473" endtime="20201110 08:33:58.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.475" endtime="20201110 08:33:58.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.446" endtime="20201110 08:33:58.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.444" endtime="20201110 08:33:58.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.484" endtime="20201110 08:33:58.771"></status>
</kw>
<msg timestamp="20201110 08:33:58.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.483" endtime="20201110 08:33:58.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.775" endtime="20201110 08:33:58.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.784" endtime="20201110 08:33:58.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.480" endtime="20201110 08:33:58.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.478" endtime="20201110 08:33:58.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.790" level="INFO">${RESULT} = [{'time': 0.022629097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.908300000000103e-05, 'source_diff': 6.908300000000103e-05}, {'time': 0.022721014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:58.787" endtime="20201110 08:33:58.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:58.803" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:58.791" endtime="20201110 08:33:58.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.808" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:33:58.807" endtime="20201110 08:33:58.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.810" level="INFO">VALUE: [6.908300000000103e-05, 8.151400000000128e-05, 8.248599999999967e-05, 8.531900000000037e-05, 8.727700000000019e-05, 8.05970000000017e-05, 8.151400000000128e-05, 8.345799999999806e-05, 8.440300000000026e-05, 8.24720000000001e-05, 8.341699999999883e-05, 7.959800000000017e-05, 8.149999999999824e-05, 8.244399999999749e-05, 8.06390000000004e-05, 8.149999999999824e-05, 8.247299999999957e-05, 8.247199999999663e-05, 8.248599999999967e-05, 8.344399999999849e-05, 8.240299999999826e-05, 8.438900000000069e-05, 8.249999999999924e-05, 8.134699999999898e-05, 8.440200000000078e-05, 8.443100000000286e-05, 8.537499999999865e-05, 8.248600000000314e-05, 8.337500000000012e-05, 8.624999999999952e-05, 8.24720000000001e-05, 8.727799999999966e-05, 8.531900000000037e-05, 8.32919999999987e-05, 8.53469999999995e-05, 8.249999999999924e-05, 8.252699999999891e-05, 8.334800000000045e-05, 8.441699999999983e-05, 8.63189999999979e-05, 8.620800000000081e-05, 8.629100000000223e-05, 8.534799999999898e-05, 8.437499999999765e-05, 8.144499999999943e-05, 8.248699999999914e-05, 8.438900000000069e-05, 8.626400000000256e-05, 8.623599999999995e-05, 8.423600000000142e-05]</msg>
<status status="PASS" starttime="20201110 08:33:58.809" endtime="20201110 08:33:58.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.804" endtime="20201110 08:33:58.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.814" endtime="20201110 08:33:58.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.817" endtime="20201110 08:33:58.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.816" endtime="20201110 08:33:58.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.812" endtime="20201110 08:33:58.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.442" endtime="20201110 08:33:58.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.442" endtime="20201110 08:33:58.838"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.847" endtime="20201110 08:33:58.868"></status>
</kw>
<msg timestamp="20201110 08:33:58.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.845" endtime="20201110 08:33:58.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.869" endtime="20201110 08:33:58.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.872" endtime="20201110 08:33:58.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.843" endtime="20201110 08:33:58.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.841" endtime="20201110 08:33:58.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.881" endtime="20201110 08:33:59.168"></status>
</kw>
<msg timestamp="20201110 08:33:59.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.879" endtime="20201110 08:33:59.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.172" endtime="20201110 08:33:59.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.180" endtime="20201110 08:33:59.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.877" endtime="20201110 08:33:59.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.875" endtime="20201110 08:33:59.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.187" level="INFO">${RESULT} = [{'time': 0.022452056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.812500000000221e-05, 'source_diff': 6.812500000000221e-05}, {'time': 0.022543347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:59.184" endtime="20201110 08:33:59.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.200" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:59.188" endtime="20201110 08:33:59.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.205" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.204" endtime="20201110 08:33:59.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.207" level="INFO">VALUE: [6.812500000000221e-05, 8.151399999999781e-05, 8.344399999999849e-05, 8.63059999999978e-05, 8.048600000000114e-05, 8.438900000000069e-05, 8.343000000000239e-05, 8.245800000000053e-05, 8.051399999999681e-05, 8.054199999999942e-05, 8.531900000000037e-05, 8.148600000000214e-05, 8.345799999999806e-05, 8.629199999999823e-05, 8.536099999999908e-05, 8.152800000000085e-05, 8.437499999999765e-05, 8.62920000000017e-05, 8.152799999999738e-05, 8.725000000000052e-05, 8.149999999999824e-05, 8.634699999999704e-05, 8.436099999999808e-05, 8.340300000000272e-05, 8.152799999999738e-05, 8.630499999999833e-05, 8.626399999999909e-05, 8.051400000000028e-05, 8.44720000000021e-05, 8.438900000000069e-05, 8.340199999999978e-05, 8.436099999999808e-05, 8.623599999999995e-05, 8.536099999999908e-05, 8.149999999999824e-05, 8.056899999999909e-05, 8.534799999999898e-05, 8.726300000000062e-05, 8.530600000000027e-05, 8.248599999999967e-05, 8.34170000000023e-05, 8.531900000000037e-05, 8.244400000000096e-05, 8.340199999999978e-05, 8.53189999999969e-05, 8.433399999999841e-05, 8.054200000000289e-05, 8.154200000000042e-05, 8.426400000000056e-05, 8.24720000000001e-05]</msg>
<status status="PASS" starttime="20201110 08:33:59.206" endtime="20201110 08:33:59.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.201" endtime="20201110 08:33:59.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.211" endtime="20201110 08:33:59.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.214" endtime="20201110 08:33:59.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.212" endtime="20201110 08:33:59.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.209" endtime="20201110 08:33:59.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.839" endtime="20201110 08:33:59.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.839" endtime="20201110 08:33:59.235"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.243" endtime="20201110 08:33:59.266"></status>
</kw>
<msg timestamp="20201110 08:33:59.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.242" endtime="20201110 08:33:59.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.267" endtime="20201110 08:33:59.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.270" endtime="20201110 08:33:59.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.239" endtime="20201110 08:33:59.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.237" endtime="20201110 08:33:59.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.279" endtime="20201110 08:33:59.566"></status>
</kw>
<msg timestamp="20201110 08:33:59.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.277" endtime="20201110 08:33:59.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.571" endtime="20201110 08:33:59.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.579" endtime="20201110 08:33:59.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.275" endtime="20201110 08:33:59.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.273" endtime="20201110 08:33:59.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.586" level="INFO">${RESULT} = [{'time': 0.022915458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.588899999999831e-05, 'source_diff': 9.588899999999831e-05}, {'time': 0.02300625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:59.582" endtime="20201110 08:33:59.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.600" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:59.587" endtime="20201110 08:33:59.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.605" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.604" endtime="20201110 08:33:59.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.607" level="INFO">VALUE: [9.588899999999831e-05, 7.966699999999854e-05, 8.345899999999754e-05, 8.537500000000212e-05, 8.63059999999978e-05, 8.632000000000084e-05, 8.054200000000289e-05, 8.63470000000005e-05, 8.144399999999996e-05, 8.34309999999984e-05, 8.350000000000024e-05, 8.636100000000008e-05, 8.536099999999908e-05, 8.630600000000127e-05, 8.631999999999737e-05, 8.34720000000011e-05, 8.236099999999955e-05, 8.631900000000137e-05, 8.055599999999899e-05, 8.247199999999663e-05, 8.251399999999881e-05, 8.344400000000196e-05, 8.441699999999983e-05, 8.537500000000212e-05, 8.251399999999881e-05, 8.34309999999984e-05, 8.150000000000171e-05, 8.345800000000153e-05, 8.330600000000174e-05, 8.534800000000245e-05, 8.16109999999988e-05, 8.636100000000008e-05, 8.53469999999995e-05, 8.633299999999747e-05, 8.53469999999995e-05, 8.536099999999908e-05, 8.147200000000257e-05, 8.43469999999985e-05, 8.350000000000024e-05, 8.251400000000228e-05, 8.630600000000127e-05, 8.154199999999695e-05, 8.441699999999983e-05, 8.727799999999966e-05, 8.345800000000153e-05, 8.730499999999933e-05, 8.622200000000038e-05, 8.531900000000037e-05, 8.249999999999924e-05, 8.151399999999781e-05]</msg>
<status status="PASS" starttime="20201110 08:33:59.606" endtime="20201110 08:33:59.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.601" endtime="20201110 08:33:59.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.611" endtime="20201110 08:33:59.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.614" endtime="20201110 08:33:59.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.613" endtime="20201110 08:33:59.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.609" endtime="20201110 08:33:59.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.236" endtime="20201110 08:33:59.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.235" endtime="20201110 08:33:59.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.657" endtime="20201110 08:33:59.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.639" endtime="20201110 08:33:59.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.637" endtime="20201110 08:33:59.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.636" endtime="20201110 08:33:59.659"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:19.574" endtime="20201110 08:33:59.660" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.666" endtime="20201110 08:33:59.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.665" endtime="20201110 08:33:59.686"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.700" endtime="20201110 08:33:59.718"></status>
</kw>
<msg timestamp="20201110 08:33:59.718" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.697" endtime="20201110 08:33:59.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.721" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.719" endtime="20201110 08:33:59.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.724" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:59.722" endtime="20201110 08:33:59.724"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:59.695" endtime="20201110 08:33:59.725"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:59.693" endtime="20201110 08:33:59.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.691" endtime="20201110 08:33:59.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:59.729" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:59.728" endtime="20201110 08:33:59.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.726" endtime="20201110 08:33:59.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.691" endtime="20201110 08:33:59.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.690" endtime="20201110 08:33:59.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.731" endtime="20201110 08:33:59.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.689" endtime="20201110 08:33:59.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.687" endtime="20201110 08:33:59.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.664" endtime="20201110 08:33:59.733"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.743" endtime="20201110 08:33:59.758"></status>
</kw>
<msg timestamp="20201110 08:33:59.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.741" endtime="20201110 08:33:59.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.760" endtime="20201110 08:33:59.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.762" endtime="20201110 08:33:59.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.739" endtime="20201110 08:33:59.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.736" endtime="20201110 08:33:59.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.771" endtime="20201110 08:34:00.055"></status>
</kw>
<msg timestamp="20201110 08:34:00.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067906931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067915597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.769" endtime="20201110 08:34:00.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067906931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067915597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.059" endtime="20201110 08:34:00.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.067" endtime="20201110 08:34:00.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.767" endtime="20201110 08:34:00.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.765" endtime="20201110 08:34:00.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.074" level="INFO">${RESULT} = [{'time': 0.067915597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.665999999990515e-06, 'source_diff': 8.665999999990515e-06}, {'time': 0.067932153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:00.071" endtime="20201110 08:34:00.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.088" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:00.075" endtime="20201110 08:34:00.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.093" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.092" endtime="20201110 08:34:00.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.095" level="INFO">VALUE: [8.665999999990515e-06, 8.680999999996497e-06, 8.693999999989654e-06, 8.722000000002672e-06, 8.680000000010901e-06, 8.667000000003866e-06, 8.680999999996497e-06, 8.679999999997023e-06, 8.763999999994443e-06, 8.667000000003866e-06, 8.679999999997023e-06, 8.680999999996497e-06, 8.666999999989988e-06, 8.693999999989654e-06, 8.639000000004726e-06, 8.666000000004392e-06, 8.680000000010901e-06, 8.667000000003866e-06, 8.652999999997357e-06, 8.666000000004392e-06, 8.680999999996497e-06, 8.610999999991709e-06, 8.681000000010375e-06, 8.750000000001812e-06, 8.695000000003006e-06, 8.708999999995637e-06, 8.695000000003006e-06, 8.680999999996497e-06, 8.667000000003866e-06, 8.679999999997023e-06, 8.652999999997357e-06, 8.694000000003532e-06, 8.680999999996497e-06, 8.695000000003006e-06, 8.694999999989128e-06, 8.652999999997357e-06, 8.653000000011235e-06, 8.666999999989988e-06, 8.652999999997357e-06, 8.652999999997357e-06, 8.680000000010901e-06, 8.679999999997023e-06, 8.694999999989128e-06, 8.709000000009515e-06, 8.681000000010375e-06, 8.667000000003866e-06, 8.679999999997023e-06, 8.679999999997023e-06, 8.694999999989128e-06, 8.667000000003866e-06]</msg>
<status status="PASS" starttime="20201110 08:34:00.094" endtime="20201110 08:34:00.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.089" endtime="20201110 08:34:00.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.098" endtime="20201110 08:34:00.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.102" endtime="20201110 08:34:00.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.100" endtime="20201110 08:34:00.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.097" endtime="20201110 08:34:00.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.735" endtime="20201110 08:34:00.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.734" endtime="20201110 08:34:00.122"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.132" endtime="20201110 08:34:00.151"></status>
</kw>
<msg timestamp="20201110 08:34:00.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.130" endtime="20201110 08:34:00.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.153" endtime="20201110 08:34:00.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.155" endtime="20201110 08:34:00.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.127" endtime="20201110 08:34:00.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.125" endtime="20201110 08:34:00.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.164" endtime="20201110 08:34:00.449"></status>
</kw>
<msg timestamp="20201110 08:34:00.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024384, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024392694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:00.162" endtime="20201110 08:34:00.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024384, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024392694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:00.453" endtime="20201110 08:34:00.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.461" endtime="20201110 08:34:00.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.160" endtime="20201110 08:34:00.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.158" endtime="20201110 08:34:00.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.469" level="INFO">${RESULT} = [{'time': 0.024392694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.024408722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:00.465" endtime="20201110 08:34:00.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.482" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:00.470" endtime="20201110 08:34:00.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.486" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.485" endtime="20201110 08:34:00.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.489" level="INFO">VALUE: [8.694000000000063e-06, 8.721999999999203e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.708000000003102e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.652999999997357e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.666999999996927e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.624999999998217e-06, 8.638999999997787e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.736999999998246e-06, 8.666000000000923e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.637999999998314e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.653000000000827e-06]</msg>
<status status="PASS" starttime="20201110 08:34:00.487" endtime="20201110 08:34:00.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.483" endtime="20201110 08:34:00.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.492" endtime="20201110 08:34:00.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.496" endtime="20201110 08:34:00.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.494" endtime="20201110 08:34:00.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.490" endtime="20201110 08:34:00.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.124" endtime="20201110 08:34:00.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.123" endtime="20201110 08:34:00.516"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.525" endtime="20201110 08:34:00.541"></status>
</kw>
<msg timestamp="20201110 08:34:00.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.523" endtime="20201110 08:34:00.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.543" endtime="20201110 08:34:00.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.545" endtime="20201110 08:34:00.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.521" endtime="20201110 08:34:00.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.519" endtime="20201110 08:34:00.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.554" endtime="20201110 08:34:00.841"></status>
</kw>
<msg timestamp="20201110 08:34:00.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.553" endtime="20201110 08:34:00.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.845" endtime="20201110 08:34:00.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.853" endtime="20201110 08:34:00.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.550" endtime="20201110 08:34:00.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.548" endtime="20201110 08:34:00.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.860" level="INFO">${RESULT} = [{'time': 0.022234625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.022249514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:00.857" endtime="20201110 08:34:00.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.873" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:00.861" endtime="20201110 08:34:00.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.878" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.877" endtime="20201110 08:34:00.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.880" level="INFO">VALUE: [8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.763999999997912e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.638999999997787e-06, 8.735999999998773e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.665999999997454e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.666000000000923e-06]</msg>
<status status="PASS" starttime="20201110 08:34:00.879" endtime="20201110 08:34:00.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.874" endtime="20201110 08:34:00.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.884" endtime="20201110 08:34:00.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.887" endtime="20201110 08:34:00.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.885" endtime="20201110 08:34:00.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.882" endtime="20201110 08:34:00.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.517" endtime="20201110 08:34:00.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.517" endtime="20201110 08:34:00.908"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.916" endtime="20201110 08:34:00.937"></status>
</kw>
<msg timestamp="20201110 08:34:00.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.915" endtime="20201110 08:34:00.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.939" endtime="20201110 08:34:00.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.941" endtime="20201110 08:34:00.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.912" endtime="20201110 08:34:00.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.910" endtime="20201110 08:34:00.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.950" endtime="20201110 08:34:01.241"></status>
</kw>
<msg timestamp="20201110 08:34:01.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.949" endtime="20201110 08:34:01.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.245" endtime="20201110 08:34:01.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.253" endtime="20201110 08:34:01.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.946" endtime="20201110 08:34:01.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.944" endtime="20201110 08:34:01.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.260" level="INFO">${RESULT} = [{'time': 0.022646639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.0226605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:01.256" endtime="20201110 08:34:01.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:01.273" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:01.261" endtime="20201110 08:34:01.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.278" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:34:01.276" endtime="20201110 08:34:01.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.280" level="INFO">VALUE: [8.667000000000397e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.596999999999078e-06, 8.680000000000493e-06, 8.624999999998217e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.735999999998773e-06, 8.666000000000923e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.624999999998217e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.611000000002117e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.722999999998676e-06, 8.665999999997454e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201110 08:34:01.279" endtime="20201110 08:34:01.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.274" endtime="20201110 08:34:01.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.284" endtime="20201110 08:34:01.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.287" endtime="20201110 08:34:01.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.285" endtime="20201110 08:34:01.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.282" endtime="20201110 08:34:01.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.909" endtime="20201110 08:34:01.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.908" endtime="20201110 08:34:01.308"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.316" endtime="20201110 08:34:01.336"></status>
</kw>
<msg timestamp="20201110 08:34:01.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.315" endtime="20201110 08:34:01.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.337" endtime="20201110 08:34:01.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.340" endtime="20201110 08:34:01.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.312" endtime="20201110 08:34:01.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.310" endtime="20201110 08:34:01.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.349" endtime="20201110 08:34:01.635"></status>
</kw>
<msg timestamp="20201110 08:34:01.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024666306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024674958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.347" endtime="20201110 08:34:01.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024666306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024674958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.639" endtime="20201110 08:34:01.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.647" endtime="20201110 08:34:01.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.344" endtime="20201110 08:34:01.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.343" endtime="20201110 08:34:01.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.654" level="INFO">${RESULT} = [{'time': 0.024674958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.652000000001353e-06, 'source_diff': 8.652000000001353e-06}, {'time': 0.024688875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:01.650" endtime="20201110 08:34:01.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:01.667" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:01.655" endtime="20201110 08:34:01.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.671" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:34:01.670" endtime="20201110 08:34:01.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.674" level="INFO">VALUE: [8.652000000001353e-06, 8.667000000000397e-06, 8.666999999996927e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.625000000001687e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.736000000002242e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.638999999997787e-06, 8.624999999998217e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.665999999997454e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.638999999997787e-06, 8.750000000001812e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201110 08:34:01.672" endtime="20201110 08:34:01.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.668" endtime="20201110 08:34:01.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.677" endtime="20201110 08:34:01.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.681" endtime="20201110 08:34:01.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.679" endtime="20201110 08:34:01.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.676" endtime="20201110 08:34:01.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.309" endtime="20201110 08:34:01.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.308" endtime="20201110 08:34:01.702"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.710" endtime="20201110 08:34:01.727"></status>
</kw>
<msg timestamp="20201110 08:34:01.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.709" endtime="20201110 08:34:01.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.729" endtime="20201110 08:34:01.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.731" endtime="20201110 08:34:01.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.706" endtime="20201110 08:34:01.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.704" endtime="20201110 08:34:01.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.740" endtime="20201110 08:34:02.028"></status>
</kw>
<msg timestamp="20201110 08:34:02.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022708097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.738" endtime="20201110 08:34:02.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022708097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.032" endtime="20201110 08:34:02.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.040" endtime="20201110 08:34:02.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.736" endtime="20201110 08:34:02.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.734" endtime="20201110 08:34:02.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.047" level="INFO">${RESULT} = [{'time': 0.022716778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.022731333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:02.044" endtime="20201110 08:34:02.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.060" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:02.048" endtime="20201110 08:34:02.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.065" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.064" endtime="20201110 08:34:02.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.067" level="INFO">VALUE: [8.680999999999967e-06, 8.666000000000923e-06, 8.610999999998648e-06, 8.694999999999536e-06, 8.665999999997454e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.736000000002242e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.652000000001353e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.651999999997884e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.708000000003102e-06, 8.665999999997454e-06, 8.625000000001687e-06, 8.651999999997884e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.639000000001257e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201110 08:34:02.066" endtime="20201110 08:34:02.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.061" endtime="20201110 08:34:02.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.070" endtime="20201110 08:34:02.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.074" endtime="20201110 08:34:02.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.072" endtime="20201110 08:34:02.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.069" endtime="20201110 08:34:02.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.702" endtime="20201110 08:34:02.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.702" endtime="20201110 08:34:02.095"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.103" endtime="20201110 08:34:02.123"></status>
</kw>
<msg timestamp="20201110 08:34:02.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.102" endtime="20201110 08:34:02.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.124" endtime="20201110 08:34:02.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.126" endtime="20201110 08:34:02.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.099" endtime="20201110 08:34:02.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.097" endtime="20201110 08:34:02.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.135" endtime="20201110 08:34:02.420"></status>
</kw>
<msg timestamp="20201110 08:34:02.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021516208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021524903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.134" endtime="20201110 08:34:02.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021516208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021524903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.424" endtime="20201110 08:34:02.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.433" endtime="20201110 08:34:02.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.131" endtime="20201110 08:34:02.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.130" endtime="20201110 08:34:02.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.439" level="INFO">${RESULT} = [{'time': 0.021524903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.695000000003006e-06, 'source_diff': 8.695000000003006e-06}, {'time': 0.021541653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:02.436" endtime="20201110 08:34:02.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.453" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:02.440" endtime="20201110 08:34:02.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.457" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.456" endtime="20201110 08:34:02.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.460" level="INFO">VALUE: [8.695000000003006e-06, 8.680999999999967e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.763999999997912e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.652000000001353e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.680999999999967e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201110 08:34:02.458" endtime="20201110 08:34:02.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.453" endtime="20201110 08:34:02.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.463" endtime="20201110 08:34:02.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.466" endtime="20201110 08:34:02.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.465" endtime="20201110 08:34:02.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.462" endtime="20201110 08:34:02.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.096" endtime="20201110 08:34:02.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.095" endtime="20201110 08:34:02.487"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.496" endtime="20201110 08:34:02.511"></status>
</kw>
<msg timestamp="20201110 08:34:02.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.494" endtime="20201110 08:34:02.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.513" endtime="20201110 08:34:02.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.515" endtime="20201110 08:34:02.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.492" endtime="20201110 08:34:02.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.490" endtime="20201110 08:34:02.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.524" endtime="20201110 08:34:02.811"></status>
</kw>
<msg timestamp="20201110 08:34:02.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020758625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020767333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.523" endtime="20201110 08:34:02.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020758625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020767333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.815" endtime="20201110 08:34:02.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.823" endtime="20201110 08:34:02.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.520" endtime="20201110 08:34:02.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.519" endtime="20201110 08:34:02.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.830" level="INFO">${RESULT} = [{'time': 0.020767333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.020784694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:02.826" endtime="20201110 08:34:02.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.843" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:02.831" endtime="20201110 08:34:02.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.847" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.846" endtime="20201110 08:34:02.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.850" level="INFO">VALUE: [8.707999999999633e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.651999999997884e-06, 8.680000000000493e-06, 8.695000000003006e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.736000000002242e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.736000000002242e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.666000000000923e-06, 8.750000000001812e-06, 8.666000000000923e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.624999999998217e-06, 8.736999999998246e-06, 8.666000000000923e-06, 8.666000000000923e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201110 08:34:02.848" endtime="20201110 08:34:02.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.844" endtime="20201110 08:34:02.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.881" endtime="20201110 08:34:02.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.885" endtime="20201110 08:34:02.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.883" endtime="20201110 08:34:02.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.879" endtime="20201110 08:34:02.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.488" endtime="20201110 08:34:02.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.488" endtime="20201110 08:34:02.905"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.914" endtime="20201110 08:34:02.933"></status>
</kw>
<msg timestamp="20201110 08:34:02.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.912" endtime="20201110 08:34:02.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.934" endtime="20201110 08:34:02.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.937" endtime="20201110 08:34:02.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.910" endtime="20201110 08:34:02.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.908" endtime="20201110 08:34:02.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.946" endtime="20201110 08:34:03.233"></status>
</kw>
<msg timestamp="20201110 08:34:03.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024654819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.944" endtime="20201110 08:34:03.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024654819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.237" endtime="20201110 08:34:03.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.245" endtime="20201110 08:34:03.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.942" endtime="20201110 08:34:03.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.940" endtime="20201110 08:34:03.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.252" level="INFO">${RESULT} = [{'time': 0.024654819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.024668042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:03.249" endtime="20201110 08:34:03.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.265" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:03.253" endtime="20201110 08:34:03.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.269" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.268" endtime="20201110 08:34:03.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.272" level="INFO">VALUE: [8.708000000003102e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.749999999998342e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.624999999998217e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.652999999997357e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.693999999996593e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201110 08:34:03.271" endtime="20201110 08:34:03.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.266" endtime="20201110 08:34:03.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.275" endtime="20201110 08:34:03.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.279" endtime="20201110 08:34:03.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.277" endtime="20201110 08:34:03.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.274" endtime="20201110 08:34:03.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.906" endtime="20201110 08:34:03.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.906" endtime="20201110 08:34:03.300"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.308" endtime="20201110 08:34:03.329"></status>
</kw>
<msg timestamp="20201110 08:34:03.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.307" endtime="20201110 08:34:03.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.331" endtime="20201110 08:34:03.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.333" endtime="20201110 08:34:03.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.304" endtime="20201110 08:34:03.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.302" endtime="20201110 08:34:03.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.342" endtime="20201110 08:34:03.628"></status>
</kw>
<msg timestamp="20201110 08:34:03.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022240903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.341" endtime="20201110 08:34:03.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022240903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.633" endtime="20201110 08:34:03.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.641" endtime="20201110 08:34:03.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.338" endtime="20201110 08:34:03.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.336" endtime="20201110 08:34:03.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.647" level="INFO">${RESULT} = [{'time': 0.022249583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.022265792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:03.644" endtime="20201110 08:34:03.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.661" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:03.648" endtime="20201110 08:34:03.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.665" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.664" endtime="20201110 08:34:03.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.667" level="INFO">VALUE: [8.680000000000493e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.735999999998773e-06, 8.653000000000827e-06, 8.652000000001353e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.764000000001382e-06, 8.709000000002576e-06, 8.667000000000397e-06, 8.582999999999508e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.625000000001687e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.681000000003436e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.625000000001687e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201110 08:34:03.666" endtime="20201110 08:34:03.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.661" endtime="20201110 08:34:03.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.671" endtime="20201110 08:34:03.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.674" endtime="20201110 08:34:03.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.673" endtime="20201110 08:34:03.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.669" endtime="20201110 08:34:03.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.301" endtime="20201110 08:34:03.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.300" endtime="20201110 08:34:03.695"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.704" endtime="20201110 08:34:03.722"></status>
</kw>
<msg timestamp="20201110 08:34:03.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.702" endtime="20201110 08:34:03.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.724" endtime="20201110 08:34:03.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.726" endtime="20201110 08:34:03.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.700" endtime="20201110 08:34:03.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.698" endtime="20201110 08:34:03.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.735" endtime="20201110 08:34:04.022"></status>
</kw>
<msg timestamp="20201110 08:34:04.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023821833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023830528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.734" endtime="20201110 08:34:04.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023821833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023830528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.026" endtime="20201110 08:34:04.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.034" endtime="20201110 08:34:04.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.731" endtime="20201110 08:34:04.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.730" endtime="20201110 08:34:04.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.041" level="INFO">${RESULT} = [{'time': 0.023830528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.023843944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:04.037" endtime="20201110 08:34:04.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.054" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:04.042" endtime="20201110 08:34:04.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.058" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.057" endtime="20201110 08:34:04.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.061" level="INFO">VALUE: [8.694999999999536e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.625000000001687e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.638999999997787e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201110 08:34:04.059" endtime="20201110 08:34:04.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.055" endtime="20201110 08:34:04.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.064" endtime="20201110 08:34:04.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.068" endtime="20201110 08:34:04.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.066" endtime="20201110 08:34:04.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.063" endtime="20201110 08:34:04.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.696" endtime="20201110 08:34:04.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.696" endtime="20201110 08:34:04.089"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.097" endtime="20201110 08:34:04.114"></status>
</kw>
<msg timestamp="20201110 08:34:04.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.096" endtime="20201110 08:34:04.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.115" endtime="20201110 08:34:04.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.118" endtime="20201110 08:34:04.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.093" endtime="20201110 08:34:04.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.091" endtime="20201110 08:34:04.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.127" endtime="20201110 08:34:04.416"></status>
</kw>
<msg timestamp="20201110 08:34:04.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.125" endtime="20201110 08:34:04.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.421" endtime="20201110 08:34:04.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.430" endtime="20201110 08:34:04.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.123" endtime="20201110 08:34:04.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.121" endtime="20201110 08:34:04.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.437" level="INFO">${RESULT} = [{'time': 0.022241236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.022257583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:04.433" endtime="20201110 08:34:04.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.451" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:04.438" endtime="20201110 08:34:04.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.455" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.454" endtime="20201110 08:34:04.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.458" level="INFO">VALUE: [8.694000000000063e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.666999999996927e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.665999999997454e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.693999999996593e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.666999999996927e-06, 8.721999999999203e-06, 8.624999999998217e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.597000000002547e-06, 8.694999999999536e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201110 08:34:04.456" endtime="20201110 08:34:04.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.451" endtime="20201110 08:34:04.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.462" endtime="20201110 08:34:04.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.465" endtime="20201110 08:34:04.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.464" endtime="20201110 08:34:04.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.460" endtime="20201110 08:34:04.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.090" endtime="20201110 08:34:04.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.089" endtime="20201110 08:34:04.486"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.495" endtime="20201110 08:34:04.512"></status>
</kw>
<msg timestamp="20201110 08:34:04.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.493" endtime="20201110 08:34:04.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.513" endtime="20201110 08:34:04.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.516" endtime="20201110 08:34:04.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.491" endtime="20201110 08:34:04.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.489" endtime="20201110 08:34:04.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.525" endtime="20201110 08:34:04.839"></status>
</kw>
<msg timestamp="20201110 08:34:04.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021754583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.524" endtime="20201110 08:34:04.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021754583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.844" endtime="20201110 08:34:04.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.852" endtime="20201110 08:34:04.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.521" endtime="20201110 08:34:04.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.519" endtime="20201110 08:34:04.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.859" level="INFO">${RESULT} = [{'time': 0.021763222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.021782361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:04.856" endtime="20201110 08:34:04.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.873" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:04.860" endtime="20201110 08:34:04.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.878" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.876" endtime="20201110 08:34:04.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.880" level="INFO">VALUE: [8.638999999997787e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.652000000001353e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.610999999998648e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.666000000000923e-06, 8.651999999997884e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.681000000003436e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.624999999998217e-06, 8.651999999997884e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201110 08:34:04.879" endtime="20201110 08:34:04.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.874" endtime="20201110 08:34:04.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.884" endtime="20201110 08:34:04.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.888" endtime="20201110 08:34:04.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.886" endtime="20201110 08:34:04.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.882" endtime="20201110 08:34:04.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.487" endtime="20201110 08:34:04.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.486" endtime="20201110 08:34:04.909"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.918" endtime="20201110 08:34:04.933"></status>
</kw>
<msg timestamp="20201110 08:34:04.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.916" endtime="20201110 08:34:04.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.935" endtime="20201110 08:34:04.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.938" endtime="20201110 08:34:04.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.914" endtime="20201110 08:34:04.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.911" endtime="20201110 08:34:04.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.947" endtime="20201110 08:34:05.240"></status>
</kw>
<msg timestamp="20201110 08:34:05.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021174111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021182778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.945" endtime="20201110 08:34:05.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021174111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021182778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.244" endtime="20201110 08:34:05.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.253" endtime="20201110 08:34:05.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.943" endtime="20201110 08:34:05.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.941" endtime="20201110 08:34:05.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.260" level="INFO">${RESULT} = [{'time': 0.021182778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.021198917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:05.256" endtime="20201110 08:34:05.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.274" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:05.261" endtime="20201110 08:34:05.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.278" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.277" endtime="20201110 08:34:05.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.281" level="INFO">VALUE: [8.667000000000397e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.651999999997884e-06, 8.666999999996927e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201110 08:34:05.279" endtime="20201110 08:34:05.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.275" endtime="20201110 08:34:05.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.285" endtime="20201110 08:34:05.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.288" endtime="20201110 08:34:05.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.287" endtime="20201110 08:34:05.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.283" endtime="20201110 08:34:05.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.910" endtime="20201110 08:34:05.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.909" endtime="20201110 08:34:05.309"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.318" endtime="20201110 08:34:05.335"></status>
</kw>
<msg timestamp="20201110 08:34:05.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.317" endtime="20201110 08:34:05.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.337" endtime="20201110 08:34:05.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.339" endtime="20201110 08:34:05.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.314" endtime="20201110 08:34:05.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.312" endtime="20201110 08:34:05.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.352" endtime="20201110 08:34:05.641"></status>
</kw>
<msg timestamp="20201110 08:34:05.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.348" endtime="20201110 08:34:05.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.645" endtime="20201110 08:34:05.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.653" endtime="20201110 08:34:05.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.345" endtime="20201110 08:34:05.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.343" endtime="20201110 08:34:05.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.660" level="INFO">${RESULT} = [{'time': 0.022342694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.022355931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:05.656" endtime="20201110 08:34:05.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.673" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:05.661" endtime="20201110 08:34:05.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.677" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.676" endtime="20201110 08:34:05.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.680" level="INFO">VALUE: [8.680000000000493e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.59800000000202e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.764000000001382e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.679999999997023e-06, 8.651999999997884e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.611000000002117e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.610999999998648e-06, 8.708999999999106e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201110 08:34:05.679" endtime="20201110 08:34:05.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.674" endtime="20201110 08:34:05.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.683" endtime="20201110 08:34:05.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.687" endtime="20201110 08:34:05.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.685" endtime="20201110 08:34:05.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.682" endtime="20201110 08:34:05.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.310" endtime="20201110 08:34:05.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.310" endtime="20201110 08:34:05.708"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.716" endtime="20201110 08:34:05.733"></status>
</kw>
<msg timestamp="20201110 08:34:05.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.715" endtime="20201110 08:34:05.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.735" endtime="20201110 08:34:05.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.737" endtime="20201110 08:34:05.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.712" endtime="20201110 08:34:05.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.710" endtime="20201110 08:34:05.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.746" endtime="20201110 08:34:06.038"></status>
</kw>
<msg timestamp="20201110 08:34:06.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02087575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020884472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:05.745" endtime="20201110 08:34:06.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02087575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020884472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:06.043" endtime="20201110 08:34:06.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.054" endtime="20201110 08:34:06.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.742" endtime="20201110 08:34:06.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.741" endtime="20201110 08:34:06.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.064" level="INFO">${RESULT} = [{'time': 0.020884472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.020902319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:06.059" endtime="20201110 08:34:06.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.082" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:06.066" endtime="20201110 08:34:06.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.088" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.086" endtime="20201110 08:34:06.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.090" level="INFO">VALUE: [8.722000000002672e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.666999999996927e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.651999999997884e-06, 8.610999999998648e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.639000000001257e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.610999999998648e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.652999999997357e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201110 08:34:06.089" endtime="20201110 08:34:06.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.083" endtime="20201110 08:34:06.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.095" endtime="20201110 08:34:06.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.099" endtime="20201110 08:34:06.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.097" endtime="20201110 08:34:06.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.093" endtime="20201110 08:34:06.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.709" endtime="20201110 08:34:06.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.708" endtime="20201110 08:34:06.120"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.129" endtime="20201110 08:34:06.144"></status>
</kw>
<msg timestamp="20201110 08:34:06.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.127" endtime="20201110 08:34:06.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.146" endtime="20201110 08:34:06.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.148" endtime="20201110 08:34:06.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.125" endtime="20201110 08:34:06.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.123" endtime="20201110 08:34:06.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.157" endtime="20201110 08:34:06.445"></status>
</kw>
<msg timestamp="20201110 08:34:06.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020487056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.155" endtime="20201110 08:34:06.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020487056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.449" endtime="20201110 08:34:06.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.457" endtime="20201110 08:34:06.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.153" endtime="20201110 08:34:06.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.151" endtime="20201110 08:34:06.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.464" level="INFO">${RESULT} = [{'time': 0.020487056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.020502653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:06.461" endtime="20201110 08:34:06.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.477" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:06.465" endtime="20201110 08:34:06.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.482" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.481" endtime="20201110 08:34:06.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.484" level="INFO">VALUE: [8.653000000000827e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.708000000003102e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.625000000001687e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.737000000001716e-06, 8.680999999999967e-06, 8.695000000003006e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.749999999998342e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201110 08:34:06.483" endtime="20201110 08:34:06.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.478" endtime="20201110 08:34:06.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.488" endtime="20201110 08:34:06.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.491" endtime="20201110 08:34:06.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.490" endtime="20201110 08:34:06.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.486" endtime="20201110 08:34:06.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.121" endtime="20201110 08:34:06.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.121" endtime="20201110 08:34:06.512"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.521" endtime="20201110 08:34:06.540"></status>
</kw>
<msg timestamp="20201110 08:34:06.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.519" endtime="20201110 08:34:06.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.541" endtime="20201110 08:34:06.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.544" endtime="20201110 08:34:06.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.517" endtime="20201110 08:34:06.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.515" endtime="20201110 08:34:06.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.552" endtime="20201110 08:34:06.840"></status>
</kw>
<msg timestamp="20201110 08:34:06.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.551" endtime="20201110 08:34:06.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.844" endtime="20201110 08:34:06.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.853" endtime="20201110 08:34:06.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.548" endtime="20201110 08:34:06.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.547" endtime="20201110 08:34:06.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.859" level="INFO">${RESULT} = [{'time': 0.020306458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.020321972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:06.856" endtime="20201110 08:34:06.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.872" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:06.860" endtime="20201110 08:34:06.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.877" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.876" endtime="20201110 08:34:06.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.879" level="INFO">VALUE: [8.666000000000923e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.721999999999203e-06, 8.638999999997787e-06, 8.680999999999967e-06, 8.695000000003006e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.625000000001687e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.763999999997912e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.624999999998217e-06, 8.735999999998773e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.651999999997884e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.625000000001687e-06, 8.652000000001353e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201110 08:34:06.878" endtime="20201110 08:34:06.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.873" endtime="20201110 08:34:06.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.883" endtime="20201110 08:34:06.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.886" endtime="20201110 08:34:06.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.885" endtime="20201110 08:34:06.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.881" endtime="20201110 08:34:06.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.513" endtime="20201110 08:34:06.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.512" endtime="20201110 08:34:06.907"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.916" endtime="20201110 08:34:06.932"></status>
</kw>
<msg timestamp="20201110 08:34:06.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.914" endtime="20201110 08:34:06.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.934" endtime="20201110 08:34:06.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.936" endtime="20201110 08:34:06.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.912" endtime="20201110 08:34:06.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.910" endtime="20201110 08:34:06.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.945" endtime="20201110 08:34:07.234"></status>
</kw>
<msg timestamp="20201110 08:34:07.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022113194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.944" endtime="20201110 08:34:07.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022113194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.238" endtime="20201110 08:34:07.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.246" endtime="20201110 08:34:07.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.941" endtime="20201110 08:34:07.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.939" endtime="20201110 08:34:07.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.253" level="INFO">${RESULT} = [{'time': 0.022121819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.022140458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:07.250" endtime="20201110 08:34:07.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.266" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:07.254" endtime="20201110 08:34:07.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.271" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.270" endtime="20201110 08:34:07.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.273" level="INFO">VALUE: [8.625000000001687e-06, 8.693999999996593e-06, 8.666000000000923e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.665999999997454e-06, 8.653000000000827e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.624999999998217e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.736000000002242e-06, 8.653000000000827e-06, 8.652000000001353e-06, 8.667000000000397e-06, 8.679999999997023e-06, 8.639000000001257e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.666999999996927e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.611000000002117e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201110 08:34:07.272" endtime="20201110 08:34:07.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.267" endtime="20201110 08:34:07.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.277" endtime="20201110 08:34:07.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.280" endtime="20201110 08:34:07.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.279" endtime="20201110 08:34:07.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.275" endtime="20201110 08:34:07.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.908" endtime="20201110 08:34:07.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.908" endtime="20201110 08:34:07.301"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.310" endtime="20201110 08:34:07.329"></status>
</kw>
<msg timestamp="20201110 08:34:07.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.308" endtime="20201110 08:34:07.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.330" endtime="20201110 08:34:07.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.333" endtime="20201110 08:34:07.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.306" endtime="20201110 08:34:07.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.304" endtime="20201110 08:34:07.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.342" endtime="20201110 08:34:07.629"></status>
</kw>
<msg timestamp="20201110 08:34:07.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025040278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.340" endtime="20201110 08:34:07.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025040278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.633" endtime="20201110 08:34:07.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.641" endtime="20201110 08:34:07.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.338" endtime="20201110 08:34:07.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.336" endtime="20201110 08:34:07.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.648" level="INFO">${RESULT} = [{'time': 0.025048972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.025061833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:07.644" endtime="20201110 08:34:07.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.661" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:07.649" endtime="20201110 08:34:07.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.665" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.664" endtime="20201110 08:34:07.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.668" level="INFO">VALUE: [8.694000000000063e-06, 8.651999999997884e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.625000000001687e-06, 8.695000000003006e-06, 8.666000000000923e-06, 8.764000000001382e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.652999999997357e-06, 8.638999999997787e-06, 8.639000000001257e-06, 8.638999999997787e-06, 8.680999999999967e-06, 8.625000000001687e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.722999999998676e-06]</msg>
<status status="PASS" starttime="20201110 08:34:07.666" endtime="20201110 08:34:07.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.662" endtime="20201110 08:34:07.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.671" endtime="20201110 08:34:07.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.675" endtime="20201110 08:34:07.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.673" endtime="20201110 08:34:07.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.670" endtime="20201110 08:34:07.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.302" endtime="20201110 08:34:07.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.302" endtime="20201110 08:34:07.696"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.704" endtime="20201110 08:34:07.727"></status>
</kw>
<msg timestamp="20201110 08:34:07.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.703" endtime="20201110 08:34:07.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.728" endtime="20201110 08:34:07.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.731" endtime="20201110 08:34:07.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.700" endtime="20201110 08:34:07.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.698" endtime="20201110 08:34:07.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.739" endtime="20201110 08:34:08.026"></status>
</kw>
<msg timestamp="20201110 08:34:08.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022573097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.738" endtime="20201110 08:34:08.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022573097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.030" endtime="20201110 08:34:08.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.038" endtime="20201110 08:34:08.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.735" endtime="20201110 08:34:08.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.734" endtime="20201110 08:34:08.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.045" level="INFO">${RESULT} = [{'time': 0.022573097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.0225905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:08.042" endtime="20201110 08:34:08.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.058" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:08.046" endtime="20201110 08:34:08.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.063" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.062" endtime="20201110 08:34:08.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.066" level="INFO">VALUE: [8.666000000000923e-06, 8.638999999997787e-06, 8.680000000000493e-06, 8.666999999996927e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.582999999999508e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.708000000003102e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.666999999996927e-06, 8.625000000001687e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.639000000001257e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201110 08:34:08.065" endtime="20201110 08:34:08.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.059" endtime="20201110 08:34:08.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.075" endtime="20201110 08:34:08.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.079" endtime="20201110 08:34:08.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.077" endtime="20201110 08:34:08.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.074" endtime="20201110 08:34:08.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.697" endtime="20201110 08:34:08.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.696" endtime="20201110 08:34:08.100"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.108" endtime="20201110 08:34:08.123"></status>
</kw>
<msg timestamp="20201110 08:34:08.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.107" endtime="20201110 08:34:08.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.125" endtime="20201110 08:34:08.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.127" endtime="20201110 08:34:08.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.104" endtime="20201110 08:34:08.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.102" endtime="20201110 08:34:08.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.136" endtime="20201110 08:34:08.423"></status>
</kw>
<msg timestamp="20201110 08:34:08.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020432917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.135" endtime="20201110 08:34:08.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020432917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.427" endtime="20201110 08:34:08.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.435" endtime="20201110 08:34:08.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.132" endtime="20201110 08:34:08.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.130" endtime="20201110 08:34:08.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.442" level="INFO">${RESULT} = [{'time': 0.020441611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.020456181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:08.439" endtime="20201110 08:34:08.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.455" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:08.443" endtime="20201110 08:34:08.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.460" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.459" endtime="20201110 08:34:08.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.462" level="INFO">VALUE: [8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.666999999996927e-06, 8.694999999999536e-06, 8.652000000001353e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.679999999997023e-06, 8.611000000002117e-06, 8.695000000003006e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.666999999996927e-06, 8.735999999998773e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.764000000001382e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.652000000001353e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.653000000000827e-06]</msg>
<status status="PASS" starttime="20201110 08:34:08.461" endtime="20201110 08:34:08.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.456" endtime="20201110 08:34:08.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.466" endtime="20201110 08:34:08.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.469" endtime="20201110 08:34:08.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.468" endtime="20201110 08:34:08.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.464" endtime="20201110 08:34:08.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.101" endtime="20201110 08:34:08.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.100" endtime="20201110 08:34:08.490"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.499" endtime="20201110 08:34:08.515"></status>
</kw>
<msg timestamp="20201110 08:34:08.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.497" endtime="20201110 08:34:08.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.516" endtime="20201110 08:34:08.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.519" endtime="20201110 08:34:08.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.494" endtime="20201110 08:34:08.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.492" endtime="20201110 08:34:08.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.528" endtime="20201110 08:34:08.815"></status>
</kw>
<msg timestamp="20201110 08:34:08.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.526" endtime="20201110 08:34:08.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.820" endtime="20201110 08:34:08.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.829" endtime="20201110 08:34:08.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.524" endtime="20201110 08:34:08.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.522" endtime="20201110 08:34:08.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.835" level="INFO">${RESULT} = [{'time': 0.021930903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.021944319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:08.832" endtime="20201110 08:34:08.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.849" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:08.836" endtime="20201110 08:34:08.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.853" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.852" endtime="20201110 08:34:08.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.855" level="INFO">VALUE: [8.667000000000397e-06, 8.625000000001687e-06, 8.666999999996927e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.625000000001687e-06, 8.694999999999536e-06, 8.666999999996927e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.709000000002576e-06, 8.610999999998648e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.736000000002242e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.624999999998217e-06, 8.665999999997454e-06, 8.680000000000493e-06, 8.625000000001687e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.638999999997787e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.695000000003006e-06, 8.667000000000397e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201110 08:34:08.854" endtime="20201110 08:34:08.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.849" endtime="20201110 08:34:08.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.859" endtime="20201110 08:34:08.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.863" endtime="20201110 08:34:08.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.861" endtime="20201110 08:34:08.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.857" endtime="20201110 08:34:08.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.491" endtime="20201110 08:34:08.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.490" endtime="20201110 08:34:08.883"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.893" endtime="20201110 08:34:08.914"></status>
</kw>
<msg timestamp="20201110 08:34:08.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.892" endtime="20201110 08:34:08.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.915" endtime="20201110 08:34:08.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.918" endtime="20201110 08:34:08.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.889" endtime="20201110 08:34:08.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.887" endtime="20201110 08:34:08.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.926" endtime="20201110 08:34:09.214"></status>
</kw>
<msg timestamp="20201110 08:34:09.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025425972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025434639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.925" endtime="20201110 08:34:09.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025425972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025434639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.218" endtime="20201110 08:34:09.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.226" endtime="20201110 08:34:09.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.923" endtime="20201110 08:34:09.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.921" endtime="20201110 08:34:09.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.233" level="INFO">${RESULT} = [{'time': 0.025434639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.666999999996927e-06, 'source_diff': 8.666999999996927e-06}, {'time': 0.025448083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:09.230" endtime="20201110 08:34:09.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.246" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:09.234" endtime="20201110 08:34:09.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.251" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.250" endtime="20201110 08:34:09.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.253" level="INFO">VALUE: [8.666999999996927e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.59800000000202e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.624999999998217e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.610999999998648e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.624999999998217e-06, 8.652000000001353e-06, 8.652999999997357e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.652000000001353e-06, 8.693999999996593e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201110 08:34:09.252" endtime="20201110 08:34:09.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.247" endtime="20201110 08:34:09.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.257" endtime="20201110 08:34:09.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.260" endtime="20201110 08:34:09.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.259" endtime="20201110 08:34:09.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.255" endtime="20201110 08:34:09.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.885" endtime="20201110 08:34:09.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.884" endtime="20201110 08:34:09.281"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.290" endtime="20201110 08:34:09.309"></status>
</kw>
<msg timestamp="20201110 08:34:09.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.288" endtime="20201110 08:34:09.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.311" endtime="20201110 08:34:09.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.313" endtime="20201110 08:34:09.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.286" endtime="20201110 08:34:09.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.284" endtime="20201110 08:34:09.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.322" endtime="20201110 08:34:09.607"></status>
</kw>
<msg timestamp="20201110 08:34:09.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024503611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024512292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.320" endtime="20201110 08:34:09.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024503611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024512292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.611" endtime="20201110 08:34:09.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.620" endtime="20201110 08:34:09.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.318" endtime="20201110 08:34:09.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.316" endtime="20201110 08:34:09.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.626" level="INFO">${RESULT} = [{'time': 0.024512292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.024531417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:09.623" endtime="20201110 08:34:09.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.639" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:09.627" endtime="20201110 08:34:09.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.644" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.643" endtime="20201110 08:34:09.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.646" level="INFO">VALUE: [8.680999999999967e-06, 8.597999999998551e-06, 8.667000000000397e-06, 8.666999999996927e-06, 8.653000000000827e-06, 8.750000000001812e-06, 8.723000000002146e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.625000000001687e-06, 8.680999999999967e-06, 8.695000000003006e-06, 8.611000000002117e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.625000000001687e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.763999999997912e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.764000000001382e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.665999999997454e-06, 8.764000000001382e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201110 08:34:09.645" endtime="20201110 08:34:09.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.640" endtime="20201110 08:34:09.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.650" endtime="20201110 08:34:09.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.653" endtime="20201110 08:34:09.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.652" endtime="20201110 08:34:09.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.648" endtime="20201110 08:34:09.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.282" endtime="20201110 08:34:09.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.282" endtime="20201110 08:34:09.674"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.683" endtime="20201110 08:34:09.704"></status>
</kw>
<msg timestamp="20201110 08:34:09.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.681" endtime="20201110 08:34:09.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.705" endtime="20201110 08:34:09.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.708" endtime="20201110 08:34:09.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.678" endtime="20201110 08:34:09.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.676" endtime="20201110 08:34:09.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.716" endtime="20201110 08:34:10.002"></status>
</kw>
<msg timestamp="20201110 08:34:10.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023575528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023584222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.715" endtime="20201110 08:34:10.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023575528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023584222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.007" endtime="20201110 08:34:10.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.015" endtime="20201110 08:34:10.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.712" endtime="20201110 08:34:10.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.711" endtime="20201110 08:34:10.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.021" level="INFO">${RESULT} = [{'time': 0.023584222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.023602917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:10.018" endtime="20201110 08:34:10.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.035" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:10.022" endtime="20201110 08:34:10.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.039" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.038" endtime="20201110 08:34:10.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.042" level="INFO">VALUE: [8.694000000000063e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.652999999997357e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.653000000000827e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.665999999997454e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.665999999997454e-06, 8.666999999996927e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.639000000001257e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201110 08:34:10.040" endtime="20201110 08:34:10.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.035" endtime="20201110 08:34:10.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.045" endtime="20201110 08:34:10.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.049" endtime="20201110 08:34:10.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.047" endtime="20201110 08:34:10.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.044" endtime="20201110 08:34:10.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.675" endtime="20201110 08:34:10.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.674" endtime="20201110 08:34:10.070"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.078" endtime="20201110 08:34:10.097"></status>
</kw>
<msg timestamp="20201110 08:34:10.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.077" endtime="20201110 08:34:10.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.099" endtime="20201110 08:34:10.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.102" endtime="20201110 08:34:10.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.074" endtime="20201110 08:34:10.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.072" endtime="20201110 08:34:10.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.111" endtime="20201110 08:34:10.399"></status>
</kw>
<msg timestamp="20201110 08:34:10.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024717861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024726528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.110" endtime="20201110 08:34:10.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024717861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024726528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.403" endtime="20201110 08:34:10.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.411" endtime="20201110 08:34:10.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.107" endtime="20201110 08:34:10.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.105" endtime="20201110 08:34:10.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.418" level="INFO">${RESULT} = [{'time': 0.024726528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.024743583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:10.414" endtime="20201110 08:34:10.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.431" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:10.419" endtime="20201110 08:34:10.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.435" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.434" endtime="20201110 08:34:10.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.438" level="INFO">VALUE: [8.667000000000397e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.666999999996927e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.610999999998648e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.722000000002672e-06, 8.667000000000397e-06, 8.708000000003102e-06, 8.679999999997023e-06]</msg>
<status status="PASS" starttime="20201110 08:34:10.436" endtime="20201110 08:34:10.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.432" endtime="20201110 08:34:10.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.441" endtime="20201110 08:34:10.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.445" endtime="20201110 08:34:10.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.443" endtime="20201110 08:34:10.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.440" endtime="20201110 08:34:10.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.071" endtime="20201110 08:34:10.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.070" endtime="20201110 08:34:10.466"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.474" endtime="20201110 08:34:10.490"></status>
</kw>
<msg timestamp="20201110 08:34:10.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.473" endtime="20201110 08:34:10.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.491" endtime="20201110 08:34:10.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.494" endtime="20201110 08:34:10.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.470" endtime="20201110 08:34:10.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.468" endtime="20201110 08:34:10.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.503" endtime="20201110 08:34:10.790"></status>
</kw>
<msg timestamp="20201110 08:34:10.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020692528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020701181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.501" endtime="20201110 08:34:10.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020692528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020701181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.794" endtime="20201110 08:34:10.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.802" endtime="20201110 08:34:10.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.499" endtime="20201110 08:34:10.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.497" endtime="20201110 08:34:10.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.809" level="INFO">${RESULT} = [{'time': 0.020701181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.652999999997357e-06, 'source_diff': 8.652999999997357e-06}, {'time': 0.020717542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:10.805" endtime="20201110 08:34:10.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.822" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:10.810" endtime="20201110 08:34:10.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.826" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.825" endtime="20201110 08:34:10.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.829" level="INFO">VALUE: [8.652999999997357e-06, 8.708999999999106e-06, 8.666000000000923e-06, 8.735999999998773e-06, 8.611000000002117e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.665999999997454e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.652000000001353e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.666999999996927e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.694999999999536e-06, 8.624999999998217e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.624999999998217e-06, 8.707999999999633e-06, 8.679999999997023e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.639000000001257e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.638000000001783e-06, 8.610999999998648e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201110 08:34:10.827" endtime="20201110 08:34:10.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.823" endtime="20201110 08:34:10.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.832" endtime="20201110 08:34:10.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.836" endtime="20201110 08:34:10.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.834" endtime="20201110 08:34:10.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.831" endtime="20201110 08:34:10.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.467" endtime="20201110 08:34:10.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.466" endtime="20201110 08:34:10.857"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.865" endtime="20201110 08:34:10.886"></status>
</kw>
<msg timestamp="20201110 08:34:10.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.864" endtime="20201110 08:34:10.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.887" endtime="20201110 08:34:10.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.890" endtime="20201110 08:34:10.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.861" endtime="20201110 08:34:10.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.859" endtime="20201110 08:34:10.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.899" endtime="20201110 08:34:11.185"></status>
</kw>
<msg timestamp="20201110 08:34:11.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.897" endtime="20201110 08:34:11.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.190" endtime="20201110 08:34:11.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.198" endtime="20201110 08:34:11.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.894" endtime="20201110 08:34:11.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.893" endtime="20201110 08:34:11.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.204" level="INFO">${RESULT} = [{'time': 0.021638139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.021651861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:11.201" endtime="20201110 08:34:11.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.218" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:11.205" endtime="20201110 08:34:11.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.224" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.223" endtime="20201110 08:34:11.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.227" level="INFO">VALUE: [8.680999999999967e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.652000000001353e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.737000000001716e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.709000000002576e-06, 8.652999999997357e-06, 8.665999999997454e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.695000000003006e-06]</msg>
<status status="PASS" starttime="20201110 08:34:11.225" endtime="20201110 08:34:11.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.219" endtime="20201110 08:34:11.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.232" endtime="20201110 08:34:11.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.236" endtime="20201110 08:34:11.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.235" endtime="20201110 08:34:11.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.229" endtime="20201110 08:34:11.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.858" endtime="20201110 08:34:11.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.857" endtime="20201110 08:34:11.258"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.267" endtime="20201110 08:34:11.283"></status>
</kw>
<msg timestamp="20201110 08:34:11.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.265" endtime="20201110 08:34:11.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.285" endtime="20201110 08:34:11.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.287" endtime="20201110 08:34:11.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.263" endtime="20201110 08:34:11.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.261" endtime="20201110 08:34:11.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.296" endtime="20201110 08:34:11.583"></status>
</kw>
<msg timestamp="20201110 08:34:11.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022791458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022800097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.294" endtime="20201110 08:34:11.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022791458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022800097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.587" endtime="20201110 08:34:11.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.595" endtime="20201110 08:34:11.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.292" endtime="20201110 08:34:11.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.290" endtime="20201110 08:34:11.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.602" level="INFO">${RESULT} = [{'time': 0.022800097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.022817361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:11.599" endtime="20201110 08:34:11.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.615" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:11.603" endtime="20201110 08:34:11.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.620" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.619" endtime="20201110 08:34:11.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.622" level="INFO">VALUE: [8.638999999997787e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.665999999997454e-06, 8.694000000000063e-06, 8.624999999998217e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.694999999999536e-06, 8.750000000001812e-06, 8.652000000001353e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.651999999997884e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.708000000003102e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.764000000001382e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201110 08:34:11.621" endtime="20201110 08:34:11.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.616" endtime="20201110 08:34:11.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.626" endtime="20201110 08:34:11.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.629" endtime="20201110 08:34:11.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.627" endtime="20201110 08:34:11.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.624" endtime="20201110 08:34:11.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.259" endtime="20201110 08:34:11.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.259" endtime="20201110 08:34:11.650"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.658" endtime="20201110 08:34:11.678"></status>
</kw>
<msg timestamp="20201110 08:34:11.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.657" endtime="20201110 08:34:11.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.679" endtime="20201110 08:34:11.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.682" endtime="20201110 08:34:11.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.654" endtime="20201110 08:34:11.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.652" endtime="20201110 08:34:11.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.690" endtime="20201110 08:34:11.978"></status>
</kw>
<msg timestamp="20201110 08:34:11.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.689" endtime="20201110 08:34:11.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.982" endtime="20201110 08:34:11.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.990" endtime="20201110 08:34:11.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.686" endtime="20201110 08:34:11.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.685" endtime="20201110 08:34:11.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.997" level="INFO">${RESULT} = [{'time': 0.022127431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.611999999999121e-06, 'source_diff': 9.611999999999121e-06}, {'time': 0.022157806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:11.994" endtime="20201110 08:34:11.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.010" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:11.998" endtime="20201110 08:34:12.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.015" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.014" endtime="20201110 08:34:12.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.017" level="INFO">VALUE: [9.611999999999121e-06, 2.2097999999998175e-05, 2.3999999999999716e-05, 2.3958000000001006e-05, 2.59170000000003e-05, 2.3986000000000146e-05, 2.3083999999999605e-05, 2.2084000000002074e-05, 2.4943999999998967e-05, 2.10969999999977e-05, 2.3999999999999716e-05, 2.493099999999887e-05, 2.4944000000002436e-05, 2.588899999999769e-05, 2.4943999999998967e-05, 2.5847999999998456e-05, 2.10830000000016e-05, 2.2097999999998175e-05, 2.013899999999888e-05, 2.0151999999998976e-05, 2.3999999999999716e-05, 2.3026999999998382e-05, 2.3986000000000146e-05, 2.487500000000059e-05, 2.1084000000001074e-05, 2.5887999999998218e-05, 2.493099999999887e-05, 2.115299999999945e-05, 2.112500000000031e-05, 2.2041999999999895e-05, 2.115299999999945e-05, 2.211099999999827e-05, 2.018099999999759e-05, 2.397300000000005e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.3999999999999716e-05, 2.10969999999977e-05, 2.4943999999998967e-05, 2.4041999999998426e-05, 2.4944000000002436e-05, 2.6846999999999982e-05, 2.488900000000016e-05, 2.3929999999998397e-05, 2.3958000000001006e-05, 2.494499999999844e-05, 2.4929999999999397e-05, 2.5943999999999967e-05, 2.3986000000000146e-05, 2.3026999999998382e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.016" endtime="20201110 08:34:12.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.011" endtime="20201110 08:34:12.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.021" endtime="20201110 08:34:12.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.024" endtime="20201110 08:34:12.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.023" endtime="20201110 08:34:12.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.019" endtime="20201110 08:34:12.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.651" endtime="20201110 08:34:12.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.650" endtime="20201110 08:34:12.045"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.054" endtime="20201110 08:34:12.078"></status>
</kw>
<msg timestamp="20201110 08:34:12.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.052" endtime="20201110 08:34:12.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.079" endtime="20201110 08:34:12.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.082" endtime="20201110 08:34:12.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.050" endtime="20201110 08:34:12.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.047" endtime="20201110 08:34:12.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.091" endtime="20201110 08:34:12.379"></status>
</kw>
<msg timestamp="20201110 08:34:12.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023829069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023841569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.089" endtime="20201110 08:34:12.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023829069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023841569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.383" endtime="20201110 08:34:12.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.391" endtime="20201110 08:34:12.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.087" endtime="20201110 08:34:12.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.085" endtime="20201110 08:34:12.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.398" level="INFO">${RESULT} = [{'time': 0.023841569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.023872569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:12.394" endtime="20201110 08:34:12.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.411" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:12.399" endtime="20201110 08:34:12.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.415" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.414" endtime="20201110 08:34:12.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.418" level="INFO">VALUE: [1.2499999999998623e-05, 2.4915999999999827e-05, 2.119500000000163e-05, 2.4042000000001895e-05, 2.690300000000173e-05, 2.497300000000105e-05, 2.205499999999999e-05, 2.1056000000001934e-05, 2.3986000000000146e-05, 2.012499999999931e-05, 2.3986000000000146e-05, 2.112500000000031e-05, 2.2055999999999465e-05, 2.206899999999956e-05, 2.4915999999999827e-05, 2.015299999999845e-05, 2.113899999999988e-05, 2.4972000000001576e-05, 2.411100000000027e-05, 2.3999999999999716e-05, 2.106899999999856e-05, 2.2999999999998716e-05, 2.3014000000001755e-05, 2.016700000000149e-05, 2.10969999999977e-05, 2.4957999999998537e-05, 2.590300000000073e-05, 2.3042000000000895e-05, 2.3986000000000146e-05, 2.3028000000001325e-05, 2.5957999999999537e-05, 2.3056000000000465e-05, 2.2069999999999035e-05, 2.3972000000000576e-05, 2.590300000000073e-05, 2.3026999999998382e-05, 2.2083999999998605e-05, 2.111100000000074e-05, 2.6874999999999122e-05, 2.206899999999956e-05, 2.3986000000000146e-05, 2.2083999999998605e-05, 2.494499999999844e-05, 2.302700000000185e-05, 2.205499999999999e-05, 2.015299999999845e-05, 2.111100000000074e-05, 2.013899999999888e-05, 2.3972000000000576e-05, 2.4971999999998107e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.416" endtime="20201110 08:34:12.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.412" endtime="20201110 08:34:12.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.421" endtime="20201110 08:34:12.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.425" endtime="20201110 08:34:12.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.423" endtime="20201110 08:34:12.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.420" endtime="20201110 08:34:12.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.046" endtime="20201110 08:34:12.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.045" endtime="20201110 08:34:12.445"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.454" endtime="20201110 08:34:12.472"></status>
</kw>
<msg timestamp="20201110 08:34:12.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.453" endtime="20201110 08:34:12.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.474" endtime="20201110 08:34:12.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.476" endtime="20201110 08:34:12.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.450" endtime="20201110 08:34:12.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.448" endtime="20201110 08:34:12.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.485" endtime="20201110 08:34:12.772"></status>
</kw>
<msg timestamp="20201110 08:34:12.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020394611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020429278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.483" endtime="20201110 08:34:12.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020394611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020429278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.776" endtime="20201110 08:34:12.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.784" endtime="20201110 08:34:12.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.481" endtime="20201110 08:34:12.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.479" endtime="20201110 08:34:12.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.791" level="INFO">${RESULT} = [{'time': 0.020429278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.466699999999864e-05, 'source_diff': 3.466699999999864e-05}, {'time': 0.020459153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:12.787" endtime="20201110 08:34:12.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.805" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:12.792" endtime="20201110 08:34:12.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.811" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.809" endtime="20201110 08:34:12.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.814" level="INFO">VALUE: [3.466699999999864e-05, 2.593099999999987e-05, 2.5901999999997788e-05, 2.488900000000016e-05, 2.3944000000001436e-05, 2.588900000000116e-05, 2.209700000000217e-05, 2.493099999999887e-05, 2.6846999999999982e-05, 2.3028000000001325e-05, 2.3013999999998286e-05, 2.0151999999998976e-05, 2.113900000000335e-05, 2.593099999999987e-05, 2.208299999999913e-05, 2.3986000000000146e-05, 2.111099999999727e-05, 2.6804999999997803e-05, 2.116699999999902e-05, 2.495900000000148e-05, 2.20969999999987e-05, 2.0165999999998546e-05, 2.4957999999998537e-05, 2.4957999999998537e-05, 2.2971999999999576e-05, 2.4929999999999397e-05, 2.488900000000016e-05, 2.2041999999999895e-05, 2.3013999999998286e-05, 2.0180000000001586e-05, 2.493099999999887e-05, 2.3013999999998286e-05, 2.306900000000056e-05, 2.218099999999959e-05, 2.112500000000031e-05, 2.3042000000000895e-05, 2.3986000000000146e-05, 2.112500000000031e-05, 2.2999999999998716e-05, 2.2056000000002934e-05, 2.0137999999999406e-05, 2.009700000000017e-05, 2.111100000000074e-05, 2.6860999999999552e-05, 2.590299999999726e-05, 2.208299999999913e-05, 2.590299999999726e-05, 2.3944000000001436e-05, 2.4972000000001576e-05, 2.6833000000000412e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.812" endtime="20201110 08:34:12.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.806" endtime="20201110 08:34:12.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.819" endtime="20201110 08:34:12.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.823" endtime="20201110 08:34:12.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.821" endtime="20201110 08:34:12.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.817" endtime="20201110 08:34:12.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.446" endtime="20201110 08:34:12.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.446" endtime="20201110 08:34:12.845"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.853" endtime="20201110 08:34:12.874"></status>
</kw>
<msg timestamp="20201110 08:34:12.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.852" endtime="20201110 08:34:12.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.875" endtime="20201110 08:34:12.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.878" endtime="20201110 08:34:12.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.849" endtime="20201110 08:34:12.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.847" endtime="20201110 08:34:12.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.887" endtime="20201110 08:34:13.173"></status>
</kw>
<msg timestamp="20201110 08:34:13.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023357444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02339475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:12.885" endtime="20201110 08:34:13.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023357444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02339475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:13.177" endtime="20201110 08:34:13.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.186" endtime="20201110 08:34:13.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.883" endtime="20201110 08:34:13.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.881" endtime="20201110 08:34:13.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.192" level="INFO">${RESULT} = [{'time': 0.02339475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.730599999999737e-05, 'source_diff': 3.730599999999737e-05}, {'time': 0.023425153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:13.189" endtime="20201110 08:34:13.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.206" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:13.193" endtime="20201110 08:34:13.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.212" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.211" endtime="20201110 08:34:13.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.214" level="INFO">VALUE: [3.730599999999737e-05, 2.490299999999973e-05, 2.6860999999999552e-05, 2.2999999999998716e-05, 2.5916000000000827e-05, 2.4944000000002436e-05, 2.690300000000173e-05, 2.1179999999999116e-05, 2.3040999999997952e-05, 2.2971999999999576e-05, 2.3012999999998812e-05, 2.6860999999999552e-05, 2.0179999999998116e-05, 2.690300000000173e-05, 2.3056000000000465e-05, 2.3986000000000146e-05, 2.590299999999726e-05, 2.206899999999956e-05, 2.111100000000074e-05, 2.588899999999769e-05, 2.4943999999998967e-05, 2.208299999999913e-05, 2.590300000000073e-05, 2.6861999999999026e-05, 2.10830000000016e-05, 2.015300000000192e-05, 2.590300000000073e-05, 2.5000000000000716e-05, 2.39169999999983e-05, 2.013899999999888e-05, 2.208299999999913e-05, 2.1098000000000644e-05, 2.109700000000117e-05, 2.495899999999801e-05, 2.4958000000002006e-05, 2.5901999999997788e-05, 2.109700000000117e-05, 2.211099999999827e-05, 2.3986000000000146e-05, 2.4943999999998967e-05, 2.5916000000000827e-05, 2.4915999999999827e-05, 2.294499999999991e-05, 2.3013999999998286e-05, 2.4972000000001576e-05, 2.208299999999913e-05, 2.3958000000001006e-05, 2.113899999999988e-05, 2.3028000000001325e-05, 2.20969999999987e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.213" endtime="20201110 08:34:13.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.207" endtime="20201110 08:34:13.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.218" endtime="20201110 08:34:13.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.221" endtime="20201110 08:34:13.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.220" endtime="20201110 08:34:13.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.216" endtime="20201110 08:34:13.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.845" endtime="20201110 08:34:13.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.845" endtime="20201110 08:34:13.242"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.251" endtime="20201110 08:34:13.270"></status>
</kw>
<msg timestamp="20201110 08:34:13.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.249" endtime="20201110 08:34:13.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.272" endtime="20201110 08:34:13.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.274" endtime="20201110 08:34:13.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.247" endtime="20201110 08:34:13.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.245" endtime="20201110 08:34:13.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.283" endtime="20201110 08:34:13.570"></status>
</kw>
<msg timestamp="20201110 08:34:13.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022311403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.282" endtime="20201110 08:34:13.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022311403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.574" endtime="20201110 08:34:13.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.583" endtime="20201110 08:34:13.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.279" endtime="20201110 08:34:13.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.277" endtime="20201110 08:34:13.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.589" level="INFO">${RESULT} = [{'time': 0.022331556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.015299999999845e-05, 'source_diff': 2.015299999999845e-05}, {'time': 0.022362361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:13.586" endtime="20201110 08:34:13.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.603" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:13.590" endtime="20201110 08:34:13.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.607" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.606" endtime="20201110 08:34:13.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.610" level="INFO">VALUE: [2.015299999999845e-05, 2.586100000000202e-05, 2.116699999999902e-05, 2.305500000000099e-05, 2.3042000000000895e-05, 2.0152000000002446e-05, 2.4943999999998967e-05, 2.2028000000000325e-05, 2.204100000000042e-05, 2.2028000000000325e-05, 2.4915999999999827e-05, 2.111100000000074e-05, 2.495900000000148e-05, 2.302700000000185e-05, 2.2999999999998716e-05, 2.111099999999727e-05, 2.3042000000000895e-05, 2.486100000000102e-05, 2.59170000000003e-05, 2.3972000000000576e-05, 2.3972000000000576e-05, 2.5860999999998552e-05, 2.1112000000000214e-05, 2.494500000000191e-05, 2.5847999999998456e-05, 2.106899999999856e-05, 2.394499999999744e-05, 2.015299999999845e-05, 2.3986000000000146e-05, 2.488900000000016e-05, 2.590299999999726e-05, 2.2070000000002504e-05, 2.3013999999998286e-05, 2.205499999999999e-05, 2.1138000000000406e-05, 2.587500000000159e-05, 2.112500000000031e-05, 2.206899999999956e-05, 2.10969999999977e-05, 2.111100000000074e-05, 2.588900000000116e-05, 2.59170000000003e-05, 2.587500000000159e-05, 2.112500000000031e-05, 2.3972000000000576e-05, 2.3986000000000146e-05, 2.113899999999988e-05, 2.691699999999783e-05, 2.3986000000000146e-05, 2.49169999999993e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.608" endtime="20201110 08:34:13.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.604" endtime="20201110 08:34:13.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.613" endtime="20201110 08:34:13.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.617" endtime="20201110 08:34:13.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.615" endtime="20201110 08:34:13.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.612" endtime="20201110 08:34:13.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.243" endtime="20201110 08:34:13.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.243" endtime="20201110 08:34:13.637"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.646" endtime="20201110 08:34:13.667"></status>
</kw>
<msg timestamp="20201110 08:34:13.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.644" endtime="20201110 08:34:13.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.669" endtime="20201110 08:34:13.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.671" endtime="20201110 08:34:13.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.642" endtime="20201110 08:34:13.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.640" endtime="20201110 08:34:13.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.680" endtime="20201110 08:34:13.969"></status>
</kw>
<msg timestamp="20201110 08:34:13.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024065736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024077306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.678" endtime="20201110 08:34:13.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024065736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024077306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.973" endtime="20201110 08:34:13.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.981" endtime="20201110 08:34:13.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.676" endtime="20201110 08:34:13.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.674" endtime="20201110 08:34:13.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.988" level="INFO">${RESULT} = [{'time': 0.024077306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1569999999998942e-05, 'source_diff': 1.1569999999998942e-05}, {'time': 0.024107236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:13.985" endtime="20201110 08:34:13.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.001" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:13.989" endtime="20201110 08:34:14.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.006" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.005" endtime="20201110 08:34:14.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.008" level="INFO">VALUE: [1.1569999999998942e-05, 2.012499999999931e-05, 2.5832999999999412e-05, 2.2013999999997286e-05, 2.2098000000001644e-05, 2.3971999999997107e-05, 2.015300000000192e-05, 2.4013999999999286e-05, 2.2056000000002934e-05, 2.112500000000031e-05, 2.4957999999998537e-05, 2.112500000000031e-05, 2.4013999999999286e-05, 2.6846999999999982e-05, 2.009700000000017e-05, 2.395900000000048e-05, 2.302700000000185e-05, 2.494499999999844e-05, 2.016700000000149e-05, 2.208299999999913e-05, 2.5874999999998122e-05, 2.4958000000002006e-05, 2.3999999999999716e-05, 2.111099999999727e-05, 2.208299999999913e-05, 2.111100000000074e-05, 2.0166000000002016e-05, 2.306900000000056e-05, 2.2112000000001214e-05, 2.013900000000235e-05, 2.20830000000026e-05, 2.6874999999999122e-05, 2.3929999999998397e-05, 2.3999999999999716e-05, 2.3056000000000465e-05, 2.6846999999999982e-05, 2.0112000000002683e-05, 2.10969999999977e-05, 2.3972000000000576e-05, 2.111100000000074e-05, 2.6847999999999456e-05, 2.3027999999997856e-05, 2.0137999999999406e-05, 2.3957999999997537e-05, 2.3943999999997967e-05, 2.1055999999998465e-05, 2.3999999999999716e-05, 2.3070000000000035e-05, 2.3012999999998812e-05, 2.4972000000001576e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.007" endtime="20201110 08:34:14.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.002" endtime="20201110 08:34:14.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.012" endtime="20201110 08:34:14.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.015" endtime="20201110 08:34:14.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.014" endtime="20201110 08:34:14.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.010" endtime="20201110 08:34:14.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.638" endtime="20201110 08:34:14.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.638" endtime="20201110 08:34:14.036"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.045" endtime="20201110 08:34:14.065"></status>
</kw>
<msg timestamp="20201110 08:34:14.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.043" endtime="20201110 08:34:14.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.067" endtime="20201110 08:34:14.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.069" endtime="20201110 08:34:14.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.041" endtime="20201110 08:34:14.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.039" endtime="20201110 08:34:14.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.078" endtime="20201110 08:34:14.365"></status>
</kw>
<msg timestamp="20201110 08:34:14.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.077" endtime="20201110 08:34:14.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.370" endtime="20201110 08:34:14.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.378" endtime="20201110 08:34:14.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.074" endtime="20201110 08:34:14.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.072" endtime="20201110 08:34:14.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.384" level="INFO">${RESULT} = [{'time': 0.022372861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4402999999999638e-05, 'source_diff': 1.4402999999999638e-05}, {'time': 0.022403458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:14.381" endtime="20201110 08:34:14.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.398" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:14.385" endtime="20201110 08:34:14.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.402" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.401" endtime="20201110 08:34:14.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.405" level="INFO">VALUE: [1.4402999999999638e-05, 2.4915999999999827e-05, 2.4929999999999397e-05, 2.593099999999987e-05, 2.4915999999999827e-05, 2.5000000000000716e-05, 2.20969999999987e-05, 2.4943999999998967e-05, 2.4957999999998537e-05, 2.588899999999769e-05, 2.105499999999899e-05, 2.208299999999913e-05, 2.018100000000106e-05, 2.309700000000317e-05, 2.494499999999844e-05, 2.109700000000117e-05, 2.109700000000117e-05, 2.3083999999999605e-05, 2.3070000000000035e-05, 2.112500000000031e-05, 2.3986000000000146e-05, 2.3999999999999716e-05, 2.6860999999999552e-05, 2.111100000000074e-05, 2.1098000000000644e-05, 2.3999999999999716e-05, 2.493100000000234e-05, 2.112500000000031e-05, 2.4972000000001576e-05, 2.590300000000073e-05, 2.213899999999741e-05, 2.113899999999988e-05, 2.013899999999888e-05, 2.5860999999998552e-05, 2.6847999999999456e-05, 2.3999999999999716e-05, 2.208299999999913e-05, 2.4028000000002325e-05, 2.30969999999997e-05, 2.3014000000001755e-05, 2.2083999999998605e-05, 2.2056000000002934e-05, 2.0084000000000074e-05, 2.393100000000134e-05, 2.2999999999998716e-05, 2.308300000000013e-05, 2.3056000000000465e-05, 2.6860999999999552e-05, 2.588900000000116e-05, 2.295899999999948e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.403" endtime="20201110 08:34:14.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.399" endtime="20201110 08:34:14.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.408" endtime="20201110 08:34:14.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.412" endtime="20201110 08:34:14.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.410" endtime="20201110 08:34:14.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.407" endtime="20201110 08:34:14.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.037" endtime="20201110 08:34:14.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.036" endtime="20201110 08:34:14.433"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.441" endtime="20201110 08:34:14.462"></status>
</kw>
<msg timestamp="20201110 08:34:14.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.440" endtime="20201110 08:34:14.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.463" endtime="20201110 08:34:14.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.465" endtime="20201110 08:34:14.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.437" endtime="20201110 08:34:14.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.435" endtime="20201110 08:34:14.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.474" endtime="20201110 08:34:14.761"></status>
</kw>
<msg timestamp="20201110 08:34:14.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.473" endtime="20201110 08:34:14.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.765" endtime="20201110 08:34:14.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.774" endtime="20201110 08:34:14.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.470" endtime="20201110 08:34:14.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.469" endtime="20201110 08:34:14.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.781" level="INFO">${RESULT} = [{'time': 0.022806153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8291999999999614e-05, 'source_diff': 1.8291999999999614e-05}, {'time': 0.022836972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:14.777" endtime="20201110 08:34:14.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.794" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:14.782" endtime="20201110 08:34:14.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.798" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.797" endtime="20201110 08:34:14.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.801" level="INFO">VALUE: [1.8291999999999614e-05, 2.6833000000000412e-05, 2.3000000000002185e-05, 2.2069999999999035e-05, 2.490299999999973e-05, 2.2041999999999895e-05, 2.113899999999988e-05, 2.588899999999769e-05, 2.115299999999945e-05, 2.494499999999844e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.2069999999999035e-05, 2.3040999999997952e-05, 2.4929999999999397e-05, 2.2069999999999035e-05, 2.3958000000001006e-05, 2.3028000000001325e-05, 2.3958000000001006e-05, 2.493099999999887e-05, 2.10969999999977e-05, 2.5902000000001257e-05, 2.10969999999977e-05, 2.2069999999999035e-05, 2.209700000000217e-05, 2.113899999999988e-05, 2.5846999999998982e-05, 2.3958000000001006e-05, 2.111100000000074e-05, 2.3013999999998286e-05, 2.109700000000117e-05, 2.6846999999999982e-05, 2.49169999999993e-05, 2.6833999999999886e-05, 2.112500000000031e-05, 2.3999999999999716e-05, 2.3014000000001755e-05, 2.3972000000000576e-05, 2.5943999999999967e-05, 2.118100000000206e-05, 2.3055999999996996e-05, 2.2055999999999465e-05, 2.3040999999997952e-05, 2.4958000000002006e-05, 2.395900000000048e-05, 2.3013999999998286e-05, 2.3986000000000146e-05, 2.6806000000000746e-05, 2.4944000000002436e-05, 2.304100000000142e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.800" endtime="20201110 08:34:14.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.795" endtime="20201110 08:34:14.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.804" endtime="20201110 08:34:14.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.808" endtime="20201110 08:34:14.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.806" endtime="20201110 08:34:14.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.803" endtime="20201110 08:34:14.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.433" endtime="20201110 08:34:14.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.433" endtime="20201110 08:34:14.829"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.837" endtime="20201110 08:34:14.858"></status>
</kw>
<msg timestamp="20201110 08:34:14.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.836" endtime="20201110 08:34:14.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.860" endtime="20201110 08:34:14.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.862" endtime="20201110 08:34:14.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.833" endtime="20201110 08:34:14.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.831" endtime="20201110 08:34:14.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.871" endtime="20201110 08:34:15.156"></status>
</kw>
<msg timestamp="20201110 08:34:15.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023420819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023452389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.869" endtime="20201110 08:34:15.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023420819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023452389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.161" endtime="20201110 08:34:15.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.169" endtime="20201110 08:34:15.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.867" endtime="20201110 08:34:15.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.865" endtime="20201110 08:34:15.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.177" level="INFO">${RESULT} = [{'time': 0.023452389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.15700000000016e-05, 'source_diff': 3.15700000000016e-05}, {'time': 0.023483139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:15.173" endtime="20201110 08:34:15.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.190" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:15.178" endtime="20201110 08:34:15.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.195" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.194" endtime="20201110 08:34:15.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.197" level="INFO">VALUE: [3.15700000000016e-05, 2.1055999999998465e-05, 2.302700000000185e-05, 2.3027999999997856e-05, 2.20830000000026e-05, 2.6860999999999552e-05, 2.4014000000002755e-05, 2.112500000000031e-05, 2.3013999999998286e-05, 2.3986000000000146e-05, 2.1112000000000214e-05, 2.586100000000202e-05, 2.0180000000001586e-05, 2.6833000000000412e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.10969999999977e-05, 2.4943999999998967e-05, 2.3986000000000146e-05, 2.4000000000003185e-05, 2.495899999999801e-05, 2.2083999999998605e-05, 2.3041999999997426e-05, 2.10969999999977e-05, 2.3971999999997107e-05, 2.3026999999998382e-05, 2.206899999999956e-05, 2.4971999999998107e-05, 2.10969999999977e-05, 2.112500000000031e-05, 2.593099999999987e-05, 2.011099999999974e-05, 2.3958000000001006e-05, 2.015300000000192e-05, 2.587500000000159e-05, 2.588899999999769e-05, 2.590300000000073e-05, 2.016699999999802e-05, 2.6820000000000316e-05, 2.112500000000031e-05, 2.4943999999998967e-05, 2.113899999999988e-05, 2.013899999999888e-05, 2.494499999999844e-05, 2.3028000000001325e-05, 2.588900000000116e-05, 2.4986000000001146e-05, 2.494499999999844e-05, 2.497300000000105e-05, 2.20830000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.196" endtime="20201110 08:34:15.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.191" endtime="20201110 08:34:15.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.201" endtime="20201110 08:34:15.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.204" endtime="20201110 08:34:15.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.202" endtime="20201110 08:34:15.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.199" endtime="20201110 08:34:15.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.830" endtime="20201110 08:34:15.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.829" endtime="20201110 08:34:15.225"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.233" endtime="20201110 08:34:15.256"></status>
</kw>
<msg timestamp="20201110 08:34:15.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.232" endtime="20201110 08:34:15.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.258" endtime="20201110 08:34:15.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.260" endtime="20201110 08:34:15.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.229" endtime="20201110 08:34:15.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.227" endtime="20201110 08:34:15.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.269" endtime="20201110 08:34:15.557"></status>
</kw>
<msg timestamp="20201110 08:34:15.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024346403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02437325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:15.268" endtime="20201110 08:34:15.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024346403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02437325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:15.561" endtime="20201110 08:34:15.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.570" endtime="20201110 08:34:15.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.265" endtime="20201110 08:34:15.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.263" endtime="20201110 08:34:15.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.576" level="INFO">${RESULT} = [{'time': 0.02437325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6846999999999982e-05, 'source_diff': 2.6846999999999982e-05}, {'time': 0.024404319, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:15.573" endtime="20201110 08:34:15.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.589" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:15.577" endtime="20201110 08:34:15.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.594" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.593" endtime="20201110 08:34:15.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.596" level="INFO">VALUE: [2.6846999999999982e-05, 2.112500000000031e-05, 2.5819999999999316e-05, 2.5000000000000716e-05, 2.5000000000000716e-05, 2.3013999999998286e-05, 2.59170000000003e-05, 2.3986000000000146e-05, 2.3013999999998286e-05, 2.6027999999997387e-05, 2.5943999999999967e-05, 2.4957999999998537e-05, 2.590300000000073e-05, 2.5971999999999107e-05, 2.4971999999998107e-05, 2.2056000000002934e-05, 2.3026999999998382e-05, 2.3042000000000895e-05, 2.4943999999998967e-05, 2.5874999999998122e-05, 2.111100000000074e-05, 2.013899999999888e-05, 2.3070000000000035e-05, 2.3013999999998286e-05, 2.5930000000000397e-05, 2.593099999999987e-05, 2.4027999999998856e-05, 2.206899999999956e-05, 2.1083999999997605e-05, 2.6860999999999552e-05, 2.3986000000000146e-05, 2.587500000000159e-05, 2.2069999999999035e-05, 2.3097999999999175e-05, 2.115300000000292e-05, 2.397300000000005e-05, 2.3083999999999605e-05, 2.5833999999998886e-05, 2.2055999999999465e-05, 2.109700000000117e-05, 2.6846999999999982e-05, 2.4957999999998537e-05, 2.213900000000088e-05, 2.590299999999726e-05, 2.015299999999845e-05, 2.016699999999802e-05, 2.1999999999997716e-05, 2.4915999999999827e-05, 2.6818999999997373e-05, 2.109700000000117e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.595" endtime="20201110 08:34:15.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.590" endtime="20201110 08:34:15.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.600" endtime="20201110 08:34:15.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.603" endtime="20201110 08:34:15.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.602" endtime="20201110 08:34:15.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.598" endtime="20201110 08:34:15.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.226" endtime="20201110 08:34:15.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.225" endtime="20201110 08:34:15.624"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.633" endtime="20201110 08:34:15.651"></status>
</kw>
<msg timestamp="20201110 08:34:15.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.631" endtime="20201110 08:34:15.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.653" endtime="20201110 08:34:15.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.655" endtime="20201110 08:34:15.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.629" endtime="20201110 08:34:15.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.626" endtime="20201110 08:34:15.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.664" endtime="20201110 08:34:15.950"></status>
</kw>
<msg timestamp="20201110 08:34:15.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.663" endtime="20201110 08:34:15.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.954" endtime="20201110 08:34:15.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.962" endtime="20201110 08:34:15.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.660" endtime="20201110 08:34:15.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.659" endtime="20201110 08:34:15.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.969" level="INFO">${RESULT} = [{'time': 0.021907028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.021937972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:15.966" endtime="20201110 08:34:15.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.982" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:15.970" endtime="20201110 08:34:15.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.987" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.986" endtime="20201110 08:34:15.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.989" level="INFO">VALUE: [1.2499999999998623e-05, 2.111100000000074e-05, 2.209700000000217e-05, 2.394500000000091e-05, 2.213900000000088e-05, 2.5000000000000716e-05, 2.016700000000149e-05, 2.6860999999999552e-05, 2.3027999999997856e-05, 2.3986000000000146e-05, 2.3999999999999716e-05, 2.302700000000185e-05, 2.111100000000074e-05, 2.5887999999998218e-05, 2.5860999999998552e-05, 2.6791999999997707e-05, 2.3999999999999716e-05, 2.3014000000001755e-05, 2.587500000000159e-05, 2.2999999999998716e-05, 2.494499999999844e-05, 2.306900000000056e-05, 2.5902000000001257e-05, 2.3070000000000035e-05, 2.4943999999998967e-05, 2.20969999999987e-05, 2.111100000000074e-05, 2.3999999999999716e-05, 2.206899999999956e-05, 2.4985999999997677e-05, 2.1069999999998035e-05, 2.105499999999899e-05, 2.59170000000003e-05, 2.016699999999802e-05, 2.111099999999727e-05, 2.1055999999998465e-05, 2.013900000000235e-05, 2.490299999999973e-05, 2.3013999999998286e-05, 2.015300000000192e-05, 2.493100000000234e-05, 2.013899999999888e-05, 2.5000000000000716e-05, 2.59170000000003e-05, 2.3042000000000895e-05, 2.3986000000000146e-05, 2.6860999999999552e-05, 2.5930000000000397e-05, 2.0249999999999435e-05, 2.4013999999999286e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.988" endtime="20201110 08:34:15.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.983" endtime="20201110 08:34:15.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.993" endtime="20201110 08:34:15.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.996" endtime="20201110 08:34:16.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.995" endtime="20201110 08:34:16.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.991" endtime="20201110 08:34:16.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.625" endtime="20201110 08:34:16.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.624" endtime="20201110 08:34:16.017"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.026" endtime="20201110 08:34:16.044"></status>
</kw>
<msg timestamp="20201110 08:34:16.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.024" endtime="20201110 08:34:16.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.046" endtime="20201110 08:34:16.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.048" endtime="20201110 08:34:16.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.022" endtime="20201110 08:34:16.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.020" endtime="20201110 08:34:16.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.057" endtime="20201110 08:34:16.343"></status>
</kw>
<msg timestamp="20201110 08:34:16.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020851042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020875931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.056" endtime="20201110 08:34:16.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020851042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020875931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.347" endtime="20201110 08:34:16.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.355" endtime="20201110 08:34:16.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.053" endtime="20201110 08:34:16.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.051" endtime="20201110 08:34:16.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.362" level="INFO">${RESULT} = [{'time': 0.020875931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.488900000000016e-05, 'source_diff': 2.488900000000016e-05}, {'time': 0.0209065, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:16.359" endtime="20201110 08:34:16.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.375" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:16.363" endtime="20201110 08:34:16.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.380" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.379" endtime="20201110 08:34:16.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.382" level="INFO">VALUE: [2.488900000000016e-05, 2.481900000000231e-05, 2.494499999999844e-05, 2.015299999999845e-05, 2.3986000000000146e-05, 2.1138000000000406e-05, 2.587500000000159e-05, 2.588900000000116e-05, 2.395900000000048e-05, 2.2083999999998605e-05, 2.2083999999998605e-05, 2.494499999999844e-05, 2.6874999999999122e-05, 2.009700000000017e-05, 2.493099999999887e-05, 2.2041999999999895e-05, 2.587500000000159e-05, 2.2985999999999146e-05, 2.211099999999827e-05, 2.3056000000000465e-05, 2.206899999999956e-05, 2.6888999999998692e-05, 2.206899999999956e-05, 2.587500000000159e-05, 2.1985999999998146e-05, 2.4027999999998856e-05, 2.5833999999998886e-05, 2.3013999999998286e-05, 2.6833000000000412e-05, 2.59170000000003e-05, 2.111100000000074e-05, 2.588899999999769e-05, 2.212500000000131e-05, 2.6846999999999982e-05, 2.111100000000074e-05, 2.6818999999997373e-05, 2.2041999999999895e-05, 2.397300000000005e-05, 2.3027999999997856e-05, 2.3028000000001325e-05, 2.4957999999998537e-05, 2.112499999999684e-05, 2.111100000000074e-05, 2.4930000000002867e-05, 2.2055999999999465e-05, 2.112500000000031e-05, 2.3027999999997856e-05, 2.590299999999726e-05, 2.3972000000000576e-05, 2.3014000000001755e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.381" endtime="20201110 08:34:16.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.376" endtime="20201110 08:34:16.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.386" endtime="20201110 08:34:16.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.389" endtime="20201110 08:34:16.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.388" endtime="20201110 08:34:16.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.384" endtime="20201110 08:34:16.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.018" endtime="20201110 08:34:16.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.017" endtime="20201110 08:34:16.410"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.419" endtime="20201110 08:34:16.441"></status>
</kw>
<msg timestamp="20201110 08:34:16.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.417" endtime="20201110 08:34:16.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.442" endtime="20201110 08:34:16.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.445" endtime="20201110 08:34:16.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.414" endtime="20201110 08:34:16.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.412" endtime="20201110 08:34:16.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.454" endtime="20201110 08:34:16.741"></status>
</kw>
<msg timestamp="20201110 08:34:16.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024808958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0248185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:16.452" endtime="20201110 08:34:16.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024808958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0248185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:16.745" endtime="20201110 08:34:16.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.753" endtime="20201110 08:34:16.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.450" endtime="20201110 08:34:16.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.448" endtime="20201110 08:34:16.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.760" level="INFO">${RESULT} = [{'time': 0.0248185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.024848403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:16.757" endtime="20201110 08:34:16.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.773" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:16.761" endtime="20201110 08:34:16.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.778" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.777" endtime="20201110 08:34:16.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.780" level="INFO">VALUE: [9.542000000001272e-06, 2.586100000000202e-05, 2.3070000000000035e-05, 2.5986000000002146e-05, 2.3999999999999716e-05, 2.205499999999999e-05, 2.3000000000002185e-05, 2.3986000000000146e-05, 2.3013999999998286e-05, 2.4028000000002325e-05, 2.304100000000142e-05, 2.488900000000016e-05, 2.3040999999997952e-05, 2.111100000000074e-05, 2.02090000000002e-05, 2.2999999999998716e-05, 2.0165999999998546e-05, 2.5000000000000716e-05, 2.3999999999999716e-05, 2.016700000000149e-05, 2.1097999999997175e-05, 2.495900000000148e-05, 2.3929999999998397e-05, 2.3986000000000146e-05, 2.2041999999999895e-05, 2.112500000000031e-05, 2.0165999999998546e-05, 2.494500000000191e-05, 2.3026999999998382e-05, 2.3000000000002185e-05, 2.3999999999999716e-05, 2.4943999999998967e-05, 2.106899999999856e-05, 2.494499999999844e-05, 2.2055999999999465e-05, 2.688900000000216e-05, 2.3972000000000576e-05, 2.493100000000234e-05, 2.109700000000117e-05, 2.3014000000001755e-05, 2.3972000000000576e-05, 2.2098000000001644e-05, 2.6888999999998692e-05, 2.4012999999999812e-05, 2.588900000000116e-05, 2.2999999999998716e-05, 2.493100000000234e-05, 2.497300000000105e-05, 2.2069999999999035e-05, 2.109700000000117e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.779" endtime="20201110 08:34:16.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.774" endtime="20201110 08:34:16.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.784" endtime="20201110 08:34:16.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.787" endtime="20201110 08:34:16.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.786" endtime="20201110 08:34:16.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.782" endtime="20201110 08:34:16.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.411" endtime="20201110 08:34:16.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.410" endtime="20201110 08:34:16.808"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.817" endtime="20201110 08:34:16.838"></status>
</kw>
<msg timestamp="20201110 08:34:16.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.815" endtime="20201110 08:34:16.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.839" endtime="20201110 08:34:16.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.842" endtime="20201110 08:34:16.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.813" endtime="20201110 08:34:16.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.811" endtime="20201110 08:34:16.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.850" endtime="20201110 08:34:17.137"></status>
</kw>
<msg timestamp="20201110 08:34:17.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023553208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023572417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.849" endtime="20201110 08:34:17.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023553208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023572417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.142" endtime="20201110 08:34:17.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.150" endtime="20201110 08:34:17.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.846" endtime="20201110 08:34:17.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.845" endtime="20201110 08:34:17.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.157" level="INFO">${RESULT} = [{'time': 0.023572417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.92089999999992e-05, 'source_diff': 1.92089999999992e-05}, {'time': 0.023603361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:17.153" endtime="20201110 08:34:17.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.170" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:17.158" endtime="20201110 08:34:17.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.174" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.173" endtime="20201110 08:34:17.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.176" level="INFO">VALUE: [1.92089999999992e-05, 2.4943999999998967e-05, 2.2999999999998716e-05, 2.1999999999997716e-05, 2.111100000000074e-05, 2.3986000000000146e-05, 2.4000000000003185e-05, 2.4972000000001576e-05, 2.111100000000074e-05, 2.3028000000001325e-05, 2.112500000000031e-05, 2.206899999999956e-05, 2.1098000000000644e-05, 2.2083999999998605e-05, 2.113899999999988e-05, 2.497300000000105e-05, 2.204100000000042e-05, 2.2971999999999576e-05, 2.3999999999999716e-05, 2.3056000000000465e-05, 2.4930000000002867e-05, 2.3999999999999716e-05, 2.494500000000191e-05, 2.109700000000117e-05, 2.112500000000031e-05, 2.2958000000000006e-05, 2.113899999999988e-05, 2.013900000000235e-05, 2.3999999999999716e-05, 2.394500000000091e-05, 2.391700000000177e-05, 2.3042000000000895e-05, 2.3999999999999716e-05, 2.018100000000106e-05, 2.0166000000002016e-05, 2.590299999999726e-05, 2.2958000000000006e-05, 2.2985999999999146e-05, 2.494499999999844e-05, 2.593099999999987e-05, 2.494500000000191e-05, 2.10830000000016e-05, 2.213900000000088e-05, 2.118099999999859e-05, 2.590300000000073e-05, 2.112500000000031e-05, 2.112499999999684e-05, 2.5832999999999412e-05, 2.015299999999845e-05, 2.10969999999977e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.175" endtime="20201110 08:34:17.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.171" endtime="20201110 08:34:17.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.180" endtime="20201110 08:34:17.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.183" endtime="20201110 08:34:17.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.182" endtime="20201110 08:34:17.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.179" endtime="20201110 08:34:17.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.809" endtime="20201110 08:34:17.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.809" endtime="20201110 08:34:17.205"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.214" endtime="20201110 08:34:17.234"></status>
</kw>
<msg timestamp="20201110 08:34:17.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.212" endtime="20201110 08:34:17.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.236" endtime="20201110 08:34:17.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.238" endtime="20201110 08:34:17.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.210" endtime="20201110 08:34:17.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.207" endtime="20201110 08:34:17.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.247" endtime="20201110 08:34:17.533"></status>
</kw>
<msg timestamp="20201110 08:34:17.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024256181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024280153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.246" endtime="20201110 08:34:17.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024256181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024280153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.537" endtime="20201110 08:34:17.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.545" endtime="20201110 08:34:17.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.243" endtime="20201110 08:34:17.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.241" endtime="20201110 08:34:17.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.552" level="INFO">${RESULT} = [{'time': 0.024280153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3971999999997107e-05, 'source_diff': 2.3971999999997107e-05}, {'time': 0.0243105, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:17.549" endtime="20201110 08:34:17.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.565" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:17.553" endtime="20201110 08:34:17.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.570" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.569" endtime="20201110 08:34:17.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.572" level="INFO">VALUE: [2.3971999999997107e-05, 2.113899999999988e-05, 2.4028000000002325e-05, 2.3999999999999716e-05, 2.4042000000001895e-05, 2.3972000000000576e-05, 2.018100000000106e-05, 2.4028000000002325e-05, 2.205499999999999e-05, 2.2041999999999895e-05, 2.105500000000246e-05, 2.1112000000000214e-05, 2.497300000000105e-05, 2.3014000000001755e-05, 2.208299999999913e-05, 2.3027999999997856e-05, 2.016700000000149e-05, 2.493099999999887e-05, 2.112500000000031e-05, 2.3999999999999716e-05, 2.5874999999998122e-05, 2.208299999999913e-05, 2.2971999999999576e-05, 2.494499999999844e-05, 2.395900000000048e-05, 2.0166000000002016e-05, 2.109700000000117e-05, 2.113899999999988e-05, 2.5971999999999107e-05, 2.3070000000000035e-05, 2.587500000000159e-05, 2.3943999999997967e-05, 2.4943999999998967e-05, 2.2985999999999146e-05, 2.588900000000116e-05, 2.3972000000000576e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.4930000000002867e-05, 2.591699999999683e-05, 2.3000000000002185e-05, 2.2070000000002504e-05, 2.397300000000005e-05, 2.3986000000000146e-05, 2.2028000000000325e-05, 2.109700000000117e-05, 2.59170000000003e-05, 2.3972000000000576e-05, 2.587500000000159e-05, 2.3028000000001325e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.571" endtime="20201110 08:34:17.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.566" endtime="20201110 08:34:17.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.576" endtime="20201110 08:34:17.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.579" endtime="20201110 08:34:17.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.578" endtime="20201110 08:34:17.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.574" endtime="20201110 08:34:17.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.206" endtime="20201110 08:34:17.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.205" endtime="20201110 08:34:17.600"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.609" endtime="20201110 08:34:17.626"></status>
</kw>
<msg timestamp="20201110 08:34:17.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.607" endtime="20201110 08:34:17.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.627" endtime="20201110 08:34:17.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.630" endtime="20201110 08:34:17.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.604" endtime="20201110 08:34:17.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.602" endtime="20201110 08:34:17.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.639" endtime="20201110 08:34:17.926"></status>
</kw>
<msg timestamp="20201110 08:34:17.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020354194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020380139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.637" endtime="20201110 08:34:17.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020354194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020380139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.931" endtime="20201110 08:34:17.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.939" endtime="20201110 08:34:17.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.635" endtime="20201110 08:34:17.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.633" endtime="20201110 08:34:17.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.945" level="INFO">${RESULT} = [{'time': 0.020380139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.594499999999944e-05, 'source_diff': 2.594499999999944e-05}, {'time': 0.020410486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:17.942" endtime="20201110 08:34:17.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.959" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:17.946" endtime="20201110 08:34:17.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.963" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.962" endtime="20201110 08:34:17.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.965" level="INFO">VALUE: [2.594499999999944e-05, 2.20969999999987e-05, 2.395899999999701e-05, 2.6819000000000842e-05, 2.588899999999769e-05, 2.59170000000003e-05, 2.3986000000000146e-05, 2.111100000000074e-05, 2.2971999999999576e-05, 2.215300000000045e-05, 2.3000000000002185e-05, 2.495900000000148e-05, 2.39169999999983e-05, 2.1027999999999325e-05, 2.3042000000000895e-05, 2.015299999999845e-05, 2.2971999999999576e-05, 2.494499999999844e-05, 2.3986000000000146e-05, 2.4985999999997677e-05, 2.111100000000074e-05, 2.4929999999999397e-05, 2.2999999999998716e-05, 2.204100000000042e-05, 2.3013999999998286e-05, 2.20969999999987e-05, 2.2943999999996967e-05, 2.3027999999997856e-05, 2.112500000000031e-05, 2.2084000000002074e-05, 2.3042000000000895e-05, 2.5943999999999967e-05, 2.5930000000000397e-05, 2.2084000000002074e-05, 2.113899999999988e-05, 2.2999999999998716e-05, 2.498700000000062e-05, 2.206899999999956e-05, 2.5832999999999412e-05, 2.393099999999787e-05, 2.3042000000000895e-05, 2.0180000000001586e-05, 2.495899999999801e-05, 2.590299999999726e-05, 2.4957999999998537e-05, 2.493099999999887e-05, 2.0180000000001586e-05, 2.116699999999902e-05, 2.588899999999769e-05, 2.3026999999998382e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.964" endtime="20201110 08:34:17.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.960" endtime="20201110 08:34:17.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.969" endtime="20201110 08:34:17.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.973" endtime="20201110 08:34:17.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.971" endtime="20201110 08:34:17.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.967" endtime="20201110 08:34:17.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.601" endtime="20201110 08:34:17.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.600" endtime="20201110 08:34:17.993"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.002" endtime="20201110 08:34:18.024"></status>
</kw>
<msg timestamp="20201110 08:34:18.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.001" endtime="20201110 08:34:18.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.025" endtime="20201110 08:34:18.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.028" endtime="20201110 08:34:18.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.998" endtime="20201110 08:34:18.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.996" endtime="20201110 08:34:18.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.037" endtime="20201110 08:34:18.324"></status>
</kw>
<msg timestamp="20201110 08:34:18.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024010306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02404775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:18.035" endtime="20201110 08:34:18.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024010306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02404775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:18.328" endtime="20201110 08:34:18.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.336" endtime="20201110 08:34:18.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.033" endtime="20201110 08:34:18.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.031" endtime="20201110 08:34:18.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.343" level="INFO">${RESULT} = [{'time': 0.02404775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.744400000000106e-05, 'source_diff': 3.744400000000106e-05}, {'time': 0.024078319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:18.339" endtime="20201110 08:34:18.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.356" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:18.344" endtime="20201110 08:34:18.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.361" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.360" endtime="20201110 08:34:18.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.363" level="INFO">VALUE: [3.744400000000106e-05, 2.0208000000000725e-05, 2.3042000000000895e-05, 2.4944000000002436e-05, 2.206899999999956e-05, 2.4943999999998967e-05, 2.208299999999913e-05, 2.5014000000000286e-05, 2.2055999999999465e-05, 2.590299999999726e-05, 2.5916000000000827e-05, 2.5902000000001257e-05, 2.4040999999998952e-05, 2.4042000000001895e-05, 2.3055999999996996e-05, 2.015300000000192e-05, 2.587500000000159e-05, 2.3014000000001755e-05, 2.687500000000259e-05, 2.205499999999999e-05, 2.3971999999997107e-05, 2.2098000000001644e-05, 2.206900000000303e-05, 2.3028000000001325e-05, 2.4972000000001576e-05, 2.2098000000001644e-05, 2.3026999999998382e-05, 2.111100000000074e-05, 2.305500000000099e-05, 2.3986000000000146e-05, 2.49169999999993e-05, 2.5860999999998552e-05, 2.308300000000013e-05, 2.5846999999998982e-05, 2.393100000000134e-05, 2.113899999999988e-05, 2.106899999999856e-05, 2.3014000000001755e-05, 2.394499999999744e-05, 2.59170000000003e-05, 2.6916000000001827e-05, 2.019500000000063e-05, 2.205499999999999e-05, 2.2083999999998605e-05, 2.5916000000000827e-05, 2.2041999999999895e-05, 2.206899999999956e-05, 2.3986000000000146e-05, 2.3028000000001325e-05, 2.3056000000000465e-05]</msg>
<status status="PASS" starttime="20201110 08:34:18.362" endtime="20201110 08:34:18.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.357" endtime="20201110 08:34:18.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.373" endtime="20201110 08:34:18.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.377" endtime="20201110 08:34:18.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.375" endtime="20201110 08:34:18.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.372" endtime="20201110 08:34:18.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.994" endtime="20201110 08:34:18.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.994" endtime="20201110 08:34:18.398"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.406" endtime="20201110 08:34:18.426"></status>
</kw>
<msg timestamp="20201110 08:34:18.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.405" endtime="20201110 08:34:18.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.428" endtime="20201110 08:34:18.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.430" endtime="20201110 08:34:18.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.402" endtime="20201110 08:34:18.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.400" endtime="20201110 08:34:18.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.439" endtime="20201110 08:34:18.727"></status>
</kw>
<msg timestamp="20201110 08:34:18.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021615472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.437" endtime="20201110 08:34:18.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021615472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.731" endtime="20201110 08:34:18.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.739" endtime="20201110 08:34:18.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.435" endtime="20201110 08:34:18.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.433" endtime="20201110 08:34:18.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.746" level="INFO">${RESULT} = [{'time': 0.021641361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.588900000000116e-05, 'source_diff': 2.588900000000116e-05}, {'time': 0.021671764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:18.743" endtime="20201110 08:34:18.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.759" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:18.747" endtime="20201110 08:34:18.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.764" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.763" endtime="20201110 08:34:18.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.766" level="INFO">VALUE: [2.588900000000116e-05, 2.015299999999845e-05, 2.206899999999956e-05, 2.398699999999962e-05, 2.6874999999999122e-05, 2.013900000000235e-05, 2.202700000000085e-05, 2.2028000000000325e-05, 2.1027999999999325e-05, 2.111100000000074e-05, 2.206899999999956e-05, 2.2098000000001644e-05, 2.3972000000000576e-05, 2.587500000000159e-05, 2.297299999999905e-05, 2.2999999999998716e-05, 2.016699999999802e-05, 2.586100000000202e-05, 2.391700000000177e-05, 2.2028000000000325e-05, 2.3027999999997856e-05, 2.495899999999801e-05, 2.211099999999827e-05, 2.4957999999998537e-05, 2.4972000000001576e-05, 2.587500000000159e-05, 2.00830000000006e-05, 2.2013999999997286e-05, 2.2098000000001644e-05, 2.2083999999998605e-05, 2.3986000000000146e-05, 2.016699999999802e-05, 2.013899999999888e-05, 2.3042000000000895e-05, 2.588900000000116e-05, 2.6860999999999552e-05, 2.1069999999998035e-05, 2.397300000000005e-05, 2.112500000000031e-05, 2.3972000000000576e-05, 2.1069999999998035e-05, 2.494500000000191e-05, 2.112500000000031e-05, 2.109700000000117e-05, 2.4957999999998537e-05, 2.494499999999844e-05, 2.5846999999998982e-05, 2.3012999999998812e-05, 2.111100000000074e-05, 2.588900000000116e-05]</msg>
<status status="PASS" starttime="20201110 08:34:18.765" endtime="20201110 08:34:18.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.760" endtime="20201110 08:34:18.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.770" endtime="20201110 08:34:18.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.773" endtime="20201110 08:34:18.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.771" endtime="20201110 08:34:18.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.768" endtime="20201110 08:34:18.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.399" endtime="20201110 08:34:18.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.398" endtime="20201110 08:34:18.794"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.802" endtime="20201110 08:34:18.822"></status>
</kw>
<msg timestamp="20201110 08:34:18.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.801" endtime="20201110 08:34:18.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.824" endtime="20201110 08:34:18.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.826" endtime="20201110 08:34:18.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.798" endtime="20201110 08:34:18.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.796" endtime="20201110 08:34:18.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.835" endtime="20201110 08:34:19.121"></status>
</kw>
<msg timestamp="20201110 08:34:19.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022440111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.833" endtime="20201110 08:34:19.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022440111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.125" endtime="20201110 08:34:19.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.133" endtime="20201110 08:34:19.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.831" endtime="20201110 08:34:19.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.829" endtime="20201110 08:34:19.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.140" level="INFO">${RESULT} = [{'time': 0.022440111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54719999999982e-05, 'source_diff': 3.54719999999982e-05}, {'time': 0.022470569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:19.137" endtime="20201110 08:34:19.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.153" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:19.141" endtime="20201110 08:34:19.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.158" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.157" endtime="20201110 08:34:19.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.160" level="INFO">VALUE: [3.54719999999982e-05, 2.208299999999913e-05, 2.590300000000073e-05, 2.494499999999844e-05, 2.588900000000116e-05, 2.3986000000000146e-05, 2.5929999999996928e-05, 2.3999999999999716e-05, 2.397300000000005e-05, 2.2999999999998716e-05, 2.3972000000000576e-05, 2.6860999999999552e-05, 2.4958000000002006e-05, 2.2097999999998175e-05, 2.3986000000000146e-05, 2.2041999999999895e-05, 2.3040999999997952e-05, 2.20969999999987e-05, 2.587500000000159e-05, 2.1070000000001504e-05, 2.012499999999931e-05, 2.311099999999927e-05, 2.590300000000073e-05, 2.3042000000000895e-05, 2.013899999999888e-05, 2.013900000000235e-05, 2.3014000000001755e-05, 2.3999999999999716e-05, 2.397300000000005e-05, 2.493100000000234e-05, 2.112500000000031e-05, 2.3986000000000146e-05, 2.2028000000000325e-05, 2.6833000000000412e-05, 2.4958000000002006e-05, 2.588900000000116e-05, 2.4958000000002006e-05, 2.4999999999997247e-05, 2.4012999999999812e-05, 2.587500000000159e-05, 2.1986000000001615e-05, 2.3027999999997856e-05, 2.590300000000073e-05, 2.204100000000042e-05, 2.59170000000003e-05, 2.3028000000001325e-05, 2.113899999999988e-05, 2.3986000000000146e-05, 2.113899999999988e-05, 2.2999999999998716e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.159" endtime="20201110 08:34:19.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.154" endtime="20201110 08:34:19.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.164" endtime="20201110 08:34:19.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.167" endtime="20201110 08:34:19.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.166" endtime="20201110 08:34:19.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.162" endtime="20201110 08:34:19.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.795" endtime="20201110 08:34:19.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.794" endtime="20201110 08:34:19.188"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.197" endtime="20201110 08:34:19.219"></status>
</kw>
<msg timestamp="20201110 08:34:19.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.195" endtime="20201110 08:34:19.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.221" endtime="20201110 08:34:19.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.224" endtime="20201110 08:34:19.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.193" endtime="20201110 08:34:19.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.191" endtime="20201110 08:34:19.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.233" endtime="20201110 08:34:19.522"></status>
</kw>
<msg timestamp="20201110 08:34:19.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024968236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024978819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.232" endtime="20201110 08:34:19.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024968236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024978819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.526" endtime="20201110 08:34:19.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.535" endtime="20201110 08:34:19.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.229" endtime="20201110 08:34:19.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.227" endtime="20201110 08:34:19.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.541" level="INFO">${RESULT} = [{'time': 0.024978819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0582999999998038e-05, 'source_diff': 1.0582999999998038e-05}, {'time': 0.025009903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:19.538" endtime="20201110 08:34:19.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.555" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:19.542" endtime="20201110 08:34:19.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.559" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.558" endtime="20201110 08:34:19.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.562" level="INFO">VALUE: [1.0582999999998038e-05, 2.2083999999998605e-05, 2.4013999999999286e-05, 2.5832999999999412e-05, 2.3957999999997537e-05, 2.0151999999998976e-05, 2.687500000000259e-05, 2.588900000000116e-05, 2.304100000000142e-05, 2.1999999999997716e-05, 2.6846999999999982e-05, 2.013899999999888e-05, 2.109700000000117e-05, 2.587500000000159e-05, 2.012499999999931e-05, 2.3986000000000146e-05, 2.208299999999913e-05, 2.4013999999999286e-05, 2.3000000000002185e-05, 2.2028000000000325e-05, 2.5874999999998122e-05, 2.397300000000005e-05, 2.112499999999684e-05, 2.3957999999997537e-05, 2.3999999999999716e-05, 2.59170000000003e-05, 2.1112000000000214e-05, 2.20969999999987e-05, 2.113899999999988e-05, 2.20830000000026e-05, 2.115299999999945e-05, 2.2971999999999576e-05, 2.2014000000000755e-05, 2.3999999999999716e-05, 2.4957999999998537e-05, 2.10830000000016e-05, 2.6820000000000316e-05, 2.2027999999996856e-05, 2.2069999999999035e-05, 2.015299999999845e-05, 2.112500000000031e-05, 2.6833000000000412e-05, 2.3083999999999605e-05, 2.5000000000000716e-05, 2.113899999999988e-05, 2.397300000000005e-05, 2.3014000000001755e-05, 2.112500000000031e-05, 2.2041999999999895e-05, 2.1056000000001934e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.560" endtime="20201110 08:34:19.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.555" endtime="20201110 08:34:19.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.565" endtime="20201110 08:34:19.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.569" endtime="20201110 08:34:19.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.567" endtime="20201110 08:34:19.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.564" endtime="20201110 08:34:19.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.189" endtime="20201110 08:34:19.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.188" endtime="20201110 08:34:19.590"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.598" endtime="20201110 08:34:19.618"></status>
</kw>
<msg timestamp="20201110 08:34:19.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.596" endtime="20201110 08:34:19.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.620" endtime="20201110 08:34:19.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.622" endtime="20201110 08:34:19.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.594" endtime="20201110 08:34:19.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.592" endtime="20201110 08:34:19.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.631" endtime="20201110 08:34:19.918"></status>
</kw>
<msg timestamp="20201110 08:34:19.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.630" endtime="20201110 08:34:19.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.922" endtime="20201110 08:34:19.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.930" endtime="20201110 08:34:19.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.627" endtime="20201110 08:34:19.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.625" endtime="20201110 08:34:19.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.937" level="INFO">${RESULT} = [{'time': 0.020467986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4416999999999208e-05, 'source_diff': 1.4416999999999208e-05}, {'time': 0.020497847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:19.934" endtime="20201110 08:34:19.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.950" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:19.938" endtime="20201110 08:34:19.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.955" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.954" endtime="20201110 08:34:19.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.957" level="INFO">VALUE: [1.4416999999999208e-05, 2.3040999999997952e-05, 2.205499999999999e-05, 2.5013999999996817e-05, 2.3042000000000895e-05, 2.4971999999998107e-05, 2.3000000000002185e-05, 2.4985999999997677e-05, 2.0208000000000725e-05, 2.2084000000002074e-05, 2.5013000000000812e-05, 2.305500000000099e-05, 2.590300000000073e-05, 2.013899999999888e-05, 2.494499999999844e-05, 2.0166000000002016e-05, 2.6833999999999886e-05, 2.205499999999999e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.3014000000001755e-05, 2.3014000000001755e-05, 2.206899999999956e-05, 2.5833999999998886e-05, 2.3014000000001755e-05, 2.3972000000000576e-05, 2.304100000000142e-05, 2.018100000000106e-05, 2.494499999999844e-05, 2.211099999999827e-05, 2.2056000000002934e-05, 1.9194000000000155e-05, 2.5887999999998218e-05, 2.111099999999727e-05, 2.115299999999945e-05, 2.491700000000277e-05, 2.5902000000001257e-05, 2.398699999999962e-05, 2.113899999999988e-05, 2.398699999999962e-05, 2.206899999999956e-05, 2.111099999999727e-05, 2.3986000000000146e-05, 2.0166000000002016e-05, 2.5943999999999967e-05, 2.3042000000000895e-05, 2.208299999999913e-05, 2.3014000000001755e-05, 2.016700000000149e-05, 2.3944000000001436e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.956" endtime="20201110 08:34:19.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.951" endtime="20201110 08:34:19.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.961" endtime="20201110 08:34:19.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.964" endtime="20201110 08:34:19.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.962" endtime="20201110 08:34:19.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.959" endtime="20201110 08:34:19.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.590" endtime="20201110 08:34:19.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.590" endtime="20201110 08:34:19.985"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.993" endtime="20201110 08:34:20.013"></status>
</kw>
<msg timestamp="20201110 08:34:20.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.992" endtime="20201110 08:34:20.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.015" endtime="20201110 08:34:20.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.017" endtime="20201110 08:34:20.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.989" endtime="20201110 08:34:20.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.987" endtime="20201110 08:34:20.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.026" endtime="20201110 08:34:20.314"></status>
</kw>
<msg timestamp="20201110 08:34:20.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.025" endtime="20201110 08:34:20.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.318" endtime="20201110 08:34:20.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.326" endtime="20201110 08:34:20.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.022" endtime="20201110 08:34:20.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.020" endtime="20201110 08:34:20.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.333" level="INFO">${RESULT} = [{'time': 0.021999153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7277999999999044e-05, 'source_diff': 1.7277999999999044e-05}, {'time': 0.022029181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:20.330" endtime="20201110 08:34:20.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.346" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:20.334" endtime="20201110 08:34:20.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.350" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.349" endtime="20201110 08:34:20.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.353" level="INFO">VALUE: [1.7277999999999044e-05, 2.2041999999999895e-05, 2.3999999999999716e-05, 2.2083999999998605e-05, 2.4957999999998537e-05, 2.3972000000000576e-05, 2.204100000000042e-05, 2.5860999999998552e-05, 2.3014000000001755e-05, 2.3999999999999716e-05, 2.013900000000235e-05, 2.3042000000000895e-05, 2.206899999999956e-05, 2.6860999999999552e-05, 2.3999999999999716e-05, 2.2083999999998605e-05, 2.587500000000159e-05, 2.018099999999759e-05, 2.588900000000116e-05, 2.4929999999999397e-05, 2.016699999999802e-05, 2.5902000000001257e-05, 2.406900000000156e-05, 2.395900000000048e-05, 2.112500000000031e-05, 2.111100000000074e-05, 2.016700000000149e-05, 2.3971999999997107e-05, 2.015299999999845e-05, 2.590300000000073e-05, 2.6833000000000412e-05, 2.113899999999988e-05, 2.3042000000000895e-05, 2.2083999999998605e-05, 2.10969999999977e-05, 2.3012999999998812e-05, 2.111100000000074e-05, 2.4944000000002436e-05, 2.3040999999997952e-05, 2.6833000000000412e-05, 2.1180000000002586e-05, 2.590300000000073e-05, 2.112500000000031e-05, 2.588900000000116e-05, 2.2069999999999035e-05, 2.3986000000000146e-05, 2.206900000000303e-05, 2.306900000000056e-05, 2.113899999999988e-05, 2.016700000000149e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.352" endtime="20201110 08:34:20.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.347" endtime="20201110 08:34:20.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.356" endtime="20201110 08:34:20.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.360" endtime="20201110 08:34:20.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.358" endtime="20201110 08:34:20.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.355" endtime="20201110 08:34:20.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.986" endtime="20201110 08:34:20.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.985" endtime="20201110 08:34:20.381"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.389" endtime="20201110 08:34:20.410"></status>
</kw>
<msg timestamp="20201110 08:34:20.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.388" endtime="20201110 08:34:20.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.411" endtime="20201110 08:34:20.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.414" endtime="20201110 08:34:20.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.385" endtime="20201110 08:34:20.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.383" endtime="20201110 08:34:20.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.423" endtime="20201110 08:34:20.710"></status>
</kw>
<msg timestamp="20201110 08:34:20.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023095014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.421" endtime="20201110 08:34:20.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023095014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.714" endtime="20201110 08:34:20.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.722" endtime="20201110 08:34:20.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.419" endtime="20201110 08:34:20.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.417" endtime="20201110 08:34:20.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.729" level="INFO">${RESULT} = [{'time': 0.023103778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999997912e-06, 'source_diff': 8.763999999997912e-06}, {'time': 0.023133708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:20.726" endtime="20201110 08:34:20.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.742" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:20.730" endtime="20201110 08:34:20.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.747" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.746" endtime="20201110 08:34:20.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.749" level="INFO">VALUE: [8.763999999997912e-06, 2.3999999999999716e-05, 2.397300000000005e-05, 2.4943999999998967e-05, 2.493099999999887e-05, 2.588899999999769e-05, 2.587500000000159e-05, 2.0097999999999644e-05, 2.49169999999993e-05, 2.4846999999997982e-05, 2.308300000000013e-05, 2.4972000000001576e-05, 2.590300000000073e-05, 2.015299999999845e-05, 2.3027999999997856e-05, 2.59170000000003e-05, 2.587500000000159e-05, 2.6874999999999122e-05, 2.212499999999784e-05, 2.594500000000291e-05, 2.3999999999999716e-05, 2.4957999999998537e-05, 2.016700000000149e-05, 2.015299999999845e-05, 2.4929999999999397e-05, 2.4929999999999397e-05, 2.590299999999726e-05, 2.016699999999802e-05, 2.013899999999888e-05, 2.111100000000074e-05, 2.297299999999905e-05, 2.6846999999999982e-05, 2.113899999999988e-05, 2.5000000000000716e-05, 2.3986000000000146e-05, 2.6860999999999552e-05, 2.588900000000116e-05, 2.10969999999977e-05, 2.397300000000005e-05, 2.3972000000000576e-05, 2.113899999999988e-05, 2.3014000000001755e-05, 2.015299999999845e-05, 2.2055999999999465e-05, 2.497300000000105e-05, 2.0193999999997686e-05, 2.494499999999844e-05, 2.206899999999956e-05, 2.6846999999999982e-05, 2.013899999999888e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.748" endtime="20201110 08:34:20.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.743" endtime="20201110 08:34:20.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.753" endtime="20201110 08:34:20.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.756" endtime="20201110 08:34:20.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.754" endtime="20201110 08:34:20.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.751" endtime="20201110 08:34:20.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.382" endtime="20201110 08:34:20.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.381" endtime="20201110 08:34:20.777"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.785" endtime="20201110 08:34:20.807"></status>
</kw>
<msg timestamp="20201110 08:34:20.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.784" endtime="20201110 08:34:20.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.808" endtime="20201110 08:34:20.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.811" endtime="20201110 08:34:20.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.781" endtime="20201110 08:34:20.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.779" endtime="20201110 08:34:20.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.819" endtime="20201110 08:34:21.107"></status>
</kw>
<msg timestamp="20201110 08:34:21.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023884569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023902806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.818" endtime="20201110 08:34:21.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023884569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023902806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.111" endtime="20201110 08:34:21.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.119" endtime="20201110 08:34:21.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.815" endtime="20201110 08:34:21.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.814" endtime="20201110 08:34:21.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.126" level="INFO">${RESULT} = [{'time': 0.023902806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.823699999999734e-05, 'source_diff': 1.823699999999734e-05}, {'time': 0.023933472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.122" endtime="20201110 08:34:21.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.139" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:21.127" endtime="20201110 08:34:21.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.143" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.142" endtime="20201110 08:34:21.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.146" level="INFO">VALUE: [1.823699999999734e-05, 2.206899999999956e-05, 2.112500000000031e-05, 2.2083999999998605e-05, 2.1069999999998035e-05, 2.3056000000000465e-05, 2.590300000000073e-05, 2.494499999999844e-05, 2.3014000000001755e-05, 2.018100000000106e-05, 2.4082999999997662e-05, 2.208299999999913e-05, 2.59170000000003e-05, 2.3042000000000895e-05, 2.109700000000117e-05, 2.112499999999684e-05, 2.590299999999726e-05, 2.2971999999999576e-05, 2.00830000000006e-05, 2.2014000000000755e-05, 2.109700000000117e-05, 2.015299999999845e-05, 2.3042000000000895e-05, 2.5874999999998122e-05, 2.5846999999998982e-05, 2.6833000000000412e-05, 2.3972000000000576e-05, 2.590300000000073e-05, 2.212499999999784e-05, 2.211099999999827e-05, 2.6888000000002688e-05, 2.016699999999802e-05, 2.3013999999998286e-05, 2.687500000000259e-05, 2.106899999999856e-05, 2.587500000000159e-05, 2.69170000000013e-05, 2.4943999999998967e-05, 2.112500000000031e-05, 2.3986000000000146e-05, 2.206899999999956e-05, 2.2056000000002934e-05, 2.494500000000191e-05, 2.206899999999956e-05, 2.494499999999844e-05, 2.112500000000031e-05, 2.6901999999998788e-05, 2.3083999999999605e-05, 2.206899999999956e-05, 2.012500000000278e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.144" endtime="20201110 08:34:21.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.140" endtime="20201110 08:34:21.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.149" endtime="20201110 08:34:21.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.153" endtime="20201110 08:34:21.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.151" endtime="20201110 08:34:21.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.148" endtime="20201110 08:34:21.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.778" endtime="20201110 08:34:21.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.777" endtime="20201110 08:34:21.174"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.182" endtime="20201110 08:34:21.203"></status>
</kw>
<msg timestamp="20201110 08:34:21.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.181" endtime="20201110 08:34:21.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.205" endtime="20201110 08:34:21.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.207" endtime="20201110 08:34:21.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.178" endtime="20201110 08:34:21.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.176" endtime="20201110 08:34:21.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.216" endtime="20201110 08:34:21.504"></status>
</kw>
<msg timestamp="20201110 08:34:21.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023952861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023969222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.214" endtime="20201110 08:34:21.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023952861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023969222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.508" endtime="20201110 08:34:21.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.516" endtime="20201110 08:34:21.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.212" endtime="20201110 08:34:21.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.210" endtime="20201110 08:34:21.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.523" level="INFO">${RESULT} = [{'time': 0.023969222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.636099999999946e-05, 'source_diff': 1.636099999999946e-05}, {'time': 0.023999417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.520" endtime="20201110 08:34:21.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.536" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:21.524" endtime="20201110 08:34:21.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.541" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.540" endtime="20201110 08:34:21.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.543" level="INFO">VALUE: [1.636099999999946e-05, 2.013899999999888e-05, 2.109700000000117e-05, 2.3971999999997107e-05, 2.3999999999999716e-05, 2.6874999999999122e-05, 2.109700000000117e-05, 2.208299999999913e-05, 2.3083999999999605e-05, 2.3972000000000576e-05, 2.3026999999998382e-05, 2.4014000000002755e-05, 2.0151999999998976e-05, 2.112500000000031e-05, 2.1042000000002364e-05, 2.490299999999973e-05, 2.5874999999998122e-05, 2.5916000000000827e-05, 2.112499999999684e-05, 2.3042000000000895e-05, 2.20830000000026e-05, 2.3972000000000576e-05, 2.4943999999998967e-05, 2.208299999999913e-05, 2.208299999999913e-05, 2.016699999999802e-05, 2.3999999999999716e-05, 2.2070000000002504e-05, 2.0151999999998976e-05, 2.587500000000159e-05, 2.3042000000000895e-05, 2.5902000000001257e-05, 2.2084000000002074e-05, 2.115300000000292e-05, 2.590299999999726e-05, 2.3014000000001755e-05, 2.4943999999998967e-05, 2.2069999999999035e-05, 2.2999999999998716e-05, 2.493099999999887e-05, 2.018099999999759e-05, 2.308300000000013e-05, 2.302700000000185e-05, 2.4944000000002436e-05, 2.10969999999977e-05, 2.6820000000000316e-05, 2.2070000000002504e-05, 2.5916000000000827e-05, 2.206899999999956e-05, 2.4971999999998107e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.542" endtime="20201110 08:34:21.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.537" endtime="20201110 08:34:21.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.546" endtime="20201110 08:34:21.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.550" endtime="20201110 08:34:21.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.548" endtime="20201110 08:34:21.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.545" endtime="20201110 08:34:21.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.175" endtime="20201110 08:34:21.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.174" endtime="20201110 08:34:21.571"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.579" endtime="20201110 08:34:21.601"></status>
</kw>
<msg timestamp="20201110 08:34:21.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.578" endtime="20201110 08:34:21.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.603" endtime="20201110 08:34:21.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.605" endtime="20201110 08:34:21.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.575" endtime="20201110 08:34:21.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.573" endtime="20201110 08:34:21.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.614" endtime="20201110 08:34:21.900"></status>
</kw>
<msg timestamp="20201110 08:34:21.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023640292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023669083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.612" endtime="20201110 08:34:21.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023640292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023669083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.904" endtime="20201110 08:34:21.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.912" endtime="20201110 08:34:21.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.610" endtime="20201110 08:34:21.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.608" endtime="20201110 08:34:21.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.919" level="INFO">${RESULT} = [{'time': 0.023669083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8791000000000233e-05, 'source_diff': 2.8791000000000233e-05}, {'time': 0.023699694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:21.916" endtime="20201110 08:34:21.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.932" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:21.920" endtime="20201110 08:34:21.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.937" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.936" endtime="20201110 08:34:21.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.939" level="INFO">VALUE: [2.8791000000000233e-05, 2.0166000000002016e-05, 2.2055999999999465e-05, 2.111099999999727e-05, 2.2971999999999576e-05, 2.2985999999999146e-05, 2.2042000000003364e-05, 2.112500000000031e-05, 2.5901999999997788e-05, 2.211099999999827e-05, 2.201300000000128e-05, 2.493100000000234e-05, 2.0165999999998546e-05, 2.109700000000117e-05, 2.304100000000142e-05, 2.587500000000159e-05, 2.5014000000000286e-05, 2.6860999999999552e-05, 2.493099999999887e-05, 2.588900000000116e-05, 2.3042000000000895e-05, 2.5888000000001687e-05, 2.494500000000191e-05, 2.391700000000177e-05, 2.5846999999998982e-05, 2.306900000000056e-05, 2.5902000000001257e-05, 2.3028000000001325e-05, 2.590300000000073e-05, 2.4943999999998967e-05, 2.208299999999913e-05, 2.113899999999988e-05, 2.011099999999974e-05, 2.588899999999769e-05, 2.2070000000002504e-05, 2.3013999999998286e-05, 2.4915999999999827e-05, 2.5915999999997358e-05, 2.3014000000001755e-05, 2.4943999999998967e-05, 2.398699999999962e-05, 2.011099999999974e-05, 2.5846999999998982e-05, 2.59170000000003e-05, 2.015300000000192e-05, 2.493099999999887e-05, 2.588899999999769e-05, 2.018100000000106e-05, 2.3986000000000146e-05, 2.4972000000001576e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.938" endtime="20201110 08:34:21.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.933" endtime="20201110 08:34:21.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.943" endtime="20201110 08:34:21.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.946" endtime="20201110 08:34:21.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.944" endtime="20201110 08:34:21.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.941" endtime="20201110 08:34:21.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.572" endtime="20201110 08:34:21.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.571" endtime="20201110 08:34:21.967"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.975" endtime="20201110 08:34:21.998"></status>
</kw>
<msg timestamp="20201110 08:34:21.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.974" endtime="20201110 08:34:21.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.999" endtime="20201110 08:34:22.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.002" endtime="20201110 08:34:22.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.971" endtime="20201110 08:34:22.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.969" endtime="20201110 08:34:22.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.011" endtime="20201110 08:34:22.296"></status>
</kw>
<msg timestamp="20201110 08:34:22.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024597389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024621375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.009" endtime="20201110 08:34:22.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024597389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024621375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.301" endtime="20201110 08:34:22.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.309" endtime="20201110 08:34:22.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.007" endtime="20201110 08:34:22.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.005" endtime="20201110 08:34:22.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.315" level="INFO">${RESULT} = [{'time': 0.024621375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3986000000000146e-05, 'source_diff': 2.3986000000000146e-05}, {'time': 0.024651083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:22.312" endtime="20201110 08:34:22.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.329" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:22.316" endtime="20201110 08:34:22.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.333" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.332" endtime="20201110 08:34:22.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.336" level="INFO">VALUE: [2.3986000000000146e-05, 2.106900000000203e-05, 2.1098000000000644e-05, 2.5930000000000397e-05, 2.5901999999997788e-05, 2.111100000000074e-05, 2.302700000000185e-05, 2.3042000000000895e-05, 2.2083999999998605e-05, 2.4971999999998107e-05, 2.49169999999993e-05, 2.2055999999999465e-05, 2.3986000000000146e-05, 2.5957999999999537e-05, 2.308300000000013e-05, 2.4028000000002325e-05, 2.4944000000002436e-05, 2.112499999999684e-05, 2.6804999999997803e-05, 2.3028000000001325e-05, 2.20830000000026e-05, 2.3056000000000465e-05, 2.4054999999998522e-05, 2.016700000000149e-05, 2.588899999999769e-05, 2.4901999999996788e-05, 2.4943999999998967e-05, 2.211099999999827e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.3972000000000576e-05, 2.308300000000013e-05, 2.111100000000074e-05, 2.108299999999813e-05, 2.015299999999845e-05, 2.3042000000000895e-05, 2.588900000000116e-05, 2.0180000000001586e-05, 2.308300000000013e-05, 2.2083999999998605e-05, 2.2971999999999576e-05, 2.205499999999999e-05, 2.3013999999998286e-05, 2.587500000000159e-05, 2.59170000000003e-05, 2.112500000000031e-05, 2.69170000000013e-05, 2.205499999999999e-05, 2.209700000000217e-05, 2.59170000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.334" endtime="20201110 08:34:22.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.330" endtime="20201110 08:34:22.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.339" endtime="20201110 08:34:22.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.342" endtime="20201110 08:34:22.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.341" endtime="20201110 08:34:22.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.337" endtime="20201110 08:34:22.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.968" endtime="20201110 08:34:22.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.967" endtime="20201110 08:34:22.363"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.372" endtime="20201110 08:34:22.394"></status>
</kw>
<msg timestamp="20201110 08:34:22.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.370" endtime="20201110 08:34:22.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.396" endtime="20201110 08:34:22.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.398" endtime="20201110 08:34:22.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.368" endtime="20201110 08:34:22.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.366" endtime="20201110 08:34:22.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.407" endtime="20201110 08:34:22.696"></status>
</kw>
<msg timestamp="20201110 08:34:22.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024930569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024962208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.406" endtime="20201110 08:34:22.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024930569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024962208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.701" endtime="20201110 08:34:22.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.709" endtime="20201110 08:34:22.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.403" endtime="20201110 08:34:22.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.402" endtime="20201110 08:34:22.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.715" level="INFO">${RESULT} = [{'time': 0.024962208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.163899999999997e-05, 'source_diff': 3.163899999999997e-05}, {'time': 0.024992444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:22.712" endtime="20201110 08:34:22.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.729" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:22.716" endtime="20201110 08:34:22.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.733" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.732" endtime="20201110 08:34:22.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.736" level="INFO">VALUE: [3.163899999999997e-05, 2.5915999999997358e-05, 2.3014000000001755e-05, 2.20969999999987e-05, 2.20969999999987e-05, 2.5833999999998886e-05, 2.394500000000091e-05, 2.5874999999998122e-05, 2.4972000000001576e-05, 2.015299999999845e-05, 2.3999999999999716e-05, 2.0179999999998116e-05, 2.016700000000149e-05, 2.5874999999998122e-05, 2.4929999999999397e-05, 2.3999999999999716e-05, 2.5874999999998122e-05, 2.4013999999999286e-05, 2.6833999999999886e-05, 2.4957999999998537e-05, 2.49169999999993e-05, 2.206899999999956e-05, 2.3986000000000146e-05, 2.4971999999998107e-05, 2.208299999999913e-05, 2.6833000000000412e-05, 2.493099999999887e-05, 2.4930000000002867e-05, 2.597300000000205e-05, 2.4957999999998537e-05, 2.3014000000001755e-05, 2.49169999999993e-05, 2.4971999999998107e-05, 2.590300000000073e-05, 2.111100000000074e-05, 2.1041999999998895e-05, 2.011099999999974e-05, 2.0112000000002683e-05, 2.5902000000001257e-05, 2.3972000000000576e-05, 2.206900000000303e-05, 2.59170000000003e-05, 2.016700000000149e-05, 2.5027999999999856e-05, 2.3041999999997426e-05, 2.108299999999813e-05, 2.2028000000000325e-05, 2.4929999999999397e-05, 2.1194000000002156e-05, 2.590300000000073e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.734" endtime="20201110 08:34:22.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.730" endtime="20201110 08:34:22.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.739" endtime="20201110 08:34:22.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.743" endtime="20201110 08:34:22.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.741" endtime="20201110 08:34:22.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.737" endtime="20201110 08:34:22.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.364" endtime="20201110 08:34:22.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.364" endtime="20201110 08:34:22.763"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.772" endtime="20201110 08:34:22.792"></status>
</kw>
<msg timestamp="20201110 08:34:22.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.771" endtime="20201110 08:34:22.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.793" endtime="20201110 08:34:22.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.796" endtime="20201110 08:34:22.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.768" endtime="20201110 08:34:22.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.766" endtime="20201110 08:34:22.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.805" endtime="20201110 08:34:23.091"></status>
</kw>
<msg timestamp="20201110 08:34:23.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.803" endtime="20201110 08:34:23.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.095" endtime="20201110 08:34:23.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.104" endtime="20201110 08:34:23.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.801" endtime="20201110 08:34:23.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.799" endtime="20201110 08:34:23.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.110" level="INFO">${RESULT} = [{'time': 0.021763125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8736000000001427e-05, 'source_diff': 2.8736000000001427e-05}, {'time': 0.021793861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:23.107" endtime="20201110 08:34:23.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.123" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:23.111" endtime="20201110 08:34:23.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.128" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.127" endtime="20201110 08:34:23.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.130" level="INFO">VALUE: [2.8736000000001427e-05, 2.490299999999973e-05, 2.588900000000116e-05, 2.397300000000005e-05, 2.590299999999726e-05, 2.106900000000203e-05, 2.490299999999973e-05, 2.016699999999802e-05, 2.112500000000031e-05, 2.588900000000116e-05, 2.4957999999998537e-05, 2.488900000000016e-05, 2.20969999999987e-05, 2.20969999999987e-05, 2.3986000000000146e-05, 2.1084000000001074e-05, 2.013899999999888e-05, 2.4929999999999397e-05, 2.4014000000002755e-05, 2.10830000000016e-05, 2.2055999999999465e-05, 2.587500000000159e-05, 2.6749999999998997e-05, 2.2028000000000325e-05, 2.3986000000000146e-05, 2.4027999999998856e-05, 2.5957999999999537e-05, 2.208299999999913e-05, 2.2055999999999465e-05, 2.111099999999727e-05, 2.4944000000002436e-05, 2.588900000000116e-05, 2.111100000000074e-05, 2.3972000000000576e-05, 2.109700000000117e-05, 2.590300000000073e-05, 2.3999999999999716e-05, 2.015299999999845e-05, 2.495900000000148e-05, 2.211100000000174e-05, 2.118100000000206e-05, 2.587500000000159e-05, 2.018099999999759e-05, 2.590299999999726e-05, 2.018100000000106e-05, 2.6833999999999886e-05, 2.112500000000031e-05, 2.0166000000002016e-05, 2.111100000000074e-05, 2.2097999999998175e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.129" endtime="20201110 08:34:23.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.124" endtime="20201110 08:34:23.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.134" endtime="20201110 08:34:23.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.137" endtime="20201110 08:34:23.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.136" endtime="20201110 08:34:23.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.132" endtime="20201110 08:34:23.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.764" endtime="20201110 08:34:23.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.764" endtime="20201110 08:34:23.158"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.167" endtime="20201110 08:34:23.188"></status>
</kw>
<msg timestamp="20201110 08:34:23.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.165" endtime="20201110 08:34:23.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.189" endtime="20201110 08:34:23.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.192" endtime="20201110 08:34:23.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.163" endtime="20201110 08:34:23.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.161" endtime="20201110 08:34:23.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.200" endtime="20201110 08:34:23.489"></status>
</kw>
<msg timestamp="20201110 08:34:23.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023828833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023844222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.199" endtime="20201110 08:34:23.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023828833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023844222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.493" endtime="20201110 08:34:23.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.502" endtime="20201110 08:34:23.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.196" endtime="20201110 08:34:23.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.195" endtime="20201110 08:34:23.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.508" level="INFO">${RESULT} = [{'time': 0.023844222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.538900000000107e-05, 'source_diff': 1.538900000000107e-05}, {'time': 0.023874875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.505" endtime="20201110 08:34:23.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.521" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:23.509" endtime="20201110 08:34:23.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.526" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.525" endtime="20201110 08:34:23.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.528" level="INFO">VALUE: [1.538900000000107e-05, 2.2041999999999895e-05, 2.59170000000003e-05, 2.487500000000059e-05, 2.495900000000148e-05, 2.0165999999998546e-05, 2.59170000000003e-05, 2.588900000000116e-05, 2.4971999999998107e-05, 2.113899999999988e-05, 2.49169999999993e-05, 2.4013999999999286e-05, 2.3999999999999716e-05, 2.208299999999913e-05, 2.3986000000000146e-05, 2.012499999999931e-05, 2.2028000000000325e-05, 2.3972000000000576e-05, 2.111100000000074e-05, 2.016700000000149e-05, 2.6763999999998567e-05, 2.5874999999998122e-05, 2.593099999999987e-05, 2.2055999999999465e-05, 2.3040999999997952e-05, 2.2040999999996952e-05, 2.308300000000013e-05, 2.016699999999802e-05, 2.3972000000000576e-05, 2.2070000000002504e-05, 2.111100000000074e-05, 2.2985999999999146e-05, 2.3958000000001006e-05, 2.6874999999999122e-05, 2.0151999999998976e-05, 2.112500000000031e-05, 2.209700000000217e-05, 2.016699999999802e-05, 2.587500000000159e-05, 2.4958000000002006e-05, 2.5943999999999967e-05, 2.3999999999999716e-05, 2.20969999999987e-05, 2.3000000000002185e-05, 2.208299999999913e-05, 2.2069999999999035e-05, 2.59170000000003e-05, 2.112500000000031e-05, 2.495900000000148e-05, 2.393100000000134e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.527" endtime="20201110 08:34:23.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.522" endtime="20201110 08:34:23.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.538" endtime="20201110 08:34:23.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.541" endtime="20201110 08:34:23.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.540" endtime="20201110 08:34:23.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.536" endtime="20201110 08:34:23.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.159" endtime="20201110 08:34:23.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.159" endtime="20201110 08:34:23.562"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.571" endtime="20201110 08:34:23.591"></status>
</kw>
<msg timestamp="20201110 08:34:23.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.569" endtime="20201110 08:34:23.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.592" endtime="20201110 08:34:23.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.594" endtime="20201110 08:34:23.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.567" endtime="20201110 08:34:23.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.565" endtime="20201110 08:34:23.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.603" endtime="20201110 08:34:23.890"></status>
</kw>
<msg timestamp="20201110 08:34:23.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021672903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021681556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.602" endtime="20201110 08:34:23.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021672903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021681556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.894" endtime="20201110 08:34:23.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.902" endtime="20201110 08:34:23.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.599" endtime="20201110 08:34:23.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.598" endtime="20201110 08:34:23.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.909" level="INFO">${RESULT} = [{'time': 0.021681556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.021712833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.905" endtime="20201110 08:34:23.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.922" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:23.910" endtime="20201110 08:34:23.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.926" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.925" endtime="20201110 08:34:23.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.929" level="INFO">VALUE: [8.653000000000827e-06, 2.5902000000001257e-05, 2.304100000000142e-05, 2.2055999999999465e-05, 2.111099999999727e-05, 2.016700000000149e-05, 2.4013999999999286e-05, 2.494500000000191e-05, 2.205499999999999e-05, 2.581900000000331e-05, 2.4000000000003185e-05, 2.016699999999802e-05, 2.111100000000074e-05, 2.6792000000001176e-05, 2.0194000000001155e-05, 2.3055999999996996e-05, 2.018100000000106e-05, 2.3957999999997537e-05, 2.2083999999998605e-05, 2.2069999999999035e-05, 2.2069999999999035e-05, 2.590300000000073e-05, 2.397300000000005e-05, 2.490299999999973e-05, 2.3042000000000895e-05, 2.588900000000116e-05, 2.5902000000001257e-05, 2.590300000000073e-05, 2.587500000000159e-05, 2.590299999999726e-05, 2.593099999999987e-05, 2.3999999999999716e-05, 2.588899999999769e-05, 2.3986000000000146e-05, 2.3014000000001755e-05, 2.208299999999913e-05, 2.019500000000063e-05, 2.013899999999888e-05, 2.688900000000216e-05, 2.3986000000000146e-05, 2.3056000000000465e-05, 2.497300000000105e-05, 2.497300000000105e-05, 2.693100000000087e-05, 2.20969999999987e-05, 2.4943999999998967e-05, 2.2070000000002504e-05, 2.3972000000000576e-05, 2.20969999999987e-05, 2.016699999999802e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.927" endtime="20201110 08:34:23.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.923" endtime="20201110 08:34:23.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.932" endtime="20201110 08:34:23.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.936" endtime="20201110 08:34:23.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.934" endtime="20201110 08:34:23.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.931" endtime="20201110 08:34:23.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.563" endtime="20201110 08:34:23.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.563" endtime="20201110 08:34:23.956"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.965" endtime="20201110 08:34:23.989"></status>
</kw>
<msg timestamp="20201110 08:34:23.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.963" endtime="20201110 08:34:23.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.991" endtime="20201110 08:34:23.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.993" endtime="20201110 08:34:23.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.961" endtime="20201110 08:34:23.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.959" endtime="20201110 08:34:23.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.002" endtime="20201110 08:34:24.289"></status>
</kw>
<msg timestamp="20201110 08:34:24.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024493486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024556681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.001" endtime="20201110 08:34:24.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024493486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024556681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.293" endtime="20201110 08:34:24.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.301" endtime="20201110 08:34:24.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.998" endtime="20201110 08:34:24.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.996" endtime="20201110 08:34:24.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.308" level="INFO">${RESULT} = [{'time': 0.024556681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.3195000000002e-05, 'source_diff': 6.3195000000002e-05}, {'time': 0.024617403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201110 08:34:24.304" endtime="20201110 08:34:24.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.322" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:24.309" endtime="20201110 08:34:24.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.326" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.325" endtime="20201110 08:34:24.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.329" level="INFO">VALUE: [6.3195000000002e-05, 5.644499999999872e-05, 5.2665999999999824e-05, 5.262500000000059e-05, 5.269499999999844e-05, 5.172200000000057e-05, 5.2708000000002e-05, 5.5513999999999564e-05, 5.645899999999829e-05, 5.077700000000185e-05, 5.26669999999993e-05, 5.079100000000142e-05, 5.077700000000185e-05, 5.5541999999998704e-05, 5.362499999999812e-05, 5.6528000000000134e-05, 5.558399999999741e-05, 5.6500000000000994e-05, 5.459699999999998e-05, 5.268099999999887e-05, 5.7457999999999815e-05, 5.558399999999741e-05, 5.458300000000041e-05, 5.461100000000302e-05, 5.6528000000000134e-05, 5.266700000000277e-05, 5.456900000000084e-05, 5.6500000000000994e-05, 5.459699999999998e-05, 5.461099999999955e-05, 5.6514000000000564e-05, 5.6541999999999704e-05, 5.1708000000001e-05, 5.7471999999999385e-05, 5.265299999999973e-05, 5.559700000000098e-05, 5.6555999999999274e-05, 5.6485999999997955e-05, 5.083300000000013e-05, 5.6486000000001424e-05, 5.45280000000016e-05, 5.361099999999855e-05, 5.2679999999999394e-05, 5.555600000000174e-05, 5.6514000000000564e-05, 5.562500000000012e-05, 5.561100000000055e-05, 5.46670000000013e-05, 5.6514000000000564e-05, 5.268099999999887e-05]</msg>
<status status="PASS" starttime="20201110 08:34:24.327" endtime="20201110 08:34:24.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.323" endtime="20201110 08:34:24.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.332" endtime="20201110 08:34:24.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.336" endtime="20201110 08:34:24.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.334" endtime="20201110 08:34:24.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.331" endtime="20201110 08:34:24.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.957" endtime="20201110 08:34:24.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.957" endtime="20201110 08:34:24.357"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.365" endtime="20201110 08:34:24.385"></status>
</kw>
<msg timestamp="20201110 08:34:24.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.364" endtime="20201110 08:34:24.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.386" endtime="20201110 08:34:24.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.389" endtime="20201110 08:34:24.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.361" endtime="20201110 08:34:24.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.359" endtime="20201110 08:34:24.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.397" endtime="20201110 08:34:24.684"></status>
</kw>
<msg timestamp="20201110 08:34:24.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021220889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021265917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.396" endtime="20201110 08:34:24.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021220889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021265917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.689" endtime="20201110 08:34:24.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.697" endtime="20201110 08:34:24.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.393" endtime="20201110 08:34:24.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.392" endtime="20201110 08:34:24.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.703" level="INFO">${RESULT} = [{'time': 0.021265917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.502799999999904e-05, 'source_diff': 4.502799999999904e-05}, {'time': 0.021326444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:24.700" endtime="20201110 08:34:24.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.716" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:24.704" endtime="20201110 08:34:24.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.721" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.720" endtime="20201110 08:34:24.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.723" level="INFO">VALUE: [4.502799999999904e-05, 5.558300000000141e-05, 5.6528000000000134e-05, 5.5555999999998273e-05, 5.36670000000003e-05, 5.076400000000175e-05, 5.7485999999998955e-05, 5.554099999999923e-05, 5.458300000000041e-05, 5.3707999999999534e-05, 5.559700000000098e-05, 5.554099999999923e-05, 5.358299999999941e-05, 5.7486000000002424e-05, 5.454200000000117e-05, 5.266700000000277e-05, 5.461099999999955e-05, 5.5527999999999134e-05, 5.076399999999828e-05, 5.169500000000091e-05, 5.7457999999999815e-05, 5.079199999999742e-05, 5.268100000000234e-05, 5.2679999999999394e-05, 5.079200000000089e-05, 5.2679999999999394e-05, 5.6500000000000994e-05, 5.557000000000131e-05, 5.6528000000000134e-05, 5.1708000000001e-05, 5.172200000000057e-05, 5.458399999999988e-05, 5.1721999999997104e-05, 5.461099999999955e-05, 5.459699999999998e-05, 5.2665999999999824e-05, 5.5541999999998704e-05, 5.6528000000000134e-05, 5.554200000000217e-05, 5.462499999999912e-05, 5.359699999999898e-05, 5.457000000000031e-05, 5.2707999999998534e-05, 5.361099999999855e-05, 5.269400000000243e-05, 5.269500000000191e-05, 5.269499999999844e-05, 5.561200000000002e-05, 5.363899999999769e-05, 5.558300000000141e-05]</msg>
<status status="PASS" starttime="20201110 08:34:24.722" endtime="20201110 08:34:24.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.717" endtime="20201110 08:34:24.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.727" endtime="20201110 08:34:24.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.730" endtime="20201110 08:34:24.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.729" endtime="20201110 08:34:24.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.725" endtime="20201110 08:34:24.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.357" endtime="20201110 08:34:24.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.357" endtime="20201110 08:34:24.751"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.760" endtime="20201110 08:34:24.781"></status>
</kw>
<msg timestamp="20201110 08:34:24.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.758" endtime="20201110 08:34:24.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.783" endtime="20201110 08:34:24.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.785" endtime="20201110 08:34:24.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.756" endtime="20201110 08:34:24.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.754" endtime="20201110 08:34:24.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.794" endtime="20201110 08:34:25.082"></status>
</kw>
<msg timestamp="20201110 08:34:25.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023330972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023377, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:24.792" endtime="20201110 08:34:25.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023330972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023377, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:25.086" endtime="20201110 08:34:25.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.094" endtime="20201110 08:34:25.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.790" endtime="20201110 08:34:25.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.788" endtime="20201110 08:34:25.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.101" level="INFO">${RESULT} = [{'time': 0.023377, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.602800000000004e-05, 'source_diff': 4.602800000000004e-05}, {'time': 0.023438014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:34:25.098" endtime="20201110 08:34:25.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.114" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:25.102" endtime="20201110 08:34:25.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.119" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.118" endtime="20201110 08:34:25.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.121" level="INFO">VALUE: [4.602800000000004e-05, 5.462499999999912e-05, 5.554200000000217e-05, 5.0708e-05, 5.555600000000174e-05, 5.652700000000066e-05, 5.365300000000073e-05, 5.174999999999971e-05, 5.651300000000109e-05, 5.077800000000132e-05, 5.740300000000101e-05, 5.358300000000288e-05, 5.2679999999999394e-05, 5.462499999999912e-05, 5.5555999999998273e-05, 5.654100000000023e-05, 5.5555999999998273e-05, 5.169400000000143e-05, 5.363900000000116e-05, 5.180599999999799e-05, 5.6402000000000535e-05, 5.16669999999983e-05, 5.556999999999784e-05, 5.2707999999998534e-05, 5.458399999999988e-05, 5.1679999999998394e-05, 5.6541999999999704e-05, 5.455500000000127e-05, 5.072199999999957e-05, 5.645900000000176e-05, 5.6416000000000105e-05, 5.6555999999999274e-05, 5.462499999999912e-05, 5.6500000000000994e-05, 5.5527999999999134e-05, 5.077800000000132e-05, 5.26669999999993e-05, 5.45280000000016e-05, 5.266700000000277e-05, 5.3666000000000824e-05, 5.6514000000000564e-05, 5.268099999999887e-05, 5.462499999999912e-05, 5.2679999999999394e-05, 5.169400000000143e-05, 5.454099999999823e-05, 5.074999999999871e-05, 5.6500000000000994e-05, 5.174999999999971e-05, 5.169400000000143e-05]</msg>
<status status="PASS" starttime="20201110 08:34:25.120" endtime="20201110 08:34:25.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.115" endtime="20201110 08:34:25.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.125" endtime="20201110 08:34:25.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.128" endtime="20201110 08:34:25.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.127" endtime="20201110 08:34:25.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.123" endtime="20201110 08:34:25.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.752" endtime="20201110 08:34:25.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.752" endtime="20201110 08:34:25.149"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.158" endtime="20201110 08:34:25.178"></status>
</kw>
<msg timestamp="20201110 08:34:25.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.156" endtime="20201110 08:34:25.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.179" endtime="20201110 08:34:25.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.182" endtime="20201110 08:34:25.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.154" endtime="20201110 08:34:25.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.152" endtime="20201110 08:34:25.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.191" endtime="20201110 08:34:25.478"></status>
</kw>
<msg timestamp="20201110 08:34:25.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.189" endtime="20201110 08:34:25.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.482" endtime="20201110 08:34:25.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.490" endtime="20201110 08:34:25.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.186" endtime="20201110 08:34:25.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.185" endtime="20201110 08:34:25.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.497" level="INFO">${RESULT} = [{'time': 0.022527806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.64870000000009e-05, 'source_diff': 5.64870000000009e-05}, {'time': 0.022589292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:25.493" endtime="20201110 08:34:25.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.510" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:25.498" endtime="20201110 08:34:25.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.514" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.513" endtime="20201110 08:34:25.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.517" level="INFO">VALUE: [5.64870000000009e-05, 5.46670000000013e-05, 5.6486000000001424e-05, 5.659699999999851e-05, 5.6514000000000564e-05, 5.073599999999914e-05, 5.661100000000155e-05, 5.074999999999871e-05, 5.5499999999999994e-05, 5.458399999999988e-05, 5.5499999999999994e-05, 5.173600000000014e-05, 4.98200000000025e-05, 5.459699999999998e-05, 5.36670000000003e-05, 5.074999999999871e-05, 5.655600000000274e-05, 5.455600000000074e-05, 5.4680000000001394e-05, 5.469499999999697e-05, 5.079199999999742e-05, 5.554200000000217e-05, 5.170899999999701e-05, 5.172300000000005e-05, 5.654100000000023e-05, 5.076399999999828e-05, 5.745899999999929e-05, 5.556900000000184e-05, 5.365299999999726e-05, 5.173600000000014e-05, 5.459699999999998e-05, 5.2665999999999824e-05, 5.2665999999999824e-05, 5.365300000000073e-05, 5.3693999999999964e-05, 5.462499999999912e-05, 5.1693999999997964e-05, 5.55410000000027e-05, 5.265299999999973e-05, 5.555500000000227e-05, 5.181899999999809e-05, 5.076299999999881e-05, 5.6514000000000564e-05, 5.080600000000046e-05, 5.2749999999997244e-05, 5.365299999999726e-05, 5.077800000000132e-05, 5.268099999999887e-05, 5.272300000000105e-05, 5.176399999999928e-05]</msg>
<status status="PASS" starttime="20201110 08:34:25.515" endtime="20201110 08:34:25.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.511" endtime="20201110 08:34:25.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.520" endtime="20201110 08:34:25.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.524" endtime="20201110 08:34:25.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.522" endtime="20201110 08:34:25.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.519" endtime="20201110 08:34:25.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.150" endtime="20201110 08:34:25.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.149" endtime="20201110 08:34:25.545"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.553" endtime="20201110 08:34:25.576"></status>
</kw>
<msg timestamp="20201110 08:34:25.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.552" endtime="20201110 08:34:25.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.577" endtime="20201110 08:34:25.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.580" endtime="20201110 08:34:25.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.549" endtime="20201110 08:34:25.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.547" endtime="20201110 08:34:25.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.589" endtime="20201110 08:34:25.875"></status>
</kw>
<msg timestamp="20201110 08:34:25.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023928444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02396775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:25.587" endtime="20201110 08:34:25.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023928444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02396775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:25.879" endtime="20201110 08:34:25.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.888" endtime="20201110 08:34:25.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.584" endtime="20201110 08:34:25.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.583" endtime="20201110 08:34:25.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.894" level="INFO">${RESULT} = [{'time': 0.02396775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.930599999999937e-05, 'source_diff': 3.930599999999937e-05}, {'time': 0.024029639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:25.891" endtime="20201110 08:34:25.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.907" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:25.895" endtime="20201110 08:34:25.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.912" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.911" endtime="20201110 08:34:25.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.914" level="INFO">VALUE: [3.930599999999937e-05, 5.174999999999971e-05, 5.079200000000089e-05, 5.647300000000133e-05, 5.2679999999999394e-05, 5.2679999999999394e-05, 5.362499999999812e-05, 5.463900000000216e-05, 5.3638000000001684e-05, 5.556900000000184e-05, 5.26669999999993e-05, 5.363900000000116e-05, 5.173600000000014e-05, 5.6486000000001424e-05, 5.6500000000000994e-05, 5.269499999999844e-05, 5.6500000000000994e-05, 5.36670000000003e-05, 5.3638000000001684e-05, 5.172200000000057e-05, 5.462499999999912e-05, 5.174999999999971e-05, 5.2708000000002e-05, 5.457000000000031e-05, 5.554099999999923e-05, 5.268099999999887e-05, 5.6528000000000134e-05, 5.4722000000000104e-05, 5.6471999999998385e-05, 5.173600000000014e-05, 5.173600000000014e-05, 5.459699999999998e-05, 5.6500000000000994e-05, 5.365300000000073e-05, 5.077700000000185e-05, 5.2708000000002e-05, 5.172200000000057e-05, 5.5541999999998704e-05, 5.7444000000000245e-05, 5.176400000000275e-05, 5.356899999999984e-05, 5.077799999999785e-05, 5.555500000000227e-05, 5.1707999999997534e-05, 5.6514000000000564e-05, 5.365300000000073e-05, 5.463899999999869e-05, 5.6513999999997094e-05, 5.6500000000000994e-05, 5.184699999999723e-05]</msg>
<status status="PASS" starttime="20201110 08:34:25.913" endtime="20201110 08:34:25.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.908" endtime="20201110 08:34:25.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.918" endtime="20201110 08:34:25.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.921" endtime="20201110 08:34:25.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.920" endtime="20201110 08:34:25.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.916" endtime="20201110 08:34:25.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.545" endtime="20201110 08:34:25.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.545" endtime="20201110 08:34:25.942"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.951" endtime="20201110 08:34:25.977"></status>
</kw>
<msg timestamp="20201110 08:34:25.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.949" endtime="20201110 08:34:25.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.978" endtime="20201110 08:34:25.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.981" endtime="20201110 08:34:25.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.947" endtime="20201110 08:34:25.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.945" endtime="20201110 08:34:25.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.990" endtime="20201110 08:34:26.278"></status>
</kw>
<msg timestamp="20201110 08:34:26.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023220347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023272083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.988" endtime="20201110 08:34:26.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023220347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023272083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.284" endtime="20201110 08:34:26.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.294" endtime="20201110 08:34:26.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.986" endtime="20201110 08:34:26.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.984" endtime="20201110 08:34:26.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.303" level="INFO">${RESULT} = [{'time': 0.023272083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.173600000000014e-05, 'source_diff': 5.173600000000014e-05}, {'time': 0.023333028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:26.299" endtime="20201110 08:34:26.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.317" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:26.304" endtime="20201110 08:34:26.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.322" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.321" endtime="20201110 08:34:26.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.325" level="INFO">VALUE: [5.173600000000014e-05, 5.269499999999844e-05, 5.076400000000175e-05, 5.6514000000000564e-05, 5.354200000000017e-05, 5.554099999999923e-05, 5.456900000000084e-05, 5.174999999999971e-05, 5.448600000000289e-05, 5.172200000000057e-05, 5.6458000000002284e-05, 5.173699999999962e-05, 5.259699999999798e-05, 5.3680000000000394e-05, 5.269500000000191e-05, 5.458300000000041e-05, 5.448600000000289e-05, 5.554099999999923e-05, 5.073599999999914e-05, 5.554200000000217e-05, 5.5541999999998704e-05, 5.077800000000132e-05, 5.074999999999871e-05, 5.2708000000002e-05, 5.5513999999999564e-05, 5.254199999999917e-05, 5.55280000000026e-05, 5.262499999999712e-05, 5.073599999999914e-05, 5.173600000000014e-05, 5.5541999999998704e-05, 5.461099999999955e-05, 5.258300000000188e-05, 5.174999999999971e-05, 5.5472000000000854e-05, 5.086099999999927e-05, 5.652700000000066e-05, 5.173600000000014e-05, 5.561100000000055e-05, 5.55280000000026e-05, 5.451400000000203e-05, 5.172200000000057e-05, 5.6514000000000564e-05, 5.465299999999826e-05, 5.162500000000306e-05, 5.457000000000031e-05, 5.074999999999871e-05, 5.361199999999802e-05, 5.644500000000219e-05, 5.2708000000002e-05]</msg>
<status status="PASS" starttime="20201110 08:34:26.323" endtime="20201110 08:34:26.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.318" endtime="20201110 08:34:26.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.329" endtime="20201110 08:34:26.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.332" endtime="20201110 08:34:26.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.330" endtime="20201110 08:34:26.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.327" endtime="20201110 08:34:26.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.943" endtime="20201110 08:34:26.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.943" endtime="20201110 08:34:26.353"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.362" endtime="20201110 08:34:26.384"></status>
</kw>
<msg timestamp="20201110 08:34:26.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.360" endtime="20201110 08:34:26.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.386" endtime="20201110 08:34:26.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.388" endtime="20201110 08:34:26.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.358" endtime="20201110 08:34:26.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.356" endtime="20201110 08:34:26.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.397" endtime="20201110 08:34:26.698"></status>
</kw>
<msg timestamp="20201110 08:34:26.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024360792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024404889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.395" endtime="20201110 08:34:26.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024360792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024404889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.707" endtime="20201110 08:34:26.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.726" endtime="20201110 08:34:26.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.393" endtime="20201110 08:34:26.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.391" endtime="20201110 08:34:26.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.734" level="INFO">${RESULT} = [{'time': 0.024404889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4096999999999886e-05, 'source_diff': 4.4096999999999886e-05}, {'time': 0.024465375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:26.731" endtime="20201110 08:34:26.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.747" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:26.735" endtime="20201110 08:34:26.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.752" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.751" endtime="20201110 08:34:26.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.754" level="INFO">VALUE: [4.4096999999999886e-05, 5.169400000000143e-05, 5.169499999999744e-05, 5.451400000000203e-05, 5.365300000000073e-05, 5.5541999999998704e-05, 5.172200000000057e-05, 5.363900000000116e-05, 5.457000000000031e-05, 5.073600000000261e-05, 5.6528000000000134e-05, 5.365300000000073e-05, 5.077799999999785e-05, 5.462500000000259e-05, 5.3637999999998215e-05, 5.166700000000177e-05, 5.643099999999915e-05, 5.076399999999828e-05, 5.2693999999998964e-05, 5.6555999999999274e-05, 5.080600000000046e-05, 5.6500000000000994e-05, 5.362499999999812e-05, 5.358400000000235e-05, 5.5472000000000854e-05, 5.458300000000041e-05, 5.172300000000005e-05, 5.555600000000174e-05, 5.6485999999997955e-05, 5.7444000000000245e-05, 5.55549999999988e-05, 5.55410000000027e-05, 5.362500000000159e-05, 5.6486000000001424e-05, 5.359699999999898e-05, 5.268100000000234e-05, 5.365300000000073e-05, 5.268100000000234e-05, 5.076400000000175e-05, 5.458300000000041e-05, 5.077800000000132e-05, 5.6486000000001424e-05, 5.5486000000000424e-05, 5.461099999999955e-05, 5.269500000000191e-05, 5.357000000000278e-05, 5.269400000000243e-05, 5.556899999999837e-05, 5.077800000000132e-05, 5.45280000000016e-05]</msg>
<status status="PASS" starttime="20201110 08:34:26.753" endtime="20201110 08:34:26.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.748" endtime="20201110 08:34:26.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.758" endtime="20201110 08:34:26.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.761" endtime="20201110 08:34:26.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.760" endtime="20201110 08:34:26.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.756" endtime="20201110 08:34:26.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.354" endtime="20201110 08:34:26.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.353" endtime="20201110 08:34:26.782"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.791" endtime="20201110 08:34:26.811"></status>
</kw>
<msg timestamp="20201110 08:34:26.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.789" endtime="20201110 08:34:26.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.812" endtime="20201110 08:34:26.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.815" endtime="20201110 08:34:26.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.787" endtime="20201110 08:34:26.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.785" endtime="20201110 08:34:26.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.823" endtime="20201110 08:34:27.111"></status>
</kw>
<msg timestamp="20201110 08:34:27.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.822" endtime="20201110 08:34:27.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.115" endtime="20201110 08:34:27.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.123" endtime="20201110 08:34:27.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.819" endtime="20201110 08:34:27.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.818" endtime="20201110 08:34:27.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.130" level="INFO">${RESULT} = [{'time': 0.022299875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.494400000000162e-05, 'source_diff': 4.494400000000162e-05}, {'time': 0.022361389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:27.126" endtime="20201110 08:34:27.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.143" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:27.131" endtime="20201110 08:34:27.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.147" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.146" endtime="20201110 08:34:27.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.150" level="INFO">VALUE: [4.494400000000162e-05, 5.169499999999744e-05, 5.275000000000071e-05, 5.258300000000188e-05, 5.7499999999998525e-05, 5.3637999999998215e-05, 5.5486000000000424e-05, 5.6500000000000994e-05, 5.076399999999828e-05, 5.556899999999837e-05, 5.5486000000000424e-05, 5.265299999999973e-05, 5.6500000000000994e-05, 5.558300000000141e-05, 5.4485999999999424e-05, 5.172200000000057e-05, 5.268099999999887e-05, 5.4499999999998994e-05, 5.6486000000001424e-05, 4.98330000000026e-05, 5.177799999999885e-05, 5.259700000000145e-05, 5.455600000000074e-05, 5.077800000000132e-05, 5.6485999999997955e-05, 5.1707999999997534e-05, 5.45549999999978e-05, 5.555500000000227e-05, 5.554200000000217e-05, 5.16530000000022e-05, 5.361099999999855e-05, 5.4527999999998134e-05, 5.6485999999997955e-05, 5.173600000000014e-05, 5.6514000000000564e-05, 5.263900000000016e-05, 5.552699999999966e-05, 5.461099999999955e-05, 5.258300000000188e-05, 5.456900000000084e-05, 5.461099999999955e-05, 5.173600000000014e-05, 5.077800000000132e-05, 5.269500000000191e-05, 5.163899999999916e-05, 5.079200000000089e-05, 5.6500000000000994e-05, 5.170900000000048e-05, 5.173600000000014e-05, 5.556899999999837e-05]</msg>
<status status="PASS" starttime="20201110 08:34:27.148" endtime="20201110 08:34:27.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.144" endtime="20201110 08:34:27.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.153" endtime="20201110 08:34:27.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.157" endtime="20201110 08:34:27.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.155" endtime="20201110 08:34:27.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.152" endtime="20201110 08:34:27.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.783" endtime="20201110 08:34:27.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.782" endtime="20201110 08:34:27.178"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.186" endtime="20201110 08:34:27.209"></status>
</kw>
<msg timestamp="20201110 08:34:27.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.185" endtime="20201110 08:34:27.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.210" endtime="20201110 08:34:27.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.213" endtime="20201110 08:34:27.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.182" endtime="20201110 08:34:27.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.180" endtime="20201110 08:34:27.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.222" endtime="20201110 08:34:27.508"></status>
</kw>
<msg timestamp="20201110 08:34:27.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023743306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023800722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.220" endtime="20201110 08:34:27.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023743306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023800722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.512" endtime="20201110 08:34:27.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.521" endtime="20201110 08:34:27.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.218" endtime="20201110 08:34:27.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.216" endtime="20201110 08:34:27.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.527" level="INFO">${RESULT} = [{'time': 0.023800722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7416000000001105e-05, 'source_diff': 5.7416000000001105e-05}, {'time': 0.023861944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:27.524" endtime="20201110 08:34:27.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.540" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:27.528" endtime="20201110 08:34:27.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.545" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.544" endtime="20201110 08:34:27.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.547" level="INFO">VALUE: [5.7416000000001105e-05, 5.076299999999881e-05, 5.5541999999998704e-05, 5.2693999999998964e-05, 5.1708000000001e-05, 5.0737000000002086e-05, 5.170900000000048e-05, 5.362499999999812e-05, 5.554200000000217e-05, 5.6443999999999245e-05, 5.269500000000191e-05, 5.55280000000026e-05, 5.5555999999998273e-05, 5.174999999999971e-05, 5.087500000000231e-05, 5.174999999999971e-05, 5.459699999999998e-05, 5.5513999999999564e-05, 5.176299999999981e-05, 5.265299999999973e-05, 5.362499999999812e-05, 5.276400000000028e-05, 5.743100000000015e-05, 5.26669999999993e-05, 5.3652000000001254e-05, 5.5472000000000854e-05, 5.363899999999769e-05, 5.4541999999997703e-05, 5.074999999999871e-05, 5.5541999999998704e-05, 5.362500000000159e-05, 5.269499999999844e-05, 5.461099999999955e-05, 5.363900000000116e-05, 5.2679999999999394e-05, 5.1721999999997104e-05, 5.361100000000202e-05, 5.361200000000149e-05, 5.361100000000202e-05, 5.176399999999928e-05, 5.459699999999998e-05, 5.16530000000022e-05, 5.6500000000000994e-05, 5.459699999999998e-05, 5.26669999999993e-05, 5.6514000000000564e-05, 5.1708000000001e-05, 5.459699999999998e-05, 5.361100000000202e-05, 5.362500000000159e-05]</msg>
<status status="PASS" starttime="20201110 08:34:27.546" endtime="20201110 08:34:27.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.541" endtime="20201110 08:34:27.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.551" endtime="20201110 08:34:27.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.554" endtime="20201110 08:34:27.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.553" endtime="20201110 08:34:27.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.549" endtime="20201110 08:34:27.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.179" endtime="20201110 08:34:27.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.178" endtime="20201110 08:34:27.575"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.584" endtime="20201110 08:34:27.605"></status>
</kw>
<msg timestamp="20201110 08:34:27.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.582" endtime="20201110 08:34:27.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.607" endtime="20201110 08:34:27.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.609" endtime="20201110 08:34:27.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.580" endtime="20201110 08:34:27.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.578" endtime="20201110 08:34:27.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.618" endtime="20201110 08:34:27.904"></status>
</kw>
<msg timestamp="20201110 08:34:27.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023026028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023073889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.616" endtime="20201110 08:34:27.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023026028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023073889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.909" endtime="20201110 08:34:27.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.917" endtime="20201110 08:34:27.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.614" endtime="20201110 08:34:27.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.612" endtime="20201110 08:34:27.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.923" level="INFO">${RESULT} = [{'time': 0.023073889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.786099999999974e-05, 'source_diff': 4.786099999999974e-05}, {'time': 0.023134806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:27.920" endtime="20201110 08:34:27.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.936" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:27.924" endtime="20201110 08:34:27.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.941" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.940" endtime="20201110 08:34:27.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.943" level="INFO">VALUE: [4.786099999999974e-05, 5.45280000000016e-05, 5.458399999999988e-05, 5.263900000000016e-05, 5.165299999999873e-05, 5.076299999999881e-05, 5.456999999999684e-05, 5.259700000000145e-05, 5.2665999999999824e-05, 5.1651999999999254e-05, 5.363900000000116e-05, 5.5541999999998704e-05, 5.454099999999823e-05, 5.076299999999881e-05, 5.2693999999998964e-05, 5.169499999999744e-05, 5.5472000000000854e-05, 5.361199999999802e-05, 5.450000000000246e-05, 5.558400000000088e-05, 5.362500000000159e-05, 5.355500000000027e-05, 5.6458000000002284e-05, 5.5555999999998273e-05, 5.265299999999973e-05, 5.556899999999837e-05, 5.6500000000000994e-05, 5.5486000000000424e-05, 5.458399999999988e-05, 5.5486000000000424e-05, 5.6514000000000564e-05, 5.083300000000013e-05, 5.4499999999998994e-05, 5.356899999999984e-05, 5.556899999999837e-05, 5.358399999999888e-05, 5.356999999999931e-05, 5.176399999999928e-05, 5.080600000000046e-05, 5.359699999999898e-05, 5.169499999999744e-05, 5.169400000000143e-05, 5.269499999999844e-05, 5.265299999999973e-05, 5.1637999999999684e-05, 5.174999999999971e-05, 5.458300000000041e-05, 5.1707999999997534e-05, 5.455599999999727e-05, 5.079200000000089e-05]</msg>
<status status="PASS" starttime="20201110 08:34:27.942" endtime="20201110 08:34:27.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.937" endtime="20201110 08:34:27.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.947" endtime="20201110 08:34:27.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.950" endtime="20201110 08:34:27.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.949" endtime="20201110 08:34:27.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.945" endtime="20201110 08:34:27.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.576" endtime="20201110 08:34:27.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.576" endtime="20201110 08:34:27.971"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.980" endtime="20201110 08:34:28.002"></status>
</kw>
<msg timestamp="20201110 08:34:28.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.978" endtime="20201110 08:34:28.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.003" endtime="20201110 08:34:28.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.006" endtime="20201110 08:34:28.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.976" endtime="20201110 08:34:28.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.974" endtime="20201110 08:34:28.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.015" endtime="20201110 08:34:28.303"></status>
</kw>
<msg timestamp="20201110 08:34:28.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023812847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023873167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.013" endtime="20201110 08:34:28.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023812847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023873167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.308" endtime="20201110 08:34:28.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.316" endtime="20201110 08:34:28.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.011" endtime="20201110 08:34:28.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.009" endtime="20201110 08:34:28.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.322" level="INFO">${RESULT} = [{'time': 0.023873167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0319999999999124e-05, 'source_diff': 6.0319999999999124e-05}, {'time': 0.023934375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:28.319" endtime="20201110 08:34:28.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.335" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:28.323" endtime="20201110 08:34:28.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.340" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.339" endtime="20201110 08:34:28.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.342" level="INFO">VALUE: [6.0319999999999124e-05, 5.075000000000218e-05, 5.172200000000057e-05, 5.2652000000000254e-05, 5.26669999999993e-05, 5.554200000000217e-05, 5.170900000000048e-05, 5.265299999999973e-05, 5.461199999999902e-05, 5.455500000000127e-05, 5.269500000000191e-05, 5.559700000000098e-05, 5.462500000000259e-05, 5.377800000000085e-05, 5.273600000000114e-05, 5.177799999999885e-05, 5.362500000000159e-05, 5.1708000000001e-05, 5.169500000000091e-05, 5.1708000000001e-05, 5.362500000000159e-05, 5.169499999999744e-05, 5.556899999999837e-05, 5.458399999999988e-05, 5.172200000000057e-05, 5.5555999999998273e-05, 5.074999999999871e-05, 5.269499999999844e-05, 5.554099999999923e-05, 5.26669999999993e-05, 5.6555999999999274e-05, 5.55410000000027e-05, 5.554099999999923e-05, 5.554099999999923e-05, 5.362500000000159e-05, 5.7542000000000704e-05, 5.269499999999844e-05, 5.362499999999812e-05, 5.169400000000143e-05, 5.076399999999828e-05, 5.365299999999726e-05, 5.075000000000218e-05, 5.461099999999955e-05, 5.069499999999991e-05, 5.170900000000048e-05, 5.461099999999955e-05, 5.080600000000046e-05, 5.459699999999998e-05, 5.6528000000000134e-05, 5.457000000000031e-05]</msg>
<status status="PASS" starttime="20201110 08:34:28.341" endtime="20201110 08:34:28.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.336" endtime="20201110 08:34:28.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.346" endtime="20201110 08:34:28.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.349" endtime="20201110 08:34:28.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.348" endtime="20201110 08:34:28.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.344" endtime="20201110 08:34:28.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.972" endtime="20201110 08:34:28.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.972" endtime="20201110 08:34:28.370"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.380" endtime="20201110 08:34:28.400"></status>
</kw>
<msg timestamp="20201110 08:34:28.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.378" endtime="20201110 08:34:28.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.401" endtime="20201110 08:34:28.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.404" endtime="20201110 08:34:28.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.375" endtime="20201110 08:34:28.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.373" endtime="20201110 08:34:28.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.413" endtime="20201110 08:34:28.699"></status>
</kw>
<msg timestamp="20201110 08:34:28.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021834611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.411" endtime="20201110 08:34:28.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021834611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.703" endtime="20201110 08:34:28.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.711" endtime="20201110 08:34:28.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.409" endtime="20201110 08:34:28.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.407" endtime="20201110 08:34:28.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.718" level="INFO">${RESULT} = [{'time': 0.021894944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.033299999999922e-05, 'source_diff': 6.033299999999922e-05}, {'time': 0.021955917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:28.715" endtime="20201110 08:34:28.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.731" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:28.719" endtime="20201110 08:34:28.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.736" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.735" endtime="20201110 08:34:28.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.738" level="INFO">VALUE: [6.033299999999922e-05, 5.362499999999812e-05, 5.6528000000000134e-05, 5.173600000000014e-05, 5.258300000000188e-05, 5.180600000000146e-05, 5.076399999999828e-05, 5.174999999999971e-05, 5.069400000000043e-05, 5.647300000000133e-05, 5.075000000000218e-05, 5.556899999999837e-05, 5.457000000000031e-05, 5.173600000000014e-05, 5.55549999999988e-05, 5.174999999999971e-05, 5.259699999999798e-05, 5.268100000000234e-05, 5.073600000000261e-05, 5.079200000000089e-05, 5.176399999999928e-05, 5.079199999999742e-05, 5.641699999999958e-05, 5.083300000000013e-05, 5.556900000000184e-05, 5.5527999999999134e-05, 5.654200000000317e-05, 5.638900000000044e-05, 5.456900000000084e-05, 5.1707999999997534e-05, 5.555500000000227e-05, 5.5555999999998273e-05, 5.258299999999841e-05, 5.743100000000015e-05, 5.559800000000045e-05, 5.2707999999998534e-05, 5.174999999999971e-05, 5.361100000000202e-05, 5.6485999999997955e-05, 5.6514000000000564e-05, 5.5499999999999994e-05, 5.6528000000000134e-05, 5.454099999999823e-05, 5.3666000000000824e-05, 5.6500000000000994e-05, 5.7471999999999385e-05, 5.556899999999837e-05, 5.1708000000001e-05, 5.076399999999828e-05, 5.2708000000002e-05]</msg>
<status status="PASS" starttime="20201110 08:34:28.737" endtime="20201110 08:34:28.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.732" endtime="20201110 08:34:28.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.746" endtime="20201110 08:34:28.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.750" endtime="20201110 08:34:28.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.748" endtime="20201110 08:34:28.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.744" endtime="20201110 08:34:28.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.371" endtime="20201110 08:34:28.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.371" endtime="20201110 08:34:28.771"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.780" endtime="20201110 08:34:28.801"></status>
</kw>
<msg timestamp="20201110 08:34:28.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.778" endtime="20201110 08:34:28.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.803" endtime="20201110 08:34:28.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.805" endtime="20201110 08:34:28.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.775" endtime="20201110 08:34:28.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.773" endtime="20201110 08:34:28.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.815" endtime="20201110 08:34:29.124"></status>
</kw>
<msg timestamp="20201110 08:34:29.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023372556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023425181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.813" endtime="20201110 08:34:29.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023372556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023425181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.129" endtime="20201110 08:34:29.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.137" endtime="20201110 08:34:29.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.811" endtime="20201110 08:34:29.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.809" endtime="20201110 08:34:29.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.144" level="INFO">${RESULT} = [{'time': 0.023425181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.262500000000059e-05, 'source_diff': 5.262500000000059e-05}, {'time': 0.023487042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:29.141" endtime="20201110 08:34:29.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.158" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:29.145" endtime="20201110 08:34:29.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.163" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.162" endtime="20201110 08:34:29.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.165" level="INFO">VALUE: [5.262500000000059e-05, 5.455600000000074e-05, 5.6472000000001854e-05, 5.554099999999923e-05, 5.736099999999883e-05, 5.5499999999999994e-05, 5.555500000000227e-05, 5.2693999999998964e-05, 5.365300000000073e-05, 5.554200000000217e-05, 5.363900000000116e-05, 5.5541999999998704e-05, 4.980499999999999e-05, 5.2679999999999394e-05, 5.1708000000001e-05, 5.559800000000045e-05, 5.558299999999794e-05, 5.26669999999993e-05, 5.459699999999998e-05, 5.459699999999998e-05, 5.076399999999828e-05, 5.461099999999955e-05, 5.077799999999785e-05, 5.6500000000000994e-05, 5.262500000000059e-05, 5.555600000000174e-05, 5.6485999999997955e-05, 5.3652000000001254e-05, 5.076299999999881e-05, 5.362500000000159e-05, 5.359699999999898e-05, 5.26669999999993e-05, 5.265299999999973e-05, 5.1708000000001e-05, 5.455500000000127e-05, 5.6514000000000564e-05, 5.551400000000303e-05, 5.263900000000016e-05, 5.362499999999812e-05, 5.161100000000002e-05, 5.6458000000002284e-05, 5.6485999999997955e-05, 5.169500000000091e-05, 5.1708000000001e-05, 5.744499999999972e-05, 5.074999999999871e-05, 5.361100000000202e-05, 5.5499999999999994e-05, 5.265299999999973e-05, 5.362500000000159e-05]</msg>
<status status="PASS" starttime="20201110 08:34:29.164" endtime="20201110 08:34:29.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.159" endtime="20201110 08:34:29.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.169" endtime="20201110 08:34:29.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.173" endtime="20201110 08:34:29.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.171" endtime="20201110 08:34:29.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.167" endtime="20201110 08:34:29.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.772" endtime="20201110 08:34:29.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.771" endtime="20201110 08:34:29.194"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.203" endtime="20201110 08:34:29.223"></status>
</kw>
<msg timestamp="20201110 08:34:29.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.201" endtime="20201110 08:34:29.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.225" endtime="20201110 08:34:29.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.227" endtime="20201110 08:34:29.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.198" endtime="20201110 08:34:29.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.196" endtime="20201110 08:34:29.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.237" endtime="20201110 08:34:29.524"></status>
</kw>
<msg timestamp="20201110 08:34:29.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022389694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.235" endtime="20201110 08:34:29.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022389694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.528" endtime="20201110 08:34:29.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.536" endtime="20201110 08:34:29.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.232" endtime="20201110 08:34:29.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.230" endtime="20201110 08:34:29.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.543" level="INFO">${RESULT} = [{'time': 0.022389694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.605500000000236e-05, 'source_diff': 6.605500000000236e-05}, {'time': 0.022451056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:29.539" endtime="20201110 08:34:29.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.556" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:29.544" endtime="20201110 08:34:29.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.560" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.559" endtime="20201110 08:34:29.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.563" level="INFO">VALUE: [6.605500000000236e-05, 5.6500000000000994e-05, 5.6486000000001424e-05, 5.361099999999855e-05, 5.554099999999923e-05, 5.7457999999999815e-05, 5.363900000000116e-05, 5.551300000000009e-05, 5.076399999999828e-05, 5.556899999999837e-05, 5.362499999999812e-05, 5.7457999999999815e-05, 5.461099999999955e-05, 5.459699999999998e-05, 5.076399999999828e-05, 5.2707999999998534e-05, 5.077800000000132e-05, 5.73610000000023e-05, 5.076400000000175e-05, 5.3693999999999964e-05, 5.076399999999828e-05, 5.6500000000000994e-05, 5.2708000000002e-05, 5.6514000000000564e-05, 5.172200000000057e-05, 5.361100000000202e-05, 5.556900000000184e-05, 5.6485999999997955e-05, 5.172300000000005e-05, 5.6514000000000564e-05, 5.552699999999966e-05, 5.173600000000014e-05, 5.459699999999998e-05, 5.6541999999999704e-05, 5.556900000000184e-05, 5.363900000000116e-05, 5.461099999999955e-05, 5.552699999999966e-05, 5.6500000000000994e-05, 5.651299999999762e-05, 5.173600000000014e-05, 5.255600000000221e-05, 5.362500000000159e-05, 5.7471999999999385e-05, 5.557000000000131e-05, 5.365300000000073e-05, 5.5541999999998704e-05, 5.640300000000001e-05, 5.362500000000159e-05, 5.6500000000000994e-05]</msg>
<status status="PASS" starttime="20201110 08:34:29.561" endtime="20201110 08:34:29.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.557" endtime="20201110 08:34:29.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.566" endtime="20201110 08:34:29.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.570" endtime="20201110 08:34:29.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.568" endtime="20201110 08:34:29.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.565" endtime="20201110 08:34:29.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.195" endtime="20201110 08:34:29.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.194" endtime="20201110 08:34:29.591"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.599" endtime="20201110 08:34:29.619"></status>
</kw>
<msg timestamp="20201110 08:34:29.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.598" endtime="20201110 08:34:29.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.621" endtime="20201110 08:34:29.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.623" endtime="20201110 08:34:29.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.595" endtime="20201110 08:34:29.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.593" endtime="20201110 08:34:29.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.632" endtime="20201110 08:34:29.937"></status>
</kw>
<msg timestamp="20201110 08:34:29.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.631" endtime="20201110 08:34:29.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.941" endtime="20201110 08:34:29.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.949" endtime="20201110 08:34:29.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.628" endtime="20201110 08:34:29.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.626" endtime="20201110 08:34:29.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.956" level="INFO">${RESULT} = [{'time': 0.022243111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.174999999999971e-05, 'source_diff': 5.174999999999971e-05}, {'time': 0.02230425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:29.953" endtime="20201110 08:34:29.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.969" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:29.957" endtime="20201110 08:34:29.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.973" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.972" endtime="20201110 08:34:29.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.976" level="INFO">VALUE: [5.174999999999971e-05, 5.558300000000141e-05, 5.172200000000057e-05, 5.362499999999812e-05, 5.6500000000000994e-05, 5.25279999999996e-05, 5.363899999999769e-05, 5.362500000000159e-05, 5.365300000000073e-05, 5.076399999999828e-05, 5.173600000000014e-05, 5.1708000000001e-05, 5.269499999999844e-05, 5.363900000000116e-05, 5.463900000000216e-05, 5.077800000000132e-05, 5.356899999999984e-05, 5.362500000000159e-05, 5.365300000000073e-05, 5.168100000000134e-05, 5.462499999999912e-05, 5.080600000000046e-05, 5.36670000000003e-05, 5.269500000000191e-05, 5.2679999999999394e-05, 5.256899999999884e-05, 5.36670000000003e-05, 5.26669999999993e-05, 5.7457999999999815e-05, 5.268099999999887e-05, 5.459699999999998e-05, 5.640300000000001e-05, 5.6541999999999704e-05, 5.174999999999971e-05, 5.458400000000335e-05, 5.64870000000009e-05, 5.2666000000003294e-05, 5.076400000000175e-05, 5.26669999999993e-05, 5.6500000000000994e-05, 5.558299999999794e-05, 5.079199999999742e-05, 5.6528000000000134e-05, 5.2679999999999394e-05, 5.5541999999998704e-05, 5.363899999999769e-05, 5.6541999999999704e-05, 5.552699999999966e-05, 5.172200000000057e-05, 5.2693999999998964e-05]</msg>
<status status="PASS" starttime="20201110 08:34:29.974" endtime="20201110 08:34:29.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.970" endtime="20201110 08:34:29.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.979" endtime="20201110 08:34:29.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.983" endtime="20201110 08:34:30.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.981" endtime="20201110 08:34:30.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.978" endtime="20201110 08:34:30.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.592" endtime="20201110 08:34:30.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.591" endtime="20201110 08:34:30.004"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.012" endtime="20201110 08:34:30.031"></status>
</kw>
<msg timestamp="20201110 08:34:30.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.011" endtime="20201110 08:34:30.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.033" endtime="20201110 08:34:30.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.035" endtime="20201110 08:34:30.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.008" endtime="20201110 08:34:30.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.006" endtime="20201110 08:34:30.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.044" endtime="20201110 08:34:30.330"></status>
</kw>
<msg timestamp="20201110 08:34:30.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021172361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021239389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.043" endtime="20201110 08:34:30.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021172361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021239389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.334" endtime="20201110 08:34:30.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.343" endtime="20201110 08:34:30.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.040" endtime="20201110 08:34:30.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.038" endtime="20201110 08:34:30.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.349" level="INFO">${RESULT} = [{'time': 0.021239389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.702800000000023e-05, 'source_diff': 6.702800000000023e-05}, {'time': 0.021300486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:30.346" endtime="20201110 08:34:30.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.363" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:30.350" endtime="20201110 08:34:30.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.367" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.366" endtime="20201110 08:34:30.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.370" level="INFO">VALUE: [6.702800000000023e-05, 5.361100000000202e-05, 5.5555999999998273e-05, 5.461099999999955e-05, 5.2679999999999394e-05, 5.5527999999999134e-05, 5.55410000000027e-05, 5.6514000000000564e-05, 5.461100000000302e-05, 5.6485999999997955e-05, 5.557000000000131e-05, 5.2708000000002e-05, 5.268100000000234e-05, 5.174999999999971e-05, 5.2693999999998964e-05, 5.363899999999769e-05, 5.079199999999742e-05, 5.734699999999926e-05, 5.082000000000003e-05, 5.5513999999999564e-05, 5.363900000000116e-05, 5.2665999999999824e-05, 5.0708e-05, 5.363900000000116e-05, 5.461199999999902e-05, 5.5513999999999564e-05, 5.363900000000116e-05, 5.55549999999988e-05, 5.3652000000001254e-05, 5.7471999999999385e-05, 5.555500000000227e-05, 5.277799999999985e-05, 5.3666000000000824e-05, 5.5499999999999994e-05, 5.355599999999974e-05, 5.277799999999985e-05, 5.169400000000143e-05, 5.362499999999812e-05, 5.265299999999973e-05, 5.456900000000084e-05, 5.090299999999798e-05, 5.6485999999997955e-05, 5.2638000000000684e-05, 5.458399999999988e-05, 5.455500000000127e-05, 5.6499999999997524e-05, 5.362500000000159e-05, 5.2707999999998534e-05, 5.269400000000243e-05, 5.556999999999784e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.368" endtime="20201110 08:34:30.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.364" endtime="20201110 08:34:30.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.373" endtime="20201110 08:34:30.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.377" endtime="20201110 08:34:30.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.375" endtime="20201110 08:34:30.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.372" endtime="20201110 08:34:30.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.005" endtime="20201110 08:34:30.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.004" endtime="20201110 08:34:30.398"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.408" endtime="20201110 08:34:30.432"></status>
</kw>
<msg timestamp="20201110 08:34:30.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.406" endtime="20201110 08:34:30.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.434" endtime="20201110 08:34:30.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.436" endtime="20201110 08:34:30.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.403" endtime="20201110 08:34:30.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.401" endtime="20201110 08:34:30.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.446" endtime="20201110 08:34:30.745"></status>
</kw>
<msg timestamp="20201110 08:34:30.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023926639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023991736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.444" endtime="20201110 08:34:30.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023926639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023991736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.749" endtime="20201110 08:34:30.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.757" endtime="20201110 08:34:30.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.442" endtime="20201110 08:34:30.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.440" endtime="20201110 08:34:30.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.764" level="INFO">${RESULT} = [{'time': 0.023991736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.509700000000007e-05, 'source_diff': 6.509700000000007e-05}, {'time': 0.024052444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:30.761" endtime="20201110 08:34:30.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.777" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:30.765" endtime="20201110 08:34:30.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.782" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.781" endtime="20201110 08:34:30.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.784" level="INFO">VALUE: [6.509700000000007e-05, 5.5443999999998245e-05, 5.2680000000002863e-05, 5.458300000000041e-05, 5.076399999999828e-05, 5.261100000000102e-05, 5.356999999999931e-05, 5.174999999999971e-05, 5.173600000000014e-05, 5.459699999999998e-05, 5.2693999999998964e-05, 5.162499999999959e-05, 5.365300000000073e-05, 5.365300000000073e-05, 5.6528000000000134e-05, 5.6514000000000564e-05, 5.361099999999855e-05, 5.4485999999999424e-05, 5.269499999999844e-05, 5.1708000000001e-05, 5.456899999999737e-05, 5.362500000000159e-05, 5.543099999999815e-05, 5.2707999999998534e-05, 5.459699999999998e-05, 5.543100000000162e-05, 5.170900000000048e-05, 5.463900000000216e-05, 5.172200000000057e-05, 5.079100000000142e-05, 5.65549999999998e-05, 5.263900000000016e-05, 5.559700000000098e-05, 5.079200000000089e-05, 5.6528000000000134e-05, 5.459699999999998e-05, 5.6513999999997094e-05, 5.163899999999916e-05, 5.2679999999999394e-05, 5.74870000000019e-05, 5.555600000000174e-05, 5.645899999999829e-05, 5.254199999999917e-05, 5.459699999999998e-05, 5.5555999999998273e-05, 5.368099999999987e-05, 5.172300000000005e-05, 5.55549999999988e-05, 5.3680000000000394e-05, 5.7472000000002854e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.783" endtime="20201110 08:34:30.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.778" endtime="20201110 08:34:30.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.788" endtime="20201110 08:34:30.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.792" endtime="20201110 08:34:30.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.790" endtime="20201110 08:34:30.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.786" endtime="20201110 08:34:30.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.399" endtime="20201110 08:34:30.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.399" endtime="20201110 08:34:30.813"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.821" endtime="20201110 08:34:30.841"></status>
</kw>
<msg timestamp="20201110 08:34:30.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.820" endtime="20201110 08:34:30.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.842" endtime="20201110 08:34:30.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.845" endtime="20201110 08:34:30.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.817" endtime="20201110 08:34:30.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.815" endtime="20201110 08:34:30.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.854" endtime="20201110 08:34:31.141"></status>
</kw>
<msg timestamp="20201110 08:34:31.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021008403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021064917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.852" endtime="20201110 08:34:31.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021008403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021064917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.145" endtime="20201110 08:34:31.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.153" endtime="20201110 08:34:31.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.850" endtime="20201110 08:34:31.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.848" endtime="20201110 08:34:31.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.160" level="INFO">${RESULT} = [{'time': 0.021064917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6514000000000564e-05, 'source_diff': 5.6514000000000564e-05}, {'time': 0.021125944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:31.157" endtime="20201110 08:34:31.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.173" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:31.161" endtime="20201110 08:34:31.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.178" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.177" endtime="20201110 08:34:31.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.180" level="INFO">VALUE: [5.6514000000000564e-05, 5.077700000000185e-05, 5.6485999999997955e-05, 5.459699999999998e-05, 5.45549999999978e-05, 5.258300000000188e-05, 5.459699999999998e-05, 5.077800000000132e-05, 5.165299999999873e-05, 5.077799999999785e-05, 5.36670000000003e-05, 5.459699999999998e-05, 5.455600000000074e-05, 5.3638000000001684e-05, 5.269499999999844e-05, 5.268099999999887e-05, 5.172300000000005e-05, 5.359699999999898e-05, 5.361100000000202e-05, 5.462499999999912e-05, 5.5541999999998704e-05, 5.456900000000084e-05, 5.458299999999694e-05, 5.073599999999914e-05, 5.7401999999998066e-05, 5.644499999999872e-05, 5.076400000000175e-05, 5.077800000000132e-05, 5.2679999999999394e-05, 5.459699999999998e-05, 5.269500000000191e-05, 5.259699999999798e-05, 5.4499999999998994e-05, 5.6485999999997955e-05, 5.458300000000041e-05, 5.362500000000159e-05, 5.359699999999898e-05, 5.55549999999988e-05, 5.0708e-05, 5.363900000000116e-05, 5.552699999999966e-05, 5.259700000000145e-05, 5.459699999999998e-05, 5.5541999999998704e-05, 5.6499999999997524e-05, 5.173600000000014e-05, 5.6486000000001424e-05, 5.1652000000002724e-05, 5.459699999999998e-05, 5.5499999999999994e-05]</msg>
<status status="PASS" starttime="20201110 08:34:31.179" endtime="20201110 08:34:31.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.174" endtime="20201110 08:34:31.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.184" endtime="20201110 08:34:31.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.187" endtime="20201110 08:34:31.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.186" endtime="20201110 08:34:31.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.182" endtime="20201110 08:34:31.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.814" endtime="20201110 08:34:31.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.813" endtime="20201110 08:34:31.209"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.217" endtime="20201110 08:34:31.238"></status>
</kw>
<msg timestamp="20201110 08:34:31.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.216" endtime="20201110 08:34:31.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.240" endtime="20201110 08:34:31.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.243" endtime="20201110 08:34:31.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.213" endtime="20201110 08:34:31.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.211" endtime="20201110 08:34:31.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.252" endtime="20201110 08:34:31.546"></status>
</kw>
<msg timestamp="20201110 08:34:31.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.251" endtime="20201110 08:34:31.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.552" endtime="20201110 08:34:31.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.562" endtime="20201110 08:34:31.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.248" endtime="20201110 08:34:31.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.247" endtime="20201110 08:34:31.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.572" level="INFO">${RESULT} = [{'time': 0.022200222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.127799999999795e-05, 'source_diff': 6.127799999999795e-05}, {'time': 0.022261347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.568" endtime="20201110 08:34:31.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.590" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:31.574" endtime="20201110 08:34:31.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.596" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.595" endtime="20201110 08:34:31.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.599" level="INFO">VALUE: [6.127799999999795e-05, 5.076400000000175e-05, 5.457000000000031e-05, 5.265299999999973e-05, 5.55549999999988e-05, 5.658399999999841e-05, 5.6500000000000994e-05, 5.457000000000031e-05, 5.554200000000217e-05, 5.362500000000159e-05, 5.362500000000159e-05, 5.5555999999998273e-05, 5.458300000000041e-05, 5.459699999999998e-05, 5.275000000000071e-05, 5.463899999999869e-05, 5.5541999999998704e-05, 5.465300000000173e-05, 5.181899999999809e-05, 5.175000000000318e-05, 5.179100000000242e-05, 5.558299999999794e-05, 5.6486000000001424e-05, 5.6486000000001424e-05, 5.3680000000000394e-05, 5.176399999999928e-05, 5.6514000000000564e-05, 5.276400000000028e-05, 5.3638000000001684e-05, 5.269500000000191e-05, 5.1708000000001e-05, 5.266700000000277e-05, 5.169499999999744e-05, 5.28340000000016e-05, 5.652700000000066e-05, 5.172200000000057e-05, 5.562500000000012e-05, 5.652699999999719e-05, 5.363900000000116e-05, 5.073599999999914e-05, 5.2651999999996785e-05, 5.6486000000001424e-05, 5.4708000000000534e-05, 5.174999999999971e-05, 5.2679999999999394e-05, 5.179100000000242e-05, 5.55549999999988e-05, 5.7569999999999844e-05, 5.173600000000014e-05, 5.268099999999887e-05]</msg>
<status status="PASS" starttime="20201110 08:34:31.597" endtime="20201110 08:34:31.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.592" endtime="20201110 08:34:31.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.603" endtime="20201110 08:34:31.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.607" endtime="20201110 08:34:31.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.605" endtime="20201110 08:34:31.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.601" endtime="20201110 08:34:31.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.209" endtime="20201110 08:34:31.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.209" endtime="20201110 08:34:31.628"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.637" endtime="20201110 08:34:31.660"></status>
</kw>
<msg timestamp="20201110 08:34:31.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.635" endtime="20201110 08:34:31.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.661" endtime="20201110 08:34:31.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.664" endtime="20201110 08:34:31.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.633" endtime="20201110 08:34:31.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.631" endtime="20201110 08:34:31.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.672" endtime="20201110 08:34:31.959"></status>
</kw>
<msg timestamp="20201110 08:34:31.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024298472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024338722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.671" endtime="20201110 08:34:31.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024298472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024338722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.963" endtime="20201110 08:34:31.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.971" endtime="20201110 08:34:31.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.668" endtime="20201110 08:34:31.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.667" endtime="20201110 08:34:31.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.978" level="INFO">${RESULT} = [{'time': 0.024338722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.024999999999862e-05, 'source_diff': 4.024999999999862e-05}, {'time': 0.024398986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.975" endtime="20201110 08:34:31.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.007" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:31.980" endtime="20201110 08:34:32.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.017" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.015" endtime="20201110 08:34:32.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.022" level="INFO">VALUE: [4.024999999999862e-05, 5.365300000000073e-05, 5.5541999999998704e-05, 5.363900000000116e-05, 5.172300000000005e-05, 5.080500000000099e-05, 5.1693999999997964e-05, 5.458399999999988e-05, 5.456900000000084e-05, 5.463900000000216e-05, 5.176299999999981e-05, 5.181999999999756e-05, 5.074999999999871e-05, 5.6429999999999675e-05, 5.5527999999999134e-05, 5.076299999999881e-05, 5.5555999999998273e-05, 5.455500000000127e-05, 5.2665999999999824e-05, 5.456900000000084e-05, 5.6499999999997524e-05, 5.5527999999999134e-05, 5.26669999999993e-05, 5.363899999999769e-05, 5.5555999999998273e-05, 5.2693999999998964e-05, 5.459699999999998e-05, 5.558299999999794e-05, 5.554200000000217e-05, 5.752699999999819e-05, 5.6528000000000134e-05, 5.5527999999999134e-05, 5.6500000000000994e-05, 5.363900000000116e-05, 5.079200000000089e-05, 5.465300000000173e-05, 5.558399999999741e-05, 5.1708000000001e-05, 5.361100000000202e-05, 5.174999999999971e-05, 5.076399999999828e-05, 5.45410000000017e-05, 5.275000000000071e-05, 5.556999999999784e-05, 5.369500000000291e-05, 5.7457999999999815e-05, 5.5541999999998704e-05, 5.1707999999997534e-05, 5.174999999999971e-05, 5.359800000000192e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.019" endtime="20201110 08:34:32.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.009" endtime="20201110 08:34:32.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.029" endtime="20201110 08:34:32.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.036" endtime="20201110 08:34:32.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.033" endtime="20201110 08:34:32.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.026" endtime="20201110 08:34:32.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.629" endtime="20201110 08:34:32.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.629" endtime="20201110 08:34:32.061"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.079" endtime="20201110 08:34:32.102"></status>
</kw>
<msg timestamp="20201110 08:34:32.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.075" endtime="20201110 08:34:32.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.103" endtime="20201110 08:34:32.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.106" endtime="20201110 08:34:32.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.070" endtime="20201110 08:34:32.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.066" endtime="20201110 08:34:32.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.115" endtime="20201110 08:34:32.400"></status>
</kw>
<msg timestamp="20201110 08:34:32.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03718775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037248111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:32.113" endtime="20201110 08:34:32.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03718775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037248111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:32.405" endtime="20201110 08:34:32.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.413" endtime="20201110 08:34:32.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.111" endtime="20201110 08:34:32.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.109" endtime="20201110 08:34:32.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.419" level="INFO">${RESULT} = [{'time': 0.037248111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.036100000000183e-05, 'source_diff': 6.036100000000183e-05}, {'time': 0.037308708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:32.416" endtime="20201110 08:34:32.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.433" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:32.420" endtime="20201110 08:34:32.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.438" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.437" endtime="20201110 08:34:32.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.441" level="INFO">VALUE: [6.036100000000183e-05, 5.2665999999999824e-05, 5.45549999999978e-05, 5.4527999999998134e-05, 5.1735999999996674e-05, 5.1707999999997534e-05, 5.076400000000175e-05, 5.459700000000345e-05, 5.556999999999784e-05, 5.259800000000092e-05, 5.1721999999997104e-05, 5.6514000000000564e-05, 5.079100000000142e-05, 5.2721999999998104e-05, 5.55549999999988e-05, 5.2679999999999394e-05, 5.2693999999998964e-05, 5.458399999999641e-05, 5.362500000000159e-05, 5.076400000000175e-05, 5.555600000000521e-05, 5.5555999999998273e-05, 5.6500000000000994e-05, 5.172200000000404e-05, 5.1721999999997104e-05, 5.6500000000000994e-05, 5.461099999999608e-05, 5.1735999999996674e-05, 5.652699999999372e-05, 5.262500000000059e-05, 5.1707999999997534e-05, 5.176399999999581e-05, 5.1735999999996674e-05, 5.5555999999998273e-05, 5.5555999999998273e-05, 5.363900000000116e-05, 5.1723000000003516e-05, 5.2679999999999394e-05, 5.361100000000202e-05, 5.172299999999658e-05, 5.458400000000335e-05, 5.1749999999996243e-05, 5.1749999999996243e-05, 5.362500000000159e-05, 5.2723000000004516e-05, 5.077699999999491e-05, 5.075000000000218e-05, 5.268099999999887e-05, 5.658299999999894e-05, 5.5541999999998704e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.439" endtime="20201110 08:34:32.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.434" endtime="20201110 08:34:32.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.445" endtime="20201110 08:34:32.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.448" endtime="20201110 08:34:32.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.447" endtime="20201110 08:34:32.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.443" endtime="20201110 08:34:32.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.063" endtime="20201110 08:34:32.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.061" endtime="20201110 08:34:32.469"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.478" endtime="20201110 08:34:32.499"></status>
</kw>
<msg timestamp="20201110 08:34:32.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.476" endtime="20201110 08:34:32.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.500" endtime="20201110 08:34:32.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.502" endtime="20201110 08:34:32.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.474" endtime="20201110 08:34:32.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.472" endtime="20201110 08:34:32.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.511" endtime="20201110 08:34:32.798"></status>
</kw>
<msg timestamp="20201110 08:34:32.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022603014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.510" endtime="20201110 08:34:32.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022603014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.802" endtime="20201110 08:34:32.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.810" endtime="20201110 08:34:32.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.507" endtime="20201110 08:34:32.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.506" endtime="20201110 08:34:32.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.817" level="INFO">${RESULT} = [{'time': 0.022603014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.3195000000002e-05, 'source_diff': 6.3195000000002e-05}, {'time': 0.022664028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201110 08:34:32.813" endtime="20201110 08:34:32.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.830" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:32.818" endtime="20201110 08:34:32.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.834" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.833" endtime="20201110 08:34:32.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.837" level="INFO">VALUE: [6.3195000000002e-05, 5.5541999999998704e-05, 5.459800000000292e-05, 5.6472000000001854e-05, 5.069499999999991e-05, 5.6486000000001424e-05, 5.462499999999912e-05, 5.076400000000175e-05, 5.079200000000089e-05, 5.6514000000000564e-05, 5.363900000000116e-05, 5.4458000000000284e-05, 5.365300000000073e-05, 5.074999999999871e-05, 5.743100000000015e-05, 5.077800000000132e-05, 5.459699999999998e-05, 5.552699999999966e-05, 5.459699999999998e-05, 5.262500000000059e-05, 5.262500000000059e-05, 5.3708000000003e-05, 5.455500000000127e-05, 5.26669999999993e-05, 5.1652000000002724e-05, 5.4513999999998564e-05, 5.461099999999955e-05, 5.259699999999798e-05, 5.263900000000016e-05, 5.069400000000043e-05, 5.7430000000000675e-05, 5.6541999999999704e-05, 5.55549999999988e-05, 5.1666000000002293e-05, 5.643099999999915e-05, 5.459699999999998e-05, 5.172200000000057e-05, 5.459699999999998e-05, 5.261100000000102e-05, 5.080500000000099e-05, 5.459699999999998e-05, 5.363899999999769e-05, 5.073599999999914e-05, 5.454099999999823e-05, 5.169400000000143e-05, 5.6500000000000994e-05, 5.1708000000001e-05, 5.6457999999998815e-05, 5.6486000000001424e-05, 5.7457999999999815e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.835" endtime="20201110 08:34:32.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.831" endtime="20201110 08:34:32.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.840" endtime="20201110 08:34:32.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.844" endtime="20201110 08:34:32.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.842" endtime="20201110 08:34:32.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.839" endtime="20201110 08:34:32.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.470" endtime="20201110 08:34:32.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.469" endtime="20201110 08:34:32.865"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.873" endtime="20201110 08:34:32.897"></status>
</kw>
<msg timestamp="20201110 08:34:32.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.872" endtime="20201110 08:34:32.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.898" endtime="20201110 08:34:32.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.901" endtime="20201110 08:34:32.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.869" endtime="20201110 08:34:32.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.867" endtime="20201110 08:34:32.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.910" endtime="20201110 08:34:33.199"></status>
</kw>
<msg timestamp="20201110 08:34:33.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024008958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.908" endtime="20201110 08:34:33.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024008958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.203" endtime="20201110 08:34:33.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.211" endtime="20201110 08:34:33.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.906" endtime="20201110 08:34:33.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.904" endtime="20201110 08:34:33.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:33.217" level="INFO">${RESULT} = [{'time': 0.024074042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.508399999999998e-05, 'source_diff': 6.508399999999998e-05}, {'time': 0.024134708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:33.214" endtime="20201110 08:34:33.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:33.230" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:33.218" endtime="20201110 08:34:33.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.235" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:34:33.234" endtime="20201110 08:34:33.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.237" level="INFO">VALUE: [6.508399999999998e-05, 5.363900000000116e-05, 5.743100000000015e-05, 5.084799999999917e-05, 5.6500000000000994e-05, 5.265299999999973e-05, 5.362500000000159e-05, 5.268099999999887e-05, 5.073599999999914e-05, 5.1708000000001e-05, 5.361099999999855e-05, 5.363899999999769e-05, 5.363900000000116e-05, 5.077800000000132e-05, 5.3680000000000394e-05, 5.169400000000143e-05, 5.265299999999973e-05, 5.455600000000074e-05, 5.268099999999887e-05, 5.073599999999914e-05, 5.363900000000116e-05, 5.161100000000002e-05, 5.168100000000134e-05, 5.361099999999855e-05, 5.263900000000016e-05, 5.5541999999998704e-05, 5.744499999999972e-05, 5.079099999999795e-05, 5.173600000000014e-05, 5.169400000000143e-05, 5.362500000000159e-05, 5.6528000000000134e-05, 5.076299999999881e-05, 5.551400000000303e-05, 5.362500000000159e-05, 5.558399999999741e-05, 5.556900000000184e-05, 5.6514000000000564e-05, 5.5527999999999134e-05, 5.363900000000116e-05, 5.458299999999694e-05, 5.554200000000217e-05, 5.5527999999999134e-05, 5.173600000000014e-05, 5.644499999999872e-05, 5.256900000000231e-05, 5.077799999999785e-05, 5.6500000000000994e-05, 5.55549999999988e-05, 5.459699999999998e-05]</msg>
<status status="PASS" starttime="20201110 08:34:33.236" endtime="20201110 08:34:33.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.231" endtime="20201110 08:34:33.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.241" endtime="20201110 08:34:33.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.244" endtime="20201110 08:34:33.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.243" endtime="20201110 08:34:33.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.239" endtime="20201110 08:34:33.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.865" endtime="20201110 08:34:33.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.865" endtime="20201110 08:34:33.265"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.274" endtime="20201110 08:34:33.292"></status>
</kw>
<msg timestamp="20201110 08:34:33.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.272" endtime="20201110 08:34:33.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.293" endtime="20201110 08:34:33.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.296" endtime="20201110 08:34:33.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.270" endtime="20201110 08:34:33.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.268" endtime="20201110 08:34:33.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.305" endtime="20201110 08:34:33.590"></status>
</kw>
<msg timestamp="20201110 08:34:33.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020203028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.303" endtime="20201110 08:34:33.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020203028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.594" endtime="20201110 08:34:33.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.603" endtime="20201110 08:34:33.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.301" endtime="20201110 08:34:33.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.299" endtime="20201110 08:34:33.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:33.609" level="INFO">${RESULT} = [{'time': 0.020203028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.423600000000224e-05, 'source_diff': 6.423600000000224e-05}, {'time': 0.020264167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:33.606" endtime="20201110 08:34:33.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:33.622" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:33.610" endtime="20201110 08:34:33.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.627" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:34:33.626" endtime="20201110 08:34:33.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.629" level="INFO">VALUE: [6.423600000000224e-05, 5.461099999999955e-05, 5.459799999999945e-05, 5.170900000000048e-05, 5.458399999999988e-05, 5.076400000000175e-05, 5.6527999999996664e-05, 5.554099999999923e-05, 5.6500000000000994e-05, 5.661100000000155e-05, 5.362500000000159e-05, 5.361199999999802e-05, 5.172200000000057e-05, 5.172200000000057e-05, 5.082000000000003e-05, 5.1708000000001e-05, 5.559800000000045e-05, 5.6485999999997955e-05, 4.981899999999956e-05, 5.458399999999988e-05, 5.172200000000057e-05, 5.5471999999997385e-05, 5.262500000000059e-05, 5.179200000000189e-05, 5.172200000000057e-05, 5.262500000000059e-05, 5.465300000000173e-05, 5.454200000000117e-05, 5.459699999999998e-05, 5.172200000000057e-05, 5.5541999999998704e-05, 5.56670000000023e-05, 5.077800000000132e-05, 5.074999999999871e-05, 5.558300000000141e-05, 5.658400000000188e-05, 5.5541999999998704e-05, 5.556899999999837e-05, 5.462499999999912e-05, 5.55280000000026e-05, 5.6499999999997524e-05, 5.169500000000091e-05, 5.184800000000017e-05, 5.558299999999794e-05, 5.173600000000014e-05, 5.561100000000055e-05, 5.173600000000014e-05, 5.643099999999915e-05, 5.5499999999999994e-05, 5.259700000000145e-05]</msg>
<status status="PASS" starttime="20201110 08:34:33.628" endtime="20201110 08:34:33.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.623" endtime="20201110 08:34:33.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.633" endtime="20201110 08:34:33.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.636" endtime="20201110 08:34:33.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.635" endtime="20201110 08:34:33.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.631" endtime="20201110 08:34:33.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.266" endtime="20201110 08:34:33.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.266" endtime="20201110 08:34:33.657"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.665" endtime="20201110 08:34:33.685"></status>
</kw>
<msg timestamp="20201110 08:34:33.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.664" endtime="20201110 08:34:33.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.686" endtime="20201110 08:34:33.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.689" endtime="20201110 08:34:33.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.661" endtime="20201110 08:34:33.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.659" endtime="20201110 08:34:33.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.697" endtime="20201110 08:34:33.985"></status>
</kw>
<msg timestamp="20201110 08:34:33.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020320889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020362083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.696" endtime="20201110 08:34:33.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020320889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020362083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.989" endtime="20201110 08:34:33.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.998" endtime="20201110 08:34:33.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.693" endtime="20201110 08:34:34.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.692" endtime="20201110 08:34:34.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.004" level="INFO">${RESULT} = [{'time': 0.020362083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.119399999999787e-05, 'source_diff': 4.119399999999787e-05}, {'time': 0.020423014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:34.001" endtime="20201110 08:34:34.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:34.005" endtime="20201110 08:34:34.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.022" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.021" endtime="20201110 08:34:34.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.024" level="INFO">VALUE: [4.119399999999787e-05, 5.173600000000014e-05, 5.169499999999744e-05, 5.362500000000159e-05, 5.6499999999997524e-05, 5.363900000000116e-05, 5.3637999999998215e-05, 5.459799999999945e-05, 5.170900000000048e-05, 5.5541999999998704e-05, 5.658299999999894e-05, 5.2707999999998534e-05, 5.173600000000014e-05, 5.265299999999973e-05, 5.365300000000073e-05, 5.174999999999971e-05, 4.981999999999903e-05, 5.7514000000001564e-05, 5.2721999999998104e-05, 5.4527999999998134e-05, 5.270900000000148e-05, 5.457000000000031e-05, 5.459799999999945e-05, 5.2679999999999394e-05, 5.450000000000246e-05, 5.2665999999999824e-05, 5.076399999999828e-05, 5.365300000000073e-05, 5.263900000000016e-05, 5.079100000000142e-05, 5.369499999999944e-05, 5.6499999999997524e-05, 4.977799999999685e-05, 5.6457999999998815e-05, 5.456900000000084e-05, 5.363899999999769e-05, 5.266700000000277e-05, 5.5555999999998273e-05, 5.552699999999966e-05, 5.6457999999998815e-05, 5.6514000000000564e-05, 5.2679999999999394e-05, 5.2693999999998964e-05, 5.173600000000014e-05, 5.6486000000001424e-05, 5.262500000000059e-05, 5.363899999999769e-05, 5.55549999999988e-05, 5.174999999999971e-05, 5.554099999999923e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.023" endtime="20201110 08:34:34.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.018" endtime="20201110 08:34:34.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.028" endtime="20201110 08:34:34.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.031" endtime="20201110 08:34:34.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.030" endtime="20201110 08:34:34.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.026" endtime="20201110 08:34:34.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.658" endtime="20201110 08:34:34.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.657" endtime="20201110 08:34:34.052"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.061" endtime="20201110 08:34:34.081"></status>
</kw>
<msg timestamp="20201110 08:34:34.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.059" endtime="20201110 08:34:34.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.083" endtime="20201110 08:34:34.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.085" endtime="20201110 08:34:34.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.057" endtime="20201110 08:34:34.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.055" endtime="20201110 08:34:34.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.094" endtime="20201110 08:34:34.380"></status>
</kw>
<msg timestamp="20201110 08:34:34.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.093" endtime="20201110 08:34:34.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.385" endtime="20201110 08:34:34.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.393" endtime="20201110 08:34:34.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.090" endtime="20201110 08:34:34.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.088" endtime="20201110 08:34:34.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.400" level="INFO">${RESULT} = [{'time': 0.022016194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7430000000000675e-05, 'source_diff': 5.7430000000000675e-05}, {'time': 0.022077528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:34.396" endtime="20201110 08:34:34.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.413" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:34.400" endtime="20201110 08:34:34.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.417" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.416" endtime="20201110 08:34:34.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.419" level="INFO">VALUE: [5.7430000000000675e-05, 5.4485999999999424e-05, 5.6486000000001424e-05, 5.463899999999869e-05, 5.5555999999998273e-05, 5.272200000000157e-05, 5.168099999999787e-05, 5.73610000000023e-05, 5.26669999999993e-05, 5.5527999999999134e-05, 5.26669999999993e-05, 5.457000000000031e-05, 5.554200000000217e-05, 5.456900000000084e-05, 5.358299999999941e-05, 5.0708e-05, 5.7457999999999815e-05, 5.173600000000014e-05, 5.6500000000000994e-05, 5.255499999999927e-05, 5.5555999999998273e-05, 5.072199999999957e-05, 5.644499999999872e-05, 5.26669999999993e-05, 5.554099999999923e-05, 5.079200000000089e-05, 5.2679999999999394e-05, 5.5541999999998704e-05, 5.262500000000059e-05, 5.5499999999999994e-05, 5.170900000000048e-05, 4.983299999999913e-05, 5.5541999999998704e-05, 5.074999999999871e-05, 5.457000000000031e-05, 5.2693999999998964e-05, 5.6500000000000994e-05, 5.5499999999999994e-05, 5.55549999999988e-05, 5.55549999999988e-05, 5.077800000000132e-05, 5.6514000000000564e-05, 5.452699999999866e-05, 5.5486000000000424e-05, 5.461099999999955e-05, 5.651299999999762e-05, 5.455600000000074e-05, 5.069499999999991e-05, 5.076400000000175e-05, 5.556999999999784e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.418" endtime="20201110 08:34:34.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.414" endtime="20201110 08:34:34.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.423" endtime="20201110 08:34:34.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.426" endtime="20201110 08:34:34.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.425" endtime="20201110 08:34:34.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.421" endtime="20201110 08:34:34.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.053" endtime="20201110 08:34:34.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.053" endtime="20201110 08:34:34.447"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.456" endtime="20201110 08:34:34.478"></status>
</kw>
<msg timestamp="20201110 08:34:34.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.454" endtime="20201110 08:34:34.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.480" endtime="20201110 08:34:34.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.482" endtime="20201110 08:34:34.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.452" endtime="20201110 08:34:34.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.450" endtime="20201110 08:34:34.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.491" endtime="20201110 08:34:34.778"></status>
</kw>
<msg timestamp="20201110 08:34:34.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023707694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023761333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.489" endtime="20201110 08:34:34.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023707694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023761333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.782" endtime="20201110 08:34:34.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.791" endtime="20201110 08:34:34.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.487" endtime="20201110 08:34:34.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.485" endtime="20201110 08:34:34.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.797" level="INFO">${RESULT} = [{'time': 0.023761333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.363899999999769e-05, 'source_diff': 5.363899999999769e-05}, {'time': 0.0238225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:34.794" endtime="20201110 08:34:34.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.810" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:34.798" endtime="20201110 08:34:34.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.815" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.814" endtime="20201110 08:34:34.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.817" level="INFO">VALUE: [5.363899999999769e-05, 5.6514000000000564e-05, 5.459699999999998e-05, 5.365299999999726e-05, 5.2721999999998104e-05, 5.2707999999998534e-05, 5.659699999999851e-05, 5.1721999999997104e-05, 5.6500000000000994e-05, 5.076399999999828e-05, 5.368099999999987e-05, 5.273700000000062e-05, 5.457000000000031e-05, 5.362500000000159e-05, 5.1707999999997534e-05, 5.2665999999999824e-05, 5.7528000000001134e-05, 5.362499999999812e-05, 5.6528000000000134e-05, 5.6486000000001424e-05, 5.173600000000014e-05, 5.074999999999871e-05, 5.168100000000134e-05, 5.361099999999855e-05, 5.6500000000000994e-05, 5.079200000000089e-05, 5.4652000000002254e-05, 5.6486000000001424e-05, 5.556900000000184e-05, 5.459699999999998e-05, 5.2665999999999824e-05, 5.176400000000275e-05, 5.358299999999941e-05, 5.172200000000057e-05, 5.074999999999871e-05, 5.086100000000274e-05, 5.083300000000013e-05, 5.1693999999997964e-05, 5.074999999999871e-05, 5.365300000000073e-05, 5.173600000000014e-05, 5.5499999999999994e-05, 5.073599999999914e-05, 5.459699999999998e-05, 5.458399999999988e-05, 5.6513999999997094e-05, 5.2679999999999394e-05, 5.073599999999914e-05, 5.173699999999962e-05, 5.561099999999708e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.816" endtime="20201110 08:34:34.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.811" endtime="20201110 08:34:34.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.821" endtime="20201110 08:34:34.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.824" endtime="20201110 08:34:34.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.823" endtime="20201110 08:34:34.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.819" endtime="20201110 08:34:34.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.448" endtime="20201110 08:34:34.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.448" endtime="20201110 08:34:34.845"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.854" endtime="20201110 08:34:34.880"></status>
</kw>
<msg timestamp="20201110 08:34:34.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.852" endtime="20201110 08:34:34.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.881" endtime="20201110 08:34:34.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.883" endtime="20201110 08:34:34.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.849" endtime="20201110 08:34:34.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.847" endtime="20201110 08:34:34.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.892" endtime="20201110 08:34:35.179"></status>
</kw>
<msg timestamp="20201110 08:34:35.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022969528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023034542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.891" endtime="20201110 08:34:35.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022969528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023034542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.183" endtime="20201110 08:34:35.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.191" endtime="20201110 08:34:35.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.888" endtime="20201110 08:34:35.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.887" endtime="20201110 08:34:35.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.198" level="INFO">${RESULT} = [{'time': 0.023034542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.501400000000213e-05, 'source_diff': 6.501400000000213e-05}, {'time': 0.023094792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:35.195" endtime="20201110 08:34:35.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:35.211" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:35.199" endtime="20201110 08:34:35.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.216" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:34:35.215" endtime="20201110 08:34:35.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.218" level="INFO">VALUE: [6.501400000000213e-05, 5.270899999999801e-05, 5.640300000000001e-05, 5.077699999999838e-05, 5.450000000000246e-05, 5.55549999999988e-05, 5.079200000000089e-05, 5.556900000000184e-05, 5.162499999999959e-05, 5.462499999999912e-05, 5.2693999999998964e-05, 5.7500000000001994e-05, 5.270900000000148e-05, 5.1651999999999254e-05, 5.2708000000002e-05, 5.734699999999926e-05, 5.362499999999812e-05, 5.559700000000098e-05, 5.544500000000119e-05, 5.552699999999966e-05, 5.461099999999955e-05, 5.258299999999841e-05, 5.459800000000292e-05, 5.077699999999838e-05, 5.6458000000002284e-05, 5.174999999999971e-05, 5.6402000000000535e-05, 5.557000000000131e-05, 5.165299999999873e-05, 5.269499999999844e-05, 5.5541999999998704e-05, 5.4499999999998994e-05, 5.079100000000142e-05, 5.456900000000084e-05, 5.355500000000027e-05, 4.981899999999956e-05, 5.355599999999974e-05, 5.365299999999726e-05, 5.654100000000023e-05, 5.461099999999955e-05, 5.3513999999997564e-05, 5.077800000000132e-05, 4.980600000000293e-05, 5.736099999999883e-05, 5.458300000000041e-05, 5.270900000000148e-05, 5.5472000000000854e-05, 5.456900000000084e-05, 5.4527999999998134e-05, 5.5513999999999564e-05]</msg>
<status status="PASS" starttime="20201110 08:34:35.217" endtime="20201110 08:34:35.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.212" endtime="20201110 08:34:35.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.222" endtime="20201110 08:34:35.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.225" endtime="20201110 08:34:35.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.224" endtime="20201110 08:34:35.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.220" endtime="20201110 08:34:35.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.846" endtime="20201110 08:34:35.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.845" endtime="20201110 08:34:35.246"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.254" endtime="20201110 08:34:35.276"></status>
</kw>
<msg timestamp="20201110 08:34:35.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.253" endtime="20201110 08:34:35.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.278" endtime="20201110 08:34:35.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.280" endtime="20201110 08:34:35.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.251" endtime="20201110 08:34:35.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.248" endtime="20201110 08:34:35.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.289" endtime="20201110 08:34:35.576"></status>
</kw>
<msg timestamp="20201110 08:34:35.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023898569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023955097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.288" endtime="20201110 08:34:35.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023898569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023955097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.580" endtime="20201110 08:34:35.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.589" endtime="20201110 08:34:35.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.285" endtime="20201110 08:34:35.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.283" endtime="20201110 08:34:35.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.595" level="INFO">${RESULT} = [{'time': 0.023955097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6528000000000134e-05, 'source_diff': 5.6528000000000134e-05}, {'time': 0.024015889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:35.592" endtime="20201110 08:34:35.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:35.608" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:35.596" endtime="20201110 08:34:35.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.613" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:34:35.612" endtime="20201110 08:34:35.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.615" level="INFO">VALUE: [5.6528000000000134e-05, 5.459699999999998e-05, 5.554099999999923e-05, 5.26669999999993e-05, 5.552699999999966e-05, 5.6528000000000134e-05, 5.458299999999694e-05, 5.459699999999998e-05, 5.179100000000242e-05, 5.64870000000009e-05, 5.55549999999988e-05, 5.458300000000041e-05, 5.166700000000177e-05, 5.361100000000202e-05, 5.64870000000009e-05, 5.6499999999997524e-05, 5.36670000000003e-05, 5.068100000000034e-05, 5.558300000000141e-05, 5.462499999999912e-05, 5.562500000000012e-05, 5.6528000000000134e-05, 5.365299999999726e-05, 5.174999999999971e-05, 5.363900000000116e-05, 5.177700000000285e-05, 5.080499999999752e-05, 5.1708000000001e-05, 5.730500000000055e-05, 5.6514000000000564e-05, 5.086099999999927e-05, 5.2707999999998534e-05, 5.458300000000041e-05, 5.073600000000261e-05, 5.077799999999785e-05, 5.6485999999997955e-05, 5.269499999999844e-05, 5.459699999999998e-05, 5.558300000000141e-05, 5.173600000000014e-05, 5.459699999999998e-05, 5.363899999999769e-05, 5.2693999999998964e-05, 5.363899999999769e-05, 5.1721999999997104e-05, 5.459799999999945e-05, 5.170900000000048e-05, 5.363899999999769e-05, 5.1707999999997534e-05, 5.5541999999998704e-05]</msg>
<status status="PASS" starttime="20201110 08:34:35.614" endtime="20201110 08:34:35.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.609" endtime="20201110 08:34:35.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.619" endtime="20201110 08:34:35.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.622" endtime="20201110 08:34:35.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.621" endtime="20201110 08:34:35.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.617" endtime="20201110 08:34:35.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.247" endtime="20201110 08:34:35.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.246" endtime="20201110 08:34:35.643"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.652" endtime="20201110 08:34:35.673"></status>
</kw>
<msg timestamp="20201110 08:34:35.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.650" endtime="20201110 08:34:35.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.674" endtime="20201110 08:34:35.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.677" endtime="20201110 08:34:35.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.648" endtime="20201110 08:34:35.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.646" endtime="20201110 08:34:35.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.686" endtime="20201110 08:34:35.972"></status>
</kw>
<msg timestamp="20201110 08:34:35.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023509194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023563778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.684" endtime="20201110 08:34:35.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023509194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023563778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.977" endtime="20201110 08:34:35.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.985" endtime="20201110 08:34:35.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.682" endtime="20201110 08:34:35.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.680" endtime="20201110 08:34:35.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.991" level="INFO">${RESULT} = [{'time': 0.023563778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.458399999999988e-05, 'source_diff': 5.458399999999988e-05}, {'time': 0.023624056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:35.988" endtime="20201110 08:34:35.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.005" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:35.992" endtime="20201110 08:34:36.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.009" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.008" endtime="20201110 08:34:36.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.011" level="INFO">VALUE: [5.458399999999988e-05, 5.565299999999926e-05, 5.6514000000000564e-05, 5.269499999999844e-05, 5.074999999999871e-05, 5.172200000000057e-05, 5.169400000000143e-05, 5.172200000000057e-05, 5.08469999999997e-05, 5.076399999999828e-05, 5.1708000000001e-05, 5.074999999999871e-05, 5.172200000000057e-05, 5.659699999999851e-05, 5.073599999999914e-05, 5.459699999999998e-05, 5.162499999999959e-05, 5.363900000000116e-05, 5.6486000000001424e-05, 5.362500000000159e-05, 5.458299999999694e-05, 5.273600000000114e-05, 5.265299999999973e-05, 5.356999999999931e-05, 5.5541999999998704e-05, 5.558400000000088e-05, 5.5513999999999564e-05, 5.463899999999869e-05, 5.456900000000084e-05, 5.458399999999988e-05, 5.077700000000185e-05, 5.363899999999769e-05, 5.269400000000243e-05, 5.183300000000113e-05, 5.361100000000202e-05, 5.0708e-05, 5.363899999999769e-05, 5.176399999999928e-05, 5.745900000000276e-05, 5.1707999999997534e-05, 5.747299999999886e-05, 5.455600000000074e-05, 5.554200000000217e-05, 5.362500000000159e-05, 5.6499999999997524e-05, 5.3735999999998674e-05, 5.265299999999973e-05, 5.5513999999999564e-05, 5.5541999999998704e-05, 5.173600000000014e-05]</msg>
<status status="PASS" starttime="20201110 08:34:36.010" endtime="20201110 08:34:36.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.005" endtime="20201110 08:34:36.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.015" endtime="20201110 08:34:36.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.018" endtime="20201110 08:34:36.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.017" endtime="20201110 08:34:36.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.013" endtime="20201110 08:34:36.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.644" endtime="20201110 08:34:36.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.644" endtime="20201110 08:34:36.039"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.048" endtime="20201110 08:34:36.072"></status>
</kw>
<msg timestamp="20201110 08:34:36.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.046" endtime="20201110 08:34:36.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.073" endtime="20201110 08:34:36.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.076" endtime="20201110 08:34:36.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.044" endtime="20201110 08:34:36.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.042" endtime="20201110 08:34:36.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.084" endtime="20201110 08:34:36.372"></status>
</kw>
<msg timestamp="20201110 08:34:36.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02435625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024453833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:36.083" endtime="20201110 08:34:36.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02435625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024453833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:36.376" endtime="20201110 08:34:36.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.384" endtime="20201110 08:34:36.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.081" endtime="20201110 08:34:36.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.079" endtime="20201110 08:34:36.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.391" level="INFO">${RESULT} = [{'time': 0.024453833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.758300000000178e-05, 'source_diff': 9.758300000000178e-05}, {'time': 0.024545847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:36.387" endtime="20201110 08:34:36.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.404" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:36.392" endtime="20201110 08:34:36.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.408" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.407" endtime="20201110 08:34:36.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.411" level="INFO">VALUE: [9.758300000000178e-05, 8.61249999999994e-05, 8.520799999999981e-05, 8.71250000000004e-05, 8.425000000000099e-05, 8.136100000000202e-05, 8.425000000000099e-05, 8.329200000000217e-05, 8.23330000000004e-05, 8.711100000000083e-05, 8.520799999999981e-05, 8.619399999999777e-05, 8.616599999999863e-05, 8.709700000000126e-05, 8.440300000000026e-05, 8.519400000000024e-05, 8.424999999999752e-05, 8.606900000000112e-05, 8.137500000000158e-05, 8.708299999999822e-05, 8.231900000000084e-05, 8.423599999999795e-05, 8.231999999999684e-05, 8.436100000000155e-05, 8.518100000000015e-05, 8.524999999999852e-05, 8.520799999999981e-05, 8.609700000000026e-05, 8.616700000000158e-05, 8.61669999999981e-05, 8.232000000000031e-05, 8.327799999999913e-05, 8.711100000000083e-05, 8.23330000000004e-05, 8.520799999999981e-05, 8.519400000000024e-05, 8.711100000000083e-05, 8.613899999999897e-05, 8.611099999999983e-05, 8.149999999999824e-05, 8.234699999999998e-05, 8.425000000000099e-05, 8.519400000000024e-05, 8.433400000000188e-05, 8.712499999999693e-05, 8.231900000000084e-05, 8.524999999999852e-05, 8.326400000000303e-05, 8.423600000000142e-05, 8.144499999999943e-05]</msg>
<status status="PASS" starttime="20201110 08:34:36.409" endtime="20201110 08:34:36.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.405" endtime="20201110 08:34:36.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.414" endtime="20201110 08:34:36.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.418" endtime="20201110 08:34:36.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.416" endtime="20201110 08:34:36.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.413" endtime="20201110 08:34:36.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.040" endtime="20201110 08:34:36.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.040" endtime="20201110 08:34:36.439"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.447" endtime="20201110 08:34:36.468"></status>
</kw>
<msg timestamp="20201110 08:34:36.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.445" endtime="20201110 08:34:36.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.470" endtime="20201110 08:34:36.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.472" endtime="20201110 08:34:36.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.443" endtime="20201110 08:34:36.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.441" endtime="20201110 08:34:36.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.481" endtime="20201110 08:34:36.768"></status>
</kw>
<msg timestamp="20201110 08:34:36.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.480" endtime="20201110 08:34:36.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.772" endtime="20201110 08:34:36.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.781" endtime="20201110 08:34:36.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.477" endtime="20201110 08:34:36.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.475" endtime="20201110 08:34:36.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.787" level="INFO">${RESULT} = [{'time': 0.022201306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.901400000000184e-05, 'source_diff': 8.901400000000184e-05}, {'time': 0.022292583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:36.784" endtime="20201110 08:34:36.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.800" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:36.788" endtime="20201110 08:34:36.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.805" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.804" endtime="20201110 08:34:36.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.807" level="INFO">VALUE: [8.901400000000184e-05, 8.425000000000099e-05, 8.420800000000228e-05, 8.613799999999949e-05, 8.615199999999906e-05, 8.519400000000024e-05, 8.323600000000042e-05, 8.79860000000017e-05, 8.319400000000171e-05, 8.327799999999913e-05, 8.137499999999812e-05, 8.420900000000175e-05, 8.520799999999981e-05, 8.618100000000115e-05, 8.519499999999972e-05, 8.423599999999795e-05, 8.32919999999987e-05, 8.708300000000169e-05, 8.520799999999981e-05, 8.136100000000202e-05, 8.423599999999795e-05, 8.218099999999715e-05, 8.706900000000212e-05, 8.708299999999822e-05, 8.711099999999736e-05, 8.233299999999694e-05, 8.220800000000028e-05, 8.422200000000185e-05, 8.327699999999966e-05, 8.326399999999956e-05, 8.324999999999999e-05, 8.616700000000158e-05, 8.711100000000083e-05, 8.425000000000099e-05, 8.520799999999981e-05, 8.232000000000031e-05, 8.61799999999982e-05, 8.323599999999695e-05, 8.419399999999924e-05, 8.329099999999923e-05, 8.229200000000117e-05, 8.229200000000117e-05, 8.230600000000074e-05, 8.412500000000087e-05, 8.5153000000001e-05, 8.137500000000158e-05, 8.134699999999898e-05, 8.708400000000116e-05, 8.609799999999973e-05, 8.427700000000066e-05]</msg>
<status status="PASS" starttime="20201110 08:34:36.806" endtime="20201110 08:34:36.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.801" endtime="20201110 08:34:36.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.811" endtime="20201110 08:34:36.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.814" endtime="20201110 08:34:36.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.813" endtime="20201110 08:34:36.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.809" endtime="20201110 08:34:36.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.439" endtime="20201110 08:34:36.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.439" endtime="20201110 08:34:36.835"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.844" endtime="20201110 08:34:36.865"></status>
</kw>
<msg timestamp="20201110 08:34:36.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.842" endtime="20201110 08:34:36.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.866" endtime="20201110 08:34:36.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.869" endtime="20201110 08:34:36.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.840" endtime="20201110 08:34:36.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.837" endtime="20201110 08:34:36.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.878" endtime="20201110 08:34:37.163"></status>
</kw>
<msg timestamp="20201110 08:34:37.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.876" endtime="20201110 08:34:37.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.167" endtime="20201110 08:34:37.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.175" endtime="20201110 08:34:37.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.874" endtime="20201110 08:34:37.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.872" endtime="20201110 08:34:37.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.182" level="INFO">${RESULT} = [{'time': 0.022481569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.858299999999931e-05, 'source_diff': 9.858299999999931e-05}, {'time': 0.022573264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:37.179" endtime="20201110 08:34:37.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:37.195" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:37.183" endtime="20201110 08:34:37.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.200" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:34:37.199" endtime="20201110 08:34:37.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.202" level="INFO">VALUE: [9.858299999999931e-05, 8.426400000000056e-05, 8.613899999999897e-05, 8.136099999999855e-05, 8.711100000000083e-05, 8.422200000000185e-05, 8.43469999999985e-05, 8.231900000000084e-05, 8.24720000000001e-05, 8.711100000000083e-05, 8.234699999999998e-05, 8.518100000000015e-05, 8.423599999999795e-05, 8.329200000000217e-05, 8.238900000000215e-05, 8.627800000000213e-05, 8.236099999999955e-05, 8.422200000000185e-05, 8.520899999999929e-05, 8.324999999999999e-05, 8.61799999999982e-05, 8.048600000000114e-05, 8.231900000000084e-05, 8.806899999999965e-05, 8.324999999999999e-05, 8.234699999999998e-05, 8.43469999999985e-05, 8.32919999999987e-05, 8.226400000000203e-05, 8.522199999999938e-05, 8.136099999999855e-05, 8.623599999999995e-05, 8.426300000000109e-05, 8.708400000000116e-05, 8.137500000000158e-05, 8.630600000000127e-05, 8.230500000000127e-05, 8.711100000000083e-05, 8.706999999999812e-05, 8.137499999999812e-05, 8.425000000000099e-05, 8.137499999999812e-05, 8.244399999999749e-05, 8.709800000000073e-05, 8.630600000000127e-05, 8.518100000000015e-05, 8.230600000000074e-05, 8.424999999999752e-05, 8.417999999999967e-05, 8.32780000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:34:37.201" endtime="20201110 08:34:37.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.196" endtime="20201110 08:34:37.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.206" endtime="20201110 08:34:37.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:37.209" endtime="20201110 08:34:37.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.208" endtime="20201110 08:34:37.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.204" endtime="20201110 08:34:37.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.836" endtime="20201110 08:34:37.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.835" endtime="20201110 08:34:37.230"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.239" endtime="20201110 08:34:37.262"></status>
</kw>
<msg timestamp="20201110 08:34:37.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.237" endtime="20201110 08:34:37.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.263" endtime="20201110 08:34:37.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.266" endtime="20201110 08:34:37.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.234" endtime="20201110 08:34:37.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.232" endtime="20201110 08:34:37.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.274" endtime="20201110 08:34:37.562"></status>
</kw>
<msg timestamp="20201110 08:34:37.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02428075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024379333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:37.273" endtime="20201110 08:34:37.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02428075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024379333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:37.566" endtime="20201110 08:34:37.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.575" endtime="20201110 08:34:37.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.270" endtime="20201110 08:34:37.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.269" endtime="20201110 08:34:37.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.584" level="INFO">${RESULT} = [{'time': 0.024379333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.858299999999931e-05, 'source_diff': 9.858299999999931e-05}, {'time': 0.024470875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:37.580" endtime="20201110 08:34:37.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:37.599" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:37.586" endtime="20201110 08:34:37.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.606" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:34:37.604" endtime="20201110 08:34:37.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.609" level="INFO">VALUE: [9.858299999999931e-05, 8.61669999999981e-05, 8.138900000000115e-05, 8.71250000000004e-05, 8.523600000000242e-05, 8.327799999999913e-05, 8.220800000000028e-05, 8.32919999999987e-05, 8.520799999999981e-05, 8.231900000000084e-05, 8.613900000000244e-05, 8.618099999999768e-05, 8.616700000000158e-05, 8.519499999999972e-05, 8.329200000000217e-05, 8.426400000000056e-05, 8.231900000000084e-05, 8.522199999999938e-05, 8.327799999999913e-05, 8.138899999999769e-05, 8.137500000000158e-05, 8.505500000000055e-05, 8.23330000000004e-05, 8.232000000000031e-05, 8.137500000000158e-05, 8.618100000000115e-05, 8.518100000000015e-05, 8.609799999999973e-05, 8.138900000000115e-05, 8.329200000000217e-05, 8.515299999999754e-05, 8.133399999999888e-05, 8.422199999999838e-05, 8.138900000000115e-05, 8.327799999999913e-05, 8.6153000000002e-05, 8.23330000000004e-05, 8.423599999999795e-05, 8.516700000000058e-05, 8.32780000000026e-05, 8.223599999999942e-05, 8.419400000000271e-05, 8.326399999999956e-05, 8.43330000000024e-05, 8.804100000000051e-05, 8.713899999999997e-05, 8.62920000000017e-05, 8.233399999999988e-05, 8.518000000000067e-05, 8.333299999999794e-05]</msg>
<status status="PASS" starttime="20201110 08:34:37.607" endtime="20201110 08:34:37.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.601" endtime="20201110 08:34:37.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.612" endtime="20201110 08:34:37.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:37.616" endtime="20201110 08:34:37.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.614" endtime="20201110 08:34:37.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.611" endtime="20201110 08:34:37.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.231" endtime="20201110 08:34:37.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.230" endtime="20201110 08:34:37.637"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.645" endtime="20201110 08:34:37.669"></status>
</kw>
<msg timestamp="20201110 08:34:37.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.644" endtime="20201110 08:34:37.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.671" endtime="20201110 08:34:37.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.673" endtime="20201110 08:34:37.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.641" endtime="20201110 08:34:37.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.639" endtime="20201110 08:34:37.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.682" endtime="20201110 08:34:37.969"></status>
</kw>
<msg timestamp="20201110 08:34:37.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024719278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.681" endtime="20201110 08:34:37.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024719278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.973" endtime="20201110 08:34:37.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.982" endtime="20201110 08:34:37.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.678" endtime="20201110 08:34:37.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.676" endtime="20201110 08:34:37.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.988" level="INFO">${RESULT} = [{'time': 0.024719278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.955600000000146e-05, 'source_diff': 7.955600000000146e-05}, {'time': 0.024810722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:37.985" endtime="20201110 08:34:37.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.046" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:37.989" endtime="20201110 08:34:38.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.051" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.050" endtime="20201110 08:34:38.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.053" level="INFO">VALUE: [7.955600000000146e-05, 8.711100000000083e-05, 8.327799999999913e-05, 8.337500000000012e-05, 8.134699999999898e-05, 8.138900000000115e-05, 8.419399999999924e-05, 8.620799999999734e-05, 8.519500000000318e-05, 8.427800000000013e-05, 8.627699999999919e-05, 8.426400000000056e-05, 8.332000000000131e-05, 8.326400000000303e-05, 8.426400000000056e-05, 8.326399999999956e-05, 8.419399999999924e-05, 8.519400000000024e-05, 8.42370000000009e-05, 8.423600000000142e-05, 8.613899999999897e-05, 8.424999999999752e-05, 8.23330000000004e-05, 8.136099999999855e-05, 8.136100000000202e-05, 8.134699999999898e-05, 8.336100000000055e-05, 8.61669999999981e-05, 8.327699999999966e-05, 8.327699999999966e-05, 8.329200000000217e-05, 8.619500000000072e-05, 8.32919999999987e-05, 8.51799999999972e-05, 8.805599999999955e-05, 8.71250000000004e-05, 8.232000000000031e-05, 8.71250000000004e-05, 8.231899999999737e-05, 8.430599999999927e-05, 8.138900000000115e-05, 8.423599999999795e-05, 8.613899999999897e-05, 8.326399999999956e-05, 8.619400000000124e-05, 8.231900000000084e-05, 8.43469999999985e-05, 8.138900000000115e-05, 8.712499999999693e-05, 8.333400000000088e-05]</msg>
<status status="PASS" starttime="20201110 08:34:38.052" endtime="20201110 08:34:38.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.047" endtime="20201110 08:34:38.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.057" endtime="20201110 08:34:38.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.060" endtime="20201110 08:34:38.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.059" endtime="20201110 08:34:38.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.055" endtime="20201110 08:34:38.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.638" endtime="20201110 08:34:38.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.637" endtime="20201110 08:34:38.081"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.090" endtime="20201110 08:34:38.111"></status>
</kw>
<msg timestamp="20201110 08:34:38.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.089" endtime="20201110 08:34:38.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.113" endtime="20201110 08:34:38.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.115" endtime="20201110 08:34:38.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.086" endtime="20201110 08:34:38.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.084" endtime="20201110 08:34:38.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.124" endtime="20201110 08:34:38.410"></status>
</kw>
<msg timestamp="20201110 08:34:38.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.122" endtime="20201110 08:34:38.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.414" endtime="20201110 08:34:38.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.423" endtime="20201110 08:34:38.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.120" endtime="20201110 08:34:38.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.118" endtime="20201110 08:34:38.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.429" level="INFO">${RESULT} = [{'time': 0.022368389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.898599999999923e-05, 'source_diff': 8.898599999999923e-05}, {'time': 0.022459806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:38.426" endtime="20201110 08:34:38.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.443" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:38.430" endtime="20201110 08:34:38.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.447" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.446" endtime="20201110 08:34:38.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.450" level="INFO">VALUE: [8.898599999999923e-05, 8.613899999999897e-05, 8.616700000000158e-05, 8.518000000000067e-05, 8.233399999999988e-05, 8.61249999999994e-05, 8.712499999999693e-05, 8.809699999999879e-05, 8.615299999999854e-05, 8.233399999999988e-05, 8.233399999999988e-05, 8.622299999999986e-05, 8.713800000000049e-05, 8.231900000000084e-05, 8.518000000000067e-05, 8.234699999999998e-05, 8.33330000000014e-05, 8.423600000000142e-05, 8.420900000000175e-05, 8.133399999999888e-05, 8.713800000000049e-05, 8.431999999999884e-05, 8.805500000000008e-05, 8.711100000000083e-05, 8.329200000000217e-05, 8.23049999999978e-05, 8.518000000000067e-05, 8.6153000000002e-05, 8.61669999999981e-05, 8.134799999999845e-05, 8.137500000000158e-05, 8.044399999999896e-05, 8.519499999999972e-05, 8.330599999999827e-05, 8.529199999999723e-05, 8.33049999999988e-05, 8.322200000000085e-05, 8.232000000000031e-05, 8.137500000000158e-05, 8.520799999999981e-05, 8.522199999999938e-05, 8.524999999999852e-05, 8.236099999999955e-05, 8.513900000000144e-05, 8.32919999999987e-05, 8.329200000000217e-05, 8.237500000000259e-05, 8.708300000000169e-05, 8.613899999999897e-05, 8.711100000000083e-05]</msg>
<status status="PASS" starttime="20201110 08:34:38.448" endtime="20201110 08:34:38.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.443" endtime="20201110 08:34:38.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.453" endtime="20201110 08:34:38.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.456" endtime="20201110 08:34:38.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.455" endtime="20201110 08:34:38.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.452" endtime="20201110 08:34:38.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.082" endtime="20201110 08:34:38.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.082" endtime="20201110 08:34:38.477"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.487" endtime="20201110 08:34:38.508"></status>
</kw>
<msg timestamp="20201110 08:34:38.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.485" endtime="20201110 08:34:38.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.509" endtime="20201110 08:34:38.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.512" endtime="20201110 08:34:38.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.482" endtime="20201110 08:34:38.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.480" endtime="20201110 08:34:38.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.521" endtime="20201110 08:34:38.806"></status>
</kw>
<msg timestamp="20201110 08:34:38.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023052847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023137139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.519" endtime="20201110 08:34:38.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023052847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023137139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.810" endtime="20201110 08:34:38.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.818" endtime="20201110 08:34:38.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.516" endtime="20201110 08:34:38.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.515" endtime="20201110 08:34:38.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.825" level="INFO">${RESULT} = [{'time': 0.023137139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.42919999999997e-05, 'source_diff': 8.42919999999997e-05}, {'time': 0.023228111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:38.822" endtime="20201110 08:34:38.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.838" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:38.826" endtime="20201110 08:34:38.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.843" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.842" endtime="20201110 08:34:38.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.845" level="INFO">VALUE: [8.42919999999997e-05, 8.519400000000024e-05, 8.420799999999881e-05, 8.044499999999843e-05, 8.423599999999795e-05, 8.61669999999981e-05, 8.237500000000259e-05, 8.223599999999942e-05, 8.331899999999837e-05, 8.509699999999926e-05, 8.140199999999778e-05, 8.706899999999865e-05, 8.330500000000227e-05, 8.326300000000009e-05, 8.605599999999755e-05, 8.806899999999965e-05, 8.423600000000142e-05, 8.038900000000015e-05, 8.509799999999873e-05, 8.233399999999988e-05, 8.333299999999794e-05, 8.616700000000158e-05, 8.419499999999872e-05, 8.229200000000117e-05, 8.137500000000158e-05, 8.509799999999873e-05, 8.615299999999854e-05, 8.238800000000268e-05, 8.71250000000004e-05, 8.220899999999975e-05, 8.420799999999881e-05, 8.509699999999926e-05, 8.715299999999954e-05, 8.223599999999942e-05, 8.234799999999945e-05, 8.318099999999815e-05, 8.137499999999812e-05, 8.708300000000169e-05, 8.224999999999899e-05, 8.718100000000215e-05, 8.224999999999899e-05, 8.709700000000126e-05, 8.618100000000115e-05, 8.618100000000115e-05, 8.423599999999795e-05, 8.79730000000016e-05, 8.416699999999958e-05, 8.513899999999797e-05, 8.408399999999816e-05, 8.138900000000115e-05]</msg>
<status status="PASS" starttime="20201110 08:34:38.844" endtime="20201110 08:34:38.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.839" endtime="20201110 08:34:38.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.857" endtime="20201110 08:34:38.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.861" endtime="20201110 08:34:38.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.859" endtime="20201110 08:34:38.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.856" endtime="20201110 08:34:38.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.478" endtime="20201110 08:34:38.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.478" endtime="20201110 08:34:38.882"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.890" endtime="20201110 08:34:38.914"></status>
</kw>
<msg timestamp="20201110 08:34:38.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.889" endtime="20201110 08:34:38.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.916" endtime="20201110 08:34:38.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.918" endtime="20201110 08:34:38.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.886" endtime="20201110 08:34:38.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.884" endtime="20201110 08:34:38.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.927" endtime="20201110 08:34:39.213"></status>
</kw>
<msg timestamp="20201110 08:34:39.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025615264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025704319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.926" endtime="20201110 08:34:39.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025615264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025704319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.217" endtime="20201110 08:34:39.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.225" endtime="20201110 08:34:39.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.923" endtime="20201110 08:34:39.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.921" endtime="20201110 08:34:39.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:39.232" level="INFO">${RESULT} = [{'time': 0.025704319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.905500000000108e-05, 'source_diff': 8.905500000000108e-05}, {'time': 0.025796111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:39.229" endtime="20201110 08:34:39.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.245" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:39.233" endtime="20201110 08:34:39.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.250" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.249" endtime="20201110 08:34:39.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.252" level="INFO">VALUE: [8.905500000000108e-05, 8.134699999999898e-05, 8.220899999999975e-05, 8.615299999999854e-05, 8.234699999999998e-05, 8.426400000000056e-05, 8.223599999999942e-05, 8.423599999999795e-05, 8.425000000000099e-05, 8.329099999999923e-05, 8.520899999999929e-05, 8.233399999999988e-05, 8.79860000000017e-05, 8.131899999999984e-05, 8.6153000000002e-05, 8.327799999999913e-05, 8.711100000000083e-05, 8.131899999999984e-05, 8.320900000000075e-05, 8.422199999999838e-05, 8.329200000000217e-05, 8.615299999999854e-05, 8.223599999999942e-05, 8.327799999999913e-05, 8.327799999999913e-05, 8.231900000000084e-05, 8.129200000000017e-05, 8.133399999999888e-05, 8.131899999999984e-05, 8.230600000000074e-05, 8.713899999999997e-05, 8.516700000000058e-05, 8.131999999999931e-05, 8.316700000000204e-05, 8.519400000000024e-05, 8.422199999999838e-05, 8.423599999999795e-05, 8.234699999999998e-05, 8.327699999999966e-05, 8.329099999999923e-05, 8.508299999999969e-05, 8.518100000000015e-05, 8.23330000000004e-05, 8.71250000000004e-05, 8.330600000000174e-05, 8.794399999999952e-05, 8.71250000000004e-05, 8.424999999999752e-05, 8.130500000000027e-05, 8.806899999999965e-05]</msg>
<status status="PASS" starttime="20201110 08:34:39.251" endtime="20201110 08:34:39.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.246" endtime="20201110 08:34:39.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.256" endtime="20201110 08:34:39.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.259" endtime="20201110 08:34:39.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.258" endtime="20201110 08:34:39.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.254" endtime="20201110 08:34:39.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.883" endtime="20201110 08:34:39.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.882" endtime="20201110 08:34:39.280"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.289" endtime="20201110 08:34:39.317"></status>
</kw>
<msg timestamp="20201110 08:34:39.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.287" endtime="20201110 08:34:39.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.318" endtime="20201110 08:34:39.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.321" endtime="20201110 08:34:39.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.285" endtime="20201110 08:34:39.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.283" endtime="20201110 08:34:39.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.330" endtime="20201110 08:34:39.616"></status>
</kw>
<msg timestamp="20201110 08:34:39.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023923014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024001542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.328" endtime="20201110 08:34:39.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023923014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024001542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.620" endtime="20201110 08:34:39.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.628" endtime="20201110 08:34:39.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.326" endtime="20201110 08:34:39.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.324" endtime="20201110 08:34:39.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:39.635" level="INFO">${RESULT} = [{'time': 0.024001542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.852800000000132e-05, 'source_diff': 7.852800000000132e-05}, {'time': 0.024092736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:39.632" endtime="20201110 08:34:39.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.649" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:39.636" endtime="20201110 08:34:39.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.654" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.653" endtime="20201110 08:34:39.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.656" level="INFO">VALUE: [7.852800000000132e-05, 8.327799999999913e-05, 8.236099999999955e-05, 8.233399999999988e-05, 8.522199999999938e-05, 8.423600000000142e-05, 8.611099999999983e-05, 8.613900000000244e-05, 8.329099999999923e-05, 8.226399999999856e-05, 8.138900000000115e-05, 8.426399999999709e-05, 8.136100000000202e-05, 8.230600000000074e-05, 8.33469999999975e-05, 8.51799999999972e-05, 8.529100000000123e-05, 8.138900000000115e-05, 8.624999999999952e-05, 8.327799999999913e-05, 8.42919999999997e-05, 8.709700000000126e-05, 8.151400000000128e-05, 8.709699999999779e-05, 8.427800000000013e-05, 8.230600000000074e-05, 8.61249999999994e-05, 8.227799999999813e-05, 8.518000000000067e-05, 8.711099999999736e-05, 8.137499999999812e-05, 8.611099999999983e-05, 8.611099999999983e-05, 8.529199999999723e-05, 8.713899999999997e-05, 8.140299999999726e-05, 8.236099999999955e-05, 8.613799999999949e-05, 8.518100000000015e-05, 8.523599999999895e-05, 8.336100000000055e-05, 8.518000000000067e-05, 8.5153000000001e-05, 8.434800000000145e-05, 8.040299999999972e-05, 8.51669999999971e-05, 8.419399999999924e-05, 8.518100000000015e-05, 8.422200000000185e-05, 8.709700000000126e-05]</msg>
<status status="PASS" starttime="20201110 08:34:39.655" endtime="20201110 08:34:39.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.650" endtime="20201110 08:34:39.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.660" endtime="20201110 08:34:39.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.663" endtime="20201110 08:34:39.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.661" endtime="20201110 08:34:39.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.658" endtime="20201110 08:34:39.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.281" endtime="20201110 08:34:39.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.281" endtime="20201110 08:34:39.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.734" endtime="20201110 08:34:39.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.688" endtime="20201110 08:34:39.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.686" endtime="20201110 08:34:39.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.685" endtime="20201110 08:34:39.708"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:59.661" endtime="20201110 08:34:39.709" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:17.964" endtime="20201110 08:34:39.712"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.766" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:34:39.775" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:34:40.874" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:34:39.765" endtime="20201110 08:34:40.875"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.877" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:34:40.876" endtime="20201110 08:34:40.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.764" endtime="20201110 08:34:40.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:40.880" endtime="20201110 08:34:41.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.879" endtime="20201110 08:34:41.064"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.076" endtime="20201110 08:34:41.095"></status>
</kw>
<msg timestamp="20201110 08:34:41.095" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['me to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.074" endtime="20201110 08:34:41.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.098" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['me to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.096" endtime="20201110 08:34:41.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.101" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:41.099" endtime="20201110 08:34:41.101"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:41.072" endtime="20201110 08:34:41.102"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:41.070" endtime="20201110 08:34:41.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.069" endtime="20201110 08:34:41.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:41.108" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:41.107" endtime="20201110 08:34:41.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.104" endtime="20201110 08:34:41.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.068" endtime="20201110 08:34:41.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.067" endtime="20201110 08:34:41.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.109" endtime="20201110 08:34:41.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.066" endtime="20201110 08:34:41.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.113" endtime="20201110 08:34:41.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.064" endtime="20201110 08:34:41.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.762" endtime="20201110 08:34:41.115"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.121" endtime="20201110 08:34:41.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.120" endtime="20201110 08:34:41.141"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.154" endtime="20201110 08:34:41.174"></status>
</kw>
<msg timestamp="20201110 08:34:41.175" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.152" endtime="20201110 08:34:41.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.177" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.176" endtime="20201110 08:34:41.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.180" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:41.178" endtime="20201110 08:34:41.180"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:41.150" endtime="20201110 08:34:41.181"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:41.147" endtime="20201110 08:34:41.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.146" endtime="20201110 08:34:41.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:41.186" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:41.185" endtime="20201110 08:34:41.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.183" endtime="20201110 08:34:41.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.145" endtime="20201110 08:34:41.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.145" endtime="20201110 08:34:41.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.187" endtime="20201110 08:34:41.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.143" endtime="20201110 08:34:41.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.142" endtime="20201110 08:34:41.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.118" endtime="20201110 08:34:41.190"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:34:41.193" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.203" endtime="20201110 08:34:43.313"></status>
</kw>
<msg timestamp="20201110 08:34:43.313" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 382995, 'start-iter': 1, 'wakeups': [393005, 403015, 413024, 423004, 4...</msg>
<status status="PASS" starttime="20201110 08:34:41.201" endtime="20201110 08:34:43.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.316" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 382995, 'start-iter': 1, 'wakeups': [393005, 403015, 413024, 423004, 4...</msg>
<status status="PASS" starttime="20201110 08:34:43.314" endtime="20201110 08:34:43.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.318" endtime="20201110 08:34:43.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.198" endtime="20201110 08:34:43.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.195" endtime="20201110 08:34:43.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.323" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'start-time': 382995, 'start-iter': 1, 'wakeups': [393005, 403015, 413024, 423004, 433013, 443023, 453002, 463012, 473022, 483001, 493011, 503021, 513000, 5...</msg>
<status status="PASS" starttime="20201110 08:34:43.321" endtime="20201110 08:34:43.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.327" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:43.326" endtime="20201110 08:34:43.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.330" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:43.329" endtime="20201110 08:34:43.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.324" endtime="20201110 08:34:43.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.334" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:43.333" endtime="20201110 08:34:43.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.336" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:43.335" endtime="20201110 08:34:43.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.331" endtime="20201110 08:34:43.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.341" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:43.340" endtime="20201110 08:34:43.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.343" level="INFO">VALUE: 382995</msg>
<status status="PASS" starttime="20201110 08:34:43.342" endtime="20201110 08:34:43.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.338" endtime="20201110 08:34:43.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.348" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:43.347" endtime="20201110 08:34:43.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.350" level="INFO">VALUE: [393005, 403015, 413024, 423004, 433013, 443023, 453002, 463012, 473022, 483001, 493011, 503021, 513000, 523010, 533020, 542999, 553009, 563018, 572998, 583007, 593017, 602996, 613006, 623016, 632995, 643005, 653015, 663024, 673004, 683013, 693023, 703002, 713012, 723022, 733001, 743011, 753021, 763000, 773010, 783020, 792999, 803009, 813018, 822998, 833007, 843017, 852996, 863006, 873016, 882995, 893005, 903015, 913024, 923004, 933013, 943023, 953002, 963012, 973022, 983001, 993011, 1003021, 1013000, 1023010, 1033020, 1042999, 1053009, 1063018, 1072998, 1083007, 1093017, 1102996, 1113006, 1123016, 1132995, 1143005, 1153015, 1163024, 1173004, 1183013, 1193023, 1203002, 1213012, 1223022, 1233001, 1243011, 1253021, 1263000, 1273010, 1283020, 1292999, 1303009, 1313018, 1322998, 1333007, 1343017, 1352996, 1363006, 1373016, 1382995]</msg>
<status status="PASS" starttime="20201110 08:34:43.349" endtime="20201110 08:34:43.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.344" endtime="20201110 08:34:43.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.357" endtime="20201110 08:34:43.655"></status>
</kw>
<msg timestamp="20201110 08:34:43.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075168708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.085176625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.356" endtime="20201110 08:34:43.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075168708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.085176625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.658" endtime="20201110 08:34:43.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.666" endtime="20201110 08:34:43.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.353" endtime="20201110 08:34:43.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.352" endtime="20201110 08:34:43.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.692" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:43.669" endtime="20201110 08:34:43.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.697" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:43.696" endtime="20201110 08:34:43.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.699" level="INFO">VALUE: 0.075168708</msg>
<status status="PASS" starttime="20201110 08:34:43.698" endtime="20201110 08:34:43.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.693" endtime="20201110 08:34:43.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.704" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:43.703" endtime="20201110 08:34:43.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.706" level="INFO">VALUE: [0.085176625, 0.095186083, 0.105195556, 0.115174403, 0.125183889, 0.135193361, 0.145172278, 0.155181736, 0.165191167, 0.175170097, 0.185179597, 0.195189014, 0.205167972, 0.215177375, 0.225186875, 0.23516575, 0.245175236, 0.255184639, 0.265163556, 0.275173028, 0.285182486, 0.295161375, 0.305170847, 0.315180306, 0.325159278, 0.335168667, 0.345178097, 0.355187569, 0.365166486, 0.375175944, 0.385185431, 0.395164361, 0.405173819, 0.415183194, 0.425162194, 0.435171708, 0.445181069, 0.455159972, 0.465169417, 0.475178861, 0.485157806, 0.495167236, 0.505176694, 0.515155625, 0.525165069, 0.535174514, 0.545153444, 0.555162917, 0.565172333, 0.575151306, 0.585160722, 0.595170181, 0.605179583, 0.615158583, 0.625167986, 0.635177417, 0.645156389, 0.655165806, 0.66517525, 0.675154208, 0.685163611, 0.695173111, 0.705152042, 0.715161458, 0.725170917, 0.735149833, 0.745159292, 0.755168778, 0.765147667, 0.775157097, 0.785166569, 0.795145514, 0.805154972, 0.815164375, 0.825143361, 0.835152806, 0.845162194, 0.855171653, 0.865150583, 0.875160042, 0.885169486, 0.895148403, 0.905157889, 0.915167292, 0.92514625, 0.935155639, 0.945165097, 0.955144083, 0.965153486, 0.975162944, 0.985141931, 0.995151347, 1.005160806, 1.015139764, 1.025149167, 1.035158681, 1.045137542, 1.055147, 1.065156444, 1.075135361] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:43.705" endtime="20201110 08:34:43.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.700" endtime="20201110 08:34:43.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.709" endtime="20201110 08:34:43.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.713" endtime="20201110 08:34:43.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.711" endtime="20201110 08:34:43.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.708" endtime="20201110 08:34:43.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.194" endtime="20201110 08:34:43.733"></status>
</kw>
<msg timestamp="20201110 08:34:43.734" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.741" endtime="20201110 08:34:45.861"></status>
</kw>
<msg timestamp="20201110 08:34:45.862" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2920471, 'start-iter': 1, 'wakeups': [2930480, 2940490, 2950500, 29604...</msg>
<status status="PASS" starttime="20201110 08:34:43.740" endtime="20201110 08:34:45.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.867" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2920471, 'start-iter': 1, 'wakeups': [2930480, 2940490, 2950500, 29604...</msg>
<status status="PASS" starttime="20201110 08:34:45.864" endtime="20201110 08:34:45.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.868" endtime="20201110 08:34:45.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.737" endtime="20201110 08:34:45.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.735" endtime="20201110 08:34:45.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:45.873" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'start-time': 2920471, 'start-iter': 1, 'wakeups': [2930480, 2940490, 2950500, 2960479, 2970489, 2980499, 2990478, 3000488, 3010498, 3020477, 3030487, 30404...</msg>
<status status="PASS" starttime="20201110 08:34:45.871" endtime="20201110 08:34:45.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.877" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:45.876" endtime="20201110 08:34:45.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.880" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:45.879" endtime="20201110 08:34:45.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.874" endtime="20201110 08:34:45.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.885" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:45.884" endtime="20201110 08:34:45.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.887" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:45.886" endtime="20201110 08:34:45.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.881" endtime="20201110 08:34:45.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.891" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:45.890" endtime="20201110 08:34:45.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.893" level="INFO">VALUE: 2920471</msg>
<status status="PASS" starttime="20201110 08:34:45.893" endtime="20201110 08:34:45.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.888" endtime="20201110 08:34:45.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.898" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:45.897" endtime="20201110 08:34:45.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.900" level="INFO">VALUE: [2930480, 2940490, 2950500, 2960479, 2970489, 2980499, 2990478, 3000488, 3010498, 3020477, 3030487, 3040496, 3050476, 3060485, 3070495, 3080474, 3090484, 3100494, 3110473, 3120483, 3130493, 3140472, 3150482, 3160491, 3170501, 3180480, 3190490, 3200500, 3210479, 3220489, 3230499, 3240478, 3250488, 3260498, 3270477, 3280487, 3290496, 3300476, 3310485, 3320495, 3330474, 3340484, 3350494, 3360473, 3370483, 3380493, 3390472, 3400482, 3410491, 3420501, 3430480, 3440490, 3450500, 3460479, 3470489, 3480499, 3490478, 3500488, 3510498, 3520477, 3530487, 3540496, 3550476, 3560485, 3570495, 3580474, 3590484, 3600494, 3610473, 3620483, 3630493, 3640472, 3650482, 3660491, 3670501, 3680480, 3690490, 3700500, 3710479, 3720489, 3730499, 3740478, 3750488, 3760498, 3770477, 3780487, 3790496, 3800476, 3810485, 3820495, 3830474, 3840484, 3850494, 3860473, 3870483, 3880493, 3890472, 3900482, 3910491, 3920501]</msg>
<status status="PASS" starttime="20201110 08:34:45.899" endtime="20201110 08:34:45.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.895" endtime="20201110 08:34:45.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.908" endtime="20201110 08:34:46.200"></status>
</kw>
<msg timestamp="20201110 08:34:46.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020677347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030678083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.906" endtime="20201110 08:34:46.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020677347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030678083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.203" endtime="20201110 08:34:46.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.211" endtime="20201110 08:34:46.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.904" endtime="20201110 08:34:46.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.902" endtime="20201110 08:34:46.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.238" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:46.214" endtime="20201110 08:34:46.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.242" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:46.241" endtime="20201110 08:34:46.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.244" level="INFO">VALUE: 0.020677347</msg>
<status status="PASS" starttime="20201110 08:34:46.243" endtime="20201110 08:34:46.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.239" endtime="20201110 08:34:46.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.250" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:46.249" endtime="20201110 08:34:46.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.252" level="INFO">VALUE: [0.030678083, 0.040687472, 0.050696958, 0.060675903, 0.070685361, 0.08069475, 0.090673736, 0.100683181, 0.110692625, 0.120671542, 0.130681, 0.140690417, 0.150669319, 0.160678792, 0.170688306, 0.180667167, 0.190676653, 0.200686083, 0.210665028, 0.220674458, 0.230683875, 0.240662819, 0.250672236, 0.260681708, 0.270691181, 0.280670069, 0.290679542, 0.300688972, 0.310667889, 0.320677319, 0.330686806, 0.340665708, 0.350675153, 0.360684569, 0.370663514, 0.380673042, 0.390682472, 0.400661403, 0.410670861, 0.420680264, 0.430659208, 0.440668653, 0.450678125, 0.460657042, 0.470666444, 0.480675903, 0.490654861, 0.500664292, 0.510673722, 0.520683208, 0.530662153, 0.540671625, 0.550681083, 0.560659958, 0.570669417, 0.580678819, 0.590657764, 0.60066725, 0.610676681, 0.620655625, 0.630665069, 0.640674556, 0.650653431, 0.660662875, 0.670672347, 0.68065125, 0.690660653, 0.700670125, 0.710649014, 0.720658583, 0.730667972, 0.740646875, 0.750656403, 0.760665792, 0.770675194, 0.780654167, 0.790663569, 0.800673083, 0.810651986, 0.820661431, 0.830670889, 0.840649819, 0.850659306, 0.860668764, 0.870647681, 0.880657125, 0.890666556, 0.900645486, 0.910654931, 0.920664361, 0.930643306, 0.940652764, 0.950662208, 0.960641153, 0.970650583, 0.980660056, 0.990638986, 1.000648389, 1.010657806, 1.020667292] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:46.251" endtime="20201110 08:34:46.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.246" endtime="20201110 08:34:46.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.255" endtime="20201110 08:34:46.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.259" endtime="20201110 08:34:46.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.257" endtime="20201110 08:34:46.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.254" endtime="20201110 08:34:46.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.734" endtime="20201110 08:34:46.280"></status>
</kw>
<msg timestamp="20201110 08:34:46.280" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.290" endtime="20201110 08:34:48.405"></status>
</kw>
<msg timestamp="20201110 08:34:48.406" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5468017, 'start-iter': 1, 'wakeups': [5478027, 5488037, 5498046, 55080...</msg>
<status status="PASS" starttime="20201110 08:34:46.288" endtime="20201110 08:34:48.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.412" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5468017, 'start-iter': 1, 'wakeups': [5478027, 5488037, 5498046, 55080...</msg>
<status status="PASS" starttime="20201110 08:34:48.408" endtime="20201110 08:34:48.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.414" endtime="20201110 08:34:48.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.285" endtime="20201110 08:34:48.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.282" endtime="20201110 08:34:48.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:48.423" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'start-time': 5468017, 'start-iter': 1, 'wakeups': [5478027, 5488037, 5498046, 5508026, 5518035, 5528045, 5538024, 5548034, 5558044, 5568023, 5578033, 55880...</msg>
<status status="PASS" starttime="20201110 08:34:48.421" endtime="20201110 08:34:48.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.427" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:48.426" endtime="20201110 08:34:48.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.430" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:48.429" endtime="20201110 08:34:48.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.424" endtime="20201110 08:34:48.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.435" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:48.434" endtime="20201110 08:34:48.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.437" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:48.436" endtime="20201110 08:34:48.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.432" endtime="20201110 08:34:48.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.442" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:48.441" endtime="20201110 08:34:48.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.444" level="INFO">VALUE: 5468017</msg>
<status status="PASS" starttime="20201110 08:34:48.443" endtime="20201110 08:34:48.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.439" endtime="20201110 08:34:48.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.449" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:48.448" endtime="20201110 08:34:48.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.451" level="INFO">VALUE: [5478027, 5488037, 5498046, 5508026, 5518035, 5528045, 5538024, 5548034, 5558044, 5568023, 5578033, 5588043, 5598022, 5608032, 5618041, 5628021, 5638031, 5648040, 5658020, 5668029, 5678039, 5688018, 5698028, 5708038, 5718017, 5728027, 5738037, 5748046, 5758026, 5768035, 5778045, 5788024, 5798034, 5808044, 5818023, 5828033, 5838043, 5848022, 5858032, 5868041, 5878021, 5888031, 5898040, 5908020, 5918029, 5928039, 5938018, 5948028, 5958038, 5968017, 5978027, 5988037, 5998046, 6008026, 6018035, 6028045, 6038024, 6048034, 6058044, 6068023, 6078033, 6088043, 6098022, 6108032, 6118041, 6128021, 6138031, 6148040, 6158020, 6168029, 6178039, 6188018, 6198028, 6208038, 6218017, 6228027, 6238037, 6248046, 6258026, 6268035, 6278045, 6288024, 6298034, 6308044, 6318023, 6328033, 6338043, 6348022, 6358032, 6368041, 6378021, 6388031, 6398040, 6408020, 6418029, 6428039, 6438018, 6448028, 6458038, 6468017]</msg>
<status status="PASS" starttime="20201110 08:34:48.450" endtime="20201110 08:34:48.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.446" endtime="20201110 08:34:48.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.459" endtime="20201110 08:34:48.750"></status>
</kw>
<msg timestamp="20201110 08:34:48.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021569264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031573486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.457" endtime="20201110 08:34:48.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021569264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031573486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.753" endtime="20201110 08:34:48.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.761" endtime="20201110 08:34:48.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.454" endtime="20201110 08:34:48.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.453" endtime="20201110 08:34:48.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:48.787" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:48.764" endtime="20201110 08:34:48.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.792" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:48.791" endtime="20201110 08:34:48.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.794" level="INFO">VALUE: 0.021569264</msg>
<status status="PASS" starttime="20201110 08:34:48.793" endtime="20201110 08:34:48.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.788" endtime="20201110 08:34:48.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.800" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:48.799" endtime="20201110 08:34:48.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.802" level="INFO">VALUE: [0.031573486, 0.041582903, 0.051592375, 0.061571264, 0.071580764, 0.081590208, 0.091569153, 0.101578583, 0.111588056, 0.121566972, 0.131576417, 0.141585861, 0.151564764, 0.161574236, 0.171583667, 0.181562625, 0.191572083, 0.201581486, 0.211560444, 0.221569903, 0.231579333, 0.241558222, 0.251567722, 0.261577181, 0.271556069, 0.281565486, 0.291574986, 0.301584431, 0.311563375, 0.321572875, 0.331582278, 0.341561194, 0.351570681, 0.361580069, 0.371559028, 0.381568431, 0.391577903, 0.401556861, 0.411566292, 0.421575694, 0.431554611, 0.441564111, 0.451573528, 0.4615525, 0.471561944, 0.481571389, 0.491550361, 0.501559778, 0.511569181, 0.521548125, 0.531557569, 0.541567028, 0.551576528, 0.561555431, 0.571564875, 0.581574319, 0.591553208, 0.601562681, 0.611572139, 0.621551056, 0.631560486, 0.641569917, 0.651548903, 0.661558333, 0.671567792, 0.681546736, 0.691556181, 0.701565597, 0.7115445, 0.721553986, 0.731563389, 0.741542361, 0.751551806, 0.76156125, 0.771540167, 0.781549611, 0.791559083, 0.801568556, 0.811547444, 0.821556861, 0.831566292, 0.841545292, 0.851554764, 0.861564167, 0.871543056, 0.881552569, 0.891562014, 0.901540931, 0.911550361, 0.921559819, 0.931538722, 0.941548181, 0.951557653, 0.961536556, 0.971545986, 0.9815555, 0.991534431, 1.001543903, 1.011553347, 1.021532236] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:48.801" endtime="20201110 08:34:48.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.796" endtime="20201110 08:34:48.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.806" endtime="20201110 08:34:48.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.810" endtime="20201110 08:34:48.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.808" endtime="20201110 08:34:48.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.805" endtime="20201110 08:34:48.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.281" endtime="20201110 08:34:48.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.192" endtime="20201110 08:34:48.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.191" endtime="20201110 08:34:48.831"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:34:48.833" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.841" endtime="20201110 08:34:50.942"></status>
</kw>
<msg timestamp="20201110 08:34:50.943" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8020568, 'start-iter': 1, 'wakeups': [8030609, 8040588, 8050598, 80605...</msg>
<status status="PASS" starttime="20201110 08:34:48.840" endtime="20201110 08:34:50.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.946" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8020568, 'start-iter': 1, 'wakeups': [8030609, 8040588, 8050598, 80605...</msg>
<status status="PASS" starttime="20201110 08:34:50.944" endtime="20201110 08:34:50.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.947" endtime="20201110 08:34:50.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.837" endtime="20201110 08:34:50.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.835" endtime="20201110 08:34:50.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:50.952" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'start-time': 8020568, 'start-iter': 1, 'wakeups': [8030609, 8040588, 8050598, 8060577, 8070587, 8080596, 8090576, 8100585, 8110595, 8120574, 8130584, 81405...</msg>
<status status="PASS" starttime="20201110 08:34:50.950" endtime="20201110 08:34:50.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.956" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:50.955" endtime="20201110 08:34:50.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.958" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:50.957" endtime="20201110 08:34:50.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.953" endtime="20201110 08:34:50.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.963" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:50.962" endtime="20201110 08:34:50.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.965" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:50.964" endtime="20201110 08:34:50.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.960" endtime="20201110 08:34:50.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.971" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:50.970" endtime="20201110 08:34:50.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.973" level="INFO">VALUE: 8020568</msg>
<status status="PASS" starttime="20201110 08:34:50.972" endtime="20201110 08:34:50.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.966" endtime="20201110 08:34:50.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.978" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:50.977" endtime="20201110 08:34:50.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.981" level="INFO">VALUE: [8030609, 8040588, 8050598, 8060577, 8070587, 8080596, 8090576, 8100585, 8110595, 8120574, 8130584, 8140594, 8150573, 8160583, 8170593, 8180572, 8190582, 8200592, 8210571, 8220581, 8230590, 8240570, 8250579, 8260589, 8270568, 8280578, 8290588, 8300598, 8310577, 8320587, 8330596, 8340576, 8350585, 8360595, 8370574, 8380584, 8390594, 8400573, 8410583, 8420593, 8430572, 8440582, 8450592, 8460571, 8470581, 8480590, 8490570, 8500579, 8510589, 8520568, 8530578, 8540588, 8550598, 8560577, 8570587, 8580596, 8590576, 8600585, 8610595, 8620574, 8630584, 8640594, 8650573, 8660583, 8670593, 8680572, 8690582, 8700592, 8710571, 8720581, 8730590, 8740570, 8750579, 8760589, 8770568, 8780578, 8790588, 8800598, 8810577, 8820587, 8830596, 8840576, 8850585, 8860595, 8870574, 8880584, 8890594, 8900573, 8910583, 8920593, 8930572, 8940582, 8950592, 8960571, 8970581, 8980590, 8990570, 9000579, 9010589, 9020568]</msg>
<status status="PASS" starttime="20201110 08:34:50.979" endtime="20201110 08:34:50.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.974" endtime="20201110 08:34:50.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.988" endtime="20201110 08:34:51.279"></status>
</kw>
<msg timestamp="20201110 08:34:51.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022876069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032910764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.986" endtime="20201110 08:34:51.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022876069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032910764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.283" endtime="20201110 08:34:51.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.290" endtime="20201110 08:34:51.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.984" endtime="20201110 08:34:51.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.982" endtime="20201110 08:34:51.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.316" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:51.293" endtime="20201110 08:34:51.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.321" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:51.320" endtime="20201110 08:34:51.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.323" level="INFO">VALUE: 0.022876069</msg>
<status status="PASS" starttime="20201110 08:34:51.322" endtime="20201110 08:34:51.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.317" endtime="20201110 08:34:51.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.329" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:51.328" endtime="20201110 08:34:51.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.331" level="INFO">VALUE: [0.032910764, 0.042889583, 0.052899042, 0.062877903, 0.072887403, 0.082896847, 0.092875819, 0.102885167, 0.112894681, 0.122873611, 0.132883042, 0.142892458, 0.1528715, 0.162880875, 0.172890319, 0.18286925, 0.192878694, 0.202888139, 0.212867042, 0.222876542, 0.232885986, 0.242864917, 0.252874389, 0.26288375, 0.272862708, 0.282872153, 0.292881597, 0.302891056, 0.31287, 0.322879472, 0.332888903, 0.342867847, 0.352877306, 0.362886736, 0.372865681, 0.382875083, 0.392884542, 0.402863528, 0.412872944, 0.422882361, 0.432861347, 0.442870764, 0.452880194, 0.462859167, 0.472868556, 0.482878028, 0.492856958, 0.502866444, 0.512875819, 0.52285475, 0.532864236, 0.542873722, 0.552883125, 0.562862097, 0.572871458, 0.582880931, 0.592859875, 0.602869403, 0.612878778, 0.622857722, 0.632867208, 0.642876569, 0.6528555, 0.662865, 0.672874431, 0.682853333, 0.692862806, 0.70287225, 0.712851181, 0.722860611, 0.732870097, 0.742849028, 0.752858458, 0.762867903, 0.772846819, 0.782856292, 0.792865681, 0.802875194, 0.812854125, 0.822863528, 0.832873056, 0.842851875, 0.852861306, 0.862870833, 0.872849764, 0.882859208, 0.892868667, 0.902847569, 0.912857111, 0.922866597, 0.932845431, 0.942854875, 0.952864347, 0.962843167, 0.972852694, 0.982862181, 0.992841083, 1.002850514, 1.012859944, 1.022838889] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:51.330" endtime="20201110 08:34:51.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.325" endtime="20201110 08:34:51.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.334" endtime="20201110 08:34:51.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.337" endtime="20201110 08:34:51.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.336" endtime="20201110 08:34:51.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.332" endtime="20201110 08:34:51.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.834" endtime="20201110 08:34:51.358"></status>
</kw>
<msg timestamp="20201110 08:34:51.359" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.367" endtime="20201110 08:34:53.481"></status>
</kw>
<msg timestamp="20201110 08:34:53.482" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10548004, 'start-iter': 1, 'wakeups': [10558044, 10568023, 10578033, 1...</msg>
<status status="PASS" starttime="20201110 08:34:51.365" endtime="20201110 08:34:53.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.488" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10548004, 'start-iter': 1, 'wakeups': [10558044, 10568023, 10578033, 1...</msg>
<status status="PASS" starttime="20201110 08:34:53.484" endtime="20201110 08:34:53.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.490" endtime="20201110 08:34:53.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.363" endtime="20201110 08:34:53.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.361" endtime="20201110 08:34:53.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:53.501" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'start-time': 10548004, 'start-iter': 1, 'wakeups': [10558044, 10568023, 10578033, 10588012, 10598022, 10608032, 10618011, 10628021, 10638031, 10648010, 106...</msg>
<status status="PASS" starttime="20201110 08:34:53.497" endtime="20201110 08:34:53.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.509" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:53.507" endtime="20201110 08:34:53.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.514" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:53.512" endtime="20201110 08:34:53.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.503" endtime="20201110 08:34:53.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.524" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:53.521" endtime="20201110 08:34:53.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.528" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:53.526" endtime="20201110 08:34:53.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.516" endtime="20201110 08:34:53.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.538" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:53.536" endtime="20201110 08:34:53.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.542" level="INFO">VALUE: 10548004</msg>
<status status="PASS" starttime="20201110 08:34:53.540" endtime="20201110 08:34:53.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.531" endtime="20201110 08:34:53.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.554" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:53.550" endtime="20201110 08:34:53.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.558" level="INFO">VALUE: [10558044, 10568023, 10578033, 10588012, 10598022, 10608032, 10618011, 10628021, 10638031, 10648010, 10658020, 10668029, 10678009, 10688018, 10698028, 10708007, 10718017, 10728027, 10738006, 10748016, 10758026, 10768005, 10778015, 10788024, 10798034, 10808013, 10818023, 10828033, 10838012, 10848022, 10858032, 10868011, 10878021, 10888031, 10898010, 10908020, 10918029, 10928009, 10938018, 10948028, 10958007, 10968017, 10978027, 10988006, 10998016, 11008026, 11018005, 11028015, 11038024, 11048034, 11058013, 11068023, 11078033, 11088012, 11098022, 11108032, 11118011, 11128021, 11138031, 11148010, 11158020, 11168029, 11178009, 11188018, 11198028, 11208007, 11218017, 11228027, 11238006, 11248016, 11258026, 11268005, 11278015, 11288024, 11298034, 11308013, 11318023, 11328033, 11338012, 11348022, 11358032, 11368011, 11378021, 11388031, 11398010, 11408020, 11418029, 11428009, 11438018, 11448028, 11458007, 11468017, 11478027, 11488006, 11498016, 11508026, 11518005, 11528015, 11538024, 11548034]</msg>
<status status="PASS" starttime="20201110 08:34:53.556" endtime="20201110 08:34:53.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.545" endtime="20201110 08:34:53.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.574" endtime="20201110 08:34:53.867"></status>
</kw>
<msg timestamp="20201110 08:34:53.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032404958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.571" endtime="20201110 08:34:53.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032404958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.871" endtime="20201110 08:34:53.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.878" endtime="20201110 08:34:53.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.566" endtime="20201110 08:34:53.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.562" endtime="20201110 08:34:53.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:53.904" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:53.881" endtime="20201110 08:34:53.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.909" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:53.908" endtime="20201110 08:34:53.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.911" level="INFO">VALUE: 0.022369097</msg>
<status status="PASS" starttime="20201110 08:34:53.910" endtime="20201110 08:34:53.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.905" endtime="20201110 08:34:53.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.917" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:53.916" endtime="20201110 08:34:53.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.919" level="INFO">VALUE: [0.032404958, 0.042383889, 0.052393111, 0.062372083, 0.072381542, 0.082391, 0.092369819, 0.102379347, 0.112388778, 0.122367625, 0.132377153, 0.142386625, 0.152365514, 0.162375, 0.172384417, 0.182363347, 0.192372764, 0.202382236, 0.212361153, 0.222370639, 0.232380042, 0.242359, 0.252368444, 0.262377903, 0.272387347, 0.282366222, 0.292375736, 0.302385097, 0.312364056, 0.322373597, 0.332382972, 0.342361958, 0.352371361, 0.362380792, 0.37235975, 0.382369194, 0.392378667, 0.402357556, 0.412367097, 0.422376514, 0.432355431, 0.442364833, 0.452374292, 0.462353222, 0.472362681, 0.482372083, 0.492351097, 0.502360528, 0.512369958, 0.522379389, 0.532358292, 0.542367778, 0.552377194, 0.562356139, 0.572365694, 0.582375042, 0.592353986, 0.602363417, 0.612372931, 0.622351792, 0.632361264, 0.642370611, 0.652349611, 0.662359083, 0.672368542, 0.682347431, 0.692356889, 0.702366319, 0.712345222, 0.722354694, 0.732364167, 0.742343014, 0.752352528, 0.762361972, 0.772371444, 0.782350375, 0.792359806, 0.802369264, 0.812348208, 0.822357639, 0.832367111, 0.842345986, 0.852355486, 0.862364889, 0.872343819, 0.88235325, 0.892362708, 0.902341653, 0.912351097, 0.922360528, 0.932339431, 0.942348931, 0.952358347, 0.962337264, 0.972346694, 0.982356222, 0.992335139, 1.002344542, 1.012354056, 1.0223635] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:53.918" endtime="20201110 08:34:53.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.913" endtime="20201110 08:34:53.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.923" endtime="20201110 08:34:53.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:53.927" endtime="20201110 08:34:53.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.925" endtime="20201110 08:34:53.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.921" endtime="20201110 08:34:53.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.359" endtime="20201110 08:34:53.948"></status>
</kw>
<msg timestamp="20201110 08:34:53.948" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.956" endtime="20201110 08:34:56.069"></status>
</kw>
<msg timestamp="20201110 08:34:56.070" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13135742, 'start-iter': 1, 'wakeups': [13145782, 13155761, 13165771, 1...</msg>
<status status="PASS" starttime="20201110 08:34:53.954" endtime="20201110 08:34:56.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.081" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13135742, 'start-iter': 1, 'wakeups': [13145782, 13155761, 13165771, 1...</msg>
<status status="PASS" starttime="20201110 08:34:56.077" endtime="20201110 08:34:56.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.083" endtime="20201110 08:34:56.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.952" endtime="20201110 08:34:56.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.950" endtime="20201110 08:34:56.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.094" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'start-time': 13135742, 'start-iter': 1, 'wakeups': [13145782, 13155761, 13165771, 13175750, 13185760, 13195770, 13205749, 13215759, 13225769, 13235748, 132...</msg>
<status status="PASS" starttime="20201110 08:34:56.090" endtime="20201110 08:34:56.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.103" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:56.101" endtime="20201110 08:34:56.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.107" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:56.105" endtime="20201110 08:34:56.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.096" endtime="20201110 08:34:56.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.117" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:56.115" endtime="20201110 08:34:56.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.121" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:56.119" endtime="20201110 08:34:56.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.110" endtime="20201110 08:34:56.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.131" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:56.129" endtime="20201110 08:34:56.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.135" level="INFO">VALUE: 13135742</msg>
<status status="PASS" starttime="20201110 08:34:56.133" endtime="20201110 08:34:56.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.124" endtime="20201110 08:34:56.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.145" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:56.143" endtime="20201110 08:34:56.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.150" level="INFO">VALUE: [13145782, 13155761, 13165771, 13175750, 13185760, 13195770, 13205749, 13215759, 13225769, 13235748, 13245758, 13255767, 13265747, 13275756, 13285766, 13295745, 13305755, 13315765, 13325744, 13335754, 13345764, 13355743, 13365753, 13375762, 13385772, 13395751, 13405761, 13415771, 13425750, 13435760, 13445770, 13455749, 13465759, 13475769, 13485748, 13495758, 13505767, 13515747, 13525756, 13535766, 13545745, 13555755, 13565765, 13575744, 13585754, 13595764, 13605743, 13615753, 13625762, 13635772, 13645751, 13655761, 13665771, 13675750, 13685760, 13695770, 13705749, 13715759, 13725769, 13735748, 13745758, 13755767, 13765747, 13775756, 13785766, 13795745, 13805755, 13815765, 13825744, 13835754, 13845764, 13855743, 13865753, 13875762, 13885772, 13895751, 13905761, 13915771, 13925750, 13935760, 13945770, 13955749, 13965759, 13975769, 13985748, 13995758, 14005767, 14015747, 14025756, 14035766, 14045745, 14055755, 14065765, 14075744, 14085754, 14095764, 14105743, 14115753, 14125762, 14135772]</msg>
<status status="PASS" starttime="20201110 08:34:56.147" endtime="20201110 08:34:56.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.138" endtime="20201110 08:34:56.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.167" endtime="20201110 08:34:56.460"></status>
</kw>
<msg timestamp="20201110 08:34:56.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030334125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.162" endtime="20201110 08:34:56.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030334125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.464" endtime="20201110 08:34:56.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.472" endtime="20201110 08:34:56.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.156" endtime="20201110 08:34:56.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.153" endtime="20201110 08:34:56.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.498" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:56.475" endtime="20201110 08:34:56.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.503" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:56.502" endtime="20201110 08:34:56.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.504" level="INFO">VALUE: 0.020300056</msg>
<status status="PASS" starttime="20201110 08:34:56.504" endtime="20201110 08:34:56.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.499" endtime="20201110 08:34:56.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.510" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:56.509" endtime="20201110 08:34:56.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.512" level="INFO">VALUE: [0.030334125, 0.040312903, 0.050322347, 0.060301347, 0.07031075, 0.080320208, 0.090299083, 0.100308528, 0.110317986, 0.120296903, 0.130306403, 0.140315861, 0.150294778, 0.160304208, 0.170313639, 0.180292583, 0.190302014, 0.200311444, 0.210290444, 0.220299847, 0.230309264, 0.240288236, 0.250297694, 0.260307111, 0.270316528, 0.280295514, 0.290304931, 0.300314403, 0.310293319, 0.320302736, 0.330312292, 0.340291125, 0.350300597, 0.360310042, 0.370288972, 0.380298417, 0.390307875, 0.400286806, 0.410296222, 0.420305667, 0.430284597, 0.440294056, 0.450303514, 0.460282444, 0.470291875, 0.480301347, 0.490280236, 0.500289708, 0.510299153, 0.520308625, 0.530287542, 0.540296958, 0.550306444, 0.560285375, 0.570294806, 0.580304208, 0.590283139, 0.600292569, 0.610302042, 0.620280972, 0.630290514, 0.640299875, 0.650278819, 0.66028825, 0.670297708, 0.680276653, 0.690286125, 0.7002955, 0.710274444, 0.720283903, 0.730293375, 0.74027225, 0.750281722, 0.760291208, 0.770300597, 0.780279583, 0.790288986, 0.800298417, 0.810277361, 0.820286778, 0.83029625, 0.840275167, 0.850284694, 0.860294139, 0.870273042, 0.8802825, 0.890291958, 0.900270819, 0.910280333, 0.920289722, 0.930268694, 0.940278139, 0.950287556, 0.960266472, 0.970275944, 0.980285375, 0.990264292, 1.000273708, 1.010283181, 1.020292681] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:56.511" endtime="20201110 08:34:56.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.506" endtime="20201110 08:34:56.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.515" endtime="20201110 08:34:56.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:56.518" endtime="20201110 08:34:56.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.517" endtime="20201110 08:34:56.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.513" endtime="20201110 08:34:56.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.948" endtime="20201110 08:34:56.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.832" endtime="20201110 08:34:56.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.831" endtime="20201110 08:34:56.539"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:34:56.542" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.551" endtime="20201110 08:34:58.666"></status>
</kw>
<msg timestamp="20201110 08:34:58.667" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15733520, 'start-iter': 1, 'wakeups': [15743591, 15753540, 15763580, 1...</msg>
<status status="PASS" starttime="20201110 08:34:56.548" endtime="20201110 08:34:58.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.673" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15733520, 'start-iter': 1, 'wakeups': [15743591, 15753540, 15763580, 1...</msg>
<status status="PASS" starttime="20201110 08:34:58.669" endtime="20201110 08:34:58.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.675" endtime="20201110 08:34:58.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.546" endtime="20201110 08:34:58.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.544" endtime="20201110 08:34:58.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.688" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'start-time': 15733520, 'start-iter': 1, 'wakeups': [15743591, 15753540, 15763580, 15773559, 15783569, 15793579, 15803558, 15813568, 15823577, 15833557, 158...</msg>
<status status="PASS" starttime="20201110 08:34:58.684" endtime="20201110 08:34:58.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.697" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:58.695" endtime="20201110 08:34:58.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.701" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:58.699" endtime="20201110 08:34:58.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.690" endtime="20201110 08:34:58.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.711" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:58.709" endtime="20201110 08:34:58.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.715" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:58.713" endtime="20201110 08:34:58.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.704" endtime="20201110 08:34:58.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.725" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:34:58.723" endtime="20201110 08:34:58.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.729" level="INFO">VALUE: 15733520</msg>
<status status="PASS" starttime="20201110 08:34:58.727" endtime="20201110 08:34:58.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.718" endtime="20201110 08:34:58.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.739" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:58.737" endtime="20201110 08:34:58.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.744" level="INFO">VALUE: [15743591, 15753540, 15763580, 15773559, 15783569, 15793579, 15803558, 15813568, 15823577, 15833557, 15843566, 15853576, 15863555, 15873565, 15883575, 15893554, 15903564, 15913574, 15923553, 15933563, 15943572, 15953552, 15963562, 15973571, 15983551, 15993560, 16003570, 16013580, 16023559, 16033569, 16043579, 16053558, 16063568, 16073577, 16083557, 16093566, 16103576, 16113555, 16123565, 16133575, 16143554, 16153564, 16163574, 16173553, 16183563, 16193572, 16203552, 16213562, 16223571, 16233551, 16243560, 16253570, 16263580, 16273559, 16283569, 16293579, 16303558, 16313568, 16323577, 16333557, 16343566, 16353576, 16363555, 16373565, 16383575, 16393554, 16403564, 16413574, 16423553, 16433563, 16443572, 16453552, 16463562, 16473571, 16483551, 16493560, 16503570, 16513580, 16523559, 16533569, 16543579, 16553558, 16563568, 16573577, 16583557, 16593566, 16603576, 16613555, 16623565, 16633575, 16643554, 16653564, 16663574, 16673553, 16683563, 16693572, 16703552, 16713562, 16723571, 16733551]</msg>
<status status="PASS" starttime="20201110 08:34:58.742" endtime="20201110 08:34:58.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.732" endtime="20201110 08:34:58.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.759" endtime="20201110 08:34:59.057"></status>
</kw>
<msg timestamp="20201110 08:34:59.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026225667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036275486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.756" endtime="20201110 08:34:59.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026225667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036275486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.061" endtime="20201110 08:34:59.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.068" endtime="20201110 08:34:59.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.751" endtime="20201110 08:34:59.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.747" endtime="20201110 08:34:59.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.095" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:59.072" endtime="20201110 08:34:59.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.100" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:34:59.099" endtime="20201110 08:34:59.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.102" level="INFO">VALUE: 0.026225667</msg>
<status status="PASS" starttime="20201110 08:34:59.101" endtime="20201110 08:34:59.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.096" endtime="20201110 08:34:59.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.107" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:59.106" endtime="20201110 08:34:59.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.109" level="INFO">VALUE: [0.036275486, 0.046238014, 0.056263806, 0.066242444, 0.076251875, 0.086261292, 0.096240153, 0.106249667, 0.116259111, 0.126237972, 0.136247417, 0.146256972, 0.156235889, 0.166245319, 0.176254792, 0.186233708, 0.196243125, 0.206252542, 0.216231583, 0.226240972, 0.236250403, 0.246229347, 0.256238792, 0.266248278, 0.276227431, 0.286236611, 0.296246056, 0.3062555, 0.316234444, 0.326243847, 0.336253306, 0.346232278, 0.356241764, 0.366251139, 0.376230083, 0.386239556, 0.396248986, 0.406227889, 0.416237292, 0.426246778, 0.43622575, 0.446235208, 0.456244694, 0.466223569, 0.476232986, 0.486242417, 0.496221375, 0.506230833, 0.516240278, 0.526219486, 0.536228611, 0.546238111, 0.556247514, 0.566226486, 0.576235958, 0.586245375, 0.596224264, 0.606233694, 0.616243181, 0.626222153, 0.636231569, 0.646241056, 0.656219944, 0.666229361, 0.676238819, 0.68621775, 0.696227208, 0.706236625, 0.716215542, 0.726225111, 0.7362345, 0.746213431, 0.756222806, 0.766232292, 0.776211583, 0.786220639, 0.796230042, 0.806239556, 0.816218472, 0.826227972, 0.836237389, 0.846216319, 0.856225764, 0.86623525, 0.876214181, 0.886223583, 0.896233014, 0.906212, 0.916221472, 0.926230833, 0.936209764, 0.946219208, 0.956228736, 0.966207597, 0.976217083, 0.986226528, 0.996205431, 1.006214917, 1.016224347, 1.026203556] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:59.108" endtime="20201110 08:34:59.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.103" endtime="20201110 08:34:59.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.113" endtime="20201110 08:34:59.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.116" endtime="20201110 08:34:59.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.114" endtime="20201110 08:34:59.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.111" endtime="20201110 08:34:59.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.543" endtime="20201110 08:34:59.137"></status>
</kw>
<msg timestamp="20201110 08:34:59.137" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.145" endtime="20201110 08:35:01.257"></status>
</kw>
<msg timestamp="20201110 08:35:01.258" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18326293, 'start-iter': 1, 'wakeups': [18336334, 18346343, 18356353, 1...</msg>
<status status="PASS" starttime="20201110 08:34:59.144" endtime="20201110 08:35:01.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.260" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18326293, 'start-iter': 1, 'wakeups': [18336334, 18346343, 18356353, 1...</msg>
<status status="PASS" starttime="20201110 08:35:01.259" endtime="20201110 08:35:01.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.262" endtime="20201110 08:35:01.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.141" endtime="20201110 08:35:01.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.139" endtime="20201110 08:35:01.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.267" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'start-time': 18326293, 'start-iter': 1, 'wakeups': [18336334, 18346343, 18356353, 18366333, 18376342, 18386352, 18396331, 18406341, 18416351, 18426330, 184...</msg>
<status status="PASS" starttime="20201110 08:35:01.265" endtime="20201110 08:35:01.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.272" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:01.270" endtime="20201110 08:35:01.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.274" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:01.273" endtime="20201110 08:35:01.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.268" endtime="20201110 08:35:01.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.280" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:01.279" endtime="20201110 08:35:01.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.282" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:01.281" endtime="20201110 08:35:01.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.276" endtime="20201110 08:35:01.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.287" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:01.286" endtime="20201110 08:35:01.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.289" level="INFO">VALUE: 18326293</msg>
<status status="PASS" starttime="20201110 08:35:01.288" endtime="20201110 08:35:01.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.283" endtime="20201110 08:35:01.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.294" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:01.293" endtime="20201110 08:35:01.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.296" level="INFO">VALUE: [18336334, 18346343, 18356353, 18366333, 18376342, 18386352, 18396331, 18406341, 18416351, 18426330, 18436340, 18446350, 18456329, 18466339, 18476348, 18486328, 18496337, 18506347, 18516326, 18526336, 18536346, 18546325, 18556335, 18566345, 18576324, 18586334, 18596343, 18606353, 18616333, 18626342, 18636352, 18646331, 18656341, 18666351, 18676330, 18686340, 18696350, 18706329, 18716339, 18726348, 18736328, 18746337, 18756347, 18766326, 18776336, 18786346, 18796325, 18806335, 18816345, 18826324, 18836334, 18846343, 18856353, 18866333, 18876342, 18886352, 18896331, 18906341, 18916351, 18926330, 18936340, 18946350, 18956329, 18966339, 18976348, 18986328, 18996337, 19006347, 19016326, 19026336, 19036346, 19046325, 19056335, 19066345, 19076324, 19086334, 19096343, 19106353, 19116333, 19126342, 19136352, 19146331, 19156341, 19166351, 19176330, 19186340, 19196350, 19206329, 19216339, 19226348, 19236328, 19246337, 19256347, 19266326, 19276336, 19286346, 19296325, 19306335, 19316345, 19326324]</msg>
<status status="PASS" starttime="20201110 08:35:01.295" endtime="20201110 08:35:01.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.290" endtime="20201110 08:35:01.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.303" endtime="20201110 08:35:01.598"></status>
</kw>
<msg timestamp="20201110 08:35:01.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021001333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031041333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.302" endtime="20201110 08:35:01.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021001333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031041333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.602" endtime="20201110 08:35:01.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.610" endtime="20201110 08:35:01.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.299" endtime="20201110 08:35:01.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.297" endtime="20201110 08:35:01.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.637" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:01.613" endtime="20201110 08:35:01.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.641" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:01.640" endtime="20201110 08:35:01.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.643" level="INFO">VALUE: 0.021001333</msg>
<status status="PASS" starttime="20201110 08:35:01.642" endtime="20201110 08:35:01.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.638" endtime="20201110 08:35:01.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.649" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:01.647" endtime="20201110 08:35:01.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.651" level="INFO">VALUE: [0.031041333, 0.041038764, 0.051048069, 0.061027083, 0.071036583, 0.081045986, 0.091024958, 0.101034403, 0.111043847, 0.12102275, 0.131032167, 0.141041681, 0.151020556, 0.161030042, 0.171039528, 0.181018403, 0.191027861, 0.201037292, 0.211016181, 0.221025653, 0.231035083, 0.241014028, 0.251023486, 0.261032986, 0.271011861, 0.281021278, 0.291030778, 0.301040194, 0.311019236, 0.321028583, 0.331038014, 0.341017, 0.351026458, 0.361035917, 0.371014764, 0.381024278, 0.391033694, 0.401012611, 0.411022069, 0.421031514, 0.431010389, 0.441019875, 0.451029319, 0.461008292, 0.471017694, 0.481027125, 0.491006111, 0.501015528, 0.511024931, 0.521003917, 0.531013333, 0.541022722, 0.551032236, 0.561011153, 0.571020625, 0.581030125, 0.591008986, 0.601018431, 0.611027861, 0.621006819, 0.631016222, 0.641025708, 0.651004611, 0.661014111, 0.671023569, 0.6810025, 0.691011903, 0.701021389, 0.711000319, 0.72100975, 0.731019167, 0.740998097, 0.751007597, 0.761017028, 0.770995931, 0.781005403, 0.791014861, 0.801024264, 0.811003236, 0.821012653, 0.831022153, 0.841001028, 0.851010528, 0.861019958, 0.870998847, 0.881008292, 0.891017722, 0.900996694, 0.911006153, 0.921015514, 0.9309945, 0.941003944, 0.951013472, 0.960992347, 0.97100175, 0.981011208, 0.990990167, 1.000999611, 1.011009, 1.020987931] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:01.650" endtime="20201110 08:35:01.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.644" endtime="20201110 08:35:01.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.654" endtime="20201110 08:35:01.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:01.658" endtime="20201110 08:35:01.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.656" endtime="20201110 08:35:01.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.652" endtime="20201110 08:35:01.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.138" endtime="20201110 08:35:01.678"></status>
</kw>
<msg timestamp="20201110 08:35:01.679" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.687" endtime="20201110 08:35:03.801"></status>
</kw>
<msg timestamp="20201110 08:35:03.802" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20868804, 'start-iter': 1, 'wakeups': [20878875, 20888824, 20898864, 2...</msg>
<status status="PASS" starttime="20201110 08:35:01.685" endtime="20201110 08:35:03.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.808" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20868804, 'start-iter': 1, 'wakeups': [20878875, 20888824, 20898864, 2...</msg>
<status status="PASS" starttime="20201110 08:35:03.804" endtime="20201110 08:35:03.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.810" endtime="20201110 08:35:03.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.682" endtime="20201110 08:35:03.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.681" endtime="20201110 08:35:03.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:03.821" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'start-time': 20868804, 'start-iter': 1, 'wakeups': [20878875, 20888824, 20898864, 20908843, 20918853, 20928863, 20938842, 20948852, 20958862, 20968841, 209...</msg>
<status status="PASS" starttime="20201110 08:35:03.817" endtime="20201110 08:35:03.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.829" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:03.827" endtime="20201110 08:35:03.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.834" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:03.832" endtime="20201110 08:35:03.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.823" endtime="20201110 08:35:03.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.844" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:03.842" endtime="20201110 08:35:03.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.848" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:03.846" endtime="20201110 08:35:03.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.837" endtime="20201110 08:35:03.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.855" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:03.854" endtime="20201110 08:35:03.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.857" level="INFO">VALUE: 20868804</msg>
<status status="PASS" starttime="20201110 08:35:03.857" endtime="20201110 08:35:03.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.850" endtime="20201110 08:35:03.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.862" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:03.861" endtime="20201110 08:35:03.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.864" level="INFO">VALUE: [20878875, 20888824, 20898864, 20908843, 20918853, 20928863, 20938842, 20948852, 20958862, 20968841, 20978851, 20988861, 20998840, 21008850, 21018859, 21028839, 21038848, 21048858, 21058837, 21068847, 21078857, 21088836, 21098846, 21108856, 21118835, 21128845, 21138854, 21148864, 21158843, 21168853, 21178863, 21188842, 21198852, 21208862, 21218841, 21228851, 21238861, 21248840, 21258850, 21268859, 21278839, 21288848, 21298858, 21308837, 21318847, 21328857, 21338836, 21348846, 21358856, 21368835, 21378845, 21388854, 21398864, 21408843, 21418853, 21428863, 21438842, 21448852, 21458862, 21468841, 21478851, 21488861, 21498840, 21508850, 21518859, 21528839, 21538848, 21548858, 21558837, 21568847, 21578857, 21588836, 21598846, 21608856, 21618835, 21628845, 21638854, 21648864, 21658843, 21668853, 21678863, 21688842, 21698852, 21708862, 21718841, 21728851, 21738861, 21748840, 21758850, 21768859, 21778839, 21788848, 21798858, 21808837, 21818847, 21828857, 21838836, 21848846, 21858856, 21868835]</msg>
<status status="PASS" starttime="20201110 08:35:03.863" endtime="20201110 08:35:03.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.859" endtime="20201110 08:35:03.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.872" endtime="20201110 08:35:04.163"></status>
</kw>
<msg timestamp="20201110 08:35:04.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021502486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031559083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.870" endtime="20201110 08:35:04.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021502486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031559083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.167" endtime="20201110 08:35:04.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.175" endtime="20201110 08:35:04.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.867" endtime="20201110 08:35:04.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.866" endtime="20201110 08:35:04.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.201" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:04.178" endtime="20201110 08:35:04.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.206" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:04.205" endtime="20201110 08:35:04.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.208" level="INFO">VALUE: 0.021502486</msg>
<status status="PASS" starttime="20201110 08:35:04.207" endtime="20201110 08:35:04.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.202" endtime="20201110 08:35:04.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.214" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:04.212" endtime="20201110 08:35:04.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.216" level="INFO">VALUE: [0.031559083, 0.041521611, 0.051547361, 0.061526042, 0.071535542, 0.081544931, 0.091523875, 0.101533333, 0.111542653, 0.121521667, 0.131531097, 0.141540556, 0.151519486, 0.161528958, 0.171538403, 0.181517292, 0.19152675, 0.201536181, 0.211515153, 0.221524611, 0.231534056, 0.241512944, 0.251522444, 0.261531847, 0.271510806, 0.281520194, 0.291529708, 0.301539125, 0.311518069, 0.321527472, 0.331536944, 0.341515917, 0.351525333, 0.36153475, 0.371513681, 0.381523153, 0.391532569, 0.401511528, 0.411521, 0.421530431, 0.431509389, 0.441518819, 0.451528264, 0.461507125, 0.471516611, 0.481526097, 0.491505028, 0.501514486, 0.511523903, 0.521502833, 0.531512208, 0.541521778, 0.551531139, 0.561510097, 0.571519514, 0.581528944, 0.591507931, 0.601517347, 0.611526819, 0.621505694, 0.631515208, 0.641524625, 0.651503597, 0.661513014, 0.671522486, 0.681501375, 0.691510833, 0.701520292, 0.711499181, 0.721508708, 0.731518125, 0.741497111, 0.751506486, 0.761515931, 0.771494889, 0.781504306, 0.791513764, 0.801523208, 0.811502153, 0.821511569, 0.831521, 0.8415, 0.851509417, 0.861518833, 0.871497833, 0.881507208, 0.891516681, 0.901495667, 0.911505042, 0.921514597, 0.931493403, 0.941502847, 0.951512333, 0.961491181, 0.971500722, 0.981510167, 0.991489083, 1.001498514, 1.011507986, 1.021486903] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:04.215" endtime="20201110 08:35:04.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.209" endtime="20201110 08:35:04.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.219" endtime="20201110 08:35:04.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.223" endtime="20201110 08:35:04.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.221" endtime="20201110 08:35:04.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.218" endtime="20201110 08:35:04.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.679" endtime="20201110 08:35:04.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.541" endtime="20201110 08:35:04.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.540" endtime="20201110 08:35:04.244"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:04.246" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.254" endtime="20201110 08:35:06.373"></status>
</kw>
<msg timestamp="20201110 08:35:06.374" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23436462, 'start-iter': 1, 'wakeups': [23446502, 23456512, 23466522, 2...</msg>
<status status="PASS" starttime="20201110 08:35:04.253" endtime="20201110 08:35:06.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.380" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23436462, 'start-iter': 1, 'wakeups': [23446502, 23456512, 23466522, 2...</msg>
<status status="PASS" starttime="20201110 08:35:06.376" endtime="20201110 08:35:06.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.382" endtime="20201110 08:35:06.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.250" endtime="20201110 08:35:06.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.248" endtime="20201110 08:35:06.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:06.393" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'start-time': 23436462, 'start-iter': 1, 'wakeups': [23446502, 23456512, 23466522, 23476501, 23486511, 23496520, 23506500, 23516510, 23526519, 23536499, 235...</msg>
<status status="PASS" starttime="20201110 08:35:06.389" endtime="20201110 08:35:06.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.401" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:06.399" endtime="20201110 08:35:06.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.406" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:06.404" endtime="20201110 08:35:06.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.395" endtime="20201110 08:35:06.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.416" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:06.414" endtime="20201110 08:35:06.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.420" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:06.418" endtime="20201110 08:35:06.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.409" endtime="20201110 08:35:06.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.430" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:06.428" endtime="20201110 08:35:06.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.434" level="INFO">VALUE: 23436462</msg>
<status status="PASS" starttime="20201110 08:35:06.432" endtime="20201110 08:35:06.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.423" endtime="20201110 08:35:06.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.444" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:06.442" endtime="20201110 08:35:06.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.450" level="INFO">VALUE: [23446502, 23456512, 23466522, 23476501, 23486511, 23496520, 23506500, 23516510, 23526519, 23536499, 23546508, 23556518, 23566497, 23576507, 23586517, 23596496, 23606506, 23616516, 23626495, 23636505, 23646514, 23656494, 23666503, 23676513, 23686492, 23696502, 23706512, 23716522, 23726501, 23736511, 23746520, 23756500, 23766510, 23776519, 23786499, 23796508, 23806518, 23816497, 23826507, 23836517, 23846496, 23856506, 23866516, 23876495, 23886505, 23896514, 23906494, 23916503, 23926513, 23936492, 23946502, 23956512, 23966522, 23976501, 23986511, 23996520, 24006500, 24016510, 24026519, 24036499, 24046508, 24056518, 24066497, 24076507, 24086517, 24096496, 24106506, 24116516, 24126495, 24136505, 24146514, 24156494, 24166503, 24176513, 24186492, 24196502, 24206512, 24216522, 24226501, 24236511, 24246520, 24256500, 24266510, 24276519, 24286499, 24296508, 24306518, 24316497, 24326507, 24336517, 24346496, 24356506, 24366516, 24376495, 24386505, 24396514, 24406494, 24416503, 24426513, 24436492]</msg>
<status status="PASS" starttime="20201110 08:35:06.446" endtime="20201110 08:35:06.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.437" endtime="20201110 08:35:06.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.467" endtime="20201110 08:35:06.765"></status>
</kw>
<msg timestamp="20201110 08:35:06.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023637569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033690833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.464" endtime="20201110 08:35:06.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023637569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033690833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.769" endtime="20201110 08:35:06.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.776" endtime="20201110 08:35:06.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.458" endtime="20201110 08:35:06.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.453" endtime="20201110 08:35:06.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:06.803" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:06.779" endtime="20201110 08:35:06.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.807" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:06.806" endtime="20201110 08:35:06.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.809" level="INFO">VALUE: 0.023637569</msg>
<status status="PASS" starttime="20201110 08:35:06.808" endtime="20201110 08:35:06.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.804" endtime="20201110 08:35:06.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.814" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:06.813" endtime="20201110 08:35:06.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.816" level="INFO">VALUE: [0.033690833, 0.043699986, 0.053709458, 0.063688347, 0.073697833, 0.083707236, 0.093686194, 0.103695653, 0.113705014, 0.123684042, 0.133693486, 0.143702903, 0.153681792, 0.163691222, 0.173700694, 0.183679708, 0.193689097, 0.203698611, 0.213677528, 0.223687014, 0.233696389, 0.243675306, 0.253684778, 0.263694431, 0.273673708, 0.283682625, 0.293692069, 0.303701514, 0.313680333, 0.323689861, 0.333699222, 0.343678264, 0.353687694, 0.363697083, 0.373676042, 0.383685458, 0.393694944, 0.403673861, 0.413683347, 0.423692819, 0.433671625, 0.443681125, 0.453690611, 0.463669556, 0.473678889, 0.483688292, 0.493667431, 0.503676778, 0.513686375, 0.523665764, 0.533674611, 0.543684069, 0.553693486, 0.563672431, 0.573681861, 0.583691333, 0.593670236, 0.603679708, 0.613689083, 0.623667972, 0.633677514, 0.643686958, 0.653665889, 0.663675347, 0.673684806, 0.683663736, 0.693673181, 0.703682625, 0.713661542, 0.723670875, 0.733680472, 0.743659333, 0.753668819, 0.763678458, 0.773657792, 0.783666597, 0.793676, 0.803685597, 0.813664431, 0.823673903, 0.833683403, 0.843662319, 0.853671736, 0.863681181, 0.873660167, 0.883669486, 0.893678944, 0.903657931, 0.913667472, 0.923676875, 0.933655764, 0.943665181, 0.953674625, 0.963653583, 0.973663014, 0.983672431, 0.993651389, 1.003660833, 1.013670667, 1.023649903] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:06.815" endtime="20201110 08:35:06.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.811" endtime="20201110 08:35:06.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.820" endtime="20201110 08:35:06.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:06.823" endtime="20201110 08:35:06.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.821" endtime="20201110 08:35:06.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.818" endtime="20201110 08:35:06.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.247" endtime="20201110 08:35:06.844"></status>
</kw>
<msg timestamp="20201110 08:35:06.844" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.853" endtime="20201110 08:35:08.965"></status>
</kw>
<msg timestamp="20201110 08:35:08.966" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26034240, 'start-iter': 1, 'wakeups': [26044281, 26054290, 26064300, 2...</msg>
<status status="PASS" starttime="20201110 08:35:06.852" endtime="20201110 08:35:08.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.972" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26034240, 'start-iter': 1, 'wakeups': [26044281, 26054290, 26064300, 2...</msg>
<status status="PASS" starttime="20201110 08:35:08.969" endtime="20201110 08:35:08.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.974" endtime="20201110 08:35:08.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.849" endtime="20201110 08:35:08.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.846" endtime="20201110 08:35:08.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:08.985" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'start-time': 26034240, 'start-iter': 1, 'wakeups': [26044281, 26054290, 26064300, 26074279, 26084289, 26094299, 26104278, 26114288, 26124298, 26134277, 261...</msg>
<status status="PASS" starttime="20201110 08:35:08.981" endtime="20201110 08:35:08.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.994" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:08.992" endtime="20201110 08:35:08.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.998" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:08.996" endtime="20201110 08:35:08.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.987" endtime="20201110 08:35:09.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.008" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:09.006" endtime="20201110 08:35:09.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.013" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:09.011" endtime="20201110 08:35:09.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.001" endtime="20201110 08:35:09.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.023" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:09.021" endtime="20201110 08:35:09.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.027" level="INFO">VALUE: 26034240</msg>
<status status="PASS" starttime="20201110 08:35:09.025" endtime="20201110 08:35:09.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.016" endtime="20201110 08:35:09.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.037" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:09.035" endtime="20201110 08:35:09.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.041" level="INFO">VALUE: [26044281, 26054290, 26064300, 26074279, 26084289, 26094299, 26104278, 26114288, 26124298, 26134277, 26144287, 26154296, 26164276, 26174285, 26184295, 26194274, 26204284, 26214294, 26224273, 26234283, 26244293, 26254272, 26264282, 26274291, 26284271, 26294281, 26304290, 26314300, 26324279, 26334289, 26344299, 26354278, 26364288, 26374298, 26384277, 26394287, 26404296, 26414276, 26424285, 26434295, 26444274, 26454284, 26464294, 26474273, 26484283, 26494293, 26504272, 26514282, 26524291, 26534271, 26544281, 26554290, 26564300, 26574279, 26584289, 26594299, 26604278, 26614288, 26624298, 26634277, 26644287, 26654296, 26664276, 26674285, 26684295, 26694274, 26704284, 26714294, 26724273, 26734283, 26744293, 26754272, 26764282, 26774291, 26784271, 26794281, 26804290, 26814300, 26824279, 26834289, 26844299, 26854278, 26864288, 26874298, 26884277, 26894287, 26904296, 26914276, 26924285, 26934295, 26944274, 26954284, 26964294, 26974273, 26984283, 26994293, 27004272, 27014282, 27024291, 27034271]</msg>
<status status="PASS" starttime="20201110 08:35:09.039" endtime="20201110 08:35:09.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.030" endtime="20201110 08:35:09.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.057" endtime="20201110 08:35:09.355"></status>
</kw>
<msg timestamp="20201110 08:35:09.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020857486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030916278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.054" endtime="20201110 08:35:09.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020857486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030916278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.359" endtime="20201110 08:35:09.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.367" endtime="20201110 08:35:09.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.049" endtime="20201110 08:35:09.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.045" endtime="20201110 08:35:09.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.393" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:09.370" endtime="20201110 08:35:09.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.397" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:09.396" endtime="20201110 08:35:09.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.400" level="INFO">VALUE: 0.020857486</msg>
<status status="PASS" starttime="20201110 08:35:09.399" endtime="20201110 08:35:09.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.394" endtime="20201110 08:35:09.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.405" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:09.404" endtime="20201110 08:35:09.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.407" level="INFO">VALUE: [0.030916278, 0.0409255, 0.050934944, 0.060913944, 0.070923333, 0.080932792, 0.090911694, 0.100921181, 0.110930597, 0.120909542, 0.130918972, 0.140928458, 0.150907361, 0.160916806, 0.170926292, 0.180905208, 0.190914653, 0.200924056, 0.210903069, 0.220912444, 0.230921917, 0.240900833, 0.250910264, 0.260920028, 0.270899264, 0.280908083, 0.290917528, 0.300926958, 0.310905944, 0.320915389, 0.330924861, 0.340903722, 0.350913181, 0.360922611, 0.370901597, 0.380910917, 0.390920417, 0.400899389, 0.410908861, 0.420918306, 0.430897264, 0.440906611, 0.450916111, 0.460895042, 0.470904514, 0.480913944, 0.490892792, 0.500902319, 0.510911917, 0.520891306, 0.530900167, 0.540909611, 0.550919056, 0.560898042, 0.570907417, 0.580916833, 0.590895806, 0.600905278, 0.610914694, 0.620893514, 0.630903083, 0.640912514, 0.650891458, 0.660900889, 0.670910333, 0.680889264, 0.690898736, 0.700908167, 0.710886986, 0.720896625, 0.730906028, 0.740884903, 0.750894319, 0.760904042, 0.770883403, 0.780892194, 0.790901542, 0.800911083, 0.81089, 0.820899472, 0.830908931, 0.840887847, 0.850897278, 0.860906722, 0.870885681, 0.880894986, 0.890904583, 0.900883514, 0.910893028, 0.920902444, 0.930881347, 0.940890778, 0.950900111, 0.960879167, 0.970888583, 0.980898042, 0.990876986, 1.000886361, 1.010895958, 1.020875444] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:09.406" endtime="20201110 08:35:09.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.401" endtime="20201110 08:35:09.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.410" endtime="20201110 08:35:09.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:09.413" endtime="20201110 08:35:09.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.412" endtime="20201110 08:35:09.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.408" endtime="20201110 08:35:09.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.845" endtime="20201110 08:35:09.434"></status>
</kw>
<msg timestamp="20201110 08:35:09.434" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.442" endtime="20201110 08:35:11.558"></status>
</kw>
<msg timestamp="20201110 08:35:11.560" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28626983, 'start-iter': 1, 'wakeups': [28637054, 28647033, 28657043, 2...</msg>
<status status="PASS" starttime="20201110 08:35:09.441" endtime="20201110 08:35:11.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.571" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28626983, 'start-iter': 1, 'wakeups': [28637054, 28647033, 28657043, 2...</msg>
<status status="PASS" starttime="20201110 08:35:11.567" endtime="20201110 08:35:11.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.573" endtime="20201110 08:35:11.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.438" endtime="20201110 08:35:11.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.436" endtime="20201110 08:35:11.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.584" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'start-time': 28626983, 'start-iter': 1, 'wakeups': [28637054, 28647033, 28657043, 28667022, 28677032, 28687042, 28697021, 28707031, 28717041, 28727020, 287...</msg>
<status status="PASS" starttime="20201110 08:35:11.580" endtime="20201110 08:35:11.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.595" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:11.591" endtime="20201110 08:35:11.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.599" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:11.597" endtime="20201110 08:35:11.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.586" endtime="20201110 08:35:11.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.610" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:11.608" endtime="20201110 08:35:11.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.614" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:11.612" endtime="20201110 08:35:11.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.602" endtime="20201110 08:35:11.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.624" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:11.622" endtime="20201110 08:35:11.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.628" level="INFO">VALUE: 28626983</msg>
<status status="PASS" starttime="20201110 08:35:11.626" endtime="20201110 08:35:11.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.617" endtime="20201110 08:35:11.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.638" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:11.636" endtime="20201110 08:35:11.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.643" level="INFO">VALUE: [28637054, 28647033, 28657043, 28667022, 28677032, 28687042, 28697021, 28707031, 28717041, 28727020, 28737030, 28747039, 28757019, 28767028, 28777038, 28787017, 28797027, 28807037, 28817016, 28827026, 28837036, 28847015, 28857025, 28867034, 28877014, 28887023, 28897033, 28907043, 28917022, 28927032, 28937042, 28947021, 28957031, 28967041, 28977020, 28987030, 28997039, 29007019, 29017028, 29027038, 29037017, 29047027, 29057037, 29067016, 29077026, 29087036, 29097015, 29107025, 29117034, 29127014, 29137023, 29147033, 29157043, 29167022, 29177032, 29187042, 29197021, 29207031, 29217041, 29227020, 29237030, 29247039, 29257019, 29267028, 29277038, 29287017, 29297027, 29307037, 29317016, 29327026, 29337036, 29347015, 29357025, 29367034, 29377014, 29387023, 29397033, 29407043, 29417022, 29427032, 29437042, 29447021, 29457031, 29467041, 29477020, 29487030, 29497039, 29507019, 29517028, 29527038, 29537017, 29547027, 29557037, 29567016, 29577026, 29587036, 29597015, 29607025, 29617034, 29627014]</msg>
<status status="PASS" starttime="20201110 08:35:11.640" endtime="20201110 08:35:11.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.631" endtime="20201110 08:35:11.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.658" endtime="20201110 08:35:11.955"></status>
</kw>
<msg timestamp="20201110 08:35:11.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03287325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:11.655" endtime="20201110 08:35:11.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03287325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:11.959" endtime="20201110 08:35:11.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.967" endtime="20201110 08:35:11.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.649" endtime="20201110 08:35:11.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.646" endtime="20201110 08:35:11.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.994" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:11.971" endtime="20201110 08:35:11.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.999" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:11.998" endtime="20201110 08:35:11.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.001" level="INFO">VALUE: 0.022804778</msg>
<status status="PASS" starttime="20201110 08:35:12.000" endtime="20201110 08:35:12.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.995" endtime="20201110 08:35:12.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.006" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:12.005" endtime="20201110 08:35:12.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.008" level="INFO">VALUE: [0.03287325, 0.042851958, 0.052861417, 0.062840347, 0.072849819, 0.08285925, 0.092838111, 0.102847569, 0.112857056, 0.122835972, 0.132845333, 0.142854903, 0.152833819, 0.162843222, 0.172852653, 0.182831708, 0.192841014, 0.202850444, 0.212829486, 0.222838944, 0.232848361, 0.242827361, 0.252836778, 0.262846389, 0.272825625, 0.282834556, 0.292844028, 0.302853431, 0.312832375, 0.322841833, 0.332851278, 0.342830208, 0.352839625, 0.362849125, 0.372827917, 0.382837458, 0.392846861, 0.402825806, 0.412835264, 0.42284475, 0.432823708, 0.442833153, 0.4528425, 0.462821514, 0.472830861, 0.482840389, 0.492819319, 0.502828806, 0.512838361, 0.522817833, 0.532826597, 0.542836056, 0.552845542, 0.562824444, 0.572833889, 0.582843361, 0.592822236, 0.60283175, 0.612841153, 0.622820097, 0.632829569, 0.642839028, 0.652817931, 0.662827361, 0.672836792, 0.68281575, 0.692825125, 0.702834667, 0.712813639, 0.722823, 0.7328325, 0.742811431, 0.752820847, 0.762830472, 0.772809819, 0.782818681, 0.792828097, 0.802837542, 0.812816514, 0.822825917, 0.832835375, 0.842814333, 0.852823792, 0.86283325, 0.872812153, 0.882821653, 0.892831083, 0.902809958, 0.912819444, 0.922829028, 0.932807792, 0.942817208, 0.952826611, 0.962805653, 0.972815069, 0.982824569, 0.992803444, 1.002812931, 1.012822569, 1.022801792] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:12.007" endtime="20201110 08:35:12.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.002" endtime="20201110 08:35:12.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.011" endtime="20201110 08:35:12.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:12.015" endtime="20201110 08:35:12.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.013" endtime="20201110 08:35:12.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.010" endtime="20201110 08:35:12.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.435" endtime="20201110 08:35:12.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.245" endtime="20201110 08:35:12.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.244" endtime="20201110 08:35:12.036"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:12.038" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.046" endtime="20201110 08:35:14.160"></status>
</kw>
<msg timestamp="20201110 08:35:14.162" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31229827, 'start-iter': 1, 'wakeups': [31239898, 31249877, 31259857, 3...</msg>
<status status="PASS" starttime="20201110 08:35:12.045" endtime="20201110 08:35:14.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.167" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31229827, 'start-iter': 1, 'wakeups': [31239898, 31249877, 31259857, 3...</msg>
<status status="PASS" starttime="20201110 08:35:14.164" endtime="20201110 08:35:14.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.169" endtime="20201110 08:35:14.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.042" endtime="20201110 08:35:14.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.040" endtime="20201110 08:35:14.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:14.181" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'start-time': 31229827, 'start-iter': 1, 'wakeups': [31239898, 31249877, 31259857, 31269866, 31279907, 31289886, 31299835, 31309875, 31319915, 31329864, 313...</msg>
<status status="PASS" starttime="20201110 08:35:14.177" endtime="20201110 08:35:14.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.189" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:14.187" endtime="20201110 08:35:14.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.194" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:14.192" endtime="20201110 08:35:14.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.183" endtime="20201110 08:35:14.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.204" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:14.202" endtime="20201110 08:35:14.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.208" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:14.206" endtime="20201110 08:35:14.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.197" endtime="20201110 08:35:14.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.220" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:14.218" endtime="20201110 08:35:14.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.224" level="INFO">VALUE: 31229827</msg>
<status status="PASS" starttime="20201110 08:35:14.222" endtime="20201110 08:35:14.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.211" endtime="20201110 08:35:14.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.232" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:14.231" endtime="20201110 08:35:14.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.234" level="INFO">VALUE: [31239898, 31249877, 31259857, 31269866, 31279907, 31289886, 31299835, 31309875, 31319915, 31329864, 31339843, 31349884, 31359893, 31369873, 31379852, 31389862, 31399902, 31409881, 31419830, 31429870, 31439910, 31449859, 31459838, 31469879, 31479888, 31489868, 31499847, 31509887, 31519897, 31529876, 31539855, 31549865, 31559906, 31569885, 31579833, 31589874, 31599914, 31609863, 31619842, 31629882, 31639892, 31649871, 31659851, 31669860, 31679901, 31689880, 31699829, 31709869, 31719909, 31729858, 31739837, 31749877, 31759918, 31769866, 31779846, 31789886, 31799896, 31809875, 31819854, 31829864, 31839904, 31849884, 31859832, 31869873, 31879913, 31889862, 31899841, 31909881, 31919891, 31929870, 31939849, 31949859, 31959899, 31969879, 31979827, 31989868, 31999908, 32009887, 32019836, 32029876, 32039916, 32049865, 32059844, 32069885, 32079895, 32089874, 32099853, 32109863, 32119903, 32129882, 32139831, 32149871, 32159912, 32169860, 32179840, 32189880, 32199890, 32209869, 32219848, 32229858]</msg>
<status status="PASS" starttime="20201110 08:35:14.233" endtime="20201110 08:35:14.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.227" endtime="20201110 08:35:14.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.242" endtime="20201110 08:35:14.532"></status>
</kw>
<msg timestamp="20201110 08:35:14.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024121514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034208167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.240" endtime="20201110 08:35:14.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024121514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034208167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.536" endtime="20201110 08:35:14.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.544" endtime="20201110 08:35:14.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.237" endtime="20201110 08:35:14.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.236" endtime="20201110 08:35:14.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:14.570" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:14.547" endtime="20201110 08:35:14.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.574" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:14.573" endtime="20201110 08:35:14.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.577" level="INFO">VALUE: 0.024121514</msg>
<status status="PASS" starttime="20201110 08:35:14.576" endtime="20201110 08:35:14.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.571" endtime="20201110 08:35:14.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.582" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:14.581" endtime="20201110 08:35:14.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.585" level="INFO">VALUE: [0.034208167, 0.044181708, 0.054173569, 0.064187569, 0.074214861, 0.084188819, 0.094150319, 0.104194847, 0.114222264, 0.124165694, 0.134157597, 0.144202, 0.154198903, 0.164172903, 0.174164847, 0.184178736, 0.194206264, 0.204180111, 0.214141597, 0.224186111, 0.234213569, 0.244156931, 0.254148903, 0.264193389, 0.274190292, 0.284164278, 0.294156153, 0.304200708, 0.314197583, 0.324171556, 0.334163444, 0.344177472, 0.354204806, 0.364178819, 0.374140167, 0.384184681, 0.394212139, 0.404155583, 0.414147472, 0.424191972, 0.434188944, 0.444162792, 0.454154736, 0.464168722, 0.474196181, 0.484170111, 0.494131486, 0.504175986, 0.514203417, 0.524146889, 0.53413875, 0.54418325, 0.554210639, 0.564154125, 0.574146028, 0.584190556, 0.594187375, 0.604161389, 0.614153278, 0.624167194, 0.634194806, 0.644168653, 0.65413, 0.664174556, 0.674201889, 0.684145431, 0.694137292, 0.704181847, 0.714178778, 0.724152569, 0.7341445, 0.744158611, 0.754186056, 0.764159833, 0.774121278, 0.784165889, 0.794193292, 0.804167181, 0.814128611, 0.824173139, 0.834200583, 0.844144014, 0.854135903, 0.864180472, 0.874177319, 0.88415125, 0.894143097, 0.904157167, 0.914184556, 0.924158472, 0.934119944, 0.944164458, 0.954191903, 0.964135319, 0.974127167, 0.98417175, 0.994168625, 1.004142583, 1.014134458, 1.024148486] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:14.584" endtime="20201110 08:35:14.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.578" endtime="20201110 08:35:14.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.588" endtime="20201110 08:35:14.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:14.591" endtime="20201110 08:35:14.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.589" endtime="20201110 08:35:14.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.586" endtime="20201110 08:35:14.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.039" endtime="20201110 08:35:14.612"></status>
</kw>
<msg timestamp="20201110 08:35:14.612" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.620" endtime="20201110 08:35:16.732"></status>
</kw>
<msg timestamp="20201110 08:35:16.733" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33802459, 'start-iter': 1, 'wakeups': [33812561, 33822509, 33832489, 3...</msg>
<status status="PASS" starttime="20201110 08:35:14.618" endtime="20201110 08:35:16.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.739" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33802459, 'start-iter': 1, 'wakeups': [33812561, 33822509, 33832489, 3...</msg>
<status status="PASS" starttime="20201110 08:35:16.735" endtime="20201110 08:35:16.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.741" endtime="20201110 08:35:16.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.616" endtime="20201110 08:35:16.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.614" endtime="20201110 08:35:16.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:16.752" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'start-time': 33802459, 'start-iter': 1, 'wakeups': [33812561, 33822509, 33832489, 33842498, 33852539, 33862518, 33872467, 33882507, 33892547, 33902496, 339...</msg>
<status status="PASS" starttime="20201110 08:35:16.748" endtime="20201110 08:35:16.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.761" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:16.759" endtime="20201110 08:35:16.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.770" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:16.767" endtime="20201110 08:35:16.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.754" endtime="20201110 08:35:16.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.780" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:16.778" endtime="20201110 08:35:16.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.784" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:16.782" endtime="20201110 08:35:16.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.773" endtime="20201110 08:35:16.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.794" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:16.792" endtime="20201110 08:35:16.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.798" level="INFO">VALUE: 33802459</msg>
<status status="PASS" starttime="20201110 08:35:16.796" endtime="20201110 08:35:16.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.787" endtime="20201110 08:35:16.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.808" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:16.806" endtime="20201110 08:35:16.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.810" level="INFO">VALUE: [33812561, 33822509, 33832489, 33842498, 33852539, 33862518, 33872467, 33882507, 33892547, 33902496, 33912475, 33922515, 33932525, 33942504, 33952484, 33962493, 33972534, 33982513, 33992462, 34002502, 34012542, 34022491, 34032470, 34042510, 34052520, 34062500, 34072479, 34082519, 34092529, 34102508, 34112487, 34122497, 34132537, 34142517, 34152465, 34162506, 34172546, 34182495, 34192474, 34202514, 34212524, 34222503, 34232482, 34242492, 34252532, 34262512, 34272460, 34282501, 34292541, 34302459, 34312530, 34322509, 34332489, 34342498, 34352539, 34362518, 34372467, 34382507, 34392547, 34402496, 34412475, 34422515, 34432525, 34442504, 34452484, 34462493, 34472534, 34482513, 34492462, 34502502, 34512542, 34522491, 34532470, 34542510, 34552520, 34562500, 34572479, 34582519, 34592529, 34602508, 34612487, 34622497, 34632537, 34642517, 34652465, 34662506, 34672546, 34682495, 34692474, 34702514, 34712524, 34722503, 34732482, 34742492, 34752532, 34762512, 34772460, 34782501, 34792541, 34802459]</msg>
<status status="PASS" starttime="20201110 08:35:16.809" endtime="20201110 08:35:16.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.801" endtime="20201110 08:35:16.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.817" endtime="20201110 08:35:17.109"></status>
</kw>
<msg timestamp="20201110 08:35:17.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019974958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030063792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.816" endtime="20201110 08:35:17.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019974958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030063792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.113" endtime="20201110 08:35:17.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.120" endtime="20201110 08:35:17.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.813" endtime="20201110 08:35:17.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.812" endtime="20201110 08:35:17.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.147" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:17.124" endtime="20201110 08:35:17.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.151" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:17.150" endtime="20201110 08:35:17.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.153" level="INFO">VALUE: 0.019974958</msg>
<status status="PASS" starttime="20201110 08:35:17.152" endtime="20201110 08:35:17.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.148" endtime="20201110 08:35:17.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.159" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:17.158" endtime="20201110 08:35:17.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.161" level="INFO">VALUE: [0.030063792, 0.040006806, 0.04999875, 0.06001275, 0.070040139, 0.080014083, 0.0899755, 0.100020014, 0.110047306, 0.119990833, 0.129982694, 0.140027181, 0.150024194, 0.159998125, 0.16999, 0.180004083, 0.190031431, 0.200005403, 0.209966736, 0.220011333, 0.230038778, 0.239982153, 0.249974042, 0.260018806, 0.270016139, 0.279989444, 0.289981347, 0.300025917, 0.31002275, 0.319996694, 0.329988514, 0.340002611, 0.350030056, 0.360003944, 0.369965306, 0.380009917, 0.390037319, 0.399980681, 0.409972667, 0.420017194, 0.430014139, 0.439988, 0.449979903, 0.459993917, 0.470021403, 0.47999525, 0.489956667, 0.500001153, 0.510028764, 0.519954653, 0.53001675, 0.539990944, 0.549982833, 0.559996819, 0.570024361, 0.579998236, 0.589959569, 0.600004069, 0.610031528, 0.619974917, 0.629966875, 0.640011389, 0.650008292, 0.659982208, 0.669974139, 0.679988167, 0.690015528, 0.699989514, 0.709950944, 0.719995403, 0.730022847, 0.73996625, 0.749958111, 0.760002944, 0.770000222, 0.779973472, 0.789965444, 0.800009972, 0.810006861, 0.819980806, 0.829972667, 0.839986764, 0.850014139, 0.859988097, 0.8699495, 0.879994014, 0.890021403, 0.899964778, 0.909956722, 0.920001361, 0.929998139, 0.939972028, 0.949963986, 0.959978, 0.970005403, 0.979979361, 0.98994075, 0.999985333, 1.010012917, 1.019938806] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:17.160" endtime="20201110 08:35:17.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.155" endtime="20201110 08:35:17.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.164" endtime="20201110 08:35:17.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:17.169" endtime="20201110 08:35:17.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.166" endtime="20201110 08:35:17.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.163" endtime="20201110 08:35:17.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.613" endtime="20201110 08:35:17.189"></status>
</kw>
<msg timestamp="20201110 08:35:17.190" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.197" endtime="20201110 08:35:19.310"></status>
</kw>
<msg timestamp="20201110 08:35:19.312" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36380157, 'start-iter': 1, 'wakeups': [36390258, 36400207, 36410186, 3...</msg>
<status status="PASS" starttime="20201110 08:35:17.196" endtime="20201110 08:35:19.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.317" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36380157, 'start-iter': 1, 'wakeups': [36390258, 36400207, 36410186, 3...</msg>
<status status="PASS" starttime="20201110 08:35:19.314" endtime="20201110 08:35:19.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.320" endtime="20201110 08:35:19.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.193" endtime="20201110 08:35:19.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.191" endtime="20201110 08:35:19.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:19.330" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'start-time': 36380157, 'start-iter': 1, 'wakeups': [36390258, 36400207, 36410186, 36420196, 36430236, 36440216, 36450164, 36460205, 36470245, 36480194, 364...</msg>
<status status="PASS" starttime="20201110 08:35:19.326" endtime="20201110 08:35:19.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.339" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:19.337" endtime="20201110 08:35:19.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.343" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:19.341" endtime="20201110 08:35:19.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.332" endtime="20201110 08:35:19.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.355" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:19.352" endtime="20201110 08:35:19.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.360" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:19.358" endtime="20201110 08:35:19.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.346" endtime="20201110 08:35:19.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.371" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:19.369" endtime="20201110 08:35:19.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.375" level="INFO">VALUE: 36380157</msg>
<status status="PASS" starttime="20201110 08:35:19.373" endtime="20201110 08:35:19.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.364" endtime="20201110 08:35:19.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.385" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:19.383" endtime="20201110 08:35:19.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.390" level="INFO">VALUE: [36390258, 36400207, 36410186, 36420196, 36430236, 36440216, 36450164, 36460205, 36470245, 36480194, 36490173, 36500213, 36510223, 36520202, 36530181, 36540191, 36550231, 36560211, 36570159, 36580200, 36590240, 36600189, 36610168, 36620208, 36630218, 36640197, 36650177, 36660217, 36670227, 36680206, 36690185, 36700195, 36710235, 36720214, 36730163, 36740203, 36750244, 36760192, 36770172, 36780212, 36790222, 36800201, 36810180, 36820190, 36830230, 36840209, 36850158, 36860198, 36870239, 36880157, 36890228, 36900207, 36910186, 36920196, 36930236, 36940216, 36950164, 36960205, 36970245, 36980194, 36990173, 37000213, 37010223, 37020202, 37030181, 37040191, 37050231, 37060211, 37070159, 37080200, 37090240, 37100189, 37110168, 37120208, 37130218, 37140197, 37150177, 37160217, 37170227, 37180206, 37190185, 37200195, 37210235, 37220214, 37230163, 37240203, 37250244, 37260192, 37270172, 37280212, 37290222, 37300201, 37310180, 37320190, 37330230, 37340209, 37350158, 37360198, 37370239, 37380157]</msg>
<status status="PASS" starttime="20201110 08:35:19.387" endtime="20201110 08:35:19.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.378" endtime="20201110 08:35:19.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.405" endtime="20201110 08:35:19.700"></status>
</kw>
<msg timestamp="20201110 08:35:19.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029703347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.402" endtime="20201110 08:35:19.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029703347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.704" endtime="20201110 08:35:19.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.711" endtime="20201110 08:35:19.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.396" endtime="20201110 08:35:19.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.393" endtime="20201110 08:35:19.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:19.737" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:19.715" endtime="20201110 08:35:19.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.742" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:19.741" endtime="20201110 08:35:19.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.744" level="INFO">VALUE: 0.019608917</msg>
<status status="PASS" starttime="20201110 08:35:19.743" endtime="20201110 08:35:19.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.738" endtime="20201110 08:35:19.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.749" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:19.748" endtime="20201110 08:35:19.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.751" level="INFO">VALUE: [0.029703347, 0.039646319, 0.049638167, 0.059652208, 0.069679639, 0.079653583, 0.089615014, 0.099659556, 0.109686917, 0.119630361, 0.129622194, 0.139666722, 0.149663653, 0.159637583, 0.169629486, 0.179643542, 0.189670931, 0.199644917, 0.209606264, 0.219650778, 0.229678208, 0.239621583, 0.249613542, 0.259658306, 0.269655556, 0.279628861, 0.289620833, 0.299665306, 0.309662264, 0.319636153, 0.329627972, 0.339642139, 0.349669528, 0.359643389, 0.369604833, 0.379649361, 0.389676792, 0.399620208, 0.409612083, 0.41965675, 0.429653514, 0.439627514, 0.449619375, 0.459633347, 0.469660806, 0.47963475, 0.489596125, 0.499640528, 0.509668236, 0.519594125, 0.529656208, 0.539630347, 0.54962225, 0.559636319, 0.569663722, 0.579637639, 0.589599069, 0.599643597, 0.609671, 0.619614389, 0.629606264, 0.639650903, 0.649647736, 0.659621653, 0.669613542, 0.679627569, 0.689655, 0.699628903, 0.709590333, 0.719634861, 0.729662222, 0.739605653, 0.749597528, 0.759642333, 0.769639569, 0.779612889, 0.789604833, 0.799649389, 0.809646264, 0.819620181, 0.829612069, 0.839626139, 0.849653514, 0.859627486, 0.869588958, 0.879633486, 0.889660806, 0.899604236, 0.909596194, 0.919640736, 0.929637597, 0.939611514, 0.949603403, 0.959617431, 0.969644847, 0.979618792, 0.989580083, 0.999624722, 1.009652347, 1.019578167] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:19.750" endtime="20201110 08:35:19.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.745" endtime="20201110 08:35:19.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.755" endtime="20201110 08:35:19.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:19.758" endtime="20201110 08:35:19.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.757" endtime="20201110 08:35:19.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.753" endtime="20201110 08:35:19.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.190" endtime="20201110 08:35:19.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.037" endtime="20201110 08:35:19.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.036" endtime="20201110 08:35:19.779"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:19.782" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.791" endtime="20201110 08:35:21.902"></status>
</kw>
<msg timestamp="20201110 08:35:21.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38972930, 'start-iter': 1, 'wakeups': [38983032, 38993011, 39002990, 3...</msg>
<status status="PASS" starttime="20201110 08:35:19.789" endtime="20201110 08:35:21.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.909" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38972930, 'start-iter': 1, 'wakeups': [38983032, 38993011, 39002990, 3...</msg>
<status status="PASS" starttime="20201110 08:35:21.906" endtime="20201110 08:35:21.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.912" endtime="20201110 08:35:21.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.786" endtime="20201110 08:35:21.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.784" endtime="20201110 08:35:21.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:21.923" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'start-time': 38972930, 'start-iter': 1, 'wakeups': [38983032, 38993011, 39002990, 39013031, 39023010, 39033020, 39042968, 39052947, 39063049, 39072998, 390...</msg>
<status status="PASS" starttime="20201110 08:35:21.919" endtime="20201110 08:35:21.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.931" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:21.929" endtime="20201110 08:35:21.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.935" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:21.933" endtime="20201110 08:35:21.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.924" endtime="20201110 08:35:21.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.945" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:21.943" endtime="20201110 08:35:21.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.950" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:21.948" endtime="20201110 08:35:21.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.938" endtime="20201110 08:35:21.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.959" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:21.957" endtime="20201110 08:35:21.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.964" level="INFO">VALUE: 38972930</msg>
<status status="PASS" starttime="20201110 08:35:21.962" endtime="20201110 08:35:21.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.952" endtime="20201110 08:35:21.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.974" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:21.972" endtime="20201110 08:35:21.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.983" level="INFO">VALUE: [38983032, 38993011, 39002990, 39013031, 39023010, 39033020, 39042968, 39052947, 39063049, 39072998, 39083007, 39092987, 39102935, 39113037, 39123016, 39132995, 39142974, 39152954, 39163024, 39173004, 39183013, 39192962, 39202941, 39213043, 39222991, 39233001, 39242980, 39252960, 39263031, 39273010, 39283020, 39292968, 39302947, 39313049, 39322998, 39332977, 39343048, 39352996, 39363006, 39372985, 39382934, 39393035, 39403015, 39412994, 39422973, 39432952, 39443023, 39453002, 39463012, 39472961, 39482940, 39493041, 39503021, 39513000, 39522979, 39532958, 39543029, 39553009, 39563018, 39572967, 39582946, 39593048, 39602996, 39613006, 39622985, 39632934, 39643035, 39653015, 39662994, 39672973, 39682952, 39693023, 39703002, 39713012, 39722961, 39732940, 39743041, 39753021, 39762969, 39773040, 39783020, 39792999, 39802978, 39812957, 39823028, 39833007, 39843017, 39852966, 39862945, 39873046, 39882995, 39893005, 39902984, 39912933, 39923034, 39933013, 39942962, 39953033, 39963012, 39972991]</msg>
<status status="PASS" starttime="20201110 08:35:21.976" endtime="20201110 08:35:21.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.967" endtime="20201110 08:35:21.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.998" endtime="20201110 08:35:22.291"></status>
</kw>
<msg timestamp="20201110 08:35:22.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032537, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:21.995" endtime="20201110 08:35:22.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032537, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:22.295" endtime="20201110 08:35:22.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.303" endtime="20201110 08:35:22.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.990" endtime="20201110 08:35:22.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.986" endtime="20201110 08:35:22.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:22.330" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:22.306" endtime="20201110 08:35:22.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.335" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:22.334" endtime="20201110 08:35:22.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.337" level="INFO">VALUE: 0.022439389</msg>
<status status="PASS" starttime="20201110 08:35:22.336" endtime="20201110 08:35:22.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.331" endtime="20201110 08:35:22.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.342" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:22.341" endtime="20201110 08:35:22.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.344" level="INFO">VALUE: [0.032537, 0.042526097, 0.052517014, 0.062533264, 0.072523875, 0.082514931, 0.092475625, 0.102466903, 0.112549833, 0.122510181, 0.132501181, 0.142492278, 0.152453111, 0.162536014, 0.172526903, 0.182487444, 0.192478625, 0.202469833, 0.212522278, 0.222513056, 0.232504083, 0.24246475, 0.252456056, 0.262538958, 0.272499222, 0.282490278, 0.292481514, 0.302472778, 0.312525153, 0.322515986, 0.332507042, 0.342467667, 0.352458875, 0.362541764, 0.372502153, 0.382493097, 0.392539958, 0.402499903, 0.412491042, 0.422482347, 0.432442986, 0.442525944, 0.452516778, 0.462477194, 0.472468417, 0.482459722, 0.492512097, 0.502502917, 0.512493931, 0.522454694, 0.532445903, 0.542528708, 0.552519694, 0.562480153, 0.572471403, 0.582462667, 0.592515083, 0.602505847, 0.612496903, 0.622457583, 0.632448819, 0.642531736, 0.652492028, 0.662483028, 0.67247425, 0.682435069, 0.692517972, 0.702508792, 0.712469292, 0.722460542, 0.732451722, 0.742504042, 0.752494972, 0.762485986, 0.772446681, 0.782437861, 0.792520903, 0.802511722, 0.812472194, 0.822518875, 0.832509528, 0.842470042, 0.852461264, 0.862452458, 0.872504792, 0.882495736, 0.892486639, 0.902447444, 0.912438667, 0.922521639, 0.932481958, 0.942472958, 0.952464042, 0.962424889, 0.972507806, 0.982498514, 0.992459056, 1.002505806, 1.012496431, 1.022456986] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:22.343" endtime="20201110 08:35:22.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.338" endtime="20201110 08:35:22.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.347" endtime="20201110 08:35:22.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:22.351" endtime="20201110 08:35:22.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.349" endtime="20201110 08:35:22.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.345" endtime="20201110 08:35:22.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.783" endtime="20201110 08:35:22.372"></status>
</kw>
<msg timestamp="20201110 08:35:22.372" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.380" endtime="20201110 08:35:24.494"></status>
</kw>
<msg timestamp="20201110 08:35:24.495" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41565673, 'start-iter': 1, 'wakeups': [41575805, 41585754, 41595764, 4...</msg>
<status status="PASS" starttime="20201110 08:35:22.379" endtime="20201110 08:35:24.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.501" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41565673, 'start-iter': 1, 'wakeups': [41575805, 41585754, 41595764, 4...</msg>
<status status="PASS" starttime="20201110 08:35:24.498" endtime="20201110 08:35:24.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.504" endtime="20201110 08:35:24.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.376" endtime="20201110 08:35:24.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.374" endtime="20201110 08:35:24.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.516" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'start-time': 41565673, 'start-iter': 1, 'wakeups': [41575805, 41585754, 41595764, 41605712, 41615692, 41625793, 41635742, 41645751, 41655731, 41665679, 416...</msg>
<status status="PASS" starttime="20201110 08:35:24.510" endtime="20201110 08:35:24.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.525" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:24.523" endtime="20201110 08:35:24.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.529" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:24.527" endtime="20201110 08:35:24.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.518" endtime="20201110 08:35:24.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.539" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:24.537" endtime="20201110 08:35:24.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.543" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:24.541" endtime="20201110 08:35:24.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.532" endtime="20201110 08:35:24.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.553" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:24.551" endtime="20201110 08:35:24.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.557" level="INFO">VALUE: 41565673</msg>
<status status="PASS" starttime="20201110 08:35:24.556" endtime="20201110 08:35:24.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.546" endtime="20201110 08:35:24.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.568" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:24.566" endtime="20201110 08:35:24.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.570" level="INFO">VALUE: [41575805, 41585754, 41595764, 41605712, 41615692, 41625793, 41635742, 41645751, 41655731, 41665679, 41675781, 41685760, 41695739, 41705718, 41715698, 41725769, 41735748, 41745758, 41755706, 41765686, 41775787, 41785736, 41795745, 41805725, 41815673, 41825775, 41835754, 41845764, 41855712, 41865692, 41875793, 41885742, 41895751, 41905731, 41915679, 41925781, 41935760, 41945739, 41955718, 41965698, 41975769, 41985748, 41995758, 42005706, 42015686, 42025787, 42035736, 42045745, 42055725, 42065673, 42075775, 42085754, 42095764, 42105712, 42115692, 42125793, 42135742, 42145751, 42155731, 42165679, 42175781, 42185760, 42195739, 42205718, 42215698, 42225769, 42235748, 42245758, 42255706, 42265686, 42275787, 42285736, 42295745, 42305725, 42315673, 42325775, 42335754, 42345733, 42355773, 42365753, 42375762, 42385711, 42395690, 42405792, 42415740, 42425750, 42435729, 42445678, 42455780, 42465759, 42475738, 42485717, 42495697, 42505767, 42515747, 42525756, 42535705, 42545684, 42555786, 42565734]</msg>
<status status="PASS" starttime="20201110 08:35:24.569" endtime="20201110 08:35:24.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.561" endtime="20201110 08:35:24.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.578" endtime="20201110 08:35:24.870"></status>
</kw>
<msg timestamp="20201110 08:35:24.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022490194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032600903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.576" endtime="20201110 08:35:24.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022490194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032600903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.874" endtime="20201110 08:35:24.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.882" endtime="20201110 08:35:24.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.574" endtime="20201110 08:35:24.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.571" endtime="20201110 08:35:24.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.909" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:24.885" endtime="20201110 08:35:24.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.914" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:24.913" endtime="20201110 08:35:24.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.916" level="INFO">VALUE: 0.022490194</msg>
<status status="PASS" starttime="20201110 08:35:24.915" endtime="20201110 08:35:24.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.910" endtime="20201110 08:35:24.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.921" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:24.920" endtime="20201110 08:35:24.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.923" level="INFO">VALUE: [0.032600903, 0.042560347, 0.052551361, 0.062512167, 0.072503306, 0.082586278, 0.092546472, 0.102537583, 0.112528847, 0.122489583, 0.132572486, 0.142563347, 0.152523833, 0.162515, 0.172506208, 0.182558611, 0.1925495, 0.202540583, 0.212501264, 0.2224925, 0.232575292, 0.242535653, 0.252526764, 0.262518014, 0.272478694, 0.282561569, 0.292552472, 0.302543417, 0.312504111, 0.322495403, 0.332578278, 0.342538653, 0.352529694, 0.362520889, 0.372481611, 0.382564542, 0.39255525, 0.402515903, 0.412507014, 0.422498292, 0.432550792, 0.442541556, 0.452532556, 0.462493319, 0.472484542, 0.482567458, 0.492527667, 0.502518806, 0.512510042, 0.522470694, 0.532553597, 0.542544514, 0.552535542, 0.562496264, 0.572487444, 0.582570403, 0.592530653, 0.602521708, 0.612512889, 0.622473597, 0.632556597, 0.642547403, 0.652507931, 0.662499139, 0.672490403, 0.682542667, 0.692533597, 0.702524625, 0.712485361, 0.722476528, 0.732559403, 0.742519819, 0.752510875, 0.762502069, 0.772462792, 0.782545722, 0.792536528, 0.802527458, 0.812543722, 0.82253425, 0.832525431, 0.842486083, 0.852477292, 0.862560194, 0.872520514, 0.882511556, 0.892502806, 0.902463556, 0.912546472, 0.92253725, 0.932497778, 0.942489028, 0.952480264, 0.962532681, 0.972523472, 0.982514486, 0.992475208, 1.002466458, 1.012549431, 1.022509708] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:24.922" endtime="20201110 08:35:24.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.917" endtime="20201110 08:35:24.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.926" endtime="20201110 08:35:24.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:24.930" endtime="20201110 08:35:24.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.928" endtime="20201110 08:35:24.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.925" endtime="20201110 08:35:24.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.373" endtime="20201110 08:35:24.951"></status>
</kw>
<msg timestamp="20201110 08:35:24.951" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.959" endtime="20201110 08:35:27.072"></status>
</kw>
<msg timestamp="20201110 08:35:27.074" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44143371, 'start-iter': 1, 'wakeups': [44153472, 44163452, 44173461, 4...</msg>
<status status="PASS" starttime="20201110 08:35:24.957" endtime="20201110 08:35:27.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.084" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44143371, 'start-iter': 1, 'wakeups': [44153472, 44163452, 44173461, 4...</msg>
<status status="PASS" starttime="20201110 08:35:27.081" endtime="20201110 08:35:27.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.087" endtime="20201110 08:35:27.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.955" endtime="20201110 08:35:27.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.953" endtime="20201110 08:35:27.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.098" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'start-time': 44143371, 'start-iter': 1, 'wakeups': [44153472, 44163452, 44173461, 44183410, 44193389, 44203491, 44213439, 44223449, 44233428, 44243377, 442...</msg>
<status status="PASS" starttime="20201110 08:35:27.094" endtime="20201110 08:35:27.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.106" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:27.104" endtime="20201110 08:35:27.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.110" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:27.108" endtime="20201110 08:35:27.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.099" endtime="20201110 08:35:27.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.122" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:27.120" endtime="20201110 08:35:27.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.127" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:27.125" endtime="20201110 08:35:27.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.113" endtime="20201110 08:35:27.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.137" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:27.135" endtime="20201110 08:35:27.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.141" level="INFO">VALUE: 44143371</msg>
<status status="PASS" starttime="20201110 08:35:27.139" endtime="20201110 08:35:27.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.130" endtime="20201110 08:35:27.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.151" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:27.149" endtime="20201110 08:35:27.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.155" level="INFO">VALUE: [44153472, 44163452, 44173461, 44183410, 44193389, 44203491, 44213439, 44223449, 44233428, 44243377, 44253479, 44263458, 44273437, 44283416, 44293395, 44303466, 44313446, 44323455, 44333404, 44343383, 44353485, 44363433, 44373443, 44383422, 44393432, 44403442, 44413421, 44423400, 44433471, 44443450, 44453460, 44463409, 44473388, 44483489, 44493438, 44503417, 44513488, 44523437, 44533416, 44543487, 44553436, 44563446, 44573425, 44583374, 44593475, 44603454, 44613433, 44623413, 44633392, 44643432, 44653411, 44663391, 44673492, 44683441, 44693450, 44703430, 44713378, 44723480, 44733459, 44743438, 44753417, 44763397, 44773468, 44783447, 44793457, 44803405, 44813385, 44823486, 44833435, 44843444, 44853424, 44863372, 44873474, 44883453, 44893402, 44903381, 44913482, 44923461, 44933441, 44943420, 44953399, 44963470, 44973449, 44983459, 44993408, 45003387, 45013488, 45023437, 45033447, 45043426, 45053375, 45063476, 45073455, 45083435, 45093414, 45103393, 45113464, 45123443, 45133453, 45143371]</msg>
<status status="PASS" starttime="20201110 08:35:27.153" endtime="20201110 08:35:27.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.144" endtime="20201110 08:35:27.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.170" endtime="20201110 08:35:27.468"></status>
</kw>
<msg timestamp="20201110 08:35:27.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020553722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030653653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.167" endtime="20201110 08:35:27.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020553722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030653653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.472" endtime="20201110 08:35:27.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.480" endtime="20201110 08:35:27.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.162" endtime="20201110 08:35:27.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.158" endtime="20201110 08:35:27.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.507" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:27.483" endtime="20201110 08:35:27.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.511" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:27.510" endtime="20201110 08:35:27.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.513" level="INFO">VALUE: 0.020553722</msg>
<status status="PASS" starttime="20201110 08:35:27.512" endtime="20201110 08:35:27.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.508" endtime="20201110 08:35:27.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.519" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:27.518" endtime="20201110 08:35:27.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.521" level="INFO">VALUE: [0.030653653, 0.04064325, 0.050634347, 0.060594958, 0.070586222, 0.080669181, 0.090629403, 0.100620514, 0.110611722, 0.120572389, 0.130655333, 0.140646139, 0.150606722, 0.160597958, 0.170589014, 0.180641542, 0.190632403, 0.200623389, 0.210584125, 0.220575319, 0.23065825, 0.240618611, 0.250609556, 0.260600889, 0.270616764, 0.280607431, 0.290598639, 0.300589847, 0.31064225, 0.320633125, 0.330624125, 0.340584861, 0.350576111, 0.360658903, 0.370619347, 0.380610194, 0.390657083, 0.400617194, 0.410608028, 0.420654861, 0.430614903, 0.440605986, 0.450597194, 0.460557903, 0.470640833, 0.480631681, 0.490592153, 0.500583389, 0.510574597, 0.520590472, 0.53058125, 0.540572444, 0.550655389, 0.560615667, 0.570606694, 0.580597903, 0.590558625, 0.600641556, 0.610632417, 0.620592833, 0.630584167, 0.640575403, 0.650627778, 0.660618514, 0.670609611, 0.680570347, 0.690561542, 0.700644542, 0.710604806, 0.720595833, 0.730587042, 0.74054775, 0.750630667, 0.760621, 0.770564208, 0.780555056, 0.790637972, 0.800628792, 0.810589292, 0.820580528, 0.830571778, 0.840624056, 0.850615028, 0.860606056, 0.870566736, 0.880557958, 0.890640889, 0.900601125, 0.910592208, 0.920583431, 0.930544181, 0.940627167, 0.950617861, 0.960578417, 0.970569667, 0.980560861, 0.990613292, 1.000604125, 1.010595431, 1.020538069] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:27.520" endtime="20201110 08:35:27.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.515" endtime="20201110 08:35:27.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.524" endtime="20201110 08:35:27.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:27.527" endtime="20201110 08:35:27.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.526" endtime="20201110 08:35:27.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.522" endtime="20201110 08:35:27.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.951" endtime="20201110 08:35:27.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.781" endtime="20201110 08:35:27.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.780" endtime="20201110 08:35:27.548"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:27.551" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.559" endtime="20201110 08:35:29.674"></status>
</kw>
<msg timestamp="20201110 08:35:29.676" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46746185, 'start-iter': 1, 'wakeups': [46756317, 46766265, 46776306, 4...</msg>
<status status="PASS" starttime="20201110 08:35:27.557" endtime="20201110 08:35:29.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.681" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46746185, 'start-iter': 1, 'wakeups': [46756317, 46766265, 46776306, 4...</msg>
<status status="PASS" starttime="20201110 08:35:29.678" endtime="20201110 08:35:29.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.684" endtime="20201110 08:35:29.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.555" endtime="20201110 08:35:29.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.553" endtime="20201110 08:35:29.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:29.695" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'start-time': 46746185, 'start-iter': 1, 'wakeups': [46756317, 46766265, 46776306, 46786285, 46796295, 46806304, 46816284, 46826293, 46836303, 46846282, 468...</msg>
<status status="PASS" starttime="20201110 08:35:29.691" endtime="20201110 08:35:29.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.704" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:29.702" endtime="20201110 08:35:29.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.708" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:29.706" endtime="20201110 08:35:29.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.697" endtime="20201110 08:35:29.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.718" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:29.716" endtime="20201110 08:35:29.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.722" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:29.720" endtime="20201110 08:35:29.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.711" endtime="20201110 08:35:29.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.731" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:29.730" endtime="20201110 08:35:29.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.734" level="INFO">VALUE: 46746185</msg>
<status status="PASS" starttime="20201110 08:35:29.733" endtime="20201110 08:35:29.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.725" endtime="20201110 08:35:29.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.739" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:29.738" endtime="20201110 08:35:29.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.741" level="INFO">VALUE: [46756317, 46766265, 46776306, 46786285, 46796295, 46806304, 46816284, 46826293, 46836303, 46846282, 46856292, 46866302, 46876281, 46886291, 46896301, 46906280, 46916290, 46926300, 46936279, 46946289, 46956298, 46966278, 46976287, 46986297, 46996276, 47006286, 47016296, 47026306, 47036285, 47046295, 47056304, 47066284, 47076293, 47086303, 47096282, 47106292, 47116302, 47126281, 47136291, 47146301, 47156280, 47166290, 47176300, 47186279, 47196289, 47206298, 47216278, 47226287, 47236297, 47246276, 47256286, 47266296, 47276306, 47286285, 47296295, 47306304, 47316284, 47326293, 47336303, 47346282, 47356292, 47366302, 47376281, 47386291, 47396301, 47406280, 47416290, 47426300, 47436279, 47446289, 47456298, 47466278, 47476287, 47486297, 47496276, 47506286, 47516296, 47526306, 47536285, 47546295, 47556304, 47566284, 47576293, 47586303, 47596282, 47606292, 47616302, 47626281, 47636291, 47646301, 47656280, 47666290, 47676300, 47686279, 47696289, 47706298, 47716278, 47726287, 47736297, 47746276]</msg>
<status status="PASS" starttime="20201110 08:35:29.740" endtime="20201110 08:35:29.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.735" endtime="20201110 08:35:29.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.748" endtime="20201110 08:35:30.039"></status>
</kw>
<msg timestamp="20201110 08:35:30.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025648069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035776056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.747" endtime="20201110 08:35:30.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025648069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035776056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:30.042" endtime="20201110 08:35:30.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.050" endtime="20201110 08:35:30.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.744" endtime="20201110 08:35:30.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.742" endtime="20201110 08:35:30.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:30.076" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:30.053" endtime="20201110 08:35:30.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.081" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:30.080" endtime="20201110 08:35:30.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.083" level="INFO">VALUE: 0.025648069</msg>
<status status="PASS" starttime="20201110 08:35:30.082" endtime="20201110 08:35:30.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.077" endtime="20201110 08:35:30.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.088" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:30.087" endtime="20201110 08:35:30.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.091" level="INFO">VALUE: [0.035776056, 0.045745514, 0.055793625, 0.065772708, 0.075782097, 0.085791569, 0.095770472, 0.105779931, 0.115789417, 0.125768292, 0.135777708, 0.14578725, 0.155766208, 0.165775639, 0.175785111, 0.185764069, 0.195773444, 0.205782903, 0.215761861, 0.225771292, 0.235780736, 0.245759639, 0.255769125, 0.265777569, 0.275757806, 0.285767139, 0.295776375, 0.305785806, 0.315764722, 0.325774194, 0.335783778, 0.345762653, 0.355772014, 0.365781458, 0.375760417, 0.385769694, 0.395779264, 0.40575825, 0.415767667, 0.425777069, 0.435756042, 0.445765458, 0.455774931, 0.465753847, 0.475763319, 0.485772681, 0.495751681, 0.505761028, 0.515769708, 0.525749861, 0.535759153, 0.545768417, 0.555777694, 0.565756764, 0.575766139, 0.585775694, 0.595754514, 0.605763958, 0.615773431, 0.625752431, 0.635761972, 0.645771333, 0.655750278, 0.665759569, 0.675769153, 0.685747972, 0.695757542, 0.705766931, 0.715745847, 0.725755292, 0.735764806, 0.745743667, 0.755753208, 0.765761708, 0.775741917, 0.785751236, 0.795760444, 0.805769889, 0.815748764, 0.825758264, 0.835767681, 0.845746597, 0.855756028, 0.865765528, 0.875744458, 0.885753917, 0.895763375, 0.905742319, 0.91575175, 0.925761153, 0.935740014, 0.945749597, 0.955759028, 0.965737972, 0.975747403, 0.985756861, 0.995735764, 1.005745194, 1.015753625, 1.025733861] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:30.090" endtime="20201110 08:35:30.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.084" endtime="20201110 08:35:30.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.094" endtime="20201110 08:35:30.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:30.097" endtime="20201110 08:35:30.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.096" endtime="20201110 08:35:30.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.092" endtime="20201110 08:35:30.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.551" endtime="20201110 08:35:30.118"></status>
</kw>
<msg timestamp="20201110 08:35:30.118" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.126" endtime="20201110 08:35:32.241"></status>
</kw>
<msg timestamp="20201110 08:35:32.242" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49313812, 'start-iter': 1, 'wakeups': [49323944, 49333923, 49343933, 4...</msg>
<status status="PASS" starttime="20201110 08:35:30.124" endtime="20201110 08:35:32.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.248" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49313812, 'start-iter': 1, 'wakeups': [49323944, 49333923, 49343933, 4...</msg>
<status status="PASS" starttime="20201110 08:35:32.245" endtime="20201110 08:35:32.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.251" endtime="20201110 08:35:32.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.122" endtime="20201110 08:35:32.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.120" endtime="20201110 08:35:32.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:32.262" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'start-time': 49313812, 'start-iter': 1, 'wakeups': [49323944, 49333923, 49343933, 49353912, 49363922, 49373931, 49383911, 49393920, 49403930, 49413909, 494...</msg>
<status status="PASS" starttime="20201110 08:35:32.258" endtime="20201110 08:35:32.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.270" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:32.268" endtime="20201110 08:35:32.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.279" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:32.276" endtime="20201110 08:35:32.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.263" endtime="20201110 08:35:32.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.289" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:32.287" endtime="20201110 08:35:32.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.293" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:32.291" endtime="20201110 08:35:32.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.282" endtime="20201110 08:35:32.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.303" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:32.301" endtime="20201110 08:35:32.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.307" level="INFO">VALUE: 49313812</msg>
<status status="PASS" starttime="20201110 08:35:32.305" endtime="20201110 08:35:32.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.296" endtime="20201110 08:35:32.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.317" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:32.315" endtime="20201110 08:35:32.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.322" level="INFO">VALUE: [49323944, 49333923, 49343933, 49353912, 49363922, 49373931, 49383911, 49393920, 49403930, 49413909, 49423919, 49433929, 49443908, 49453918, 49463928, 49473907, 49483917, 49493927, 49503906, 49513916, 49523925, 49533905, 49543914, 49553924, 49563903, 49573913, 49583923, 49593933, 49603912, 49613922, 49623931, 49633911, 49643920, 49653930, 49663909, 49673919, 49683929, 49693908, 49703918, 49713928, 49723907, 49733917, 49743927, 49753906, 49763916, 49773925, 49783905, 49793914, 49803924, 49813903, 49823913, 49833923, 49843933, 49853912, 49863922, 49873931, 49883911, 49893920, 49903930, 49913909, 49923919, 49933929, 49943908, 49953918, 49963928, 49973907, 49983917, 49993927, 50003906, 50013916, 50023925, 50033905, 50043914, 50053924, 50063903, 50073913, 50083923, 50093933, 50103912, 50113922, 50123931, 50133911, 50143920, 50153930, 50163909, 50173919, 50183929, 50193908, 50203918, 50213928, 50223907, 50233917, 50243927, 50253906, 50263916, 50273925, 50283905, 50293914, 50303924, 50313903]</msg>
<status status="PASS" starttime="20201110 08:35:32.319" endtime="20201110 08:35:32.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.310" endtime="20201110 08:35:32.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.336" endtime="20201110 08:35:32.625"></status>
</kw>
<msg timestamp="20201110 08:35:32.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022958319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033096792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:32.335" endtime="20201110 08:35:32.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022958319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033096792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:32.629" endtime="20201110 08:35:32.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.636" endtime="20201110 08:35:32.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.328" endtime="20201110 08:35:32.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.325" endtime="20201110 08:35:32.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:32.663" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:32.640" endtime="20201110 08:35:32.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.667" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:32.666" endtime="20201110 08:35:32.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.669" level="INFO">VALUE: 0.022958319</msg>
<status status="PASS" starttime="20201110 08:35:32.668" endtime="20201110 08:35:32.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.664" endtime="20201110 08:35:32.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.675" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:32.674" endtime="20201110 08:35:32.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.677" level="INFO">VALUE: [0.033096792, 0.043075222, 0.053084417, 0.063063417, 0.073072694, 0.083082222, 0.093061181, 0.103070639, 0.113080111, 0.123059014, 0.133068486, 0.143077889, 0.153056819, 0.16306625, 0.173075708, 0.183054708, 0.193064167, 0.203073597, 0.213052472, 0.223061958, 0.233071431, 0.243050181, 0.253059792, 0.263068236, 0.273048528, 0.283057833, 0.293067042, 0.303076444, 0.313055431, 0.323064986, 0.333074181, 0.343053222, 0.353062583, 0.363072167, 0.373051097, 0.383060569, 0.393069972, 0.403048958, 0.413058292, 0.423067819, 0.433046708, 0.443056097, 0.453065597, 0.463044583, 0.473053972, 0.483063472, 0.493042444, 0.503051889, 0.513060444, 0.523040542, 0.533049875, 0.543059083, 0.553068458, 0.563047458, 0.573056917, 0.583066292, 0.593045306, 0.603054722, 0.613064069, 0.623043097, 0.633052556, 0.643061972, 0.653040847, 0.663050347, 0.673059764, 0.683038792, 0.693048208, 0.703057583, 0.713036556, 0.723046056, 0.733055431, 0.743034431, 0.753043833, 0.763052333, 0.773032611, 0.783041917, 0.793051153, 0.803060472, 0.813039486, 0.823048861, 0.833058375, 0.843037347, 0.853046778, 0.863056222, 0.873035306, 0.883044597, 0.893054167, 0.903032944, 0.913042431, 0.923051889, 0.933030708, 0.943040264, 0.953049583, 0.963028542, 0.973037917, 0.983047486, 0.993026417, 1.00303575, 1.013044431, 1.023024708] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:32.676" endtime="20201110 08:35:32.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.671" endtime="20201110 08:35:32.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.680" endtime="20201110 08:35:32.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:32.684" endtime="20201110 08:35:32.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.682" endtime="20201110 08:35:32.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.679" endtime="20201110 08:35:32.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.119" endtime="20201110 08:35:32.704"></status>
</kw>
<msg timestamp="20201110 08:35:32.705" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.713" endtime="20201110 08:35:34.834"></status>
</kw>
<msg timestamp="20201110 08:35:34.836" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51901550, 'start-iter': 1, 'wakeups': [51911682, 51921630, 51931671, 5...</msg>
<status status="PASS" starttime="20201110 08:35:32.712" endtime="20201110 08:35:34.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.842" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51901550, 'start-iter': 1, 'wakeups': [51911682, 51921630, 51931671, 5...</msg>
<status status="PASS" starttime="20201110 08:35:34.838" endtime="20201110 08:35:34.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.844" endtime="20201110 08:35:34.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.708" endtime="20201110 08:35:34.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.706" endtime="20201110 08:35:34.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:34.855" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'start-time': 51901550, 'start-iter': 1, 'wakeups': [51911682, 51921630, 51931671, 51941650, 51951660, 51961669, 51971649, 51981658, 51991668, 52001647, 520...</msg>
<status status="PASS" starttime="20201110 08:35:34.851" endtime="20201110 08:35:34.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.863" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:34.861" endtime="20201110 08:35:34.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.867" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:34.865" endtime="20201110 08:35:34.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.856" endtime="20201110 08:35:34.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.877" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:34.875" endtime="20201110 08:35:34.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.881" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:34.879" endtime="20201110 08:35:34.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.870" endtime="20201110 08:35:34.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.892" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:34.890" endtime="20201110 08:35:34.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.896" level="INFO">VALUE: 51901550</msg>
<status status="PASS" starttime="20201110 08:35:34.894" endtime="20201110 08:35:34.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.885" endtime="20201110 08:35:34.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.907" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:34.905" endtime="20201110 08:35:34.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.912" level="INFO">VALUE: [51911682, 51921630, 51931671, 51941650, 51951660, 51961669, 51971649, 51981658, 51991668, 52001647, 52011657, 52021667, 52031646, 52041656, 52051666, 52061645, 52071655, 52081665, 52091644, 52101654, 52111663, 52121643, 52131652, 52141662, 52151641, 52161651, 52171661, 52181671, 52191650, 52201660, 52211669, 52221649, 52231658, 52241668, 52251647, 52261657, 52271667, 52281646, 52291656, 52301666, 52311645, 52321655, 52331665, 52341644, 52351654, 52361663, 52371643, 52381652, 52391662, 52401641, 52411651, 52421661, 52431671, 52441650, 52451660, 52461669, 52471649, 52481658, 52491668, 52501647, 52511657, 52521667, 52531646, 52541656, 52551666, 52561645, 52571655, 52581665, 52591644, 52601654, 52611663, 52621643, 52631652, 52641662, 52651641, 52661651, 52671661, 52681671, 52691650, 52701660, 52711669, 52721649, 52731658, 52741668, 52751647, 52761657, 52771667, 52781646, 52791656, 52801666, 52811645, 52821655, 52831665, 52841644, 52851654, 52861663, 52871643, 52881652, 52891662, 52901641]</msg>
<status status="PASS" starttime="20201110 08:35:34.909" endtime="20201110 08:35:34.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.900" endtime="20201110 08:35:34.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.928" endtime="20201110 08:35:35.219"></status>
</kw>
<msg timestamp="20201110 08:35:35.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023838833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033956625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:34.925" endtime="20201110 08:35:35.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023838833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033956625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:35.223" endtime="20201110 08:35:35.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.230" endtime="20201110 08:35:35.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.919" endtime="20201110 08:35:35.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.915" endtime="20201110 08:35:35.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:35.257" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:35.233" endtime="20201110 08:35:35.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.261" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:35.260" endtime="20201110 08:35:35.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.263" level="INFO">VALUE: 0.023838833</msg>
<status status="PASS" starttime="20201110 08:35:35.262" endtime="20201110 08:35:35.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.258" endtime="20201110 08:35:35.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.269" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:35.267" endtime="20201110 08:35:35.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.271" level="INFO">VALUE: [0.033956625, 0.043925653, 0.053973944, 0.063952931, 0.073962347, 0.083971736, 0.093950694, 0.103960042, 0.113969597, 0.123948375, 0.133957931, 0.143967375, 0.15394625, 0.16395575, 0.173965069, 0.183944181, 0.193953625, 0.203962944, 0.213941958, 0.223951278, 0.233960792, 0.24393975, 0.253949069, 0.263957625, 0.273937972, 0.283947222, 0.293956528, 0.303965931, 0.313944903, 0.323954333, 0.333963736, 0.343942903, 0.353952236, 0.363961625, 0.373940542, 0.383949931, 0.393959486, 0.403938319, 0.413947806, 0.423957222, 0.433936292, 0.443945611, 0.453955139, 0.463933986, 0.473943556, 0.483952903, 0.493931819, 0.503941333, 0.513949792, 0.523930056, 0.533939278, 0.543948556, 0.553957875, 0.563936806, 0.573946375, 0.583955694, 0.593934708, 0.603944278, 0.613953569, 0.623932542, 0.633941917, 0.6439515, 0.653930333, 0.663939806, 0.673949236, 0.683928153, 0.693937694, 0.703947139, 0.713926028, 0.723935458, 0.733944903, 0.743923847, 0.753933278, 0.763941847, 0.773922097, 0.783931319, 0.793940569, 0.803949972, 0.813928958, 0.823938403, 0.833947861, 0.843926819, 0.853936208, 0.863945556, 0.873924597, 0.883933889, 0.893943472, 0.9039225, 0.913931944, 0.923941306, 0.933920319, 0.943929694, 0.953939153, 0.963918097, 0.9739275, 0.983936986, 0.993916014, 1.003925347, 1.013933917, 1.023914181] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:35.270" endtime="20201110 08:35:35.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.265" endtime="20201110 08:35:35.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.274" endtime="20201110 08:35:35.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:35.277" endtime="20201110 08:35:35.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.276" endtime="20201110 08:35:35.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.273" endtime="20201110 08:35:35.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.705" endtime="20201110 08:35:35.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.549" endtime="20201110 08:35:35.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.549" endtime="20201110 08:35:35.299"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:35.301" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.309" endtime="20201110 08:35:37.422"></status>
</kw>
<msg timestamp="20201110 08:35:37.423" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54494323, 'start-iter': 1, 'wakeups': [54504455, 54514465, 54524475, 5...</msg>
<status status="PASS" starttime="20201110 08:35:35.308" endtime="20201110 08:35:37.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.429" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54494323, 'start-iter': 1, 'wakeups': [54504455, 54514465, 54524475, 5...</msg>
<status status="PASS" starttime="20201110 08:35:37.425" endtime="20201110 08:35:37.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.431" endtime="20201110 08:35:37.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.305" endtime="20201110 08:35:37.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.303" endtime="20201110 08:35:37.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:37.442" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'start-time': 54494323, 'start-iter': 1, 'wakeups': [54504455, 54514465, 54524475, 54534454, 54544464, 54554473, 54564453, 54574462, 54584472, 54594451, 546...</msg>
<status status="PASS" starttime="20201110 08:35:37.438" endtime="20201110 08:35:37.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.452" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:37.448" endtime="20201110 08:35:37.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.457" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:37.455" endtime="20201110 08:35:37.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.444" endtime="20201110 08:35:37.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.467" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:37.465" endtime="20201110 08:35:37.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.471" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:37.469" endtime="20201110 08:35:37.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.460" endtime="20201110 08:35:37.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.481" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:37.479" endtime="20201110 08:35:37.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.485" level="INFO">VALUE: 54494323</msg>
<status status="PASS" starttime="20201110 08:35:37.483" endtime="20201110 08:35:37.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.474" endtime="20201110 08:35:37.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.495" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:37.493" endtime="20201110 08:35:37.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.501" level="INFO">VALUE: [54504455, 54514465, 54524475, 54534454, 54544464, 54554473, 54564453, 54574462, 54584472, 54594451, 54604461, 54614471, 54624450, 54634460, 54644470, 54654449, 54664459, 54674468, 54684448, 54694458, 54704467, 54714447, 54724456, 54734466, 54744445, 54754455, 54764465, 54774475, 54784454, 54794464, 54804473, 54814453, 54824462, 54834472, 54844451, 54854461, 54864471, 54874450, 54884460, 54894470, 54904449, 54914459, 54924468, 54934448, 54944458, 54954467, 54964447, 54974456, 54984466, 54994445, 55004455, 55014465, 55024475, 55034454, 55044464, 55054473, 55064453, 55074462, 55084472, 55094451, 55104461, 55114471, 55124450, 55134460, 55144470, 55154449, 55164459, 55174468, 55184448, 55194458, 55204467, 55214447, 55224456, 55234466, 55244445, 55254455, 55264465, 55274475, 55284454, 55294464, 55304473, 55314453, 55324462, 55334472, 55344451, 55354461, 55364471, 55374450, 55384460, 55394470, 55404449, 55414459, 55424468, 55434448, 55444458, 55454467, 55464447, 55474456, 55484466, 55494445]</msg>
<status status="PASS" starttime="20201110 08:35:37.497" endtime="20201110 08:35:37.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.488" endtime="20201110 08:35:37.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.516" endtime="20201110 08:35:37.814"></status>
</kw>
<msg timestamp="20201110 08:35:37.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032427792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:37.513" endtime="20201110 08:35:37.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032427792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:37.817" endtime="20201110 08:35:37.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.825" endtime="20201110 08:35:37.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.507" endtime="20201110 08:35:37.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.504" endtime="20201110 08:35:37.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:37.852" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:37.828" endtime="20201110 08:35:37.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.856" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:37.855" endtime="20201110 08:35:37.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.858" level="INFO">VALUE: 0.022276472</msg>
<status status="PASS" starttime="20201110 08:35:37.857" endtime="20201110 08:35:37.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.853" endtime="20201110 08:35:37.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.864" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:37.863" endtime="20201110 08:35:37.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.866" level="INFO">VALUE: [0.032427792, 0.042434931, 0.0524445, 0.062423319, 0.072432806, 0.082442208, 0.09242125, 0.102430653, 0.112440042, 0.122418986, 0.132428458, 0.142437931, 0.152416847, 0.162426417, 0.172435694, 0.182414708, 0.192424097, 0.202433569, 0.212412389, 0.222422028, 0.232431389, 0.242410194, 0.252419639, 0.262429167, 0.272408083, 0.282417375, 0.292427042, 0.302436431, 0.312415236, 0.322424708, 0.332434264, 0.342413208, 0.352422653, 0.362431931, 0.372411028, 0.382420486, 0.392429917, 0.402408847, 0.412418292, 0.42242775, 0.432406639, 0.442416097, 0.452425472, 0.462404556, 0.472414, 0.4824235, 0.492402333, 0.502411792, 0.512421208, 0.522400153, 0.532409708, 0.542419069, 0.552428583, 0.562407417, 0.572417, 0.582426333, 0.592405389, 0.602414708, 0.612424125, 0.622403056, 0.632412639, 0.642421944, 0.652401, 0.662410431, 0.672419806, 0.682398694, 0.692408153, 0.702417667, 0.712396486, 0.722406097, 0.732415389, 0.742394347, 0.752403819, 0.762413222, 0.772392194, 0.782401583, 0.792411069, 0.802420514, 0.812399514, 0.822408986, 0.832418375, 0.842397333, 0.852406944, 0.862416292, 0.872395125, 0.882404653, 0.892414069, 0.902392833, 0.912402333, 0.922411736, 0.932390764, 0.942400236, 0.952409667, 0.962388694, 0.972398014, 0.982407514, 0.992386444, 1.002395875, 1.012405417, 1.022384319] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:37.865" endtime="20201110 08:35:37.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.860" endtime="20201110 08:35:37.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.869" endtime="20201110 08:35:37.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:37.872" endtime="20201110 08:35:37.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.871" endtime="20201110 08:35:37.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.867" endtime="20201110 08:35:37.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.302" endtime="20201110 08:35:37.893"></status>
</kw>
<msg timestamp="20201110 08:35:37.893" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.901" endtime="20201110 08:35:40.013"></status>
</kw>
<msg timestamp="20201110 08:35:40.015" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57087066, 'start-iter': 1, 'wakeups': [57097229, 57107177, 57117156, 5...</msg>
<status status="PASS" starttime="20201110 08:35:37.900" endtime="20201110 08:35:40.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.021" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57087066, 'start-iter': 1, 'wakeups': [57097229, 57107177, 57117156, 5...</msg>
<status status="PASS" starttime="20201110 08:35:40.017" endtime="20201110 08:35:40.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.023" endtime="20201110 08:35:40.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.897" endtime="20201110 08:35:40.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.895" endtime="20201110 08:35:40.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:40.035" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'start-time': 57087066, 'start-iter': 1, 'wakeups': [57097229, 57107177, 57117156, 57127105, 57137084, 57147186, 57157135, 57167114, 57177093, 57187164, 571...</msg>
<status status="PASS" starttime="20201110 08:35:40.031" endtime="20201110 08:35:40.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.044" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:40.042" endtime="20201110 08:35:40.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.049" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:40.046" endtime="20201110 08:35:40.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.037" endtime="20201110 08:35:40.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.059" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:40.056" endtime="20201110 08:35:40.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.063" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:40.061" endtime="20201110 08:35:40.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.052" endtime="20201110 08:35:40.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.075" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:40.073" endtime="20201110 08:35:40.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.079" level="INFO">VALUE: 57087066</msg>
<status status="PASS" starttime="20201110 08:35:40.077" endtime="20201110 08:35:40.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.066" endtime="20201110 08:35:40.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.089" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:40.087" endtime="20201110 08:35:40.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.094" level="INFO">VALUE: [57097229, 57107177, 57117156, 57127105, 57137084, 57147186, 57157135, 57167114, 57177093, 57187164, 57197143, 57207122, 57217071, 57227172, 57237152, 57247100, 57257080, 57267181, 57277130, 57287109, 57297088, 57307159, 57317138, 57327117, 57337127, 57347198, 57357147, 57367218, 57377136, 57387207, 57397155, 57407196, 57417144, 57427215, 57437133, 57447204, 57457153, 57467193, 57477142, 57487213, 57497131, 57507202, 57517150, 57527191, 57537139, 57547210, 57557128, 57567199, 57577148, 57587158, 57597137, 57607116, 57617095, 57627166, 57637145, 57647125, 57657073, 57667175, 57677154, 57687103, 57697082, 57707183, 57717132, 57727111, 57737091, 57747161, 57757141, 57767120, 57777069, 57787170, 57797149, 57807098, 57817077, 57827178, 57837188, 57847137, 57857208, 57867156, 57877197, 57887145, 57897216, 57907135, 57917205, 57927154, 57937194, 57947143, 57957214, 57967132, 57977203, 57987152, 57997192, 58007141, 58017211, 58027130, 58037200, 58047149, 58057189, 58067138, 58077209, 58087097]</msg>
<status status="PASS" starttime="20201110 08:35:40.092" endtime="20201110 08:35:40.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.082" endtime="20201110 08:35:40.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.110" endtime="20201110 08:35:40.407"></status>
</kw>
<msg timestamp="20201110 08:35:40.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020099194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030242403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:40.107" endtime="20201110 08:35:40.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020099194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030242403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:40.411" endtime="20201110 08:35:40.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.418" endtime="20201110 08:35:40.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.101" endtime="20201110 08:35:40.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.097" endtime="20201110 08:35:40.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:40.444" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:40.422" endtime="20201110 08:35:40.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.449" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:40.448" endtime="20201110 08:35:40.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.451" level="INFO">VALUE: 0.020099194</msg>
<status status="PASS" starttime="20201110 08:35:40.450" endtime="20201110 08:35:40.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.445" endtime="20201110 08:35:40.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.457" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:40.456" endtime="20201110 08:35:40.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.459" level="INFO">VALUE: [0.030242403, 0.040201597, 0.050171431, 0.060130764, 0.070120639, 0.080209111, 0.090148125, 0.100138014, 0.110127944, 0.120185903, 0.130155361, 0.140145264, 0.150104625, 0.160193097, 0.170162625, 0.180121972, 0.190111903, 0.200200403, 0.210139389, 0.220129319, 0.230119194, 0.240177139, 0.25014675, 0.260136542, 0.270155222, 0.280203806, 0.290173681, 0.30022275, 0.310162042, 0.320211236, 0.330180931, 0.340199556, 0.350169347, 0.3602185, 0.370157722, 0.380206833, 0.390176597, 0.400195208, 0.410164972, 0.420214125, 0.430153306, 0.440202472, 0.450172278, 0.460190778, 0.470160611, 0.480209722, 0.490149056, 0.500198208, 0.5101675, 0.520167403, 0.5301365, 0.540126444, 0.550116431, 0.560174292, 0.570143778, 0.580133667, 0.590093083, 0.600181556, 0.610151028, 0.620110444, 0.630100361, 0.640188792, 0.650127875, 0.660117764, 0.670107667, 0.680165694, 0.690135083, 0.700125069, 0.710084375, 0.720172806, 0.730142403, 0.740101708, 0.750091653, 0.760179528, 0.770178972, 0.780148167, 0.790197431, 0.800167139, 0.810185819, 0.820155569, 0.830204681, 0.840143931, 0.850192958, 0.860162819, 0.870181444, 0.880151264, 0.890200347, 0.900139625, 0.910188764, 0.9201585, 0.930177069, 0.940146875, 0.950196028, 0.960135278, 0.970184375, 0.980154139, 0.990172819, 1.000142556, 1.010192083, 1.020092042] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:40.458" endtime="20201110 08:35:40.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.453" endtime="20201110 08:35:40.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.462" endtime="20201110 08:35:40.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:40.465" endtime="20201110 08:35:40.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.464" endtime="20201110 08:35:40.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.460" endtime="20201110 08:35:40.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.894" endtime="20201110 08:35:40.486"></status>
</kw>
<msg timestamp="20201110 08:35:40.486" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.494" endtime="20201110 08:35:42.607"></status>
</kw>
<msg timestamp="20201110 08:35:42.608" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59679840, 'start-iter': 1, 'wakeups': [59689971, 59699981, 59709991, 5...</msg>
<status status="PASS" starttime="20201110 08:35:40.493" endtime="20201110 08:35:42.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.619" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59679840, 'start-iter': 1, 'wakeups': [59689971, 59699981, 59709991, 5...</msg>
<status status="PASS" starttime="20201110 08:35:42.615" endtime="20201110 08:35:42.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.621" endtime="20201110 08:35:42.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.490" endtime="20201110 08:35:42.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.488" endtime="20201110 08:35:42.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:42.632" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'start-time': 59679840, 'start-iter': 1, 'wakeups': [59689971, 59699981, 59709991, 59719970, 59729980, 59739990, 59749969, 59759979, 59769989, 59779968, 597...</msg>
<status status="PASS" starttime="20201110 08:35:42.628" endtime="20201110 08:35:42.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.640" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:42.638" endtime="20201110 08:35:42.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.645" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:42.643" endtime="20201110 08:35:42.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.634" endtime="20201110 08:35:42.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.655" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:42.653" endtime="20201110 08:35:42.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.659" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:42.657" endtime="20201110 08:35:42.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.648" endtime="20201110 08:35:42.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.669" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:42.667" endtime="20201110 08:35:42.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.673" level="INFO">VALUE: 59679840</msg>
<status status="PASS" starttime="20201110 08:35:42.671" endtime="20201110 08:35:42.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.662" endtime="20201110 08:35:42.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.685" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:42.681" endtime="20201110 08:35:42.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.690" level="INFO">VALUE: [59689971, 59699981, 59709991, 59719970, 59729980, 59739990, 59749969, 59759979, 59769989, 59779968, 59789978, 59799987, 59809967, 59819976, 59829986, 59839965, 59849975, 59859985, 59869964, 59879974, 59889984, 59899963, 59909973, 59919982, 59929992, 59939971, 59949981, 59959991, 59969970, 59979980, 59989990, 59999969, 60009979, 60019989, 60029968, 60039978, 60049987, 60059967, 60069976, 60079986, 60089965, 60099975, 60109985, 60119964, 60129974, 60139984, 60149963, 60159973, 60169982, 60179992, 60189971, 60199981, 60209991, 60219970, 60229980, 60239990, 60249969, 60259979, 60269989, 60279968, 60289978, 60299987, 60309967, 60319976, 60329986, 60339965, 60349975, 60359985, 60369964, 60379974, 60389984, 60399963, 60409973, 60419982, 60429992, 60439971, 60449981, 60459991, 60469970, 60479980, 60489990, 60499969, 60509979, 60519989, 60529968, 60539978, 60549987, 60559967, 60569976, 60579986, 60589965, 60599975, 60609985, 60619964, 60629974, 60639984, 60649963, 60659973, 60669982, 60679992]</msg>
<status status="PASS" starttime="20201110 08:35:42.687" endtime="20201110 08:35:42.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.676" endtime="20201110 08:35:42.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.705" endtime="20201110 08:35:43.000"></status>
</kw>
<msg timestamp="20201110 08:35:43.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019324569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029474722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:42.702" endtime="20201110 08:35:43.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019324569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029474722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.004" endtime="20201110 08:35:43.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.011" endtime="20201110 08:35:43.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.696" endtime="20201110 08:35:43.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.693" endtime="20201110 08:35:43.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:43.037" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:43.015" endtime="20201110 08:35:43.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.042" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:43.041" endtime="20201110 08:35:43.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.044" level="INFO">VALUE: 0.019324569</msg>
<status status="PASS" starttime="20201110 08:35:43.043" endtime="20201110 08:35:43.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.038" endtime="20201110 08:35:43.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.049" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:43.048" endtime="20201110 08:35:43.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.051" level="INFO">VALUE: [0.029474722, 0.039481875, 0.049491319, 0.059470264, 0.069479764, 0.079489208, 0.089468042, 0.099477528, 0.109486875, 0.119465903, 0.129475375, 0.139484806, 0.149463708, 0.159473167, 0.169482597, 0.179461556, 0.189471167, 0.199480514, 0.209459444, 0.219468833, 0.229478319, 0.239457042, 0.249466611, 0.259476097, 0.2694855, 0.279464431, 0.289473903, 0.299483361, 0.309462319, 0.319471792, 0.329481222, 0.339460167, 0.349469653, 0.359478958, 0.369457972, 0.379467417, 0.389476889, 0.399455764, 0.409465222, 0.419474722, 0.429453625, 0.439463, 0.449472403, 0.459451417, 0.469460875, 0.479470333, 0.489449181, 0.499458708, 0.509468139, 0.519477444, 0.529456542, 0.539465917, 0.549475375, 0.559454292, 0.569463819, 0.579473236, 0.589452083, 0.599461597, 0.609470944, 0.619449875, 0.629459417, 0.63946875, 0.649447806, 0.65945725, 0.669466653, 0.679445625, 0.689455042, 0.699464597, 0.709443486, 0.719452958, 0.729462403, 0.739441347, 0.749450819, 0.759460236, 0.769469681, 0.779448556, 0.789458069, 0.799467403, 0.809446361, 0.819455875, 0.82946525, 0.839444181, 0.849453639, 0.859463139, 0.869441986, 0.879451458, 0.889460889, 0.899439903, 0.909449361, 0.919458778, 0.929437611, 0.939447125, 0.949456569, 0.959435514, 0.969444931, 0.979454389, 0.989433278, 0.99944275, 1.009452139, 1.019461639] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:43.050" endtime="20201110 08:35:43.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.045" endtime="20201110 08:35:43.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.054" endtime="20201110 08:35:43.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:43.059" endtime="20201110 08:35:43.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.056" endtime="20201110 08:35:43.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.053" endtime="20201110 08:35:43.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.487" endtime="20201110 08:35:43.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.300" endtime="20201110 08:35:43.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.299" endtime="20201110 08:35:43.080"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:43.083" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.091" endtime="20201110 08:35:45.203"></status>
</kw>
<msg timestamp="20201110 08:35:45.205" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62277618, 'start-iter': 1, 'wakeups': [62287811, 62297790, 62307739, 6...</msg>
<status status="PASS" starttime="20201110 08:35:43.089" endtime="20201110 08:35:45.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.210" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62277618, 'start-iter': 1, 'wakeups': [62287811, 62297790, 62307739, 6...</msg>
<status status="PASS" starttime="20201110 08:35:45.207" endtime="20201110 08:35:45.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.213" endtime="20201110 08:35:45.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.087" endtime="20201110 08:35:45.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.085" endtime="20201110 08:35:45.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:45.224" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'start-time': 62277618, 'start-iter': 1, 'wakeups': [62287811, 62297790, 62307739, 62317687, 62327667, 62337646, 62347747, 62357696, 62367767, 62377777, 623...</msg>
<status status="PASS" starttime="20201110 08:35:45.220" endtime="20201110 08:35:45.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.233" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:45.231" endtime="20201110 08:35:45.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.237" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:45.235" endtime="20201110 08:35:45.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.226" endtime="20201110 08:35:45.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.247" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:45.245" endtime="20201110 08:35:45.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.252" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:45.250" endtime="20201110 08:35:45.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.240" endtime="20201110 08:35:45.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.262" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:45.260" endtime="20201110 08:35:45.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.266" level="INFO">VALUE: 62277618</msg>
<status status="PASS" starttime="20201110 08:35:45.264" endtime="20201110 08:35:45.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.254" endtime="20201110 08:35:45.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.276" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:45.274" endtime="20201110 08:35:45.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.281" level="INFO">VALUE: [62287811, 62297790, 62307739, 62317687, 62327667, 62337646, 62347747, 62357696, 62367767, 62377777, 62387725, 62397705, 62407653, 62417633, 62427764, 62437683, 62447753, 62457794, 62467712, 62477691, 62487670, 62497619, 62507751, 62517700, 62527709, 62537689, 62547668, 62557647, 62567749, 62577697, 62587768, 62597778, 62607727, 62617706, 62627655, 62637634, 62647766, 62657684, 62667755, 62677795, 62687713, 62697692, 62707672, 62717620, 62727752, 62737701, 62747741, 62757781, 62767730, 62777740, 62787689, 62797760, 62807800, 62817718, 62827697, 62837677, 62847625, 62857757, 62867706, 62877746, 62887786, 62897735, 62907684, 62917663, 62927642, 62937744, 62947692, 62957763, 62967773, 62977722, 62987701, 62997650, 63007629, 63017761, 63027648, 63037628, 63047760, 63057708, 63067749, 63077789, 63087738, 63097686, 63107666, 63117645, 63127746, 63137695, 63147766, 63157775, 63167724, 63177703, 63187652, 63197631, 63207763, 63217681, 63227752, 63237792, 63247711, 63257690, 63267669, 63277679]</msg>
<status status="PASS" starttime="20201110 08:35:45.278" endtime="20201110 08:35:45.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.269" endtime="20201110 08:35:45.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.298" endtime="20201110 08:35:45.595"></status>
</kw>
<msg timestamp="20201110 08:35:45.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032922319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.294" endtime="20201110 08:35:45.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032922319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.598" endtime="20201110 08:35:45.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.606" endtime="20201110 08:35:45.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.287" endtime="20201110 08:35:45.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.284" endtime="20201110 08:35:45.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:45.632" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:45.609" endtime="20201110 08:35:45.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.637" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:45.636" endtime="20201110 08:35:45.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.639" level="INFO">VALUE: 0.022732236</msg>
<status status="PASS" starttime="20201110 08:35:45.638" endtime="20201110 08:35:45.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.633" endtime="20201110 08:35:45.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.644" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:45.643" endtime="20201110 08:35:45.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.646" level="INFO">VALUE: [0.032922319, 0.042898986, 0.052846181, 0.062783917, 0.072773028, 0.082762361, 0.092843111, 0.102811569, 0.112882264, 0.12288275, 0.132830236, 0.142798444, 0.152757181, 0.162746389, 0.172857667, 0.1827955, 0.192866375, 0.202897319, 0.212814264, 0.222782444, 0.232771667, 0.242730431, 0.252841694, 0.262809556, 0.272810556, 0.282778111, 0.292767375, 0.302756569, 0.312837403, 0.322805806, 0.332876569, 0.342876958, 0.352824361, 0.362792611, 0.372751333, 0.382740611, 0.392851917, 0.402789694, 0.412860625, 0.422891431, 0.432808528, 0.44277675, 0.452765917, 0.462724722, 0.472835944, 0.482804375, 0.492844625, 0.502875542, 0.512822528, 0.522822736, 0.532790528, 0.542861333, 0.552892278, 0.562809167, 0.572777458, 0.582766639, 0.592725389, 0.602836542, 0.612805181, 0.622845431, 0.632876361, 0.64282375, 0.652761417, 0.662750722, 0.672739972, 0.682820681, 0.692789139, 0.702860014, 0.712860347, 0.722807806, 0.732776, 0.74273475, 0.752723972, 0.762835625, 0.772733139, 0.782721778, 0.792833042, 0.802801431, 0.812841833, 0.822872694, 0.832820167, 0.842757889, 0.852747056, 0.862736347, 0.872817125, 0.8827855, 0.892856375, 0.902856722, 0.912804153, 0.922772347, 0.932731111, 0.942720333, 0.952831458, 0.962769556, 0.972840403, 0.982871375, 0.992788292, 1.002756403, 1.012745681, 1.022765861] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:45.645" endtime="20201110 08:35:45.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.640" endtime="20201110 08:35:45.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.649" endtime="20201110 08:35:45.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:45.653" endtime="20201110 08:35:45.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.651" endtime="20201110 08:35:45.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.648" endtime="20201110 08:35:45.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.084" endtime="20201110 08:35:45.673"></status>
</kw>
<msg timestamp="20201110 08:35:45.674" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.683" endtime="20201110 08:35:47.797"></status>
</kw>
<msg timestamp="20201110 08:35:47.798" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64870391, 'start-iter': 1, 'wakeups': [64880554, 64890563, 64900512, 6...</msg>
<status status="PASS" starttime="20201110 08:35:45.681" endtime="20201110 08:35:47.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.804" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64870391, 'start-iter': 1, 'wakeups': [64880554, 64890563, 64900512, 6...</msg>
<status status="PASS" starttime="20201110 08:35:47.801" endtime="20201110 08:35:47.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.806" endtime="20201110 08:35:47.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.678" endtime="20201110 08:35:47.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.676" endtime="20201110 08:35:47.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:47.817" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'start-time': 64870391, 'start-iter': 1, 'wakeups': [64880554, 64890563, 64900512, 64910461, 64920440, 64930419, 64940521, 64950469, 64960540, 64970550, 649...</msg>
<status status="PASS" starttime="20201110 08:35:47.813" endtime="20201110 08:35:47.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.826" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:47.824" endtime="20201110 08:35:47.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.830" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:47.828" endtime="20201110 08:35:47.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.819" endtime="20201110 08:35:47.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.845" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:47.843" endtime="20201110 08:35:47.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.850" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:47.848" endtime="20201110 08:35:47.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.838" endtime="20201110 08:35:47.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.860" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:47.858" endtime="20201110 08:35:47.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.864" level="INFO">VALUE: 64870391</msg>
<status status="PASS" starttime="20201110 08:35:47.862" endtime="20201110 08:35:47.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.853" endtime="20201110 08:35:47.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.874" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:47.872" endtime="20201110 08:35:47.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.879" level="INFO">VALUE: [64880554, 64890563, 64900512, 64910461, 64920440, 64930419, 64940521, 64950469, 64960540, 64970550, 64980499, 64990478, 65000427, 65010406, 65020538, 65030456, 65040527, 65050567, 65060485, 65070465, 65080444, 65090393, 65100524, 65110473, 65120513, 65130554, 65140502, 65150482, 65160430, 65170410, 65180541, 65190460, 65200531, 65210571, 65220489, 65230468, 65240447, 65250396, 65260528, 65270477, 65280517, 65290557, 65300506, 65310455, 65320434, 65330413, 65340515, 65350463, 65360534, 65370544, 65380493, 65390472, 65400451, 65410400, 65420532, 65430480, 65440521, 65450561, 65460510, 65470458, 65480438, 65490417, 65500518, 65510467, 65520538, 65530548, 65540496, 65550476, 65560424, 65570404, 65580535, 65590454, 65600524, 65610565, 65620483, 65630462, 65640441, 65650421, 65660522, 65670471, 65680541, 65690551, 65700500, 65710479, 65720428, 65730407, 65740539, 65750457, 65760528, 65770568, 65780487, 65790466, 65800445, 65810394, 65820526, 65830474, 65840515, 65850555, 65860504, 65870452]</msg>
<status status="PASS" starttime="20201110 08:35:47.876" endtime="20201110 08:35:47.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.867" endtime="20201110 08:35:47.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.894" endtime="20201110 08:35:48.190"></status>
</kw>
<msg timestamp="20201110 08:35:48.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031951681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:47.891" endtime="20201110 08:35:48.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031951681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:48.194" endtime="20201110 08:35:48.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.202" endtime="20201110 08:35:48.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.885" endtime="20201110 08:35:48.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.882" endtime="20201110 08:35:48.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:48.228" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:48.205" endtime="20201110 08:35:48.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.232" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:48.231" endtime="20201110 08:35:48.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.234" level="INFO">VALUE: 0.021779056</msg>
<status status="PASS" starttime="20201110 08:35:48.233" endtime="20201110 08:35:48.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.229" endtime="20201110 08:35:48.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.241" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:48.239" endtime="20201110 08:35:48.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.243" level="INFO">VALUE: [0.031951681, 0.041956472, 0.051904097, 0.061841722, 0.071830958, 0.081820194, 0.091900986, 0.101869431, 0.111940208, 0.121940597, 0.131888042, 0.14185625, 0.151815014, 0.161804181, 0.1719155, 0.181853389, 0.191924236, 0.201955056, 0.211872069, 0.221840153, 0.231829514, 0.241788278, 0.251899375, 0.261867958, 0.271908264, 0.281939333, 0.291886764, 0.301854903, 0.311813556, 0.321802792, 0.331914097, 0.341852, 0.351922833, 0.361953917, 0.371870694, 0.381838833, 0.391828139, 0.401786806, 0.411898125, 0.421866528, 0.431906944, 0.441937764, 0.451885319, 0.461822889, 0.471812139, 0.481801417, 0.491882111, 0.501850611, 0.511921528, 0.521921931, 0.531869236, 0.541837417, 0.551826681, 0.561785361, 0.571896653, 0.581865097, 0.591905569, 0.601936278, 0.61188375, 0.621821514, 0.631810681, 0.641799917, 0.651880722, 0.661849125, 0.671919972, 0.68192025, 0.691867667, 0.701836056, 0.711794708, 0.721783944, 0.731895111, 0.741833167, 0.751903972, 0.761934833, 0.771851833, 0.78182, 0.79180925, 0.801798417, 0.811879125, 0.821847625, 0.831918458, 0.841918833, 0.851866264, 0.861834597, 0.871793278, 0.8817825, 0.891893792, 0.901831736, 0.911902514, 0.921933389, 0.931850375, 0.941818569, 0.951807764, 0.961766528, 0.971877806, 0.981846181, 0.991886514, 1.001917403, 1.011864889, 1.021802542] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:48.242" endtime="20201110 08:35:48.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.236" endtime="20201110 08:35:48.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.247" endtime="20201110 08:35:48.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:48.250" endtime="20201110 08:35:48.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.249" endtime="20201110 08:35:48.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.245" endtime="20201110 08:35:48.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.674" endtime="20201110 08:35:48.271"></status>
</kw>
<msg timestamp="20201110 08:35:48.271" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.279" endtime="20201110 08:35:50.394"></status>
</kw>
<msg timestamp="20201110 08:35:50.395" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67468170, 'start-iter': 1, 'wakeups': [67478332, 67488342, 67498291, 6...</msg>
<status status="PASS" starttime="20201110 08:35:48.278" endtime="20201110 08:35:50.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.401" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67468170, 'start-iter': 1, 'wakeups': [67478332, 67488342, 67498291, 6...</msg>
<status status="PASS" starttime="20201110 08:35:50.397" endtime="20201110 08:35:50.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.403" endtime="20201110 08:35:50.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.275" endtime="20201110 08:35:50.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.273" endtime="20201110 08:35:50.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:50.414" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'start-time': 67468170, 'start-iter': 1, 'wakeups': [67478332, 67488342, 67498291, 67508239, 67518218, 67528198, 67538299, 67548248, 67558319, 67568328, 675...</msg>
<status status="PASS" starttime="20201110 08:35:50.410" endtime="20201110 08:35:50.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.422" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:50.420" endtime="20201110 08:35:50.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.426" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:50.425" endtime="20201110 08:35:50.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.416" endtime="20201110 08:35:50.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.437" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:50.435" endtime="20201110 08:35:50.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.441" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:50.439" endtime="20201110 08:35:50.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.430" endtime="20201110 08:35:50.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.451" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:50.449" endtime="20201110 08:35:50.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.456" level="INFO">VALUE: 67468170</msg>
<status status="PASS" starttime="20201110 08:35:50.454" endtime="20201110 08:35:50.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.444" endtime="20201110 08:35:50.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.466" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:50.464" endtime="20201110 08:35:50.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.470" level="INFO">VALUE: [67478332, 67488342, 67498291, 67508239, 67518218, 67528198, 67538299, 67548248, 67558319, 67568328, 67578277, 67588256, 67598205, 67608184, 67618316, 67628234, 67638305, 67648345, 67658264, 67668243, 67678222, 67688171, 67698303, 67708251, 67718322, 67728332, 67738281, 67748260, 67758209, 67768188, 67778320, 67788238, 67798309, 67808349, 67818267, 67828247, 67838226, 67848175, 67858306, 67868255, 67878295, 67888336, 67898284, 67908233, 67918212, 67928192, 67938293, 67948242, 67958312, 67968353, 67978271, 67988250, 67998229, 68008178, 68018310, 68028259, 68038299, 68048339, 68058288, 68068237, 68078216, 68088195, 68098297, 68108245, 68118316, 68128326, 68138275, 68148254, 68158203, 68168182, 68178314, 68188232, 68198303, 68208343, 68218292, 68228240, 68238220, 68248199, 68258300, 68268249, 68278320, 68288330, 68298278, 68308258, 68318206, 68328186, 68338317, 68348236, 68358306, 68368347, 68378265, 68388244, 68398223, 68408172, 68418304, 68428253, 68438293, 68448333, 68458282, 68468261]</msg>
<status status="PASS" starttime="20201110 08:35:50.468" endtime="20201110 08:35:50.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.459" endtime="20201110 08:35:50.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.485" endtime="20201110 08:35:50.778"></status>
</kw>
<msg timestamp="20201110 08:35:50.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02141875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031588417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:50.482" endtime="20201110 08:35:50.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02141875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031588417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:50.782" endtime="20201110 08:35:50.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.789" endtime="20201110 08:35:50.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.477" endtime="20201110 08:35:50.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.473" endtime="20201110 08:35:50.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:50.816" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:50.792" endtime="20201110 08:35:50.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.820" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:50.819" endtime="20201110 08:35:50.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.822" level="INFO">VALUE: 0.02141875</msg>
<status status="PASS" starttime="20201110 08:35:50.821" endtime="20201110 08:35:50.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.817" endtime="20201110 08:35:50.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.827" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:50.826" endtime="20201110 08:35:50.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.829" level="INFO">VALUE: [0.031588417, 0.041593333, 0.051540819, 0.061478597, 0.071467875, 0.081457111, 0.091537847, 0.101506222, 0.111577097, 0.121577444, 0.131524861, 0.141493125, 0.151451889, 0.161441097, 0.171552417, 0.181490306, 0.191561125, 0.201592056, 0.211508958, 0.221477125, 0.231466361, 0.241425153, 0.251536361, 0.261504806, 0.271575597, 0.281576056, 0.291523514, 0.301491653, 0.311450347, 0.321439653, 0.331550986, 0.341488889, 0.351559597, 0.361590611, 0.371507542, 0.381475819, 0.391464972, 0.401423708, 0.411535, 0.421503333, 0.431543736, 0.441574611, 0.451522069, 0.461459778, 0.471449, 0.481438222, 0.491518931, 0.501487319, 0.511558208, 0.521589167, 0.531506125, 0.541474306, 0.551463514, 0.561422292, 0.571533528, 0.581501986, 0.591542403, 0.60157325, 0.611520653, 0.621458319, 0.631447569, 0.641436806, 0.651517569, 0.661486014, 0.671556819, 0.681557153, 0.691504736, 0.701472861, 0.711431542, 0.721420819, 0.731532056, 0.741470014, 0.751540861, 0.76157175, 0.771519181, 0.781456903, 0.791446139, 0.801435361, 0.811516139, 0.821484764, 0.831555389, 0.841555861, 0.85150325, 0.861471389, 0.871430181, 0.881419375, 0.891530597, 0.901468625, 0.911539458, 0.921570403, 0.931487264, 0.941455486, 0.951444681, 0.961403431, 0.971514681, 0.981483153, 0.991523333, 1.001554292, 1.011501778, 1.021469986] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:50.828" endtime="20201110 08:35:50.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.823" endtime="20201110 08:35:50.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.833" endtime="20201110 08:35:50.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:50.836" endtime="20201110 08:35:50.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.835" endtime="20201110 08:35:50.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.831" endtime="20201110 08:35:50.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.272" endtime="20201110 08:35:50.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.082" endtime="20201110 08:35:50.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.081" endtime="20201110 08:35:50.857"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:50.860" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.868" endtime="20201110 08:35:52.981"></status>
</kw>
<msg timestamp="20201110 08:35:52.982" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70055999, 'start-iter': 1, 'wakeups': [70066223, 70076141, 70086090,...</msg>
<status status="PASS" starttime="20201110 08:35:50.866" endtime="20201110 08:35:52.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.988" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70055999, 'start-iter': 1, 'wakeups': [70066223, 70076141, 70086090,...</msg>
<status status="PASS" starttime="20201110 08:35:52.984" endtime="20201110 08:35:52.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.990" endtime="20201110 08:35:52.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.864" endtime="20201110 08:35:52.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.862" endtime="20201110 08:35:52.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:53.001" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'start-time': 70055999, 'start-iter': 1, 'wakeups': [70066223, 70076141, 70086090, 70096160, 70106109, 70116180, 70126190, 70136138, 70146087, 70156158, 70...</msg>
<status status="PASS" starttime="20201110 08:35:52.997" endtime="20201110 08:35:53.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.012" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:53.007" endtime="20201110 08:35:53.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.016" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:53.014" endtime="20201110 08:35:53.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.003" endtime="20201110 08:35:53.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.026" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:53.024" endtime="20201110 08:35:53.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.030" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:53.028" endtime="20201110 08:35:53.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.019" endtime="20201110 08:35:53.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.040" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:35:53.038" endtime="20201110 08:35:53.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.044" level="INFO">VALUE: 70055999</msg>
<status status="PASS" starttime="20201110 08:35:53.043" endtime="20201110 08:35:53.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.033" endtime="20201110 08:35:53.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.054" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:53.052" endtime="20201110 08:35:53.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.064" level="INFO">VALUE: [70066223, 70076141, 70086090, 70096160, 70106109, 70116180, 70126190, 70136138, 70146087, 70156158, 70166107, 70176177, 70186187, 70196136, 70206085, 70216156, 70226104, 70236175, 70246185, 70256134, 70266082, 70276153, 70286102, 70296173, 70306182, 70316131, 70326080, 70336181, 70346099, 70356170, 70366210, 70376129, 70386077, 70396179, 70406097, 70416168, 70426208, 70436126, 70446075, 70456176, 70466094, 70476165, 70486206, 70496124, 70506072, 70516174, 70526092, 70536163, 70546203, 70556121, 70566070, 70576171, 70586120, 70596160, 70606201, 70616149, 70626068, 70636169, 70646118, 70656158, 70666198, 70676147, 70686065, 70696166, 70706115, 70716156, 70726196, 70736145, 70746063, 70756164, 70766113, 70776153, 70786193, 70796142, 70806060, 70816162, 70826110, 70836181, 70846191, 70856140, 70866088, 70876159, 70886108, 70896179, 70906188, 70916137, 70926086, 70936157, 70946105, 70956176, 70966186, 70976135, 70986083, 70996154, 71006103, 71016174, 71026184, 71036132, 71046081, 71056152]</msg>
<status status="PASS" starttime="20201110 08:35:53.057" endtime="20201110 08:35:53.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.047" endtime="20201110 08:35:53.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.075" endtime="20201110 08:35:53.366"></status>
</kw>
<msg timestamp="20201110 08:35:53.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023083361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033297694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:53.073" endtime="20201110 08:35:53.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023083361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033297694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:53.370" endtime="20201110 08:35:53.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.378" endtime="20201110 08:35:53.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.070" endtime="20201110 08:35:53.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.067" endtime="20201110 08:35:53.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:53.405" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:53.381" endtime="20201110 08:35:53.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.409" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:35:53.408" endtime="20201110 08:35:53.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.411" level="INFO">VALUE: 0.023083361</msg>
<status status="PASS" starttime="20201110 08:35:53.410" endtime="20201110 08:35:53.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.406" endtime="20201110 08:35:53.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.417" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:53.416" endtime="20201110 08:35:53.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.419" level="INFO">VALUE: [0.033297694, 0.043208167, 0.053175292, 0.063217917, 0.073185153, 0.083258014, 0.093259014, 0.103203722, 0.113170875, 0.123213389, 0.133180708, 0.143253528, 0.153254639, 0.1631995, 0.173166542, 0.183208986, 0.193176472, 0.203249194, 0.213250292, 0.223195139, 0.233162222, 0.243204681, 0.253172139, 0.263244917, 0.273246069, 0.283190764, 0.293157944, 0.303230875, 0.313167764, 0.323240639, 0.333272139, 0.343186458, 0.353153556, 0.363226597, 0.373163375, 0.383236292, 0.393267833, 0.403182222, 0.413149236, 0.423222181, 0.433159028, 0.443231778, 0.453263347, 0.463177792, 0.473144792, 0.48321775, 0.493154639, 0.503227417, 0.513259056, 0.523173292, 0.533140458, 0.543213583, 0.553180833, 0.563223125, 0.573254667, 0.583199472, 0.593136125, 0.603209194, 0.613176486, 0.62321875, 0.633250306, 0.643195111, 0.653131792, 0.663204722, 0.673172069, 0.683214431, 0.693245972, 0.703190778, 0.713127444, 0.723200431, 0.733167958, 0.743210139, 0.753241639, 0.763186458, 0.773123125, 0.783196083, 0.793163458, 0.803236111, 0.813237208, 0.823182194, 0.833149125, 0.843191597, 0.853159069, 0.863231847, 0.873232833, 0.88317775, 0.893144847, 0.903187222, 0.913154653, 0.923227458, 0.933228528, 0.943173458, 0.953140514, 0.963182972, 0.973150375, 0.983223125, 0.993224194, 1.003169042, 1.013136167, 1.023178569] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:53.418" endtime="20201110 08:35:53.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.413" endtime="20201110 08:35:53.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.422" endtime="20201110 08:35:53.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:53.425" endtime="20201110 08:35:53.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.424" endtime="20201110 08:35:53.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.420" endtime="20201110 08:35:53.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.861" endtime="20201110 08:35:53.446"></status>
</kw>
<msg timestamp="20201110 08:35:53.447" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.455" endtime="20201110 08:35:55.569"></status>
</kw>
<msg timestamp="20201110 08:35:55.570" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72643737, 'start-iter': 1, 'wakeups': [72653930, 72663879, 72673828,...</msg>
<status status="PASS" starttime="20201110 08:35:53.453" endtime="20201110 08:35:55.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.576" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72643737, 'start-iter': 1, 'wakeups': [72653930, 72663879, 72673828,...</msg>
<status status="PASS" starttime="20201110 08:35:55.572" endtime="20201110 08:35:55.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.578" endtime="20201110 08:35:55.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.451" endtime="20201110 08:35:55.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.449" endtime="20201110 08:35:55.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:55.589" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'start-time': 72643737, 'start-iter': 1, 'wakeups': [72653930, 72663879, 72673828, 72683898, 72693847, 72703918, 72713928, 72723876, 72733825, 72743896, 72...</msg>
<status status="PASS" starttime="20201110 08:35:55.585" endtime="20201110 08:35:55.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.597" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:55.595" endtime="20201110 08:35:55.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.602" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:55.600" endtime="20201110 08:35:55.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.591" endtime="20201110 08:35:55.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.612" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:55.610" endtime="20201110 08:35:55.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.616" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:55.614" endtime="20201110 08:35:55.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.605" endtime="20201110 08:35:55.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.629" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:35:55.627" endtime="20201110 08:35:55.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.633" level="INFO">VALUE: 72643737</msg>
<status status="PASS" starttime="20201110 08:35:55.631" endtime="20201110 08:35:55.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.619" endtime="20201110 08:35:55.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.642" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:55.641" endtime="20201110 08:35:55.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.644" level="INFO">VALUE: [72653930, 72663879, 72673828, 72683898, 72693847, 72703918, 72713928, 72723876, 72733825, 72743896, 72753845, 72763916, 72773925, 72783874, 72793823, 72803894, 72813842, 72823913, 72833923, 72843872, 72853820, 72863891, 72873840, 72883911, 72893920, 72903869, 72913818, 72923919, 72933837, 72943908, 72953948, 72963867, 72973815, 72983917, 72993835, 73003906, 73013946, 73023864, 73033813, 73043914, 73053833, 73063903, 73073944, 73083862, 73093811, 73103912, 73113830, 73123901, 73133941, 73143859, 73153808, 73163909, 73173858, 73183898, 73193939, 73203887, 73213806, 73223907, 73233856, 73243896, 73253936, 73263885, 73273803, 73283905, 73293853, 73303894, 73313934, 73323883, 73333801, 73343902, 73353851, 73363891, 73373931, 73383880, 73393798, 73403900, 73413848, 73423919, 73433929, 73443878, 73453826, 73463897, 73473846, 73483917, 73493927, 73503875, 73513824, 73523895, 73533843, 73543914, 73553924, 73563873, 73573822, 73583892, 73593841, 73603912, 73613922, 73623870, 73633819, 73643890]</msg>
<status status="PASS" starttime="20201110 08:35:55.643" endtime="20201110 08:35:55.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.636" endtime="20201110 08:35:55.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.652" endtime="20201110 08:35:55.943"></status>
</kw>
<msg timestamp="20201110 08:35:55.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021367153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031592333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:55.650" endtime="20201110 08:35:55.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021367153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031592333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:55.946" endtime="20201110 08:35:55.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.954" endtime="20201110 08:35:55.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.647" endtime="20201110 08:35:55.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.645" endtime="20201110 08:35:55.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:55.980" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:55.957" endtime="20201110 08:35:55.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.984" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:35:55.983" endtime="20201110 08:35:55.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.987" level="INFO">VALUE: 0.021367153</msg>
<status status="PASS" starttime="20201110 08:35:55.986" endtime="20201110 08:35:55.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.981" endtime="20201110 08:35:55.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.993" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:55.991" endtime="20201110 08:35:55.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.995" level="INFO">VALUE: [0.031592333, 0.041533792, 0.051500875, 0.061543375, 0.071510889, 0.081583556, 0.091584653, 0.101529417, 0.111496667, 0.121539111, 0.131506389, 0.141579333, 0.151580306, 0.161525097, 0.171492222, 0.181534722, 0.191502083, 0.201574875, 0.211575917, 0.221520819, 0.231487917, 0.241530361, 0.251497722, 0.2615705, 0.271571597, 0.281516361, 0.2914835, 0.301556431, 0.311493417, 0.321566194, 0.331597694, 0.341512042, 0.351479167, 0.361552181, 0.371489097, 0.381561833, 0.391593319, 0.401507694, 0.411474833, 0.421547694, 0.431484694, 0.441557417, 0.451588958, 0.461503389, 0.471470458, 0.481543431, 0.491480361, 0.501553111, 0.511584806, 0.521499014, 0.531466208, 0.541539139, 0.551506458, 0.561548722, 0.571580333, 0.581525167, 0.591461833, 0.60153475, 0.611502194, 0.621544514, 0.631576028, 0.64152075, 0.651457403, 0.661530444, 0.671497792, 0.681539986, 0.691571639, 0.701516486, 0.711452972, 0.721525931, 0.731493389, 0.74153575, 0.751567292, 0.761512111, 0.771448792, 0.781521792, 0.791489069, 0.801561875, 0.811563056, 0.821507722, 0.831474806, 0.841517347, 0.851484819, 0.861557486, 0.871558472, 0.881503361, 0.891470417, 0.901512847, 0.911480333, 0.921553042, 0.931554083, 0.941498972, 0.951466194, 0.961508625, 0.971476, 0.981548764, 0.991549736, 1.001494653, 1.011461764, 1.021504139] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:55.994" endtime="20201110 08:35:55.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.988" endtime="20201110 08:35:55.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.998" endtime="20201110 08:35:55.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:56.001" endtime="20201110 08:35:56.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.000" endtime="20201110 08:35:56.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.996" endtime="20201110 08:35:56.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.447" endtime="20201110 08:35:56.022"></status>
</kw>
<msg timestamp="20201110 08:35:56.022" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.030" endtime="20201110 08:35:58.146"></status>
</kw>
<msg timestamp="20201110 08:35:58.147" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75221405, 'start-iter': 1, 'wakeups': [75231628, 75241546, 75251495,...</msg>
<status status="PASS" starttime="20201110 08:35:56.029" endtime="20201110 08:35:58.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.154" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75221405, 'start-iter': 1, 'wakeups': [75231628, 75241546, 75251495,...</msg>
<status status="PASS" starttime="20201110 08:35:58.150" endtime="20201110 08:35:58.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.156" endtime="20201110 08:35:58.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.026" endtime="20201110 08:35:58.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.024" endtime="20201110 08:35:58.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:58.167" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'start-time': 75221405, 'start-iter': 1, 'wakeups': [75231628, 75241546, 75251495, 75261566, 75271514, 75281585, 75291595, 75301544, 75311492, 75321563, 75...</msg>
<status status="PASS" starttime="20201110 08:35:58.163" endtime="20201110 08:35:58.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.176" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:58.174" endtime="20201110 08:35:58.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.180" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:58.178" endtime="20201110 08:35:58.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.169" endtime="20201110 08:35:58.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.190" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:58.188" endtime="20201110 08:35:58.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.194" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:58.192" endtime="20201110 08:35:58.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.183" endtime="20201110 08:35:58.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.205" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:35:58.203" endtime="20201110 08:35:58.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.209" level="INFO">VALUE: 75221405</msg>
<status status="PASS" starttime="20201110 08:35:58.207" endtime="20201110 08:35:58.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.197" endtime="20201110 08:35:58.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.219" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:58.217" endtime="20201110 08:35:58.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.224" level="INFO">VALUE: [75231628, 75241546, 75251495, 75261566, 75271514, 75281585, 75291595, 75301544, 75311492, 75321563, 75331512, 75341583, 75351593, 75361541, 75371490, 75381561, 75391510, 75401580, 75411590, 75421539, 75431488, 75441558, 75451507, 75461578, 75471618, 75481536, 75491485, 75501586, 75511505, 75521575, 75531616, 75541534, 75551483, 75561584, 75571502, 75581573, 75591613, 75601531, 75611480, 75621582, 75631500, 75641571, 75651611, 75661529, 75671478, 75681579, 75691497, 75701568, 75711608, 75721557, 75731475, 75741577, 75751525, 75761566, 75771606, 75781555, 75791473, 75801574, 75811523, 75821563, 75831604, 75841552, 75851470, 75861572, 75871520, 75881561, 75891601, 75901550, 75911468, 75921569, 75931518, 75941558, 75951599, 75961547, 75971496, 75981567, 75991516, 76001586, 76011596, 76021545, 76031494, 76041564, 76051513, 76061584, 76071594, 76081542, 76091491, 76101562, 76111511, 76121582, 76131591, 76141540, 76151489, 76161560, 76171508, 76181579, 76191589, 76201538, 76211486, 76221588]</msg>
<status status="PASS" starttime="20201110 08:35:58.221" endtime="20201110 08:35:58.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.212" endtime="20201110 08:35:58.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.235" endtime="20201110 08:35:58.527"></status>
</kw>
<msg timestamp="20201110 08:35:58.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022814972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033033153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:58.234" endtime="20201110 08:35:58.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022814972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033033153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:58.531" endtime="20201110 08:35:58.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.539" endtime="20201110 08:35:58.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.230" endtime="20201110 08:35:58.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.227" endtime="20201110 08:35:58.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:58.565" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:58.542" endtime="20201110 08:35:58.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.569" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:35:58.568" endtime="20201110 08:35:58.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.571" level="INFO">VALUE: 0.022814972</msg>
<status status="PASS" starttime="20201110 08:35:58.570" endtime="20201110 08:35:58.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.566" endtime="20201110 08:35:58.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.576" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:58.575" endtime="20201110 08:35:58.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.579" level="INFO">VALUE: [0.033033153, 0.042943444, 0.052910611, 0.062953111, 0.072920514, 0.082993278, 0.092994292, 0.102939042, 0.112906181, 0.122948583, 0.132916083, 0.142988861, 0.152989931, 0.162934764, 0.172901944, 0.182944319, 0.192911736, 0.202984472, 0.212985625, 0.222930417, 0.232897472, 0.242940056, 0.252907417, 0.262980167, 0.273011778, 0.282925958, 0.292893111, 0.302966181, 0.312903042, 0.322975833, 0.333007306, 0.342921611, 0.352888806, 0.362961736, 0.372898708, 0.3829715, 0.393002986, 0.402917278, 0.412884444, 0.422957472, 0.432894333, 0.442967153, 0.452998556, 0.462912986, 0.472880097, 0.482953125, 0.49289, 0.502962736, 0.512994278, 0.522939111, 0.53287575, 0.542948847, 0.552916097, 0.562958389, 0.572989944, 0.58293475, 0.5928715, 0.602944431, 0.612911792, 0.622954069, 0.632985639, 0.642930444, 0.652867042, 0.662940083, 0.672907569, 0.682949667, 0.692981319, 0.702926125, 0.712862792, 0.722935694, 0.732902972, 0.742945361, 0.752976944, 0.762921764, 0.772888847, 0.782931389, 0.792898861, 0.802971472, 0.812972681, 0.822917389, 0.832884556, 0.842927028, 0.852894444, 0.862967139, 0.872968347, 0.882913083, 0.892880167, 0.90292275, 0.912890042, 0.922962819, 0.932963875, 0.942908708, 0.952875792, 0.962918333, 0.972885722, 0.982958458, 0.992959639, 1.002904264, 1.012871458, 1.022944486] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:58.577" endtime="20201110 08:35:58.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.572" endtime="20201110 08:35:58.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.582" endtime="20201110 08:35:58.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:58.585" endtime="20201110 08:35:58.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.584" endtime="20201110 08:35:58.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.580" endtime="20201110 08:35:58.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.023" endtime="20201110 08:35:58.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.859" endtime="20201110 08:35:58.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.858" endtime="20201110 08:35:58.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.190" endtime="20201110 08:35:58.606"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:41.115" endtime="20201110 08:35:58.607" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:34:39.721" endtime="20201110 08:35:58.610"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:32:53.175" endtime="20201110 08:35:58.626"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
